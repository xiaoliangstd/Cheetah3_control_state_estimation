/*
 * Automatically Generated from Mathematica.
 * Fri 10 May 2019 20:22:35 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t361;
  double t253;
  double t310;
  double t286;
  double t377;
  double t452;
  double t464;
  double t472;
  double t327;
  double t432;
  double t437;
  double t497;
  double t481;
  double t500;
  double t557;
  double t558;
  double t560;
  double t498;
  double t503;
  double t519;
  double t588;
  double t612;
  double t629;
  double t473;
  double t704;
  double t705;
  double t712;
  double t725;
  double t726;
  double t730;
  double t737;
  double t743;
  double t747;
  double t760;
  double t772;
  double t774;
  double t638;
  double t642;
  double t679;
  double t857;
  double t873;
  double t874;
  double t908;
  double t925;
  double t935;
  double t939;
  double t1085;
  double t1094;
  double t1095;
  double t1096;
  double t1073;
  double t1076;
  double t999;
  double t1033;
  double t1035;
  double t1079;
  double t1098;
  double t1112;
  double t1119;
  double t1125;
  double t1129;
  double t1133;
  double t1140;
  double t1144;
  double t947;
  double t960;
  double t969;
  double t1158;
  double t1160;
  double t1163;
  double t1178;
  double t1180;
  double t1183;
  double t1184;
  double t1218;
  double t1265;
  double t1275;
  double t1290;
  double t1291;
  double t1292;
  double t1294;
  double t1365;
  double t1373;
  double t1379;
  double t1380;
  double t1399;
  double t1402;
  double t1412;
  double t1414;
  double t1419;
  double t1403;
  double t1405;
  double t1424;
  double t1428;
  double t1430;
  double t1432;
  double t1444;
  double t1502;
  double t1492;
  double t1479;
  double t1482;
  double t1513;
  double t1514;
  double t1540;
  double t1543;
  double t1544;
  double t1581;
  double t1591;
  double t1550;
  double t1477;
  double t1635;
  double t1676;
  double t1680;
  double t1689;
  double t1692;
  double t1699;
  double t1715;
  double t1559;
  double t1568;
  double t1760;
  double t1761;
  double t1776;
  double t1781;
  double t1782;
  double t1783;
  double t1804;
  double t1815;
  double t1817;
  double t1846;
  double t1855;
  double t1857;
  double t1858;
  double t1869;
  double t1844;
  double t1871;
  double t1872;
  double t1874;
  double t1880;
  double t1881;
  double t1884;
  double t1887;
  double t1888;
  double t1834;
  double t1837;
  double t1838;
  double t1890;
  double t1898;
  double t1900;
  double t1901;
  double t1906;
  double t1907;
  double t1915;
  double t1957;
  double t1970;
  double t1973;
  double t1975;
  double t1977;
  double t1979;
  double t1980;
  double t1987;
  double t1989;
  double t2001;
  double t2003;
  double t2007;
  double t2009;
  double t2018;
  double t2024;
  double t2025;
  double t2029;
  double t2082;
  double t2083;
  double t2085;
  double t2100;
  double t2101;
  double t2102;
  double t2086;
  double t2091;
  double t2093;
  double t2157;
  double t2158;
  double t2160;
  double t2176;
  double t2182;
  double t2184;
  double t2162;
  double t2163;
  double t2172;
  double t2232;
  double t2241;
  double t2243;
  double t2267;
  double t2268;
  double t2269;
  double t2245;
  double t2246;
  double t2249;
  double t2290;
  double t2294;
  double t2301;
  double t2279;
  double t2282;
  double t2283;
  double t1202;
  double t1203;
  double t1204;
  double t1226;
  double t1233;
  double t1237;
  double t1260;
  double t1323;
  double t2152;
  double t2154;
  double t2155;
  double t2074;
  double t2077;
  double t2080;
  double t1451;
  double t1455;
  double t1459;
  double t2368;
  double t2375;
  double t2378;
  double t2367;
  double t2379;
  double t2383;
  double t2399;
  double t2403;
  double t2405;
  double t2454;
  double t2460;
  double t2463;
  double t2448;
  double t2465;
  double t2468;
  double t2479;
  double t2480;
  double t2482;
  double t2534;
  double t2536;
  double t2537;
  double t2533;
  double t2540;
  double t2547;
  double t2572;
  double t2573;
  double t2574;
  double t1926;
  double t1927;
  double t1928;
  double t2578;
  double t2582;
  double t2584;
  double t2586;
  double t2589;
  double t2591;
  double t1982;
  double t1951;
  double t1960;
  double t1961;
  double t1969;
  double t2439;
  double t2441;
  double t2442;
  double t2360;
  double t2361;
  double t2364;
  double t2045;
  double t2046;
  double t2053;
  double t2647;
  double t2663;
  double t2664;
  double t2681;
  double t2689;
  double t2692;
  double t2704;
  double t2707;
  double t2712;
  double t2694;
  double t2697;
  double t2700;
  double t2759;
  double t2760;
  double t2762;
  double t2778;
  double t2781;
  double t2783;
  double t2763;
  double t2764;
  double t2768;
  double t2752;
  double t2672;
  double t2674;
  double t2847;
  double t2848;
  double t2853;
  double t2843;
  double t2855;
  double t2864;
  double t2869;
  double t2873;
  double t2879;
  double t2946;
  double t2948;
  double t2949;
  double t2938;
  double t2957;
  double t2959;
  double t2961;
  double t2963;
  double t2964;
  double t2933;
  double t2839;
  double t2840;
  double t3045;
  double t3046;
  double t3102;
  double t3107;
  double t3176;
  double t3179;
  double t3229;
  double t3230;
  double t3232;
  double t3201;
  double t3215;
  double t3216;
  double t3093;
  double t3094;
  double t3095;
  double t3031;
  double t3032;
  double t3038;
  double t3318;
  double t3309;
  double t3311;
  double t3319;
  double t3320;
  double t3333;
  double t3334;
  double t3336;
  double t3396;
  double t3382;
  double t3383;
  double t3393;
  double t3394;
  double t3399;
  double t3404;
  double t3409;
  double t3414;
  double t3416;
  double t3446;
  double t3447;
  double t3448;
  double t3455;
  double t3489;
  double t3491;
  double t3502;
  double t3466;
  double t3467;
  double t3474;
  double t3538;
  double t3545;
  double t3547;
  double t3527;
  double t3582;
  double t3583;
  double t3584;
  double t3575;
  double t3608;
  double t3609;
  double t3611;
  double t3616;
  double t3624;
  double t3625;
  double t3662;
  double t3663;
  double t3664;
  double t3728;
  double t3730;
  double t3794;
  double t3795;
  double t3850;
  double t3852;
  double t3853;
  double t3840;
  double t3843;
  double t3844;
  double t3719;
  double t3720;
  double t3725;
  double t3653;
  double t3655;
  double t3908;
  double t3907;
  double t3910;
  double t3912;
  double t3921;
  double t3931;
  double t3932;
  double t3983;
  double t3984;
  double t3982;
  double t3986;
  double t3987;
  double t3994;
  double t3996;
  double t3997;
  double t4016;
  double t4017;
  double t4018;
  double t4024;
  double t4032;
  double t4033;
  double t4034;
  double t4041;
  double t4042;
  double t4044;
  double t4060;
  double t4061;
  double t4064;
  double t4068;
  double t4094;
  double t4096;
  double t4098;
  double t4111;
  double t4135;
  double t4140;
  double t4143;
  double t4150;
  double t4154;
  double t4156;
  t361 = Cos(var1[3]);
  t253 = Cos(var1[5]);
  t310 = Sin(var1[4]);
  t286 = Sin(var1[3]);
  t377 = Sin(var1[5]);
  t452 = t361*t253*t310;
  t464 = t286*t377;
  t472 = t452 + t464;
  t327 = -1.*t253*t286*t310;
  t432 = t361*t377;
  t437 = t327 + t432;
  t497 = Cos(var1[7]);
  t481 = Cos(var1[6]);
  t500 = Sin(var1[7]);
  t557 = t497*t437;
  t558 = -1.*t481*t472*t500;
  t560 = t557 + t558;
  t498 = t481*t497*t472;
  t503 = t437*t500;
  t519 = t498 + t503;
  t588 = Cos(var1[8]);
  t612 = 0. + t588;
  t629 = Sin(var1[8]);
  t473 = Sin(var1[6]);
  t704 = -1.*t361*t253;
  t705 = -1.*t286*t310*t377;
  t712 = t704 + t705;
  t725 = -1.*t253*t286;
  t726 = t361*t310*t377;
  t730 = t725 + t726;
  t737 = t497*t712;
  t743 = -1.*t481*t730*t500;
  t747 = t737 + t743;
  t760 = t481*t497*t730;
  t772 = t712*t500;
  t774 = t760 + t772;
  t638 = -1.*t629;
  t642 = 0. + t638;
  t679 = 0. + t629;
  t857 = Cos(var1[4]);
  t873 = -1.*t857*t497*t286;
  t874 = -1.*t361*t857*t481*t500;
  t908 = t873 + t874;
  t925 = t361*t857*t481*t497;
  t935 = -1.*t857*t286*t500;
  t939 = t925 + t935;
  t1085 = t857*t481*t286;
  t1094 = 0. + t473;
  t1095 = -1.*t310*t1094;
  t1096 = 0. + t1085 + t1095;
  t1073 = t361*t857;
  t1076 = 0. + t1073;
  t999 = t612*t939;
  t1033 = t908*t679;
  t1035 = t999 + t1033;
  t1079 = t1076*t497;
  t1098 = -1.*t1096*t500;
  t1112 = 0. + t1079 + t1098;
  t1119 = t612*t1112;
  t1125 = t497*t1096;
  t1129 = t1076*t500;
  t1133 = 0. + t1125 + t1129;
  t1140 = t1133*t642;
  t1144 = 0. + t1119 + t1140;
  t947 = t612*t908;
  t960 = t939*t642;
  t969 = t947 + t960;
  t1158 = Power(t1144,2);
  t1160 = t612*t1133;
  t1163 = t1112*t679;
  t1178 = 0. + t1160 + t1163;
  t1180 = Power(t1178,2);
  t1183 = t1158 + t1180;
  t1184 = 1/t1183;
  t1218 = 0. + t481;
  t1265 = t1218*t310;
  t1275 = t857*t286*t473;
  t1290 = 0. + t1265 + t1275;
  t1291 = Power(t1290,2);
  t1292 = t1291 + t1158 + t1180;
  t1294 = 1/t1292;
  t1365 = t857*t253*t1218;
  t1373 = t253*t286*t310;
  t1379 = -1.*t361*t377;
  t1380 = t1373 + t1379;
  t1399 = -1.*t1380*t473;
  t1402 = 0. + t1365 + t1399;
  t1412 = t361*t253;
  t1414 = t286*t310*t377;
  t1419 = t1412 + t1414;
  t1403 = Power(t1402,2);
  t1405 = t857*t1218*t377;
  t1424 = -1.*t1419*t473;
  t1428 = 0. + t1405 + t1424;
  t1430 = Power(t1428,2);
  t1432 = t1403 + t1430;
  t1444 = 1/t1432;
  t1502 = Cos(var1[16]);
  t1492 = Cos(var1[15]);
  t1479 = Sin(var1[16]);
  t1482 = t1479*t437;
  t1513 = t1492*t1502*t472;
  t1514 = t1482 + t1513;
  t1540 = t1502*t437;
  t1543 = -1.*t1492*t1479*t472;
  t1544 = t1540 + t1543;
  t1581 = Cos(var1[17]);
  t1591 = 0. + t1581;
  t1550 = Sin(var1[17]);
  t1477 = Sin(var1[15]);
  t1635 = 0. + t1550;
  t1676 = -1.*t1492*t1479*t730;
  t1680 = t1502*t712;
  t1689 = t1676 + t1680;
  t1692 = t1492*t1502*t730;
  t1699 = t1479*t712;
  t1715 = t1692 + t1699;
  t1559 = -1.*t1550;
  t1568 = 0. + t1559;
  t1760 = -1.*t1492*t361*t857*t1479;
  t1761 = -1.*t1502*t857*t286;
  t1776 = t1760 + t1761;
  t1781 = t1492*t1502*t361*t857;
  t1782 = -1.*t857*t1479*t286;
  t1783 = t1781 + t1782;
  t1804 = t1635*t1776;
  t1815 = t1591*t1783;
  t1817 = t1804 + t1815;
  t1846 = t1492*t857*t286;
  t1855 = -1.*t1477;
  t1857 = 0. + t1855;
  t1858 = -1.*t1857*t310;
  t1869 = 0. + t1846 + t1858;
  t1844 = t1076*t1479;
  t1871 = t1502*t1869;
  t1872 = 0. + t1844 + t1871;
  t1874 = t1568*t1872;
  t1880 = t1502*t1076;
  t1881 = -1.*t1479*t1869;
  t1884 = 0. + t1880 + t1881;
  t1887 = t1591*t1884;
  t1888 = 0. + t1874 + t1887;
  t1834 = t1591*t1776;
  t1837 = t1568*t1783;
  t1838 = t1834 + t1837;
  t1890 = Power(t1888,2);
  t1898 = t1591*t1872;
  t1900 = t1635*t1884;
  t1901 = 0. + t1898 + t1900;
  t1906 = Power(t1901,2);
  t1907 = t1890 + t1906;
  t1915 = 1/t1907;
  t1957 = 0. + t1492;
  t1970 = -1.*t857*t1477*t286;
  t1973 = t1957*t310;
  t1975 = 0. + t1970 + t1973;
  t1977 = Power(t1975,2);
  t1979 = t1977 + t1890 + t1906;
  t1980 = 1/t1979;
  t1987 = t1957*t857*t253;
  t1989 = t1477*t1380;
  t2001 = 0. + t1987 + t1989;
  t2003 = Power(t2001,2);
  t2007 = t1957*t857*t377;
  t2009 = t1477*t1419;
  t2018 = 0. + t2007 + t2009;
  t2024 = Power(t2018,2);
  t2025 = t2003 + t2024;
  t2029 = 1/t2025;
  t2082 = t857*t253*t481*t286;
  t2083 = -1.*t253*t310*t1094;
  t2085 = t2082 + t2083;
  t2100 = t361*t857*t253*t497;
  t2101 = -1.*t2085*t500;
  t2102 = t2100 + t2101;
  t2086 = t497*t2085;
  t2091 = t361*t857*t253*t500;
  t2093 = t2086 + t2091;
  t2157 = t857*t481*t286*t377;
  t2158 = -1.*t310*t377*t1094;
  t2160 = t2157 + t2158;
  t2176 = t361*t857*t497*t377;
  t2182 = -1.*t2160*t500;
  t2184 = t2176 + t2182;
  t2162 = t497*t2160;
  t2163 = t361*t857*t377*t500;
  t2172 = t2162 + t2163;
  t2232 = -1.*t481*t286*t310;
  t2241 = -1.*t857*t1094;
  t2243 = t2232 + t2241;
  t2267 = -1.*t361*t497*t310;
  t2268 = -1.*t2243*t500;
  t2269 = t2267 + t2268;
  t2245 = t497*t2243;
  t2246 = -1.*t361*t310*t500;
  t2249 = t2245 + t2246;
  t2290 = t612*t2249;
  t2294 = t2269*t679;
  t2301 = t2290 + t2294;
  t2279 = t612*t2269;
  t2282 = t2249*t642;
  t2283 = t2279 + t2282;
  t1202 = -1.*t612*t1133;
  t1203 = -1.*t1112*t679;
  t1204 = 0. + t1202 + t1203;
  t1226 = -1.*t1218*t310;
  t1233 = -1.*t857*t286*t473;
  t1237 = 0. + t1226 + t1233;
  t1260 = 1/Sqrt(t1183);
  t1323 = Sqrt(t1183);
  t2152 = -1.*t1218*t310*t377;
  t2154 = -1.*t857*t286*t377*t473;
  t2155 = t2152 + t2154;
  t2074 = -1.*t253*t1218*t310;
  t2077 = -1.*t857*t253*t286*t473;
  t2080 = t2074 + t2077;
  t1451 = -1.*t857*t1218*t377;
  t1455 = t1419*t473;
  t1459 = 0. + t1451 + t1455;
  t2368 = t1492*t857*t253*t286;
  t2375 = -1.*t253*t1857*t310;
  t2378 = t2368 + t2375;
  t2367 = t361*t857*t253*t1479;
  t2379 = t1502*t2378;
  t2383 = t2367 + t2379;
  t2399 = t1502*t361*t857*t253;
  t2403 = -1.*t1479*t2378;
  t2405 = t2399 + t2403;
  t2454 = t1492*t857*t286*t377;
  t2460 = -1.*t1857*t310*t377;
  t2463 = t2454 + t2460;
  t2448 = t361*t857*t1479*t377;
  t2465 = t1502*t2463;
  t2468 = t2448 + t2465;
  t2479 = t1502*t361*t857*t377;
  t2480 = -1.*t1479*t2463;
  t2482 = t2479 + t2480;
  t2534 = -1.*t857*t1857;
  t2536 = -1.*t1492*t286*t310;
  t2537 = t2534 + t2536;
  t2533 = -1.*t361*t1479*t310;
  t2540 = t1502*t2537;
  t2547 = t2533 + t2540;
  t2572 = -1.*t1502*t361*t310;
  t2573 = -1.*t1479*t2537;
  t2574 = t2572 + t2573;
  t1926 = -1.*t1591*t1872;
  t1927 = -1.*t1635*t1884;
  t1928 = 0. + t1926 + t1927;
  t2578 = t1568*t2547;
  t2582 = t1591*t2574;
  t2584 = t2578 + t2582;
  t2586 = t1591*t2547;
  t2589 = t1635*t2574;
  t2591 = t2586 + t2589;
  t1982 = Sqrt(t1907);
  t1951 = t857*t1477*t286;
  t1960 = -1.*t1957*t310;
  t1961 = 0. + t1951 + t1960;
  t1969 = 1/Sqrt(t1907);
  t2439 = t857*t1477*t286*t377;
  t2441 = -1.*t1957*t310*t377;
  t2442 = t2439 + t2441;
  t2360 = t857*t253*t1477*t286;
  t2361 = -1.*t1957*t253*t310;
  t2364 = t2360 + t2361;
  t2045 = -1.*t1957*t857*t377;
  t2046 = -1.*t1477*t1419;
  t2053 = 0. + t2045 + t2046;
  t2647 = t253*t286;
  t2663 = -1.*t361*t310*t377;
  t2664 = t2647 + t2663;
  t2681 = t481*t712;
  t2689 = -1.*t857*t377*t1094;
  t2692 = t2681 + t2689;
  t2704 = t497*t2664;
  t2707 = -1.*t2692*t500;
  t2712 = t2704 + t2707;
  t2694 = t497*t2692;
  t2697 = t2664*t500;
  t2700 = t2694 + t2697;
  t2759 = t481*t1380;
  t2760 = t857*t253*t1094;
  t2762 = t2759 + t2760;
  t2778 = t497*t472;
  t2781 = -1.*t2762*t500;
  t2783 = t2778 + t2781;
  t2763 = t497*t2762;
  t2764 = t472*t500;
  t2768 = t2763 + t2764;
  t2752 = t1365 + t1399;
  t2672 = -1.*t712*t473;
  t2674 = t1451 + t2672;
  t2847 = -1.*t857*t1857*t377;
  t2848 = t1492*t712;
  t2853 = t2847 + t2848;
  t2843 = t1479*t2664;
  t2855 = t1502*t2853;
  t2864 = t2843 + t2855;
  t2869 = t1502*t2664;
  t2873 = -1.*t1479*t2853;
  t2879 = t2869 + t2873;
  t2946 = t857*t253*t1857;
  t2948 = t1492*t1380;
  t2949 = t2946 + t2948;
  t2938 = t1479*t472;
  t2957 = t1502*t2949;
  t2959 = t2938 + t2957;
  t2961 = t1502*t472;
  t2963 = -1.*t1479*t2949;
  t2964 = t2961 + t2963;
  t2933 = t1987 + t1989;
  t2839 = t1477*t712;
  t2840 = t2045 + t2839;
  t3045 = t857*t253*t481;
  t3046 = t3045 + t1399;
  t3102 = t857*t481*t377;
  t3107 = t3102 + t1424;
  t3176 = -1.*t481*t310;
  t3179 = t3176 + t1233;
  t3229 = t497*t612*t3179;
  t3230 = -1.*t3179*t500*t679;
  t3232 = t3229 + t3230;
  t3201 = -1.*t612*t3179*t500;
  t3215 = t497*t3179*t642;
  t3216 = t3201 + t3215;
  t3093 = -1.*t481*t1419;
  t3094 = -1.*t857*t377*t473;
  t3095 = t3093 + t3094;
  t3031 = -1.*t481*t1380;
  t3032 = -1.*t857*t253*t473;
  t3038 = t3031 + t3032;
  t3318 = 0. + t452 + t464;
  t3309 = 0. + t2759 + t2760;
  t3311 = -1.*t497*t3309;
  t3319 = -1.*t3318*t500;
  t3320 = t3311 + t3319;
  t3333 = t497*t3318;
  t3334 = -1.*t3309*t500;
  t3336 = t3333 + t3334;
  t3396 = 0. + t725 + t726;
  t3382 = t481*t1419;
  t3383 = t857*t377*t1094;
  t3393 = 0. + t3382 + t3383;
  t3394 = -1.*t497*t3393;
  t3399 = -1.*t3396*t500;
  t3404 = t3394 + t3399;
  t3409 = t497*t3396;
  t3414 = -1.*t3393*t500;
  t3416 = t3409 + t3414;
  t3446 = -1.*t497*t1096;
  t3447 = -1.*t1076*t500;
  t3448 = t3446 + t3447;
  t3455 = t1079 + t1098;
  t3489 = t612*t3455;
  t3491 = t3448*t679;
  t3502 = t3489 + t3491;
  t3466 = t612*t3448;
  t3467 = t3455*t642;
  t3474 = t3466 + t3467;
  t3538 = t497*t3309;
  t3545 = t3318*t500;
  t3547 = 0. + t3538 + t3545;
  t3527 = 0. + t3333 + t3334;
  t3582 = t497*t3393;
  t3583 = t3396*t500;
  t3584 = 0. + t3582 + t3583;
  t3575 = 0. + t3409 + t3414;
  t3608 = t588*t1112;
  t3609 = -1.*t1133*t629;
  t3611 = t3608 + t3609;
  t3616 = -1.*t588*t1133;
  t3624 = -1.*t1112*t629;
  t3625 = t3616 + t3624;
  t3662 = -1.*t1492*t857*t253;
  t3663 = -1.*t1477*t1380;
  t3664 = t3662 + t3663;
  t3728 = -1.*t1492*t857*t377;
  t3730 = t3728 + t2046;
  t3794 = t1492*t310;
  t3795 = t1970 + t3794;
  t3850 = t1502*t1591*t3795;
  t3852 = -1.*t1479*t1635*t3795;
  t3853 = t3850 + t3852;
  t3840 = -1.*t1591*t1479*t3795;
  t3843 = t1502*t1568*t3795;
  t3844 = t3840 + t3843;
  t3719 = -1.*t857*t1477*t377;
  t3720 = t1492*t1419;
  t3725 = t3719 + t3720;
  t3653 = -1.*t857*t253*t1477;
  t3655 = t3653 + t2948;
  t3908 = 0. + t2946 + t2948;
  t3907 = -1.*t1479*t3318;
  t3910 = -1.*t1502*t3908;
  t3912 = t3907 + t3910;
  t3921 = t1502*t3318;
  t3931 = -1.*t1479*t3908;
  t3932 = t3921 + t3931;
  t3983 = t857*t1857*t377;
  t3984 = 0. + t3983 + t3720;
  t3982 = -1.*t1479*t3396;
  t3986 = -1.*t1502*t3984;
  t3987 = t3982 + t3986;
  t3994 = t1502*t3396;
  t3996 = -1.*t1479*t3984;
  t3997 = t3994 + t3996;
  t4016 = -1.*t1076*t1479;
  t4017 = -1.*t1502*t1869;
  t4018 = t4016 + t4017;
  t4024 = t1880 + t1881;
  t4032 = t1635*t4018;
  t4033 = t1591*t4024;
  t4034 = t4032 + t4033;
  t4041 = t1591*t4018;
  t4042 = t1568*t4024;
  t4044 = t4041 + t4042;
  t4060 = t1479*t3318;
  t4061 = t1502*t3908;
  t4064 = 0. + t4060 + t4061;
  t4068 = 0. + t3921 + t3931;
  t4094 = t1479*t3396;
  t4096 = t1502*t3984;
  t4098 = 0. + t4094 + t4096;
  t4111 = 0. + t3994 + t3996;
  t4135 = -1.*t1550*t1872;
  t4140 = t1581*t1884;
  t4143 = t4135 + t4140;
  t4150 = -1.*t1581*t1872;
  t4154 = -1.*t1550*t1884;
  t4156 = t4150 + t4154;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=1.;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=1.;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=1.;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=1.;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0.2429*t437 + 0.0329*t472*t473 - 0.2083*t519 - 0.1422*t560 - 0.02*(t560*t612 + t519*t642) - 0.16*(t519*t612 + t560*t679);
  p_output1[37]=0.2429*t712 + 0.0329*t473*t730 - 0.1422*t747 - 0.2083*t774 - 0.16*(t679*t747 + t612*t774) - 0.02*(t612*t747 + t642*t774);
  p_output1[38]=-0.16*t1035 - 0.2429*t286*t857 + 0.0329*t361*t473*t857 - 0.1422*t908 - 0.2083*t939 - 0.02*t969;
  p_output1[39]=t1035*t1144*t1184 + t1184*t1204*t969;
  p_output1[40]=t1294*t1323*t361*t473*t857 + 0.5*t1237*t1260*t1294*(2.*t1035*t1178 + 2.*t1144*t969);
  p_output1[41]=-1.*t1444*t1459*t472*t473 - 1.*t1402*t1444*t473*t730;
  p_output1[42]=-0.2083*t1514 - 0.1422*t1544 - 0.02*(t1514*t1568 + t1544*t1591) - 0.16*(t1514*t1591 + t1544*t1635) - 0.1944*t437 + 0.0329*t1477*t472;
  p_output1[43]=-0.1422*t1689 - 0.2083*t1715 - 0.02*(t1591*t1689 + t1568*t1715) - 0.16*(t1635*t1689 + t1591*t1715) - 0.1944*t712 + 0.0329*t1477*t730;
  p_output1[44]=-0.1422*t1776 - 0.2083*t1783 - 0.16*t1817 - 0.02*t1838 + 0.1944*t286*t857 + 0.0329*t1477*t361*t857;
  p_output1[45]=t1817*t1888*t1915 + t1838*t1915*t1928;
  p_output1[46]=0.5*(2.*t1838*t1888 + 2.*t1817*t1901)*t1961*t1969*t1980 - 1.*t1477*t1980*t1982*t361*t857;
  p_output1[47]=t1477*t2029*t2053*t472 + t1477*t2001*t2029*t730;
  p_output1[48]=-0.0329*t2080 - 0.2083*t2093 - 0.1422*t2102 + 0.0817*t253*t310 - 0.02*(t2102*t612 + t2093*t642) - 0.16*(t2093*t612 + t2102*t679) + 0.2429*t253*t361*t857;
  p_output1[49]=-0.0329*t2155 - 0.2083*t2172 - 0.1422*t2184 + 0.0817*t310*t377 - 0.02*(t2184*t612 + t2172*t642) - 0.16*(t2172*t612 + t2184*t679) + 0.2429*t361*t377*t857;
  p_output1[50]=-0.2083*t2249 - 0.1422*t2269 - 0.02*t2283 - 0.16*t2301 - 0.2429*t310*t361 + 0.0817*t857 - 0.0329*(t286*t310*t473 - 1.*t1218*t857);
  p_output1[51]=t1184*t1204*t2283 + t1144*t1184*t2301;
  p_output1[52]=0.5*t1237*t1260*t1294*(2.*t1144*t2283 + 2.*t1178*t2301) + t1294*t1323*(-1.*t286*t310*t473 + t1218*t857);
  p_output1[53]=t1444*t1459*t2080 + t1402*t1444*t2155;
  p_output1[54]=0.0329*t2364 - 0.2083*t2383 - 0.1422*t2405 - 0.02*(t1568*t2383 + t1591*t2405) - 0.16*(t1591*t2383 + t1635*t2405) - 0.0817*t253*t310 - 0.1944*t253*t361*t857;
  p_output1[55]=0.0329*t2442 - 0.2083*t2468 - 0.1422*t2482 - 0.02*(t1568*t2468 + t1591*t2482) - 0.16*(t1591*t2468 + t1635*t2482) - 0.0817*t310*t377 - 0.1944*t361*t377*t857;
  p_output1[56]=-0.2083*t2547 - 0.1422*t2574 - 0.02*t2584 - 0.16*t2591 + 0.1944*t310*t361 - 0.0817*t857 + 0.0329*(-1.*t1477*t286*t310 - 1.*t1957*t857);
  p_output1[57]=t1915*t1928*t2584 + t1888*t1915*t2591;
  p_output1[58]=0.5*t1961*t1969*t1980*(2.*t1888*t2584 + 2.*t1901*t2591) + t1980*t1982*(t1477*t286*t310 + t1957*t857);
  p_output1[59]=t2029*t2053*t2364 + t2001*t2029*t2442;
  p_output1[60]=0.2429*t2664 - 0.0329*t2674 - 0.2083*t2700 - 0.1422*t2712 - 0.02*(t2712*t612 + t2700*t642) - 0.16*(t2700*t612 + t2712*t679) + 0.0817*t377*t857;
  p_output1[61]=-0.0329*t2752 - 0.2083*t2768 - 0.1422*t2783 + 0.2429*t472 - 0.02*(t2783*t612 + t2768*t642) - 0.16*(t2768*t612 + t2783*t679) - 0.0817*t253*t857;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=t1444*t1459*t2674 + t1402*t1444*t2752;
  p_output1[66]=-0.1944*t2664 + 0.0329*t2840 - 0.2083*t2864 - 0.1422*t2879 - 0.02*(t1568*t2864 + t1591*t2879) - 0.16*(t1591*t2864 + t1635*t2879) - 0.0817*t377*t857;
  p_output1[67]=0.0329*t2933 - 0.2083*t2959 - 0.1422*t2964 - 0.02*(t1568*t2959 + t1591*t2964) - 0.16*(t1591*t2959 + t1635*t2964) - 0.1944*t472 + 0.0817*t253*t857;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=t2029*t2053*t2840 + t2001*t2029*t2933;
  p_output1[72]=-0.0329*t3038 - 0.2083*t3046*t497 + 0.1422*t3046*t500 - 0.02*(-1.*t3046*t500*t612 + t3046*t497*t642) - 0.16*(t3046*t497*t612 - 1.*t3046*t500*t679);
  p_output1[73]=-0.0329*t3095 - 0.2083*t3107*t497 + 0.1422*t3107*t500 - 0.02*(-1.*t3107*t500*t612 + t3107*t497*t642) - 0.16*(t3107*t497*t612 - 1.*t3107*t500*t679);
  p_output1[74]=-0.02*t3216 - 0.16*t3232 - 0.2083*t3179*t497 + 0.1422*t3179*t500 - 0.0329*(t310*t473 - 1.*t286*t481*t857);
  p_output1[75]=t1184*t1204*t3216 + t1144*t1184*t3232;
  p_output1[76]=0.5*t1237*t1260*t1294*(2.*t1144*t3216 + 2.*t1178*t3232) + t1294*t1323*(t1085 - 1.*t310*t473);
  p_output1[77]=t1444*t1459*t3038 + t1402*t1444*t3095;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=-0.1422*t3320 - 0.2083*t3336 - 0.02*(t3320*t612 + t3336*t642) - 0.16*(t3336*t612 + t3320*t679);
  p_output1[85]=-0.1422*t3404 - 0.2083*t3416 - 0.02*(t3404*t612 + t3416*t642) - 0.16*(t3416*t612 + t3404*t679);
  p_output1[86]=-0.1422*t3448 - 0.2083*t3455 - 0.02*t3474 - 0.16*t3502;
  p_output1[87]=t1184*t1204*t3474 + t1144*t1184*t3502;
  p_output1[88]=0.5*t1237*t1260*t1294*(2.*t1144*t3474 + 2.*t1178*t3502);
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=-0.02*(-1.*t3547*t588 - 1.*t3527*t629) - 0.16*(t3527*t588 - 1.*t3547*t629);
  p_output1[97]=-0.02*(-1.*t3584*t588 - 1.*t3575*t629) - 0.16*(t3575*t588 - 1.*t3584*t629);
  p_output1[98]=-0.16*t3611 - 0.02*t3625;
  p_output1[99]=t1144*t1184*t3611 + t1184*t1204*t3625;
  p_output1[100]=0.5*t1237*t1260*t1294*(2.*t1178*t3611 + 2.*t1144*t3625);
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0;
  p_output1[172]=0;
  p_output1[173]=0;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=0.0329*t3655 + 0.1422*t1479*t3664 - 0.2083*t1502*t3664 - 0.02*(t1502*t1568*t3664 - 1.*t1479*t1591*t3664) - 0.16*(t1502*t1591*t3664 - 1.*t1479*t1635*t3664);
  p_output1[187]=0.0329*t3725 + 0.1422*t1479*t3730 - 0.2083*t1502*t3730 - 0.02*(t1502*t1568*t3730 - 1.*t1479*t1591*t3730) - 0.16*(t1502*t1591*t3730 - 1.*t1479*t1635*t3730);
  p_output1[188]=0.0329*(t1846 + t1477*t310) + 0.1422*t1479*t3795 - 0.2083*t1502*t3795 - 0.02*t3844 - 0.16*t3853;
  p_output1[189]=t1915*t1928*t3844 + t1888*t1915*t3853;
  p_output1[190]=0.5*t1961*t1969*t1980*(2.*t1888*t3844 + 2.*t1901*t3853) + t1980*t1982*(-1.*t1477*t310 - 1.*t1492*t286*t857);
  p_output1[191]=t2029*t2053*t3655 + t2001*t2029*t3725;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=-0.1422*t3912 - 0.2083*t3932 - 0.02*(t1591*t3912 + t1568*t3932) - 0.16*(t1635*t3912 + t1591*t3932);
  p_output1[199]=-0.1422*t3987 - 0.2083*t3997 - 0.02*(t1591*t3987 + t1568*t3997) - 0.16*(t1635*t3987 + t1591*t3997);
  p_output1[200]=-0.1422*t4018 - 0.2083*t4024 - 0.16*t4034 - 0.02*t4044;
  p_output1[201]=t1888*t1915*t4034 + t1915*t1928*t4044;
  p_output1[202]=0.5*t1961*t1969*t1980*(2.*t1901*t4034 + 2.*t1888*t4044);
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=-0.02*(-1.*t1581*t4064 - 1.*t1550*t4068) - 0.16*(-1.*t1550*t4064 + t1581*t4068);
  p_output1[211]=-0.02*(-1.*t1581*t4098 - 1.*t1550*t4111) - 0.16*(-1.*t1550*t4098 + t1581*t4111);
  p_output1[212]=-0.16*t4143 - 0.02*t4156;
  p_output1[213]=t1888*t1915*t4143 + t1915*t1928*t4156;
  p_output1[214]=0.5*t1961*t1969*t1980*(2.*t1901*t4143 + 2.*t1888*t4156);
  p_output1[215]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 12, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_2_func_fully.hh"

namespace SymFunction
{

void j_2_func_fully_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
