/*
 * Automatically Generated from Mathematica.
 * Fri 10 May 2019 20:22:37 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t190;
  double t86;
  double t167;
  double t126;
  double t196;
  double t304;
  double t311;
  double t317;
  double t181;
  double t206;
  double t243;
  double t372;
  double t365;
  double t388;
  double t415;
  double t420;
  double t425;
  double t387;
  double t391;
  double t402;
  double t448;
  double t452;
  double t474;
  double t320;
  double t564;
  double t567;
  double t572;
  double t613;
  double t616;
  double t617;
  double t637;
  double t640;
  double t668;
  double t680;
  double t681;
  double t688;
  double t478;
  double t483;
  double t510;
  double t737;
  double t753;
  double t755;
  double t763;
  double t789;
  double t793;
  double t795;
  double t916;
  double t925;
  double t931;
  double t957;
  double t885;
  double t893;
  double t832;
  double t839;
  double t854;
  double t911;
  double t958;
  double t960;
  double t964;
  double t975;
  double t979;
  double t980;
  double t993;
  double t995;
  double t803;
  double t808;
  double t812;
  double t997;
  double t999;
  double t1005;
  double t1019;
  double t1027;
  double t1029;
  double t1048;
  double t1121;
  double t1179;
  double t1196;
  double t1206;
  double t1210;
  double t1212;
  double t1213;
  double t1253;
  double t1257;
  double t1263;
  double t1268;
  double t1271;
  double t1274;
  double t1295;
  double t1296;
  double t1300;
  double t1287;
  double t1291;
  double t1306;
  double t1308;
  double t1312;
  double t1313;
  double t1314;
  double t1352;
  double t1350;
  double t1345;
  double t1346;
  double t1365;
  double t1375;
  double t1386;
  double t1390;
  double t1395;
  double t1430;
  double t1435;
  double t1413;
  double t1339;
  double t1455;
  double t1480;
  double t1481;
  double t1482;
  double t1490;
  double t1491;
  double t1494;
  double t1418;
  double t1426;
  double t1542;
  double t1544;
  double t1546;
  double t1552;
  double t1554;
  double t1555;
  double t1572;
  double t1573;
  double t1576;
  double t1612;
  double t1614;
  double t1618;
  double t1620;
  double t1622;
  double t1608;
  double t1632;
  double t1633;
  double t1636;
  double t1641;
  double t1648;
  double t1649;
  double t1650;
  double t1652;
  double t1584;
  double t1589;
  double t1592;
  double t1664;
  double t1674;
  double t1680;
  double t1682;
  double t1687;
  double t1690;
  double t1694;
  double t1715;
  double t1733;
  double t1734;
  double t1735;
  double t1737;
  double t1738;
  double t1746;
  double t1764;
  double t1766;
  double t1767;
  double t1773;
  double t1774;
  double t1778;
  double t1781;
  double t1782;
  double t1783;
  double t1785;
  double t1826;
  double t1828;
  double t1829;
  double t1837;
  double t1840;
  double t1842;
  double t1830;
  double t1833;
  double t1834;
  double t1902;
  double t1906;
  double t1907;
  double t1929;
  double t1939;
  double t1941;
  double t1912;
  double t1913;
  double t1915;
  double t1994;
  double t2006;
  double t2007;
  double t2029;
  double t2040;
  double t2041;
  double t2009;
  double t2019;
  double t2024;
  double t2062;
  double t2064;
  double t2065;
  double t2055;
  double t2058;
  double t2060;
  double t1073;
  double t1079;
  double t1087;
  double t1129;
  double t1140;
  double t1151;
  double t1168;
  double t1243;
  double t1887;
  double t1890;
  double t1898;
  double t1815;
  double t1818;
  double t1820;
  double t1317;
  double t1318;
  double t1324;
  double t2157;
  double t2162;
  double t2167;
  double t2156;
  double t2172;
  double t2173;
  double t2181;
  double t2185;
  double t2188;
  double t2222;
  double t2223;
  double t2224;
  double t2220;
  double t2225;
  double t2226;
  double t2229;
  double t2231;
  double t2233;
  double t2305;
  double t2308;
  double t2309;
  double t2298;
  double t2310;
  double t2314;
  double t2316;
  double t2317;
  double t2319;
  double t1699;
  double t1702;
  double t1703;
  double t2324;
  double t2326;
  double t2327;
  double t2329;
  double t2332;
  double t2334;
  double t1749;
  double t1712;
  double t1716;
  double t1717;
  double t1732;
  double t2216;
  double t2217;
  double t2218;
  double t2125;
  double t2142;
  double t2147;
  double t1790;
  double t1797;
  double t1799;
  double t2388;
  double t2389;
  double t2391;
  double t2403;
  double t2404;
  double t2405;
  double t2424;
  double t2427;
  double t2429;
  double t2417;
  double t2418;
  double t2421;
  double t2472;
  double t2479;
  double t2482;
  double t2493;
  double t2495;
  double t2497;
  double t2484;
  double t2486;
  double t2487;
  double t2469;
  double t2393;
  double t2399;
  double t2543;
  double t2547;
  double t2550;
  double t2542;
  double t2553;
  double t2556;
  double t2567;
  double t2581;
  double t2586;
  double t2622;
  double t2625;
  double t2626;
  double t2621;
  double t2627;
  double t2632;
  double t2634;
  double t2636;
  double t2638;
  double t2615;
  double t2538;
  double t2540;
  double t2680;
  double t2681;
  double t2744;
  double t2746;
  double t2778;
  double t2780;
  double t2816;
  double t2817;
  double t2818;
  double t2803;
  double t2808;
  double t2811;
  double t2719;
  double t2727;
  double t2730;
  double t2670;
  double t2671;
  double t2677;
  double t2869;
  double t2848;
  double t2860;
  double t2876;
  double t2877;
  double t2886;
  double t2887;
  double t2889;
  double t2933;
  double t2919;
  double t2923;
  double t2928;
  double t2932;
  double t2934;
  double t2938;
  double t2943;
  double t2945;
  double t2946;
  double t2972;
  double t2976;
  double t2977;
  double t2983;
  double t2997;
  double t2999;
  double t3002;
  double t2989;
  double t2990;
  double t2995;
  double t3045;
  double t3048;
  double t3052;
  double t3038;
  double t3086;
  double t3090;
  double t3091;
  double t3077;
  double t3122;
  double t3123;
  double t3124;
  double t3128;
  double t3130;
  double t3133;
  double t3155;
  double t3159;
  double t3163;
  double t3190;
  double t3192;
  double t3224;
  double t3225;
  double t3254;
  double t3255;
  double t3257;
  double t3239;
  double t3244;
  double t3245;
  double t3185;
  double t3186;
  double t3188;
  double t3150;
  double t3152;
  double t3304;
  double t3302;
  double t3306;
  double t3320;
  double t3324;
  double t3325;
  double t3328;
  double t3361;
  double t3362;
  double t3360;
  double t3364;
  double t3368;
  double t3371;
  double t3376;
  double t3377;
  double t3408;
  double t3412;
  double t3413;
  double t3419;
  double t3423;
  double t3424;
  double t3425;
  double t3432;
  double t3433;
  double t3435;
  double t3472;
  double t3480;
  double t3482;
  double t3484;
  double t3518;
  double t3520;
  double t3524;
  double t3529;
  double t3549;
  double t3552;
  double t3555;
  double t3559;
  double t3560;
  double t3561;
  t190 = Cos(var1[3]);
  t86 = Cos(var1[5]);
  t167 = Sin(var1[4]);
  t126 = Sin(var1[3]);
  t196 = Sin(var1[5]);
  t304 = t190*t86*t167;
  t311 = t126*t196;
  t317 = t304 + t311;
  t181 = -1.*t86*t126*t167;
  t206 = t190*t196;
  t243 = t181 + t206;
  t372 = Cos(var1[7]);
  t365 = Cos(var1[6]);
  t388 = Sin(var1[7]);
  t415 = t372*t243;
  t420 = -1.*t365*t317*t388;
  t425 = t415 + t420;
  t387 = t365*t372*t317;
  t391 = t243*t388;
  t402 = t387 + t391;
  t448 = Cos(var1[8]);
  t452 = 0. + t448;
  t474 = Sin(var1[8]);
  t320 = Sin(var1[6]);
  t564 = -1.*t190*t86;
  t567 = -1.*t126*t167*t196;
  t572 = t564 + t567;
  t613 = -1.*t86*t126;
  t616 = t190*t167*t196;
  t617 = t613 + t616;
  t637 = t372*t572;
  t640 = -1.*t365*t617*t388;
  t668 = t637 + t640;
  t680 = t365*t372*t617;
  t681 = t572*t388;
  t688 = t680 + t681;
  t478 = -1.*t474;
  t483 = 0. + t478;
  t510 = 0. + t474;
  t737 = Cos(var1[4]);
  t753 = -1.*t737*t372*t126;
  t755 = -1.*t190*t737*t365*t388;
  t763 = t753 + t755;
  t789 = t190*t737*t365*t372;
  t793 = -1.*t737*t126*t388;
  t795 = t789 + t793;
  t916 = t737*t365*t126;
  t925 = 0. + t320;
  t931 = -1.*t167*t925;
  t957 = 0. + t916 + t931;
  t885 = t190*t737;
  t893 = 0. + t885;
  t832 = t452*t795;
  t839 = t763*t510;
  t854 = t832 + t839;
  t911 = t893*t372;
  t958 = -1.*t957*t388;
  t960 = 0. + t911 + t958;
  t964 = t452*t960;
  t975 = t372*t957;
  t979 = t893*t388;
  t980 = 0. + t975 + t979;
  t993 = t980*t483;
  t995 = 0. + t964 + t993;
  t803 = t452*t763;
  t808 = t795*t483;
  t812 = t803 + t808;
  t997 = Power(t995,2);
  t999 = t452*t980;
  t1005 = t960*t510;
  t1019 = 0. + t999 + t1005;
  t1027 = Power(t1019,2);
  t1029 = t997 + t1027;
  t1048 = 1/t1029;
  t1121 = 0. + t365;
  t1179 = t1121*t167;
  t1196 = t737*t126*t320;
  t1206 = 0. + t1179 + t1196;
  t1210 = Power(t1206,2);
  t1212 = t1210 + t997 + t1027;
  t1213 = 1/t1212;
  t1253 = t737*t86*t1121;
  t1257 = t86*t126*t167;
  t1263 = -1.*t190*t196;
  t1268 = t1257 + t1263;
  t1271 = -1.*t1268*t320;
  t1274 = 0. + t1253 + t1271;
  t1295 = t190*t86;
  t1296 = t126*t167*t196;
  t1300 = t1295 + t1296;
  t1287 = Power(t1274,2);
  t1291 = t737*t1121*t196;
  t1306 = -1.*t1300*t320;
  t1308 = 0. + t1291 + t1306;
  t1312 = Power(t1308,2);
  t1313 = t1287 + t1312;
  t1314 = 1/t1313;
  t1352 = Cos(var1[16]);
  t1350 = Cos(var1[15]);
  t1345 = Sin(var1[16]);
  t1346 = t1345*t243;
  t1365 = t1350*t1352*t317;
  t1375 = t1346 + t1365;
  t1386 = t1352*t243;
  t1390 = -1.*t1350*t1345*t317;
  t1395 = t1386 + t1390;
  t1430 = Cos(var1[17]);
  t1435 = 0. + t1430;
  t1413 = Sin(var1[17]);
  t1339 = Sin(var1[15]);
  t1455 = 0. + t1413;
  t1480 = -1.*t1350*t1345*t617;
  t1481 = t1352*t572;
  t1482 = t1480 + t1481;
  t1490 = t1350*t1352*t617;
  t1491 = t1345*t572;
  t1494 = t1490 + t1491;
  t1418 = -1.*t1413;
  t1426 = 0. + t1418;
  t1542 = -1.*t1350*t190*t737*t1345;
  t1544 = -1.*t1352*t737*t126;
  t1546 = t1542 + t1544;
  t1552 = t1350*t1352*t190*t737;
  t1554 = -1.*t737*t1345*t126;
  t1555 = t1552 + t1554;
  t1572 = t1455*t1546;
  t1573 = t1435*t1555;
  t1576 = t1572 + t1573;
  t1612 = t1350*t737*t126;
  t1614 = -1.*t1339;
  t1618 = 0. + t1614;
  t1620 = -1.*t1618*t167;
  t1622 = 0. + t1612 + t1620;
  t1608 = t893*t1345;
  t1632 = t1352*t1622;
  t1633 = 0. + t1608 + t1632;
  t1636 = t1426*t1633;
  t1641 = t1352*t893;
  t1648 = -1.*t1345*t1622;
  t1649 = 0. + t1641 + t1648;
  t1650 = t1435*t1649;
  t1652 = 0. + t1636 + t1650;
  t1584 = t1435*t1546;
  t1589 = t1426*t1555;
  t1592 = t1584 + t1589;
  t1664 = Power(t1652,2);
  t1674 = t1435*t1633;
  t1680 = t1455*t1649;
  t1682 = 0. + t1674 + t1680;
  t1687 = Power(t1682,2);
  t1690 = t1664 + t1687;
  t1694 = 1/t1690;
  t1715 = 0. + t1350;
  t1733 = -1.*t737*t1339*t126;
  t1734 = t1715*t167;
  t1735 = 0. + t1733 + t1734;
  t1737 = Power(t1735,2);
  t1738 = t1737 + t1664 + t1687;
  t1746 = 1/t1738;
  t1764 = t1715*t737*t86;
  t1766 = t1339*t1268;
  t1767 = 0. + t1764 + t1766;
  t1773 = Power(t1767,2);
  t1774 = t1715*t737*t196;
  t1778 = t1339*t1300;
  t1781 = 0. + t1774 + t1778;
  t1782 = Power(t1781,2);
  t1783 = t1773 + t1782;
  t1785 = 1/t1783;
  t1826 = t737*t86*t365*t126;
  t1828 = -1.*t86*t167*t925;
  t1829 = t1826 + t1828;
  t1837 = t190*t737*t86*t372;
  t1840 = -1.*t1829*t388;
  t1842 = t1837 + t1840;
  t1830 = t372*t1829;
  t1833 = t190*t737*t86*t388;
  t1834 = t1830 + t1833;
  t1902 = t737*t365*t126*t196;
  t1906 = -1.*t167*t196*t925;
  t1907 = t1902 + t1906;
  t1929 = t190*t737*t372*t196;
  t1939 = -1.*t1907*t388;
  t1941 = t1929 + t1939;
  t1912 = t372*t1907;
  t1913 = t190*t737*t196*t388;
  t1915 = t1912 + t1913;
  t1994 = -1.*t365*t126*t167;
  t2006 = -1.*t737*t925;
  t2007 = t1994 + t2006;
  t2029 = -1.*t190*t372*t167;
  t2040 = -1.*t2007*t388;
  t2041 = t2029 + t2040;
  t2009 = t372*t2007;
  t2019 = -1.*t190*t167*t388;
  t2024 = t2009 + t2019;
  t2062 = t452*t2024;
  t2064 = t2041*t510;
  t2065 = t2062 + t2064;
  t2055 = t452*t2041;
  t2058 = t2024*t483;
  t2060 = t2055 + t2058;
  t1073 = -1.*t452*t980;
  t1079 = -1.*t960*t510;
  t1087 = 0. + t1073 + t1079;
  t1129 = -1.*t1121*t167;
  t1140 = -1.*t737*t126*t320;
  t1151 = 0. + t1129 + t1140;
  t1168 = 1/Sqrt(t1029);
  t1243 = Sqrt(t1029);
  t1887 = -1.*t1121*t167*t196;
  t1890 = -1.*t737*t126*t196*t320;
  t1898 = t1887 + t1890;
  t1815 = -1.*t86*t1121*t167;
  t1818 = -1.*t737*t86*t126*t320;
  t1820 = t1815 + t1818;
  t1317 = -1.*t737*t1121*t196;
  t1318 = t1300*t320;
  t1324 = 0. + t1317 + t1318;
  t2157 = t1350*t737*t86*t126;
  t2162 = -1.*t86*t1618*t167;
  t2167 = t2157 + t2162;
  t2156 = t190*t737*t86*t1345;
  t2172 = t1352*t2167;
  t2173 = t2156 + t2172;
  t2181 = t1352*t190*t737*t86;
  t2185 = -1.*t1345*t2167;
  t2188 = t2181 + t2185;
  t2222 = t1350*t737*t126*t196;
  t2223 = -1.*t1618*t167*t196;
  t2224 = t2222 + t2223;
  t2220 = t190*t737*t1345*t196;
  t2225 = t1352*t2224;
  t2226 = t2220 + t2225;
  t2229 = t1352*t190*t737*t196;
  t2231 = -1.*t1345*t2224;
  t2233 = t2229 + t2231;
  t2305 = -1.*t737*t1618;
  t2308 = -1.*t1350*t126*t167;
  t2309 = t2305 + t2308;
  t2298 = -1.*t190*t1345*t167;
  t2310 = t1352*t2309;
  t2314 = t2298 + t2310;
  t2316 = -1.*t1352*t190*t167;
  t2317 = -1.*t1345*t2309;
  t2319 = t2316 + t2317;
  t1699 = -1.*t1435*t1633;
  t1702 = -1.*t1455*t1649;
  t1703 = 0. + t1699 + t1702;
  t2324 = t1426*t2314;
  t2326 = t1435*t2319;
  t2327 = t2324 + t2326;
  t2329 = t1435*t2314;
  t2332 = t1455*t2319;
  t2334 = t2329 + t2332;
  t1749 = Sqrt(t1690);
  t1712 = t737*t1339*t126;
  t1716 = -1.*t1715*t167;
  t1717 = 0. + t1712 + t1716;
  t1732 = 1/Sqrt(t1690);
  t2216 = t737*t1339*t126*t196;
  t2217 = -1.*t1715*t167*t196;
  t2218 = t2216 + t2217;
  t2125 = t737*t86*t1339*t126;
  t2142 = -1.*t1715*t86*t167;
  t2147 = t2125 + t2142;
  t1790 = -1.*t1715*t737*t196;
  t1797 = -1.*t1339*t1300;
  t1799 = 0. + t1790 + t1797;
  t2388 = t86*t126;
  t2389 = -1.*t190*t167*t196;
  t2391 = t2388 + t2389;
  t2403 = t365*t572;
  t2404 = -1.*t737*t196*t925;
  t2405 = t2403 + t2404;
  t2424 = t372*t2391;
  t2427 = -1.*t2405*t388;
  t2429 = t2424 + t2427;
  t2417 = t372*t2405;
  t2418 = t2391*t388;
  t2421 = t2417 + t2418;
  t2472 = t365*t1268;
  t2479 = t737*t86*t925;
  t2482 = t2472 + t2479;
  t2493 = t372*t317;
  t2495 = -1.*t2482*t388;
  t2497 = t2493 + t2495;
  t2484 = t372*t2482;
  t2486 = t317*t388;
  t2487 = t2484 + t2486;
  t2469 = t1253 + t1271;
  t2393 = -1.*t572*t320;
  t2399 = t1317 + t2393;
  t2543 = -1.*t737*t1618*t196;
  t2547 = t1350*t572;
  t2550 = t2543 + t2547;
  t2542 = t1345*t2391;
  t2553 = t1352*t2550;
  t2556 = t2542 + t2553;
  t2567 = t1352*t2391;
  t2581 = -1.*t1345*t2550;
  t2586 = t2567 + t2581;
  t2622 = t737*t86*t1618;
  t2625 = t1350*t1268;
  t2626 = t2622 + t2625;
  t2621 = t1345*t317;
  t2627 = t1352*t2626;
  t2632 = t2621 + t2627;
  t2634 = t1352*t317;
  t2636 = -1.*t1345*t2626;
  t2638 = t2634 + t2636;
  t2615 = t1764 + t1766;
  t2538 = t1339*t572;
  t2540 = t1790 + t2538;
  t2680 = t737*t86*t365;
  t2681 = t2680 + t1271;
  t2744 = t737*t365*t196;
  t2746 = t2744 + t1306;
  t2778 = -1.*t365*t167;
  t2780 = t2778 + t1140;
  t2816 = t372*t452*t2780;
  t2817 = -1.*t2780*t388*t510;
  t2818 = t2816 + t2817;
  t2803 = -1.*t452*t2780*t388;
  t2808 = t372*t2780*t483;
  t2811 = t2803 + t2808;
  t2719 = -1.*t365*t1300;
  t2727 = -1.*t737*t196*t320;
  t2730 = t2719 + t2727;
  t2670 = -1.*t365*t1268;
  t2671 = -1.*t737*t86*t320;
  t2677 = t2670 + t2671;
  t2869 = 0. + t304 + t311;
  t2848 = 0. + t2472 + t2479;
  t2860 = -1.*t372*t2848;
  t2876 = -1.*t2869*t388;
  t2877 = t2860 + t2876;
  t2886 = t372*t2869;
  t2887 = -1.*t2848*t388;
  t2889 = t2886 + t2887;
  t2933 = 0. + t613 + t616;
  t2919 = t365*t1300;
  t2923 = t737*t196*t925;
  t2928 = 0. + t2919 + t2923;
  t2932 = -1.*t372*t2928;
  t2934 = -1.*t2933*t388;
  t2938 = t2932 + t2934;
  t2943 = t372*t2933;
  t2945 = -1.*t2928*t388;
  t2946 = t2943 + t2945;
  t2972 = -1.*t372*t957;
  t2976 = -1.*t893*t388;
  t2977 = t2972 + t2976;
  t2983 = t911 + t958;
  t2997 = t452*t2983;
  t2999 = t2977*t510;
  t3002 = t2997 + t2999;
  t2989 = t452*t2977;
  t2990 = t2983*t483;
  t2995 = t2989 + t2990;
  t3045 = t372*t2848;
  t3048 = t2869*t388;
  t3052 = 0. + t3045 + t3048;
  t3038 = 0. + t2886 + t2887;
  t3086 = t372*t2928;
  t3090 = t2933*t388;
  t3091 = 0. + t3086 + t3090;
  t3077 = 0. + t2943 + t2945;
  t3122 = t448*t960;
  t3123 = -1.*t980*t474;
  t3124 = t3122 + t3123;
  t3128 = -1.*t448*t980;
  t3130 = -1.*t960*t474;
  t3133 = t3128 + t3130;
  t3155 = -1.*t1350*t737*t86;
  t3159 = -1.*t1339*t1268;
  t3163 = t3155 + t3159;
  t3190 = -1.*t1350*t737*t196;
  t3192 = t3190 + t1797;
  t3224 = t1350*t167;
  t3225 = t1733 + t3224;
  t3254 = t1352*t1435*t3225;
  t3255 = -1.*t1345*t1455*t3225;
  t3257 = t3254 + t3255;
  t3239 = -1.*t1435*t1345*t3225;
  t3244 = t1352*t1426*t3225;
  t3245 = t3239 + t3244;
  t3185 = -1.*t737*t1339*t196;
  t3186 = t1350*t1300;
  t3188 = t3185 + t3186;
  t3150 = -1.*t737*t86*t1339;
  t3152 = t3150 + t2625;
  t3304 = 0. + t2622 + t2625;
  t3302 = -1.*t1345*t2869;
  t3306 = -1.*t1352*t3304;
  t3320 = t3302 + t3306;
  t3324 = t1352*t2869;
  t3325 = -1.*t1345*t3304;
  t3328 = t3324 + t3325;
  t3361 = t737*t1618*t196;
  t3362 = 0. + t3361 + t3186;
  t3360 = -1.*t1345*t2933;
  t3364 = -1.*t1352*t3362;
  t3368 = t3360 + t3364;
  t3371 = t1352*t2933;
  t3376 = -1.*t1345*t3362;
  t3377 = t3371 + t3376;
  t3408 = -1.*t893*t1345;
  t3412 = -1.*t1352*t1622;
  t3413 = t3408 + t3412;
  t3419 = t1641 + t1648;
  t3423 = t1455*t3413;
  t3424 = t1435*t3419;
  t3425 = t3423 + t3424;
  t3432 = t1435*t3413;
  t3433 = t1426*t3419;
  t3435 = t3432 + t3433;
  t3472 = t1345*t2869;
  t3480 = t1352*t3304;
  t3482 = 0. + t3472 + t3480;
  t3484 = 0. + t3324 + t3325;
  t3518 = t1345*t2933;
  t3520 = t1352*t3362;
  t3524 = 0. + t3518 + t3520;
  t3529 = 0. + t3371 + t3376;
  t3549 = -1.*t1413*t1633;
  t3552 = t1430*t1649;
  t3555 = t3549 + t3552;
  t3559 = -1.*t1430*t1633;
  t3560 = -1.*t1413*t1649;
  t3561 = t3559 + t3560;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=1.;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=1.;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=1.;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=1.;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=1.;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=1.;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=1.;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=1.;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0.2429*t243 + 0.0329*t317*t320 - 0.2083*t402 - 0.1422*t425 - 0.02*(t425*t452 + t402*t483) - 0.16*(t402*t452 + t425*t510);
  p_output1[61]=0.2429*t572 + 0.0329*t320*t617 - 0.1422*t668 - 0.2083*t688 - 0.16*(t510*t668 + t452*t688) - 0.02*(t452*t668 + t483*t688);
  p_output1[62]=-0.2429*t126*t737 + 0.0329*t190*t320*t737 - 0.1422*t763 - 0.2083*t795 - 0.02*t812 - 0.16*t854;
  p_output1[63]=t1048*t1087*t812 + t1048*t854*t995;
  p_output1[64]=t1213*t1243*t190*t320*t737 + 0.5*t1151*t1168*t1213*(2.*t1019*t854 + 2.*t812*t995);
  p_output1[65]=-1.*t1314*t1324*t317*t320 - 1.*t1274*t1314*t320*t617;
  p_output1[66]=-0.2083*t1375 - 0.1422*t1395 - 0.02*(t1375*t1426 + t1395*t1435) - 0.16*(t1375*t1435 + t1395*t1455) - 0.1944*t243 + 0.0329*t1339*t317;
  p_output1[67]=-0.1422*t1482 - 0.2083*t1494 - 0.02*(t1435*t1482 + t1426*t1494) - 0.16*(t1455*t1482 + t1435*t1494) - 0.1944*t572 + 0.0329*t1339*t617;
  p_output1[68]=-0.1422*t1546 - 0.2083*t1555 - 0.16*t1576 - 0.02*t1592 + 0.1944*t126*t737 + 0.0329*t1339*t190*t737;
  p_output1[69]=t1576*t1652*t1694 + t1592*t1694*t1703;
  p_output1[70]=0.5*(2.*t1592*t1652 + 2.*t1576*t1682)*t1717*t1732*t1746 - 1.*t1339*t1746*t1749*t190*t737;
  p_output1[71]=t1339*t1785*t1799*t317 + t1339*t1767*t1785*t617;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=1.;
  p_output1[77]=0;
  p_output1[78]=-0.0329*t1820 - 0.2083*t1834 - 0.1422*t1842 - 0.02*(t1842*t452 + t1834*t483) - 0.16*(t1834*t452 + t1842*t510) + 0.0817*t167*t86 + 0.2429*t190*t737*t86;
  p_output1[79]=-0.0329*t1898 - 0.2083*t1915 - 0.1422*t1941 + 0.0817*t167*t196 - 0.02*(t1941*t452 + t1915*t483) - 0.16*(t1915*t452 + t1941*t510) + 0.2429*t190*t196*t737;
  p_output1[80]=-0.2429*t167*t190 - 0.2083*t2024 - 0.1422*t2041 - 0.02*t2060 - 0.16*t2065 + 0.0817*t737 - 0.0329*(t126*t167*t320 - 1.*t1121*t737);
  p_output1[81]=t1048*t1087*t2060 + t1048*t2065*t995;
  p_output1[82]=t1213*t1243*(-1.*t126*t167*t320 + t1121*t737) + 0.5*t1151*t1168*t1213*(2.*t1019*t2065 + 2.*t2060*t995);
  p_output1[83]=t1314*t1324*t1820 + t1274*t1314*t1898;
  p_output1[84]=0.0329*t2147 - 0.2083*t2173 - 0.1422*t2188 - 0.02*(t1426*t2173 + t1435*t2188) - 0.16*(t1435*t2173 + t1455*t2188) - 0.0817*t167*t86 - 0.1944*t190*t737*t86;
  p_output1[85]=-0.0817*t167*t196 + 0.0329*t2218 - 0.2083*t2226 - 0.1422*t2233 - 0.02*(t1426*t2226 + t1435*t2233) - 0.16*(t1435*t2226 + t1455*t2233) - 0.1944*t190*t196*t737;
  p_output1[86]=0.1944*t167*t190 - 0.2083*t2314 - 0.1422*t2319 - 0.02*t2327 - 0.16*t2334 - 0.0817*t737 + 0.0329*(-1.*t126*t1339*t167 - 1.*t1715*t737);
  p_output1[87]=t1694*t1703*t2327 + t1652*t1694*t2334;
  p_output1[88]=0.5*t1717*t1732*t1746*(2.*t1652*t2327 + 2.*t1682*t2334) + t1746*t1749*(t126*t1339*t167 + t1715*t737);
  p_output1[89]=t1785*t1799*t2147 + t1767*t1785*t2218;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=1.;
  p_output1[96]=0.2429*t2391 - 0.0329*t2399 - 0.2083*t2421 - 0.1422*t2429 - 0.02*(t2429*t452 + t2421*t483) - 0.16*(t2421*t452 + t2429*t510) + 0.0817*t196*t737;
  p_output1[97]=-0.0329*t2469 - 0.2083*t2487 - 0.1422*t2497 + 0.2429*t317 - 0.02*(t2497*t452 + t2487*t483) - 0.16*(t2487*t452 + t2497*t510) - 0.0817*t737*t86;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=t1314*t1324*t2399 + t1274*t1314*t2469;
  p_output1[102]=-0.1944*t2391 + 0.0329*t2540 - 0.2083*t2556 - 0.1422*t2586 - 0.02*(t1426*t2556 + t1435*t2586) - 0.16*(t1435*t2556 + t1455*t2586) - 0.0817*t196*t737;
  p_output1[103]=0.0329*t2615 - 0.2083*t2632 - 0.1422*t2638 - 0.02*(t1426*t2632 + t1435*t2638) - 0.16*(t1435*t2632 + t1455*t2638) - 0.1944*t317 + 0.0817*t737*t86;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=t1785*t1799*t2540 + t1767*t1785*t2615;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=-0.0329*t2677 - 0.2083*t2681*t372 + 0.1422*t2681*t388 - 0.02*(-1.*t2681*t388*t452 + t2681*t372*t483) - 0.16*(t2681*t372*t452 - 1.*t2681*t388*t510);
  p_output1[115]=-0.0329*t2730 - 0.2083*t2746*t372 + 0.1422*t2746*t388 - 0.02*(-1.*t2746*t388*t452 + t2746*t372*t483) - 0.16*(t2746*t372*t452 - 1.*t2746*t388*t510);
  p_output1[116]=-0.02*t2811 - 0.16*t2818 - 0.2083*t2780*t372 + 0.1422*t2780*t388 - 0.0329*(t167*t320 - 1.*t126*t365*t737);
  p_output1[117]=t1048*t1087*t2811 + t1048*t2818*t995;
  p_output1[118]=t1213*t1243*(-1.*t167*t320 + t916) + 0.5*t1151*t1168*t1213*(2.*t1019*t2818 + 2.*t2811*t995);
  p_output1[119]=t1314*t1324*t2677 + t1274*t1314*t2730;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=-0.1422*t2877 - 0.2083*t2889 - 0.02*(t2877*t452 + t2889*t483) - 0.16*(t2889*t452 + t2877*t510);
  p_output1[133]=-0.1422*t2938 - 0.2083*t2946 - 0.02*(t2938*t452 + t2946*t483) - 0.16*(t2946*t452 + t2938*t510);
  p_output1[134]=-0.1422*t2977 - 0.2083*t2983 - 0.02*t2995 - 0.16*t3002;
  p_output1[135]=t1048*t1087*t2995 + t1048*t3002*t995;
  p_output1[136]=0.5*t1151*t1168*t1213*(2.*t1019*t3002 + 2.*t2995*t995);
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=-0.02*(-1.*t3052*t448 - 1.*t3038*t474) - 0.16*(t3038*t448 - 1.*t3052*t474);
  p_output1[151]=-0.02*(-1.*t3091*t448 - 1.*t3077*t474) - 0.16*(t3077*t448 - 1.*t3091*t474);
  p_output1[152]=-0.16*t3124 - 0.02*t3133;
  p_output1[153]=t1048*t1087*t3133 + t1048*t3124*t995;
  p_output1[154]=0.5*t1151*t1168*t1213*(2.*t1019*t3124 + 2.*t3133*t995);
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0;
  p_output1[172]=0;
  p_output1[173]=0;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=0;
  p_output1[187]=0;
  p_output1[188]=0;
  p_output1[189]=0;
  p_output1[190]=0;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=0;
  p_output1[232]=0;
  p_output1[233]=0;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=0;
  p_output1[250]=0;
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=0;
  p_output1[268]=0;
  p_output1[269]=0;
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0.0329*t3152 + 0.1422*t1345*t3163 - 0.2083*t1352*t3163 - 0.02*(t1352*t1426*t3163 - 1.*t1345*t1435*t3163) - 0.16*(t1352*t1435*t3163 - 1.*t1345*t1455*t3163);
  p_output1[283]=0.0329*t3188 + 0.1422*t1345*t3192 - 0.2083*t1352*t3192 - 0.02*(t1352*t1426*t3192 - 1.*t1345*t1435*t3192) - 0.16*(t1352*t1435*t3192 - 1.*t1345*t1455*t3192);
  p_output1[284]=0.0329*(t1612 + t1339*t167) + 0.1422*t1345*t3225 - 0.2083*t1352*t3225 - 0.02*t3245 - 0.16*t3257;
  p_output1[285]=t1694*t1703*t3245 + t1652*t1694*t3257;
  p_output1[286]=0.5*t1717*t1732*t1746*(2.*t1652*t3245 + 2.*t1682*t3257) + t1746*t1749*(-1.*t1339*t167 - 1.*t126*t1350*t737);
  p_output1[287]=t1785*t1799*t3152 + t1767*t1785*t3188;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=-0.1422*t3320 - 0.2083*t3328 - 0.02*(t1435*t3320 + t1426*t3328) - 0.16*(t1455*t3320 + t1435*t3328);
  p_output1[301]=-0.1422*t3368 - 0.2083*t3377 - 0.02*(t1435*t3368 + t1426*t3377) - 0.16*(t1455*t3368 + t1435*t3377);
  p_output1[302]=-0.1422*t3413 - 0.2083*t3419 - 0.16*t3425 - 0.02*t3435;
  p_output1[303]=t1652*t1694*t3425 + t1694*t1703*t3435;
  p_output1[304]=0.5*t1717*t1732*t1746*(2.*t1682*t3425 + 2.*t1652*t3435);
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=-0.02*(-1.*t1430*t3482 - 1.*t1413*t3484) - 0.16*(-1.*t1413*t3482 + t1430*t3484);
  p_output1[319]=-0.02*(-1.*t1430*t3524 - 1.*t1413*t3529) - 0.16*(-1.*t1413*t3524 + t1430*t3529);
  p_output1[320]=-0.16*t3555 - 0.02*t3561;
  p_output1[321]=t1652*t1694*t3555 + t1694*t1703*t3561;
  p_output1[322]=0.5*t1717*t1732*t1746*(2.*t1682*t3555 + 2.*t1652*t3561);
  p_output1[323]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_hc_1_func_fully.hh"

namespace SymFunction
{

void j_hc_1_func_fully_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
