/*
 * Automatically Generated from Mathematica.
 * Fri 10 May 2019 20:22:38 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t304;
  double t120;
  double t243;
  double t206;
  double t311;
  double t267;
  double t316;
  double t342;
  double t402;
  double t412;
  double t415;
  double t501;
  double t485;
  double t439;
  double t456;
  double t504;
  double t507;
  double t534;
  double t539;
  double t554;
  double t668;
  double t672;
  double t611;
  double t391;
  double t723;
  double t724;
  double t731;
  double t736;
  double t740;
  double t747;
  double t709;
  double t752;
  double t763;
  double t772;
  double t781;
  double t789;
  double t795;
  double t616;
  double t619;
  double t885;
  double t975;
  double t979;
  double t993;
  double t999;
  double t1005;
  double t1009;
  double t1029;
  double t1048;
  double t1061;
  double t1161;
  double t1166;
  double t1186;
  double t1191;
  double t1196;
  double t1206;
  double t1210;
  double t1179;
  double t1212;
  double t1231;
  double t1249;
  double t1251;
  double t1253;
  double t1257;
  double t1269;
  double t1287;
  double t1099;
  double t1100;
  double t1130;
  double t1291;
  double t1293;
  double t1295;
  double t1296;
  double t1308;
  double t1312;
  double t1313;
  double t1365;
  double t1395;
  double t1401;
  double t1407;
  double t1428;
  double t1439;
  double t1441;
  double t1456;
  double t1465;
  double t1467;
  double t1472;
  double t1475;
  double t1478;
  double t1483;
  double t1490;
  double t1491;
  double t1481;
  double t1482;
  double t1494;
  double t1495;
  double t1496;
  double t1499;
  double t1503;
  double t1552;
  double t1549;
  double t1543;
  double t1546;
  double t1555;
  double t1564;
  double t1573;
  double t1578;
  double t1579;
  double t1612;
  double t1619;
  double t1589;
  double t1539;
  double t1646;
  double t1687;
  double t1690;
  double t1693;
  double t1698;
  double t1703;
  double t1706;
  double t1602;
  double t1605;
  double t1761;
  double t1764;
  double t1766;
  double t1773;
  double t1774;
  double t1778;
  double t1782;
  double t1783;
  double t1785;
  double t1820;
  double t1821;
  double t1826;
  double t1830;
  double t1815;
  double t1833;
  double t1834;
  double t1836;
  double t1837;
  double t1842;
  double t1843;
  double t1845;
  double t1847;
  double t1799;
  double t1804;
  double t1809;
  double t1849;
  double t1853;
  double t1854;
  double t1856;
  double t1865;
  double t1867;
  double t1868;
  double t1913;
  double t1949;
  double t1956;
  double t1963;
  double t1966;
  double t1967;
  double t1975;
  double t1986;
  double t1987;
  double t1988;
  double t1989;
  double t1990;
  double t1991;
  double t2009;
  double t2024;
  double t2025;
  double t2039;
  double t2083;
  double t2084;
  double t2086;
  double t2082;
  double t2092;
  double t2093;
  double t2111;
  double t2112;
  double t2113;
  double t2202;
  double t2204;
  double t2205;
  double t2191;
  double t2206;
  double t2207;
  double t2211;
  double t2212;
  double t2214;
  double t2259;
  double t2272;
  double t2273;
  double t2256;
  double t2277;
  double t2278;
  double t2280;
  double t2282;
  double t2288;
  double t1318;
  double t1328;
  double t1331;
  double t2296;
  double t2298;
  double t2310;
  double t2315;
  double t2319;
  double t2320;
  double t1449;
  double t1346;
  double t1374;
  double t1375;
  double t1393;
  double t2179;
  double t2181;
  double t2188;
  double t2069;
  double t2073;
  double t2080;
  double t1512;
  double t1514;
  double t1516;
  double t2388;
  double t2391;
  double t2392;
  double t2387;
  double t2399;
  double t2402;
  double t2417;
  double t2418;
  double t2421;
  double t2472;
  double t2479;
  double t2484;
  double t2470;
  double t2486;
  double t2487;
  double t2493;
  double t2497;
  double t2498;
  double t2542;
  double t2547;
  double t2553;
  double t2541;
  double t2556;
  double t2559;
  double t2586;
  double t2587;
  double t2588;
  double t1883;
  double t1898;
  double t1900;
  double t2595;
  double t2596;
  double t2597;
  double t2601;
  double t2602;
  double t2603;
  double t1978;
  double t1912;
  double t1915;
  double t1919;
  double t1948;
  double t2464;
  double t2467;
  double t2468;
  double t2383;
  double t2384;
  double t2385;
  double t2052;
  double t2055;
  double t2058;
  double t2648;
  double t2649;
  double t2653;
  double t2668;
  double t2669;
  double t2677;
  double t2667;
  double t2678;
  double t2680;
  double t2686;
  double t2698;
  double t2700;
  double t2754;
  double t2756;
  double t2759;
  double t2753;
  double t2760;
  double t2763;
  double t2768;
  double t2769;
  double t2789;
  double t2749;
  double t2657;
  double t2661;
  double t2835;
  double t2838;
  double t2839;
  double t2834;
  double t2840;
  double t2841;
  double t2877;
  double t2879;
  double t2886;
  double t2942;
  double t2943;
  double t2946;
  double t2938;
  double t2951;
  double t2955;
  double t2958;
  double t2960;
  double t2961;
  double t2923;
  double t2831;
  double t2832;
  double t3007;
  double t3010;
  double t3012;
  double t3075;
  double t3080;
  double t3126;
  double t3134;
  double t3152;
  double t3153;
  double t3162;
  double t3146;
  double t3147;
  double t3148;
  double t3065;
  double t3070;
  double t3071;
  double t2999;
  double t3005;
  double t3199;
  double t3202;
  double t3200;
  double t3215;
  double t3217;
  double t3219;
  double t3220;
  double t3224;
  double t3262;
  double t3265;
  double t3270;
  double t3263;
  double t3272;
  double t3273;
  double t3284;
  double t3287;
  double t3288;
  double t3330;
  double t3332;
  double t3335;
  double t3342;
  double t3347;
  double t3348;
  double t3349;
  double t3361;
  double t3368;
  double t3369;
  double t3404;
  double t3405;
  double t3406;
  double t3418;
  double t3439;
  double t3440;
  double t3441;
  double t3445;
  double t3483;
  double t3489;
  double t3491;
  double t3503;
  double t3505;
  double t3509;
  double t3548;
  double t3552;
  double t3593;
  double t3594;
  double t3639;
  double t3640;
  double t3691;
  double t3693;
  double t3695;
  double t3680;
  double t3681;
  double t3682;
  double t3583;
  double t3587;
  double t3590;
  double t3538;
  double t3540;
  double t3545;
  double t3767;
  double t3766;
  double t3769;
  double t3776;
  double t3778;
  double t3779;
  double t3789;
  double t3847;
  double t3848;
  double t3850;
  double t3836;
  double t3854;
  double t3855;
  double t3860;
  double t3862;
  double t3865;
  double t3891;
  double t3892;
  double t3893;
  double t3901;
  double t3905;
  double t3911;
  double t3913;
  double t3916;
  double t3920;
  double t3927;
  double t3944;
  double t3946;
  double t3947;
  double t3950;
  double t3978;
  double t3979;
  double t3983;
  double t3992;
  double t4018;
  double t4020;
  double t4024;
  double t4027;
  double t4028;
  double t4033;
  t304 = Cos(var1[3]);
  t120 = Cos(var1[5]);
  t243 = Sin(var1[4]);
  t206 = Sin(var1[3]);
  t311 = Sin(var1[5]);
  t267 = -1.*t120*t206*t243;
  t316 = t304*t311;
  t342 = t267 + t316;
  t402 = t304*t120*t243;
  t412 = t206*t311;
  t415 = t402 + t412;
  t501 = Cos(var1[10]);
  t485 = Cos(var1[9]);
  t439 = Sin(var1[10]);
  t456 = t439*t342;
  t504 = t485*t501*t415;
  t507 = t456 + t504;
  t534 = t501*t342;
  t539 = -1.*t485*t439*t415;
  t554 = t534 + t539;
  t668 = Cos(var1[11]);
  t672 = 0. + t668;
  t611 = Sin(var1[11]);
  t391 = Sin(var1[9]);
  t723 = -1.*t120*t206;
  t724 = t304*t243*t311;
  t731 = t723 + t724;
  t736 = -1.*t304*t120;
  t740 = -1.*t206*t243*t311;
  t747 = t736 + t740;
  t709 = 0. + t611;
  t752 = -1.*t485*t439*t731;
  t763 = t501*t747;
  t772 = t752 + t763;
  t781 = t485*t501*t731;
  t789 = t439*t747;
  t795 = t781 + t789;
  t616 = -1.*t611;
  t619 = 0. + t616;
  t885 = Cos(var1[4]);
  t975 = -1.*t485*t304*t885*t439;
  t979 = -1.*t501*t885*t206;
  t993 = t975 + t979;
  t999 = t485*t501*t304*t885;
  t1005 = -1.*t885*t439*t206;
  t1009 = t999 + t1005;
  t1029 = t709*t993;
  t1048 = t672*t1009;
  t1061 = t1029 + t1048;
  t1161 = t304*t885;
  t1166 = 0. + t1161;
  t1186 = t485*t885*t206;
  t1191 = -1.*t391;
  t1196 = 0. + t1191;
  t1206 = -1.*t1196*t243;
  t1210 = 0. + t1186 + t1206;
  t1179 = t1166*t439;
  t1212 = t501*t1210;
  t1231 = 0. + t1179 + t1212;
  t1249 = t619*t1231;
  t1251 = t501*t1166;
  t1253 = -1.*t439*t1210;
  t1257 = 0. + t1251 + t1253;
  t1269 = t672*t1257;
  t1287 = 0. + t1249 + t1269;
  t1099 = t672*t993;
  t1100 = t619*t1009;
  t1130 = t1099 + t1100;
  t1291 = Power(t1287,2);
  t1293 = t672*t1231;
  t1295 = t709*t1257;
  t1296 = 0. + t1293 + t1295;
  t1308 = Power(t1296,2);
  t1312 = t1291 + t1308;
  t1313 = 1/t1312;
  t1365 = 0. + t485;
  t1395 = -1.*t885*t391*t206;
  t1401 = t1365*t243;
  t1407 = 0. + t1395 + t1401;
  t1428 = Power(t1407,2);
  t1439 = t1428 + t1291 + t1308;
  t1441 = 1/t1439;
  t1456 = t1365*t885*t120;
  t1465 = t120*t206*t243;
  t1467 = -1.*t304*t311;
  t1472 = t1465 + t1467;
  t1475 = t391*t1472;
  t1478 = 0. + t1456 + t1475;
  t1483 = t304*t120;
  t1490 = t206*t243*t311;
  t1491 = t1483 + t1490;
  t1481 = Power(t1478,2);
  t1482 = t1365*t885*t311;
  t1494 = t391*t1491;
  t1495 = 0. + t1482 + t1494;
  t1496 = Power(t1495,2);
  t1499 = t1481 + t1496;
  t1503 = 1/t1499;
  t1552 = Cos(var1[13]);
  t1549 = Cos(var1[12]);
  t1543 = Sin(var1[13]);
  t1546 = t1543*t342;
  t1555 = t1549*t1552*t415;
  t1564 = t1546 + t1555;
  t1573 = t1552*t342;
  t1578 = -1.*t1549*t1543*t415;
  t1579 = t1573 + t1578;
  t1612 = Cos(var1[14]);
  t1619 = 0. + t1612;
  t1589 = Sin(var1[14]);
  t1539 = Sin(var1[12]);
  t1646 = 0. + t1589;
  t1687 = -1.*t1549*t1543*t731;
  t1690 = t1552*t747;
  t1693 = t1687 + t1690;
  t1698 = t1549*t1552*t731;
  t1703 = t1543*t747;
  t1706 = t1698 + t1703;
  t1602 = -1.*t1589;
  t1605 = 0. + t1602;
  t1761 = -1.*t1549*t304*t885*t1543;
  t1764 = -1.*t1552*t885*t206;
  t1766 = t1761 + t1764;
  t1773 = t1549*t1552*t304*t885;
  t1774 = -1.*t885*t1543*t206;
  t1778 = t1773 + t1774;
  t1782 = t1646*t1766;
  t1783 = t1619*t1778;
  t1785 = t1782 + t1783;
  t1820 = t1549*t885*t206;
  t1821 = 0. + t1539;
  t1826 = -1.*t1821*t243;
  t1830 = 0. + t1820 + t1826;
  t1815 = t1166*t1543;
  t1833 = t1552*t1830;
  t1834 = 0. + t1815 + t1833;
  t1836 = t1605*t1834;
  t1837 = t1552*t1166;
  t1842 = -1.*t1543*t1830;
  t1843 = 0. + t1837 + t1842;
  t1845 = t1619*t1843;
  t1847 = 0. + t1836 + t1845;
  t1799 = t1619*t1766;
  t1804 = t1605*t1778;
  t1809 = t1799 + t1804;
  t1849 = Power(t1847,2);
  t1853 = t1619*t1834;
  t1854 = t1646*t1843;
  t1856 = 0. + t1853 + t1854;
  t1865 = Power(t1856,2);
  t1867 = t1849 + t1865;
  t1868 = 1/t1867;
  t1913 = 0. + t1549;
  t1949 = t885*t1539*t206;
  t1956 = t1913*t243;
  t1963 = 0. + t1949 + t1956;
  t1966 = Power(t1963,2);
  t1967 = t1966 + t1849 + t1865;
  t1975 = 1/t1967;
  t1986 = t1913*t885*t120;
  t1987 = -1.*t1539*t1472;
  t1988 = 0. + t1986 + t1987;
  t1989 = Power(t1988,2);
  t1990 = t1913*t885*t311;
  t1991 = -1.*t1539*t1491;
  t2009 = 0. + t1990 + t1991;
  t2024 = Power(t2009,2);
  t2025 = t1989 + t2024;
  t2039 = 1/t2025;
  t2083 = t485*t885*t120*t206;
  t2084 = -1.*t120*t1196*t243;
  t2086 = t2083 + t2084;
  t2082 = t304*t885*t120*t439;
  t2092 = t501*t2086;
  t2093 = t2082 + t2092;
  t2111 = t501*t304*t885*t120;
  t2112 = -1.*t439*t2086;
  t2113 = t2111 + t2112;
  t2202 = t485*t885*t206*t311;
  t2204 = -1.*t1196*t243*t311;
  t2205 = t2202 + t2204;
  t2191 = t304*t885*t439*t311;
  t2206 = t501*t2205;
  t2207 = t2191 + t2206;
  t2211 = t501*t304*t885*t311;
  t2212 = -1.*t439*t2205;
  t2214 = t2211 + t2212;
  t2259 = -1.*t885*t1196;
  t2272 = -1.*t485*t206*t243;
  t2273 = t2259 + t2272;
  t2256 = -1.*t304*t439*t243;
  t2277 = t501*t2273;
  t2278 = t2256 + t2277;
  t2280 = -1.*t501*t304*t243;
  t2282 = -1.*t439*t2273;
  t2288 = t2280 + t2282;
  t1318 = -1.*t672*t1231;
  t1328 = -1.*t709*t1257;
  t1331 = 0. + t1318 + t1328;
  t2296 = t619*t2278;
  t2298 = t672*t2288;
  t2310 = t2296 + t2298;
  t2315 = t672*t2278;
  t2319 = t709*t2288;
  t2320 = t2315 + t2319;
  t1449 = Sqrt(t1312);
  t1346 = t885*t391*t206;
  t1374 = -1.*t1365*t243;
  t1375 = 0. + t1346 + t1374;
  t1393 = 1/Sqrt(t1312);
  t2179 = t885*t391*t206*t311;
  t2181 = -1.*t1365*t243*t311;
  t2188 = t2179 + t2181;
  t2069 = t885*t120*t391*t206;
  t2073 = -1.*t1365*t120*t243;
  t2080 = t2069 + t2073;
  t1512 = -1.*t1365*t885*t311;
  t1514 = -1.*t391*t1491;
  t1516 = 0. + t1512 + t1514;
  t2388 = t1549*t885*t120*t206;
  t2391 = -1.*t120*t1821*t243;
  t2392 = t2388 + t2391;
  t2387 = t304*t885*t120*t1543;
  t2399 = t1552*t2392;
  t2402 = t2387 + t2399;
  t2417 = t1552*t304*t885*t120;
  t2418 = -1.*t1543*t2392;
  t2421 = t2417 + t2418;
  t2472 = t1549*t885*t206*t311;
  t2479 = -1.*t1821*t243*t311;
  t2484 = t2472 + t2479;
  t2470 = t304*t885*t1543*t311;
  t2486 = t1552*t2484;
  t2487 = t2470 + t2486;
  t2493 = t1552*t304*t885*t311;
  t2497 = -1.*t1543*t2484;
  t2498 = t2493 + t2497;
  t2542 = -1.*t885*t1821;
  t2547 = -1.*t1549*t206*t243;
  t2553 = t2542 + t2547;
  t2541 = -1.*t304*t1543*t243;
  t2556 = t1552*t2553;
  t2559 = t2541 + t2556;
  t2586 = -1.*t1552*t304*t243;
  t2587 = -1.*t1543*t2553;
  t2588 = t2586 + t2587;
  t1883 = -1.*t1619*t1834;
  t1898 = -1.*t1646*t1843;
  t1900 = 0. + t1883 + t1898;
  t2595 = t1605*t2559;
  t2596 = t1619*t2588;
  t2597 = t2595 + t2596;
  t2601 = t1619*t2559;
  t2602 = t1646*t2588;
  t2603 = t2601 + t2602;
  t1978 = Sqrt(t1867);
  t1912 = -1.*t885*t1539*t206;
  t1915 = -1.*t1913*t243;
  t1919 = 0. + t1912 + t1915;
  t1948 = 1/Sqrt(t1867);
  t2464 = -1.*t885*t1539*t206*t311;
  t2467 = -1.*t1913*t243*t311;
  t2468 = t2464 + t2467;
  t2383 = -1.*t885*t120*t1539*t206;
  t2384 = -1.*t1913*t120*t243;
  t2385 = t2383 + t2384;
  t2052 = -1.*t1913*t885*t311;
  t2055 = t1539*t1491;
  t2058 = 0. + t2052 + t2055;
  t2648 = t120*t206;
  t2649 = -1.*t304*t243*t311;
  t2653 = t2648 + t2649;
  t2668 = -1.*t885*t1196*t311;
  t2669 = t485*t747;
  t2677 = t2668 + t2669;
  t2667 = t439*t2653;
  t2678 = t501*t2677;
  t2680 = t2667 + t2678;
  t2686 = t501*t2653;
  t2698 = -1.*t439*t2677;
  t2700 = t2686 + t2698;
  t2754 = t885*t120*t1196;
  t2756 = t485*t1472;
  t2759 = t2754 + t2756;
  t2753 = t439*t415;
  t2760 = t501*t2759;
  t2763 = t2753 + t2760;
  t2768 = t501*t415;
  t2769 = -1.*t439*t2759;
  t2789 = t2768 + t2769;
  t2749 = t1456 + t1475;
  t2657 = t391*t747;
  t2661 = t1512 + t2657;
  t2835 = -1.*t885*t1821*t311;
  t2838 = t1549*t747;
  t2839 = t2835 + t2838;
  t2834 = t1543*t2653;
  t2840 = t1552*t2839;
  t2841 = t2834 + t2840;
  t2877 = t1552*t2653;
  t2879 = -1.*t1543*t2839;
  t2886 = t2877 + t2879;
  t2942 = t885*t120*t1821;
  t2943 = t1549*t1472;
  t2946 = t2942 + t2943;
  t2938 = t1543*t415;
  t2951 = t1552*t2946;
  t2955 = t2938 + t2951;
  t2958 = t1552*t415;
  t2960 = -1.*t1543*t2946;
  t2961 = t2958 + t2960;
  t2923 = t1986 + t1987;
  t2831 = -1.*t1539*t747;
  t2832 = t2052 + t2831;
  t3007 = -1.*t485*t885*t120;
  t3010 = -1.*t391*t1472;
  t3012 = t3007 + t3010;
  t3075 = -1.*t485*t885*t311;
  t3080 = t3075 + t1514;
  t3126 = t485*t243;
  t3134 = t1395 + t3126;
  t3152 = t501*t672*t3134;
  t3153 = -1.*t439*t709*t3134;
  t3162 = t3152 + t3153;
  t3146 = -1.*t672*t439*t3134;
  t3147 = t501*t619*t3134;
  t3148 = t3146 + t3147;
  t3065 = -1.*t885*t391*t311;
  t3070 = t485*t1491;
  t3071 = t3065 + t3070;
  t2999 = -1.*t885*t120*t391;
  t3005 = t2999 + t2756;
  t3199 = 0. + t402 + t412;
  t3202 = 0. + t2754 + t2756;
  t3200 = -1.*t439*t3199;
  t3215 = -1.*t501*t3202;
  t3217 = t3200 + t3215;
  t3219 = t501*t3199;
  t3220 = -1.*t439*t3202;
  t3224 = t3219 + t3220;
  t3262 = 0. + t723 + t724;
  t3265 = t885*t1196*t311;
  t3270 = 0. + t3265 + t3070;
  t3263 = -1.*t439*t3262;
  t3272 = -1.*t501*t3270;
  t3273 = t3263 + t3272;
  t3284 = t501*t3262;
  t3287 = -1.*t439*t3270;
  t3288 = t3284 + t3287;
  t3330 = -1.*t1166*t439;
  t3332 = -1.*t501*t1210;
  t3335 = t3330 + t3332;
  t3342 = t1251 + t1253;
  t3347 = t709*t3335;
  t3348 = t672*t3342;
  t3349 = t3347 + t3348;
  t3361 = t672*t3335;
  t3368 = t619*t3342;
  t3369 = t3361 + t3368;
  t3404 = t439*t3199;
  t3405 = t501*t3202;
  t3406 = 0. + t3404 + t3405;
  t3418 = 0. + t3219 + t3220;
  t3439 = t439*t3262;
  t3440 = t501*t3270;
  t3441 = 0. + t3439 + t3440;
  t3445 = 0. + t3284 + t3287;
  t3483 = -1.*t611*t1231;
  t3489 = t668*t1257;
  t3491 = t3483 + t3489;
  t3503 = -1.*t668*t1231;
  t3505 = -1.*t611*t1257;
  t3509 = t3503 + t3505;
  t3548 = t1549*t885*t120;
  t3552 = t3548 + t1987;
  t3593 = t1549*t885*t311;
  t3594 = t3593 + t1991;
  t3639 = -1.*t1549*t243;
  t3640 = t1912 + t3639;
  t3691 = t1552*t1619*t3640;
  t3693 = -1.*t1543*t1646*t3640;
  t3695 = t3691 + t3693;
  t3680 = -1.*t1619*t1543*t3640;
  t3681 = t1552*t1605*t3640;
  t3682 = t3680 + t3681;
  t3583 = -1.*t885*t1539*t311;
  t3587 = -1.*t1549*t1491;
  t3590 = t3583 + t3587;
  t3538 = -1.*t885*t120*t1539;
  t3540 = -1.*t1549*t1472;
  t3545 = t3538 + t3540;
  t3767 = 0. + t2942 + t2943;
  t3766 = -1.*t1543*t3199;
  t3769 = -1.*t1552*t3767;
  t3776 = t3766 + t3769;
  t3778 = t1552*t3199;
  t3779 = -1.*t1543*t3767;
  t3789 = t3778 + t3779;
  t3847 = t885*t1821*t311;
  t3848 = t1549*t1491;
  t3850 = 0. + t3847 + t3848;
  t3836 = -1.*t1543*t3262;
  t3854 = -1.*t1552*t3850;
  t3855 = t3836 + t3854;
  t3860 = t1552*t3262;
  t3862 = -1.*t1543*t3850;
  t3865 = t3860 + t3862;
  t3891 = -1.*t1166*t1543;
  t3892 = -1.*t1552*t1830;
  t3893 = t3891 + t3892;
  t3901 = t1837 + t1842;
  t3905 = t1646*t3893;
  t3911 = t1619*t3901;
  t3913 = t3905 + t3911;
  t3916 = t1619*t3893;
  t3920 = t1605*t3901;
  t3927 = t3916 + t3920;
  t3944 = t1543*t3199;
  t3946 = t1552*t3767;
  t3947 = 0. + t3944 + t3946;
  t3950 = 0. + t3778 + t3779;
  t3978 = t1543*t3262;
  t3979 = t1552*t3850;
  t3983 = 0. + t3978 + t3979;
  t3992 = 0. + t3860 + t3862;
  t4018 = -1.*t1589*t1834;
  t4020 = t1612*t1843;
  t4024 = t4018 + t4020;
  t4027 = -1.*t1612*t1834;
  t4028 = -1.*t1589*t1843;
  t4033 = t4027 + t4028;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=1.;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=1.;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=1.;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=1.;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=1.;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=1.;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=1.;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=1.;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0.2429*t342 + 0.0329*t391*t415 - 0.2083*t507 - 0.1422*t554 - 0.02*(t507*t619 + t554*t672) - 0.16*(t507*t672 + t554*t709);
  p_output1[61]=0.0329*t391*t731 + 0.2429*t747 - 0.1422*t772 - 0.2083*t795 - 0.02*(t672*t772 + t619*t795) - 0.16*(t709*t772 + t672*t795);
  p_output1[62]=-0.2083*t1009 - 0.16*t1061 - 0.02*t1130 - 0.2429*t206*t885 + 0.0329*t304*t391*t885 - 0.1422*t993;
  p_output1[63]=t1061*t1287*t1313 + t1130*t1313*t1331;
  p_output1[64]=0.5*(2.*t1130*t1287 + 2.*t1061*t1296)*t1375*t1393*t1441 - 1.*t1441*t1449*t304*t391*t885;
  p_output1[65]=t1503*t1516*t391*t415 + t1478*t1503*t391*t731;
  p_output1[66]=-0.2083*t1564 - 0.1422*t1579 - 0.02*(t1564*t1605 + t1579*t1619) - 0.16*(t1564*t1619 + t1579*t1646) - 0.1944*t342 + 0.0329*t1539*t415;
  p_output1[67]=-0.1422*t1693 - 0.2083*t1706 - 0.02*(t1619*t1693 + t1605*t1706) - 0.16*(t1646*t1693 + t1619*t1706) + 0.0329*t1539*t731 - 0.1944*t747;
  p_output1[68]=-0.1422*t1766 - 0.2083*t1778 - 0.16*t1785 - 0.02*t1809 + 0.1944*t206*t885 + 0.0329*t1539*t304*t885;
  p_output1[69]=t1785*t1847*t1868 + t1809*t1868*t1900;
  p_output1[70]=0.5*(2.*t1809*t1847 + 2.*t1785*t1856)*t1919*t1948*t1975 + t1539*t1975*t1978*t304*t885;
  p_output1[71]=-1.*t1539*t2039*t2058*t415 - 1.*t1539*t1988*t2039*t731;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=1.;
  p_output1[77]=0;
  p_output1[78]=0.0329*t2080 - 0.2083*t2093 - 0.1422*t2113 - 0.0817*t120*t243 - 0.02*(t2093*t619 + t2113*t672) - 0.16*(t2093*t672 + t2113*t709) + 0.2429*t120*t304*t885;
  p_output1[79]=0.0329*t2188 - 0.2083*t2207 - 0.1422*t2214 - 0.0817*t243*t311 - 0.02*(t2207*t619 + t2214*t672) - 0.16*(t2207*t672 + t2214*t709) + 0.2429*t304*t311*t885;
  p_output1[80]=-0.2083*t2278 - 0.1422*t2288 - 0.02*t2310 - 0.16*t2320 - 0.2429*t243*t304 - 0.0817*t885 + 0.0329*(-1.*t206*t243*t391 - 1.*t1365*t885);
  p_output1[81]=t1313*t1331*t2310 + t1287*t1313*t2320;
  p_output1[82]=0.5*t1375*t1393*t1441*(2.*t1287*t2310 + 2.*t1296*t2320) + t1441*t1449*(t206*t243*t391 + t1365*t885);
  p_output1[83]=t1503*t1516*t2080 + t1478*t1503*t2188;
  p_output1[84]=-0.0329*t2385 - 0.2083*t2402 - 0.1422*t2421 - 0.02*(t1605*t2402 + t1619*t2421) - 0.16*(t1619*t2402 + t1646*t2421) + 0.0817*t120*t243 - 0.1944*t120*t304*t885;
  p_output1[85]=-0.0329*t2468 - 0.2083*t2487 - 0.1422*t2498 - 0.02*(t1605*t2487 + t1619*t2498) - 0.16*(t1619*t2487 + t1646*t2498) + 0.0817*t243*t311 - 0.1944*t304*t311*t885;
  p_output1[86]=-0.2083*t2559 - 0.1422*t2588 - 0.02*t2597 - 0.16*t2603 + 0.1944*t243*t304 + 0.0817*t885 - 0.0329*(t1539*t206*t243 - 1.*t1913*t885);
  p_output1[87]=t1868*t1900*t2597 + t1847*t1868*t2603;
  p_output1[88]=0.5*t1919*t1948*t1975*(2.*t1847*t2597 + 2.*t1856*t2603) + t1975*t1978*(-1.*t1539*t206*t243 + t1913*t885);
  p_output1[89]=t2039*t2058*t2385 + t1988*t2039*t2468;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=1.;
  p_output1[96]=0.2429*t2653 + 0.0329*t2661 - 0.2083*t2680 - 0.1422*t2700 - 0.02*(t2680*t619 + t2700*t672) - 0.16*(t2680*t672 + t2700*t709) - 0.0817*t311*t885;
  p_output1[97]=0.0329*t2749 - 0.2083*t2763 - 0.1422*t2789 + 0.2429*t415 - 0.02*(t2763*t619 + t2789*t672) - 0.16*(t2763*t672 + t2789*t709) + 0.0817*t120*t885;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=t1503*t1516*t2661 + t1478*t1503*t2749;
  p_output1[102]=-0.1944*t2653 - 0.0329*t2832 - 0.2083*t2841 - 0.1422*t2886 - 0.02*(t1605*t2841 + t1619*t2886) - 0.16*(t1619*t2841 + t1646*t2886) + 0.0817*t311*t885;
  p_output1[103]=-0.0329*t2923 - 0.2083*t2955 - 0.1422*t2961 - 0.02*(t1605*t2955 + t1619*t2961) - 0.16*(t1619*t2955 + t1646*t2961) - 0.1944*t415 - 0.0817*t120*t885;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=t2039*t2058*t2832 + t1988*t2039*t2923;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0.0329*t3005 + 0.1422*t3012*t439 - 0.2083*t3012*t501 - 0.02*(t3012*t501*t619 - 1.*t3012*t439*t672) - 0.16*(t3012*t501*t672 - 1.*t3012*t439*t709);
  p_output1[169]=0.0329*t3071 + 0.1422*t3080*t439 - 0.2083*t3080*t501 - 0.02*(t3080*t501*t619 - 1.*t3080*t439*t672) - 0.16*(t3080*t501*t672 - 1.*t3080*t439*t709);
  p_output1[170]=-0.02*t3148 - 0.16*t3162 + 0.0329*(t1186 + t243*t391) + 0.1422*t3134*t439 - 0.2083*t3134*t501;
  p_output1[171]=t1313*t1331*t3148 + t1287*t1313*t3162;
  p_output1[172]=0.5*t1375*t1393*t1441*(2.*t1287*t3148 + 2.*t1296*t3162) + t1441*t1449*(-1.*t243*t391 - 1.*t206*t485*t885);
  p_output1[173]=t1503*t1516*t3005 + t1478*t1503*t3071;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=-0.1422*t3217 - 0.2083*t3224 - 0.02*(t3224*t619 + t3217*t672) - 0.16*(t3224*t672 + t3217*t709);
  p_output1[187]=-0.1422*t3273 - 0.2083*t3288 - 0.02*(t3288*t619 + t3273*t672) - 0.16*(t3288*t672 + t3273*t709);
  p_output1[188]=-0.1422*t3335 - 0.2083*t3342 - 0.16*t3349 - 0.02*t3369;
  p_output1[189]=t1287*t1313*t3349 + t1313*t1331*t3369;
  p_output1[190]=0.5*t1375*t1393*t1441*(2.*t1296*t3349 + 2.*t1287*t3369);
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=-0.02*(-1.*t3418*t611 - 1.*t3406*t668) - 0.16*(-1.*t3406*t611 + t3418*t668);
  p_output1[205]=-0.02*(-1.*t3445*t611 - 1.*t3441*t668) - 0.16*(-1.*t3441*t611 + t3445*t668);
  p_output1[206]=-0.16*t3491 - 0.02*t3509;
  p_output1[207]=t1287*t1313*t3491 + t1313*t1331*t3509;
  p_output1[208]=0.5*t1375*t1393*t1441*(2.*t1296*t3491 + 2.*t1287*t3509);
  p_output1[209]=0;
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=-0.0329*t3545 + 0.1422*t1543*t3552 - 0.2083*t1552*t3552 - 0.02*(t1552*t1605*t3552 - 1.*t1543*t1619*t3552) - 0.16*(t1552*t1619*t3552 - 1.*t1543*t1646*t3552);
  p_output1[229]=-0.0329*t3590 + 0.1422*t1543*t3594 - 0.2083*t1552*t3594 - 0.02*(t1552*t1605*t3594 - 1.*t1543*t1619*t3594) - 0.16*(t1552*t1619*t3594 - 1.*t1543*t1646*t3594);
  p_output1[230]=0.1422*t1543*t3640 - 0.2083*t1552*t3640 - 0.02*t3682 - 0.16*t3695 - 0.0329*(t1539*t243 - 1.*t1549*t206*t885);
  p_output1[231]=t1868*t1900*t3682 + t1847*t1868*t3695;
  p_output1[232]=t1975*t1978*(t1820 - 1.*t1539*t243) + 0.5*t1919*t1948*t1975*(2.*t1847*t3682 + 2.*t1856*t3695);
  p_output1[233]=t2039*t2058*t3545 + t1988*t2039*t3590;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=-0.1422*t3776 - 0.2083*t3789 - 0.02*(t1619*t3776 + t1605*t3789) - 0.16*(t1646*t3776 + t1619*t3789);
  p_output1[247]=-0.1422*t3855 - 0.2083*t3865 - 0.02*(t1619*t3855 + t1605*t3865) - 0.16*(t1646*t3855 + t1619*t3865);
  p_output1[248]=-0.1422*t3893 - 0.2083*t3901 - 0.16*t3913 - 0.02*t3927;
  p_output1[249]=t1847*t1868*t3913 + t1868*t1900*t3927;
  p_output1[250]=0.5*t1919*t1948*t1975*(2.*t1856*t3913 + 2.*t1847*t3927);
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=-0.02*(-1.*t1612*t3947 - 1.*t1589*t3950) - 0.16*(-1.*t1589*t3947 + t1612*t3950);
  p_output1[265]=-0.02*(-1.*t1612*t3983 - 1.*t1589*t3992) - 0.16*(-1.*t1589*t3983 + t1612*t3992);
  p_output1[266]=-0.16*t4024 - 0.02*t4033;
  p_output1[267]=t1847*t1868*t4024 + t1868*t1900*t4033;
  p_output1[268]=0.5*t1919*t1948*t1975*(2.*t1856*t4024 + 2.*t1847*t4033);
  p_output1[269]=0;
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_hc_2_func_fully.hh"

namespace SymFunction
{

void j_hc_2_func_fully_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
