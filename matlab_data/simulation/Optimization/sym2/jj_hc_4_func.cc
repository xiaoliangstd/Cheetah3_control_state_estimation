/*
 * Automatically Generated from Mathematica.
 * Sat 7 Dec 2019 21:23:16 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t65;
  double t89;
  double t51;
  double t253;
  double t421;
  double t653;
  double t479;
  double t618;
  double t659;
  double t684;
  double t723;
  double t768;
  double t823;
  double t1114;
  double t1211;
  double t1007;
  double t140;
  double t1534;
  double t1625;
  double t1673;
  double t1737;
  double t1348;
  double t1387;
  double t1106;
  double t1769;
  double t2417;
  double t2435;
  double t2454;
  double t2468;
  double t2404;
  double t2520;
  double t2599;
  double t2685;
  double t2701;
  double t2708;
  double t2831;
  double t2841;
  double t2847;
  double t3132;
  double t3137;
  double t3143;
  double t3128;
  double t3167;
  double t3179;
  double t3255;
  double t3273;
  double t3280;
  double t3345;
  double t3073;
  double t3460;
  double t3461;
  double t3497;
  double t3458;
  double t3498;
  double t3511;
  double t3567;
  double t3571;
  double t3573;
  double t1738;
  double t1768;
  double t1816;
  double t1876;
  double t1904;
  double t1916;
  double t1929;
  double t2039;
  double t2044;
  double t2117;
  double t2174;
  double t2178;
  double t2228;
  double t2340;
  double t3708;
  double t3711;
  double t3714;
  double t3837;
  double t3839;
  double t3840;
  double t3848;
  double t3858;
  double t3867;
  double t3879;
  double t3885;
  double t3889;
  double t4073;
  double t4085;
  double t4086;
  double t4095;
  double t4096;
  double t4097;
  double t235;
  double t392;
  double t696;
  double t983;
  double t1110;
  double t1261;
  double t1298;
  double t1305;
  double t1311;
  double t1393;
  double t1444;
  double t1489;
  double t1490;
  double t3725;
  double t3728;
  double t3737;
  double t3744;
  double t3747;
  double t3756;
  double t3759;
  double t3769;
  double t3775;
  double t3787;
  double t3799;
  double t3828;
  double t4132;
  double t4136;
  double t4137;
  double t4147;
  double t4149;
  double t4156;
  double t4188;
  double t4195;
  double t4197;
  double t4204;
  double t4205;
  double t4206;
  double t4248;
  double t4262;
  double t4269;
  double t4279;
  double t4289;
  double t4290;
  double t4324;
  double t4327;
  double t4328;
  double t4371;
  double t4372;
  double t4373;
  double t4377;
  double t4383;
  double t4385;
  double t4393;
  double t4397;
  double t4398;
  double t4405;
  double t4406;
  double t4409;
  double t2679;
  double t2709;
  double t2745;
  double t2774;
  double t2790;
  double t2794;
  double t2796;
  double t2800;
  double t2802;
  double t2806;
  double t2820;
  double t4016;
  double t4019;
  double t4020;
  double t4024;
  double t4025;
  double t4027;
  double t4028;
  double t4033;
  double t4034;
  double t4037;
  double t4041;
  double t4278;
  double t4293;
  double t4294;
  double t4296;
  double t4297;
  double t4298;
  double t4312;
  double t4314;
  double t4316;
  double t4320;
  double t4321;
  double t4456;
  double t4465;
  double t4468;
  double t4471;
  double t4457;
  double t4474;
  double t4477;
  double t4480;
  double t4487;
  double t4488;
  double t4527;
  double t4528;
  double t4537;
  double t4087;
  double t4586;
  double t4587;
  double t4584;
  double t4591;
  double t4598;
  double t4613;
  double t4617;
  double t4618;
  double t3397;
  double t3401;
  double t3406;
  double t3410;
  double t3428;
  double t3451;
  double t3547;
  double t3613;
  double t3615;
  double t3617;
  double t3618;
  double t3625;
  double t3632;
  double t3641;
  double t3661;
  double t3677;
  double t3678;
  double t4060;
  double t4089;
  double t4093;
  double t4098;
  double t4099;
  double t4101;
  double t4102;
  double t4106;
  double t4107;
  double t4110;
  double t4112;
  double t4115;
  double t4120;
  double t4123;
  double t4375;
  double t4392;
  double t4404;
  double t4415;
  double t4420;
  double t4421;
  double t4422;
  double t4424;
  double t4425;
  double t4426;
  double t4428;
  double t4430;
  double t4432;
  double t3037;
  double t4185;
  double t3092;
  double t4669;
  double t4674;
  double t4678;
  double t4683;
  double t4688;
  double t4699;
  double t4605;
  double t4619;
  double t4621;
  double t4622;
  double t4623;
  double t4624;
  double t4633;
  double t4637;
  double t4642;
  double t4646;
  double t4648;
  double t4765;
  double t4766;
  double t4769;
  double t2872;
  double t2873;
  double t2874;
  double t2913;
  double t2919;
  double t2922;
  double t2929;
  double t2935;
  double t3017;
  double t3957;
  double t3958;
  double t3959;
  double t3960;
  double t3967;
  double t3970;
  double t3981;
  double t3997;
  double t4009;
  double t4331;
  double t4332;
  double t4334;
  double t4335;
  double t4336;
  double t4360;
  double t4361;
  double t4365;
  double t4367;
  double t4479;
  double t4489;
  double t4490;
  double t4496;
  double t4501;
  double t4506;
  double t4507;
  double t4510;
  double t4516;
  double t4865;
  double t4913;
  double t4914;
  double t4928;
  double t4774;
  double t4775;
  double t4776;
  double t4778;
  double t4787;
  double t4793;
  double t4794;
  double t4795;
  double t4799;
  double t4965;
  double t4966;
  double t4978;
  double t4980;
  double t4983;
  double t4984;
  double t5027;
  double t5035;
  double t5041;
  double t5105;
  double t5119;
  double t5120;
  double t5122;
  double t5123;
  double t5125;
  double t5153;
  double t5154;
  double t5159;
  double t5215;
  double t5219;
  double t5224;
  double t5240;
  double t5272;
  double t5273;
  double t5042;
  double t5043;
  double t5044;
  double t5045;
  double t5050;
  double t5054;
  double t5055;
  double t5058;
  double t5059;
  double t5060;
  double t5062;
  double t5063;
  double t5367;
  double t5368;
  double t5375;
  double t5376;
  double t5378;
  double t4960;
  double t4961;
  double t4979;
  double t4989;
  double t4994;
  double t4996;
  double t4997;
  double t5002;
  double t5005;
  double t5006;
  double t5007;
  double t5008;
  double t5019;
  double t5274;
  double t5279;
  double t5280;
  double t5281;
  double t5284;
  double t5285;
  double t5294;
  double t5304;
  double t5305;
  double t5306;
  double t5307;
  double t5309;
  double t5311;
  double t5316;
  double t5317;
  double t5514;
  double t5518;
  double t5519;
  double t5520;
  double t5522;
  double t5523;
  double t5524;
  double t5549;
  double t5553;
  double t5554;
  double t5602;
  double t5603;
  double t5598;
  double t5604;
  double t5605;
  double t5607;
  double t5608;
  double t5609;
  double t5469;
  double t5475;
  double t5477;
  double t5478;
  double t5482;
  double t5483;
  double t5484;
  double t5485;
  double t5486;
  double t5487;
  double t5490;
  double t5491;
  double t5496;
  double t5498;
  double t5504;
  double t5508;
  double t5323;
  double t5324;
  double t5325;
  double t5333;
  double t5334;
  double t5337;
  double t5338;
  double t5340;
  double t5342;
  double t5343;
  double t5345;
  double t5348;
  double t5350;
  double t5074;
  double t5078;
  double t5079;
  double t5083;
  double t5086;
  double t5087;
  double t5089;
  double t5090;
  double t5091;
  double t5092;
  double t5094;
  double t5099;
  double t5658;
  double t5653;
  double t5659;
  double t5660;
  double t5668;
  double t5669;
  double t5679;
  double t5710;
  double t5711;
  double t5712;
  double t5588;
  double t5208;
  double t5590;
  double t5555;
  double t5557;
  double t5558;
  double t5559;
  double t5560;
  double t5562;
  double t5564;
  double t5566;
  double t5569;
  double t5152;
  double t5160;
  double t5171;
  double t5186;
  double t5187;
  double t5188;
  double t5192;
  double t5193;
  double t5194;
  double t5407;
  double t5409;
  double t5410;
  double t5413;
  double t5414;
  double t5420;
  double t5423;
  double t5434;
  double t5436;
  double t5713;
  double t5715;
  double t5717;
  double t5719;
  double t5723;
  double t5724;
  double t5725;
  double t5726;
  double t5727;
  double t5759;
  double t5761;
  double t5762;
  double t5763;
  double t5760;
  double t5764;
  double t5765;
  double t5770;
  double t5772;
  double t5774;
  double t5786;
  double t5787;
  double t5788;
  double t5790;
  double t5521;
  double t5525;
  double t5526;
  double t5527;
  double t5528;
  double t5530;
  double t5531;
  double t5536;
  double t5537;
  double t5541;
  double t5543;
  double t5121;
  double t5126;
  double t5127;
  double t5128;
  double t5134;
  double t5137;
  double t5138;
  double t5142;
  double t5143;
  double t5147;
  double t5150;
  double t5438;
  double t5440;
  double t5442;
  double t5443;
  double t5444;
  double t5445;
  double t5447;
  double t5448;
  double t5453;
  double t5459;
  double t5461;
  double t5661;
  double t5680;
  double t5685;
  double t5686;
  double t5687;
  double t5688;
  double t5689;
  double t5691;
  double t5692;
  double t5706;
  double t5707;
  double t5766;
  double t5776;
  double t5777;
  double t5778;
  double t5779;
  double t5781;
  double t5782;
  double t5783;
  double t5784;
  double t5821;
  double t5822;
  double t5824;
  double t5860;
  double t5864;
  double t5865;
  double t5901;
  double t5902;
  double t5903;
  double t5926;
  double t5927;
  double t5928;
  double t5847;
  double t5848;
  double t5849;
  double t5850;
  double t5851;
  double t5852;
  double t5853;
  double t5854;
  double t5855;
  double t5856;
  double t5857;
  double t5858;
  double t5951;
  double t5952;
  double t5953;
  double t5956;
  double t5957;
  double t5958;
  double t5969;
  double t5970;
  double t5971;
  double t5994;
  double t5996;
  double t5998;
  double t6000;
  double t6001;
  double t6002;
  double t6017;
  double t6018;
  double t6019;
  double t6021;
  double t6022;
  double t6023;
  double t5968;
  double t5972;
  double t5973;
  double t5975;
  double t5976;
  double t5981;
  double t5985;
  double t5986;
  double t5987;
  double t5989;
  double t5990;
  double t5879;
  double t5880;
  double t5881;
  double t5884;
  double t5885;
  double t5886;
  double t5889;
  double t5890;
  double t5891;
  double t5892;
  double t5893;
  double t6041;
  double t6042;
  double t6044;
  double t6050;
  double t6051;
  double t6043;
  double t6053;
  double t6054;
  double t6056;
  double t6057;
  double t6058;
  double t6073;
  double t6075;
  double t6077;
  double t5920;
  double t6090;
  double t6091;
  double t6089;
  double t6092;
  double t6094;
  double t6097;
  double t6099;
  double t6100;
  double t5919;
  double t5921;
  double t5922;
  double t5931;
  double t5932;
  double t5933;
  double t5934;
  double t5935;
  double t5936;
  double t5937;
  double t5938;
  double t5939;
  double t5940;
  double t5941;
  double t6014;
  double t6016;
  double t6020;
  double t6024;
  double t6025;
  double t6026;
  double t6027;
  double t6028;
  double t6029;
  double t6030;
  double t6031;
  double t6032;
  double t6033;
  double t5992;
  double t6130;
  double t6131;
  double t6132;
  double t6133;
  double t6135;
  double t6136;
  double t6096;
  double t6101;
  double t6102;
  double t6104;
  double t6105;
  double t6106;
  double t6107;
  double t6108;
  double t6109;
  double t6110;
  double t6115;
  double t6152;
  double t6153;
  double t6154;
  double t5955;
  double t5959;
  double t5960;
  double t5961;
  double t5962;
  double t5963;
  double t5964;
  double t5965;
  double t5966;
  double t5866;
  double t5869;
  double t5870;
  double t5872;
  double t5873;
  double t5874;
  double t5875;
  double t5876;
  double t5877;
  double t6055;
  double t6059;
  double t6062;
  double t6063;
  double t6066;
  double t6067;
  double t6068;
  double t6069;
  double t6070;
  double t6171;
  double t6172;
  double t6173;
  double t6175;
  double t6155;
  double t6156;
  double t6157;
  double t6158;
  double t6159;
  double t6160;
  double t6161;
  double t6162;
  double t6163;
  t65 = Cos(var1[4]);
  t89 = Cos(var1[5]);
  t51 = Cos(var1[3]);
  t253 = Sin(var1[3]);
  t421 = Cos(var1[15]);
  t653 = Cos(var1[16]);
  t479 = Sin(var1[16]);
  t618 = -1.*t421*t51*t65*t89*t479;
  t659 = -1.*t653*t65*t89*t253;
  t684 = t618 + t659;
  t723 = t421*t653*t51*t65*t89;
  t768 = -1.*t65*t89*t479*t253;
  t823 = t723 + t768;
  t1114 = Cos(var1[17]);
  t1211 = 0. + t1114;
  t1007 = Sin(var1[17]);
  t140 = Sin(var1[15]);
  t1534 = -1.*t65*t89*t140*t253;
  t1625 = Sin(var1[4]);
  t1673 = t421*t89*t1625;
  t1737 = t1534 + t1673;
  t1348 = -1.*t1007;
  t1387 = 0. + t1348;
  t1106 = 0. + t1007;
  t1769 = t421*t65*t89*t253;
  t2417 = -1.*t140;
  t2435 = 0. + t2417;
  t2454 = -1.*t89*t2435*t1625;
  t2468 = t1769 + t2454;
  t2404 = -1.*t51*t65*t89*t479;
  t2520 = -1.*t653*t2468;
  t2599 = t2404 + t2520;
  t2685 = t653*t51*t65*t89;
  t2701 = -1.*t479*t2468;
  t2708 = t2685 + t2701;
  t2831 = t51*t65*t89*t479;
  t2841 = t653*t2468;
  t2847 = t2831 + t2841;
  t3132 = -1.*t65*t89*t2435;
  t3137 = -1.*t421*t89*t253*t1625;
  t3143 = t3132 + t3137;
  t3128 = -1.*t51*t89*t479*t1625;
  t3167 = t653*t3143;
  t3179 = t3128 + t3167;
  t3255 = -1.*t653*t51*t89*t1625;
  t3273 = -1.*t479*t3143;
  t3280 = t3255 + t3273;
  t3345 = Sin(var1[5]);
  t3073 = 0. + t421;
  t3460 = -1.*t421*t65*t253*t3345;
  t3461 = t2435*t1625*t3345;
  t3497 = t3460 + t3461;
  t3458 = -1.*t51*t65*t479*t3345;
  t3498 = t653*t3497;
  t3511 = t3458 + t3498;
  t3567 = -1.*t653*t51*t65*t3345;
  t3571 = -1.*t479*t3497;
  t3573 = t3567 + t3571;
  t1738 = -0.2083*t653*t1737;
  t1768 = 0.1422*t479*t1737;
  t1816 = t89*t140*t1625;
  t1876 = t1769 + t1816;
  t1904 = 0.035199999999999995*t1876;
  t1916 = -1.*t1211*t479*t1737;
  t1929 = t653*t1387*t1737;
  t2039 = t1916 + t1929;
  t2044 = -0.02*t2039;
  t2117 = t653*t1211*t1737;
  t2174 = -1.*t479*t1106*t1737;
  t2178 = t2117 + t2174;
  t2228 = -0.16*t2178;
  t2340 = t1738 + t1768 + t1904 + t2044 + t2228;
  t3708 = t51*t89*t1625;
  t3711 = t253*t3345;
  t3714 = t3708 + t3711;
  t3837 = t65*t89*t140;
  t3839 = t89*t253*t1625;
  t3840 = -1.*t51*t3345;
  t3848 = t3839 + t3840;
  t3858 = -1.*t421*t3848;
  t3867 = t3837 + t3858;
  t3879 = -1.*t421*t65*t89;
  t3885 = -1.*t140*t3848;
  t3889 = t3879 + t3885;
  t4073 = -1.*t51*t89;
  t4085 = -1.*t253*t1625*t3345;
  t4086 = t4073 + t4085;
  t4095 = t421*t65*t3345;
  t4096 = -1.*t140*t4086;
  t4097 = t4095 + t4096;
  t235 = 0.035199999999999995*t51*t65*t89*t140;
  t392 = 0.1944*t65*t89*t253;
  t696 = -0.1422*t684;
  t983 = -0.2083*t823;
  t1110 = t1106*t684;
  t1261 = t1211*t823;
  t1298 = t1110 + t1261;
  t1305 = -0.16*t1298;
  t1311 = t1211*t684;
  t1393 = t1387*t823;
  t1444 = t1311 + t1393;
  t1489 = -0.02*t1444;
  t1490 = t235 + t392 + t696 + t983 + t1305 + t1489;
  t3725 = 0.035199999999999995*t421*t3714;
  t3728 = 0.2083*t653*t140*t3714;
  t3737 = -0.1422*t140*t479*t3714;
  t3744 = t1211*t140*t479*t3714;
  t3747 = -1.*t653*t140*t1387*t3714;
  t3756 = t3744 + t3747;
  t3759 = -0.02*t3756;
  t3769 = -1.*t653*t1211*t140*t3714;
  t3775 = t140*t479*t1106*t3714;
  t3787 = t3769 + t3775;
  t3799 = -0.16*t3787;
  t3828 = t3725 + t3728 + t3737 + t3759 + t3799;
  t4132 = -1.*t89*t253*t1625;
  t4136 = t51*t3345;
  t4137 = t4132 + t4136;
  t4147 = -1.*t51*t89*t1625;
  t4149 = -1.*t253*t3345;
  t4156 = t4147 + t4149;
  t4188 = -1.*t421*t479*t4137;
  t4195 = t653*t4156;
  t4197 = t4188 + t4195;
  t4204 = t421*t653*t4137;
  t4205 = t479*t4156;
  t4206 = t4204 + t4205;
  t4248 = -1.*t479*t4137;
  t4262 = -1.*t421*t653*t3714;
  t4269 = t4248 + t4262;
  t4279 = t653*t4137;
  t4289 = -1.*t421*t479*t3714;
  t4290 = t4279 + t4289;
  t4324 = t479*t4137;
  t4327 = t421*t653*t3714;
  t4328 = t4324 + t4327;
  t4371 = t89*t253;
  t4372 = -1.*t51*t1625*t3345;
  t4373 = t4371 + t4372;
  t4377 = t51*t89;
  t4383 = t253*t1625*t3345;
  t4385 = t4377 + t4383;
  t4393 = -1.*t421*t479*t4373;
  t4397 = t653*t4385;
  t4398 = t4393 + t4397;
  t4405 = t421*t653*t4373;
  t4406 = t479*t4385;
  t4409 = t4405 + t4406;
  t2679 = -0.1422*t2599;
  t2709 = -0.2083*t2708;
  t2745 = t1106*t2599;
  t2774 = t1211*t2708;
  t2790 = t2745 + t2774;
  t2794 = -0.16*t2790;
  t2796 = t1211*t2599;
  t2800 = t1387*t2708;
  t2802 = t2796 + t2800;
  t2806 = -0.02*t2802;
  t2820 = t2679 + t2709 + t2794 + t2806;
  t4016 = 0.1422*t653*t3889;
  t4019 = 0.2083*t479*t3889;
  t4020 = -1.*t653*t1211*t3889;
  t4024 = -1.*t479*t1387*t3889;
  t4025 = t4020 + t4024;
  t4027 = -0.02*t4025;
  t4028 = -1.*t1211*t479*t3889;
  t4033 = -1.*t653*t1106*t3889;
  t4034 = t4028 + t4033;
  t4037 = -0.16*t4034;
  t4041 = t4016 + t4019 + t4027 + t4037;
  t4278 = -0.1422*t4269;
  t4293 = -0.2083*t4290;
  t4294 = t1106*t4269;
  t4296 = t1211*t4290;
  t4297 = t4294 + t4296;
  t4298 = -0.16*t4297;
  t4312 = t1211*t4269;
  t4314 = t1387*t4290;
  t4316 = t4312 + t4314;
  t4320 = -0.02*t4316;
  t4321 = t4278 + t4293 + t4298 + t4320;
  t4456 = 0. + t3708 + t3711;
  t4465 = t65*t89*t2435;
  t4468 = t421*t3848;
  t4471 = 0. + t4465 + t4468;
  t4457 = -1.*t479*t4456;
  t4474 = -1.*t653*t4471;
  t4477 = t4457 + t4474;
  t4480 = t653*t4456;
  t4487 = -1.*t479*t4471;
  t4488 = t4480 + t4487;
  t4527 = -1.*t653*t4456;
  t4528 = t479*t4471;
  t4537 = t4527 + t4528;
  t4087 = t421*t4086;
  t4586 = -1.*t65*t2435*t3345;
  t4587 = t4586 + t4087;
  t4584 = -1.*t479*t4373;
  t4591 = -1.*t653*t4587;
  t4598 = t4584 + t4591;
  t4613 = t653*t4373;
  t4617 = -1.*t479*t4587;
  t4618 = t4613 + t4617;
  t3397 = 0.1944*t51*t65*t3345;
  t3401 = 0.0817*t1625*t3345;
  t3406 = -1.*t65*t140*t253*t3345;
  t3410 = t3073*t1625*t3345;
  t3428 = t3406 + t3410;
  t3451 = 0.035199999999999995*t3428;
  t3547 = -0.2083*t3511;
  t3613 = -0.1422*t3573;
  t3615 = t1387*t3511;
  t3617 = t1211*t3573;
  t3618 = t3615 + t3617;
  t3625 = -0.02*t3618;
  t3632 = t1211*t3511;
  t3641 = t1106*t3573;
  t3661 = t3632 + t3641;
  t3677 = -0.16*t3661;
  t3678 = t3397 + t3401 + t3451 + t3547 + t3613 + t3625 + t3677;
  t4060 = t65*t140*t3345;
  t4089 = t4060 + t4087;
  t4093 = 0.035199999999999995*t4089;
  t4098 = -0.2083*t653*t4097;
  t4099 = 0.1422*t479*t4097;
  t4101 = -1.*t1211*t479*t4097;
  t4102 = t653*t1387*t4097;
  t4106 = t4101 + t4102;
  t4107 = -0.02*t4106;
  t4110 = t653*t1211*t4097;
  t4112 = -1.*t479*t1106*t4097;
  t4115 = t4110 + t4112;
  t4120 = -0.16*t4115;
  t4123 = t4093 + t4098 + t4099 + t4107 + t4120;
  t4375 = 0.035199999999999995*t140*t4373;
  t4392 = -0.1944*t4385;
  t4404 = -0.1422*t4398;
  t4415 = -0.2083*t4409;
  t4420 = t1106*t4398;
  t4421 = t1211*t4409;
  t4422 = t4420 + t4421;
  t4424 = -0.16*t4422;
  t4425 = t1211*t4398;
  t4426 = t1387*t4409;
  t4428 = t4425 + t4426;
  t4430 = -0.02*t4428;
  t4432 = t4375 + t4392 + t4404 + t4415 + t4424 + t4430;
  t3037 = -0.0817*t65*t89;
  t4185 = -0.1944*t4156;
  t3092 = -1.*t3073*t65*t89;
  t4669 = t421*t4137;
  t4674 = t3132 + t4669;
  t4678 = t653*t4674;
  t4683 = t4205 + t4678;
  t4688 = -1.*t479*t4674;
  t4699 = t4195 + t4688;
  t4605 = -0.1422*t4598;
  t4619 = -0.2083*t4618;
  t4621 = t1106*t4598;
  t4622 = t1211*t4618;
  t4623 = t4621 + t4622;
  t4624 = -0.16*t4623;
  t4633 = t1211*t4598;
  t4637 = t1387*t4618;
  t4642 = t4633 + t4637;
  t4646 = -0.02*t4642;
  t4648 = t4605 + t4619 + t4624 + t4646;
  t4765 = t479*t4373;
  t4766 = t653*t4587;
  t4769 = t4765 + t4766;
  t2872 = -1.*t1007*t2847;
  t2873 = t1114*t2708;
  t2874 = t2872 + t2873;
  t2913 = -0.16*t2874;
  t2919 = -1.*t1114*t2847;
  t2922 = -1.*t1007*t2708;
  t2929 = t2919 + t2922;
  t2935 = -0.02*t2929;
  t3017 = t2913 + t2935;
  t3957 = -1.*t1114*t479*t3889;
  t3958 = -1.*t653*t1007*t3889;
  t3959 = t3957 + t3958;
  t3960 = -0.16*t3959;
  t3967 = -1.*t653*t1114*t3889;
  t3970 = t479*t1007*t3889;
  t3981 = t3967 + t3970;
  t3997 = -0.02*t3981;
  t4009 = t3960 + t3997;
  t4331 = -1.*t1007*t4328;
  t4332 = t1114*t4290;
  t4334 = t4331 + t4332;
  t4335 = -0.16*t4334;
  t4336 = -1.*t1114*t4328;
  t4360 = -1.*t1007*t4290;
  t4361 = t4336 + t4360;
  t4365 = -0.02*t4361;
  t4367 = t4335 + t4365;
  t4479 = -1.*t1007*t4477;
  t4489 = -1.*t1114*t4488;
  t4490 = t4479 + t4489;
  t4496 = -0.02*t4490;
  t4501 = t1114*t4477;
  t4506 = -1.*t1007*t4488;
  t4507 = t4501 + t4506;
  t4510 = -0.16*t4507;
  t4516 = t4496 + t4510;
  t4865 = t479*t4456;
  t4913 = t653*t4471;
  t4914 = 0. + t4865 + t4913;
  t4928 = 0. + t4480 + t4487;
  t4774 = -1.*t1007*t4769;
  t4775 = t1114*t4618;
  t4776 = t4774 + t4775;
  t4778 = -0.16*t4776;
  t4787 = -1.*t1114*t4769;
  t4793 = -1.*t1007*t4618;
  t4794 = t4787 + t4793;
  t4795 = -0.02*t4794;
  t4799 = t4778 + t4795;
  t4965 = -1.*t421*t51*t65*t479*t3345;
  t4966 = -1.*t653*t65*t253*t3345;
  t4978 = t4965 + t4966;
  t4980 = t421*t653*t51*t65*t3345;
  t4983 = -1.*t65*t479*t253*t3345;
  t4984 = t4980 + t4983;
  t5027 = -1.*t89*t253;
  t5035 = t51*t1625*t3345;
  t5041 = t5027 + t5035;
  t5105 = -1.*t421*t479*t5041;
  t5119 = t653*t4086;
  t5120 = t5105 + t5119;
  t5122 = -1.*t421*t653*t5041;
  t5123 = -1.*t479*t4086;
  t5125 = t5122 + t5123;
  t5153 = t421*t653*t5041;
  t5154 = t479*t4086;
  t5159 = t5153 + t5154;
  t5215 = t421*t653*t4086;
  t5219 = t4765 + t5215;
  t5224 = -1.*t421*t479*t4086;
  t5240 = t4613 + t5224;
  t5272 = t421*t1625*t3345;
  t5273 = t3406 + t5272;
  t5042 = 0.035199999999999995*t421*t5041;
  t5043 = 0.2083*t653*t140*t5041;
  t5044 = -0.1422*t140*t479*t5041;
  t5045 = t1211*t140*t479*t5041;
  t5050 = -1.*t653*t140*t1387*t5041;
  t5054 = t5045 + t5050;
  t5055 = -0.02*t5054;
  t5058 = -1.*t653*t1211*t140*t5041;
  t5059 = t140*t479*t1106*t5041;
  t5060 = t5058 + t5059;
  t5062 = -0.16*t5060;
  t5063 = t5042 + t5043 + t5044 + t5055 + t5062;
  t5367 = -1.*t421*t4385;
  t5368 = t4060 + t5367;
  t5375 = -1.*t421*t65*t3345;
  t5376 = -1.*t140*t4385;
  t5378 = t5375 + t5376;
  t4960 = 0.035199999999999995*t51*t65*t140*t3345;
  t4961 = 0.1944*t65*t253*t3345;
  t4979 = -0.1422*t4978;
  t4989 = -0.2083*t4984;
  t4994 = t1106*t4978;
  t4996 = t1211*t4984;
  t4997 = t4994 + t4996;
  t5002 = -0.16*t4997;
  t5005 = t1211*t4978;
  t5006 = t1387*t4984;
  t5007 = t5005 + t5006;
  t5008 = -0.02*t5007;
  t5019 = t4960 + t4961 + t4979 + t4989 + t5002 + t5008;
  t5274 = -0.2083*t653*t5273;
  t5279 = 0.1422*t479*t5273;
  t5280 = t421*t65*t253*t3345;
  t5281 = t140*t1625*t3345;
  t5284 = t5280 + t5281;
  t5285 = 0.035199999999999995*t5284;
  t5294 = -1.*t1211*t479*t5273;
  t5304 = t653*t1387*t5273;
  t5305 = t5294 + t5304;
  t5306 = -0.02*t5305;
  t5307 = t653*t1211*t5273;
  t5309 = -1.*t479*t1106*t5273;
  t5311 = t5307 + t5309;
  t5316 = -0.16*t5311;
  t5317 = t5274 + t5279 + t5285 + t5306 + t5316;
  t5514 = -1.*t2435*t1625*t3345;
  t5518 = t5280 + t5514;
  t5519 = -1.*t653*t5518;
  t5520 = t3458 + t5519;
  t5522 = t653*t51*t65*t3345;
  t5523 = -1.*t479*t5518;
  t5524 = t5522 + t5523;
  t5549 = t51*t65*t479*t3345;
  t5553 = t653*t5518;
  t5554 = t5549 + t5553;
  t5602 = -1.*t421*t253*t1625*t3345;
  t5603 = t4586 + t5602;
  t5598 = -1.*t51*t479*t1625*t3345;
  t5604 = t653*t5603;
  t5605 = t5598 + t5604;
  t5607 = -1.*t653*t51*t1625*t3345;
  t5608 = -1.*t479*t5603;
  t5609 = t5607 + t5608;
  t5469 = -0.1944*t51*t65*t89;
  t5475 = -0.0817*t89*t1625;
  t5477 = t65*t89*t140*t253;
  t5478 = -1.*t3073*t89*t1625;
  t5482 = t5477 + t5478;
  t5483 = 0.035199999999999995*t5482;
  t5484 = -0.2083*t2847;
  t5485 = -0.1422*t2708;
  t5486 = t1387*t2847;
  t5487 = t5486 + t2774;
  t5490 = -0.02*t5487;
  t5491 = t1211*t2847;
  t5496 = t1106*t2708;
  t5498 = t5491 + t5496;
  t5504 = -0.16*t5498;
  t5508 = t5469 + t5475 + t5483 + t5484 + t5485 + t5490 + t5504;
  t5323 = -1.*t65*t89*t140;
  t5324 = t5323 + t4468;
  t5325 = 0.035199999999999995*t5324;
  t5333 = -0.2083*t653*t3889;
  t5334 = 0.1422*t479*t3889;
  t5337 = t653*t1387*t3889;
  t5338 = t4028 + t5337;
  t5340 = -0.02*t5338;
  t5342 = t653*t1211*t3889;
  t5343 = -1.*t479*t1106*t3889;
  t5345 = t5342 + t5343;
  t5348 = -0.16*t5345;
  t5350 = t5325 + t5333 + t5334 + t5340 + t5348;
  t5074 = -0.1944*t4137;
  t5078 = 0.035199999999999995*t140*t3714;
  t5079 = -0.2083*t4328;
  t5083 = -0.1422*t4290;
  t5086 = t1387*t4328;
  t5087 = t5086 + t4296;
  t5089 = -0.02*t5087;
  t5090 = t1211*t4328;
  t5091 = t1106*t4290;
  t5092 = t5090 + t5091;
  t5094 = -0.16*t5092;
  t5099 = t5074 + t5078 + t5079 + t5083 + t5089 + t5094;
  t5658 = t4465 + t4468;
  t5653 = -1.*t479*t3714;
  t5659 = -1.*t653*t5658;
  t5660 = t5653 + t5659;
  t5668 = t653*t3714;
  t5669 = -1.*t479*t5658;
  t5679 = t5668 + t5669;
  t5710 = t479*t3714;
  t5711 = t653*t5658;
  t5712 = t5710 + t5711;
  t5588 = -0.0817*t65*t3345;
  t5208 = -0.1944*t4373;
  t5590 = -1.*t3073*t65*t3345;
  t5555 = -1.*t1007*t5554;
  t5557 = t1114*t5524;
  t5558 = t5555 + t5557;
  t5559 = -0.16*t5558;
  t5560 = -1.*t1114*t5554;
  t5562 = -1.*t1007*t5524;
  t5564 = t5560 + t5562;
  t5566 = -0.02*t5564;
  t5569 = t5559 + t5566;
  t5152 = -1.*t1007*t5120;
  t5160 = -1.*t1114*t5159;
  t5171 = t5152 + t5160;
  t5186 = -0.02*t5171;
  t5187 = t1114*t5120;
  t5188 = -1.*t1007*t5159;
  t5192 = t5187 + t5188;
  t5193 = -0.16*t5192;
  t5194 = t5186 + t5193;
  t5407 = -1.*t1114*t479*t5378;
  t5409 = -1.*t653*t1007*t5378;
  t5410 = t5407 + t5409;
  t5413 = -0.16*t5410;
  t5414 = -1.*t653*t1114*t5378;
  t5420 = t479*t1007*t5378;
  t5423 = t5414 + t5420;
  t5434 = -0.02*t5423;
  t5436 = t5413 + t5434;
  t5713 = -1.*t1007*t5712;
  t5715 = t1114*t5679;
  t5717 = t5713 + t5715;
  t5719 = -0.16*t5717;
  t5723 = -1.*t1114*t5712;
  t5724 = -1.*t1007*t5679;
  t5725 = t5723 + t5724;
  t5726 = -0.02*t5725;
  t5727 = t5719 + t5726;
  t5759 = 0. + t5027 + t5035;
  t5761 = t65*t2435*t3345;
  t5762 = t421*t4385;
  t5763 = 0. + t5761 + t5762;
  t5760 = -1.*t479*t5759;
  t5764 = -1.*t653*t5763;
  t5765 = t5760 + t5764;
  t5770 = t653*t5759;
  t5772 = -1.*t479*t5763;
  t5774 = t5770 + t5772;
  t5786 = t479*t5759;
  t5787 = t653*t5763;
  t5788 = 0. + t5786 + t5787;
  t5790 = 0. + t5770 + t5772;
  t5521 = -0.1422*t5520;
  t5525 = -0.2083*t5524;
  t5526 = t1106*t5520;
  t5527 = t1211*t5524;
  t5528 = t5526 + t5527;
  t5530 = -0.16*t5528;
  t5531 = t1211*t5520;
  t5536 = t1387*t5524;
  t5537 = t5531 + t5536;
  t5541 = -0.02*t5537;
  t5543 = t5521 + t5525 + t5530 + t5541;
  t5121 = -0.2083*t5120;
  t5126 = -0.1422*t5125;
  t5127 = t1387*t5120;
  t5128 = t1211*t5125;
  t5134 = t5127 + t5128;
  t5137 = -0.02*t5134;
  t5138 = t1211*t5120;
  t5142 = t1106*t5125;
  t5143 = t5138 + t5142;
  t5147 = -0.16*t5143;
  t5150 = t5121 + t5126 + t5137 + t5147;
  t5438 = 0.1422*t653*t5378;
  t5440 = 0.2083*t479*t5378;
  t5442 = -1.*t653*t1211*t5378;
  t5443 = -1.*t479*t1387*t5378;
  t5444 = t5442 + t5443;
  t5445 = -0.02*t5444;
  t5447 = -1.*t1211*t479*t5378;
  t5448 = -1.*t653*t1106*t5378;
  t5453 = t5447 + t5448;
  t5459 = -0.16*t5453;
  t5461 = t5438 + t5440 + t5445 + t5459;
  t5661 = -0.1422*t5660;
  t5680 = -0.2083*t5679;
  t5685 = t1106*t5660;
  t5686 = t1211*t5679;
  t5687 = t5685 + t5686;
  t5688 = -0.16*t5687;
  t5689 = t1211*t5660;
  t5691 = t1387*t5679;
  t5692 = t5689 + t5691;
  t5706 = -0.02*t5692;
  t5707 = t5661 + t5680 + t5688 + t5706;
  t5766 = -1.*t1007*t5765;
  t5776 = -1.*t1114*t5774;
  t5777 = t5766 + t5776;
  t5778 = -0.02*t5777;
  t5779 = t1114*t5765;
  t5781 = -1.*t1007*t5774;
  t5782 = t5779 + t5781;
  t5783 = -0.16*t5782;
  t5784 = t5778 + t5783;
  t5821 = -1.*t653*t5759;
  t5822 = t479*t5763;
  t5824 = t5821 + t5822;
  t5860 = -1.*t65*t140*t253;
  t5864 = t421*t1625;
  t5865 = t5860 + t5864;
  t5901 = -1.*t421*t65*t253;
  t5902 = -1.*t140*t1625;
  t5903 = t5901 + t5902;
  t5926 = t421*t65;
  t5927 = t140*t253*t1625;
  t5928 = t5926 + t5927;
  t5847 = 0.035199999999999995*t421*t51*t65;
  t5848 = 0.2083*t653*t51*t65*t140;
  t5849 = -0.1422*t51*t65*t140*t479;
  t5850 = t1211*t51*t65*t140*t479;
  t5851 = -1.*t653*t51*t65*t140*t1387;
  t5852 = t5850 + t5851;
  t5853 = -0.02*t5852;
  t5854 = -1.*t653*t1211*t51*t65*t140;
  t5855 = t51*t65*t140*t479*t1106;
  t5856 = t5854 + t5855;
  t5857 = -0.16*t5856;
  t5858 = t5847 + t5848 + t5849 + t5853 + t5857;
  t5951 = -1.*t421*t51*t65*t479;
  t5952 = -1.*t653*t65*t253;
  t5953 = t5951 + t5952;
  t5956 = t421*t653*t51*t65;
  t5957 = -1.*t65*t479*t253;
  t5958 = t5956 + t5957;
  t5969 = -1.*t421*t653*t51*t65;
  t5970 = t65*t479*t253;
  t5971 = t5969 + t5970;
  t5994 = -1.*t51*t65*t479;
  t5996 = -1.*t421*t653*t65*t253;
  t5998 = t5994 + t5996;
  t6000 = -1.*t653*t51*t65;
  t6001 = t421*t65*t479*t253;
  t6002 = t6000 + t6001;
  t6017 = t421*t51*t479*t1625;
  t6018 = t653*t253*t1625;
  t6019 = t6017 + t6018;
  t6021 = -1.*t421*t653*t51*t1625;
  t6022 = t479*t253*t1625;
  t6023 = t6021 + t6022;
  t5968 = -0.2083*t5953;
  t5972 = -0.1422*t5971;
  t5973 = t1387*t5953;
  t5975 = t1211*t5971;
  t5976 = t5973 + t5975;
  t5981 = -0.02*t5976;
  t5985 = t1211*t5953;
  t5986 = t1106*t5971;
  t5987 = t5985 + t5986;
  t5989 = -0.16*t5987;
  t5990 = t5968 + t5972 + t5981 + t5989;
  t5879 = 0.1422*t653*t5865;
  t5880 = 0.2083*t479*t5865;
  t5881 = -1.*t653*t1211*t5865;
  t5884 = -1.*t479*t1387*t5865;
  t5885 = t5881 + t5884;
  t5886 = -0.02*t5885;
  t5889 = -1.*t1211*t479*t5865;
  t5890 = -1.*t653*t1106*t5865;
  t5891 = t5889 + t5890;
  t5892 = -0.16*t5891;
  t5893 = t5879 + t5880 + t5886 + t5892;
  t6041 = t51*t65;
  t6042 = 0. + t6041;
  t6044 = t421*t65*t253;
  t6050 = -1.*t2435*t1625;
  t6051 = 0. + t6044 + t6050;
  t6043 = -1.*t6042*t479;
  t6053 = -1.*t653*t6051;
  t6054 = t6043 + t6053;
  t6056 = t653*t6042;
  t6057 = -1.*t479*t6051;
  t6058 = t6056 + t6057;
  t6073 = -1.*t653*t6042;
  t6075 = t479*t6051;
  t6077 = t6073 + t6075;
  t5920 = -1.*t421*t253*t1625;
  t6090 = -1.*t65*t2435;
  t6091 = t6090 + t5920;
  t6089 = t51*t479*t1625;
  t6092 = -1.*t653*t6091;
  t6094 = t6089 + t6092;
  t6097 = -1.*t653*t51*t1625;
  t6099 = -1.*t479*t6091;
  t6100 = t6097 + t6099;
  t5919 = t65*t140;
  t5921 = t5919 + t5920;
  t5922 = 0.035199999999999995*t5921;
  t5931 = -0.2083*t653*t5928;
  t5932 = 0.1422*t479*t5928;
  t5933 = -1.*t1211*t479*t5928;
  t5934 = t653*t1387*t5928;
  t5935 = t5933 + t5934;
  t5936 = -0.02*t5935;
  t5937 = t653*t1211*t5928;
  t5938 = -1.*t479*t1106*t5928;
  t5939 = t5937 + t5938;
  t5940 = -0.16*t5939;
  t5941 = t5922 + t5931 + t5932 + t5936 + t5940;
  t6014 = -0.035199999999999995*t51*t140*t1625;
  t6016 = -0.1944*t253*t1625;
  t6020 = -0.1422*t6019;
  t6024 = -0.2083*t6023;
  t6025 = t1106*t6019;
  t6026 = t1211*t6023;
  t6027 = t6025 + t6026;
  t6028 = -0.16*t6027;
  t6029 = t1211*t6019;
  t6030 = t1387*t6023;
  t6031 = t6029 + t6030;
  t6032 = -0.02*t6031;
  t6033 = t6014 + t6016 + t6020 + t6024 + t6028 + t6032;
  t5992 = 0.1944*t51*t65;
  t6130 = t2435*t1625;
  t6131 = t5901 + t6130;
  t6132 = t653*t6131;
  t6133 = t5994 + t6132;
  t6135 = -1.*t479*t6131;
  t6136 = t6000 + t6135;
  t6096 = -0.1422*t6094;
  t6101 = -0.2083*t6100;
  t6102 = t1106*t6094;
  t6104 = t1211*t6100;
  t6105 = t6102 + t6104;
  t6106 = -0.16*t6105;
  t6107 = t1211*t6094;
  t6108 = t1387*t6100;
  t6109 = t6107 + t6108;
  t6110 = -0.02*t6109;
  t6115 = t6096 + t6101 + t6106 + t6110;
  t6152 = -1.*t51*t479*t1625;
  t6153 = t653*t6091;
  t6154 = t6152 + t6153;
  t5955 = -1.*t1007*t5953;
  t5959 = -1.*t1114*t5958;
  t5960 = t5955 + t5959;
  t5961 = -0.02*t5960;
  t5962 = t1114*t5953;
  t5963 = -1.*t1007*t5958;
  t5964 = t5962 + t5963;
  t5965 = -0.16*t5964;
  t5966 = t5961 + t5965;
  t5866 = -1.*t1114*t479*t5865;
  t5869 = -1.*t653*t1007*t5865;
  t5870 = t5866 + t5869;
  t5872 = -0.16*t5870;
  t5873 = -1.*t653*t1114*t5865;
  t5874 = t479*t1007*t5865;
  t5875 = t5873 + t5874;
  t5876 = -0.02*t5875;
  t5877 = t5872 + t5876;
  t6055 = -1.*t1007*t6054;
  t6059 = -1.*t1114*t6058;
  t6062 = t6055 + t6059;
  t6063 = -0.02*t6062;
  t6066 = t1114*t6054;
  t6067 = -1.*t1007*t6058;
  t6068 = t6066 + t6067;
  t6069 = -0.16*t6068;
  t6070 = t6063 + t6069;
  t6171 = t6042*t479;
  t6172 = t653*t6051;
  t6173 = 0. + t6171 + t6172;
  t6175 = 0. + t6056 + t6057;
  t6155 = -1.*t1007*t6154;
  t6156 = t1114*t6100;
  t6157 = t6155 + t6156;
  t6158 = -0.16*t6157;
  t6159 = -1.*t1114*t6154;
  t6160 = -1.*t1007*t6100;
  t6161 = t6159 + t6160;
  t6162 = -0.02*t6161;
  t6163 = t6158 + t6162;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=var2[4]*(t1490*var2[3] + (t3037 - 0.2083*t3179 - 0.1422*t3280 - 0.16*(t1211*t3179 + t1106*t3280) - 0.02*(t1387*t3179 + t1211*t3280) + 0.1944*t1625*t51*t89 + 0.035199999999999995*(t3092 - 1.*t140*t1625*t253*t89))*var2[4] + t3678*var2[5] + t2340*var2[15] + t2820*var2[16] + t3017*var2[17]) + var2[15]*(t3828*var2[3] + t2340*var2[4] + t4123*var2[5] + (0.035199999999999995*t3889 + 0.1422*t3867*t479 - 0.2083*t3867*t653 - 0.16*(-1.*t1106*t3867*t479 + t1211*t3867*t653) - 0.02*(-1.*t1211*t3867*t479 + t1387*t3867*t653))*var2[15] + t4041*var2[16] + t4009*var2[17]) + var2[3]*((0.035199999999999995*t140*t4137 + t4185 - 0.1422*t4197 - 0.2083*t4206 - 0.16*(t1106*t4197 + t1211*t4206) - 0.02*(t1211*t4197 + t1387*t4206))*var2[3] + t1490*var2[4] + t4432*var2[5] + t3828*var2[15] + t4321*var2[16] + t4367*var2[17]) + var2[16]*(t4321*var2[3] + t2820*var2[4] + t4648*var2[5] + t4041*var2[15] + (-0.2083*t4477 - 0.1422*t4537 - 0.16*(t1211*t4477 + t1106*t4537) - 0.02*(t1387*t4477 + t1211*t4537))*var2[16] + t4516*var2[17]) + var2[5]*(t4432*var2[3] + t3678*var2[4] + (t3037 + 0.035199999999999995*(t3092 + t140*t4137) + t4185 - 0.2083*t4683 - 0.1422*t4699 - 0.16*(t1211*t4683 + t1106*t4699) - 0.02*(t1387*t4683 + t1211*t4699))*var2[5] + t4123*var2[15] + t4648*var2[16] + t4799*var2[17]) + var2[17]*(t4367*var2[3] + t3017*var2[4] + t4799*var2[5] + t4009*var2[15] + t4516*var2[16] + (-0.16*(-1.*t1114*t4914 - 1.*t1007*t4928) - 0.02*(t1007*t4914 - 1.*t1114*t4928))*var2[17]);
  p_output1[7]=var2[3]*((0.035199999999999995*t140*t4086 + t5208 - 0.2083*t5219 - 0.1422*t5240 - 0.16*(t1211*t5219 + t1106*t5240) - 0.02*(t1387*t5219 + t1211*t5240))*var2[3] + t5019*var2[4] + t5099*var2[5] + t5063*var2[15] + t5150*var2[16] + t5194*var2[17]) + var2[15]*(t5063*var2[3] + t5317*var2[4] + t5350*var2[5] + (0.1422*t479*t5368 + 0.035199999999999995*t5378 - 0.2083*t5368*t653 - 0.16*(-1.*t1106*t479*t5368 + t1211*t5368*t653) - 0.02*(-1.*t1211*t479*t5368 + t1387*t5368*t653))*var2[15] + t5461*var2[16] + t5436*var2[17]) + var2[4]*(t5019*var2[3] + (0.1944*t1625*t3345*t51 + t5588 + 0.035199999999999995*(-1.*t140*t1625*t253*t3345 + t5590) - 0.2083*t5605 - 0.1422*t5609 - 0.16*(t1211*t5605 + t1106*t5609) - 0.02*(t1387*t5605 + t1211*t5609))*var2[4] + t5508*var2[5] + t5317*var2[15] + t5543*var2[16] + t5569*var2[17]) + var2[5]*(t5099*var2[3] + t5508*var2[4] + (-0.1422*t4618 - 0.2083*t4769 - 0.16*(t1106*t4618 + t1211*t4769) - 0.02*(t4622 + t1387*t4769) + t5208 + t5588 + 0.035199999999999995*(t140*t4086 + t5590))*var2[5] + t5350*var2[15] + t5707*var2[16] + t5727*var2[17]) + var2[16]*(t5150*var2[3] + t5543*var2[4] + t5707*var2[5] + t5461*var2[15] + (-0.2083*t5765 - 0.1422*t5824 - 0.16*(t1211*t5765 + t1106*t5824) - 0.02*(t1387*t5765 + t1211*t5824))*var2[16] + t5784*var2[17]) + var2[17]*(t5194*var2[3] + t5569*var2[4] + t5727*var2[5] + t5436*var2[15] + t5784*var2[16] + (-0.16*(-1.*t1114*t5788 - 1.*t1007*t5790) - 0.02*(t1007*t5788 - 1.*t1114*t5790))*var2[17]);
  p_output1[8]=var2[15]*(t5858*var2[3] + t5941*var2[4] + (0.035199999999999995*t5865 + 0.1422*t479*t5903 - 0.2083*t5903*t653 - 0.16*(-1.*t1106*t479*t5903 + t1211*t5903*t653) - 0.02*(-1.*t1211*t479*t5903 + t1387*t5903*t653))*var2[15] + t5893*var2[16] + t5877*var2[17]) + var2[3]*((t5992 - 0.2083*t5998 - 0.1422*t6002 - 0.16*(t1211*t5998 + t1106*t6002) - 0.02*(t1387*t5998 + t1211*t6002) - 0.035199999999999995*t140*t253*t65)*var2[3] + t6033*var2[4] + t5858*var2[15] + t5990*var2[16] + t5966*var2[17]) + var2[16]*(t5990*var2[3] + t6115*var2[4] + t5893*var2[15] + (-0.2083*t6054 - 0.1422*t6077 - 0.16*(t1211*t6054 + t1106*t6077) - 0.02*(t1387*t6054 + t1211*t6077))*var2[16] + t6070*var2[17]) + var2[4]*(t6033*var2[3] + (0.0817*t1625 + 0.035199999999999995*(t1625*t3073 + t5860) + t5992 - 0.2083*t6133 - 0.1422*t6136 - 0.16*(t1211*t6133 + t1106*t6136) - 0.02*(t1387*t6133 + t1211*t6136))*var2[4] + t5941*var2[15] + t6115*var2[16] + t6163*var2[17]) + var2[17]*(t5966*var2[3] + t6163*var2[4] + t5877*var2[15] + t6070*var2[16] + (-0.16*(-1.*t1114*t6173 - 1.*t1007*t6175) - 0.02*(t1007*t6173 - 1.*t1114*t6175))*var2[17]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "jj_hc_4_func.hh"

namespace SymFunction
{

void jj_hc_4_func_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
