/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:50:26 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t287;
  double t549;
  double t602;
  double t614;
  double t654;
  double t660;
  double t665;
  double t681;
  double t494;
  double t568;
  double t570;
  double t98;
  double t1401;
  double t1504;
  double t1534;
  double t1542;
  double t1649;
  double t1656;
  double t1661;
  double t1680;
  double t1784;
  double t1788;
  double t1791;
  double t1801;
  double t1470;
  double t1514;
  double t1524;
  double t1933;
  double t1939;
  double t2006;
  double t2031;
  double t2056;
  double t2089;
  double t2120;
  double t1526;
  double t1682;
  double t1802;
  double t1814;
  double t1063;
  double t1097;
  double t1125;
  double t1144;
  double t1347;
  double t1350;
  double t1353;
  double t2276;
  double t2301;
  double t2343;
  double t571;
  double t881;
  double t971;
  double t984;
  double t988;
  double t994;
  double t1052;
  double t1053;
  double t1055;
  double t1374;
  double t2018;
  double t2124;
  double t2166;
  double t2274;
  double t2374;
  double t2387;
  double t2388;
  double t2413;
  double t2489;
  double t2526;
  double t2565;
  double t2608;
  double t2609;
  double t2651;
  double t2667;
  double t2712;
  double t2729;
  double t2734;
  double t2747;
  double t2751;
  double t2767;
  double t3019;
  double t3021;
  double t3034;
  double t3077;
  double t3078;
  double t3346;
  double t3347;
  double t3427;
  double t3488;
  double t3502;
  double t3504;
  double t3506;
  double t3507;
  double t3514;
  double t3494;
  double t3234;
  double t3225;
  double t3601;
  double t3605;
  double t3609;
  double t3265;
  double t3276;
  double t3261;
  double t3263;
  double t3306;
  double t3307;
  double t3286;
  double t3291;
  double t3489;
  double t3557;
  double t3490;
  double t3503;
  double t4038;
  double t4039;
  double t4045;
  double t4051;
  double t4056;
  double t3565;
  double t4094;
  double t4095;
  double t4106;
  double t4041;
  double t4080;
  double t4085;
  double t3619;
  double t3638;
  double t3640;
  double t3648;
  double t3660;
  double t3669;
  double t3673;
  double t3677;
  double t3688;
  double t3700;
  double t3706;
  double t3726;
  double t3731;
  double t3751;
  double t3752;
  double t3759;
  double t3761;
  double t3772;
  double t3792;
  double t3794;
  double t3807;
  double t3824;
  double t3832;
  double t3833;
  double t3839;
  double t3849;
  double t3850;
  double t3858;
  double t3865;
  double t3870;
  double t3871;
  double t3893;
  double t3904;
  double t3909;
  double t3951;
  double t3959;
  double t3969;
  double t3410;
  double t3417;
  double t3418;
  double t3445;
  double t3446;
  double t3453;
  double t4468;
  double t4474;
  double t4477;
  double t4489;
  double t4490;
  double t4328;
  double t4329;
  double t4331;
  double t3037;
  double t3038;
  double t3051;
  double t3079;
  double t3082;
  double t3091;
  double t3468;
  double t4492;
  double t4501;
  double t4503;
  double t4531;
  double t4538;
  double t4562;
  double t4563;
  double t4568;
  double t4569;
  double t3229;
  double t3241;
  double t3245;
  double t4578;
  double t4579;
  double t4590;
  double t4591;
  double t3264;
  double t3279;
  double t3282;
  double t3292;
  double t3309;
  double t3313;
  double t4288;
  double t4294;
  double t4296;
  double t4320;
  double t4332;
  double t4340;
  double t4378;
  double t4389;
  double t4418;
  double t4433;
  double t3344;
  double t3364;
  double t3372;
  double t3389;
  double t3396;
  double t3403;
  double t3404;
  double t3405;
  double t3406;
  double t3408;
  double t4802;
  double t4813;
  double t4825;
  double t4865;
  double t4866;
  double t4867;
  double t3473;
  double t3474;
  double t3477;
  double t3496;
  double t3515;
  double t3517;
  double t3519;
  double t3578;
  double t3595;
  double t3626;
  double t3630;
  double t3637;
  double t4889;
  double t4890;
  double t4895;
  double t4904;
  double t4905;
  double t4938;
  double t4939;
  double t4940;
  double t4947;
  double t4973;
  double t4982;
  double t4992;
  double t5018;
  double t4090;
  double t4113;
  double t4114;
  double t4115;
  double t4117;
  double t4163;
  double t4173;
  double t4174;
  double t4181;
  double t5198;
  double t5210;
  double t5212;
  double t5230;
  double t5240;
  double t5246;
  double t5248;
  double t5253;
  double t5258;
  double t5260;
  double t5261;
  double t5274;
  double t5276;
  double t5277;
  double t5278;
  double t5280;
  double t5281;
  double t5289;
  double t5290;
  double t5297;
  double t5307;
  double t5310;
  double t5319;
  double t5321;
  double t5322;
  double t5324;
  double t5363;
  double t5380;
  double t5384;
  double t5397;
  double t5403;
  double t5449;
  double t5456;
  double t5471;
  double t4595;
  double t4597;
  double t4601;
  double t4614;
  double t4615;
  double t4616;
  double t4634;
  double t4635;
  double t4640;
  double t4645;
  double t4646;
  double t4648;
  double t4657;
  double t4660;
  double t4671;
  double t4672;
  double t4675;
  double t5473;
  double t5485;
  double t5499;
  double t5500;
  double t5501;
  double t5516;
  double t5533;
  double t5545;
  double t5550;
  double t4699;
  double t5553;
  double t5563;
  double t5606;
  double t5609;
  double t4739;
  double t4766;
  double t5097;
  double t5136;
  double t5145;
  double t5938;
  double t5947;
  double t5954;
  double t5992;
  double t6001;
  double t6014;
  double t6015;
  double t6022;
  double t6024;
  double t6026;
  double t6027;
  double t6031;
  double t6036;
  double t6037;
  double t6045;
  double t6046;
  double t6066;
  double t6070;
  double t6073;
  double t5053;
  double t5056;
  double t5066;
  double t5074;
  double t5075;
  double t5089;
  double t4916;
  double t4920;
  double t4923;
  double t6172;
  double t6179;
  double t6204;
  double t6206;
  double t6209;
  double t6211;
  double t6213;
  double t6216;
  double t6268;
  double t6270;
  double t6273;
  double t6171;
  double t6219;
  double t6220;
  double t6225;
  double t6227;
  double t6228;
  double t3444;
  double t3454;
  double t3455;
  double t6262;
  double t6361;
  double t6362;
  double t6364;
  double t6348;
  double t6353;
  double t6356;
  double t6283;
  double t6380;
  double t6381;
  double t6382;
  double t6409;
  double t6417;
  double t6388;
  double t6396;
  double t6402;
  double t6445;
  double t6457;
  double t6462;
  double t6407;
  double t6420;
  double t6426;
  double t6434;
  double t6467;
  double t6489;
  double t6491;
  double t6494;
  double t6499;
  double t6359;
  double t6370;
  double t6372;
  double t6659;
  double t6664;
  double t6669;
  double t7623;
  double t7637;
  double t7642;
  double t7648;
  double t7620;
  double t7630;
  double t7703;
  double t7706;
  double t7707;
  double t7689;
  double t7690;
  double t7695;
  double t7674;
  double t7679;
  double t7681;
  double t7727;
  double t7738;
  double t7744;
  double t7685;
  double t7696;
  double t7701;
  double t7722;
  double t7748;
  double t7752;
  double t7775;
  double t7784;
  double t7789;
  double t7633;
  double t7651;
  double t7660;
  double t6222;
  double t6241;
  double t6243;
  double t6246;
  double t8139;
  double t8156;
  double t6252;
  double t6259;
  double t6260;
  double t6261;
  double t6294;
  double t6300;
  double t8206;
  double t8212;
  double t8215;
  double t6428;
  double t6490;
  double t6500;
  double t6520;
  double t6532;
  double t6533;
  double t6534;
  double t6540;
  double t6562;
  double t6575;
  double t6597;
  double t6607;
  double t6619;
  double t6623;
  double t6629;
  double t6630;
  double t6693;
  double t6695;
  double t6701;
  double t6721;
  double t6724;
  double t6725;
  double t6726;
  double t6733;
  double t6734;
  double t6785;
  double t6857;
  double t6969;
  double t6978;
  double t6989;
  double t7021;
  double t7041;
  double t7096;
  double t7160;
  double t7224;
  double t7256;
  double t7259;
  double t7278;
  double t7281;
  double t7339;
  double t7362;
  double t7466;
  double t7471;
  double t7556;
  double t7561;
  double t7578;
  double t7581;
  double t7584;
  double t8418;
  double t8419;
  double t8420;
  double t7806;
  double t7808;
  double t7812;
  double t7813;
  double t8412;
  double t7861;
  double t7864;
  double t7865;
  double t7866;
  double t7909;
  double t7927;
  double t7930;
  double t7931;
  double t7964;
  double t7965;
  double t7967;
  double t7970;
  double t8039;
  double t8040;
  double t8044;
  double t8045;
  double t8106;
  double t8114;
  double t8116;
  double t8118;
  double t8701;
  double t8705;
  double t8707;
  double t9195;
  double t9199;
  double t9200;
  double t4396;
  double t11552;
  double t11474;
  double t11505;
  double t11532;
  double t4439;
  double t12136;
  double t12141;
  double t12142;
  double t12107;
  double t12116;
  double t12132;
  double t12135;
  double t12162;
  double t12164;
  double t12178;
  double t12184;
  double t12187;
  double t3478;
  double t3479;
  double t12415;
  double t12416;
  double t12421;
  double t12407;
  double t12408;
  double t12409;
  double t12413;
  double t12422;
  double t12423;
  double t12427;
  double t12428;
  double t12429;
  double t12398;
  double t12401;
  double t12403;
  double t12404;
  double t12405;
  double t12632;
  double t12638;
  double t12649;
  double t12439;
  double t12578;
  double t12579;
  double t12583;
  double t12446;
  double t12447;
  double t12599;
  double t12654;
  double t12660;
  double t12674;
  double t12707;
  double t12738;
  double t12457;
  double t12459;
  double t12463;
  double t12475;
  double t12484;
  double t12490;
  double t12492;
  double t12493;
  double t12494;
  double t12499;
  double t12500;
  double t12511;
  double t12512;
  double t12520;
  double t12526;
  double t12540;
  double t12550;
  double t12557;
  double t12559;
  double t6541;
  double t6375;
  double t6671;
  double t6742;
  double t7091;
  double t7399;
  double t7671;
  double t7702;
  double t7822;
  double t7832;
  double t7892;
  double t7894;
  double t7933;
  double t7934;
  double t7983;
  double t7985;
  double t8052;
  double t8053;
  double t12946;
  double t12967;
  double t12974;
  double t12983;
  double t8280;
  double t12984;
  double t13016;
  double t8198;
  double t13073;
  double t13101;
  double t13111;
  double t13120;
  double t13132;
  double t13134;
  double t13150;
  double t13160;
  double t8309;
  double t13186;
  double t8353;
  double t13208;
  double t13212;
  double t13215;
  double t8373;
  double t13237;
  double t13252;
  double t13260;
  double t13263;
  double t13267;
  double t8387;
  double t13277;
  double t13278;
  double t13279;
  double t13288;
  double t13292;
  double t8413;
  double t8415;
  double t8469;
  double t8472;
  double t13327;
  double t13331;
  double t13332;
  double t8543;
  double t8544;
  double t13351;
  double t13352;
  double t8592;
  double t8599;
  double t13376;
  double t13383;
  double t13395;
  double t13399;
  double t8654;
  double t8657;
  double t8675;
  double t8676;
  double t13436;
  double t13441;
  double t13442;
  double t12133;
  double t12205;
  double t12250;
  double t12261;
  double t12262;
  double t12307;
  double t12339;
  double t12346;
  double t12410;
  double t12445;
  double t12495;
  double t12515;
  double t12542;
  double t12553;
  double t13722;
  double t13726;
  double t13727;
  double t13733;
  double t13735;
  double t12593;
  double t13742;
  double t13748;
  double t12789;
  double t13765;
  double t13768;
  double t13769;
  double t13779;
  double t13780;
  double t13786;
  double t13792;
  double t13797;
  double t13811;
  double t12833;
  double t13827;
  double t13829;
  double t12847;
  double t13857;
  double t12870;
  double t13868;
  double t13869;
  double t12888;
  double t14140;
  double t14141;
  double t14142;
  double t14148;
  double t14150;
  double t14152;
  double t13704;
  double t14163;
  double t14165;
  double t14196;
  double t14202;
  double t14203;
  double t14212;
  double t14214;
  double t14217;
  double t14246;
  double t14248;
  double t14252;
  double t14266;
  double t14268;
  double t14269;
  double t14204;
  double t14218;
  double t14229;
  double t14230;
  double t14231;
  double t14234;
  double t14235;
  double t14239;
  double t14241;
  double t14242;
  double t14244;
  double t14245;
  double t14253;
  double t14255;
  double t14256;
  double t14271;
  double t14272;
  double t14273;
  double t14289;
  double t14290;
  double t14292;
  double t14294;
  double t14295;
  double t14339;
  double t14340;
  double t14341;
  double t14343;
  double t14344;
  double t14346;
  double t14347;
  double t14348;
  double t14350;
  double t14351;
  double t14365;
  double t14366;
  double t14367;
  double t14369;
  double t14370;
  double t14371;
  double t14372;
  double t14373;
  double t14374;
  double t14375;
  double t14376;
  double t14377;
  double t14383;
  double t14384;
  double t14426;
  double t14429;
  double t14430;
  t287 = Cos(var1[16]);
  t549 = Sin(var1[16]);
  t602 = -1.*t287;
  t614 = 1. + t602;
  t654 = -0.194401*t614;
  t660 = -0.234401*t287;
  t665 = -0.04*t549;
  t681 = t654 + t660 + t665;
  t494 = -0.04*t287;
  t568 = 0.04*t549;
  t570 = t494 + t568;
  t98 = Cos(var1[4]);
  t1401 = Cos(var1[17]);
  t1504 = Sin(var1[17]);
  t1534 = -1.*t1401;
  t1542 = 1. + t1534;
  t1649 = -0.336601*t1542;
  t1656 = -0.356601*t1401;
  t1661 = -0.16*t1504;
  t1680 = 0. + t1649 + t1656 + t1661;
  t1784 = -0.20833*t1542;
  t1788 = -0.36833*t1401;
  t1791 = 0.020000000000000018*t1504;
  t1801 = 0. + t1784 + t1788 + t1791;
  t1470 = t287*t1401;
  t1514 = -1.*t549*t1504;
  t1524 = 0. + t1470 + t1514;
  t1933 = t1401*t549;
  t1939 = t287*t1504;
  t2006 = 0. + t1933 + t1939;
  t2031 = -0.194401*t549;
  t2056 = -1.*t549*t1680;
  t2089 = t287*t1801;
  t2120 = 0. + t2031 + t2056 + t2089;
  t1526 = -0.194401*t614;
  t1682 = t287*t1680;
  t1802 = t549*t1801;
  t1814 = 0. + t1526 + t1682 + t1802;
  t1063 = Cos(var1[5]);
  t1097 = Sin(var1[15]);
  t1125 = -1.*t1063*t1097;
  t1144 = Cos(var1[15]);
  t1347 = Sin(var1[5]);
  t1350 = -1.*t1144*t1347;
  t1353 = t1125 + t1350;
  t2276 = -1.*t1401*t549;
  t2301 = -1.*t287*t1504;
  t2343 = 0. + t2276 + t2301;
  t571 = -1.*t287*t570;
  t881 = -1.*t681*t549;
  t971 = t571 + t881;
  t984 = t287*t971;
  t988 = t287*t681;
  t994 = -1.*t570*t549;
  t1052 = t988 + t994;
  t1053 = t549*t1052;
  t1055 = t984 + t1053;
  t1374 = 1.527*t98*t1055*t1353;
  t2018 = -1.*t1814*t2006;
  t2124 = -1.*t2120*t1524;
  t2166 = 0. + t2018 + t2124;
  t2274 = t1524*t2166;
  t2374 = t2120*t2343;
  t2387 = t1814*t1524;
  t2388 = 0. + t2374 + t2387;
  t2413 = t2006*t2388;
  t2489 = 0. + t2274 + t2413;
  t2526 = -1.*t1144*t1063;
  t2565 = t1097*t1347;
  t2608 = t2526 + t2565;
  t2609 = -0.0219*t98*t2608;
  t2651 = -1.*t1144*t287*t1063;
  t2667 = t287*t1097*t1347;
  t2712 = t2651 + t2667;
  t2729 = 0.085290585*t287*t98*t2712;
  t2734 = t1144*t1063*t549;
  t2747 = -1.*t1097*t549*t1347;
  t2751 = t2734 + t2747;
  t2767 = -0.085290585*t98*t549*t2751;
  t3019 = -0.081715*t2343;
  t3021 = -0.11688*t2006;
  t3034 = 0. + t3019 + t3021;
  t3077 = 0.035165*t1524;
  t3078 = 0. + t3077;
  t3346 = 0.04*t287;
  t3347 = t3346 + t568;
  t3427 = Sin(var1[4]);
  t3488 = t2276 + t2301;
  t3502 = t1470 + t1514;
  t3504 = -0.194401*t287;
  t3506 = -1.*t287*t1680;
  t3507 = -1.*t549*t1801;
  t3514 = t3504 + t3506 + t3507;
  t3494 = t2031 + t2056 + t2089;
  t3234 = 0. + t1144;
  t3225 = 0. + t1097;
  t3601 = -1.*t287*t1401;
  t3605 = t549*t1504;
  t3609 = t3601 + t3605;
  t3265 = -1.*t1097*t2343;
  t3276 = 0. + t3265;
  t3261 = t1144*t2343;
  t3263 = 0. + t3261;
  t3306 = -1.*t1097*t1524;
  t3307 = 0. + t3306;
  t3286 = t1144*t1524;
  t3291 = 0. + t3286;
  t3489 = t3488*t2166;
  t3557 = t3502*t2388;
  t3490 = -1.*t2120*t3488;
  t3503 = -1.*t1814*t3502;
  t4038 = -0.16*t1401;
  t4039 = t4038 + t1791;
  t4045 = 0.020000000000000018*t1401;
  t4051 = 0.16*t1504;
  t4056 = t4045 + t4051;
  t3565 = t1814*t3488;
  t4094 = -1.*t549*t4039;
  t4095 = t287*t4056;
  t4106 = t4094 + t4095;
  t4041 = t287*t4039;
  t4080 = t549*t4056;
  t4085 = t4041 + t4080;
  t3619 = t2120*t3609;
  t3638 = t3234*t1063;
  t3640 = -1.*t3225*t1347;
  t3648 = 0. + t3638 + t3640;
  t3660 = t98*t3648;
  t3669 = 0. + t3660;
  t3673 = t3502*t3427;
  t3677 = -1.*t1063*t1097*t3488;
  t3688 = -1.*t1144*t3488*t1347;
  t3700 = t3677 + t3688;
  t3706 = t98*t3700;
  t3726 = t3673 + t3706;
  t3731 = 0.241*t3078*t3726;
  t3751 = t3488*t3427;
  t3752 = -1.*t1063*t1097*t3609;
  t3759 = -1.*t1144*t3609*t1347;
  t3761 = t3752 + t3759;
  t3772 = t98*t3761;
  t3792 = t3751 + t3772;
  t3794 = 0.241*t3034*t3792;
  t3807 = -0.11688*t3502;
  t3824 = -0.081715*t3609;
  t3832 = t3807 + t3824;
  t3833 = t1524*t3427;
  t3839 = t1063*t3276;
  t3849 = -1.*t3263*t1347;
  t3850 = 0. + t3839 + t3849;
  t3858 = t98*t3850;
  t3865 = 0. + t3833 + t3858;
  t3870 = 0.241*t3832*t3865;
  t3871 = t2006*t3427;
  t3893 = t1063*t3307;
  t3904 = -1.*t3291*t1347;
  t3909 = 0. + t3893 + t3904;
  t3951 = t98*t3909;
  t3959 = 0. + t3871 + t3951;
  t3969 = 0.008474765*t3488*t3959;
  t3410 = t1144*t1063;
  t3417 = -1.*t1097*t1347;
  t3418 = t3410 + t3417;
  t3445 = -1.*t287*t1063*t1097;
  t3446 = -1.*t1144*t287*t1347;
  t3453 = t3445 + t3446;
  t4468 = Sin(var1[3]);
  t4474 = t4468*t3427*t1353;
  t4477 = Cos(var1[3]);
  t4489 = t4477*t3418;
  t4490 = t4474 + t4489;
  t4328 = t1063*t1097*t549;
  t4329 = t1144*t549*t1347;
  t4331 = t4328 + t4329;
  t3037 = -1.*t1144*t1063*t2343;
  t3038 = t1097*t2343*t1347;
  t3051 = t3037 + t3038;
  t3079 = -1.*t1144*t1063*t1524;
  t3082 = t1097*t1524*t1347;
  t3091 = t3079 + t3082;
  t3468 = -1.*t549*t3427;
  t4492 = 1.527*t1055*t4490;
  t4501 = t4477*t1353;
  t4503 = t4468*t3427*t2608;
  t4531 = t4501 + t4503;
  t4538 = -0.0219*t4531;
  t4562 = t4477*t3453;
  t4563 = t4468*t3427*t2712;
  t4568 = t4562 + t4563;
  t4569 = 0.085290585*t287*t4568;
  t3229 = -1.*t1063*t3225;
  t3241 = -1.*t3234*t1347;
  t3245 = t3229 + t3241;
  t4578 = t4477*t4331;
  t4579 = t4468*t3427*t2751;
  t4590 = t4578 + t4579;
  t4591 = -0.085290585*t549*t4590;
  t3264 = -1.*t1063*t3263;
  t3279 = -1.*t3276*t1347;
  t3282 = t3264 + t3279;
  t3292 = -1.*t1063*t3291;
  t3309 = -1.*t3307*t1347;
  t3313 = t3292 + t3309;
  t4288 = t98*t549;
  t4294 = -1.*t3427*t3453;
  t4296 = t4288 + t4294;
  t4320 = t287*t98;
  t4332 = -1.*t3427*t4331;
  t4340 = t4320 + t4332;
  t4378 = t98*t1524;
  t4389 = -1.*t3427*t3850;
  t4418 = t98*t2006;
  t4433 = -1.*t3427*t3909;
  t3344 = -1.*t287*t681;
  t3364 = -1.*t287*t3347;
  t3372 = t3344 + t3364;
  t3389 = t287*t3372;
  t3396 = -1.*t549*t971;
  t3403 = t287*t1052;
  t3404 = -1.*t3347*t549;
  t3405 = t881 + t3404;
  t3406 = t549*t3405;
  t3408 = t3389 + t3396 + t3403 + t3406;
  t4802 = t1063*t1097;
  t4813 = t1144*t1347;
  t4825 = t4802 + t4813;
  t4865 = t1144*t287*t1063;
  t4866 = -1.*t287*t1097*t1347;
  t4867 = t4865 + t4866;
  t3473 = t287*t1063*t1097;
  t3474 = t1144*t287*t1347;
  t3477 = t3473 + t3474;
  t3496 = -1.*t3494*t2006;
  t3515 = -1.*t3514*t1524;
  t3517 = t3490 + t3496 + t3503 + t3515;
  t3519 = t1524*t3517;
  t3578 = t3514*t2343;
  t3595 = t3494*t1524;
  t3626 = t3565 + t3578 + t3595 + t3619;
  t3630 = t2006*t3626;
  t3637 = t3489 + t3519 + t3557 + t3630;
  t4889 = t1063*t3225;
  t4890 = t3234*t1347;
  t4895 = 0. + t4889 + t4890;
  t4904 = -1.*t3427*t3648;
  t4905 = 0. + t4904;
  t4938 = t1063*t3263;
  t4939 = t3276*t1347;
  t4940 = 0. + t4938 + t4939;
  t4947 = 0. + t4378 + t4389;
  t4973 = t1063*t3291;
  t4982 = t3307*t1347;
  t4992 = 0. + t4973 + t4982;
  t5018 = 0. + t4418 + t4433;
  t4090 = -1.*t4085*t2006;
  t4113 = -1.*t4106*t1524;
  t4114 = t3490 + t4090 + t3503 + t4113;
  t4115 = t1524*t4114;
  t4117 = t4106*t2343;
  t4163 = t4085*t1524;
  t4173 = t3565 + t4117 + t4163 + t3619;
  t4174 = t2006*t4173;
  t4181 = t3489 + t3557 + t4115 + t4174;
  t5198 = t4477*t4895;
  t5210 = -1.*t4468*t4905;
  t5212 = 0. + t5198 + t5210;
  t5230 = t1144*t1063*t3488;
  t5240 = -1.*t1097*t3488*t1347;
  t5246 = t5230 + t5240;
  t5248 = t4477*t5246;
  t5253 = t98*t3502;
  t5258 = -1.*t3427*t3700;
  t5260 = t5253 + t5258;
  t5261 = -1.*t4468*t5260;
  t5274 = t5248 + t5261;
  t5276 = 0.241*t3078*t5274;
  t5277 = t1144*t1063*t3609;
  t5278 = -1.*t1097*t3609*t1347;
  t5280 = t5277 + t5278;
  t5281 = t4477*t5280;
  t5289 = t98*t3488;
  t5290 = -1.*t3427*t3761;
  t5297 = t5289 + t5290;
  t5307 = -1.*t4468*t5297;
  t5310 = t5281 + t5307;
  t5319 = 0.241*t3034*t5310;
  t5321 = t4477*t4940;
  t5322 = -1.*t4468*t4947;
  t5324 = 0. + t5321 + t5322;
  t5363 = 0.241*t3832*t5324;
  t5380 = t4477*t4992;
  t5384 = -1.*t4468*t5018;
  t5397 = 0. + t5380 + t5384;
  t5403 = 0.008474765*t3488*t5397;
  t5449 = -1.*t4477*t3427*t1353;
  t5456 = t4468*t3418;
  t5471 = t5449 + t5456;
  t4595 = -1.*t1063*t1097*t2343;
  t4597 = -1.*t1144*t2343*t1347;
  t4601 = t4595 + t4597;
  t4614 = -1.*t1063*t1097*t1524;
  t4615 = -1.*t1144*t1524*t1347;
  t4616 = t4614 + t4615;
  t4634 = -1.*t98*t3453;
  t4635 = t3468 + t4634;
  t4640 = -1.*t287*t3427;
  t4645 = -1.*t98*t4331;
  t4646 = t4640 + t4645;
  t4648 = -1.*t1524*t3427;
  t4657 = -1.*t98*t3850;
  t4660 = t4648 + t4657;
  t4671 = -1.*t2006*t3427;
  t4672 = -1.*t98*t3909;
  t4675 = t4671 + t4672;
  t5473 = 1.527*t1055*t5471;
  t5485 = t4468*t1353;
  t5499 = -1.*t4477*t3427*t2608;
  t5500 = t5485 + t5499;
  t5501 = -0.0219*t5500;
  t5516 = t4468*t3453;
  t5533 = -1.*t4477*t3427*t2712;
  t5545 = t5516 + t5533;
  t5550 = 0.085290585*t287*t5545;
  t4699 = t3638 + t3640;
  t5553 = t4468*t4331;
  t5563 = -1.*t4477*t3427*t2751;
  t5606 = t5553 + t5563;
  t5609 = -0.085290585*t549*t5606;
  t4739 = t3839 + t3849;
  t4766 = t3893 + t3904;
  t5097 = -1.*t98*t549;
  t5136 = -1.*t3427*t3477;
  t5145 = t5097 + t5136;
  t5938 = t4468*t4895;
  t5947 = t4477*t4905;
  t5954 = 0. + t5938 + t5947;
  t5992 = t4468*t5246;
  t6001 = t4477*t5260;
  t6014 = t5992 + t6001;
  t6015 = 0.241*t3078*t6014;
  t6022 = t4468*t5280;
  t6024 = t4477*t5297;
  t6026 = t6022 + t6024;
  t6027 = 0.241*t3034*t6026;
  t6031 = t4468*t4940;
  t6036 = t4477*t4947;
  t6037 = 0. + t6031 + t6036;
  t6045 = 0.241*t3832*t6037;
  t6046 = t4468*t4992;
  t6066 = t4477*t5018;
  t6070 = 0. + t6046 + t6066;
  t6073 = 0.008474765*t3488*t6070;
  t5053 = t4477*t4825;
  t5056 = t4468*t3427*t3418;
  t5066 = t5053 + t5056;
  t5074 = t4477*t4867;
  t5075 = -1.*t4468*t4296;
  t5089 = t5074 + t5075;
  t4916 = -1.*t1144*t1063*t549;
  t4920 = t1097*t549*t1347;
  t4923 = t4916 + t4920;
  t6172 = -1.*t1144;
  t6179 = 1. + t6172;
  t6204 = 0.081715*t6179;
  t6206 = 0.061715*t1144;
  t6209 = t6204 + t6206;
  t6211 = t6209*t1063;
  t6213 = 0.02*t1097*t1347;
  t6216 = t6211 + t6213;
  t6268 = 0.02*t1063*t1097;
  t6270 = 0.02*t1144*t1347;
  t6273 = t6268 + t6270;
  t6171 = -0.194401*t3427;
  t6219 = t98*t6216;
  t6220 = t6171 + t6219;
  t6225 = -0.194401*t98;
  t6227 = -1.*t3427*t6216;
  t6228 = t6225 + t6227;
  t3444 = t549*t3427;
  t3454 = t98*t3453;
  t3455 = t3444 + t3454;
  t6262 = Power(t98,2);
  t6361 = -0.055855*t1097;
  t6362 = -1.*t1144*t570;
  t6364 = t6361 + t6362;
  t6348 = 0.055855*t1144;
  t6353 = -1.*t1097*t570;
  t6356 = t6348 + t6353;
  t6283 = Power(t3427,2);
  t6380 = t1063*t6364;
  t6381 = -1.*t6356*t1347;
  t6382 = t6380 + t6381;
  t6409 = 0.13757*t1144;
  t6417 = t6204 + t6409 + t6353;
  t6388 = 0.055855*t1097;
  t6396 = t1144*t570;
  t6402 = t6388 + t6396;
  t6445 = t1063*t6417;
  t6457 = -1.*t6402*t1347;
  t6462 = t6445 + t6457;
  t6407 = t1063*t6402;
  t6420 = t6417*t1347;
  t6426 = t6407 + t6420;
  t6434 = t681*t3427;
  t6467 = t98*t6462;
  t6489 = t6434 + t6467;
  t6491 = t98*t681;
  t6494 = -1.*t3427*t6462;
  t6499 = t6491 + t6494;
  t6359 = t1063*t6356;
  t6370 = t6364*t1347;
  t6372 = t6359 + t6370;
  t6659 = t287*t3427;
  t6664 = t98*t4331;
  t6669 = t6659 + t6664;
  t7623 = -1.*t1097*t2120;
  t7637 = -0.035165*t1097;
  t7642 = -1.*t1144*t2120;
  t7648 = t7637 + t7642;
  t7620 = 0.035165*t1144;
  t7630 = t7620 + t7623;
  t7703 = t1063*t7648;
  t7706 = -1.*t7630*t1347;
  t7707 = t7703 + t7706;
  t7689 = 0.081715*t6179;
  t7690 = 0.11688*t1144;
  t7695 = t7689 + t7690 + t7623;
  t7674 = 0.035165*t1097;
  t7679 = t1144*t2120;
  t7681 = t7674 + t7679;
  t7727 = t1063*t7695;
  t7738 = -1.*t7681*t1347;
  t7744 = 0. + t7727 + t7738;
  t7685 = t1063*t7681;
  t7696 = t7695*t1347;
  t7701 = 0. + t7685 + t7696;
  t7722 = t1814*t3427;
  t7748 = t98*t7744;
  t7752 = 0. + t7722 + t7748;
  t7775 = t98*t1814;
  t7784 = -1.*t3427*t7744;
  t7789 = 0. + t7775 + t7784;
  t7633 = t1063*t7630;
  t7651 = t7648*t1347;
  t7660 = t7633 + t7651;
  t6222 = -1.*t3427*t6220;
  t6241 = -1.*t98*t6228;
  t6243 = t6222 + t6241;
  t6246 = t98*t1353*t6243;
  t8139 = -1.*t6209*t1347;
  t8156 = t6268 + t8139;
  t6252 = -0.02*t1063*t1097;
  t6259 = t6209*t1347;
  t6260 = t6252 + t6259;
  t6261 = t6260*t3418;
  t6294 = t98*t1353*t6220;
  t6300 = -1.*t3427*t1353*t6228;
  t8206 = -1.*t1063*t6402;
  t8212 = -1.*t6417*t1347;
  t8215 = t8206 + t8212;
  t6428 = -1.*t3418*t6426;
  t6490 = -1.*t98*t1353*t6489;
  t6500 = t3427*t1353*t6499;
  t6520 = -1.*t4825*t6426;
  t6532 = -1.*t98*t3418*t6489;
  t6533 = t3427*t3418*t6499;
  t6534 = t6520 + t6532 + t6533;
  t6540 = t98*t2712*t6534;
  t6562 = t3453*t6426;
  t6575 = t98*t2712*t6489;
  t6597 = -1.*t3427*t2712*t6499;
  t6607 = t4867*t6426;
  t6619 = t3455*t6489;
  t6623 = t4296*t6499;
  t6629 = t6607 + t6619 + t6623;
  t6630 = t98*t1353*t6629;
  t6693 = t3418*t6426;
  t6695 = t98*t1353*t6489;
  t6701 = -1.*t3427*t1353*t6499;
  t6721 = t4825*t6426;
  t6724 = t98*t3418*t6489;
  t6725 = -1.*t3427*t3418*t6499;
  t6726 = t6721 + t6724 + t6725;
  t6733 = t98*t2751*t6726;
  t6734 = -1.*t6426*t4331;
  t6785 = -1.*t98*t2751*t6489;
  t6857 = t3427*t2751*t6499;
  t6969 = -1.*t6426*t4923;
  t6978 = -1.*t6489*t6669;
  t6989 = -1.*t6499*t4340;
  t7021 = t6969 + t6978 + t6989;
  t7041 = t98*t1353*t7021;
  t7096 = -1.*t3453*t6426;
  t7160 = -1.*t98*t2712*t6489;
  t7224 = t3427*t2712*t6499;
  t7256 = -1.*t4867*t6426;
  t7259 = -1.*t3455*t6489;
  t7278 = -1.*t4296*t6499;
  t7281 = t7256 + t7259 + t7278;
  t7339 = t98*t2751*t7281;
  t7362 = t6426*t4331;
  t7466 = t98*t2751*t6489;
  t7471 = -1.*t3427*t2751*t6499;
  t7556 = t6426*t4923;
  t7561 = t6489*t6669;
  t7578 = t6499*t4340;
  t7581 = t7556 + t7561 + t7578;
  t7584 = t98*t2712*t7581;
  t8418 = -1.*t1063*t7681;
  t8419 = -1.*t7695*t1347;
  t8420 = t8418 + t8419;
  t7806 = t4895*t7701;
  t7808 = t3669*t7752;
  t7812 = t4905*t7789;
  t7813 = t7806 + t7808 + t7812;
  t8412 = t7727 + t7738;
  t7861 = -1.*t7701*t4940;
  t7864 = -1.*t7752*t3865;
  t7865 = -1.*t7789*t4947;
  t7866 = t7861 + t7864 + t7865;
  t7909 = t7701*t4940;
  t7927 = t7752*t3865;
  t7930 = t7789*t4947;
  t7931 = t7909 + t7927 + t7930;
  t7964 = -1.*t7701*t4992;
  t7965 = -1.*t7752*t3959;
  t7967 = -1.*t7789*t5018;
  t7970 = t7964 + t7965 + t7967;
  t8039 = -1.*t4895*t7701;
  t8040 = -1.*t3669*t7752;
  t8044 = -1.*t4905*t7789;
  t8045 = t8039 + t8040 + t8044;
  t8106 = t7701*t4992;
  t8114 = t7752*t3959;
  t8116 = t7789*t5018;
  t8118 = t8106 + t8114 + t8116;
  t8701 = 0.194401*t3427;
  t8705 = -1.*t98*t6216;
  t8707 = t8701 + t8705;
  t9195 = -1.*t681*t3427;
  t9199 = -1.*t98*t6462;
  t9200 = t9195 + t9199;
  t4396 = t4378 + t4389;
  t11552 = t7775 + t7784;
  t11474 = -1.*t1814*t3427;
  t11505 = -1.*t98*t7744;
  t11532 = t11474 + t11505;
  t4439 = t4418 + t4433;
  t12136 = -1.*t1063*t1097*t3347;
  t12141 = -1.*t1144*t3347*t1347;
  t12142 = t12136 + t12141;
  t12107 = t1144*t1063*t3347;
  t12116 = -1.*t1097*t3347*t1347;
  t12132 = t12107 + t12116;
  t12135 = t570*t3427;
  t12162 = t98*t12142;
  t12164 = t12135 + t12162;
  t12178 = t98*t570;
  t12184 = -1.*t3427*t12142;
  t12187 = t12178 + t12184;
  t3478 = t98*t3477;
  t3479 = t3468 + t3478;
  t12415 = -1.*t1063*t1097*t3514;
  t12416 = -1.*t1144*t3514*t1347;
  t12421 = t12415 + t12416;
  t12407 = t1144*t1063*t3514;
  t12408 = -1.*t1097*t3514*t1347;
  t12409 = t12407 + t12408;
  t12413 = t3494*t3427;
  t12422 = t98*t12421;
  t12423 = t12413 + t12422;
  t12427 = t98*t3494;
  t12428 = -1.*t3427*t12421;
  t12429 = t12427 + t12428;
  t12398 = t3865*t7813;
  t12401 = t3669*t7866;
  t12403 = t12398 + t12401;
  t12404 = 0.008474765*t3488*t12403;
  t12405 = t3792*t7813;
  t12632 = -1.*t1063*t1097*t4106;
  t12638 = -1.*t1144*t4106*t1347;
  t12649 = t12632 + t12638;
  t12439 = -1.*t7701*t5280;
  t12578 = t1144*t1063*t4106;
  t12579 = -1.*t1097*t4106*t1347;
  t12583 = t12578 + t12579;
  t12446 = -1.*t7752*t3792;
  t12447 = -1.*t7789*t5297;
  t12599 = t4085*t3427;
  t12654 = t98*t12649;
  t12660 = t12599 + t12654;
  t12674 = t98*t4085;
  t12707 = -1.*t3427*t12649;
  t12738 = t12674 + t12707;
  t12457 = t3959*t7931;
  t12459 = t3865*t7970;
  t12463 = t12457 + t12459;
  t12475 = t3959*t8045;
  t12484 = t3669*t8118;
  t12490 = t12475 + t12484;
  t12492 = 0.241*t3832*t12490;
  t12493 = t3726*t7931;
  t12494 = t7701*t5280;
  t12499 = t7752*t3792;
  t12500 = t7789*t5297;
  t12511 = t3792*t7970;
  t12512 = -1.*t7701*t5246;
  t12520 = -1.*t7752*t3726;
  t12526 = -1.*t7789*t5260;
  t12540 = t3726*t8045;
  t12550 = t7701*t5246;
  t12557 = t7752*t3726;
  t12559 = t7789*t5260;
  t6541 = t4867*t6372;
  t6375 = -1.*t4825*t6372;
  t6671 = t4825*t6372;
  t6742 = -1.*t6372*t4923;
  t7091 = -1.*t4867*t6372;
  t7399 = t6372*t4923;
  t7671 = t4895*t7660;
  t7702 = t3418*t7701;
  t7822 = -1.*t7701*t4601;
  t7832 = -1.*t7660*t4940;
  t7892 = t7701*t4601;
  t7894 = t7660*t4940;
  t7933 = -1.*t7701*t4616;
  t7934 = -1.*t7660*t4992;
  t7983 = -1.*t4895*t7660;
  t7985 = -1.*t3418*t7701;
  t8052 = t7701*t4616;
  t8053 = t7660*t4992;
  t12946 = -0.0042573819*t3418;
  t12967 = -1.*t3418*t6462;
  t12974 = t12967 + t6520;
  t12983 = t3453*t12974;
  t8280 = t4867*t6462;
  t12984 = t2712*t6462;
  t13016 = -1.*t1353*t6462;
  t8198 = -1.*t4825*t6462;
  t13073 = t681*t549;
  t13101 = t3453*t6462;
  t13111 = t13073 + t13101 + t6607;
  t13120 = t3418*t13111;
  t13132 = t3418*t6462;
  t13134 = t13132 + t6721;
  t13150 = t4331*t13134;
  t13160 = t1353*t6462;
  t8309 = t4825*t6462;
  t13186 = -1.*t6462*t2751;
  t8353 = -1.*t6462*t4923;
  t13208 = -1.*t6462*t4331;
  t13212 = t3344 + t13208 + t6969;
  t13215 = t3418*t13212;
  t8373 = -1.*t4867*t6462;
  t13237 = -1.*t2712*t6462;
  t13252 = -1.*t3453*t6462;
  t13260 = t881 + t13252 + t7256;
  t13263 = t4331*t13260;
  t13267 = t6462*t2751;
  t8387 = t6462*t4923;
  t13277 = t6462*t4331;
  t13278 = t988 + t13277 + t7556;
  t13279 = t3453*t13278;
  t13288 = t3648*t7744;
  t13292 = 0. + t13288 + t7806;
  t8413 = t4895*t8412;
  t8415 = t4699*t7701;
  t8469 = -1.*t7701*t4739;
  t8472 = -1.*t8412*t4940;
  t13327 = -1.*t1814*t1524;
  t13331 = -1.*t7744*t3850;
  t13332 = t13327 + t13331 + t7861;
  t8543 = t7701*t4739;
  t8544 = t8412*t4940;
  t13351 = t7744*t3850;
  t13352 = t2387 + t13351 + t7909;
  t8592 = -1.*t7701*t4766;
  t8599 = -1.*t8412*t4992;
  t13376 = -1.*t7744*t3909;
  t13383 = t2018 + t13376 + t7964;
  t13395 = -1.*t3648*t7744;
  t13399 = 0. + t13395 + t8039;
  t8654 = -1.*t4895*t8412;
  t8657 = -1.*t4699*t7701;
  t8675 = t7701*t4766;
  t8676 = t8412*t4992;
  t13436 = t1814*t2006;
  t13441 = t7744*t3909;
  t13442 = t13436 + t13441 + t8106;
  t12133 = -1.*t4825*t12132;
  t12205 = t4867*t12132;
  t12250 = t4825*t12132;
  t12261 = -1.*t2712*t6426;
  t12262 = -1.*t12132*t4923;
  t12307 = -1.*t4867*t12132;
  t12339 = t2712*t6426;
  t12346 = t12132*t4923;
  t12410 = t4895*t12409;
  t12445 = -1.*t12409*t4940;
  t12495 = t12409*t4940;
  t12515 = -1.*t12409*t4992;
  t12542 = -1.*t4895*t12409;
  t12553 = t12409*t4992;
  t13722 = t4940*t13292;
  t13726 = t4895*t13332;
  t13727 = t13722 + t13726;
  t13733 = 0.008474765*t3488*t13727;
  t13735 = t5280*t13292;
  t12593 = t4895*t12583;
  t13742 = -1.*t1814*t3488;
  t13748 = -1.*t7744*t3761;
  t12789 = -1.*t12583*t4940;
  t13765 = t4992*t13352;
  t13768 = t4940*t13383;
  t13769 = 0. + t13765 + t13768;
  t13779 = t4992*t13399;
  t13780 = t4895*t13442;
  t13786 = t13779 + t13780;
  t13792 = 0.241*t3832*t13786;
  t13797 = t5246*t13352;
  t13811 = t7744*t3761;
  t12833 = t12583*t4940;
  t13827 = t5280*t13383;
  t13829 = -1.*t7744*t3700;
  t12847 = -1.*t12583*t4992;
  t13857 = t5246*t13399;
  t12870 = -1.*t4895*t12583;
  t13868 = t1814*t3502;
  t13869 = t7744*t3700;
  t12888 = t12583*t4992;
  t14140 = -1.*t1144*t6402*t549;
  t14141 = t1097*t6417*t549;
  t14142 = t988 + t14140 + t14141;
  t14148 = -1.*t1144*t287*t6402;
  t14150 = t287*t1097*t6417;
  t14152 = t14148 + t14150 + t881;
  t13704 = t287*t570;
  t14163 = Power(t1144,2);
  t14165 = Power(t1097,2);
  t14196 = -1.*t3225*t7681;
  t14202 = -1.*t3234*t7695;
  t14203 = 0. + t14196 + t14202;
  t14212 = t3225*t7681;
  t14214 = t3234*t7695;
  t14217 = 0. + t14212 + t14214;
  t14246 = t7681*t3263;
  t14248 = t7695*t3276;
  t14252 = t2387 + t14246 + t14248;
  t14266 = -1.*t7681*t3291;
  t14268 = -1.*t7695*t3307;
  t14269 = t2018 + t14266 + t14268;
  t14204 = t14203*t3502;
  t14218 = t14217*t3488;
  t14229 = t14203*t2006;
  t14230 = 0. + t14229;
  t14231 = 0.241*t14230;
  t14234 = 0. + t14231;
  t14235 = t3832*t14234;
  t14239 = t14217*t1524;
  t14241 = 0. + t14239;
  t14242 = 0.241*t14241;
  t14244 = 0. + t14242;
  t14245 = 0.035165*t3488*t14244;
  t14253 = t3502*t14252;
  t14255 = t1144*t7681*t3609;
  t14256 = -1.*t1097*t7695*t3609;
  t14271 = t3488*t14269;
  t14272 = -1.*t1144*t7681*t3488;
  t14273 = t1097*t7695*t3488;
  t14289 = t2006*t14252;
  t14290 = t1524*t14269;
  t14292 = 0. + t14289 + t14290;
  t14294 = 0.241*t14292;
  t14295 = 0. + t14294;
  t14339 = 0.008474765*t3488*t3078;
  t14340 = 0.241*t3034*t3832;
  t14341 = 0.241*t3034;
  t14343 = 0. + t14341;
  t14344 = t3832*t14343;
  t14346 = 0.241*t3078;
  t14347 = 0. + t14346;
  t14348 = 0.035165*t3488*t14347;
  t14350 = 0.241*t2489;
  t14351 = 0. + t14350;
  t14365 = t1401*t1801;
  t14366 = 0.194401*t1504;
  t14367 = t1680*t1504;
  t14369 = 0. + t14365 + t14366 + t14367;
  t14370 = 0.241*t14369;
  t14371 = 0. + t14370;
  t14372 = t3832*t14371;
  t14373 = -0.194401*t1401;
  t14374 = -1.*t1401*t1680;
  t14375 = t1801*t1504;
  t14376 = 0. + t14373 + t14374 + t14375;
  t14377 = 0.241*t14376;
  t14383 = 0. + t14377;
  t14384 = 0.035165*t3488*t14383;
  t14426 = 0.00016949530000000016*t3488;
  t14429 = -0.03856*t3832;
  t14430 = t14426 + t14429;
  p_output1[0]=var2[15]*(-0.5*(0.0219*t1353*t3427 - 1.527*t1055*t3418*t3427 - 0.241*t2489*t3427*t3648 + 0.085290585*t287*t4296 + 0.241*t3034*t4396 + 0.241*t3078*t4439 - 0.085290585*t4340*t549)*var2[4] - 0.5*(t1374 + t2609 + t2729 + t2767 + 0.241*t2489*t3245*t98 + 0.241*t3034*t3282*t98 + 0.241*t3078*t3313*t98)*var2[5] - 0.5*(t1374 + t2609 + t2729 + t2767 + 0.241*t1353*t2489*t98 + 0.241*t3034*t3051*t98 + 0.241*t3078*t3091*t98)*var2[15] - 0.5*(0.241*t3637*t3669 + t3731 + t3794 + t3870 + t3969 - 0.085290585*t3455*t549 - 0.085290585*t3479*t549 + 1.527*t3408*t3418*t98)*var2[16] - 0.5*(t3731 + t3794 + t3870 + t3969 + 0.241*t3669*t4181)*var2[17]);
  p_output1[1]=var2[15]*(-0.5*(-0.0219*(-1.*t3418*t4468 + t1353*t3427*t4477) + 1.527*t1055*(t3418*t3427*t4477 - 1.*t4468*t4825) + 0.085290585*t287*(-1.*t4296*t4477 - 1.*t4468*t4867) + 0.241*t2489*(-1.*t4468*t4895 - 1.*t4477*t4905) + 0.241*t3034*(-1.*t4468*t4940 - 1.*t4477*t4947) + 0.241*t3078*(-1.*t4468*t4992 - 1.*t4477*t5018) - 0.085290585*(-1.*t4340*t4477 - 1.*t4468*t4923)*t549)*var2[3] - 0.5*(-0.085290585*t287*t4468*t4635 - 0.241*t3034*t4468*t4660 - 0.241*t3078*t4468*t4675 + 0.085290585*t4468*t4646*t549 - 0.0219*t1353*t4468*t98 + 1.527*t1055*t3418*t4468*t98 + 0.241*t2489*t3648*t4468*t98)*var2[4] - 0.5*(t4492 + t4538 + t4569 + t4591 + 0.241*t2489*(t3245*t3427*t4468 + t4477*t4699) + 0.241*t3034*(t3282*t3427*t4468 + t4477*t4739) + 0.241*t3078*(t3313*t3427*t4468 + t4477*t4766))*var2[5] - 0.5*(0.241*t2489*t4490 + t4492 + t4538 + t4569 + t4591 + 0.241*t3034*(t3051*t3427*t4468 + t4477*t4601) + 0.241*t3078*(t3091*t3427*t4468 + t4477*t4616))*var2[15] - 0.5*(1.527*t3408*t5066 + 0.241*t3637*t5212 + t5276 + t5319 + t5363 + t5403 - 0.085290585*t5089*t549 - 0.085290585*(t2712*t4477 - 1.*t4468*t5145)*t549)*var2[16] - 0.5*(0.241*t4181*t5212 + t5276 + t5319 + t5363 + t5403)*var2[17]);
  p_output1[2]=var2[15]*(-0.5*(-0.0219*t4490 + 1.527*t1055*t5066 + 0.085290585*t287*t5089 + 0.241*t2489*(t5198 + t5210) + 0.241*t3034*(t5321 + t5322) + 0.241*t3078*(t5380 + t5384) - 0.085290585*(-1.*t4340*t4468 + t4477*t4923)*t549)*var2[3] - 0.5*(0.085290585*t287*t4477*t4635 + 0.241*t3034*t4477*t4660 + 0.241*t3078*t4477*t4675 - 0.085290585*t4477*t4646*t549 + 0.0219*t1353*t4477*t98 - 1.527*t1055*t3418*t4477*t98 - 0.241*t2489*t3648*t4477*t98)*var2[4] - 0.5*(0.241*t2489*(-1.*t3245*t3427*t4477 + t4468*t4699) + 0.241*t3034*(-1.*t3282*t3427*t4477 + t4468*t4739) + 0.241*t3078*(-1.*t3313*t3427*t4477 + t4468*t4766) + t5473 + t5501 + t5550 + t5609)*var2[5] - 0.5*(0.241*t3034*(-1.*t3051*t3427*t4477 + t4468*t4601) + 0.241*t3078*(-1.*t3091*t3427*t4477 + t4468*t4616) + 0.241*t2489*t5471 + t5473 + t5501 + t5550 + t5609)*var2[15] - 0.5*(1.527*t3408*(-1.*t3418*t3427*t4477 + t4468*t4825) - 0.085290585*(t4296*t4477 + t4468*t4867)*t549 - 0.085290585*(t2712*t4468 + t4477*t5145)*t549 + 0.241*t3637*t5954 + t6015 + t6027 + t6045 + t6073)*var2[16] - 0.5*(0.241*t4181*t5954 + t6015 + t6027 + t6045 + t6073)*var2[17]);
  p_output1[3]=var2[15]*(-0.5*(0.241*t2489*(t3959*(t11552*t3865 + t11532*t4947 + t4396*t7752 + t4660*t7789) + t3865*(-1.*t11552*t3959 - 1.*t11532*t5018 - 1.*t4439*t7752 - 1.*t4675*t7789) + t4439*t7931 + t4396*t7970) + 1.527*t1055*(t4340*t7281 + t4296*t7581 + t6669*(-1.*t4296*t6489 - 1.*t3455*t6499 - 1.*t4635*t6499 - 1.*t4296*t9200) + t3455*(t4340*t6489 + t4646*t6499 + t6499*t6669 + t4340*t9200)) - 0.085290585*t549*(t4296*t6534 - 1.*t3418*t3427*t6629 + t3455*(t3418*t3427*t6489 + t3418*t3427*t9200) + t3418*(t4296*t6489 + t3455*t6499 + t4635*t6499 + t4296*t9200)*t98) + 0.085290585*t287*(t4340*t6726 - 1.*t3418*t3427*t7021 + t6669*(-1.*t3418*t3427*t6489 - 1.*t3418*t3427*t9200) + t3418*(-1.*t4340*t6489 - 1.*t4646*t6499 - 1.*t6499*t6669 - 1.*t4340*t9200)*t98) + 0.241*t3078*(t3669*(-1.*t11552*t3865 - 1.*t11532*t4947 - 1.*t4396*t7752 - 1.*t4660*t7789) + t4396*t7813 - 1.*t3427*t3648*t7866 + t3865*(t11552*t3669 + t11532*t4905 - 1.*t3427*t3648*t7752 - 1.*t3648*t7789*t98)) + 0.241*t3034*(t3669*(t11552*t3959 + t11532*t5018 + t4439*t7752 + t4675*t7789) + t4439*t8045 - 1.*t3427*t3648*t8118 + t3959*(-1.*t11552*t3669 - 1.*t11532*t4905 + t3427*t3648*t7752 + t3648*t7789*t98)) - 0.0219*(-1.*t3418*t3427*t6243 + t3427*(-1.*t3418*t3427*t6220 - 1.*t3418*t3427*t8707) + t98*(-1.*t3418*t3427*t6228 + t4825*t6260 + t3418*t6220*t98) + t3418*t98*(-1.*t6220*t98 - 1.*t8707*t98)))*var2[4] - 0.5*(-0.0219*(t6246 + t3427*(t4825*t6216 + t6261 + t6294 + t6300 + t3418*t6262*t8156 + t3418*t6283*t8156)) - 0.085290585*t549*(t6540 + t6630 + t3455*(t6428 + t6490 + t6500 + t8198 - 1.*t3418*t6262*t8215 - 1.*t3418*t6283*t8215) + t3418*t98*(t6562 + t6575 + t6597 - 1.*t3427*t4296*t8215 + t8280 + t3455*t8215*t98)) + 0.085290585*t287*(t6733 + t7041 + t6669*(t6693 + t6695 + t6701 + t3418*t6262*t8215 + t3418*t6283*t8215 + t8309) + t3418*t98*(t6734 + t6785 + t6857 + t3427*t4340*t8215 + t8353 - 1.*t6669*t8215*t98)) + 1.527*t1055*(t7339 + t7584 + t6669*(t7096 + t7160 + t7224 + t3427*t4296*t8215 + t8373 - 1.*t3455*t8215*t98) + t3455*(t7362 + t7466 + t7471 - 1.*t3427*t4340*t8215 + t8387 + t6669*t8215*t98)) + 0.241*t3078*(t3282*t7813*t98 + t3245*t7866*t98 + t3865*(-1.*t3245*t3427*t7789 + t8413 + t8415 - 1.*t3427*t4905*t8420 + t3245*t7752*t98 + t3669*t8420*t98) + t3669*(t3282*t3427*t7789 + t3427*t4947*t8420 + t8469 + t8472 - 1.*t3282*t7752*t98 - 1.*t3865*t8420*t98)) + 0.241*t2489*(t3313*t7931*t98 + t3282*t7970*t98 + t3959*(-1.*t3282*t3427*t7789 - 1.*t3427*t4947*t8420 + t8543 + t8544 + t3282*t7752*t98 + t3865*t8420*t98) + t3865*(t3313*t3427*t7789 + t3427*t5018*t8420 + t8592 + t8599 - 1.*t3313*t7752*t98 - 1.*t3959*t8420*t98)) + 0.241*t3034*(t3313*t8045*t98 + t3245*t8118*t98 + t3959*(t3245*t3427*t7789 + t3427*t4905*t8420 + t8654 + t8657 - 1.*t3245*t7752*t98 - 1.*t3669*t8420*t98) + t3669*(-1.*t3313*t3427*t7789 - 1.*t3427*t5018*t8420 + t8675 + t8676 + t3313*t7752*t98 + t3959*t8420*t98)))*var2[5] - 0.5*(-0.0219*(t6246 + t3427*(t4825*(-0.02*t1063*t1144 + t6213) + t6261 + t3418*t6262*t6273 + t3418*t6273*t6283 + t6294 + t6300)) - 0.085290585*t549*(t3455*(t6375 - 1.*t3418*t6262*t6382 - 1.*t3418*t6283*t6382 + t6428 + t6490 + t6500) + t6540 + t6630 + t3418*t98*(-1.*t3427*t4296*t6382 + t6541 + t6562 + t6575 + t6597 + t3455*t6382*t98)) + 0.085290585*t287*(t6669*(t3418*t6262*t6382 + t3418*t6283*t6382 + t6671 + t6693 + t6695 + t6701) + t6733 + t7041 + t3418*t98*(t3427*t4340*t6382 + t6734 + t6742 + t6785 + t6857 - 1.*t6382*t6669*t98)) + 1.527*t1055*(t7339 + t7584 + t6669*(t3427*t4296*t6382 + t7091 + t7096 + t7160 + t7224 - 1.*t3455*t6382*t98) + t3455*(-1.*t3427*t4340*t6382 + t7362 + t7399 + t7466 + t7471 + t6382*t6669*t98)) + 0.241*t3078*(t3051*t7813*t98 + t1353*t7866*t98 + t3865*(t7671 + t7702 - 1.*t3427*t4905*t7707 - 1.*t1353*t3427*t7789 + t3669*t7707*t98 + t1353*t7752*t98) + t3669*(t3427*t4947*t7707 + t3051*t3427*t7789 + t7822 + t7832 - 1.*t3865*t7707*t98 - 1.*t3051*t7752*t98)) + 0.241*t2489*(t3091*t7931*t98 + t3051*t7970*t98 + t3959*(-1.*t3427*t4947*t7707 - 1.*t3051*t3427*t7789 + t7892 + t7894 + t3865*t7707*t98 + t3051*t7752*t98) + t3865*(t3427*t5018*t7707 + t3091*t3427*t7789 + t7933 + t7934 - 1.*t3959*t7707*t98 - 1.*t3091*t7752*t98)) + 0.241*t3034*(t3091*t8045*t98 + t1353*t8118*t98 + t3959*(t3427*t4905*t7707 + t1353*t3427*t7789 + t7983 + t7985 - 1.*t3669*t7707*t98 - 1.*t1353*t7752*t98) + t3669*(-1.*t3427*t5018*t7707 - 1.*t3091*t3427*t7789 + t8052 + t8053 + t3959*t7707*t98 + t3091*t7752*t98)))*var2[15] - 0.5*(t12404 + t12492 + 0.241*t12463*t3637 + 0.241*t3078*(t12405 + t3865*(t12410 + t12423*t3669 + t12429*t4905) + t3669*(t12439 + t12445 + t12446 + t12447 - 1.*t12423*t3865 - 1.*t12429*t4947)) + 0.241*t2489*(t12493 + t12511 + t3959*(t12494 + t12495 + t12499 + t12500 + t12423*t3865 + t12429*t4947) + t3865*(t12512 + t12515 + t12520 + t12526 - 1.*t12423*t3959 - 1.*t12429*t5018)) + 0.241*t3034*(t12540 + t3959*(t12542 - 1.*t12423*t3669 - 1.*t12429*t4905) + t3669*(t12550 + t12553 + t12557 + t12559 + t12423*t3959 + t12429*t5018)) + 1.527*t3408*(t6669*t7281 + t3455*t7581) + 1.527*t1055*(t3455*(t12339 + t12346 + t12187*t4340 + t3479*t6489 + t5145*t6499 + t12164*t6669) + t6669*(t12307 - 1.*t12164*t3455 - 1.*t12187*t4296 + t6969 + t6978 + t6989) + t3479*t7281 + t6669*t7581) - 0.085290585*t287*(t3455*t6534 + t3418*t6629*t98) - 0.085290585*t549*(t6669*t6726 + t3418*t7021*t98) - 0.085290585*t549*(t6534*t6669 + t3418*(t12205 + t12164*t3455 + t12187*t4296 + t7556 + t7561 + t7578)*t98 + t3455*(t12133 + t12187*t3418*t3427 - 1.*t12164*t3418*t98)) + 0.085290585*t287*(t3479*t6726 + t3418*(t12261 + t12262 - 1.*t12187*t4340 - 1.*t3479*t6489 - 1.*t5145*t6499 - 1.*t12164*t6669)*t98 + t6669*(t12250 - 1.*t12187*t3418*t3427 + t12164*t3418*t98)))*var2[16] - 0.5*(t12404 + t12492 + 0.241*t12463*t4181 + 0.241*t3078*(t12405 + t3865*(t12593 + t12660*t3669 + t12738*t4905) + t3669*(t12439 + t12446 + t12447 + t12789 - 1.*t12660*t3865 - 1.*t12738*t4947)) + 0.241*t2489*(t12493 + t12511 + t3959*(t12494 + t12499 + t12500 + t12833 + t12660*t3865 + t12738*t4947) + t3865*(t12512 + t12520 + t12526 + t12847 - 1.*t12660*t3959 - 1.*t12738*t5018)) + 0.241*t3034*(t12540 + t3959*(t12870 - 1.*t12660*t3669 - 1.*t12738*t4905) + t3669*(t12550 + t12557 + t12559 + t12888 + t12660*t3959 + t12738*t5018)))*var2[17]);
  p_output1[4]=var2[15]*(-0.5*(t12946 - 0.085290585*t549*(t12983 + t13120 + t4867*(t13016 + t6428 + t8198 - 1.*t3418*t8215) + t4825*(t12984 + t6562 + t3453*t8215 + t8280)) + 0.085290585*t287*(t13150 + t13215 + t4923*(t13160 + t6693 + t3418*t8215 + t8309) + t4825*(t13186 + t6734 - 1.*t4331*t8215 + t8353)) + 1.527*t1055*(t13263 + t13279 + t4923*(t13237 + t7096 - 1.*t3453*t8215 + t8373) + t4867*(t13267 + t7362 + t4331*t8215 + t8387)) + 0.241*t3078*(t13332*t4699 + t13292*t4739 + t4940*(t3245*t7744 + t8413 + t8415 + t3648*t8420) + t4895*(-1.*t3282*t7744 - 1.*t3850*t8420 + t8469 + t8472)) + 0.241*t2489*(t13383*t4739 + t13352*t4766 + t4992*(t3282*t7744 + t3850*t8420 + t8543 + t8544) + t4940*(-1.*t3313*t7744 - 1.*t3909*t8420 + t8592 + t8599)) + 0.241*t3034*(t13442*t4699 + t13399*t4766 + t4992*(-1.*t3245*t7744 - 1.*t3648*t8420 + t8654 + t8657) + t4895*(t3313*t7744 + t3909*t8420 + t8675 + t8676)))*var2[5] - 0.5*(t12946 - 0.085290585*t549*(t12983 + t13120 + t4867*(t13016 + t6375 - 1.*t3418*t6382 + t6428) + t4825*(t12984 + t3453*t6382 + t6541 + t6562)) + 0.085290585*t287*(t13150 + t13215 + t4923*(t13160 + t3418*t6382 + t6671 + t6693) + t4825*(t13186 - 1.*t4331*t6382 + t6734 + t6742)) + 1.527*t1055*(t13263 + t13279 + t4923*(t13237 - 1.*t3453*t6382 + t7091 + t7096) + t4867*(t13267 + t4331*t6382 + t7362 + t7399)) + 0.241*t3078*(t13332*t3418 + t13292*t4601 + t4940*(t7671 + t7702 + t3648*t7707 + t1353*t7744) + t4895*(-1.*t3850*t7707 - 1.*t3051*t7744 + t7822 + t7832)) + 0.241*t2489*(t13383*t4601 + t13352*t4616 + t4992*(t3850*t7707 + t3051*t7744 + t7892 + t7894) + t4940*(-1.*t3909*t7707 - 1.*t3091*t7744 + t7933 + t7934)) + 0.241*t3034*(t13442*t3418 + t13399*t4616 + t4992*(-1.*t3648*t7707 - 1.*t1353*t7744 + t7983 + t7985) + t4895*(t3909*t7707 + t3091*t7744 + t8052 + t8053)))*var2[15] - 0.5*(t13733 + t13792 + 0.241*t13769*t3637 - 0.085290585*t287*(t13111*t4825 + t12974*t4867) + 1.527*t3408*(t13278*t4867 + t13260*t4923) + 0.241*t3078*(t13735 + (t12439 + t12445 + t13742 + t13748 - 1.*t1524*t3494 - 1.*t12421*t3850)*t4895 + (t12410 + t12421*t3648)*t4940) + 0.241*t3034*(t13857 + (t12550 + t12553 + t13868 + t13869 + t2006*t3494 + t12421*t3909)*t4895 + (t12542 - 1.*t12421*t3648)*t4992) + 0.241*t2489*(t13797 + t13827 + (t12512 + t12515 + t13829 + t3496 + t3503 - 1.*t12421*t3909)*t4940 + (t12494 + t12495 + t13811 + t3565 + t3595 + t12421*t3850)*t4992) - 0.085290585*(t13212*t4825 + t13134*t4923)*t549 + 0.085290585*t287*(t13134*t2712 + (t12250 + t12142*t3418)*t4923 + t4825*(t12261 + t12262 + t13073 - 1.*t12142*t4331 + t571 - 1.*t3477*t6462)) - 0.085290585*t549*((t12133 - 1.*t12142*t3418)*t4867 + t12974*t4923 + t4825*(t12205 + t13277 + t12142*t3453 + t549*t570 + t7556 + t988)) + 1.527*t1055*(t13260*t2712 + t13278*t4923 + t4867*(t12339 + t12346 + t13704 + t12142*t4331 + t3477*t6462 + t881) + t4923*(t12307 + t13208 + t3344 - 1.*t12142*t3453 + t6969 + t994)))*var2[16] - 0.5*(t13733 + t13792 + 0.241*t13769*t4181 + 0.241*t3078*(t13735 + (t12439 + t12789 + t13742 + t13748 - 1.*t12649*t3850 - 1.*t1524*t4085)*t4895 + (t12593 + t12649*t3648)*t4940) + 0.241*t3034*(t13857 + (t12550 + t12888 + t13868 + t13869 + t12649*t3909 + t2006*t4085)*t4895 + (t12870 - 1.*t12649*t3648)*t4992) + 0.241*t2489*(t13797 + t13827 + (t12512 + t12847 + t13829 + t3503 - 1.*t12649*t3909 + t4090)*t4940 + (t12494 + t12833 + t13811 + t3565 + t12649*t3850 + t4163)*t4992))*var2[17]);
  p_output1[5]=var2[15]*(-0.5*(-0.0219*(-0.02*t1097*t1144 - 1.*t1097*t6209) + 0.085290585*Power(t287,2)*(t1097*t6356 + t1144*t6364 + t1144*t6402 - 1.*t1097*t6417) - 0.085290585*Power(t549,2)*(-1.*t1097*t6356 - 1.*t1144*t6364 - 1.*t1144*t6402 + t1097*t6417) + 1.527*t1055*(t287*(-1.*t1144*t287*t6356 + t1097*t287*t6364 + t1097*t287*t6402 + t1144*t287*t6417) + t549*(-1.*t1144*t549*t6356 + t1097*t549*t6364 + t1097*t549*t6402 + t1144*t549*t6417)) + 0.241*t1524*t3078*(t3225*t7630 + t3234*t7648 + t1144*t7681 - 1.*t1097*t7695) + 0.241*t2006*t3034*(-1.*t3225*t7630 - 1.*t3234*t7648 - 1.*t1144*t7681 + t1097*t7695) + 0.241*t2489*(t1524*(-1.*t3291*t7630 - 1.*t3307*t7648 + t1097*t1524*t7681 + t1144*t1524*t7695) + t2006*(t3263*t7630 + t3276*t7648 - 1.*t1097*t2343*t7681 - 1.*t1144*t2343*t7695)))*var2[15] - 0.5*(t14235 + t14245 + 0.241*t3078*(t14218 + t1524*(t1144*t3225*t3514 - 1.*t1097*t3234*t3514)) + 0.241*t3034*(t14204 + t2006*(-1.*t1144*t3225*t3514 + t1097*t3234*t3514)) + 0.241*t2489*(t14253 + t14271 + t1524*(t14272 + t14273 + t3496 + t3503 - 1.*t1144*t3291*t3514 + t1097*t3307*t3514) + t2006*(t14255 + t14256 + t1144*t3263*t3514 - 1.*t1097*t3276*t3514 + t3565 + t3595)) + t14295*t3637 + 1.527*t3408*(t14152*t287 + t14142*t549) - 0.17058117*t287*t549*(-1.*t1097*t6402 - 1.*t1144*t6417) - 0.17058117*t287*t549*(t1097*t6402 + t1144*t6417) + 1.527*t1055*(t14142*t287 - 1.*t14152*t549 + t549*(t13704 + t14148 + t14150 - 1.*t14163*t3347*t549 - 1.*t14165*t3347*t549 + t881) + t287*(t3344 - 1.*t14163*t287*t3347 - 1.*t14165*t287*t3347 + t1144*t549*t6402 - 1.*t1097*t549*t6417 + t994)))*var2[16] - 0.5*(t14235 + t14245 + 0.241*t3078*(t14218 + t1524*(t1144*t3225*t4106 - 1.*t1097*t3234*t4106)) + 0.241*t3034*(t14204 + t2006*(-1.*t1144*t3225*t4106 + t1097*t3234*t4106)) + 0.241*t2489*(t14253 + t14271 + t1524*(t14272 + t14273 + t3503 + t4090 - 1.*t1144*t3291*t4106 + t1097*t3307*t4106) + t2006*(t14255 + t14256 + t3565 + t1144*t3263*t4106 - 1.*t1097*t3276*t4106 + t4163)) + t14295*t4181)*var2[17]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=var2[15]*(-0.5*(t14339 + t14340 + t14344 + t14348 + 3.054*t1055*t3408 + t14351*t3637 + 0.241*t2489*t3637)*var2[16] - 0.5*(t14339 + t14340 + t14344 + t14348 + t14351*t4181 + 0.241*t2489*t4181)*var2[17]);
  p_output1[16]=var2[15]*(-0.5*(t14372 + t14384 + 0.0034116234*t287 - 0.0034116234*t549)*var2[16] - 0.5*(t14372 + t14384 + 0.241*t3034*(0.194401*t1401 + t1401*t1680 - 1.*t1504*t1801 + t1504*t4039 + t1401*t4056) + 0.241*t3078*(t14365 + t14366 + t14367 - 1.*t1401*t4039 + t1504*t4056))*var2[17]);
  p_output1[17]=var2[15]*(-0.5*t14430*var2[16] - 0.5*t14430*var2[17]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec16_plane.hh"

namespace SymFunction
{

void Ce1_vec16_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
