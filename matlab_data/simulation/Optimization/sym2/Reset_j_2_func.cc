/*
 * Automatically Generated from Mathematica.
 * Sat 7 Dec 2019 21:23:30 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t613;
  double t82;
  double t452;
  double t385;
  double t631;
  double t576;
  double t652;
  double t681;
  double t774;
  double t830;
  double t861;
  double t970;
  double t963;
  double t940;
  double t951;
  double t977;
  double t1002;
  double t1060;
  double t1078;
  double t1080;
  double t1301;
  double t1312;
  double t1119;
  double t717;
  double t1788;
  double t1808;
  double t1813;
  double t1927;
  double t2032;
  double t2112;
  double t1551;
  double t2265;
  double t2340;
  double t2357;
  double t2491;
  double t2599;
  double t2606;
  double t1174;
  double t1219;
  double t2873;
  double t2927;
  double t2935;
  double t2942;
  double t2970;
  double t2972;
  double t2984;
  double t3322;
  double t3311;
  double t3305;
  double t3308;
  double t3329;
  double t3332;
  double t3397;
  double t3420;
  double t3451;
  double t3675;
  double t3678;
  double t3494;
  double t3289;
  double t3744;
  double t3868;
  double t3872;
  double t3928;
  double t3949;
  double t3953;
  double t3959;
  double t3511;
  double t3624;
  double t4128;
  double t4136;
  double t4145;
  double t4156;
  double t4158;
  double t4174;
  double t3280;
  double t4322;
  double t4320;
  double t4298;
  double t4312;
  double t4332;
  double t4335;
  double t4367;
  double t4375;
  double t4377;
  double t4446;
  double t4448;
  double t4404;
  double t4244;
  double t3846;
  double t4501;
  double t4537;
  double t4558;
  double t4559;
  double t4568;
  double t4570;
  double t4571;
  double t4406;
  double t4422;
  double t4127;
  double t4646;
  double t4650;
  double t4651;
  double t4662;
  double t4665;
  double t4667;
  double t4794;
  double t4795;
  double t4814;
  double t4828;
  double t4829;
  double t4776;
  double t4835;
  double t4842;
  double t4847;
  double t4913;
  double t4923;
  double t4755;
  double t4989;
  double t4997;
  double t5002;
  double t4987;
  double t5005;
  double t5006;
  double t5019;
  double t5021;
  double t5035;
  double t5104;
  double t5119;
  double t5121;
  double t5099;
  double t5125;
  double t5126;
  double t5128;
  double t5134;
  double t5136;
  double t4749;
  double t5240;
  double t5246;
  double t5247;
  double t5248;
  double t5250;
  double t5234;
  double t5251;
  double t5252;
  double t5255;
  double t5256;
  double t5260;
  double t4961;
  double t5214;
  double t5322;
  double t5324;
  double t5325;
  double t5321;
  double t5333;
  double t5334;
  double t5338;
  double t5348;
  double t5353;
  double t5072;
  double t5423;
  double t5434;
  double t5436;
  double t5413;
  double t5437;
  double t5438;
  double t5459;
  double t5461;
  double t5462;
  double t5194;
  double t5512;
  double t5521;
  double t5522;
  double t5525;
  double t5509;
  double t5526;
  double t5528;
  double t5531;
  double t5536;
  double t5537;
  double t5306;
  double t5496;
  double t5611;
  double t5612;
  double t5613;
  double t5610;
  double t5614;
  double t5616;
  double t5630;
  double t5631;
  double t5633;
  double t5404;
  double t5708;
  double t5710;
  double t5711;
  double t5707;
  double t5715;
  double t5717;
  double t5725;
  double t5726;
  double t5727;
  double t5750;
  double t5751;
  double t5753;
  double t5778;
  double t5779;
  double t5782;
  double t5777;
  double t5783;
  double t5784;
  double t5786;
  double t5787;
  double t5789;
  double t5815;
  double t5822;
  double t5824;
  double t5830;
  double t5833;
  double t5834;
  double t5828;
  double t5837;
  double t5839;
  double t5843;
  double t5845;
  double t5847;
  double t5749;
  double t5878;
  double t5880;
  double t5886;
  double t5877;
  double t5891;
  double t5892;
  double t5897;
  double t5906;
  double t5907;
  double t5812;
  double t5935;
  double t5936;
  double t5937;
  double t5934;
  double t5940;
  double t5941;
  double t5943;
  double t5946;
  double t5947;
  double t5870;
  double t5986;
  double t5987;
  double t5989;
  double t5985;
  double t5990;
  double t5991;
  double t5993;
  double t5999;
  double t6001;
  double t5919;
  double t6025;
  double t6026;
  double t6027;
  double t6024;
  double t6028;
  double t6029;
  double t6031;
  double t6032;
  double t6033;
  double t6078;
  double t6079;
  double t6080;
  double t6108;
  double t6109;
  double t6110;
  double t6121;
  double t6126;
  double t6130;
  double t6147;
  double t6149;
  double t6151;
  double t6178;
  double t6180;
  double t6179;
  double t6181;
  double t6182;
  double t6185;
  double t6187;
  double t6193;
  double t6115;
  double t6210;
  double t6215;
  double t6216;
  double t6214;
  double t6217;
  double t6218;
  double t6220;
  double t6225;
  double t6226;
  double t6158;
  double t6244;
  double t6245;
  double t6247;
  double t6248;
  double t6246;
  double t6250;
  double t6252;
  double t6256;
  double t6257;
  double t6258;
  double t6272;
  double t6278;
  double t6279;
  double t6282;
  double t6293;
  double t6294;
  double t6296;
  double t6300;
  double t6310;
  double t6311;
  double t6312;
  double t6318;
  double t6017;
  double t6332;
  double t6333;
  double t6353;
  double t6354;
  double t6355;
  double t6369;
  double t6370;
  double t6371;
  double t6392;
  double t6391;
  double t6396;
  double t6397;
  double t6399;
  double t6400;
  double t6401;
  double t6415;
  double t6416;
  double t6417;
  double t6414;
  double t6418;
  double t6419;
  double t6421;
  double t6422;
  double t6423;
  double t6439;
  double t6440;
  double t6441;
  double t6438;
  double t6442;
  double t6444;
  double t6448;
  double t6449;
  double t6451;
  double t6466;
  double t6467;
  double t6468;
  double t6471;
  double t6480;
  double t6481;
  double t6482;
  double t6486;
  double t6495;
  double t6497;
  double t6499;
  double t6501;
  double t6515;
  double t6516;
  double t6517;
  double t6533;
  double t6534;
  double t6535;
  double t6547;
  double t6548;
  double t6549;
  double t6566;
  double t6565;
  double t6567;
  double t6568;
  double t6570;
  double t6571;
  double t6572;
  double t6530;
  double t6584;
  double t6585;
  double t6583;
  double t6586;
  double t6587;
  double t6589;
  double t6590;
  double t6591;
  double t6552;
  double t6603;
  double t6604;
  double t6602;
  double t6605;
  double t6606;
  double t6608;
  double t6609;
  double t6610;
  double t6621;
  double t6622;
  double t6623;
  double t6625;
  double t6634;
  double t6635;
  double t6636;
  double t6638;
  double t6647;
  double t6648;
  double t6649;
  double t6651;
  t613 = Cos(var1[3]);
  t82 = Cos(var1[5]);
  t452 = Sin(var1[4]);
  t385 = Sin(var1[3]);
  t631 = Sin(var1[5]);
  t576 = -1.*t82*t385*t452;
  t652 = t613*t631;
  t681 = t576 + t652;
  t774 = t613*t82*t452;
  t830 = t385*t631;
  t861 = t774 + t830;
  t970 = Cos(var1[10]);
  t963 = Cos(var1[9]);
  t940 = Sin(var1[10]);
  t951 = t940*t681;
  t977 = t963*t970*t861;
  t1002 = t951 + t977;
  t1060 = t970*t681;
  t1078 = -1.*t963*t940*t861;
  t1080 = t1060 + t1078;
  t1301 = Cos(var1[11]);
  t1312 = 0. + t1301;
  t1119 = Sin(var1[11]);
  t717 = Sin(var1[9]);
  t1788 = -1.*t82*t385;
  t1808 = t613*t452*t631;
  t1813 = t1788 + t1808;
  t1927 = -1.*t613*t82;
  t2032 = -1.*t385*t452*t631;
  t2112 = t1927 + t2032;
  t1551 = 0. + t1119;
  t2265 = -1.*t963*t940*t1813;
  t2340 = t970*t2112;
  t2357 = t2265 + t2340;
  t2491 = t963*t970*t1813;
  t2599 = t940*t2112;
  t2606 = t2491 + t2599;
  t1174 = -1.*t1119;
  t1219 = 0. + t1174;
  t2873 = Cos(var1[4]);
  t2927 = -1.*t963*t613*t2873*t940;
  t2935 = -1.*t970*t2873*t385;
  t2942 = t2927 + t2935;
  t2970 = t963*t970*t613*t2873;
  t2972 = -1.*t2873*t940*t385;
  t2984 = t2970 + t2972;
  t3322 = Cos(var1[16]);
  t3311 = Cos(var1[15]);
  t3305 = Sin(var1[16]);
  t3308 = t3305*t681;
  t3329 = t3311*t3322*t861;
  t3332 = t3308 + t3329;
  t3397 = t3322*t681;
  t3420 = -1.*t3311*t3305*t861;
  t3451 = t3397 + t3420;
  t3675 = Cos(var1[17]);
  t3678 = 0. + t3675;
  t3494 = Sin(var1[17]);
  t3289 = Sin(var1[15]);
  t3744 = 0. + t3494;
  t3868 = -1.*t3311*t3305*t1813;
  t3872 = t3322*t2112;
  t3928 = t3868 + t3872;
  t3949 = t3311*t3322*t1813;
  t3953 = t3305*t2112;
  t3959 = t3949 + t3953;
  t3511 = -1.*t3494;
  t3624 = 0. + t3511;
  t4128 = -1.*t3311*t613*t2873*t3305;
  t4136 = -1.*t3322*t2873*t385;
  t4145 = t4128 + t4136;
  t4156 = t3311*t3322*t613*t2873;
  t4158 = -1.*t2873*t3305*t385;
  t4174 = t4156 + t4158;
  t3280 = -0.1944*t681;
  t4322 = Cos(var1[13]);
  t4320 = Cos(var1[12]);
  t4298 = Sin(var1[13]);
  t4312 = t4298*t681;
  t4332 = t4320*t4322*t861;
  t4335 = t4312 + t4332;
  t4367 = t4322*t681;
  t4375 = -1.*t4320*t4298*t861;
  t4377 = t4367 + t4375;
  t4446 = Cos(var1[14]);
  t4448 = 0. + t4446;
  t4404 = Sin(var1[14]);
  t4244 = Sin(var1[12]);
  t3846 = -0.1944*t2112;
  t4501 = 0. + t4404;
  t4537 = -1.*t4320*t4298*t1813;
  t4558 = t4322*t2112;
  t4559 = t4537 + t4558;
  t4568 = t4320*t4322*t1813;
  t4570 = t4298*t2112;
  t4571 = t4568 + t4570;
  t4406 = -1.*t4404;
  t4422 = 0. + t4406;
  t4127 = 0.1944*t2873*t385;
  t4646 = -1.*t4320*t613*t2873*t4298;
  t4650 = -1.*t4322*t2873*t385;
  t4651 = t4646 + t4650;
  t4662 = t4320*t4322*t613*t2873;
  t4665 = -1.*t2873*t4298*t385;
  t4667 = t4662 + t4665;
  t4794 = t963*t2873*t82*t385;
  t4795 = -1.*t717;
  t4814 = 0. + t4795;
  t4828 = -1.*t82*t4814*t452;
  t4829 = t4794 + t4828;
  t4776 = t613*t2873*t82*t940;
  t4835 = t970*t4829;
  t4842 = t4776 + t4835;
  t4847 = t970*t613*t2873*t82;
  t4913 = -1.*t940*t4829;
  t4923 = t4847 + t4913;
  t4755 = 0. + t963;
  t4989 = t963*t2873*t385*t631;
  t4997 = -1.*t4814*t452*t631;
  t5002 = t4989 + t4997;
  t4987 = t613*t2873*t940*t631;
  t5005 = t970*t5002;
  t5006 = t4987 + t5005;
  t5019 = t970*t613*t2873*t631;
  t5021 = -1.*t940*t5002;
  t5035 = t5019 + t5021;
  t5104 = -1.*t2873*t4814;
  t5119 = -1.*t963*t385*t452;
  t5121 = t5104 + t5119;
  t5099 = -1.*t613*t940*t452;
  t5125 = t970*t5121;
  t5126 = t5099 + t5125;
  t5128 = -1.*t970*t613*t452;
  t5134 = -1.*t940*t5121;
  t5136 = t5128 + t5134;
  t4749 = -0.0817*t82*t452;
  t5240 = t3311*t2873*t82*t385;
  t5246 = -1.*t3289;
  t5247 = 0. + t5246;
  t5248 = -1.*t82*t5247*t452;
  t5250 = t5240 + t5248;
  t5234 = t613*t2873*t82*t3305;
  t5251 = t3322*t5250;
  t5252 = t5234 + t5251;
  t5255 = t3322*t613*t2873*t82;
  t5256 = -1.*t3305*t5250;
  t5260 = t5255 + t5256;
  t4961 = -0.0817*t452*t631;
  t5214 = 0. + t3311;
  t5322 = t3311*t2873*t385*t631;
  t5324 = -1.*t5247*t452*t631;
  t5325 = t5322 + t5324;
  t5321 = t613*t2873*t3305*t631;
  t5333 = t3322*t5325;
  t5334 = t5321 + t5333;
  t5338 = t3322*t613*t2873*t631;
  t5348 = -1.*t3305*t5325;
  t5353 = t5338 + t5348;
  t5072 = -0.0817*t2873;
  t5423 = -1.*t2873*t5247;
  t5434 = -1.*t3311*t385*t452;
  t5436 = t5423 + t5434;
  t5413 = -1.*t613*t3305*t452;
  t5437 = t3322*t5436;
  t5438 = t5413 + t5437;
  t5459 = -1.*t3322*t613*t452;
  t5461 = -1.*t3305*t5436;
  t5462 = t5459 + t5461;
  t5194 = -0.1944*t613*t2873*t82;
  t5512 = t4320*t2873*t82*t385;
  t5521 = 0. + t4244;
  t5522 = -1.*t82*t5521*t452;
  t5525 = t5512 + t5522;
  t5509 = t613*t2873*t82*t4298;
  t5526 = t4322*t5525;
  t5528 = t5509 + t5526;
  t5531 = t4322*t613*t2873*t82;
  t5536 = -1.*t4298*t5525;
  t5537 = t5531 + t5536;
  t5306 = -0.1944*t613*t2873*t631;
  t5496 = 0. + t4320;
  t5611 = t4320*t2873*t385*t631;
  t5612 = -1.*t5521*t452*t631;
  t5613 = t5611 + t5612;
  t5610 = t613*t2873*t4298*t631;
  t5614 = t4322*t5613;
  t5616 = t5610 + t5614;
  t5630 = t4322*t613*t2873*t631;
  t5631 = -1.*t4298*t5613;
  t5633 = t5630 + t5631;
  t5404 = 0.1944*t613*t452;
  t5708 = -1.*t2873*t5521;
  t5710 = -1.*t4320*t385*t452;
  t5711 = t5708 + t5710;
  t5707 = -1.*t613*t4298*t452;
  t5715 = t4322*t5711;
  t5717 = t5707 + t5715;
  t5725 = -1.*t4322*t613*t452;
  t5726 = -1.*t4298*t5711;
  t5727 = t5725 + t5726;
  t5750 = t82*t385;
  t5751 = -1.*t613*t452*t631;
  t5753 = t5750 + t5751;
  t5778 = -1.*t2873*t4814*t631;
  t5779 = t963*t2112;
  t5782 = t5778 + t5779;
  t5777 = t940*t5753;
  t5783 = t970*t5782;
  t5784 = t5777 + t5783;
  t5786 = t970*t5753;
  t5787 = -1.*t940*t5782;
  t5789 = t5786 + t5787;
  t5815 = t82*t385*t452;
  t5822 = -1.*t613*t631;
  t5824 = t5815 + t5822;
  t5830 = t2873*t82*t4814;
  t5833 = t963*t5824;
  t5834 = t5830 + t5833;
  t5828 = t940*t861;
  t5837 = t970*t5834;
  t5839 = t5828 + t5837;
  t5843 = t970*t861;
  t5845 = -1.*t940*t5834;
  t5847 = t5843 + t5845;
  t5749 = -0.0817*t2873*t631;
  t5878 = -1.*t2873*t5247*t631;
  t5880 = t3311*t2112;
  t5886 = t5878 + t5880;
  t5877 = t3305*t5753;
  t5891 = t3322*t5886;
  t5892 = t5877 + t5891;
  t5897 = t3322*t5753;
  t5906 = -1.*t3305*t5886;
  t5907 = t5897 + t5906;
  t5812 = 0.0817*t2873*t82;
  t5935 = t2873*t82*t5247;
  t5936 = t3311*t5824;
  t5937 = t5935 + t5936;
  t5934 = t3305*t861;
  t5940 = t3322*t5937;
  t5941 = t5934 + t5940;
  t5943 = t3322*t861;
  t5946 = -1.*t3305*t5937;
  t5947 = t5943 + t5946;
  t5870 = -0.1944*t5753;
  t5986 = -1.*t2873*t5521*t631;
  t5987 = t4320*t2112;
  t5989 = t5986 + t5987;
  t5985 = t4298*t5753;
  t5990 = t4322*t5989;
  t5991 = t5985 + t5990;
  t5993 = t4322*t5753;
  t5999 = -1.*t4298*t5989;
  t6001 = t5993 + t5999;
  t5919 = -0.1944*t861;
  t6025 = t2873*t82*t5521;
  t6026 = t4320*t5824;
  t6027 = t6025 + t6026;
  t6024 = t4298*t861;
  t6028 = t4322*t6027;
  t6029 = t6024 + t6028;
  t6031 = t4322*t861;
  t6032 = -1.*t4298*t6027;
  t6033 = t6031 + t6032;
  t6078 = -1.*t963*t2873*t82;
  t6079 = -1.*t717*t5824;
  t6080 = t6078 + t6079;
  t6108 = t613*t82;
  t6109 = t385*t452*t631;
  t6110 = t6108 + t6109;
  t6121 = -1.*t963*t2873*t631;
  t6126 = -1.*t717*t6110;
  t6130 = t6121 + t6126;
  t6147 = -1.*t2873*t717*t385;
  t6149 = t963*t452;
  t6151 = t6147 + t6149;
  t6178 = 0. + t774 + t830;
  t6180 = 0. + t5830 + t5833;
  t6179 = -1.*t940*t6178;
  t6181 = -1.*t970*t6180;
  t6182 = t6179 + t6181;
  t6185 = t970*t6178;
  t6187 = -1.*t940*t6180;
  t6193 = t6185 + t6187;
  t6115 = t963*t6110;
  t6210 = 0. + t1788 + t1808;
  t6215 = t2873*t4814*t631;
  t6216 = 0. + t6215 + t6115;
  t6214 = -1.*t940*t6210;
  t6217 = -1.*t970*t6216;
  t6218 = t6214 + t6217;
  t6220 = t970*t6210;
  t6225 = -1.*t940*t6216;
  t6226 = t6220 + t6225;
  t6158 = t963*t2873*t385;
  t6244 = t613*t2873;
  t6245 = 0. + t6244;
  t6247 = -1.*t4814*t452;
  t6248 = 0. + t6158 + t6247;
  t6246 = -1.*t6245*t940;
  t6250 = -1.*t970*t6248;
  t6252 = t6246 + t6250;
  t6256 = t970*t6245;
  t6257 = -1.*t940*t6248;
  t6258 = t6256 + t6257;
  t6272 = t940*t6178;
  t6278 = t970*t6180;
  t6279 = 0. + t6272 + t6278;
  t6282 = 0. + t6185 + t6187;
  t6293 = t940*t6210;
  t6294 = t970*t6216;
  t6296 = 0. + t6293 + t6294;
  t6300 = 0. + t6220 + t6225;
  t6310 = t6245*t940;
  t6311 = t970*t6248;
  t6312 = 0. + t6310 + t6311;
  t6318 = 0. + t6256 + t6257;
  t6017 = -1.*t4244*t5824;
  t6332 = t4320*t2873*t82;
  t6333 = t6332 + t6017;
  t6353 = t4320*t2873*t631;
  t6354 = -1.*t4244*t6110;
  t6355 = t6353 + t6354;
  t6369 = -1.*t2873*t4244*t385;
  t6370 = -1.*t4320*t452;
  t6371 = t6369 + t6370;
  t6392 = 0. + t6025 + t6026;
  t6391 = -1.*t4298*t6178;
  t6396 = -1.*t4322*t6392;
  t6397 = t6391 + t6396;
  t6399 = t4322*t6178;
  t6400 = -1.*t4298*t6392;
  t6401 = t6399 + t6400;
  t6415 = t2873*t5521*t631;
  t6416 = t4320*t6110;
  t6417 = 0. + t6415 + t6416;
  t6414 = -1.*t4298*t6210;
  t6418 = -1.*t4322*t6417;
  t6419 = t6414 + t6418;
  t6421 = t4322*t6210;
  t6422 = -1.*t4298*t6417;
  t6423 = t6421 + t6422;
  t6439 = t4320*t2873*t385;
  t6440 = -1.*t5521*t452;
  t6441 = 0. + t6439 + t6440;
  t6438 = -1.*t6245*t4298;
  t6442 = -1.*t4322*t6441;
  t6444 = t6438 + t6442;
  t6448 = t4322*t6245;
  t6449 = -1.*t4298*t6441;
  t6451 = t6448 + t6449;
  t6466 = t4298*t6178;
  t6467 = t4322*t6392;
  t6468 = 0. + t6466 + t6467;
  t6471 = 0. + t6399 + t6400;
  t6480 = t4298*t6210;
  t6481 = t4322*t6417;
  t6482 = 0. + t6480 + t6481;
  t6486 = 0. + t6421 + t6422;
  t6495 = t6245*t4298;
  t6497 = t4322*t6441;
  t6499 = 0. + t6495 + t6497;
  t6501 = 0. + t6448 + t6449;
  t6515 = -1.*t3311*t2873*t82;
  t6516 = -1.*t3289*t5824;
  t6517 = t6515 + t6516;
  t6533 = -1.*t3311*t2873*t631;
  t6534 = -1.*t3289*t6110;
  t6535 = t6533 + t6534;
  t6547 = -1.*t2873*t3289*t385;
  t6548 = t3311*t452;
  t6549 = t6547 + t6548;
  t6566 = 0. + t5935 + t5936;
  t6565 = -1.*t3305*t6178;
  t6567 = -1.*t3322*t6566;
  t6568 = t6565 + t6567;
  t6570 = t3322*t6178;
  t6571 = -1.*t3305*t6566;
  t6572 = t6570 + t6571;
  t6530 = t3311*t6110;
  t6584 = t2873*t5247*t631;
  t6585 = 0. + t6584 + t6530;
  t6583 = -1.*t3305*t6210;
  t6586 = -1.*t3322*t6585;
  t6587 = t6583 + t6586;
  t6589 = t3322*t6210;
  t6590 = -1.*t3305*t6585;
  t6591 = t6589 + t6590;
  t6552 = t3311*t2873*t385;
  t6603 = -1.*t5247*t452;
  t6604 = 0. + t6552 + t6603;
  t6602 = -1.*t6245*t3305;
  t6605 = -1.*t3322*t6604;
  t6606 = t6602 + t6605;
  t6608 = t3322*t6245;
  t6609 = -1.*t3305*t6604;
  t6610 = t6608 + t6609;
  t6621 = t3305*t6178;
  t6622 = t3322*t6566;
  t6623 = 0. + t6621 + t6622;
  t6625 = 0. + t6570 + t6571;
  t6634 = t3305*t6210;
  t6635 = t3322*t6585;
  t6636 = 0. + t6634 + t6635;
  t6638 = 0. + t6589 + t6590;
  t6647 = t6245*t3305;
  t6648 = t3322*t6604;
  t6649 = 0. + t6647 + t6648;
  t6651 = 0. + t6608 + t6609;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=1.;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=1.;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=1.;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=1.;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=1.;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=1.;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=1.;
  p_output1[27]=-0.2083*t1002 - 0.1422*t1080 - 0.02*(t1002*t1219 + t1080*t1312) - 0.16*(t1002*t1312 + t1080*t1551) + 0.2429*t681 + 0.035199999999999995*t717*t861;
  p_output1[28]=0.2429*t2112 - 0.1422*t2357 - 0.2083*t2606 - 0.02*(t1312*t2357 + t1219*t2606) - 0.16*(t1551*t2357 + t1312*t2606) + 0.035199999999999995*t1813*t717;
  p_output1[29]=-0.1422*t2942 - 0.2083*t2984 - 0.02*(t1312*t2942 + t1219*t2984) - 0.16*(t1551*t2942 + t1312*t2984) - 0.2429*t2873*t385 + 0.035199999999999995*t2873*t613*t717;
  p_output1[30]=t3280 - 0.2083*t3332 - 0.1422*t3451 - 0.02*(t3332*t3624 + t3451*t3678) - 0.16*(t3332*t3678 + t3451*t3744) + 0.035199999999999995*t3289*t861;
  p_output1[31]=0.035199999999999995*t1813*t3289 + t3846 - 0.1422*t3928 - 0.2083*t3959 - 0.02*(t3678*t3928 + t3624*t3959) - 0.16*(t3744*t3928 + t3678*t3959);
  p_output1[32]=t4127 - 0.1422*t4145 - 0.2083*t4174 - 0.02*(t3678*t4145 + t3624*t4174) - 0.16*(t3744*t4145 + t3678*t4174) + 0.035199999999999995*t2873*t3289*t613;
  p_output1[33]=t3280 - 0.2083*t4335 - 0.1422*t4377 - 0.02*(t4335*t4422 + t4377*t4448) - 0.16*(t4335*t4448 + t4377*t4501) + 0.0329*t4244*t861;
  p_output1[34]=t3846 + 0.0329*t1813*t4244 - 0.1422*t4559 - 0.2083*t4571 - 0.02*(t4448*t4559 + t4422*t4571) - 0.16*(t4501*t4559 + t4448*t4571);
  p_output1[35]=t4127 - 0.1422*t4651 - 0.2083*t4667 - 0.02*(t4448*t4651 + t4422*t4667) - 0.16*(t4501*t4651 + t4448*t4667) + 0.0329*t2873*t4244*t613;
  p_output1[36]=t4749 - 0.2083*t4842 - 0.1422*t4923 - 0.02*(t1219*t4842 + t1312*t4923) - 0.16*(t1312*t4842 + t1551*t4923) + 0.2429*t2873*t613*t82 + 0.035199999999999995*(-1.*t452*t4755*t82 + t2873*t385*t717*t82);
  p_output1[37]=t4961 - 0.2083*t5006 - 0.1422*t5035 - 0.02*(t1219*t5006 + t1312*t5035) - 0.16*(t1312*t5006 + t1551*t5035) + 0.2429*t2873*t613*t631 + 0.035199999999999995*(-1.*t452*t4755*t631 + t2873*t385*t631*t717);
  p_output1[38]=t5072 - 0.2083*t5126 - 0.1422*t5136 - 0.02*(t1219*t5126 + t1312*t5136) - 0.16*(t1312*t5126 + t1551*t5136) - 0.2429*t452*t613 + 0.035199999999999995*(-1.*t2873*t4755 - 1.*t385*t452*t717);
  p_output1[39]=t4749 + t5194 - 0.2083*t5252 - 0.1422*t5260 - 0.02*(t3624*t5252 + t3678*t5260) - 0.16*(t3678*t5252 + t3744*t5260) + 0.035199999999999995*(t2873*t3289*t385*t82 - 1.*t452*t5214*t82);
  p_output1[40]=t4961 + t5306 - 0.2083*t5334 - 0.1422*t5353 - 0.02*(t3624*t5334 + t3678*t5353) - 0.16*(t3678*t5334 + t3744*t5353) + 0.035199999999999995*(t2873*t3289*t385*t631 - 1.*t452*t5214*t631);
  p_output1[41]=t5072 + 0.035199999999999995*(-1.*t3289*t385*t452 - 1.*t2873*t5214) + t5404 - 0.2083*t5438 - 0.1422*t5462 - 0.02*(t3624*t5438 + t3678*t5462) - 0.16*(t3678*t5438 + t3744*t5462);
  p_output1[42]=t5194 - 0.2083*t5528 - 0.1422*t5537 - 0.02*(t4422*t5528 + t4448*t5537) - 0.16*(t4448*t5528 + t4501*t5537) + 0.0817*t452*t82 - 0.0329*(-1.*t2873*t385*t4244*t82 - 1.*t452*t5496*t82);
  p_output1[43]=t5306 - 0.2083*t5616 - 0.1422*t5633 - 0.02*(t4422*t5616 + t4448*t5633) - 0.16*(t4448*t5616 + t4501*t5633) + 0.0817*t452*t631 - 0.0329*(-1.*t2873*t385*t4244*t631 - 1.*t452*t5496*t631);
  p_output1[44]=0.0817*t2873 + t5404 - 0.0329*(t385*t4244*t452 - 1.*t2873*t5496) - 0.2083*t5717 - 0.1422*t5727 - 0.02*(t4422*t5717 + t4448*t5727) - 0.16*(t4448*t5717 + t4501*t5727);
  p_output1[45]=t5749 + 0.2429*t5753 - 0.2083*t5784 - 0.1422*t5789 - 0.02*(t1219*t5784 + t1312*t5789) - 0.16*(t1312*t5784 + t1551*t5789) + 0.035199999999999995*(-1.*t2873*t4755*t631 + t2112*t717);
  p_output1[46]=t5812 - 0.2083*t5839 - 0.1422*t5847 - 0.02*(t1219*t5839 + t1312*t5847) - 0.16*(t1312*t5839 + t1551*t5847) + 0.035199999999999995*(t5824*t717 + t2873*t4755*t82) + 0.2429*t861;
  p_output1[47]=0;
  p_output1[48]=t5749 + t5870 - 0.2083*t5892 - 0.1422*t5907 - 0.02*(t3624*t5892 + t3678*t5907) - 0.16*(t3678*t5892 + t3744*t5907) + 0.035199999999999995*(t2112*t3289 - 1.*t2873*t5214*t631);
  p_output1[49]=t5812 + t5919 - 0.2083*t5941 - 0.1422*t5947 - 0.02*(t3624*t5941 + t3678*t5947) - 0.16*(t3678*t5941 + t3744*t5947) + 0.035199999999999995*(t3289*t5824 + t2873*t5214*t82);
  p_output1[50]=0;
  p_output1[51]=t5870 - 0.2083*t5991 - 0.1422*t6001 - 0.02*(t4422*t5991 + t4448*t6001) - 0.16*(t4448*t5991 + t4501*t6001) + 0.0817*t2873*t631 - 0.0329*(-1.*t2112*t4244 - 1.*t2873*t5496*t631);
  p_output1[52]=t5919 - 0.2083*t6029 - 0.1422*t6033 - 0.02*(t4422*t6029 + t4448*t6033) - 0.16*(t4448*t6029 + t4501*t6033) - 0.0817*t2873*t82 - 0.0329*(t6017 + t2873*t5496*t82);
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0.035199999999999995*(t5833 - 1.*t2873*t717*t82) + 0.1422*t6080*t940 - 0.2083*t6080*t970 - 0.02*(-1.*t1312*t6080*t940 + t1219*t6080*t970) - 0.16*(-1.*t1551*t6080*t940 + t1312*t6080*t970);
  p_output1[82]=0.035199999999999995*(t6115 - 1.*t2873*t631*t717) + 0.1422*t6130*t940 - 0.2083*t6130*t970 - 0.02*(-1.*t1312*t6130*t940 + t1219*t6130*t970) - 0.16*(-1.*t1551*t6130*t940 + t1312*t6130*t970);
  p_output1[83]=0.035199999999999995*(t6158 + t452*t717) + 0.1422*t6151*t940 - 0.2083*t6151*t970 - 0.02*(-1.*t1312*t6151*t940 + t1219*t6151*t970) - 0.16*(-1.*t1551*t6151*t940 + t1312*t6151*t970);
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=-0.1422*t6182 - 0.2083*t6193 - 0.02*(t1312*t6182 + t1219*t6193) - 0.16*(t1551*t6182 + t1312*t6193);
  p_output1[91]=-0.1422*t6218 - 0.2083*t6226 - 0.02*(t1312*t6218 + t1219*t6226) - 0.16*(t1551*t6218 + t1312*t6226);
  p_output1[92]=-0.1422*t6252 - 0.2083*t6258 - 0.02*(t1312*t6252 + t1219*t6258) - 0.16*(t1551*t6252 + t1312*t6258);
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=-0.02*(-1.*t1301*t6279 - 1.*t1119*t6282) - 0.16*(-1.*t1119*t6279 + t1301*t6282);
  p_output1[100]=-0.02*(-1.*t1301*t6296 - 1.*t1119*t6300) - 0.16*(-1.*t1119*t6296 + t1301*t6300);
  p_output1[101]=-0.02*(-1.*t1301*t6312 - 1.*t1119*t6318) - 0.16*(-1.*t1119*t6312 + t1301*t6318);
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0.1422*t4298*t6333 - 0.2083*t4322*t6333 - 0.02*(t4322*t4422*t6333 - 1.*t4298*t4448*t6333) - 0.16*(t4322*t4448*t6333 - 1.*t4298*t4501*t6333) - 0.0329*(-1.*t4320*t5824 - 1.*t2873*t4244*t82);
  p_output1[115]=-0.0329*(-1.*t4320*t6110 - 1.*t2873*t4244*t631) + 0.1422*t4298*t6355 - 0.2083*t4322*t6355 - 0.02*(t4322*t4422*t6355 - 1.*t4298*t4448*t6355) - 0.16*(t4322*t4448*t6355 - 1.*t4298*t4501*t6355);
  p_output1[116]=-0.0329*(-1.*t2873*t385*t4320 + t4244*t452) + 0.1422*t4298*t6371 - 0.2083*t4322*t6371 - 0.02*(t4322*t4422*t6371 - 1.*t4298*t4448*t6371) - 0.16*(t4322*t4448*t6371 - 1.*t4298*t4501*t6371);
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=-0.1422*t6397 - 0.2083*t6401 - 0.02*(t4448*t6397 + t4422*t6401) - 0.16*(t4501*t6397 + t4448*t6401);
  p_output1[124]=-0.1422*t6419 - 0.2083*t6423 - 0.02*(t4448*t6419 + t4422*t6423) - 0.16*(t4501*t6419 + t4448*t6423);
  p_output1[125]=-0.1422*t6444 - 0.2083*t6451 - 0.02*(t4448*t6444 + t4422*t6451) - 0.16*(t4501*t6444 + t4448*t6451);
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=-0.02*(-1.*t4446*t6468 - 1.*t4404*t6471) - 0.16*(-1.*t4404*t6468 + t4446*t6471);
  p_output1[133]=-0.02*(-1.*t4446*t6482 - 1.*t4404*t6486) - 0.16*(-1.*t4404*t6482 + t4446*t6486);
  p_output1[134]=-0.02*(-1.*t4446*t6499 - 1.*t4404*t6501) - 0.16*(-1.*t4404*t6499 + t4446*t6501);
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0.1422*t3305*t6517 - 0.2083*t3322*t6517 - 0.02*(t3322*t3624*t6517 - 1.*t3305*t3678*t6517) - 0.16*(t3322*t3678*t6517 - 1.*t3305*t3744*t6517) + 0.035199999999999995*(t5936 - 1.*t2873*t3289*t82);
  p_output1[139]=0.035199999999999995*(-1.*t2873*t3289*t631 + t6530) + 0.1422*t3305*t6535 - 0.2083*t3322*t6535 - 0.02*(t3322*t3624*t6535 - 1.*t3305*t3678*t6535) - 0.16*(t3322*t3678*t6535 - 1.*t3305*t3744*t6535);
  p_output1[140]=0.1422*t3305*t6549 - 0.2083*t3322*t6549 - 0.02*(t3322*t3624*t6549 - 1.*t3305*t3678*t6549) - 0.16*(t3322*t3678*t6549 - 1.*t3305*t3744*t6549) + 0.035199999999999995*(t3289*t452 + t6552);
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=-0.1422*t6568 - 0.2083*t6572 - 0.02*(t3678*t6568 + t3624*t6572) - 0.16*(t3744*t6568 + t3678*t6572);
  p_output1[148]=-0.1422*t6587 - 0.2083*t6591 - 0.02*(t3678*t6587 + t3624*t6591) - 0.16*(t3744*t6587 + t3678*t6591);
  p_output1[149]=-0.1422*t6606 - 0.2083*t6610 - 0.02*(t3678*t6606 + t3624*t6610) - 0.16*(t3744*t6606 + t3678*t6610);
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=-0.02*(-1.*t3675*t6623 - 1.*t3494*t6625) - 0.16*(-1.*t3494*t6623 + t3675*t6625);
  p_output1[157]=-0.02*(-1.*t3675*t6636 - 1.*t3494*t6638) - 0.16*(-1.*t3494*t6636 + t3675*t6638);
  p_output1[158]=-0.02*(-1.*t3675*t6649 - 1.*t3494*t6651) - 0.16*(-1.*t3494*t6649 + t3675*t6651);
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Reset_j_2_func.hh"

namespace SymFunction
{

void Reset_j_2_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
