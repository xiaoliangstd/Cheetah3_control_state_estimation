/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:52:54 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t869;
  double t910;
  double t920;
  double t1534;
  double t1542;
  double t1577;
  double t1638;
  double t375;
  double t623;
  double t756;
  double t2184;
  double t2797;
  double t2881;
  double t3038;
  double t2439;
  double t4102;
  double t4114;
  double t2182;
  double t2443;
  double t2611;
  double t5204;
  double t5656;
  double t6126;
  double t6133;
  double t4174;
  double t4426;
  double t4484;
  double t4761;
  double t3134;
  double t3164;
  double t3265;
  double t7201;
  double t7389;
  double t7421;
  double t7544;
  double t7651;
  double t7652;
  double t6954;
  double t6961;
  double t7099;
  double t9175;
  double t9350;
  double t9835;
  double t9937;
  double t10142;
  double t10212;
  double t11036;
  double t9058;
  double t9077;
  double t9104;
  double t9121;
  double t8395;
  double t8463;
  double t8471;
  double t3622;
  double t3826;
  double t3856;
  double t3894;
  double t3914;
  double t4002;
  double t12113;
  double t12147;
  double t12159;
  double t12172;
  double t12176;
  double t12185;
  double t12186;
  double t12188;
  double t7932;
  double t12228;
  double t12232;
  double t12234;
  double t12272;
  double t12279;
  double t12281;
  double t7657;
  double t11497;
  double t9843;
  double t12353;
  double t12368;
  double t12371;
  double t12402;
  double t12425;
  double t12427;
  double t12488;
  double t11514;
  double t11518;
  double t11707;
  double t12666;
  double t12667;
  double t12669;
  double t12751;
  double t12754;
  double t12757;
  double t12373;
  double t12377;
  double t12543;
  double t12549;
  double t12809;
  double t12810;
  double t12811;
  double t12565;
  double t12586;
  double t12591;
  double t12592;
  double t12786;
  double t12192;
  double t12193;
  double t12196;
  double t12950;
  double t12792;
  double t12793;
  double t12799;
  double t12800;
  double t12803;
  double t12804;
  double t12834;
  double t12835;
  double t12837;
  double t12838;
  double t12839;
  double t12858;
  double t12861;
  double t12862;
  double t12865;
  double t12867;
  double t12868;
  double t12891;
  double t12895;
  double t12897;
  double t12900;
  double t12901;
  double t12903;
  double t12921;
  double t12922;
  double t12931;
  double t12936;
  double t12937;
  double t12938;
  double t12977;
  double t12979;
  double t12980;
  double t12986;
  double t13011;
  double t13012;
  double t13013;
  double t12982;
  double t12989;
  double t13185;
  double t12994;
  double t12995;
  double t13214;
  double t13218;
  double t13219;
  double t13020;
  double t13022;
  double t13024;
  double t13034;
  double t13036;
  double t13039;
  double t13047;
  double t13049;
  double t13053;
  double t13060;
  double t13064;
  double t13065;
  double t13074;
  double t13075;
  double t13076;
  double t13082;
  double t13083;
  double t13088;
  double t13091;
  double t13092;
  double t13107;
  double t13112;
  double t13113;
  double t13125;
  double t13126;
  double t13130;
  double t13135;
  double t13139;
  double t13140;
  double t13151;
  double t13152;
  double t13153;
  double t13162;
  double t13164;
  double t13165;
  double t13331;
  double t13334;
  double t13335;
  double t13325;
  double t13327;
  double t13328;
  double t13368;
  double t13373;
  double t13348;
  double t13353;
  double t13356;
  double t13411;
  double t13412;
  double t13414;
  double t13424;
  double t13429;
  double t13430;
  double t13419;
  double t13431;
  double t13433;
  double t13460;
  double t13461;
  double t13462;
  double t13467;
  double t13475;
  double t13436;
  double t13441;
  double t13443;
  double t13445;
  double t13508;
  double t13514;
  double t13515;
  double t13526;
  double t13528;
  double t13529;
  double t13530;
  double t13626;
  double t13630;
  double t13631;
  double t13653;
  double t13655;
  double t13657;
  double t13681;
  double t13683;
  double t13684;
  double t13686;
  double t13687;
  double t13688;
  double t13685;
  double t13692;
  double t13693;
  double t13725;
  double t13727;
  double t13715;
  double t13719;
  double t13722;
  double t13695;
  double t13701;
  double t13702;
  double t13706;
  double t13784;
  double t13785;
  double t13786;
  double t13805;
  double t13810;
  double t13812;
  double t13826;
  double t13830;
  double t13831;
  double t13835;
  double t13836;
  double t13839;
  double t13840;
  double t13901;
  double t13902;
  double t13903;
  double t13905;
  double t13908;
  double t13910;
  double t13926;
  double t13928;
  double t13929;
  double t13396;
  double t13341;
  double t13347;
  double t13361;
  double t13939;
  double t13398;
  double t13961;
  double t13962;
  double t13389;
  double t13904;
  double t13911;
  double t13913;
  double t14013;
  double t14015;
  double t13491;
  double t13498;
  double t14052;
  double t14053;
  double t14055;
  double t14057;
  double t14061;
  double t14062;
  double t13466;
  double t13483;
  double t14070;
  double t14072;
  double t14074;
  double t14086;
  double t14087;
  double t14089;
  double t13544;
  double t13552;
  double t13559;
  double t13576;
  double t14124;
  double t14128;
  double t14129;
  double t14138;
  double t14140;
  double t14143;
  double t13598;
  double t13604;
  double t13636;
  double t13647;
  double t14180;
  double t14187;
  double t14188;
  double t14203;
  double t14205;
  double t14206;
  double t13723;
  double t13739;
  double t14230;
  double t14231;
  double t14233;
  double t14237;
  double t14239;
  double t14247;
  double t13746;
  double t13751;
  double t14261;
  double t14262;
  double t14264;
  double t14288;
  double t14290;
  double t14291;
  double t13774;
  double t13778;
  double t13788;
  double t13798;
  double t14319;
  double t14323;
  double t14325;
  double t14345;
  double t14346;
  double t14349;
  double t13860;
  double t13864;
  double t13879;
  double t13887;
  double t14402;
  double t14403;
  double t14404;
  double t14418;
  double t14423;
  double t14424;
  double t13242;
  double t13243;
  double t13245;
  double t13247;
  double t13252;
  double t13256;
  double t13226;
  double t13228;
  double t13229;
  double t13232;
  double t13239;
  double t13240;
  double t4983;
  double t5005;
  double t6211;
  double t6293;
  double t6598;
  double t6619;
  double t6681;
  double t6689;
  double t7101;
  double t7672;
  double t7674;
  double t8114;
  double t8178;
  double t8351;
  double t8393;
  double t13190;
  double t13193;
  double t11047;
  double t11054;
  double t11083;
  double t11249;
  double t11503;
  double t11504;
  double t11505;
  double t13199;
  double t13202;
  double t11829;
  double t11877;
  double t11907;
  double t12024;
  double t12051;
  double t12246;
  double t12294;
  double t12310;
  double t12323;
  double t12326;
  double t12329;
  double t12330;
  double t12333;
  double t12334;
  double t12394;
  double t12551;
  double t12556;
  double t12560;
  double t12589;
  double t12595;
  double t12598;
  double t12599;
  double t12601;
  double t13205;
  double t13206;
  double t13207;
  double t12611;
  double t12614;
  double t12622;
  double t12640;
  double t12655;
  double t12656;
  double t12657;
  double t12658;
  double t12675;
  double t12677;
  double t12680;
  double t12683;
  double t12688;
  double t12703;
  double t12714;
  double t12717;
  double t12720;
  double t12728;
  double t12729;
  double t12731;
  double t12744;
  double t12745;
  double t12746;
  double t12756;
  double t12761;
  double t12769;
  double t12770;
  double t12771;
  double t12774;
  double t12778;
  double t12779;
  double t12780;
  double t12781;
  double t12783;
  double t12784;
  double t12785;
  double t13261;
  double t13262;
  double t13269;
  double t12807;
  double t12808;
  double t12818;
  double t12819;
  double t12821;
  double t12822;
  double t12825;
  double t12826;
  double t12828;
  double t12829;
  double t12830;
  double t12831;
  double t12832;
  double t13272;
  double t13274;
  double t13276;
  double t12850;
  double t12851;
  double t12857;
  double t13287;
  double t13289;
  double t13296;
  double t12875;
  double t12876;
  double t12887;
  double t12889;
  double t12890;
  double t13301;
  double t13302;
  double t13303;
  double t12908;
  double t12912;
  double t12915;
  double t12918;
  double t12920;
  double t13306;
  double t13307;
  double t13310;
  double t13195;
  double t13203;
  double t13211;
  double t13224;
  double t13225;
  double t13231;
  double t13241;
  double t13246;
  double t13259;
  double t13270;
  double t13284;
  double t13300;
  double t13305;
  double t13311;
  double t13314;
  double t12991;
  double t12992;
  double t13006;
  double t13007;
  double t13008;
  double t13072;
  double t13077;
  double t13078;
  double t13029;
  double t13031;
  double t13032;
  double t13090;
  double t13096;
  double t13099;
  double t12998;
  double t13002;
  double t13104;
  double t13116;
  double t13117;
  double t13040;
  double t13041;
  double t13043;
  double t13133;
  double t13143;
  double t13146;
  double t13056;
  double t13057;
  double t13058;
  double t13157;
  double t13166;
  double t13170;
  double t13066;
  double t13067;
  double t13069;
  double t13329;
  double t13343;
  double t13346;
  double t13366;
  double t13375;
  double t13378;
  double t13384;
  double t13390;
  double t13391;
  double t13392;
  double t13394;
  double t13400;
  double t13404;
  double t13405;
  double t13407;
  double t13435;
  double t13446;
  double t13452;
  double t13457;
  double t13459;
  double t13478;
  double t13487;
  double t13488;
  double t13490;
  double t13492;
  double t13499;
  double t13501;
  double t13502;
  double t13503;
  double t13519;
  double t13531;
  double t13534;
  double t13538;
  double t13541;
  double t13549;
  double t13556;
  double t13557;
  double t13565;
  double t13568;
  double t13577;
  double t13580;
  double t13581;
  double t13591;
  double t13597;
  double t13600;
  double t13613;
  double t13614;
  double t13633;
  double t13640;
  double t13641;
  double t13648;
  double t13650;
  double t13658;
  double t13661;
  double t13668;
  double t13671;
  double t13677;
  double t13694;
  double t13707;
  double t13709;
  double t13711;
  double t13714;
  double t13734;
  double t13741;
  double t13743;
  double t13749;
  double t13750;
  double t13752;
  double t13756;
  double t13757;
  double t13768;
  double t13775;
  double t13777;
  double t13780;
  double t13782;
  double t13787;
  double t13789;
  double t13796;
  double t13801;
  double t13803;
  double t13814;
  double t13819;
  double t13821;
  double t13823;
  double t13824;
  double t13833;
  double t13845;
  double t13846;
  double t13854;
  double t13856;
  double t13861;
  double t13870;
  double t13878;
  double t13882;
  double t13883;
  double t13889;
  double t13891;
  double t13892;
  double t13893;
  double t13915;
  double t13916;
  double t13919;
  double t13920;
  double t13921;
  double t13922;
  double t13923;
  double t13930;
  double t13931;
  double t13932;
  double t13937;
  double t13941;
  double t13942;
  double t13943;
  double t13944;
  double t13947;
  double t13951;
  double t13955;
  double t13964;
  double t13965;
  double t13966;
  double t13969;
  double t13979;
  double t13981;
  double t13985;
  double t13986;
  double t13988;
  double t13990;
  double t13992;
  double t13993;
  double t13995;
  double t13996;
  double t14003;
  double t14007;
  double t14009;
  double t14018;
  double t14019;
  double t14020;
  double t14022;
  double t14027;
  double t14028;
  double t14036;
  double t14039;
  double t14041;
  double t14042;
  double t14046;
  double t14047;
  double t14056;
  double t14064;
  double t14065;
  double t14067;
  double t14075;
  double t14077;
  double t14079;
  double t14081;
  double t14082;
  double t14084;
  double t14085;
  double t14090;
  double t14091;
  double t14094;
  double t14095;
  double t14097;
  double t14101;
  double t14102;
  double t14105;
  double t14106;
  double t14118;
  double t14121;
  double t14130;
  double t14131;
  double t14132;
  double t14134;
  double t14135;
  double t14136;
  double t14137;
  double t14144;
  double t14147;
  double t14151;
  double t14155;
  double t14166;
  double t14168;
  double t14172;
  double t14173;
  double t14175;
  double t14178;
  double t14179;
  double t14192;
  double t14193;
  double t14194;
  double t14195;
  double t14196;
  double t14201;
  double t14202;
  double t14208;
  double t14209;
  double t14211;
  double t14214;
  double t14217;
  double t14225;
  double t14227;
  double t14234;
  double t14248;
  double t14258;
  double t14259;
  double t14274;
  double t14277;
  double t14278;
  double t14281;
  double t14282;
  double t14284;
  double t14285;
  double t14292;
  double t14293;
  double t14296;
  double t14297;
  double t14301;
  double t14304;
  double t14307;
  double t14309;
  double t14310;
  double t14313;
  double t14317;
  double t14327;
  double t14329;
  double t14332;
  double t14336;
  double t14337;
  double t14341;
  double t14343;
  double t14355;
  double t14359;
  double t14368;
  double t14369;
  double t14370;
  double t14378;
  double t14381;
  double t14383;
  double t14394;
  double t14396;
  double t14397;
  double t14405;
  double t14406;
  double t14407;
  double t14410;
  double t14412;
  double t14413;
  double t14416;
  double t14426;
  double t14433;
  double t14436;
  double t14437;
  double t14438;
  double t12993;
  double t13005;
  double t13010;
  double t13014;
  double t13019;
  double t13033;
  double t13044;
  double t13059;
  double t13071;
  double t13081;
  double t13103;
  double t13121;
  double t13147;
  double t13171;
  double t13177;
  double t14545;
  double t14546;
  double t14547;
  double t14551;
  double t14555;
  double t14556;
  double t14558;
  double t14560;
  double t14566;
  double t14567;
  double t14569;
  double t14572;
  double t14573;
  double t14576;
  double t14579;
  double t13925;
  double t13954;
  double t13968;
  double t14021;
  double t14045;
  double t14092;
  double t14098;
  double t14149;
  double t14167;
  double t14210;
  double t14224;
  double t14294;
  double t14302;
  double t14360;
  double t14374;
  double t14434;
  double t14439;
  double t14442;
  double t14819;
  double t14825;
  double t14827;
  double t14832;
  double t14835;
  double t14838;
  double t14842;
  double t14846;
  double t14847;
  double t14848;
  double t14849;
  double t14851;
  double t14852;
  double t14853;
  double t14854;
  double t14858;
  double t14861;
  double t14863;
  double t14626;
  double t14627;
  double t14628;
  double t14629;
  double t14631;
  double t14632;
  double t14634;
  double t14635;
  double t14636;
  double t14637;
  double t14638;
  double t14640;
  double t14642;
  double t14643;
  double t14644;
  double t14645;
  double t14648;
  double t14650;
  double t14955;
  double t14956;
  double t14957;
  double t13316;
  double t13321;
  double t13410;
  double t13453;
  double t13504;
  double t13536;
  double t13595;
  double t13667;
  double t13679;
  double t13710;
  double t13773;
  double t13820;
  double t13825;
  double t13847;
  double t13894;
  double t13898;
  double t14777;
  double t14779;
  double t14781;
  double t14786;
  double t14787;
  double t14790;
  double t14792;
  double t14793;
  double t14796;
  double t14798;
  double t14807;
  double t14808;
  double t14809;
  double t14810;
  double t14812;
  double t14816;
  double t14594;
  double t14595;
  double t14599;
  double t14600;
  double t14602;
  double t14603;
  double t14604;
  double t14606;
  double t14607;
  double t14608;
  double t14610;
  double t14611;
  double t14613;
  double t14615;
  double t14622;
  double t14624;
  double t14964;
  double t14966;
  double t14973;
  double t14949;
  double t14951;
  double t14953;
  double t14958;
  double t14974;
  double t14977;
  double t14978;
  double t14979;
  double t14980;
  double t14981;
  double t14982;
  double t14985;
  double t14986;
  double t14987;
  double t14988;
  double t14991;
  double t14993;
  double t14996;
  double t14997;
  double t15159;
  double t15161;
  double t12210;
  double t12212;
  double t12335;
  double t15191;
  double t15192;
  double t12650;
  double t12665;
  double t12723;
  double t12734;
  double t12748;
  double t15180;
  double t15181;
  double t15183;
  double t15186;
  double t12805;
  double t12849;
  double t12872;
  double t12907;
  double t12939;
  double t14706;
  double t14708;
  double t14715;
  double t14717;
  double t14722;
  double t14724;
  double t14725;
  double t14726;
  double t14734;
  double t14740;
  double t14743;
  double t14744;
  double t14745;
  double t14503;
  double t14504;
  double t14506;
  double t14507;
  double t14508;
  double t14511;
  double t14512;
  double t14513;
  double t14526;
  double t14528;
  double t14530;
  double t14532;
  double t14534;
  double t15069;
  double t15071;
  double t15073;
  double t15074;
  double t15075;
  double t15077;
  double t15078;
  double t15079;
  double t15080;
  double t15086;
  double t15087;
  double t14909;
  double t14912;
  double t14913;
  double t14914;
  double t14915;
  double t14916;
  double t14920;
  double t14921;
  double t14924;
  double t14926;
  double t14928;
  double t14930;
  double t14934;
  double t15158;
  double t15160;
  double t15162;
  double t15164;
  double t9040;
  double t15255;
  double t15256;
  double t11753;
  double t11792;
  double t11828;
  double t15237;
  double t15239;
  double t15249;
  double t15252;
  double t14679;
  double t14681;
  double t14682;
  double t14683;
  double t14483;
  double t14488;
  double t14492;
  double t14496;
  double t15048;
  double t15049;
  double t15050;
  double t15052;
  double t14890;
  double t14891;
  double t14893;
  double t14894;
  double t15147;
  double t15148;
  double t3892;
  double t4051;
  double t15381;
  double t15382;
  double t15408;
  double t15410;
  double t14670;
  double t14671;
  double t14469;
  double t14470;
  double t15038;
  double t15039;
  double t14880;
  double t14881;
  double t15140;
  double t15141;
  double t15144;
  double t2765;
  double t3524;
  double t3557;
  double t14662;
  double t14666;
  double t14667;
  double t14453;
  double t14459;
  double t14462;
  double t15028;
  double t15029;
  double t15033;
  double t14875;
  double t14877;
  double t14878;
  t869 = Cos(var1[14]);
  t910 = Sin(var1[13]);
  t920 = -1.*t869*t910;
  t1534 = Cos(var1[13]);
  t1542 = Sin(var1[14]);
  t1577 = -1.*t1534*t1542;
  t1638 = 0. + t920 + t1577;
  t375 = Cos(var1[4]);
  t623 = Cos(var1[12]);
  t756 = Cos(var1[5]);
  t2184 = Sin(var1[12]);
  t2797 = t1534*t869;
  t2881 = -1.*t910*t1542;
  t3038 = 0. + t2797 + t2881;
  t2439 = Sin(var1[5]);
  t4102 = -1.*t869;
  t4114 = 1. + t4102;
  t2182 = t623*t756*t1638;
  t2443 = t2184*t1638*t2439;
  t2611 = t2182 + t2443;
  t5204 = -0.336601*t4114;
  t5656 = -0.356601*t869;
  t6126 = -0.16*t1542;
  t6133 = 0. + t5204 + t5656 + t6126;
  t4174 = -0.20833*t4114;
  t4426 = -0.36833*t869;
  t4484 = 0.020000000000000018*t1542;
  t4761 = 0. + t4174 + t4426 + t4484;
  t3134 = t623*t756*t3038;
  t3164 = t2184*t3038*t2439;
  t3265 = t3134 + t3164;
  t7201 = -1.*t1534;
  t7389 = 1. + t7201;
  t7421 = -0.194401*t7389;
  t7544 = -0.234401*t1534;
  t7651 = -0.04*t910;
  t7652 = t7421 + t7544 + t7651;
  t6954 = -0.04*t1534;
  t6961 = 0.04*t910;
  t7099 = t6954 + t6961;
  t9175 = t869*t910;
  t9350 = t1534*t1542;
  t9835 = 0. + t9175 + t9350;
  t9937 = -0.194401*t910;
  t10142 = -1.*t910*t6133;
  t10212 = t1534*t4761;
  t11036 = 0. + t9937 + t10142 + t10212;
  t9058 = -0.194401*t7389;
  t9077 = t1534*t6133;
  t9104 = t910*t4761;
  t9121 = 0. + t9058 + t9077 + t9104;
  t8395 = -1.*t756*t2184;
  t8463 = t623*t2439;
  t8471 = t8395 + t8463;
  t3622 = t623*t1534*t756;
  t3826 = t1534*t2184*t2439;
  t3856 = t3622 + t3826;
  t3894 = -1.*t623*t756*t910;
  t3914 = -1.*t2184*t910*t2439;
  t4002 = t3894 + t3914;
  t12113 = -1.*t623;
  t12147 = 1. + t12113;
  t12159 = -0.081715*t12147;
  t12172 = -0.061715*t623;
  t12176 = t12159 + t12172;
  t12185 = -1.*t12176*t2184;
  t12186 = 0.02*t623*t2184;
  t12188 = t12185 + t12186;
  t7932 = t1534*t7652;
  t12228 = 0.053565*t2184;
  t12232 = t623*t7099;
  t12234 = t12228 + t12232;
  t12272 = -0.13528*t623;
  t12279 = t2184*t7099;
  t12281 = t12159 + t12272 + t12279;
  t7657 = -1.*t7652*t910;
  t11497 = t9121*t3038;
  t9843 = -1.*t9121*t9835;
  t12353 = 0.032875*t2184;
  t12368 = t623*t11036;
  t12371 = t12353 + t12368;
  t12402 = -0.081715*t12147;
  t12425 = -0.11459*t623;
  t12427 = t2184*t11036;
  t12488 = t12402 + t12425 + t12427;
  t11514 = t623*t756;
  t11518 = t2184*t2439;
  t11707 = t11514 + t11518;
  t12666 = 0.053565*t623;
  t12667 = -1.*t2184*t7099;
  t12669 = t12666 + t12667;
  t12751 = -1.*t2184;
  t12754 = 0. + t12751;
  t12757 = 0. + t623;
  t12373 = t623*t1638;
  t12377 = 0. + t12373;
  t12543 = t2184*t1638;
  t12549 = 0. + t12543;
  t12809 = 0.032875*t623;
  t12810 = -1.*t2184*t11036;
  t12811 = t12809 + t12810;
  t12565 = t623*t3038;
  t12586 = 0. + t12565;
  t12591 = t2184*t3038;
  t12592 = 0. + t12591;
  t12786 = Sin(var1[4]);
  t12192 = t756*t2184;
  t12193 = -1.*t623*t2439;
  t12196 = t12192 + t12193;
  t12950 = Power(t375,2);
  t12792 = t910*t12786;
  t12793 = t1534*t756*t2184;
  t12799 = -1.*t623*t1534*t2439;
  t12800 = t12793 + t12799;
  t12803 = t375*t12800;
  t12804 = t12792 + t12803;
  t12834 = t12757*t756;
  t12835 = -1.*t12754*t2439;
  t12837 = 0. + t12834 + t12835;
  t12838 = t375*t12837;
  t12839 = 0. + t12838;
  t12858 = t1534*t12786;
  t12861 = -1.*t756*t2184*t910;
  t12862 = t623*t910*t2439;
  t12865 = t12861 + t12862;
  t12867 = t375*t12865;
  t12868 = t12858 + t12867;
  t12891 = t3038*t12786;
  t12895 = t756*t12549;
  t12897 = -1.*t12377*t2439;
  t12900 = 0. + t12895 + t12897;
  t12901 = t375*t12900;
  t12903 = 0. + t12891 + t12901;
  t12921 = t9835*t12786;
  t12922 = t756*t12592;
  t12931 = -1.*t12586*t2439;
  t12936 = 0. + t12922 + t12931;
  t12937 = t375*t12936;
  t12938 = 0. + t12921 + t12937;
  t12977 = Cos(var1[3]);
  t12979 = -1.*t12977*t12786*t8471;
  t12980 = Sin(var1[3]);
  t12986 = -1.*t2184*t2439;
  t13011 = t12980*t8471;
  t13012 = -1.*t12977*t12786*t11707;
  t13013 = t13011 + t13012;
  t12982 = -1.*t623*t756;
  t12989 = t12982 + t12986;
  t13185 = t12980*t12786*t8471;
  t12994 = -1.*t623*t756;
  t12995 = t12994 + t12986;
  t13214 = t12977*t8471;
  t13218 = t12980*t12786*t11707;
  t13219 = t13214 + t13218;
  t13020 = -1.*t1534*t756*t2184;
  t13022 = t623*t1534*t2439;
  t13024 = t13020 + t13022;
  t13034 = t756*t2184*t910;
  t13036 = -1.*t623*t910*t2439;
  t13039 = t13034 + t13036;
  t13047 = -1.*t756*t2184*t1638;
  t13049 = t623*t1638*t2439;
  t13053 = t13047 + t13049;
  t13060 = -1.*t756*t2184*t3038;
  t13064 = t623*t3038*t2439;
  t13065 = t13060 + t13064;
  t13074 = t375*t910;
  t13075 = -1.*t12786*t12800;
  t13076 = t13074 + t13075;
  t13082 = t756*t12754;
  t13083 = t12757*t2439;
  t13088 = 0. + t13082 + t13083;
  t13091 = -1.*t12786*t12837;
  t13092 = 0. + t13091;
  t13107 = t1534*t375;
  t13112 = -1.*t12786*t12865;
  t13113 = t13107 + t13112;
  t13125 = t756*t12377;
  t13126 = t12549*t2439;
  t13130 = 0. + t13125 + t13126;
  t13135 = t375*t3038;
  t13139 = -1.*t12786*t12900;
  t13140 = 0. + t13135 + t13139;
  t13151 = t756*t12586;
  t13152 = t12592*t2439;
  t13153 = 0. + t13151 + t13152;
  t13162 = t375*t9835;
  t13164 = -1.*t12786*t12936;
  t13165 = 0. + t13162 + t13164;
  t13331 = -0.02*t756*t2184;
  t13334 = t12176*t2439;
  t13335 = t13331 + t13334;
  t13325 = t12176*t756;
  t13327 = 0.02*t2184*t2439;
  t13328 = t13325 + t13327;
  t13368 = 0.02*t623*t2439;
  t13373 = t13331 + t13368;
  t13348 = -0.02*t623*t756;
  t13353 = -0.02*t2184*t2439;
  t13356 = t13348 + t13353;
  t13411 = t756*t12281;
  t13412 = -1.*t12234*t2439;
  t13414 = t13411 + t13412;
  t13424 = t756*t12234;
  t13429 = t12281*t2439;
  t13430 = t13424 + t13429;
  t13419 = -1.*t11707*t13414;
  t13431 = -1.*t8471*t13430;
  t13433 = t13419 + t13431;
  t13460 = t756*t12669;
  t13461 = t12234*t2439;
  t13462 = t13460 + t13461;
  t13467 = -1.*t12669*t2439;
  t13475 = t13424 + t13467;
  t13436 = t7652*t910;
  t13441 = t12800*t13414;
  t13443 = t3856*t13430;
  t13445 = t13436 + t13441 + t13443;
  t13508 = t11707*t13414;
  t13514 = t8471*t13430;
  t13515 = t13508 + t13514;
  t13526 = -1.*t1534*t7652;
  t13528 = -1.*t13414*t12865;
  t13529 = -1.*t13430*t4002;
  t13530 = t13526 + t13528 + t13529;
  t13626 = -1.*t12800*t13414;
  t13630 = -1.*t3856*t13430;
  t13631 = t7657 + t13626 + t13630;
  t13653 = t13414*t12865;
  t13655 = t13430*t4002;
  t13657 = t7932 + t13653 + t13655;
  t13681 = t756*t12488;
  t13683 = -1.*t12371*t2439;
  t13684 = 0. + t13681 + t13683;
  t13686 = t756*t12371;
  t13687 = t12488*t2439;
  t13688 = 0. + t13686 + t13687;
  t13685 = t12837*t13684;
  t13692 = t13088*t13688;
  t13693 = 0. + t13685 + t13692;
  t13725 = -1.*t12811*t2439;
  t13727 = t13686 + t13725;
  t13715 = t756*t12811;
  t13719 = t12371*t2439;
  t13722 = t13715 + t13719;
  t13695 = -1.*t9121*t3038;
  t13701 = -1.*t13684*t12900;
  t13702 = -1.*t13688*t13130;
  t13706 = t13695 + t13701 + t13702;
  t13784 = t13684*t12900;
  t13785 = t13688*t13130;
  t13786 = t11497 + t13784 + t13785;
  t13805 = -1.*t13684*t12936;
  t13810 = -1.*t13688*t13153;
  t13812 = t9843 + t13805 + t13810;
  t13826 = -1.*t12837*t13684;
  t13830 = -1.*t13088*t13688;
  t13831 = 0. + t13826 + t13830;
  t13835 = t9121*t9835;
  t13836 = t13684*t12936;
  t13839 = t13688*t13153;
  t13840 = t13835 + t13836 + t13839;
  t13901 = -0.194401*t12786;
  t13902 = t375*t13328;
  t13903 = t13901 + t13902;
  t13905 = -0.194401*t375;
  t13908 = -1.*t12786*t13328;
  t13910 = t13905 + t13908;
  t13926 = -1.*t12786*t13903;
  t13928 = -1.*t375*t13910;
  t13929 = t13926 + t13928;
  t13396 = t13335*t8471;
  t13341 = t13335*t11707;
  t13347 = -1.*t13335*t12989;
  t13361 = -1.*t8471*t13356;
  t13939 = Power(t12786,2);
  t13398 = t13356*t11707;
  t13961 = t375*t11707*t13903;
  t13962 = -1.*t12786*t11707*t13910;
  t13389 = -1.*t13335*t8471;
  t13904 = t12786*t13903;
  t13911 = t375*t13910;
  t13913 = t13904 + t13911;
  t14013 = -1.*t375*t11707*t13903;
  t14015 = t12786*t11707*t13910;
  t13491 = -1.*t8471*t13462;
  t13498 = -1.*t12989*t13430;
  t14052 = t7652*t12786;
  t14053 = t375*t13414;
  t14055 = t14052 + t14053;
  t14057 = t375*t7652;
  t14061 = -1.*t12786*t13414;
  t14062 = t14057 + t14061;
  t13466 = t3856*t13462;
  t13483 = t13024*t13430;
  t14070 = -1.*t375*t11707*t14055;
  t14072 = t12786*t11707*t14062;
  t14074 = t13431 + t14070 + t14072;
  t14086 = t12804*t14055;
  t14087 = t13076*t14062;
  t14089 = t13443 + t14086 + t14087;
  t13544 = t8471*t13462;
  t13552 = t12989*t13430;
  t13559 = -1.*t13430*t13039;
  t13576 = -1.*t13462*t4002;
  t14124 = t375*t11707*t14055;
  t14128 = -1.*t12786*t11707*t14062;
  t14129 = t13514 + t14124 + t14128;
  t14138 = -1.*t14055*t12868;
  t14140 = -1.*t14062*t13113;
  t14143 = t13529 + t14138 + t14140;
  t13598 = -1.*t3856*t13462;
  t13604 = -1.*t13024*t13430;
  t13636 = t13430*t13039;
  t13647 = t13462*t4002;
  t14180 = -1.*t12804*t14055;
  t14187 = -1.*t13076*t14062;
  t14188 = t13630 + t14180 + t14187;
  t14203 = t14055*t12868;
  t14205 = t14062*t13113;
  t14206 = t13655 + t14203 + t14205;
  t13723 = t13088*t13722;
  t13739 = t12995*t13688;
  t14230 = t9121*t12786;
  t14231 = t375*t13684;
  t14233 = 0. + t14230 + t14231;
  t14237 = t375*t9121;
  t14239 = -1.*t12786*t13684;
  t14247 = 0. + t14237 + t14239;
  t13746 = -1.*t13688*t13053;
  t13751 = -1.*t13722*t13130;
  t14261 = t12839*t14233;
  t14262 = t13092*t14247;
  t14264 = t13692 + t14261 + t14262;
  t14288 = -1.*t14233*t12903;
  t14290 = -1.*t14247*t13140;
  t14291 = t13702 + t14288 + t14290;
  t13774 = t13688*t13053;
  t13778 = t13722*t13130;
  t13788 = -1.*t13688*t13065;
  t13798 = -1.*t13722*t13153;
  t14319 = t14233*t12903;
  t14323 = t14247*t13140;
  t14325 = t13785 + t14319 + t14323;
  t14345 = -1.*t14233*t12938;
  t14346 = -1.*t14247*t13165;
  t14349 = t13810 + t14345 + t14346;
  t13860 = -1.*t13088*t13722;
  t13864 = -1.*t12995*t13688;
  t13879 = t13688*t13065;
  t13887 = t13722*t13153;
  t14402 = -1.*t12839*t14233;
  t14403 = -1.*t13092*t14247;
  t14404 = t13830 + t14402 + t14403;
  t14418 = t14233*t12938;
  t14423 = t14247*t13165;
  t14424 = t13839 + t14418 + t14423;
  t13242 = t12977*t13053;
  t13243 = t12980*t12786*t2611;
  t13245 = t13242 + t13243;
  t13247 = t12977*t13065;
  t13252 = t12980*t12786*t3265;
  t13256 = t13247 + t13252;
  t13226 = t12977*t13024;
  t13228 = t12980*t12786*t3856;
  t13229 = t13226 + t13228;
  t13232 = t12977*t13039;
  t13239 = t12980*t12786*t4002;
  t13240 = t13232 + t13239;
  t4983 = t869*t4761;
  t5005 = 0.194401*t1542;
  t6211 = t6133*t1542;
  t6293 = 0. + t4983 + t5005 + t6211;
  t6598 = -0.194401*t869;
  t6619 = -1.*t869*t6133;
  t6681 = t4761*t1542;
  t6689 = 0. + t6598 + t6619 + t6681;
  t7101 = -1.*t1534*t7099;
  t7672 = t7101 + t7657;
  t7674 = -1.*t1534*t7672;
  t8114 = -1.*t7099*t910;
  t8178 = t7932 + t8114;
  t8351 = -1.*t910*t8178;
  t8393 = t7674 + t8351;
  t13190 = t12977*t12989;
  t13193 = t13185 + t13190;
  t11047 = -1.*t11036*t3038;
  t11054 = 0. + t9843 + t11047;
  t11083 = -1.*t3038*t11054;
  t11249 = t11036*t1638;
  t11503 = 0. + t11249 + t11497;
  t11504 = -1.*t9835*t11503;
  t11505 = 0. + t11083 + t11504;
  t13199 = t12977*t12995;
  t13202 = t13185 + t13199;
  t11829 = -0.081715*t1638;
  t11877 = -0.11459*t9835;
  t11907 = 0. + t11829 + t11877;
  t12024 = 0.032875*t3038;
  t12051 = 0. + t12024;
  t12246 = -1.*t623*t12234*t910;
  t12294 = -1.*t2184*t12281*t910;
  t12310 = t7932 + t12246 + t12294;
  t12323 = t910*t12310;
  t12326 = -1.*t623*t1534*t12234;
  t12329 = -1.*t1534*t2184*t12281;
  t12330 = t12326 + t12329 + t7657;
  t12333 = t1534*t12330;
  t12334 = t12323 + t12333;
  t12394 = t12371*t12377;
  t12551 = t12488*t12549;
  t12556 = t11497 + t12394 + t12551;
  t12560 = t9835*t12556;
  t12589 = -1.*t12371*t12586;
  t12595 = -1.*t12488*t12592;
  t12598 = t9843 + t12589 + t12595;
  t12599 = t3038*t12598;
  t12601 = 0. + t12560 + t12599;
  t13205 = t12980*t12786*t12196;
  t13206 = t12977*t11707;
  t13207 = t13205 + t13206;
  t12611 = -1.*t12176*t623;
  t12614 = Power(t623,2);
  t12622 = 0.02*t12614;
  t12640 = t12611 + t12622;
  t12655 = t12176*t623;
  t12656 = Power(t2184,2);
  t12657 = 0.02*t12656;
  t12658 = t12655 + t12657;
  t12675 = -1.*t623*t1534*t12669;
  t12677 = -1.*t623*t1534*t12281;
  t12680 = t12675 + t12677;
  t12683 = t1534*t12680;
  t12688 = -1.*t623*t12669*t910;
  t12703 = -1.*t623*t12281*t910;
  t12714 = t12688 + t12703;
  t12717 = t910*t12714;
  t12720 = t12683 + t12717;
  t12728 = -1.*t2184*t12234;
  t12729 = t623*t12281;
  t12731 = t12728 + t12729;
  t12744 = t2184*t12234;
  t12745 = -1.*t623*t12281;
  t12746 = t12744 + t12745;
  t12756 = -1.*t12754*t12371;
  t12761 = -1.*t12757*t12488;
  t12769 = 0. + t12756 + t12761;
  t12770 = t12769*t9835;
  t12771 = 0. + t12770;
  t12774 = t12754*t12371;
  t12778 = t12757*t12488;
  t12779 = 0. + t12774 + t12778;
  t12780 = t12779*t3038;
  t12781 = 0. + t12780;
  t12783 = -1.*t2184*t12669;
  t12784 = -1.*t2184*t12281;
  t12785 = t12783 + t12784;
  t13261 = t12977*t3856;
  t13262 = -1.*t12980*t13076;
  t13269 = t13261 + t13262;
  t12807 = -1.*t2184*t12371*t1638;
  t12808 = t623*t12488*t1638;
  t12818 = t12811*t12377;
  t12819 = t12371*t12549;
  t12821 = t12807 + t12808 + t12818 + t12819;
  t12822 = t9835*t12821;
  t12825 = t2184*t12371*t3038;
  t12826 = -1.*t623*t12488*t3038;
  t12828 = -1.*t12811*t12586;
  t12829 = -1.*t12371*t12592;
  t12830 = t12825 + t12826 + t12828 + t12829;
  t12831 = t3038*t12830;
  t12832 = t12822 + t12831;
  t13272 = t12977*t13088;
  t13274 = -1.*t12980*t13092;
  t13276 = 0. + t13272 + t13274;
  t12850 = t2184*t12669;
  t12851 = t2184*t12281;
  t12857 = t12850 + t12851;
  t13287 = t12977*t4002;
  t13289 = -1.*t12980*t13113;
  t13296 = t13287 + t13289;
  t12875 = t623*t12371;
  t12876 = -1.*t12757*t12371;
  t12887 = -1.*t12754*t12811;
  t12889 = t2184*t12488;
  t12890 = t12875 + t12876 + t12887 + t12889;
  t13301 = t12977*t13130;
  t13302 = -1.*t12980*t13140;
  t13303 = 0. + t13301 + t13302;
  t12908 = -1.*t623*t12371;
  t12912 = t12757*t12371;
  t12915 = t12754*t12811;
  t12918 = -1.*t2184*t12488;
  t12920 = t12908 + t12912 + t12915 + t12918;
  t13306 = t12977*t13153;
  t13307 = -1.*t12980*t13165;
  t13310 = 0. + t13306 + t13307;
  t13195 = 1.768*t375*t11707*t13193;
  t13203 = 0.241*t12839*t13202;
  t13211 = 0.241*t375*t11707*t13207;
  t13224 = 0.241*t375*t12196*t13219;
  t13225 = 1.768*t375*t8471*t13219;
  t13231 = 1.527*t12804*t13229;
  t13241 = 1.527*t12868*t13240;
  t13246 = 0.241*t13245*t12903;
  t13259 = 0.241*t13256*t12938;
  t13270 = 1.527*t375*t3856*t13269;
  t13284 = 0.241*t375*t8471*t13276;
  t13300 = 1.527*t375*t4002*t13296;
  t13305 = 0.241*t375*t2611*t13303;
  t13311 = 0.241*t375*t3265*t13310;
  t13314 = t13195 + t13203 + t13211 + t13224 + t13225 + t13231 + t13241 + t13246 + t13259 + t13270 + t13284 + t13300 + t13305 + t13311;
  t12991 = t12980*t12989;
  t12992 = t12979 + t12991;
  t13006 = -1.*t12977*t12786*t12196;
  t13007 = t12980*t11707;
  t13008 = t13006 + t13007;
  t13072 = t12980*t3856;
  t13077 = t12977*t13076;
  t13078 = t13072 + t13077;
  t13029 = t12980*t13024;
  t13031 = -1.*t12977*t12786*t3856;
  t13032 = t13029 + t13031;
  t13090 = t12980*t13088;
  t13096 = t12977*t13092;
  t13099 = 0. + t13090 + t13096;
  t12998 = t12980*t12995;
  t13002 = t12979 + t12998;
  t13104 = t12980*t4002;
  t13116 = t12977*t13113;
  t13117 = t13104 + t13116;
  t13040 = t12980*t13039;
  t13041 = -1.*t12977*t12786*t4002;
  t13043 = t13040 + t13041;
  t13133 = t12980*t13130;
  t13143 = t12977*t13140;
  t13146 = 0. + t13133 + t13143;
  t13056 = t12980*t13053;
  t13057 = -1.*t12977*t12786*t2611;
  t13058 = t13056 + t13057;
  t13157 = t12980*t13153;
  t13166 = t12977*t13165;
  t13170 = 0. + t13157 + t13166;
  t13066 = t12980*t13065;
  t13067 = -1.*t12977*t12786*t3265;
  t13069 = t13066 + t13067;
  t13329 = t12196*t13328;
  t13343 = t13329 + t13341;
  t13346 = t12989*t13343;
  t13366 = -1.*t8471*t13328;
  t13375 = -1.*t13373*t11707;
  t13378 = t13347 + t13361 + t13366 + t13375;
  t13384 = t11707*t13378;
  t13390 = -1.*t13328*t11707;
  t13391 = t13389 + t13390;
  t13392 = t8471*t13391;
  t13394 = t12196*t13373;
  t13400 = t13328*t11707;
  t13404 = t13394 + t13396 + t13398 + t13400;
  t13405 = t8471*t13404;
  t13407 = t13346 + t13384 + t13392 + t13405;
  t13435 = t3856*t13433;
  t13446 = t8471*t13445;
  t13452 = t13435 + t13446;
  t13457 = t13024*t13433;
  t13459 = t3856*t13414;
  t13478 = t12800*t13475;
  t13487 = t13459 + t13466 + t13478 + t13483;
  t13488 = t8471*t13487;
  t13490 = -1.*t8471*t13414;
  t13492 = -1.*t11707*t13475;
  t13499 = t13490 + t13491 + t13492 + t13498;
  t13501 = t3856*t13499;
  t13502 = t12989*t13445;
  t13503 = t13457 + t13488 + t13501 + t13502;
  t13519 = t4002*t13515;
  t13531 = t8471*t13530;
  t13534 = t13519 + t13531;
  t13538 = t13039*t13515;
  t13541 = t8471*t13414;
  t13549 = t11707*t13475;
  t13556 = t13541 + t13544 + t13549 + t13552;
  t13557 = t4002*t13556;
  t13565 = -1.*t13475*t12865;
  t13568 = -1.*t13414*t4002;
  t13577 = t13559 + t13565 + t13568 + t13576;
  t13580 = t8471*t13577;
  t13581 = t12989*t13530;
  t13591 = t13538 + t13557 + t13580 + t13581;
  t13597 = -1.*t3856*t13414;
  t13600 = -1.*t12800*t13475;
  t13613 = t13597 + t13598 + t13600 + t13604;
  t13614 = t4002*t13613;
  t13633 = t13039*t13631;
  t13640 = t13475*t12865;
  t13641 = t13414*t4002;
  t13648 = t13636 + t13640 + t13641 + t13647;
  t13650 = t3856*t13648;
  t13658 = t13024*t13657;
  t13661 = t13614 + t13633 + t13650 + t13658;
  t13668 = t4002*t13631;
  t13671 = t3856*t13657;
  t13677 = t13668 + t13671;
  t13694 = t13130*t13693;
  t13707 = t13088*t13706;
  t13709 = t13694 + t13707;
  t13711 = t13053*t13693;
  t13714 = t8471*t13684;
  t13734 = t12837*t13727;
  t13741 = t13714 + t13723 + t13734 + t13739;
  t13743 = t13130*t13741;
  t13749 = -1.*t13684*t2611;
  t13750 = -1.*t13727*t12900;
  t13752 = t13746 + t13749 + t13750 + t13751;
  t13756 = t13088*t13752;
  t13757 = t12995*t13706;
  t13768 = t13711 + t13743 + t13756 + t13757;
  t13775 = t13684*t2611;
  t13777 = t13727*t12900;
  t13780 = t13774 + t13775 + t13777 + t13778;
  t13782 = t13153*t13780;
  t13787 = t13065*t13786;
  t13789 = -1.*t13684*t3265;
  t13796 = -1.*t13727*t12936;
  t13801 = t13788 + t13789 + t13796 + t13798;
  t13803 = t13130*t13801;
  t13814 = t13053*t13812;
  t13819 = t13782 + t13787 + t13803 + t13814;
  t13821 = t13153*t13786;
  t13823 = t13130*t13812;
  t13824 = 0. + t13821 + t13823;
  t13833 = t13153*t13831;
  t13845 = t13088*t13840;
  t13846 = t13833 + t13845;
  t13854 = t13065*t13831;
  t13856 = -1.*t8471*t13684;
  t13861 = -1.*t12837*t13727;
  t13870 = t13856 + t13860 + t13861 + t13864;
  t13878 = t13153*t13870;
  t13882 = t13684*t3265;
  t13883 = t13727*t12936;
  t13889 = t13879 + t13882 + t13883 + t13887;
  t13891 = t13088*t13889;
  t13892 = t12995*t13840;
  t13893 = t13854 + t13878 + t13891 + t13892;
  t13915 = t375*t12196*t13913;
  t13916 = -1.*t13335*t11707;
  t13919 = -1.*t375*t12196*t13903;
  t13920 = t12786*t12196*t13910;
  t13921 = t13916 + t13919 + t13920;
  t13922 = t12786*t13921;
  t13923 = t13915 + t13922;
  t13930 = t375*t8471*t13929;
  t13931 = t13335*t12989;
  t13932 = t8471*t13356;
  t13937 = t12950*t13373*t11707;
  t13941 = t13939*t13373*t11707;
  t13942 = t375*t8471*t13903;
  t13943 = -1.*t12786*t8471*t13910;
  t13944 = t13931 + t13932 + t13937 + t13941 + t13942 + t13943;
  t13947 = t12786*t13944;
  t13951 = t13930 + t13947;
  t13955 = t375*t11707*t13929;
  t13964 = t13396 + t13961 + t13962;
  t13965 = t12786*t13964;
  t13966 = t13955 + t13965;
  t13969 = t375*t12196*t13903;
  t13979 = -1.*t12786*t12196*t13910;
  t13981 = t13341 + t13969 + t13979;
  t13985 = t375*t8471*t13981;
  t13986 = -1.*t12950*t13373*t11707;
  t13988 = -1.*t13939*t13373*t11707;
  t13990 = -1.*t375*t8471*t13903;
  t13992 = t12786*t8471*t13910;
  t13993 = t13347 + t13361 + t13986 + t13988 + t13990 + t13992;
  t13995 = t375*t12196*t13993;
  t13996 = t12950*t12196*t13373;
  t14003 = t13939*t12196*t13373;
  t14007 = t13996 + t14003 + t13396 + t13398 + t13961 + t13962;
  t14009 = t375*t11707*t14007;
  t14018 = t13389 + t14013 + t14015;
  t14019 = t375*t11707*t14018;
  t14020 = t13985 + t13995 + t14009 + t14019;
  t14022 = t375*t11707*t13913;
  t14027 = -1.*t12950*t12196*t13373;
  t14028 = -1.*t13939*t12196*t13373;
  t14036 = -1.*t13356*t11707;
  t14039 = t14027 + t14028 + t13389 + t14036 + t14013 + t14015;
  t14041 = t12786*t14039;
  t14042 = t14022 + t14041;
  t14046 = -1.*t12950*t11707*t13475;
  t14047 = -1.*t13939*t11707*t13475;
  t14056 = -1.*t375*t8471*t14055;
  t14064 = t12786*t8471*t14062;
  t14065 = t13491 + t14046 + t14047 + t13498 + t14056 + t14064;
  t14067 = t12804*t14065;
  t14075 = t375*t3856*t14074;
  t14077 = t375*t13475*t12804;
  t14079 = -1.*t12786*t13475*t13076;
  t14081 = t375*t3856*t14055;
  t14082 = -1.*t12786*t3856*t14062;
  t14084 = t13466 + t13483 + t14077 + t14079 + t14081 + t14082;
  t14085 = t375*t11707*t14084;
  t14090 = t375*t8471*t14089;
  t14091 = t14067 + t14075 + t14085 + t14090;
  t14094 = t12804*t14074;
  t14095 = t375*t11707*t14089;
  t14097 = t14094 + t14095;
  t14101 = t12950*t11707*t13475;
  t14102 = t13939*t11707*t13475;
  t14105 = t375*t8471*t14055;
  t14106 = -1.*t12786*t8471*t14062;
  t14118 = t13544 + t14101 + t14102 + t13552 + t14105 + t14106;
  t14121 = t12868*t14118;
  t14130 = t375*t4002*t14129;
  t14131 = -1.*t375*t4002*t14055;
  t14132 = t12786*t4002*t14062;
  t14134 = -1.*t375*t13475*t12868;
  t14135 = t12786*t13475*t13113;
  t14136 = t13559 + t13576 + t14131 + t14132 + t14134 + t14135;
  t14137 = t375*t11707*t14136;
  t14144 = t375*t8471*t14143;
  t14147 = t14121 + t14130 + t14137 + t14144;
  t14151 = t12868*t14129;
  t14155 = t375*t11707*t14143;
  t14166 = t14151 + t14155;
  t14168 = -1.*t375*t13475*t12804;
  t14172 = t12786*t13475*t13076;
  t14173 = -1.*t375*t3856*t14055;
  t14175 = t12786*t3856*t14062;
  t14178 = t13598 + t13604 + t14168 + t14172 + t14173 + t14175;
  t14179 = t12868*t14178;
  t14192 = t375*t4002*t14188;
  t14193 = t375*t4002*t14055;
  t14194 = -1.*t12786*t4002*t14062;
  t14195 = t375*t13475*t12868;
  t14196 = -1.*t12786*t13475*t13113;
  t14201 = t13636 + t13647 + t14193 + t14194 + t14195 + t14196;
  t14202 = t12804*t14201;
  t14208 = t375*t3856*t14206;
  t14209 = t14179 + t14192 + t14202 + t14208;
  t14211 = t12868*t14188;
  t14214 = t12804*t14206;
  t14217 = t14211 + t14214;
  t14225 = t375*t13727*t12839;
  t14227 = -1.*t12786*t13727*t13092;
  t14234 = t375*t8471*t14233;
  t14248 = -1.*t12786*t8471*t14247;
  t14258 = t13723 + t13739 + t14225 + t14227 + t14234 + t14248;
  t14259 = t12903*t14258;
  t14274 = t375*t2611*t14264;
  t14277 = -1.*t375*t2611*t14233;
  t14278 = t12786*t2611*t14247;
  t14281 = -1.*t375*t13727*t12903;
  t14282 = t12786*t13727*t13140;
  t14284 = t13746 + t13751 + t14277 + t14278 + t14281 + t14282;
  t14285 = t12839*t14284;
  t14292 = t375*t8471*t14291;
  t14293 = t14259 + t14274 + t14285 + t14292;
  t14296 = t12903*t14264;
  t14297 = t12839*t14291;
  t14301 = t14296 + t14297;
  t14304 = t375*t2611*t14233;
  t14307 = -1.*t12786*t2611*t14247;
  t14309 = t375*t13727*t12903;
  t14310 = -1.*t12786*t13727*t13140;
  t14313 = t13774 + t13778 + t14304 + t14307 + t14309 + t14310;
  t14317 = t12938*t14313;
  t14327 = t375*t3265*t14325;
  t14329 = -1.*t375*t3265*t14233;
  t14332 = t12786*t3265*t14247;
  t14336 = -1.*t375*t13727*t12938;
  t14337 = t12786*t13727*t13165;
  t14341 = t13788 + t13798 + t14329 + t14332 + t14336 + t14337;
  t14343 = t12903*t14341;
  t14355 = t375*t2611*t14349;
  t14359 = t14317 + t14327 + t14343 + t14355;
  t14368 = t12938*t14325;
  t14369 = t12903*t14349;
  t14370 = t14368 + t14369;
  t14378 = -1.*t375*t13727*t12839;
  t14381 = t12786*t13727*t13092;
  t14383 = -1.*t375*t8471*t14233;
  t14394 = t12786*t8471*t14247;
  t14396 = t13860 + t13864 + t14378 + t14381 + t14383 + t14394;
  t14397 = t12938*t14396;
  t14405 = t375*t3265*t14404;
  t14406 = t375*t3265*t14233;
  t14407 = -1.*t12786*t3265*t14247;
  t14410 = t375*t13727*t12938;
  t14412 = -1.*t12786*t13727*t13165;
  t14413 = t13879 + t13887 + t14406 + t14407 + t14410 + t14412;
  t14416 = t12839*t14413;
  t14426 = t375*t8471*t14424;
  t14433 = t14397 + t14405 + t14416 + t14426;
  t14436 = t12938*t14404;
  t14437 = t12839*t14424;
  t14438 = t14436 + t14437;
  t12993 = 1.768*t375*t11707*t12992;
  t13005 = 0.241*t12839*t13002;
  t13010 = 0.241*t375*t11707*t13008;
  t13014 = 0.241*t375*t12196*t13013;
  t13019 = 1.768*t375*t8471*t13013;
  t13033 = 1.527*t12804*t13032;
  t13044 = 1.527*t12868*t13043;
  t13059 = 0.241*t13058*t12903;
  t13071 = 0.241*t13069*t12938;
  t13081 = 1.527*t375*t3856*t13078;
  t13103 = 0.241*t375*t8471*t13099;
  t13121 = 1.527*t375*t4002*t13117;
  t13147 = 0.241*t375*t2611*t13146;
  t13171 = 0.241*t375*t3265*t13170;
  t13177 = t12993 + t13005 + t13010 + t13014 + t13019 + t13033 + t13044 + t13059 + t13071 + t13081 + t13103 + t13121 + t13147 + t13171;
  t14545 = 1.768*t13193*t13013;
  t14546 = 0.241*t13207*t13013;
  t14547 = 1.768*t12992*t13219;
  t14551 = 0.241*t13008*t13219;
  t14555 = 1.527*t13229*t13078;
  t14556 = 1.527*t13032*t13269;
  t14558 = 0.241*t13202*t13099;
  t14560 = 0.241*t13002*t13276;
  t14566 = 1.527*t13240*t13117;
  t14567 = 1.527*t13043*t13296;
  t14569 = 0.241*t13245*t13146;
  t14572 = 0.241*t13058*t13303;
  t14573 = 0.241*t13256*t13170;
  t14576 = 0.241*t13069*t13310;
  t14579 = t14545 + t14546 + t14547 + t14551 + t14555 + t14556 + t14558 + t14560 + t14566 + t14567 + t14569 + t14572 + t14573 + t14576;
  t13925 = 0.241*t375*t8471*t13923;
  t13954 = 0.241*t375*t12196*t13951;
  t13968 = 0.241*t375*t11707*t13966;
  t14021 = 0.241*t12786*t14020;
  t14045 = 0.241*t375*t11707*t14042;
  t14092 = 1.527*t12868*t14091;
  t14098 = 1.527*t375*t4002*t14097;
  t14149 = 1.527*t12804*t14147;
  t14167 = 1.527*t375*t3856*t14166;
  t14210 = 1.527*t375*t11707*t14209;
  t14224 = 1.527*t375*t8471*t14217;
  t14294 = 0.241*t12938*t14293;
  t14302 = 0.241*t375*t3265*t14301;
  t14360 = 0.241*t12839*t14359;
  t14374 = 0.241*t375*t8471*t14370;
  t14434 = 0.241*t12903*t14433;
  t14439 = 0.241*t375*t2611*t14438;
  t14442 = t13925 + t13954 + t13968 + t14021 + t14045 + t14092 + t14098 + t14149 + t14167 + t14210 + t14224 + t14294 + t14302 + t14360 + t14374 + t14434 + t14439;
  t14819 = 0.241*t12992*t13923;
  t14825 = 0.241*t13008*t13951;
  t14827 = 0.241*t13013*t13966;
  t14832 = 0.241*t12977*t375*t14020;
  t14835 = 0.241*t13013*t14042;
  t14838 = 1.527*t13117*t14091;
  t14842 = 1.527*t13043*t14097;
  t14846 = 1.527*t13078*t14147;
  t14847 = 1.527*t13032*t14166;
  t14848 = 1.527*t13013*t14209;
  t14849 = 1.527*t12992*t14217;
  t14851 = 0.241*t13170*t14293;
  t14852 = 0.241*t13069*t14301;
  t14853 = 0.241*t13099*t14359;
  t14854 = 0.241*t13002*t14370;
  t14858 = 0.241*t13146*t14433;
  t14861 = 0.241*t13058*t14438;
  t14863 = t14819 + t14825 + t14827 + t14832 + t14835 + t14838 + t14842 + t14846 + t14847 + t14848 + t14849 + t14851 + t14852 + t14853 + t14854 + t14858 + t14861;
  t14626 = 0.241*t13193*t13923;
  t14627 = 0.241*t13207*t13951;
  t14628 = 0.241*t13219*t13966;
  t14629 = -0.241*t375*t12980*t14020;
  t14631 = 0.241*t13219*t14042;
  t14632 = 1.527*t13296*t14091;
  t14634 = 1.527*t13240*t14097;
  t14635 = 1.527*t13269*t14147;
  t14636 = 1.527*t13229*t14166;
  t14637 = 1.527*t13219*t14209;
  t14638 = 1.527*t13193*t14217;
  t14640 = 0.241*t13310*t14293;
  t14642 = 0.241*t13256*t14301;
  t14643 = 0.241*t13276*t14359;
  t14644 = 0.241*t13202*t14370;
  t14645 = 0.241*t13303*t14433;
  t14648 = 0.241*t13245*t14438;
  t14650 = t14626 + t14627 + t14628 + t14629 + t14631 + t14632 + t14634 + t14635 + t14636 + t14637 + t14638 + t14640 + t14642 + t14643 + t14644 + t14645 + t14648;
  t14955 = t375*t11707*t13981;
  t14956 = t375*t12196*t14018;
  t14957 = t14955 + t14956;
  t13316 = 0.046850641*t375*t12196*t12989;
  t13321 = -0.046850641*t375*t8471*t11707;
  t13410 = 0.241*t12786*t13407;
  t13453 = 1.527*t375*t4002*t13452;
  t13504 = 1.527*t12868*t13503;
  t13536 = 1.527*t375*t3856*t13534;
  t13595 = 1.527*t12804*t13591;
  t13667 = 1.527*t375*t11707*t13661;
  t13679 = 1.527*t375*t8471*t13677;
  t13710 = 0.241*t375*t3265*t13709;
  t13773 = 0.241*t12938*t13768;
  t13820 = 0.241*t12839*t13819;
  t13825 = 0.241*t375*t8471*t13824;
  t13847 = 0.241*t375*t2611*t13846;
  t13894 = 0.241*t12903*t13893;
  t13898 = t13316 + t13321 + t13410 + t13453 + t13504 + t13536 + t13595 + t13667 + t13679 + t13710 + t13773 + t13820 + t13825 + t13847 + t13894;
  t14777 = -0.046850641*t11707*t12992;
  t14779 = 0.046850641*t12989*t13008;
  t14781 = 0.241*t12977*t375*t13407;
  t14786 = 1.527*t13043*t13452;
  t14787 = 1.527*t13503*t13117;
  t14790 = 1.527*t13032*t13534;
  t14792 = 1.527*t13078*t13591;
  t14793 = 1.527*t13013*t13661;
  t14796 = 1.527*t12992*t13677;
  t14798 = 0.241*t13069*t13709;
  t14807 = 0.241*t13768*t13170;
  t14808 = 0.241*t13099*t13819;
  t14809 = 0.241*t13002*t13824;
  t14810 = 0.241*t13058*t13846;
  t14812 = 0.241*t13146*t13893;
  t14816 = t14777 + t14779 + t14781 + t14786 + t14787 + t14790 + t14792 + t14793 + t14796 + t14798 + t14807 + t14808 + t14809 + t14810 + t14812;
  t14594 = -0.046850641*t11707*t13193;
  t14595 = 0.046850641*t12989*t13207;
  t14599 = -0.241*t375*t12980*t13407;
  t14600 = 1.527*t13240*t13452;
  t14602 = 1.527*t13503*t13296;
  t14603 = 1.527*t13229*t13534;
  t14604 = 1.527*t13269*t13591;
  t14606 = 1.527*t13219*t13661;
  t14607 = 1.527*t13193*t13677;
  t14608 = 0.241*t13256*t13709;
  t14610 = 0.241*t13768*t13310;
  t14611 = 0.241*t13276*t13819;
  t14613 = 0.241*t13202*t13824;
  t14615 = 0.241*t13245*t13846;
  t14622 = 0.241*t13303*t13893;
  t14624 = t14594 + t14595 + t14599 + t14600 + t14602 + t14603 + t14604 + t14606 + t14607 + t14608 + t14610 + t14611 + t14613 + t14615 + t14622;
  t14964 = t8471*t13343;
  t14966 = t11707*t13391;
  t14973 = t14964 + t14966;
  t14949 = -0.046850641*t8471*t13923;
  t14951 = 0.046850641*t8471*t13951;
  t14953 = 0.046850641*t12989*t13966;
  t14958 = 0.241*t13407*t14957;
  t14974 = 0.241*t14973*t14020;
  t14977 = -0.046850641*t11707*t14042;
  t14978 = 1.527*t13452*t14091;
  t14979 = 1.527*t13503*t14097;
  t14980 = 1.527*t13534*t14147;
  t14981 = 1.527*t13591*t14166;
  t14982 = 1.527*t13677*t14209;
  t14985 = 1.527*t13661*t14217;
  t14986 = 0.241*t13709*t14293;
  t14987 = 0.241*t13768*t14301;
  t14988 = 0.241*t13824*t14359;
  t14991 = 0.241*t13819*t14370;
  t14993 = 0.241*t13846*t14433;
  t14996 = 0.241*t13893*t14438;
  t14997 = t14949 + t14951 + t14953 + t14958 + t14974 + t14977 + t14978 + t14979 + t14980 + t14981 + t14982 + t14985 + t14986 + t14987 + t14988 + t14991 + t14993 + t14996;
  t15159 = Power(t1534,2);
  t15161 = Power(t910,2);
  t12210 = 0.241*t375*t12188*t12196;
  t12212 = 0.241*t375*t12188*t8471;
  t12335 = 1.527*t375*t12334*t8471;
  t15191 = 0.241*t12601;
  t15192 = 0. + t15191;
  t12650 = 0.241*t12640*t375*t11707;
  t12665 = 0.241*t375*t12658*t11707;
  t12723 = 1.527*t375*t12720*t11707;
  t12734 = 1.527*t1534*t375*t12731*t3856;
  t12748 = 1.527*t375*t12746*t910*t4002;
  t15180 = 0.241*t12771;
  t15181 = 0. + t15180;
  t15183 = 0.241*t12781;
  t15186 = 0. + t15183;
  t12805 = 1.527*t1534*t12785*t12804;
  t12849 = 0.241*t12832*t12839;
  t12872 = 1.527*t12857*t910*t12868;
  t12907 = 0.241*t12890*t9835*t12903;
  t12939 = 0.241*t12920*t3038*t12938;
  t14706 = 0.241*t12188*t12992;
  t14708 = 1.527*t12334*t12992;
  t14715 = 0.241*t12188*t13008;
  t14717 = 0.241*t12640*t13013;
  t14722 = 0.241*t12658*t13013;
  t14724 = 1.527*t12720*t13013;
  t14725 = 1.527*t1534*t12731*t13032;
  t14726 = 1.527*t12746*t910*t13043;
  t14734 = 1.527*t1534*t12785*t13078;
  t14740 = 0.241*t12832*t13099;
  t14743 = 1.527*t12857*t910*t13117;
  t14744 = 0.241*t12890*t9835*t13146;
  t14745 = 0.241*t12920*t3038*t13170;
  t14503 = 0.241*t12188*t13193;
  t14504 = 1.527*t12334*t13193;
  t14506 = 0.241*t12188*t13207;
  t14507 = 0.241*t12640*t13219;
  t14508 = 0.241*t12658*t13219;
  t14511 = 1.527*t12720*t13219;
  t14512 = 1.527*t1534*t12731*t13229;
  t14513 = 1.527*t12746*t910*t13240;
  t14526 = 1.527*t1534*t12785*t13269;
  t14528 = 0.241*t12832*t13276;
  t14530 = 1.527*t12857*t910*t13296;
  t14532 = 0.241*t12890*t9835*t13303;
  t14534 = 0.241*t12920*t3038*t13310;
  t15069 = 0.046850641*t12658*t12989;
  t15071 = -0.046850641*t12640*t11707;
  t15073 = 1.527*t12857*t910*t13452;
  t15074 = 1.527*t12746*t910*t13503;
  t15075 = 1.527*t1534*t12785*t13534;
  t15077 = 1.527*t1534*t12731*t13591;
  t15078 = 1.527*t12334*t13661;
  t15079 = 1.527*t12720*t13677;
  t15080 = 0.241*t12920*t3038*t13709;
  t15086 = 0.241*t12832*t13824;
  t15087 = 0.241*t12890*t9835*t13846;
  t14909 = 0.241*t12640*t13923;
  t14912 = 0.241*t12658*t13951;
  t14913 = 0.241*t12188*t13966;
  t14914 = 0.241*t12188*t14042;
  t14915 = 1.527*t12746*t910*t14091;
  t14916 = 1.527*t12857*t910*t14097;
  t14920 = 1.527*t1534*t12731*t14147;
  t14921 = 1.527*t1534*t12785*t14166;
  t14924 = 1.527*t12334*t14209;
  t14926 = 1.527*t12720*t14217;
  t14928 = 0.241*t12920*t3038*t14301;
  t14930 = 0.241*t12832*t14370;
  t14934 = 0.241*t12890*t9835*t14438;
  t15158 = -0.00482*t12188;
  t15160 = 0.081793755*t15159*t12785;
  t15162 = -0.081793755*t12857*t15161;
  t15164 = 1.527*t12720*t8393;
  t9040 = 1.527*t375*t8393*t8471;
  t15255 = 0.241*t11505;
  t15256 = 0. + t15255;
  t11753 = -0.00482*t375*t11707;
  t11792 = 0.081793755*t1534*t375*t3856;
  t11828 = -0.081793755*t375*t910*t4002;
  t15237 = 0.241*t11907;
  t15239 = 0. + t15237;
  t15249 = 0.241*t12051;
  t15252 = 0. + t15249;
  t14679 = 1.527*t8393*t12992;
  t14681 = -0.00482*t13013;
  t14682 = 0.081793755*t1534*t13032;
  t14683 = -0.081793755*t910*t13043;
  t14483 = 1.527*t8393*t13193;
  t14488 = -0.00482*t13219;
  t14492 = 0.081793755*t1534*t13229;
  t14496 = -0.081793755*t910*t13240;
  t15048 = -0.00093701282*t12989;
  t15049 = -0.081793755*t910*t13503;
  t15050 = 0.081793755*t1534*t13591;
  t15052 = 1.527*t8393*t13661;
  t14890 = -0.00482*t13951;
  t14891 = -0.081793755*t910*t14091;
  t14893 = 0.081793755*t1534*t14147;
  t14894 = 1.527*t8393*t14209;
  t15147 = 0.06108*t1534*t12785;
  t15148 = -0.06108*t12857*t910;
  t3892 = 0.06108*t375*t3856;
  t4051 = -0.06108*t375*t4002;
  t15381 = 0.241*t6293;
  t15382 = 0. + t15381;
  t15408 = 0.241*t6689;
  t15410 = 0. + t15408;
  t14670 = 0.06108*t13032;
  t14671 = -0.06108*t13043;
  t14469 = 0.06108*t13229;
  t14470 = -0.06108*t13240;
  t15038 = -0.06108*t13503;
  t15039 = 0.06108*t13591;
  t14880 = -0.06108*t14091;
  t14881 = 0.06108*t14147;
  t15140 = -0.03856*t12890*t9835;
  t15141 = 0.004820000000000004*t12920*t3038;
  t15144 = t15140 + t15141;
  t2765 = -0.03856*t375*t2611;
  t3524 = 0.004820000000000004*t375*t3265;
  t3557 = t2765 + t3524;
  t14662 = -0.03856*t13058;
  t14666 = 0.004820000000000004*t13069;
  t14667 = t14662 + t14666;
  t14453 = -0.03856*t13245;
  t14459 = 0.004820000000000004*t13256;
  t14462 = t14453 + t14459;
  t15028 = 0.004820000000000004*t13768;
  t15029 = -0.03856*t13893;
  t15033 = t15028 + t15029;
  t14875 = 0.004820000000000004*t14293;
  t14877 = -0.03856*t14433;
  t14878 = t14875 + t14877;
  p_output1[0]=var2[12]*(-0.5*(0.482*t11707*t12196*t12950 + 0.482*t12903*t2611*t375 + 0.482*t12938*t3265*t375 + 3.054*t12804*t375*t3856 + 3.054*t12868*t375*t4002 + 3.536*t11707*t12950*t8471 + 0.482*t12839*t375*t8471)*var2[0] - 0.5*t13314*var2[1] - 0.5*t13177*var2[2] - 0.5*t14442*var2[3] - 0.5*t13898*var2[4] - 0.5*(t12210 + t12212 + t12335 + t12650 + t12665 + t12723 + t12734 + t12748 + t12805 + t12849 + t12872 + t12907 + t12939 + 0.241*t12771*t2611*t375 + 0.241*t12781*t3265*t375 + 0.241*t12601*t375*t8471)*var2[5] - 0.5*(t11753 + t11792 + t11828 + 0.241*t11907*t2611*t375 + 0.241*t12051*t3265*t375 + 0.241*t11505*t375*t8471 + t9040)*var2[12] - 0.5*(t3892 + t4051 + 0.241*t2611*t375*t6293 + 0.241*t3265*t375*t6689)*var2[13] - 0.5*t3557*var2[14]);
  p_output1[1]=var2[12]*(-0.5*t13314*var2[0] - 0.5*(3.536*t13193*t13219 + 0.482*t13207*t13219 + 3.054*t13229*t13269 + 0.482*t13202*t13276 + 3.054*t13240*t13296 + 0.482*t13245*t13303 + 0.482*t13256*t13310)*var2[1] - 0.5*t14579*var2[2] - 0.5*t14650*var2[3] - 0.5*t14624*var2[4] - 0.5*(0.241*t12601*t13202 + 0.241*t12771*t13245 + 0.241*t12781*t13256 + t14503 + t14504 + t14506 + t14507 + t14508 + t14511 + t14512 + t14513 + t14526 + t14528 + t14530 + t14532 + t14534)*var2[5] - 0.5*(0.241*t11505*t13202 + 0.241*t11907*t13245 + 0.241*t12051*t13256 + t14483 + t14488 + t14492 + t14496)*var2[12] - 0.5*(t14469 + t14470 + 0.241*t13245*t6293 + 0.241*t13256*t6689)*var2[13] - 0.5*t14462*var2[14]);
  p_output1[2]=var2[12]*(-0.5*t13177*var2[0] - 0.5*t14579*var2[1] - 0.5*(3.536*t12992*t13013 + 0.482*t13008*t13013 + 3.054*t13032*t13078 + 0.482*t13002*t13099 + 3.054*t13043*t13117 + 0.482*t13058*t13146 + 0.482*t13069*t13170)*var2[2] - 0.5*t14863*var2[3] - 0.5*t14816*var2[4] - 0.5*(0.241*t12601*t13002 + 0.241*t12771*t13058 + 0.241*t12781*t13069 + t14706 + t14708 + t14715 + t14717 + t14722 + t14724 + t14725 + t14726 + t14734 + t14740 + t14743 + t14744 + t14745)*var2[5] - 0.5*(0.241*t11505*t13002 + 0.241*t11907*t13058 + 0.241*t12051*t13069 + t14679 + t14681 + t14682 + t14683)*var2[12] - 0.5*(t14670 + t14671 + 0.241*t13058*t6293 + 0.241*t13069*t6689)*var2[13] - 0.5*t14667*var2[14]);
  p_output1[3]=var2[12]*(-0.5*t14442*var2[0] - 0.5*t14650*var2[1] - 0.5*t14863*var2[2] - 0.5*(0.482*t13951*t13966 + 0.482*t13923*t14042 + 3.054*t14091*t14097 + 3.054*t14147*t14166 + 3.054*t14209*t14217 + 0.482*t14293*t14301 + 0.482*t14359*t14370 + 0.482*t14433*t14438 + 0.482*t14020*t14957)*var2[3] - 0.5*t14997*var2[4] - 0.5*(0.241*t12781*t14293 + 0.241*t12601*t14359 + 0.241*t12771*t14433 + t14909 + t14912 + t14913 + t14914 + t14915 + t14916 + t14920 + t14921 + t14924 + t14926 + t14928 + t14930 + t14934)*var2[5] - 0.5*(0.241*t12051*t14293 + 0.241*t11505*t14359 + 0.241*t11907*t14433 + t14890 + t14891 + t14893 + t14894)*var2[12] - 0.5*(t14880 + t14881 + 0.241*t14433*t6293 + 0.241*t14293*t6689)*var2[13] - 0.5*t14878*var2[14]);
  p_output1[4]=var2[12]*(-0.5*t13898*var2[0] - 0.5*t14624*var2[1] - 0.5*t14816*var2[2] - 0.5*t14997*var2[3] - 0.5*(3.054*t13452*t13503 + 3.054*t13534*t13591 + 3.054*t13661*t13677 + 0.482*t13709*t13768 + 0.482*t13819*t13824 + 0.482*t13846*t13893 + 0.482*t13407*t14973 + 0.018215622922082*t11707*t8471 + 0.018215622922082*t12989*t8471)*var2[4] - 0.5*(0.241*t12781*t13768 + 0.241*t12601*t13819 + 0.241*t12771*t13893 + t15069 + t15071 + t15073 + t15074 + t15075 + t15077 + t15078 + t15079 + t15080 + t15086 + t15087)*var2[5] - 0.5*(0.241*t12051*t13768 + 0.241*t11505*t13819 + 0.241*t11907*t13893 + t15048 + t15049 + t15050 + t15052)*var2[12] - 0.5*(t15038 + t15039 + 0.241*t13893*t6293 + 0.241*t13768*t6689)*var2[13] - 0.5*t15033*var2[14]);
  p_output1[5]=var2[12]*(-0.5*(t12210 + t12212 + t12335 + t12650 + t12665 + t12723 + t12734 + t12748 + t12805 + t12849 + t12872 + t12907 + t12939 + t15181*t2611*t375 + t15186*t3265*t375 + t15192*t375*t8471)*var2[0] - 0.5*(t14503 + t14504 + t14506 + t14507 + t14508 + t14511 + t14512 + t14513 + t14526 + t14528 + t14530 + t14532 + t14534 + t13245*t15181 + t13256*t15186 + t13202*t15192)*var2[1] - 0.5*(t14706 + t14708 + t14715 + t14717 + t14722 + t14724 + t14725 + t14726 + t14734 + t14740 + t14743 + t14744 + t14745 + t13058*t15181 + t13069*t15186 + t13002*t15192)*var2[2] - 0.5*(t14909 + t14912 + t14913 + t14914 + t14915 + t14916 + t14920 + t14921 + t14924 + t14926 + t14928 + t14930 + t14934 + t14433*t15181 + t14293*t15186 + t14359*t15192)*var2[3] - 0.5*(t15069 + t15071 + t15073 + t15074 + t15075 + t15077 + t15078 + t15079 + t15080 + t15086 + t15087 + t13893*t15181 + t13768*t15186 + t13819*t15192)*var2[4] - 0.5*(0.482*t12188*t12640 + 0.482*t12188*t12658 + 3.054*t12334*t12720 + 0.241*t12601*t12832 + 3.054*t12731*t12785*t15159 + 3.054*t12746*t12857*t15161 + t12832*t15192 + 0.241*t12781*t12920*t3038 + t12920*t15186*t3038 + 0.241*t12771*t12890*t9835 + t12890*t15181*t9835)*var2[5] - 0.5*(0.241*t11505*t12832 + t15158 + t15160 + t15162 + t15164 + 0.241*t12051*t12920*t3038 + 0.241*t11907*t12890*t9835)*var2[12] - 0.5*(t15147 + t15148 + 0.241*t12920*t3038*t6689 + 0.241*t12890*t6293*t9835)*var2[13] - 0.5*t15144*var2[14]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=(-0.5*(t11753 + t11792 + t11828 + t15239*t2611*t375 + t15252*t3265*t375 + t15256*t375*t8471 + t9040)*var2[0] - 0.5*(t14483 + t14488 + t14492 + t14496 + t13245*t15239 + t13256*t15252 + t13202*t15256)*var2[1] - 0.5*(t14679 + t14681 + t14682 + t14683 + t13058*t15239 + t13069*t15252 + t13002*t15256)*var2[2] - 0.5*(t14890 + t14891 + t14893 + t14894 + t14433*t15239 + t14293*t15252 + t14359*t15256)*var2[3] - 0.5*(t15048 + t15049 + t15050 + t15052 + t13893*t15239 + t13768*t15252 + t13819*t15256)*var2[4] - 0.5*(t15158 + t15160 + t15162 + t15164 + t12832*t15256 + t12920*t15252*t3038 + t12890*t15239*t9835)*var2[5])*var2[12];
  p_output1[13]=(-0.5*(t15382*t2611*t375 + t15410*t3265*t375 + t3892 + t4051)*var2[0] - 0.5*(t14469 + t14470 + t13245*t15382 + t13256*t15410)*var2[1] - 0.5*(t14670 + t14671 + t13058*t15382 + t13069*t15410)*var2[2] - 0.5*(t14880 + t14881 + t14433*t15382 + t14293*t15410)*var2[3] - 0.5*(t15038 + t15039 + t13893*t15382 + t13768*t15410)*var2[4] - 0.5*(t15147 + t15148 + t12920*t15410*t3038 + t12890*t15382*t9835)*var2[5])*var2[12];
  p_output1[14]=(-0.5*t3557*var2[0] - 0.5*t14462*var2[1] - 0.5*t14667*var2[2] - 0.5*t14878*var2[3] - 0.5*t15033*var2[4] - 0.5*t15144*var2[5])*var2[12];
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec13_plane.hh"

namespace SymFunction
{

void Ce2_vec13_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
