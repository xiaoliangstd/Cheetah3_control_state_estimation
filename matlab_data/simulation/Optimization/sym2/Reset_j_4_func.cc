/*
 * Automatically Generated from Mathematica.
 * Sat 7 Dec 2019 21:23:35 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t98;
  double t14;
  double t60;
  double t27;
  double t126;
  double t206;
  double t238;
  double t242;
  double t69;
  double t127;
  double t139;
  double t302;
  double t294;
  double t321;
  double t474;
  double t477;
  double t510;
  double t305;
  double t382;
  double t413;
  double t557;
  double t582;
  double t600;
  double t252;
  double t783;
  double t784;
  double t803;
  double t830;
  double t862;
  double t872;
  double t924;
  double t947;
  double t977;
  double t1016;
  double t1021;
  double t1023;
  double t621;
  double t624;
  double t731;
  double t1241;
  double t1339;
  double t1360;
  double t1404;
  double t1434;
  double t1443;
  double t1453;
  double t1647;
  double t1633;
  double t1592;
  double t1621;
  double t1666;
  double t1680;
  double t1711;
  double t1717;
  double t1864;
  double t2027;
  double t2038;
  double t1880;
  double t1566;
  double t2226;
  double t2348;
  double t2357;
  double t2360;
  double t2455;
  double t2491;
  double t2496;
  double t1891;
  double t1907;
  double t2709;
  double t2722;
  double t2729;
  double t2768;
  double t2821;
  double t2828;
  double t1565;
  double t3117;
  double t3097;
  double t3020;
  double t3043;
  double t3126;
  double t3127;
  double t3175;
  double t3185;
  double t3186;
  double t3280;
  double t3299;
  double t3216;
  double t3016;
  double t2347;
  double t3342;
  double t3530;
  double t3661;
  double t3680;
  double t3711;
  double t3716;
  double t3728;
  double t3241;
  double t3269;
  double t2706;
  double t3959;
  double t3981;
  double t3997;
  double t4034;
  double t4035;
  double t4053;
  double t4241;
  double t4271;
  double t4294;
  double t4312;
  double t4352;
  double t4367;
  double t4377;
  double t4332;
  double t4335;
  double t4340;
  double t4205;
  double t4571;
  double t4572;
  double t4576;
  double t4613;
  double t4621;
  double t4622;
  double t4593;
  double t4597;
  double t4598;
  double t4754;
  double t4759;
  double t4766;
  double t4835;
  double t4842;
  double t4846;
  double t4775;
  double t4776;
  double t4794;
  double t4987;
  double t4989;
  double t5005;
  double t5006;
  double t5008;
  double t4984;
  double t5019;
  double t5045;
  double t5055;
  double t5061;
  double t5062;
  double t4961;
  double t5193;
  double t5194;
  double t5196;
  double t5192;
  double t5197;
  double t5215;
  double t5234;
  double t5240;
  double t5251;
  double t5317;
  double t5321;
  double t5333;
  double t5316;
  double t5334;
  double t5337;
  double t5353;
  double t5366;
  double t5380;
  double t4957;
  double t4204;
  double t5477;
  double t5482;
  double t5483;
  double t5484;
  double t5475;
  double t5485;
  double t5486;
  double t5490;
  double t5491;
  double t5498;
  double t5127;
  double t4558;
  double t5438;
  double t5566;
  double t5569;
  double t5578;
  double t5564;
  double t5595;
  double t5597;
  double t5609;
  double t5610;
  double t5611;
  double t4734;
  double t5285;
  double t5691;
  double t5692;
  double t5715;
  double t5689;
  double t5717;
  double t5719;
  double t5728;
  double t5729;
  double t5730;
  double t5783;
  double t5784;
  double t5785;
  double t5804;
  double t5805;
  double t5807;
  double t5815;
  double t5820;
  double t5825;
  double t5809;
  double t5810;
  double t5812;
  double t5856;
  double t5857;
  double t5864;
  double t5875;
  double t5880;
  double t5891;
  double t5909;
  double t5910;
  double t5911;
  double t5892;
  double t5893;
  double t5907;
  double t5961;
  double t5962;
  double t5964;
  double t5956;
  double t5965;
  double t5966;
  double t5968;
  double t5970;
  double t5972;
  double t6013;
  double t6014;
  double t6016;
  double t6012;
  double t6018;
  double t6023;
  double t6025;
  double t6026;
  double t6028;
  double t5779;
  double t5934;
  double t6082;
  double t6083;
  double t6084;
  double t6081;
  double t6089;
  double t6094;
  double t6102;
  double t6105;
  double t6106;
  double t5852;
  double t6004;
  double t6153;
  double t6156;
  double t6158;
  double t6149;
  double t6161;
  double t6162;
  double t6164;
  double t6165;
  double t6167;
  double t5870;
  double t6205;
  double t6207;
  double t6239;
  double t6240;
  double t6244;
  double t6259;
  double t6260;
  double t6261;
  double t6291;
  double t6292;
  double t6293;
  double t6329;
  double t6327;
  double t6328;
  double t6330;
  double t6331;
  double t6334;
  double t6336;
  double t6338;
  double t6365;
  double t6359;
  double t6360;
  double t6362;
  double t6364;
  double t6367;
  double t6368;
  double t6374;
  double t6378;
  double t6379;
  double t6404;
  double t6405;
  double t6399;
  double t6401;
  double t6402;
  double t6403;
  double t6408;
  double t6410;
  double t6413;
  double t6415;
  double t6416;
  double t6444;
  double t6447;
  double t6448;
  double t6437;
  double t6472;
  double t6473;
  double t6474;
  double t6467;
  double t6491;
  double t6492;
  double t6493;
  double t6489;
  double t6142;
  double t6519;
  double t6520;
  double t6544;
  double t6545;
  double t6546;
  double t6568;
  double t6569;
  double t6570;
  double t6594;
  double t6593;
  double t6595;
  double t6597;
  double t6600;
  double t6601;
  double t6606;
  double t6621;
  double t6622;
  double t6624;
  double t6620;
  double t6626;
  double t6627;
  double t6629;
  double t6630;
  double t6631;
  double t6646;
  double t6647;
  double t6648;
  double t6645;
  double t6650;
  double t6652;
  double t6656;
  double t6657;
  double t6658;
  double t6672;
  double t6673;
  double t6674;
  double t6676;
  double t6688;
  double t6689;
  double t6691;
  double t6693;
  double t6703;
  double t6704;
  double t6707;
  double t6709;
  double t6723;
  double t6727;
  double t6728;
  double t6747;
  double t6748;
  double t6749;
  double t6763;
  double t6764;
  double t6765;
  double t6784;
  double t6783;
  double t6785;
  double t6786;
  double t6788;
  double t6789;
  double t6790;
  double t6742;
  double t6802;
  double t6803;
  double t6801;
  double t6804;
  double t6805;
  double t6807;
  double t6808;
  double t6809;
  double t6768;
  double t6821;
  double t6822;
  double t6820;
  double t6823;
  double t6824;
  double t6826;
  double t6827;
  double t6828;
  double t6839;
  double t6840;
  double t6841;
  double t6843;
  double t6852;
  double t6853;
  double t6854;
  double t6856;
  double t6865;
  double t6866;
  double t6867;
  double t6869;
  t98 = Cos(var1[3]);
  t14 = Cos(var1[5]);
  t60 = Sin(var1[4]);
  t27 = Sin(var1[3]);
  t126 = Sin(var1[5]);
  t206 = t98*t14*t60;
  t238 = t27*t126;
  t242 = t206 + t238;
  t69 = -1.*t14*t27*t60;
  t127 = t98*t126;
  t139 = t69 + t127;
  t302 = Cos(var1[7]);
  t294 = Cos(var1[6]);
  t321 = Sin(var1[7]);
  t474 = t302*t139;
  t477 = -1.*t294*t242*t321;
  t510 = t474 + t477;
  t305 = t294*t302*t242;
  t382 = t139*t321;
  t413 = t305 + t382;
  t557 = Cos(var1[8]);
  t582 = 0. + t557;
  t600 = Sin(var1[8]);
  t252 = Sin(var1[6]);
  t783 = -1.*t98*t14;
  t784 = -1.*t27*t60*t126;
  t803 = t783 + t784;
  t830 = -1.*t14*t27;
  t862 = t98*t60*t126;
  t872 = t830 + t862;
  t924 = t302*t803;
  t947 = -1.*t294*t872*t321;
  t977 = t924 + t947;
  t1016 = t294*t302*t872;
  t1021 = t803*t321;
  t1023 = t1016 + t1021;
  t621 = -1.*t600;
  t624 = 0. + t621;
  t731 = 0. + t600;
  t1241 = Cos(var1[4]);
  t1339 = -1.*t1241*t302*t27;
  t1360 = -1.*t98*t1241*t294*t321;
  t1404 = t1339 + t1360;
  t1434 = t98*t1241*t294*t302;
  t1443 = -1.*t1241*t27*t321;
  t1453 = t1434 + t1443;
  t1647 = Cos(var1[16]);
  t1633 = Cos(var1[15]);
  t1592 = Sin(var1[16]);
  t1621 = t1592*t139;
  t1666 = t1633*t1647*t242;
  t1680 = t1621 + t1666;
  t1711 = t1647*t139;
  t1717 = -1.*t1633*t1592*t242;
  t1864 = t1711 + t1717;
  t2027 = Cos(var1[17]);
  t2038 = 0. + t2027;
  t1880 = Sin(var1[17]);
  t1566 = Sin(var1[15]);
  t2226 = 0. + t1880;
  t2348 = -1.*t1633*t1592*t872;
  t2357 = t1647*t803;
  t2360 = t2348 + t2357;
  t2455 = t1633*t1647*t872;
  t2491 = t1592*t803;
  t2496 = t2455 + t2491;
  t1891 = -1.*t1880;
  t1907 = 0. + t1891;
  t2709 = -1.*t1633*t98*t1241*t1592;
  t2722 = -1.*t1647*t1241*t27;
  t2729 = t2709 + t2722;
  t2768 = t1633*t1647*t98*t1241;
  t2821 = -1.*t1241*t1592*t27;
  t2828 = t2768 + t2821;
  t1565 = -0.1944*t139;
  t3117 = Cos(var1[13]);
  t3097 = Cos(var1[12]);
  t3020 = Sin(var1[13]);
  t3043 = t3020*t139;
  t3126 = t3097*t3117*t242;
  t3127 = t3043 + t3126;
  t3175 = t3117*t139;
  t3185 = -1.*t3097*t3020*t242;
  t3186 = t3175 + t3185;
  t3280 = Cos(var1[14]);
  t3299 = 0. + t3280;
  t3216 = Sin(var1[14]);
  t3016 = Sin(var1[12]);
  t2347 = -0.1944*t803;
  t3342 = 0. + t3216;
  t3530 = -1.*t3097*t3020*t872;
  t3661 = t3117*t803;
  t3680 = t3530 + t3661;
  t3711 = t3097*t3117*t872;
  t3716 = t3020*t803;
  t3728 = t3711 + t3716;
  t3241 = -1.*t3216;
  t3269 = 0. + t3241;
  t2706 = 0.1944*t1241*t27;
  t3959 = -1.*t3097*t98*t1241*t3020;
  t3981 = -1.*t3117*t1241*t27;
  t3997 = t3959 + t3981;
  t4034 = t3097*t3117*t98*t1241;
  t4035 = -1.*t1241*t3020*t27;
  t4053 = t4034 + t4035;
  t4241 = t1241*t14*t294*t27;
  t4271 = 0. + t252;
  t4294 = -1.*t14*t60*t4271;
  t4312 = t4241 + t4294;
  t4352 = t98*t1241*t14*t302;
  t4367 = -1.*t4312*t321;
  t4377 = t4352 + t4367;
  t4332 = t302*t4312;
  t4335 = t98*t1241*t14*t321;
  t4340 = t4332 + t4335;
  t4205 = 0. + t294;
  t4571 = t1241*t294*t27*t126;
  t4572 = -1.*t60*t126*t4271;
  t4576 = t4571 + t4572;
  t4613 = t98*t1241*t302*t126;
  t4621 = -1.*t4576*t321;
  t4622 = t4613 + t4621;
  t4593 = t302*t4576;
  t4597 = t98*t1241*t126*t321;
  t4598 = t4593 + t4597;
  t4754 = -1.*t294*t27*t60;
  t4759 = -1.*t1241*t4271;
  t4766 = t4754 + t4759;
  t4835 = -1.*t98*t302*t60;
  t4842 = -1.*t4766*t321;
  t4846 = t4835 + t4842;
  t4775 = t302*t4766;
  t4776 = -1.*t98*t60*t321;
  t4794 = t4775 + t4776;
  t4987 = t1633*t1241*t14*t27;
  t4989 = -1.*t1566;
  t5005 = 0. + t4989;
  t5006 = -1.*t14*t5005*t60;
  t5008 = t4987 + t5006;
  t4984 = t98*t1241*t14*t1592;
  t5019 = t1647*t5008;
  t5045 = t4984 + t5019;
  t5055 = t1647*t98*t1241*t14;
  t5061 = -1.*t1592*t5008;
  t5062 = t5055 + t5061;
  t4961 = 0. + t1633;
  t5193 = t1633*t1241*t27*t126;
  t5194 = -1.*t5005*t60*t126;
  t5196 = t5193 + t5194;
  t5192 = t98*t1241*t1592*t126;
  t5197 = t1647*t5196;
  t5215 = t5192 + t5197;
  t5234 = t1647*t98*t1241*t126;
  t5240 = -1.*t1592*t5196;
  t5251 = t5234 + t5240;
  t5317 = -1.*t1241*t5005;
  t5321 = -1.*t1633*t27*t60;
  t5333 = t5317 + t5321;
  t5316 = -1.*t98*t1592*t60;
  t5334 = t1647*t5333;
  t5337 = t5316 + t5334;
  t5353 = -1.*t1647*t98*t60;
  t5366 = -1.*t1592*t5333;
  t5380 = t5353 + t5366;
  t4957 = -0.1944*t98*t1241*t14;
  t4204 = 0.0817*t14*t60;
  t5477 = t3097*t1241*t14*t27;
  t5482 = 0. + t3016;
  t5483 = -1.*t14*t5482*t60;
  t5484 = t5477 + t5483;
  t5475 = t98*t1241*t14*t3020;
  t5485 = t3117*t5484;
  t5486 = t5475 + t5485;
  t5490 = t3117*t98*t1241*t14;
  t5491 = -1.*t3020*t5484;
  t5498 = t5490 + t5491;
  t5127 = -0.1944*t98*t1241*t126;
  t4558 = 0.0817*t60*t126;
  t5438 = 0. + t3097;
  t5566 = t3097*t1241*t27*t126;
  t5569 = -1.*t5482*t60*t126;
  t5578 = t5566 + t5569;
  t5564 = t98*t1241*t3020*t126;
  t5595 = t3117*t5578;
  t5597 = t5564 + t5595;
  t5609 = t3117*t98*t1241*t126;
  t5610 = -1.*t3020*t5578;
  t5611 = t5609 + t5610;
  t4734 = 0.0817*t1241;
  t5285 = 0.1944*t98*t60;
  t5691 = -1.*t1241*t5482;
  t5692 = -1.*t3097*t27*t60;
  t5715 = t5691 + t5692;
  t5689 = -1.*t98*t3020*t60;
  t5717 = t3117*t5715;
  t5719 = t5689 + t5717;
  t5728 = -1.*t3117*t98*t60;
  t5729 = -1.*t3020*t5715;
  t5730 = t5728 + t5729;
  t5783 = t14*t27;
  t5784 = -1.*t98*t60*t126;
  t5785 = t5783 + t5784;
  t5804 = t294*t803;
  t5805 = -1.*t1241*t126*t4271;
  t5807 = t5804 + t5805;
  t5815 = t302*t5785;
  t5820 = -1.*t5807*t321;
  t5825 = t5815 + t5820;
  t5809 = t302*t5807;
  t5810 = t5785*t321;
  t5812 = t5809 + t5810;
  t5856 = t14*t27*t60;
  t5857 = -1.*t98*t126;
  t5864 = t5856 + t5857;
  t5875 = t294*t5864;
  t5880 = t1241*t14*t4271;
  t5891 = t5875 + t5880;
  t5909 = t302*t242;
  t5910 = -1.*t5891*t321;
  t5911 = t5909 + t5910;
  t5892 = t302*t5891;
  t5893 = t242*t321;
  t5907 = t5892 + t5893;
  t5961 = -1.*t1241*t5005*t126;
  t5962 = t1633*t803;
  t5964 = t5961 + t5962;
  t5956 = t1592*t5785;
  t5965 = t1647*t5964;
  t5966 = t5956 + t5965;
  t5968 = t1647*t5785;
  t5970 = -1.*t1592*t5964;
  t5972 = t5968 + t5970;
  t6013 = t1241*t14*t5005;
  t6014 = t1633*t5864;
  t6016 = t6013 + t6014;
  t6012 = t1592*t242;
  t6018 = t1647*t6016;
  t6023 = t6012 + t6018;
  t6025 = t1647*t242;
  t6026 = -1.*t1592*t6016;
  t6028 = t6025 + t6026;
  t5779 = 0.0817*t1241*t126;
  t5934 = -0.1944*t5785;
  t6082 = -1.*t1241*t5482*t126;
  t6083 = t3097*t803;
  t6084 = t6082 + t6083;
  t6081 = t3020*t5785;
  t6089 = t3117*t6084;
  t6094 = t6081 + t6089;
  t6102 = t3117*t5785;
  t6105 = -1.*t3020*t6084;
  t6106 = t6102 + t6105;
  t5852 = -0.0817*t1241*t14;
  t6004 = -0.1944*t242;
  t6153 = t1241*t14*t5482;
  t6156 = t3097*t5864;
  t6158 = t6153 + t6156;
  t6149 = t3020*t242;
  t6161 = t3117*t6158;
  t6162 = t6149 + t6161;
  t6164 = t3117*t242;
  t6165 = -1.*t3020*t6158;
  t6167 = t6164 + t6165;
  t5870 = -1.*t5864*t252;
  t6205 = t1241*t14*t294;
  t6207 = t6205 + t5870;
  t6239 = t98*t14;
  t6240 = t27*t60*t126;
  t6244 = t6239 + t6240;
  t6259 = t1241*t294*t126;
  t6260 = -1.*t6244*t252;
  t6261 = t6259 + t6260;
  t6291 = -1.*t294*t60;
  t6292 = -1.*t1241*t27*t252;
  t6293 = t6291 + t6292;
  t6329 = 0. + t206 + t238;
  t6327 = 0. + t5875 + t5880;
  t6328 = -1.*t302*t6327;
  t6330 = -1.*t6329*t321;
  t6331 = t6328 + t6330;
  t6334 = t302*t6329;
  t6336 = -1.*t6327*t321;
  t6338 = t6334 + t6336;
  t6365 = 0. + t830 + t862;
  t6359 = t294*t6244;
  t6360 = t1241*t126*t4271;
  t6362 = 0. + t6359 + t6360;
  t6364 = -1.*t302*t6362;
  t6367 = -1.*t6365*t321;
  t6368 = t6364 + t6367;
  t6374 = t302*t6365;
  t6378 = -1.*t6362*t321;
  t6379 = t6374 + t6378;
  t6404 = t98*t1241;
  t6405 = 0. + t6404;
  t6399 = t1241*t294*t27;
  t6401 = -1.*t60*t4271;
  t6402 = 0. + t6399 + t6401;
  t6403 = -1.*t302*t6402;
  t6408 = -1.*t6405*t321;
  t6410 = t6403 + t6408;
  t6413 = t6405*t302;
  t6415 = -1.*t6402*t321;
  t6416 = t6413 + t6415;
  t6444 = t302*t6327;
  t6447 = t6329*t321;
  t6448 = 0. + t6444 + t6447;
  t6437 = 0. + t6334 + t6336;
  t6472 = t302*t6362;
  t6473 = t6365*t321;
  t6474 = 0. + t6472 + t6473;
  t6467 = 0. + t6374 + t6378;
  t6491 = t302*t6402;
  t6492 = t6405*t321;
  t6493 = 0. + t6491 + t6492;
  t6489 = 0. + t6413 + t6415;
  t6142 = -1.*t3016*t5864;
  t6519 = t3097*t1241*t14;
  t6520 = t6519 + t6142;
  t6544 = t3097*t1241*t126;
  t6545 = -1.*t3016*t6244;
  t6546 = t6544 + t6545;
  t6568 = -1.*t1241*t3016*t27;
  t6569 = -1.*t3097*t60;
  t6570 = t6568 + t6569;
  t6594 = 0. + t6153 + t6156;
  t6593 = -1.*t3020*t6329;
  t6595 = -1.*t3117*t6594;
  t6597 = t6593 + t6595;
  t6600 = t3117*t6329;
  t6601 = -1.*t3020*t6594;
  t6606 = t6600 + t6601;
  t6621 = t1241*t5482*t126;
  t6622 = t3097*t6244;
  t6624 = 0. + t6621 + t6622;
  t6620 = -1.*t3020*t6365;
  t6626 = -1.*t3117*t6624;
  t6627 = t6620 + t6626;
  t6629 = t3117*t6365;
  t6630 = -1.*t3020*t6624;
  t6631 = t6629 + t6630;
  t6646 = t3097*t1241*t27;
  t6647 = -1.*t5482*t60;
  t6648 = 0. + t6646 + t6647;
  t6645 = -1.*t6405*t3020;
  t6650 = -1.*t3117*t6648;
  t6652 = t6645 + t6650;
  t6656 = t3117*t6405;
  t6657 = -1.*t3020*t6648;
  t6658 = t6656 + t6657;
  t6672 = t3020*t6329;
  t6673 = t3117*t6594;
  t6674 = 0. + t6672 + t6673;
  t6676 = 0. + t6600 + t6601;
  t6688 = t3020*t6365;
  t6689 = t3117*t6624;
  t6691 = 0. + t6688 + t6689;
  t6693 = 0. + t6629 + t6630;
  t6703 = t6405*t3020;
  t6704 = t3117*t6648;
  t6707 = 0. + t6703 + t6704;
  t6709 = 0. + t6656 + t6657;
  t6723 = -1.*t1633*t1241*t14;
  t6727 = -1.*t1566*t5864;
  t6728 = t6723 + t6727;
  t6747 = -1.*t1633*t1241*t126;
  t6748 = -1.*t1566*t6244;
  t6749 = t6747 + t6748;
  t6763 = -1.*t1241*t1566*t27;
  t6764 = t1633*t60;
  t6765 = t6763 + t6764;
  t6784 = 0. + t6013 + t6014;
  t6783 = -1.*t1592*t6329;
  t6785 = -1.*t1647*t6784;
  t6786 = t6783 + t6785;
  t6788 = t1647*t6329;
  t6789 = -1.*t1592*t6784;
  t6790 = t6788 + t6789;
  t6742 = t1633*t6244;
  t6802 = t1241*t5005*t126;
  t6803 = 0. + t6802 + t6742;
  t6801 = -1.*t1592*t6365;
  t6804 = -1.*t1647*t6803;
  t6805 = t6801 + t6804;
  t6807 = t1647*t6365;
  t6808 = -1.*t1592*t6803;
  t6809 = t6807 + t6808;
  t6768 = t1633*t1241*t27;
  t6821 = -1.*t5005*t60;
  t6822 = 0. + t6768 + t6821;
  t6820 = -1.*t6405*t1592;
  t6823 = -1.*t1647*t6822;
  t6824 = t6820 + t6823;
  t6826 = t1647*t6405;
  t6827 = -1.*t1592*t6822;
  t6828 = t6826 + t6827;
  t6839 = t1592*t6329;
  t6840 = t1647*t6784;
  t6841 = 0. + t6839 + t6840;
  t6843 = 0. + t6788 + t6789;
  t6852 = t1592*t6365;
  t6853 = t1647*t6803;
  t6854 = 0. + t6852 + t6853;
  t6856 = 0. + t6807 + t6808;
  t6865 = t6405*t1592;
  t6866 = t1647*t6822;
  t6867 = 0. + t6865 + t6866;
  t6869 = 0. + t6826 + t6827;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=1.;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=1.;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=1.;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=1.;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=1.;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=1.;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=1.;
  p_output1[27]=0.2429*t139 + 0.0329*t242*t252 - 0.2083*t413 - 0.1422*t510 - 0.02*(t510*t582 + t413*t624) - 0.16*(t413*t582 + t510*t731);
  p_output1[28]=-0.2083*t1023 + 0.2429*t803 + 0.0329*t252*t872 - 0.1422*t977 - 0.02*(t1023*t624 + t582*t977) - 0.16*(t1023*t582 + t731*t977);
  p_output1[29]=-0.1422*t1404 - 0.2083*t1453 - 0.2429*t1241*t27 - 0.02*(t1404*t582 + t1453*t624) - 0.16*(t1453*t582 + t1404*t731) + 0.0329*t1241*t252*t98;
  p_output1[30]=t1565 - 0.2083*t1680 - 0.1422*t1864 - 0.02*(t1680*t1907 + t1864*t2038) - 0.16*(t1680*t2038 + t1864*t2226) + 0.035199999999999995*t1566*t242;
  p_output1[31]=t2347 - 0.1422*t2360 - 0.2083*t2496 - 0.02*(t2038*t2360 + t1907*t2496) - 0.16*(t2226*t2360 + t2038*t2496) + 0.035199999999999995*t1566*t872;
  p_output1[32]=t2706 - 0.1422*t2729 - 0.2083*t2828 - 0.02*(t2038*t2729 + t1907*t2828) - 0.16*(t2226*t2729 + t2038*t2828) + 0.035199999999999995*t1241*t1566*t98;
  p_output1[33]=t1565 + 0.0329*t242*t3016 - 0.2083*t3127 - 0.1422*t3186 - 0.02*(t3127*t3269 + t3186*t3299) - 0.16*(t3127*t3299 + t3186*t3342);
  p_output1[34]=t2347 - 0.1422*t3680 - 0.2083*t3728 - 0.02*(t3299*t3680 + t3269*t3728) - 0.16*(t3342*t3680 + t3299*t3728) + 0.0329*t3016*t872;
  p_output1[35]=t2706 - 0.1422*t3997 - 0.2083*t4053 - 0.02*(t3299*t3997 + t3269*t4053) - 0.16*(t3342*t3997 + t3299*t4053) + 0.0329*t1241*t3016*t98;
  p_output1[36]=t4204 - 0.2083*t4340 - 0.1422*t4377 - 0.0329*(-1.*t1241*t14*t252*t27 - 1.*t14*t4205*t60) - 0.02*(t4377*t582 + t4340*t624) - 0.16*(t4340*t582 + t4377*t731) + 0.2429*t1241*t14*t98;
  p_output1[37]=t4558 - 0.2083*t4598 - 0.1422*t4622 - 0.0329*(-1.*t1241*t126*t252*t27 - 1.*t126*t4205*t60) - 0.02*(t4622*t582 + t4598*t624) - 0.16*(t4598*t582 + t4622*t731) + 0.2429*t1241*t126*t98;
  p_output1[38]=t4734 - 0.2083*t4794 - 0.1422*t4846 - 0.0329*(-1.*t1241*t4205 + t252*t27*t60) - 0.02*(t4846*t582 + t4794*t624) - 0.16*(t4794*t582 + t4846*t731) - 0.2429*t60*t98;
  p_output1[39]=t4957 - 0.2083*t5045 - 0.1422*t5062 - 0.02*(t1907*t5045 + t2038*t5062) - 0.16*(t2038*t5045 + t2226*t5062) - 0.0817*t14*t60 + 0.035199999999999995*(t1241*t14*t1566*t27 - 1.*t14*t4961*t60);
  p_output1[40]=t5127 - 0.2083*t5215 - 0.1422*t5251 - 0.02*(t1907*t5215 + t2038*t5251) - 0.16*(t2038*t5215 + t2226*t5251) - 0.0817*t126*t60 + 0.035199999999999995*(t1241*t126*t1566*t27 - 1.*t126*t4961*t60);
  p_output1[41]=-0.0817*t1241 + t5285 - 0.2083*t5337 - 0.1422*t5380 - 0.02*(t1907*t5337 + t2038*t5380) - 0.16*(t2038*t5337 + t2226*t5380) + 0.035199999999999995*(-1.*t1241*t4961 - 1.*t1566*t27*t60);
  p_output1[42]=t4204 + t4957 - 0.2083*t5486 - 0.1422*t5498 - 0.02*(t3269*t5486 + t3299*t5498) - 0.16*(t3299*t5486 + t3342*t5498) - 0.0329*(-1.*t1241*t14*t27*t3016 - 1.*t14*t5438*t60);
  p_output1[43]=t4558 + t5127 - 0.2083*t5597 - 0.1422*t5611 - 0.02*(t3269*t5597 + t3299*t5611) - 0.16*(t3299*t5597 + t3342*t5611) - 0.0329*(-1.*t1241*t126*t27*t3016 - 1.*t126*t5438*t60);
  p_output1[44]=t4734 + t5285 - 0.2083*t5719 - 0.1422*t5730 - 0.02*(t3269*t5719 + t3299*t5730) - 0.16*(t3299*t5719 + t3342*t5730) - 0.0329*(-1.*t1241*t5438 + t27*t3016*t60);
  p_output1[45]=t5779 + 0.2429*t5785 - 0.2083*t5812 - 0.1422*t5825 - 0.02*(t582*t5825 + t5812*t624) - 0.16*(t5812*t582 + t5825*t731) - 0.0329*(-1.*t1241*t126*t4205 - 1.*t252*t803);
  p_output1[46]=0.2429*t242 + t5852 - 0.0329*(t1241*t14*t4205 + t5870) - 0.2083*t5907 - 0.1422*t5911 - 0.02*(t582*t5911 + t5907*t624) - 0.16*(t582*t5907 + t5911*t731);
  p_output1[47]=0;
  p_output1[48]=-0.0817*t1241*t126 + t5934 - 0.2083*t5966 - 0.1422*t5972 - 0.02*(t1907*t5966 + t2038*t5972) - 0.16*(t2038*t5966 + t2226*t5972) + 0.035199999999999995*(-1.*t1241*t126*t4961 + t1566*t803);
  p_output1[49]=0.0817*t1241*t14 + 0.035199999999999995*(t1241*t14*t4961 + t1566*t5864) + t6004 - 0.2083*t6023 - 0.1422*t6028 - 0.02*(t1907*t6023 + t2038*t6028) - 0.16*(t2038*t6023 + t2226*t6028);
  p_output1[50]=0;
  p_output1[51]=t5779 + t5934 - 0.2083*t6094 - 0.1422*t6106 - 0.02*(t3269*t6094 + t3299*t6106) - 0.16*(t3299*t6094 + t3342*t6106) - 0.0329*(-1.*t1241*t126*t5438 - 1.*t3016*t803);
  p_output1[52]=t5852 + t6004 - 0.0329*(t1241*t14*t5438 + t6142) - 0.2083*t6162 - 0.1422*t6167 - 0.02*(t3269*t6162 + t3299*t6167) - 0.16*(t3299*t6162 + t3342*t6167);
  p_output1[53]=0;
  p_output1[54]=-0.0329*(-1.*t1241*t14*t252 - 1.*t294*t5864) - 0.2083*t302*t6207 + 0.1422*t321*t6207 - 0.02*(-1.*t321*t582*t6207 + t302*t6207*t624) - 0.16*(t302*t582*t6207 - 1.*t321*t6207*t731);
  p_output1[55]=-0.0329*(-1.*t1241*t126*t252 - 1.*t294*t6244) - 0.2083*t302*t6261 + 0.1422*t321*t6261 - 0.02*(-1.*t321*t582*t6261 + t302*t624*t6261) - 0.16*(t302*t582*t6261 - 1.*t321*t6261*t731);
  p_output1[56]=-0.0329*(-1.*t1241*t27*t294 + t252*t60) - 0.2083*t302*t6293 + 0.1422*t321*t6293 - 0.02*(-1.*t321*t582*t6293 + t302*t624*t6293) - 0.16*(t302*t582*t6293 - 1.*t321*t6293*t731);
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=-0.1422*t6331 - 0.2083*t6338 - 0.02*(t582*t6331 + t624*t6338) - 0.16*(t582*t6338 + t6331*t731);
  p_output1[64]=-0.1422*t6368 - 0.2083*t6379 - 0.02*(t582*t6368 + t624*t6379) - 0.16*(t582*t6379 + t6368*t731);
  p_output1[65]=-0.1422*t6410 - 0.2083*t6416 - 0.02*(t582*t6410 + t624*t6416) - 0.16*(t582*t6416 + t6410*t731);
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=-0.02*(-1.*t600*t6437 - 1.*t557*t6448) - 0.16*(t557*t6437 - 1.*t600*t6448);
  p_output1[73]=-0.02*(-1.*t600*t6467 - 1.*t557*t6474) - 0.16*(t557*t6467 - 1.*t600*t6474);
  p_output1[74]=-0.02*(-1.*t600*t6489 - 1.*t557*t6493) - 0.16*(t557*t6489 - 1.*t600*t6493);
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=-0.0329*(-1.*t1241*t14*t3016 - 1.*t3097*t5864) + 0.1422*t3020*t6520 - 0.2083*t3117*t6520 - 0.02*(t3117*t3269*t6520 - 1.*t3020*t3299*t6520) - 0.16*(t3117*t3299*t6520 - 1.*t3020*t3342*t6520);
  p_output1[115]=-0.0329*(-1.*t1241*t126*t3016 - 1.*t3097*t6244) + 0.1422*t3020*t6546 - 0.2083*t3117*t6546 - 0.02*(t3117*t3269*t6546 - 1.*t3020*t3299*t6546) - 0.16*(t3117*t3299*t6546 - 1.*t3020*t3342*t6546);
  p_output1[116]=-0.0329*(-1.*t1241*t27*t3097 + t3016*t60) + 0.1422*t3020*t6570 - 0.2083*t3117*t6570 - 0.02*(t3117*t3269*t6570 - 1.*t3020*t3299*t6570) - 0.16*(t3117*t3299*t6570 - 1.*t3020*t3342*t6570);
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=-0.1422*t6597 - 0.2083*t6606 - 0.02*(t3299*t6597 + t3269*t6606) - 0.16*(t3342*t6597 + t3299*t6606);
  p_output1[124]=-0.1422*t6627 - 0.2083*t6631 - 0.02*(t3299*t6627 + t3269*t6631) - 0.16*(t3342*t6627 + t3299*t6631);
  p_output1[125]=-0.1422*t6652 - 0.2083*t6658 - 0.02*(t3299*t6652 + t3269*t6658) - 0.16*(t3342*t6652 + t3299*t6658);
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=-0.02*(-1.*t3280*t6674 - 1.*t3216*t6676) - 0.16*(-1.*t3216*t6674 + t3280*t6676);
  p_output1[133]=-0.02*(-1.*t3280*t6691 - 1.*t3216*t6693) - 0.16*(-1.*t3216*t6691 + t3280*t6693);
  p_output1[134]=-0.02*(-1.*t3280*t6707 - 1.*t3216*t6709) - 0.16*(-1.*t3216*t6707 + t3280*t6709);
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0.035199999999999995*(-1.*t1241*t14*t1566 + t6014) + 0.1422*t1592*t6728 - 0.2083*t1647*t6728 - 0.02*(t1647*t1907*t6728 - 1.*t1592*t2038*t6728) - 0.16*(t1647*t2038*t6728 - 1.*t1592*t2226*t6728);
  p_output1[139]=0.035199999999999995*(-1.*t1241*t126*t1566 + t6742) + 0.1422*t1592*t6749 - 0.2083*t1647*t6749 - 0.02*(t1647*t1907*t6749 - 1.*t1592*t2038*t6749) - 0.16*(t1647*t2038*t6749 - 1.*t1592*t2226*t6749);
  p_output1[140]=0.1422*t1592*t6765 - 0.2083*t1647*t6765 - 0.02*(t1647*t1907*t6765 - 1.*t1592*t2038*t6765) - 0.16*(t1647*t2038*t6765 - 1.*t1592*t2226*t6765) + 0.035199999999999995*(t1566*t60 + t6768);
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=-0.1422*t6786 - 0.2083*t6790 - 0.02*(t2038*t6786 + t1907*t6790) - 0.16*(t2226*t6786 + t2038*t6790);
  p_output1[148]=-0.1422*t6805 - 0.2083*t6809 - 0.02*(t2038*t6805 + t1907*t6809) - 0.16*(t2226*t6805 + t2038*t6809);
  p_output1[149]=-0.1422*t6824 - 0.2083*t6828 - 0.02*(t2038*t6824 + t1907*t6828) - 0.16*(t2226*t6824 + t2038*t6828);
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=-0.02*(-1.*t2027*t6841 - 1.*t1880*t6843) - 0.16*(-1.*t1880*t6841 + t2027*t6843);
  p_output1[157]=-0.02*(-1.*t2027*t6854 - 1.*t1880*t6856) - 0.16*(-1.*t1880*t6854 + t2027*t6856);
  p_output1[158]=-0.02*(-1.*t2027*t6867 - 1.*t1880*t6869) - 0.16*(-1.*t1880*t6867 + t2027*t6869);
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Reset_j_4_func.hh"

namespace SymFunction
{

void Reset_j_4_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
