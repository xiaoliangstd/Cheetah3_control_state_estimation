/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:53:09 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t70;
  double t104;
  double t55;
  double t111;
  double t252;
  double t258;
  double t286;
  double t175;
  double t243;
  double t250;
  double t251;
  double t303;
  double t500;
  double t514;
  double t516;
  double t319;
  double t860;
  double t863;
  double t80;
  double t133;
  double t161;
  double t210;
  double t301;
  double t330;
  double t356;
  double t404;
  double t411;
  double t888;
  double t893;
  double t895;
  double t913;
  double t868;
  double t875;
  double t876;
  double t880;
  double t482;
  double t521;
  double t526;
  double t556;
  double t559;
  double t579;
  double t1037;
  double t987;
  double t991;
  double t995;
  double t1016;
  double t1022;
  double t1023;
  double t1107;
  double t1135;
  double t1148;
  double t1033;
  double t1074;
  double t639;
  double t642;
  double t649;
  double t662;
  double t671;
  double t675;
  double t1685;
  double t1643;
  double t1654;
  double t1677;
  double t1678;
  double t1610;
  double t1625;
  double t1630;
  double t1568;
  double t1571;
  double t1581;
  double t1600;
  double t1757;
  double t1772;
  double t1779;
  double t1780;
  double t1806;
  double t1740;
  double t1190;
  double t2310;
  double t2341;
  double t2344;
  double t2371;
  double t2379;
  double t2394;
  double t2429;
  double t2432;
  double t2454;
  double t1024;
  double t1194;
  double t2494;
  double t2500;
  double t2557;
  double t2563;
  double t1309;
  double t1317;
  double t1320;
  double t1357;
  double t1358;
  double t1412;
  double t1511;
  double t1531;
  double t1539;
  double t1823;
  double t2194;
  double t2202;
  double t2169;
  double t2175;
  double t1842;
  double t1850;
  double t2738;
  double t2739;
  double t2743;
  double t2773;
  double t2786;
  double t2805;
  double t2813;
  double t1635;
  double t2244;
  double t2253;
  double t2234;
  double t2238;
  double t1748;
  double t1750;
  double t1888;
  double t1915;
  double t1917;
  double t1922;
  double t1965;
  double t1982;
  double t1991;
  double t2711;
  double t2718;
  double t2730;
  double t693;
  double t705;
  double t749;
  double t755;
  double t773;
  double t784;
  double t2675;
  double t2685;
  double t2690;
  double t3290;
  double t3326;
  double t3336;
  double t2167;
  double t2192;
  double t2204;
  double t2207;
  double t2215;
  double t2217;
  double t3134;
  double t3138;
  double t3140;
  double t2227;
  double t2242;
  double t2259;
  double t2262;
  double t2265;
  double t2269;
  double t3948;
  double t4121;
  double t4557;
  double t4559;
  double t4572;
  double t4586;
  double t4631;
  double t4678;
  double t4834;
  double t4836;
  double t4855;
  double t3972;
  double t3983;
  double t3999;
  double t4122;
  double t4129;
  double t4166;
  double t4248;
  double t4255;
  double t4303;
  double t4399;
  double t4423;
  double t4478;
  double t5597;
  double t5602;
  double t5611;
  double t4985;
  double t4993;
  double t5013;
  double t5021;
  double t5034;
  double t5049;
  double t5121;
  double t5127;
  double t5160;
  double t5208;
  double t5221;
  double t5223;
  double t5308;
  double t5317;
  double t5318;
  double t5381;
  double t5382;
  double t5398;
  double t5426;
  double t5434;
  double t5435;
  double t5456;
  double t5477;
  double t5494;
  double t5862;
  double t5870;
  double t5878;
  double t5780;
  double t5782;
  double t5827;
  double t5879;
  double t5899;
  double t5907;
  double t5838;
  double t5908;
  double t5940;
  double t6226;
  double t6232;
  double t6237;
  double t6249;
  double t6254;
  double t6276;
  double t6051;
  double t6060;
  double t6086;
  double t1142;
  double t5970;
  double t6119;
  double t6128;
  double t6322;
  double t6346;
  double t2610;
  double t6718;
  double t6729;
  double t6738;
  double t6702;
  double t6706;
  double t6710;
  double t6739;
  double t6751;
  double t6753;
  double t6717;
  double t6763;
  double t6767;
  double t6844;
  double t6845;
  double t6860;
  double t6880;
  double t6883;
  double t6887;
  double t7045;
  double t7048;
  double t7072;
  double t5984;
  double t7474;
  double t7479;
  double t7480;
  double t7492;
  double t7495;
  double t7498;
  double t7490;
  double t7499;
  double t7503;
  double t6280;
  double t6310;
  double t7743;
  double t7759;
  double t7767;
  double t7779;
  double t7784;
  double t7785;
  double t7587;
  double t7596;
  double t7597;
  double t6399;
  double t6427;
  double t6479;
  double t6569;
  double t6620;
  double t7639;
  double t7641;
  double t7869;
  double t7885;
  double t6667;
  double t6676;
  double t6786;
  double t8190;
  double t8202;
  double t8217;
  double t8236;
  double t8240;
  double t8244;
  double t8218;
  double t8232;
  double t8233;
  double t8245;
  double t8257;
  double t6904;
  double t6983;
  double t6993;
  double t8295;
  double t8296;
  double t8302;
  double t8318;
  double t8329;
  double t8335;
  double t7095;
  double t7153;
  double t7172;
  double t7198;
  double t7218;
  double t7284;
  double t7297;
  double t8440;
  double t8445;
  double t8452;
  double t7356;
  double t7403;
  double t7416;
  double t5621;
  double t5622;
  double t5640;
  double t5646;
  double t5660;
  double t5661;
  double t5581;
  double t5586;
  double t5587;
  double t847;
  double t884;
  double t916;
  double t925;
  double t946;
  double t947;
  double t955;
  double t956;
  double t1076;
  double t1084;
  double t1091;
  double t1149;
  double t1175;
  double t1195;
  double t1224;
  double t1226;
  double t1251;
  double t1272;
  double t1276;
  double t5554;
  double t5563;
  double t5567;
  double t1689;
  double t1714;
  double t1715;
  double t1730;
  double t1786;
  double t1804;
  double t1805;
  double t1811;
  double t1831;
  double t1832;
  double t1849;
  double t1859;
  double t1872;
  double t1879;
  double t1886;
  double t2015;
  double t2024;
  double t2118;
  double t2135;
  double t2142;
  double t2156;
  double t2160;
  double t2164;
  double t5689;
  double t5691;
  double t5713;
  double t5733;
  double t5741;
  double t5743;
  double t2355;
  double t2460;
  double t2471;
  double t2475;
  double t2504;
  double t2523;
  double t2561;
  double t2568;
  double t2584;
  double t2589;
  double t2597;
  double t2599;
  double t2640;
  double t2653;
  double t2658;
  double t2661;
  double t2664;
  double t8917;
  double t8928;
  double t8929;
  double t2764;
  double t2818;
  double t2820;
  double t2832;
  double t2837;
  double t2842;
  double t2874;
  double t2883;
  double t2897;
  double t2903;
  double t2910;
  double t2914;
  double t2924;
  double t2937;
  double t2940;
  double t2944;
  double t2949;
  double t2955;
  double t2963;
  double t2964;
  double t3013;
  double t8963;
  double t8966;
  double t8971;
  double t3197;
  double t3258;
  double t3342;
  double t3358;
  double t3452;
  double t3454;
  double t3471;
  double t3484;
  double t3512;
  double t3550;
  double t3585;
  double t3609;
  double t3645;
  double t3670;
  double t3677;
  double t3678;
  double t5577;
  double t5596;
  double t5612;
  double t5614;
  double t5642;
  double t5686;
  double t5714;
  double t5751;
  double t5753;
  double t4022;
  double t4171;
  double t4189;
  double t4387;
  double t4510;
  double t4513;
  double t5337;
  double t5408;
  double t5409;
  double t5164;
  double t5261;
  double t5269;
  double t5449;
  double t5502;
  double t5517;
  double t5017;
  double t5056;
  double t5060;
  double t5949;
  double t5983;
  double t5996;
  double t6012;
  double t6014;
  double t6117;
  double t6135;
  double t6141;
  double t6160;
  double t6180;
  double t6242;
  double t6286;
  double t6296;
  double t6297;
  double t6307;
  double t6350;
  double t6362;
  double t6366;
  double t6377;
  double t6398;
  double t6411;
  double t6418;
  double t6419;
  double t6471;
  double t6481;
  double t6521;
  double t6543;
  double t6558;
  double t6603;
  double t6604;
  double t6618;
  double t6641;
  double t6644;
  double t6651;
  double t6660;
  double t6661;
  double t6672;
  double t6687;
  double t6688;
  double t6698;
  double t6768;
  double t6772;
  double t6782;
  double t6796;
  double t6808;
  double t6809;
  double t6824;
  double t6872;
  double t6908;
  double t6912;
  double t6922;
  double t6930;
  double t6965;
  double t6992;
  double t7020;
  double t7028;
  double t7032;
  double t7073;
  double t7081;
  double t7084;
  double t7098;
  double t7114;
  double t7123;
  double t7133;
  double t7156;
  double t7168;
  double t7169;
  double t7180;
  double t7199;
  double t7207;
  double t7214;
  double t7233;
  double t7270;
  double t7283;
  double t7287;
  double t7312;
  double t7313;
  double t7322;
  double t7340;
  double t7341;
  double t7357;
  double t7359;
  double t7383;
  double t7384;
  double t7402;
  double t7410;
  double t7433;
  double t7440;
  double t7442;
  double t7521;
  double t7523;
  double t7538;
  double t7546;
  double t7564;
  double t7572;
  double t7632;
  double t7676;
  double t7678;
  double t7698;
  double t7742;
  double t7768;
  double t7790;
  double t7833;
  double t7834;
  double t7837;
  double t7865;
  double t7895;
  double t7910;
  double t7947;
  double t7974;
  double t7981;
  double t7995;
  double t7998;
  double t8000;
  double t8003;
  double t8011;
  double t8017;
  double t8025;
  double t8032;
  double t8041;
  double t8046;
  double t8065;
  double t8070;
  double t8077;
  double t8082;
  double t8095;
  double t8123;
  double t8130;
  double t8131;
  double t8143;
  double t8144;
  double t8147;
  double t8148;
  double t8150;
  double t8154;
  double t8159;
  double t8160;
  double t8180;
  double t8258;
  double t8261;
  double t8266;
  double t8268;
  double t8284;
  double t8285;
  double t8289;
  double t8304;
  double t8349;
  double t8354;
  double t8361;
  double t8375;
  double t8381;
  double t8391;
  double t8396;
  double t8402;
  double t8417;
  double t8422;
  double t8453;
  double t8465;
  double t8466;
  double t8477;
  double t8482;
  double t8483;
  double t8492;
  double t8504;
  double t8529;
  double t8531;
  double t8555;
  double t8577;
  double t8588;
  double t8593;
  double t8595;
  double t8596;
  double t8619;
  double t8659;
  double t8664;
  double t8674;
  double t8687;
  double t8689;
  double t8715;
  double t8718;
  double t8723;
  double t8724;
  double t8727;
  double t8746;
  double t8747;
  double t8748;
  double t8755;
  double t8756;
  double t8763;
  double t8788;
  double t8798;
  double t8809;
  double t8814;
  double t8817;
  double t8820;
  double t10054;
  double t10064;
  double t10068;
  double t10115;
  double t10119;
  double t10128;
  double t4202;
  double t4517;
  double t4954;
  double t4960;
  double t5067;
  double t5286;
  double t5418;
  double t5521;
  double t5539;
  double t9068;
  double t9075;
  double t9078;
  double t9083;
  double t9084;
  double t9169;
  double t9189;
  double t9263;
  double t9284;
  double t10454;
  double t10460;
  double t10462;
  double t10554;
  double t10559;
  double t10564;
  double t7586;
  double t7712;
  double t7957;
  double t8055;
  double t8183;
  double t8288;
  double t8425;
  double t8491;
  double t8731;
  double t8825;
  double t8828;
  double t10301;
  double t10306;
  double t10313;
  double t10314;
  double t10318;
  double t10325;
  double t10326;
  double t10333;
  double t10337;
  double t10348;
  double t10349;
  double t9564;
  double t9565;
  double t9659;
  double t9664;
  double t9670;
  double t9680;
  double t9685;
  double t9713;
  double t9723;
  double t9728;
  double t9843;
  double t10775;
  double t10780;
  double t10781;
  double t10477;
  double t10478;
  double t10488;
  double t10825;
  double t10827;
  double t10831;
  double t10581;
  double t10582;
  double t10583;
  double t10642;
  double t10669;
  double t10677;
  double t10733;
  double t10738;
  double t10745;
  double t6046;
  double t6162;
  double t6367;
  double t6545;
  double t6700;
  double t6823;
  double t7036;
  double t7132;
  double t7324;
  double t7446;
  double t7457;
  double t10265;
  double t10267;
  double t10268;
  double t10273;
  double t10274;
  double t10275;
  double t10277;
  double t10280;
  double t10281;
  double t10282;
  double t10283;
  double t9443;
  double t9448;
  double t9460;
  double t9538;
  double t9539;
  double t9540;
  double t9545;
  double t9546;
  double t9547;
  double t9556;
  double t9557;
  double t10762;
  double t10766;
  double t10767;
  double t10768;
  double t10769;
  double t10798;
  double t10802;
  double t10819;
  double t10820;
  double t10823;
  double t10837;
  double t10839;
  double t10845;
  double t11154;
  double t11156;
  double t11158;
  double t11162;
  double t11168;
  double t11170;
  double t2670;
  double t2698;
  double t2735;
  double t3066;
  double t3072;
  double t3108;
  double t3562;
  double t3711;
  double t10180;
  double t10181;
  double t10184;
  double t10186;
  double t10191;
  double t10195;
  double t10216;
  double t10217;
  double t9012;
  double t9013;
  double t9017;
  double t9027;
  double t9028;
  double t9031;
  double t9041;
  double t9042;
  double t10995;
  double t11002;
  double t11003;
  double t11005;
  double t11007;
  double t11009;
  double t11015;
  double t11017;
  double t11018;
  double t10612;
  double t10615;
  double t10625;
  double t10628;
  double t10632;
  double t10683;
  double t10686;
  double t10692;
  double t10725;
  double t11144;
  double t11145;
  double t11147;
  double t11148;
  double t11895;
  double t11896;
  double t11915;
  double t11920;
  double t11955;
  double t11997;
  double t1349;
  double t1546;
  double t1557;
  double t2009;
  double t2225;
  double t2270;
  double t10069;
  double t10085;
  double t10088;
  double t10133;
  double t10157;
  double t10160;
  double t8939;
  double t8958;
  double t8961;
  double t8972;
  double t8991;
  double t8992;
  double t10898;
  double t10899;
  double t10901;
  double t10905;
  double t10907;
  double t10927;
  double t10935;
  double t10944;
  double t10948;
  double t10443;
  double t10453;
  double t10469;
  double t10470;
  double t10472;
  double t10529;
  double t10535;
  double t10566;
  double t10579;
  double t11810;
  double t11819;
  double t11132;
  double t11135;
  double t12470;
  double t12471;
  double t12477;
  double t12478;
  double t679;
  double t802;
  double t9981;
  double t10008;
  double t8865;
  double t8881;
  double t10885;
  double t10887;
  double t10387;
  double t10389;
  double t11126;
  double t11129;
  double t11130;
  double t11766;
  double t11778;
  double t11804;
  double t475;
  double t603;
  double t630;
  double t9952;
  double t9964;
  double t9968;
  double t8847;
  double t8852;
  double t8857;
  double t10875;
  double t10878;
  double t10882;
  double t10374;
  double t10379;
  double t10382;
  t70 = Cos(var1[17]);
  t104 = Sin(var1[16]);
  t55 = Cos(var1[16]);
  t111 = Sin(var1[17]);
  t252 = -1.*t70*t104;
  t258 = -1.*t55*t111;
  t286 = t252 + t258;
  t175 = Sin(var1[4]);
  t243 = Cos(var1[4]);
  t250 = Cos(var1[5]);
  t251 = Sin(var1[15]);
  t303 = Cos(var1[15]);
  t500 = -1.*t55*t70;
  t514 = t104*t111;
  t516 = t500 + t514;
  t319 = Sin(var1[5]);
  t860 = -1.*t70;
  t863 = 1. + t860;
  t80 = t55*t70;
  t133 = -1.*t104*t111;
  t161 = t80 + t133;
  t210 = t161*t175;
  t301 = -1.*t250*t251*t286;
  t330 = -1.*t303*t286*t319;
  t356 = t301 + t330;
  t404 = t243*t356;
  t411 = t210 + t404;
  t888 = -0.20833*t863;
  t893 = -0.36833*t70;
  t895 = 0.020000000000000018*t111;
  t913 = 0. + t888 + t893 + t895;
  t868 = -0.336601*t863;
  t875 = -0.356601*t70;
  t876 = -0.16*t111;
  t880 = 0. + t868 + t875 + t876;
  t482 = t286*t175;
  t521 = -1.*t250*t251*t516;
  t526 = -1.*t303*t516*t319;
  t556 = t521 + t526;
  t559 = t243*t556;
  t579 = t482 + t559;
  t1037 = 0.04*t104;
  t987 = -1.*t55;
  t991 = 1. + t987;
  t995 = -0.194401*t991;
  t1016 = -0.234401*t55;
  t1022 = -0.04*t104;
  t1023 = t995 + t1016 + t1022;
  t1107 = -0.04*t55;
  t1135 = t1107 + t1037;
  t1148 = -1.*t1023*t104;
  t1033 = 0.04*t55;
  t1074 = t1033 + t1037;
  t639 = -1.*t104*t175;
  t642 = t55*t250*t251;
  t649 = t303*t55*t319;
  t662 = t642 + t649;
  t671 = t243*t662;
  t675 = t639 + t671;
  t1685 = 0. + t80 + t133;
  t1643 = -0.194401*t104;
  t1654 = -1.*t104*t880;
  t1677 = t55*t913;
  t1678 = 0. + t1643 + t1654 + t1677;
  t1610 = t70*t104;
  t1625 = t55*t111;
  t1630 = 0. + t1610 + t1625;
  t1568 = -0.194401*t991;
  t1571 = t55*t880;
  t1581 = t104*t913;
  t1600 = 0. + t1568 + t1571 + t1581;
  t1757 = -0.194401*t55;
  t1772 = -1.*t55*t880;
  t1779 = -1.*t104*t913;
  t1780 = t1757 + t1772 + t1779;
  t1806 = 0. + t252 + t258;
  t1740 = t1643 + t1654 + t1677;
  t1190 = t55*t1023;
  t2310 = 0.055855*t251;
  t2341 = t303*t1135;
  t2344 = t2310 + t2341;
  t2371 = -1.*t303;
  t2379 = 1. + t2371;
  t2394 = 0.081715*t2379;
  t2429 = 0.13757*t303;
  t2432 = -1.*t251*t1135;
  t2454 = t2394 + t2429 + t2432;
  t1024 = -1.*t55*t1023;
  t1194 = -1.*t1135*t104;
  t2494 = -1.*t303*t55*t2344;
  t2500 = t55*t251*t2454;
  t2557 = Power(t303,2);
  t2563 = Power(t251,2);
  t1309 = t303*t250;
  t1317 = -1.*t251*t319;
  t1320 = t1309 + t1317;
  t1357 = t104*t175;
  t1358 = -1.*t55*t250*t251;
  t1412 = -1.*t303*t55*t319;
  t1511 = t1358 + t1412;
  t1531 = t243*t1511;
  t1539 = t1357 + t1531;
  t1823 = t1600*t1685;
  t2194 = t303*t1806;
  t2202 = 0. + t2194;
  t2169 = -1.*t251*t1806;
  t2175 = 0. + t2169;
  t1842 = t1600*t286;
  t1850 = t1740*t1685;
  t2738 = 0.035165*t251;
  t2739 = t303*t1678;
  t2743 = t2738 + t2739;
  t2773 = 0.081715*t2379;
  t2786 = 0.11688*t303;
  t2805 = -1.*t251*t1678;
  t2813 = t2773 + t2786 + t2805;
  t1635 = -1.*t1600*t1630;
  t2244 = t303*t1685;
  t2253 = 0. + t2244;
  t2234 = -1.*t251*t1685;
  t2238 = 0. + t2234;
  t1748 = -1.*t1740*t1630;
  t1750 = -1.*t1600*t161;
  t1888 = 0. + t303;
  t1915 = t1888*t250;
  t1917 = 0. + t251;
  t1922 = -1.*t1917*t319;
  t1965 = 0. + t1915 + t1922;
  t1982 = t243*t1965;
  t1991 = 0. + t1982;
  t2711 = -1.*t251*t2344;
  t2718 = -1.*t303*t2454;
  t2730 = t2711 + t2718;
  t693 = t55*t175;
  t705 = t250*t251*t104;
  t749 = t303*t104*t319;
  t755 = t705 + t749;
  t773 = t243*t755;
  t784 = t693 + t773;
  t2675 = t251*t2344;
  t2685 = t303*t2454;
  t2690 = t2675 + t2685;
  t3290 = -1.*t1917*t2743;
  t3326 = -1.*t1888*t2813;
  t3336 = 0. + t3290 + t3326;
  t2167 = t1685*t175;
  t2192 = t250*t2175;
  t2204 = -1.*t2202*t319;
  t2207 = 0. + t2192 + t2204;
  t2215 = t243*t2207;
  t2217 = 0. + t2167 + t2215;
  t3134 = t1917*t2743;
  t3138 = t1888*t2813;
  t3140 = 0. + t3134 + t3138;
  t2227 = t1630*t175;
  t2242 = t250*t2238;
  t2259 = -1.*t2253*t319;
  t2262 = 0. + t2242 + t2259;
  t2265 = t243*t2262;
  t2269 = 0. + t2227 + t2265;
  t3948 = Sin(var1[3]);
  t4121 = Cos(var1[3]);
  t4557 = -1.*t303*t250*t104;
  t4559 = t251*t104*t319;
  t4572 = t4557 + t4559;
  t4586 = t3948*t4572;
  t4631 = t55*t243;
  t4678 = -1.*t175*t755;
  t4834 = t4631 + t4678;
  t4836 = t4121*t4834;
  t4855 = t4586 + t4836;
  t3972 = t303*t55*t250;
  t3983 = -1.*t55*t251*t319;
  t3999 = t3972 + t3983;
  t4122 = t243*t104;
  t4129 = -1.*t175*t1511;
  t4166 = t4122 + t4129;
  t4248 = -1.*t303*t55*t250;
  t4255 = t55*t251*t319;
  t4303 = t4248 + t4255;
  t4399 = -1.*t243*t104;
  t4423 = -1.*t175*t662;
  t4478 = t4399 + t4423;
  t5597 = t4121*t4572;
  t5602 = -1.*t3948*t4834;
  t5611 = t5597 + t5602;
  t4985 = t303*t250*t286;
  t4993 = -1.*t251*t286*t319;
  t5013 = t4985 + t4993;
  t5021 = t243*t161;
  t5034 = -1.*t175*t356;
  t5049 = t5021 + t5034;
  t5121 = t303*t250*t516;
  t5127 = -1.*t251*t516*t319;
  t5160 = t5121 + t5127;
  t5208 = t243*t286;
  t5221 = -1.*t175*t556;
  t5223 = t5208 + t5221;
  t5308 = t250*t2202;
  t5317 = t2175*t319;
  t5318 = 0. + t5308 + t5317;
  t5381 = t243*t1685;
  t5382 = -1.*t175*t2207;
  t5398 = 0. + t5381 + t5382;
  t5426 = t250*t2253;
  t5434 = t2238*t319;
  t5435 = 0. + t5426 + t5434;
  t5456 = t243*t1630;
  t5477 = -1.*t175*t2262;
  t5494 = 0. + t5456 + t5477;
  t5862 = t250*t251;
  t5870 = t303*t319;
  t5878 = t5862 + t5870;
  t5780 = t250*t2454;
  t5782 = -1.*t2344*t319;
  t5827 = t5780 + t5782;
  t5879 = t250*t2344;
  t5899 = t2454*t319;
  t5907 = t5879 + t5899;
  t5838 = -1.*t1320*t5827;
  t5908 = -1.*t5878*t5907;
  t5940 = t5838 + t5908;
  t6226 = -1.*t250*t251*t1074;
  t6232 = -1.*t303*t1074*t319;
  t6237 = t6226 + t6232;
  t6249 = t303*t250*t1074;
  t6254 = -1.*t251*t1074*t319;
  t6276 = t6249 + t6254;
  t6051 = t1320*t5827;
  t6060 = t5878*t5907;
  t6086 = t6051 + t6060;
  t1142 = -1.*t55*t1135;
  t5970 = t1023*t104;
  t6119 = -1.*t5827*t755;
  t6128 = -1.*t5907*t4572;
  t6322 = t5827*t755;
  t6346 = t5907*t4572;
  t2610 = t55*t1135;
  t6718 = t250*t1917;
  t6729 = t1888*t319;
  t6738 = 0. + t6718 + t6729;
  t6702 = t250*t2813;
  t6706 = -1.*t2743*t319;
  t6710 = 0. + t6702 + t6706;
  t6739 = t250*t2743;
  t6751 = t2813*t319;
  t6753 = 0. + t6739 + t6751;
  t6717 = t1965*t6710;
  t6763 = t6738*t6753;
  t6767 = 0. + t6717 + t6763;
  t6844 = -1.*t250*t251*t1780;
  t6845 = -1.*t303*t1780*t319;
  t6860 = t6844 + t6845;
  t6880 = t303*t250*t1780;
  t6883 = -1.*t251*t1780*t319;
  t6887 = t6880 + t6883;
  t7045 = -1.*t1965*t6710;
  t7048 = -1.*t6738*t6753;
  t7072 = 0. + t7045 + t7048;
  t5984 = t3999*t5907;
  t7474 = t1023*t175;
  t7479 = t243*t5827;
  t7480 = t7474 + t7479;
  t7492 = t243*t1023;
  t7495 = -1.*t175*t5827;
  t7498 = t7492 + t7495;
  t7490 = -1.*t243*t1320*t7480;
  t7499 = t175*t1320*t7498;
  t7503 = t5908 + t7490 + t7499;
  t6280 = -1.*t5878*t6276;
  t6310 = t3999*t6276;
  t7743 = t1135*t175;
  t7759 = t243*t6237;
  t7767 = t7743 + t7759;
  t7779 = t243*t1135;
  t7784 = -1.*t175*t6237;
  t7785 = t7779 + t7784;
  t7587 = t243*t1320*t7480;
  t7596 = -1.*t175*t1320*t7498;
  t7597 = t6060 + t7587 + t7596;
  t6399 = t5878*t6276;
  t6427 = -1.*t4303*t5907;
  t6479 = -1.*t6276*t4572;
  t6569 = -1.*t3999*t5907;
  t6620 = -1.*t3999*t6276;
  t7639 = -1.*t7480*t784;
  t7641 = -1.*t7498*t4834;
  t7869 = t7480*t784;
  t7885 = t7498*t4834;
  t6667 = t4303*t5907;
  t6676 = t6276*t4572;
  t6786 = -1.*t6753*t5318;
  t8190 = t1600*t175;
  t8202 = t243*t6710;
  t8217 = 0. + t8190 + t8202;
  t8236 = t243*t1600;
  t8240 = -1.*t175*t6710;
  t8244 = 0. + t8236 + t8240;
  t8218 = t1991*t8217;
  t8232 = -1.*t175*t1965;
  t8233 = 0. + t8232;
  t8245 = t8233*t8244;
  t8257 = t6763 + t8218 + t8245;
  t6904 = t6738*t6887;
  t6983 = -1.*t6753*t5160;
  t6993 = -1.*t6887*t5318;
  t8295 = t1740*t175;
  t8296 = t243*t6860;
  t8302 = t8295 + t8296;
  t8318 = t243*t1740;
  t8329 = -1.*t175*t6860;
  t8335 = t8318 + t8329;
  t7095 = t6753*t5435;
  t7153 = t6753*t5318;
  t7172 = t6753*t5160;
  t7198 = t6887*t5318;
  t7218 = -1.*t6753*t5435;
  t7284 = -1.*t6753*t5013;
  t7297 = -1.*t6887*t5435;
  t8440 = -1.*t1991*t8217;
  t8445 = -1.*t8233*t8244;
  t8452 = t7048 + t8440 + t8445;
  t7356 = -1.*t6738*t6887;
  t7403 = t6753*t5013;
  t7416 = t6887*t5435;
  t5621 = t4121*t5013;
  t5622 = -1.*t3948*t5049;
  t5640 = t5621 + t5622;
  t5646 = t4121*t5160;
  t5660 = -1.*t3948*t5223;
  t5661 = t5646 + t5660;
  t5581 = t4121*t4303;
  t5586 = -1.*t3948*t4478;
  t5587 = t5581 + t5586;
  t847 = -0.194401*t70;
  t884 = -1.*t70*t880;
  t916 = t913*t111;
  t925 = 0. + t847 + t884 + t916;
  t946 = t70*t913;
  t947 = 0.194401*t111;
  t955 = t880*t111;
  t956 = 0. + t946 + t947 + t955;
  t1076 = -1.*t55*t1074;
  t1084 = t1024 + t1076;
  t1091 = t55*t1084;
  t1149 = t1142 + t1148;
  t1175 = -1.*t104*t1149;
  t1195 = t1190 + t1194;
  t1224 = t55*t1195;
  t1226 = -1.*t1074*t104;
  t1251 = t1148 + t1226;
  t1272 = t104*t1251;
  t1276 = t1091 + t1175 + t1224 + t1272;
  t5554 = t4121*t3999;
  t5563 = -1.*t3948*t4166;
  t5567 = t5554 + t5563;
  t1689 = -1.*t1678*t1685;
  t1714 = 0. + t1635 + t1689;
  t1715 = t286*t1714;
  t1730 = -1.*t1678*t286;
  t1786 = -1.*t1780*t1685;
  t1804 = t1730 + t1748 + t1750 + t1786;
  t1805 = t1685*t1804;
  t1811 = t1678*t1806;
  t1831 = 0. + t1811 + t1823;
  t1832 = t161*t1831;
  t1849 = t1780*t1806;
  t1859 = t1678*t516;
  t1872 = t1842 + t1849 + t1850 + t1859;
  t1879 = t1630*t1872;
  t1886 = t1715 + t1805 + t1832 + t1879;
  t2015 = 0.035165*t1685;
  t2024 = 0. + t2015;
  t2118 = -0.081715*t1806;
  t2135 = -0.11688*t1630;
  t2142 = 0. + t2118 + t2135;
  t2156 = -0.11688*t161;
  t2160 = -0.081715*t516;
  t2164 = t2156 + t2160;
  t5689 = t4121*t5318;
  t5691 = -1.*t3948*t5398;
  t5713 = 0. + t5689 + t5691;
  t5733 = t4121*t5435;
  t5741 = -1.*t3948*t5494;
  t5743 = 0. + t5733 + t5741;
  t2355 = -1.*t303*t2344*t104;
  t2460 = t251*t2454*t104;
  t2471 = t1190 + t2355 + t2460;
  t2475 = t55*t2471;
  t2504 = t2494 + t2500 + t1148;
  t2523 = -1.*t104*t2504;
  t2561 = -1.*t2557*t55*t1074;
  t2568 = -1.*t55*t2563*t1074;
  t2584 = t303*t2344*t104;
  t2589 = -1.*t251*t2454*t104;
  t2597 = t1024 + t2561 + t2568 + t2584 + t2589 + t1194;
  t2599 = t55*t2597;
  t2640 = -1.*t2557*t1074*t104;
  t2653 = -1.*t2563*t1074*t104;
  t2658 = t2494 + t2500 + t2610 + t1148 + t2640 + t2653;
  t2661 = t104*t2658;
  t2664 = t2475 + t2523 + t2599 + t2661;
  t8917 = t4121*t5878;
  t8928 = t3948*t175*t1320;
  t8929 = t8917 + t8928;
  t2764 = t2743*t2202;
  t2818 = t2813*t2175;
  t2820 = t1823 + t2764 + t2818;
  t2832 = t161*t2820;
  t2837 = t303*t2743*t516;
  t2842 = -1.*t251*t2813*t516;
  t2874 = t303*t1780*t2202;
  t2883 = -1.*t251*t1780*t2175;
  t2897 = t1842 + t1850 + t2837 + t2842 + t2874 + t2883;
  t2903 = t1630*t2897;
  t2910 = -1.*t2743*t2253;
  t2914 = -1.*t2813*t2238;
  t2924 = t1635 + t2910 + t2914;
  t2937 = t286*t2924;
  t2940 = -1.*t303*t2743*t286;
  t2944 = t251*t2813*t286;
  t2949 = -1.*t303*t1780*t2253;
  t2955 = t251*t1780*t2238;
  t2963 = t2940 + t2944 + t1748 + t1750 + t2949 + t2955;
  t2964 = t1685*t2963;
  t3013 = t2832 + t2903 + t2937 + t2964;
  t8963 = t4121*t6738;
  t8966 = -1.*t3948*t8233;
  t8971 = 0. + t8963 + t8966;
  t3197 = t3140*t1685;
  t3258 = 0. + t3197;
  t3342 = t3336*t1630;
  t3358 = 0. + t3342;
  t3452 = t1888*t251*t1780;
  t3454 = -1.*t303*t1917*t1780;
  t3471 = t3452 + t3454;
  t3484 = t3471*t1630;
  t3512 = t3336*t161;
  t3550 = t3484 + t3512;
  t3585 = t3140*t286;
  t3609 = -1.*t1888*t251*t1780;
  t3645 = t303*t1917*t1780;
  t3670 = t3609 + t3645;
  t3677 = t3670*t1685;
  t3678 = t3585 + t3677;
  t5577 = 1.527*t784*t5567;
  t5596 = 1.527*t784*t5587;
  t5612 = 1.527*t1539*t5611;
  t5614 = 1.527*t675*t5611;
  t5642 = 0.241*t2269*t5640;
  t5686 = 0.241*t2217*t5661;
  t5714 = 0.241*t579*t5713;
  t5751 = 0.241*t411*t5743;
  t5753 = t5577 + t5596 + t5612 + t5614 + t5642 + t5686 + t5714 + t5751;
  t4022 = t3948*t3999;
  t4171 = t4121*t4166;
  t4189 = t4022 + t4171;
  t4387 = t3948*t4303;
  t4510 = t4121*t4478;
  t4513 = t4387 + t4510;
  t5337 = t3948*t5318;
  t5408 = t4121*t5398;
  t5409 = 0. + t5337 + t5408;
  t5164 = t3948*t5160;
  t5261 = t4121*t5223;
  t5269 = t5164 + t5261;
  t5449 = t3948*t5435;
  t5502 = t4121*t5494;
  t5517 = 0. + t5449 + t5502;
  t5017 = t3948*t5013;
  t5056 = t4121*t5049;
  t5060 = t5017 + t5056;
  t5949 = t3999*t5940;
  t5983 = t1511*t5827;
  t5996 = t5970 + t5983 + t5984;
  t6012 = t5878*t5996;
  t6014 = t5949 + t6012;
  t6117 = t4572*t6086;
  t6135 = t1024 + t6119 + t6128;
  t6141 = t5878*t6135;
  t6160 = t6117 + t6141;
  t6180 = t4572*t5940;
  t6242 = -1.*t1320*t6237;
  t6286 = t6242 + t6280;
  t6296 = t3999*t6286;
  t6297 = t1135*t104;
  t6307 = t1511*t6237;
  t6350 = t1190 + t6297 + t6307 + t6310 + t6322 + t6346;
  t6362 = t5878*t6350;
  t6366 = t6180 + t6296 + t6362;
  t6377 = t4303*t6086;
  t6398 = t1320*t6237;
  t6411 = t6398 + t6399;
  t6418 = t4572*t6411;
  t6419 = -1.*t662*t5827;
  t6471 = -1.*t6237*t755;
  t6481 = t1142 + t5970 + t6419 + t6427 + t6471 + t6479;
  t6521 = t5878*t6481;
  t6543 = t6377 + t6418 + t6521;
  t6558 = -1.*t1511*t5827;
  t6603 = t1148 + t6558 + t6569;
  t6604 = t4303*t6603;
  t6618 = -1.*t1511*t6237;
  t6641 = t1024 + t1194 + t6618 + t6620 + t6119 + t6128;
  t6644 = t4572*t6641;
  t6651 = t1190 + t6322 + t6346;
  t6660 = t4572*t6651;
  t6661 = t662*t5827;
  t6672 = t6237*t755;
  t6687 = t2610 + t1148 + t6661 + t6667 + t6672 + t6676;
  t6688 = t3999*t6687;
  t6698 = t6604 + t6644 + t6660 + t6688;
  t6768 = t5318*t6767;
  t6772 = -1.*t1600*t1685;
  t6782 = -1.*t6710*t2207;
  t6796 = t6772 + t6782 + t6786;
  t6808 = t6738*t6796;
  t6809 = t6768 + t6808;
  t6824 = t5160*t6767;
  t6872 = t1965*t6860;
  t6908 = t6872 + t6904;
  t6912 = t5318*t6908;
  t6922 = -1.*t1600*t286;
  t6930 = -1.*t1740*t1685;
  t6965 = -1.*t6710*t556;
  t6992 = -1.*t6860*t2207;
  t7020 = t6922 + t6930 + t6965 + t6983 + t6992 + t6993;
  t7028 = t6738*t7020;
  t7032 = t6824 + t6912 + t7028;
  t7073 = t5435*t7072;
  t7081 = t1600*t1630;
  t7084 = t6710*t2262;
  t7098 = t7081 + t7084 + t7095;
  t7114 = t6738*t7098;
  t7123 = t7073 + t7114;
  t7133 = t6710*t2207;
  t7156 = t1823 + t7133 + t7153;
  t7168 = t5013*t7156;
  t7169 = t6710*t556;
  t7180 = t6860*t2207;
  t7199 = t1842 + t1850 + t7169 + t7172 + t7180 + t7198;
  t7207 = t5435*t7199;
  t7214 = -1.*t6710*t2262;
  t7233 = t1635 + t7214 + t7218;
  t7270 = t5160*t7233;
  t7283 = -1.*t6710*t356;
  t7287 = -1.*t6860*t2262;
  t7312 = t1748 + t1750 + t7283 + t7284 + t7287 + t7297;
  t7313 = t5318*t7312;
  t7322 = t7168 + t7207 + t7270 + t7313;
  t7340 = t5013*t7072;
  t7341 = -1.*t1965*t6860;
  t7357 = t7341 + t7356;
  t7359 = t5435*t7357;
  t7383 = t1740*t1630;
  t7384 = t1600*t161;
  t7402 = t6710*t356;
  t7410 = t6860*t2262;
  t7433 = t7383 + t7384 + t7402 + t7403 + t7410 + t7416;
  t7440 = t6738*t7433;
  t7442 = t7340 + t7359 + t7440;
  t7521 = t1539*t7503;
  t7523 = t1539*t7480;
  t7538 = t4166*t7498;
  t7546 = t5984 + t7523 + t7538;
  t7564 = t243*t1320*t7546;
  t7572 = t7521 + t7564;
  t7632 = t784*t7597;
  t7676 = t6128 + t7639 + t7641;
  t7678 = t243*t1320*t7676;
  t7698 = t7632 + t7678;
  t7742 = t784*t7503;
  t7768 = -1.*t243*t1320*t7767;
  t7790 = t175*t1320*t7785;
  t7833 = t6280 + t7768 + t7790;
  t7834 = t1539*t7833;
  t7837 = t1539*t7767;
  t7865 = t4166*t7785;
  t7895 = t6310 + t6346 + t7837 + t7865 + t7869 + t7885;
  t7910 = t243*t1320*t7895;
  t7947 = t7742 + t7834 + t7910;
  t7974 = t675*t7597;
  t7981 = t243*t1320*t7767;
  t7995 = -1.*t175*t1320*t7785;
  t7998 = t6399 + t7981 + t7995;
  t8000 = t784*t7998;
  t8003 = -1.*t675*t7480;
  t8011 = -1.*t4478*t7498;
  t8017 = -1.*t7767*t784;
  t8025 = -1.*t7785*t4834;
  t8032 = t6427 + t6479 + t8003 + t8011 + t8017 + t8025;
  t8041 = t243*t1320*t8032;
  t8046 = t7974 + t8000 + t8041;
  t8065 = -1.*t1539*t7480;
  t8070 = -1.*t4166*t7498;
  t8077 = t6569 + t8065 + t8070;
  t8082 = t675*t8077;
  t8095 = -1.*t1539*t7767;
  t8123 = -1.*t4166*t7785;
  t8130 = t6620 + t6128 + t8095 + t8123 + t7639 + t7641;
  t8131 = t784*t8130;
  t8143 = t6346 + t7869 + t7885;
  t8144 = t784*t8143;
  t8147 = t675*t7480;
  t8148 = t4478*t7498;
  t8150 = t7767*t784;
  t8154 = t7785*t4834;
  t8159 = t6667 + t6676 + t8147 + t8148 + t8150 + t8154;
  t8160 = t1539*t8159;
  t8180 = t8082 + t8131 + t8144 + t8160;
  t8258 = t2217*t8257;
  t8261 = -1.*t8217*t2217;
  t8266 = -1.*t8244*t5398;
  t8268 = t6786 + t8261 + t8266;
  t8284 = t1991*t8268;
  t8285 = t8258 + t8284;
  t8289 = t579*t8257;
  t8304 = t1991*t8302;
  t8349 = t8233*t8335;
  t8354 = t6904 + t8304 + t8349;
  t8361 = t2217*t8354;
  t8375 = -1.*t8217*t579;
  t8381 = -1.*t8244*t5223;
  t8391 = -1.*t8302*t2217;
  t8396 = -1.*t8335*t5398;
  t8402 = t6983 + t6993 + t8375 + t8381 + t8391 + t8396;
  t8417 = t1991*t8402;
  t8422 = t8289 + t8361 + t8417;
  t8453 = t2269*t8452;
  t8465 = t8217*t2269;
  t8466 = t8244*t5494;
  t8477 = t7095 + t8465 + t8466;
  t8482 = t1991*t8477;
  t8483 = t8453 + t8482;
  t8492 = t8217*t2217;
  t8504 = t8244*t5398;
  t8529 = t7153 + t8492 + t8504;
  t8531 = t411*t8529;
  t8555 = t8217*t579;
  t8577 = t8244*t5223;
  t8588 = t8302*t2217;
  t8593 = t8335*t5398;
  t8595 = t7172 + t7198 + t8555 + t8577 + t8588 + t8593;
  t8596 = t2269*t8595;
  t8619 = -1.*t8217*t2269;
  t8659 = -1.*t8244*t5494;
  t8664 = t7218 + t8619 + t8659;
  t8674 = t579*t8664;
  t8687 = -1.*t8217*t411;
  t8689 = -1.*t8244*t5049;
  t8715 = -1.*t8302*t2269;
  t8718 = -1.*t8335*t5494;
  t8723 = t7284 + t7297 + t8687 + t8689 + t8715 + t8718;
  t8724 = t2217*t8723;
  t8727 = t8531 + t8596 + t8674 + t8724;
  t8746 = t411*t8452;
  t8747 = -1.*t1991*t8302;
  t8748 = -1.*t8233*t8335;
  t8755 = t7356 + t8747 + t8748;
  t8756 = t2269*t8755;
  t8763 = t8217*t411;
  t8788 = t8244*t5049;
  t8798 = t8302*t2269;
  t8809 = t8335*t5494;
  t8814 = t7403 + t7416 + t8763 + t8788 + t8798 + t8809;
  t8817 = t1991*t8814;
  t8820 = t8746 + t8756 + t8817;
  t10054 = t3948*t5878;
  t10064 = -1.*t4121*t175*t1320;
  t10068 = t10054 + t10064;
  t10115 = t3948*t6738;
  t10119 = t4121*t8233;
  t10128 = 0. + t10115 + t10119;
  t4202 = 1.527*t784*t4189;
  t4517 = 1.527*t784*t4513;
  t4954 = 1.527*t1539*t4855;
  t4960 = 1.527*t675*t4855;
  t5067 = 0.241*t2269*t5060;
  t5286 = 0.241*t2217*t5269;
  t5418 = 0.241*t579*t5409;
  t5521 = 0.241*t411*t5517;
  t5539 = t4202 + t4517 + t4954 + t4960 + t5067 + t5286 + t5418 + t5521;
  t9068 = 1.527*t5567*t4855;
  t9075 = 1.527*t5587*t4855;
  t9078 = 1.527*t4189*t5611;
  t9083 = 1.527*t4513*t5611;
  t9084 = 0.241*t5661*t5409;
  t9169 = 0.241*t5269*t5713;
  t9189 = 0.241*t5640*t5517;
  t9263 = 0.241*t5060*t5743;
  t9284 = t9068 + t9075 + t9078 + t9083 + t9084 + t9169 + t9189 + t9263;
  t10454 = t784*t8077;
  t10460 = t1539*t8143;
  t10462 = t10454 + t10460;
  t10554 = t2269*t8529;
  t10559 = t2217*t8664;
  t10564 = t10554 + t10559;
  t7586 = 1.527*t675*t7572;
  t7712 = 1.527*t784*t7698;
  t7957 = 1.527*t784*t7947;
  t8055 = 1.527*t1539*t8046;
  t8183 = 1.527*t243*t1320*t8180;
  t8288 = 0.241*t411*t8285;
  t8425 = 0.241*t2269*t8422;
  t8491 = 0.241*t579*t8483;
  t8731 = 0.241*t1991*t8727;
  t8825 = 0.241*t2217*t8820;
  t8828 = t7586 + t7712 + t7957 + t8055 + t8183 + t8288 + t8425 + t8491 + t8731 + t8825;
  t10301 = 1.527*t4513*t7572;
  t10306 = 1.527*t4855*t7698;
  t10313 = 1.527*t4855*t7947;
  t10314 = 1.527*t4189*t8046;
  t10318 = 1.527*t10068*t8180;
  t10325 = 0.241*t5060*t8285;
  t10326 = 0.241*t5517*t8422;
  t10333 = 0.241*t5269*t8483;
  t10337 = 0.241*t10128*t8727;
  t10348 = 0.241*t5409*t8820;
  t10349 = t10301 + t10306 + t10313 + t10314 + t10318 + t10325 + t10326 + t10333 + t10337 + t10348;
  t9564 = 1.527*t5587*t7572;
  t9565 = 1.527*t5611*t7698;
  t9659 = 1.527*t5611*t7947;
  t9664 = 1.527*t5567*t8046;
  t9670 = 1.527*t8929*t8180;
  t9680 = 0.241*t5640*t8285;
  t9685 = 0.241*t5743*t8422;
  t9713 = 0.241*t5661*t8483;
  t9723 = 0.241*t8971*t8727;
  t9728 = 0.241*t5713*t8820;
  t9843 = t9564 + t9565 + t9659 + t9664 + t9670 + t9680 + t9685 + t9713 + t9723 + t9728;
  t10775 = t4572*t6603;
  t10780 = t3999*t6651;
  t10781 = t10775 + t10780;
  t10477 = t55*t1149;
  t10478 = t104*t1195;
  t10488 = t10477 + t10478;
  t10825 = t5435*t7156;
  t10827 = t5318*t7233;
  t10831 = 0. + t10825 + t10827;
  t10581 = t1685*t1714;
  t10582 = t1630*t1831;
  t10583 = 0. + t10581 + t10582;
  t10642 = t104*t2471;
  t10669 = t55*t2504;
  t10677 = t10642 + t10669;
  t10733 = t1630*t2820;
  t10738 = t1685*t2924;
  t10745 = 0. + t10733 + t10738;
  t6046 = 1.527*t675*t6014;
  t6162 = 1.527*t784*t6160;
  t6367 = 1.527*t784*t6366;
  t6545 = 1.527*t1539*t6543;
  t6700 = 1.527*t243*t1320*t6698;
  t6823 = 0.241*t411*t6809;
  t7036 = 0.241*t2269*t7032;
  t7132 = 0.241*t579*t7123;
  t7324 = 0.241*t1991*t7322;
  t7446 = 0.241*t2217*t7442;
  t7457 = t6046 + t6162 + t6367 + t6545 + t6700 + t6823 + t7036 + t7132 + t7324 + t7446;
  t10265 = 1.527*t4513*t6014;
  t10267 = 1.527*t4855*t6160;
  t10268 = 1.527*t4855*t6366;
  t10273 = 1.527*t4189*t6543;
  t10274 = 1.527*t10068*t6698;
  t10275 = 0.241*t5060*t6809;
  t10277 = 0.241*t7032*t5517;
  t10280 = 0.241*t5269*t7123;
  t10281 = 0.241*t10128*t7322;
  t10282 = 0.241*t5409*t7442;
  t10283 = t10265 + t10267 + t10268 + t10273 + t10274 + t10275 + t10277 + t10280 + t10281 + t10282;
  t9443 = 1.527*t5587*t6014;
  t9448 = 1.527*t5611*t6160;
  t9460 = 1.527*t5611*t6366;
  t9538 = 1.527*t5567*t6543;
  t9539 = 1.527*t8929*t6698;
  t9540 = 0.241*t5640*t6809;
  t9545 = 0.241*t7032*t5743;
  t9546 = 0.241*t5661*t7123;
  t9547 = 0.241*t8971*t7322;
  t9556 = 0.241*t5713*t7442;
  t9557 = t9443 + t9448 + t9460 + t9538 + t9539 + t9540 + t9545 + t9546 + t9547 + t9556;
  t10762 = 1.527*t6366*t7572;
  t10766 = 1.527*t6543*t7698;
  t10767 = 1.527*t6698*t10462;
  t10768 = 1.527*t6014*t7947;
  t10769 = 1.527*t6160*t8046;
  t10798 = 1.527*t10781*t8180;
  t10802 = 0.241*t7032*t8285;
  t10819 = 0.241*t6809*t8422;
  t10820 = 0.241*t7322*t10564;
  t10823 = 0.241*t7442*t8483;
  t10837 = 0.241*t10831*t8727;
  t10839 = 0.241*t7123*t8820;
  t10845 = t10762 + t10766 + t10767 + t10768 + t10769 + t10798 + t10802 + t10819 + t10820 + t10823 + t10837 + t10839;
  t11154 = 0.241*t3358;
  t11156 = 0. + t11154;
  t11158 = 0.241*t3258;
  t11162 = 0. + t11158;
  t11168 = 0.241*t10745;
  t11170 = 0. + t11168;
  t2670 = 1.527*t243*t2664*t1320;
  t2698 = -1.527*t2690*t104*t1539;
  t2735 = 1.527*t2730*t104*t675;
  t3066 = 0.241*t3013*t1991;
  t3072 = 1.527*t55*t2730*t784;
  t3108 = 1.527*t55*t2690*t784;
  t3562 = 0.241*t3550*t2217;
  t3711 = 0.241*t3678*t2269;
  t10180 = 1.527*t2664*t10068;
  t10181 = -1.527*t2690*t104*t4189;
  t10184 = 1.527*t2730*t104*t4513;
  t10186 = 0.241*t3013*t10128;
  t10191 = 1.527*t55*t2730*t4855;
  t10195 = 1.527*t55*t2690*t4855;
  t10216 = 0.241*t3550*t5409;
  t10217 = 0.241*t3678*t5517;
  t9012 = 1.527*t2664*t8929;
  t9013 = -1.527*t2690*t104*t5567;
  t9017 = 1.527*t2730*t104*t5587;
  t9027 = 0.241*t3013*t8971;
  t9028 = 1.527*t55*t2730*t5611;
  t9031 = 1.527*t55*t2690*t5611;
  t9041 = 0.241*t3550*t5713;
  t9042 = 0.241*t3678*t5743;
  t10995 = 1.527*t55*t2730*t6014;
  t11002 = -1.527*t2690*t104*t6160;
  t11003 = 1.527*t2664*t10781;
  t11005 = 1.527*t2730*t104*t6366;
  t11007 = 1.527*t55*t2690*t6543;
  t11009 = 1.527*t10677*t6698;
  t11015 = 0.241*t3678*t6809;
  t11017 = 0.241*t3013*t10831;
  t11018 = 0.241*t3550*t7123;
  t10612 = 1.527*t55*t2730*t7572;
  t10615 = -1.527*t2690*t104*t7698;
  t10625 = 1.527*t2664*t10462;
  t10628 = 1.527*t2730*t104*t7947;
  t10632 = 1.527*t55*t2690*t8046;
  t10683 = 1.527*t10677*t8180;
  t10686 = 0.241*t3678*t8285;
  t10692 = 0.241*t3013*t10564;
  t10725 = 0.241*t3550*t8483;
  t11144 = -0.17058117*t55*t2730*t104;
  t11145 = -0.17058117*t55*t2690*t104;
  t11147 = 1.527*t10677*t1276;
  t11148 = 1.527*t10488*t2664;
  t11895 = 0.241*t2142;
  t11896 = 0. + t11895;
  t11915 = 0.241*t2024;
  t11920 = 0. + t11915;
  t11955 = 0.241*t10583;
  t11997 = 0. + t11955;
  t1349 = 1.527*t243*t1276*t1320;
  t1546 = -0.085290585*t104*t1539;
  t1557 = -0.085290585*t104*t675;
  t2009 = 0.241*t1886*t1991;
  t2225 = 0.241*t2164*t2217;
  t2270 = 0.008474765*t286*t2269;
  t10069 = 1.527*t1276*t10068;
  t10085 = -0.085290585*t104*t4189;
  t10088 = -0.085290585*t104*t4513;
  t10133 = 0.241*t1886*t10128;
  t10157 = 0.241*t2164*t5409;
  t10160 = 0.008474765*t286*t5517;
  t8939 = 1.527*t1276*t8929;
  t8958 = -0.085290585*t104*t5567;
  t8961 = -0.085290585*t104*t5587;
  t8972 = 0.241*t1886*t8971;
  t8991 = 0.241*t2164*t5713;
  t8992 = 0.008474765*t286*t5743;
  t10898 = -0.085290585*t55*t6014;
  t10899 = -0.085290585*t104*t6160;
  t10901 = 1.527*t1276*t10781;
  t10905 = -0.085290585*t104*t6366;
  t10907 = 0.085290585*t55*t6543;
  t10927 = 1.527*t10488*t6698;
  t10935 = 0.008474765*t286*t6809;
  t10944 = 0.241*t1886*t10831;
  t10948 = 0.241*t2164*t7123;
  t10443 = -0.085290585*t55*t7572;
  t10453 = -0.085290585*t104*t7698;
  t10469 = 1.527*t1276*t10462;
  t10470 = -0.085290585*t104*t7947;
  t10472 = 0.085290585*t55*t8046;
  t10529 = 1.527*t10488*t8180;
  t10535 = 0.008474765*t286*t8285;
  t10566 = 0.241*t1886*t10564;
  t10579 = 0.241*t2164*t8483;
  t11810 = 0.0034116234*t55;
  t11819 = -0.0034116234*t104;
  t11132 = -0.06108*t55*t2730;
  t11135 = -0.06108*t2690*t104;
  t12470 = 0.241*t956;
  t12471 = 0. + t12470;
  t12477 = 0.241*t925;
  t12478 = 0. + t12477;
  t679 = -0.06108*t675;
  t802 = 0.06108*t784;
  t9981 = -0.06108*t4513;
  t10008 = 0.06108*t4855;
  t8865 = -0.06108*t5587;
  t8881 = 0.06108*t5611;
  t10885 = -0.06108*t6366;
  t10887 = 0.06108*t6543;
  t10387 = -0.06108*t7947;
  t10389 = 0.06108*t8046;
  t11126 = -0.03856*t3550;
  t11129 = 0.004820000000000004*t3678;
  t11130 = t11126 + t11129;
  t11766 = 0.00016949530000000016*t286;
  t11778 = -0.03856*t2164;
  t11804 = t11766 + t11778;
  t475 = 0.004820000000000004*t411;
  t603 = -0.03856*t579;
  t630 = t475 + t603;
  t9952 = 0.004820000000000004*t5060;
  t9964 = -0.03856*t5269;
  t9968 = t9952 + t9964;
  t8847 = 0.004820000000000004*t5640;
  t8852 = -0.03856*t5661;
  t8857 = t8847 + t8852;
  t10875 = 0.004820000000000004*t7032;
  t10878 = -0.03856*t7442;
  t10882 = t10875 + t10878;
  t10374 = 0.004820000000000004*t8422;
  t10379 = -0.03856*t8820;
  t10382 = t10374 + t10379;
  p_output1[0]=var2[16]*(-0.5*(0.482*t2269*t411 + 0.482*t2217*t579 + 3.054*t1539*t784 + 3.054*t675*t784)*var2[0] - 0.5*t5753*var2[1] - 0.5*t5539*var2[2] - 0.5*t8828*var2[3] - 0.5*t7457*var2[4] - 0.5*(t2670 + t2698 + t2735 + t3066 + t3072 + t3108 + t3562 + t3711 + 0.241*t3258*t411 + 0.241*t3358*t579)*var2[5] - 0.5*(t1349 + t1546 + t1557 + t2009 + t2225 + t2270 + 0.241*t2024*t411 + 0.241*t2142*t579)*var2[15] - 0.5*(t679 + t802 + 0.241*t411*t925 + 0.241*t579*t956)*var2[16] - 0.5*t630*var2[17]);
  p_output1[1]=var2[16]*(-0.5*t5753*var2[0] - 0.5*(3.054*t5567*t5611 + 3.054*t5587*t5611 + 0.482*t5661*t5713 + 0.482*t5640*t5743)*var2[1] - 0.5*t9284*var2[2] - 0.5*t9843*var2[3] - 0.5*t9557*var2[4] - 0.5*(0.241*t3258*t5640 + 0.241*t3358*t5661 + t9012 + t9013 + t9017 + t9027 + t9028 + t9031 + t9041 + t9042)*var2[5] - 0.5*(0.241*t2024*t5640 + 0.241*t2142*t5661 + t8939 + t8958 + t8961 + t8972 + t8991 + t8992)*var2[15] - 0.5*(t8865 + t8881 + 0.241*t5640*t925 + 0.241*t5661*t956)*var2[16] - 0.5*t8857*var2[17]);
  p_output1[2]=var2[16]*(-0.5*t5539*var2[0] - 0.5*t9284*var2[1] - 0.5*(3.054*t4189*t4855 + 3.054*t4513*t4855 + 0.482*t5269*t5409 + 0.482*t5060*t5517)*var2[2] - 0.5*t10349*var2[3] - 0.5*t10283*var2[4] - 0.5*(t10180 + t10181 + t10184 + t10186 + t10191 + t10195 + t10216 + t10217 + 0.241*t3258*t5060 + 0.241*t3358*t5269)*var2[5] - 0.5*(t10069 + t10085 + t10088 + t10133 + t10157 + t10160 + 0.241*t2024*t5060 + 0.241*t2142*t5269)*var2[15] - 0.5*(t10008 + 0.241*t5060*t925 + 0.241*t5269*t956 + t9981)*var2[16] - 0.5*t9968*var2[17]);
  p_output1[3]=var2[16]*(-0.5*t8828*var2[0] - 0.5*t9843*var2[1] - 0.5*t10349*var2[2] - 0.5*(3.054*t7572*t7947 + 3.054*t7698*t8046 + 3.054*t10462*t8180 + 0.482*t8285*t8422 + 0.482*t10564*t8727 + 0.482*t8483*t8820)*var2[3] - 0.5*t10845*var2[4] - 0.5*(t10612 + t10615 + t10625 + t10628 + t10632 + t10683 + t10686 + t10692 + t10725 + 0.241*t3258*t8422 + 0.241*t10745*t8727 + 0.241*t3358*t8820)*var2[5] - 0.5*(t10443 + t10453 + t10469 + t10470 + t10472 + t10529 + t10535 + t10566 + t10579 + 0.241*t2024*t8422 + 0.241*t10583*t8727 + 0.241*t2142*t8820)*var2[15] - 0.5*(t10387 + t10389 + 0.241*t8422*t925 + 0.241*t8820*t956)*var2[16] - 0.5*t10382*var2[17]);
  p_output1[4]=var2[16]*(-0.5*t7457*var2[0] - 0.5*t9557*var2[1] - 0.5*t10283*var2[2] - 0.5*t10845*var2[3] - 0.5*(3.054*t6014*t6366 + 3.054*t6160*t6543 + 3.054*t10781*t6698 + 0.482*t6809*t7032 + 0.482*t10831*t7322 + 0.482*t7123*t7442)*var2[4] - 0.5*(t10995 + t11002 + t11003 + t11005 + t11007 + t11009 + t11015 + t11017 + t11018 + 0.241*t3258*t7032 + 0.241*t10745*t7322 + 0.241*t3358*t7442)*var2[5] - 0.5*(t10898 + t10899 + t10901 + t10905 + t10907 + t10927 + t10935 + t10944 + t10948 + 0.241*t2024*t7032 + 0.241*t10583*t7322 + 0.241*t2142*t7442)*var2[15] - 0.5*(t10885 + t10887 + 0.241*t7032*t925 + 0.241*t7442*t956)*var2[16] - 0.5*t10882*var2[17]);
  p_output1[5]=var2[16]*(-0.5*(t2670 + t2698 + t2735 + t3066 + t3072 + t3108 + t3562 + t3711 + t11162*t411 + t11156*t579)*var2[0] - 0.5*(t11162*t5640 + t11156*t5661 + t9012 + t9013 + t9017 + t9027 + t9028 + t9031 + t9041 + t9042)*var2[1] - 0.5*(t10180 + t10181 + t10184 + t10186 + t10191 + t10195 + t10216 + t10217 + t11162*t5060 + t11156*t5269)*var2[2] - 0.5*(t10612 + t10615 + t10625 + t10628 + t10632 + t10683 + t10686 + t10692 + t10725 + t11162*t8422 + t11170*t8727 + t11156*t8820)*var2[3] - 0.5*(t10995 + t11002 + t11003 + t11005 + t11007 + t11009 + t11015 + t11017 + t11018 + t11162*t7032 + t11170*t7322 + t11156*t7442)*var2[4] - 0.5*(3.054*t10677*t2664 + 0.241*t10745*t3013 + t11170*t3013 + t11156*t3550 + 0.241*t3358*t3550 + t11162*t3678 + 0.241*t3258*t3678 - 3.054*t104*Power(t2690,2)*t55 + 3.054*t104*Power(t2730,2)*t55)*var2[5] - 0.5*(t11144 + t11145 + t11147 + t11148 + t11170*t1886 + t11156*t2164 + 0.035165*t11162*t286 + 0.241*t10583*t3013 + 0.241*t2142*t3550 + 0.241*t2024*t3678)*var2[15] - 0.5*(t11132 + t11135 + 0.241*t3678*t925 + 0.241*t3550*t956)*var2[16] - 0.5*t11130*var2[17]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=var2[16]*(-0.5*(t1349 + t1546 + t1557 + t2009 + t2225 + t2270 + t11920*t411 + t11896*t579)*var2[0] - 0.5*(t11920*t5640 + t11896*t5661 + t8939 + t8958 + t8961 + t8972 + t8991 + t8992)*var2[1] - 0.5*(t10069 + t10085 + t10088 + t10133 + t10157 + t10160 + t11920*t5060 + t11896*t5269)*var2[2] - 0.5*(t10443 + t10453 + t10469 + t10470 + t10472 + t10529 + t10535 + t10566 + t10579 + t11920*t8422 + t11997*t8727 + t11896*t8820)*var2[3] - 0.5*(t10898 + t10899 + t10901 + t10905 + t10907 + t10927 + t10935 + t10944 + t10948 + t11920*t7032 + t11997*t7322 + t11896*t7442)*var2[4] - 0.5*(t11144 + t11145 + t11147 + t11148 + 0.241*t10745*t1886 + t11997*t3013 + 0.008474765*t286*t3258 + 0.241*t2164*t3358 + t11896*t3550 + t11920*t3678)*var2[5] - 0.5*(3.054*t10488*t1276 + 0.241*t10583*t1886 + t11997*t1886 + t11896*t2164 + 0.241*t2142*t2164 + 0.035165*t11920*t286 + 0.008474765*t2024*t286)*var2[15] - 0.5*(t11810 + t11819 + 0.008474765*t286*t925 + 0.241*t2164*t956)*var2[16] - 0.5*t11804*var2[17]);
  p_output1[16]=(-0.5*(t12478*t411 + t12471*t579 + t679 + t802)*var2[0] - 0.5*(t12478*t5640 + t12471*t5661 + t8865 + t8881)*var2[1] - 0.5*(t10008 + t12478*t5060 + t12471*t5269 + t9981)*var2[2] - 0.5*(t10387 + t10389 + t12478*t8422 + t12471*t8820)*var2[3] - 0.5*(t10885 + t10887 + t12478*t7032 + t12471*t7442)*var2[4] - 0.5*(t11132 + t11135 + t12471*t3550 + t12478*t3678)*var2[5] - 0.5*(t11810 + t11819 + t12471*t2164 + 0.035165*t12478*t286)*var2[15])*var2[16];
  p_output1[17]=(-0.5*t630*var2[0] - 0.5*t8857*var2[1] - 0.5*t9968*var2[2] - 0.5*t10382*var2[3] - 0.5*t10882*var2[4] - 0.5*t11130*var2[5] - 0.5*t11804*var2[15])*var2[16];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec17_plane.hh"

namespace SymFunction
{

void Ce2_vec17_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
