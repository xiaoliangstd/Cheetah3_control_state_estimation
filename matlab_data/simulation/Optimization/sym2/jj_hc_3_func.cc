/*
 * Automatically Generated from Mathematica.
 * Sat 7 Dec 2019 21:23:14 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t119;
  double t92;
  double t132;
  double t140;
  double t339;
  double t402;
  double t421;
  double t424;
  double t442;
  double t602;
  double t657;
  double t713;
  double t720;
  double t721;
  double t1070;
  double t11;
  double t991;
  double t1085;
  double t1768;
  double t1769;
  double t1773;
  double t1600;
  double t1625;
  double t1683;
  double t1929;
  double t2044;
  double t2051;
  double t1738;
  double t1795;
  double t1877;
  double t2454;
  double t2467;
  double t2468;
  double t2543;
  double t2433;
  double t2560;
  double t2563;
  double t2615;
  double t2435;
  double t2548;
  double t2549;
  double t2802;
  double t2806;
  double t2807;
  double t2799;
  double t2922;
  double t2928;
  double t2939;
  double t3043;
  double t3073;
  double t3074;
  double t2919;
  double t2941;
  double t3011;
  double t3168;
  double t3182;
  double t3183;
  double t3213;
  double t3223;
  double t3237;
  double t3143;
  double t3163;
  double t3166;
  double t3280;
  double t3281;
  double t3291;
  double t3167;
  double t3240;
  double t3247;
  double t1011;
  double t1100;
  double t1106;
  double t1114;
  double t1121;
  double t1211;
  double t1305;
  double t1348;
  double t1520;
  double t3348;
  double t3390;
  double t3394;
  double t3432;
  double t3646;
  double t3647;
  double t3660;
  double t3762;
  double t3763;
  double t3770;
  double t3905;
  double t3908;
  double t3913;
  double t1916;
  double t2114;
  double t2117;
  double t2178;
  double t2197;
  double t2206;
  double t2340;
  double t2341;
  double t2404;
  double t3497;
  double t3498;
  double t3511;
  double t3547;
  double t3572;
  double t3573;
  double t3613;
  double t3614;
  double t3615;
  double t3617;
  double t3618;
  double t3632;
  double t3971;
  double t3979;
  double t3981;
  double t4009;
  double t4010;
  double t4014;
  double t4043;
  double t4046;
  double t4054;
  double t4103;
  double t4104;
  double t4107;
  double t4115;
  double t4116;
  double t4120;
  double t4124;
  double t4128;
  double t4129;
  double t4205;
  double t4206;
  double t4207;
  double t4218;
  double t4222;
  double t4231;
  double t4238;
  double t4239;
  double t4240;
  double t2557;
  double t2637;
  double t2679;
  double t2701;
  double t2708;
  double t2709;
  double t2774;
  double t2790;
  double t2794;
  double t3339;
  double t3345;
  double t3349;
  double t3396;
  double t3406;
  double t3428;
  double t3431;
  double t3434;
  double t3451;
  double t3458;
  double t3460;
  double t4310;
  double t4311;
  double t4312;
  double t4073;
  double t4085;
  double t4086;
  double t4087;
  double t4089;
  double t4093;
  double t4095;
  double t4096;
  double t4097;
  double t4098;
  double t4099;
  double t4355;
  double t4357;
  double t4360;
  double t4396;
  double t4397;
  double t4398;
  double t3273;
  double t3297;
  double t3299;
  double t3301;
  double t3303;
  double t3304;
  double t3305;
  double t3308;
  double t3311;
  double t3878;
  double t3879;
  double t3885;
  double t3889;
  double t3928;
  double t3936;
  double t3937;
  double t3938;
  double t3939;
  double t3940;
  double t3941;
  double t3945;
  double t3946;
  double t3952;
  double t3953;
  double t4361;
  double t4365;
  double t4367;
  double t4368;
  double t4371;
  double t4372;
  double t4373;
  double t4375;
  double t4377;
  double t4383;
  double t4385;
  double t4209;
  double t4210;
  double t4236;
  double t4241;
  double t4243;
  double t4244;
  double t4248;
  double t4262;
  double t4269;
  double t4278;
  double t4279;
  double t4289;
  double t4290;
  double t4110;
  double t4457;
  double t4458;
  double t4461;
  double t4473;
  double t4474;
  double t4465;
  double t4468;
  double t4449;
  double t4534;
  double t4537;
  double t4540;
  double t4562;
  double t4563;
  double t4564;
  double t4543;
  double t4545;
  double t4558;
  double t3017;
  double t3078;
  double t3092;
  double t3093;
  double t3105;
  double t3112;
  double t3117;
  double t3125;
  double t3128;
  double t3775;
  double t3777;
  double t3787;
  double t3799;
  double t3828;
  double t3829;
  double t3833;
  double t3837;
  double t3839;
  double t3840;
  double t3848;
  double t3857;
  double t3858;
  double t3867;
  double t3868;
  double t4314;
  double t4316;
  double t4320;
  double t4321;
  double t4322;
  double t4324;
  double t4327;
  double t4328;
  double t4331;
  double t4332;
  double t4334;
  double t3967;
  double t3970;
  double t3997;
  double t4016;
  double t4019;
  double t4020;
  double t4024;
  double t4025;
  double t4027;
  double t4028;
  double t4033;
  double t4034;
  double t4037;
  double t4448;
  double t4452;
  double t4626;
  double t4630;
  double t4643;
  double t4644;
  double t4646;
  double t4633;
  double t4636;
  double t4637;
  double t4510;
  double t4516;
  double t4523;
  double t4526;
  double t4527;
  double t4528;
  double t4559;
  double t4567;
  double t4568;
  double t4569;
  double t4570;
  double t4571;
  double t4572;
  double t4579;
  double t4584;
  double t4586;
  double t4587;
  double t4688;
  double t4689;
  double t4690;
  double t4738;
  double t4749;
  double t4750;
  double t4759;
  double t4760;
  double t4761;
  double t4754;
  double t4755;
  double t4756;
  double t4788;
  double t4794;
  double t4795;
  double t4796;
  double t4787;
  double t4789;
  double t4792;
  double t4847;
  double t4865;
  double t4869;
  double t4844;
  double t4884;
  double t4885;
  double t4906;
  double t4846;
  double t4874;
  double t4875;
  double t4940;
  double t4944;
  double t4946;
  double t4936;
  double t4966;
  double t4967;
  double t4975;
  double t4979;
  double t4980;
  double t4981;
  double t4965;
  double t4976;
  double t4977;
  double t4695;
  double t4698;
  double t4699;
  double t4710;
  double t4714;
  double t4715;
  double t4721;
  double t4725;
  double t4726;
  double t5064;
  double t5066;
  double t5071;
  double t5110;
  double t5114;
  double t5115;
  double t4758;
  double t4762;
  double t4763;
  double t4765;
  double t4766;
  double t4767;
  double t4769;
  double t4775;
  double t4776;
  double t5043;
  double t5044;
  double t5045;
  double t5050;
  double t5053;
  double t5054;
  double t5055;
  double t5057;
  double t5058;
  double t5059;
  double t5060;
  double t5062;
  double t5203;
  double t5204;
  double t5208;
  double t5215;
  double t5216;
  double t5219;
  double t5298;
  double t5303;
  double t5304;
  double t5339;
  double t5340;
  double t5334;
  double t5337;
  double t4978;
  double t4982;
  double t4983;
  double t4984;
  double t4985;
  double t4986;
  double t4989;
  double t4994;
  double t4996;
  double t5119;
  double t5120;
  double t5121;
  double t5122;
  double t5123;
  double t5124;
  double t5125;
  double t5126;
  double t5127;
  double t5128;
  double t5129;
  double t5134;
  double t5137;
  double t5138;
  double t5388;
  double t5391;
  double t5194;
  double t5197;
  double t5214;
  double t5221;
  double t5224;
  double t5240;
  double t5246;
  double t5247;
  double t5248;
  double t5250;
  double t5251;
  double t5252;
  double t5253;
  double t5470;
  double t5474;
  double t5480;
  double t5481;
  double t5482;
  double t5475;
  double t5476;
  double t5477;
  double t4793;
  double t4798;
  double t4799;
  double t4802;
  double t4809;
  double t4810;
  double t4813;
  double t4826;
  double t4828;
  double t5143;
  double t5147;
  double t5150;
  double t5151;
  double t5152;
  double t5153;
  double t5154;
  double t5155;
  double t5159;
  double t5160;
  double t5171;
  double t5515;
  double t5516;
  double t5518;
  double t5260;
  double t5265;
  double t5267;
  double t5268;
  double t5269;
  double t5272;
  double t5273;
  double t5274;
  double t5279;
  double t5280;
  double t5281;
  double t5284;
  double t5420;
  double t5423;
  double t5428;
  double t5434;
  double t5436;
  double t5437;
  double t5438;
  double t5440;
  double t5442;
  double t5443;
  double t5444;
  double t5445;
  double t5447;
  double t5448;
  double t5453;
  double t5461;
  double t5325;
  double t5464;
  double t4880;
  double t4909;
  double t4913;
  double t4914;
  double t4923;
  double t4927;
  double t4928;
  double t4929;
  double t4933;
  double t5007;
  double t5008;
  double t5010;
  double t5018;
  double t5019;
  double t5021;
  double t5025;
  double t5026;
  double t5027;
  double t5035;
  double t5041;
  double t5393;
  double t5395;
  double t5396;
  double t5397;
  double t5400;
  double t5401;
  double t5404;
  double t5405;
  double t5407;
  double t5409;
  double t5410;
  double t5519;
  double t5520;
  double t5521;
  double t5522;
  double t5523;
  double t5524;
  double t5525;
  double t5526;
  double t5527;
  double t5528;
  double t5530;
  double t5294;
  double t5305;
  double t5306;
  double t5307;
  double t5309;
  double t5311;
  double t5316;
  double t5317;
  double t5321;
  double t5322;
  double t5323;
  double t5596;
  double t5597;
  double t5598;
  double t5622;
  double t5623;
  double t5627;
  double t5646;
  double t5647;
  double t5648;
  double t5642;
  double t5643;
  double t5644;
  double t5663;
  double t5664;
  double t5665;
  double t5669;
  double t5670;
  double t5674;
  double t5662;
  double t5666;
  double t5667;
  double t5692;
  double t5693;
  double t5696;
  double t5689;
  double t5690;
  double t5702;
  double t5703;
  double t5704;
  double t5691;
  double t5699;
  double t5700;
  double t5717;
  double t5719;
  double t5722;
  double t5714;
  double t5628;
  double t5629;
  double t5630;
  double t5631;
  double t5632;
  double t5633;
  double t5634;
  double t5637;
  double t5638;
  double t5771;
  double t5772;
  double t5773;
  double t5792;
  double t5794;
  double t5795;
  double t5645;
  double t5649;
  double t5650;
  double t5652;
  double t5653;
  double t5655;
  double t5658;
  double t5659;
  double t5660;
  double t5750;
  double t5751;
  double t5753;
  double t5754;
  double t5755;
  double t5756;
  double t5757;
  double t5758;
  double t5759;
  double t5760;
  double t5761;
  double t5762;
  double t5816;
  double t5821;
  double t5822;
  double t5846;
  double t5847;
  double t5848;
  double t5841;
  double t5842;
  double t5843;
  double t5865;
  double t5866;
  double t5869;
  double t5871;
  double t5872;
  double t5873;
  double t5701;
  double t5705;
  double t5706;
  double t5707;
  double t5708;
  double t5709;
  double t5710;
  double t5711;
  double t5712;
  double t5736;
  double t5739;
  double t5740;
  double t5741;
  double t5742;
  double t5743;
  double t5744;
  double t5745;
  double t5746;
  double t5747;
  double t5748;
  double t5815;
  double t5824;
  double t5825;
  double t5826;
  double t5827;
  double t5828;
  double t5829;
  double t5830;
  double t5833;
  double t5834;
  double t5837;
  double t5895;
  double t5896;
  double t5897;
  double t5916;
  double t5917;
  double t5918;
  double t5668;
  double t5678;
  double t5679;
  double t5680;
  double t5683;
  double t5684;
  double t5685;
  double t5686;
  double t5687;
  double t5788;
  double t5789;
  double t5790;
  double t5791;
  double t5796;
  double t5797;
  double t5801;
  double t5802;
  double t5803;
  double t5804;
  double t5805;
  double t5806;
  double t5807;
  double t5808;
  double t5809;
  double t5901;
  double t5902;
  double t5903;
  double t5906;
  double t5907;
  double t5908;
  double t5909;
  double t5910;
  double t5911;
  double t5912;
  double t5913;
  double t5860;
  double t5864;
  double t5870;
  double t5874;
  double t5875;
  double t5876;
  double t5877;
  double t5878;
  double t5879;
  double t5880;
  double t5881;
  double t5884;
  double t5885;
  double t5839;
  double t5765;
  double t5947;
  double t5948;
  double t5954;
  double t5955;
  double t5951;
  double t5952;
  t119 = Cos(var1[5]);
  t92 = Cos(var1[4]);
  t132 = Cos(var1[6]);
  t140 = t92*t119*t132;
  t339 = Sin(var1[3]);
  t402 = Sin(var1[4]);
  t421 = t119*t339*t402;
  t424 = Cos(var1[3]);
  t442 = Sin(var1[5]);
  t602 = -1.*t424*t442;
  t657 = t421 + t602;
  t713 = Sin(var1[6]);
  t720 = -1.*t657*t713;
  t721 = t140 + t720;
  t1070 = Cos(var1[7]);
  t11 = Cos(var1[8]);
  t991 = Sin(var1[7]);
  t1085 = Sin(var1[8]);
  t1768 = t424*t119*t402;
  t1769 = t339*t442;
  t1773 = t1768 + t1769;
  t1600 = -1.*t119*t339*t402;
  t1625 = t424*t442;
  t1683 = t1600 + t1625;
  t1929 = t132*t1070*t1773;
  t2044 = t1683*t991;
  t2051 = t1929 + t2044;
  t1738 = t1070*t1683;
  t1795 = -1.*t132*t1773*t991;
  t1877 = t1738 + t1795;
  t2454 = t132*t657;
  t2467 = 0. + t713;
  t2468 = t92*t119*t2467;
  t2543 = 0. + t2454 + t2468;
  t2433 = 0. + t1768 + t1769;
  t2560 = -1.*t1070*t2543;
  t2563 = -1.*t2433*t991;
  t2615 = t2560 + t2563;
  t2435 = t1070*t2433;
  t2548 = -1.*t2543*t991;
  t2549 = t2435 + t2548;
  t2802 = t1070*t2543;
  t2806 = t2433*t991;
  t2807 = 0. + t2802 + t2806;
  t2799 = 0. + t2435 + t2548;
  t2922 = t92*t119*t132*t339;
  t2928 = -1.*t119*t402*t2467;
  t2939 = t2922 + t2928;
  t3043 = t1070*t2939;
  t3073 = t424*t92*t119*t991;
  t3074 = t3043 + t3073;
  t2919 = t424*t92*t119*t1070;
  t2941 = -1.*t2939*t991;
  t3011 = t2919 + t2941;
  t3168 = -1.*t424*t119;
  t3182 = -1.*t339*t402*t442;
  t3183 = t3168 + t3182;
  t3213 = t132*t3183;
  t3223 = -1.*t92*t442*t2467;
  t3237 = t3213 + t3223;
  t3143 = t119*t339;
  t3163 = -1.*t424*t402*t442;
  t3166 = t3143 + t3163;
  t3280 = t1070*t3237;
  t3281 = t3166*t991;
  t3291 = t3280 + t3281;
  t3167 = t1070*t3166;
  t3240 = -1.*t3237*t991;
  t3247 = t3167 + t3240;
  t1011 = -1.*t11*t721*t991;
  t1100 = -1.*t1070*t721*t1085;
  t1106 = t1011 + t1100;
  t1114 = -0.16*t1106;
  t1121 = -1.*t1070*t11*t721;
  t1211 = t721*t991*t1085;
  t1305 = t1121 + t1211;
  t1348 = -0.02*t1305;
  t1520 = t1114 + t1348;
  t3348 = 0. + t11;
  t3390 = -1.*t1085;
  t3394 = 0. + t3390;
  t3432 = 0. + t1085;
  t3646 = -1.*t132*t657;
  t3647 = -1.*t92*t119*t713;
  t3660 = t3646 + t3647;
  t3762 = -1.*t119*t132*t402;
  t3763 = -1.*t92*t119*t339*t713;
  t3770 = t3762 + t3763;
  t3905 = -1.*t92*t132*t442;
  t3908 = -1.*t3183*t713;
  t3913 = t3905 + t3908;
  t1916 = t11*t1877;
  t2114 = -1.*t2051*t1085;
  t2117 = t1916 + t2114;
  t2178 = -0.16*t2117;
  t2197 = -1.*t11*t2051;
  t2206 = -1.*t1877*t1085;
  t2340 = t2197 + t2206;
  t2341 = -0.02*t2340;
  t2404 = t2178 + t2341;
  t3497 = 0.0329*t132*t1773;
  t3498 = 0.2083*t1070*t1773*t713;
  t3511 = -0.1422*t1773*t713*t991;
  t3547 = t3348*t1773*t713*t991;
  t3572 = -1.*t1070*t1773*t713*t3394;
  t3573 = t3547 + t3572;
  t3613 = -0.02*t3573;
  t3614 = -1.*t1070*t3348*t1773*t713;
  t3615 = t1773*t713*t991*t3432;
  t3617 = t3614 + t3615;
  t3618 = -0.16*t3617;
  t3632 = t3497 + t3498 + t3511 + t3613 + t3618;
  t3971 = -1.*t92*t119*t1070*t339;
  t3979 = -1.*t424*t92*t119*t132*t991;
  t3981 = t3971 + t3979;
  t4009 = t424*t92*t119*t132*t1070;
  t4010 = -1.*t92*t119*t339*t991;
  t4014 = t4009 + t4010;
  t4043 = -1.*t132*t1070*t1773;
  t4046 = -1.*t1683*t991;
  t4054 = t4043 + t4046;
  t4103 = -1.*t424*t119*t402;
  t4104 = -1.*t339*t442;
  t4107 = t4103 + t4104;
  t4115 = t1070*t4107;
  t4116 = -1.*t132*t1683*t991;
  t4120 = t4115 + t4116;
  t4124 = t132*t1070*t1683;
  t4128 = t4107*t991;
  t4129 = t4124 + t4128;
  t4205 = t424*t119;
  t4206 = t339*t402*t442;
  t4207 = t4205 + t4206;
  t4218 = t1070*t4207;
  t4222 = -1.*t132*t3166*t991;
  t4231 = t4218 + t4222;
  t4238 = t132*t1070*t3166;
  t4239 = t4207*t991;
  t4240 = t4238 + t4239;
  t2557 = -1.*t11*t2549;
  t2637 = -1.*t2615*t1085;
  t2679 = t2557 + t2637;
  t2701 = -0.02*t2679;
  t2708 = t11*t2615;
  t2709 = -1.*t2549*t1085;
  t2774 = t2708 + t2709;
  t2790 = -0.16*t2774;
  t2794 = t2701 + t2790;
  t3339 = 0.1422*t1070*t721;
  t3345 = 0.2083*t721*t991;
  t3349 = -1.*t1070*t3348*t721;
  t3396 = -1.*t721*t991*t3394;
  t3406 = t3349 + t3396;
  t3428 = -0.02*t3406;
  t3431 = -1.*t3348*t721*t991;
  t3434 = -1.*t1070*t721*t3432;
  t3451 = t3431 + t3434;
  t3458 = -0.16*t3451;
  t3460 = t3339 + t3345 + t3428 + t3458;
  t4310 = -1.*t1070*t2939;
  t4311 = -1.*t424*t92*t119*t991;
  t4312 = t4310 + t4311;
  t4073 = -0.1422*t4054;
  t4085 = -0.2083*t1877;
  t4086 = t3348*t4054;
  t4087 = t1877*t3394;
  t4089 = t4086 + t4087;
  t4093 = -0.02*t4089;
  t4095 = t3348*t1877;
  t4096 = t4054*t3432;
  t4097 = t4095 + t4096;
  t4098 = -0.16*t4097;
  t4099 = t4073 + t4085 + t4093 + t4098;
  t4355 = -1.*t1070*t3237;
  t4357 = -1.*t3166*t991;
  t4360 = t4355 + t4357;
  t4396 = -1.*t1070*t2433;
  t4397 = t2543*t991;
  t4398 = t4396 + t4397;
  t3273 = t11*t3247;
  t3297 = -1.*t3291*t1085;
  t3299 = t3273 + t3297;
  t3301 = -0.16*t3299;
  t3303 = -1.*t11*t3291;
  t3304 = -1.*t3247*t1085;
  t3305 = t3303 + t3304;
  t3308 = -0.02*t3305;
  t3311 = t3301 + t3308;
  t3878 = -1.*t132*t3183;
  t3879 = t92*t442*t713;
  t3885 = t3878 + t3879;
  t3889 = -0.0329*t3885;
  t3928 = -0.2083*t1070*t3913;
  t3936 = 0.1422*t3913*t991;
  t3937 = -1.*t3348*t3913*t991;
  t3938 = t1070*t3913*t3394;
  t3939 = t3937 + t3938;
  t3940 = -0.02*t3939;
  t3941 = t1070*t3348*t3913;
  t3945 = -1.*t3913*t991*t3432;
  t3946 = t3941 + t3945;
  t3952 = -0.16*t3946;
  t3953 = t3889 + t3928 + t3936 + t3940 + t3952;
  t4361 = -0.1422*t4360;
  t4365 = -0.2083*t3247;
  t4367 = t3348*t4360;
  t4368 = t3247*t3394;
  t4371 = t4367 + t4368;
  t4372 = -0.02*t4371;
  t4373 = t3348*t3247;
  t4375 = t4360*t3432;
  t4377 = t4373 + t4375;
  t4383 = -0.16*t4377;
  t4385 = t4361 + t4365 + t4372 + t4383;
  t4209 = 0.2429*t4207;
  t4210 = 0.0329*t3166*t713;
  t4236 = -0.1422*t4231;
  t4241 = -0.2083*t4240;
  t4243 = t3348*t4231;
  t4244 = t4240*t3394;
  t4248 = t4243 + t4244;
  t4262 = -0.02*t4248;
  t4269 = t3348*t4240;
  t4278 = t4231*t3432;
  t4279 = t4269 + t4278;
  t4289 = -0.16*t4279;
  t4290 = t4209 + t4210 + t4236 + t4241 + t4262 + t4289;
  t4110 = 0.2429*t4107;
  t4457 = t132*t1683;
  t4458 = -1.*t92*t119*t2467;
  t4461 = t4457 + t4458;
  t4473 = -1.*t4461*t991;
  t4474 = t4115 + t4473;
  t4465 = t1070*t4461;
  t4468 = t4465 + t4128;
  t4449 = 0. + t132;
  t4534 = -1.*t92*t132*t339*t442;
  t4537 = t402*t442*t2467;
  t4540 = t4534 + t4537;
  t4562 = -1.*t424*t92*t1070*t442;
  t4563 = -1.*t4540*t991;
  t4564 = t4562 + t4563;
  t4543 = t1070*t4540;
  t4545 = -1.*t424*t92*t442*t991;
  t4558 = t4543 + t4545;
  t3017 = t11*t3011;
  t3078 = -1.*t3074*t1085;
  t3092 = t3017 + t3078;
  t3093 = -0.16*t3092;
  t3105 = -1.*t11*t3074;
  t3112 = -1.*t3011*t1085;
  t3117 = t3105 + t3112;
  t3125 = -0.02*t3117;
  t3128 = t3093 + t3125;
  t3775 = -0.2083*t1070*t3770;
  t3777 = -1.*t92*t119*t132*t339;
  t3787 = t119*t402*t713;
  t3799 = t3777 + t3787;
  t3828 = -0.0329*t3799;
  t3829 = 0.1422*t3770*t991;
  t3833 = -1.*t3348*t3770*t991;
  t3837 = t1070*t3770*t3394;
  t3839 = t3833 + t3837;
  t3840 = -0.02*t3839;
  t3848 = t1070*t3348*t3770;
  t3857 = -1.*t3770*t991*t3432;
  t3858 = t3848 + t3857;
  t3867 = -0.16*t3858;
  t3868 = t3775 + t3828 + t3829 + t3840 + t3867;
  t4314 = -0.1422*t4312;
  t4316 = -0.2083*t3011;
  t4320 = t3348*t4312;
  t4321 = t3011*t3394;
  t4322 = t4320 + t4321;
  t4324 = -0.02*t4322;
  t4327 = t3348*t3011;
  t4328 = t4312*t3432;
  t4331 = t4327 + t4328;
  t4332 = -0.16*t4331;
  t4334 = t4314 + t4316 + t4324 + t4332;
  t3967 = -0.2429*t92*t119*t339;
  t3970 = 0.0329*t424*t92*t119*t713;
  t3997 = -0.1422*t3981;
  t4016 = -0.2083*t4014;
  t4019 = t3348*t3981;
  t4020 = t4014*t3394;
  t4024 = t4019 + t4020;
  t4025 = -0.02*t4024;
  t4027 = t3348*t4014;
  t4028 = t3981*t3432;
  t4033 = t4027 + t4028;
  t4034 = -0.16*t4033;
  t4037 = t3967 + t3970 + t3997 + t4016 + t4025 + t4034;
  t4448 = 0.0817*t92*t119;
  t4452 = -1.*t92*t119*t4449;
  t4626 = -1.*t119*t132*t339*t402;
  t4630 = t4626 + t4458;
  t4643 = -1.*t424*t119*t1070*t402;
  t4644 = -1.*t4630*t991;
  t4646 = t4643 + t4644;
  t4633 = t1070*t4630;
  t4636 = -1.*t424*t119*t402*t991;
  t4637 = t4633 + t4636;
  t4510 = -0.2429*t424*t92*t442;
  t4516 = -0.0817*t402*t442;
  t4523 = t4449*t402*t442;
  t4526 = t92*t339*t442*t713;
  t4527 = t4523 + t4526;
  t4528 = -0.0329*t4527;
  t4559 = -0.2083*t4558;
  t4567 = -0.1422*t4564;
  t4568 = t3348*t4564;
  t4569 = t4558*t3394;
  t4570 = t4568 + t4569;
  t4571 = -0.02*t4570;
  t4572 = t3348*t4558;
  t4579 = t4564*t3432;
  t4584 = t4572 + t4579;
  t4586 = -0.16*t4584;
  t4587 = t4510 + t4516 + t4528 + t4559 + t4567 + t4571 + t4586;
  t4688 = t92*t132*t442;
  t4689 = -1.*t4207*t713;
  t4690 = t4688 + t4689;
  t4738 = -1.*t119*t339;
  t4749 = t424*t402*t442;
  t4750 = t4738 + t4749;
  t4759 = t1070*t3183;
  t4760 = -1.*t132*t4750*t991;
  t4761 = t4759 + t4760;
  t4754 = t132*t1070*t4750;
  t4755 = t3183*t991;
  t4756 = t4754 + t4755;
  t4788 = t2454 + t2468;
  t4794 = t1070*t4788;
  t4795 = t1773*t991;
  t4796 = t4794 + t4795;
  t4787 = t1070*t1773;
  t4789 = -1.*t4788*t991;
  t4792 = t4787 + t4789;
  t4847 = t132*t4207;
  t4865 = t92*t442*t2467;
  t4869 = 0. + t4847 + t4865;
  t4844 = 0. + t4738 + t4749;
  t4884 = -1.*t1070*t4869;
  t4885 = -1.*t4844*t991;
  t4906 = t4884 + t4885;
  t4846 = t1070*t4844;
  t4874 = -1.*t4869*t991;
  t4875 = t4846 + t4874;
  t4940 = t1070*t4869;
  t4944 = t4844*t991;
  t4946 = 0. + t4940 + t4944;
  t4936 = 0. + t4846 + t4874;
  t4966 = t92*t132*t339*t442;
  t4967 = -1.*t402*t442*t2467;
  t4975 = t4966 + t4967;
  t4979 = t1070*t4975;
  t4980 = t424*t92*t442*t991;
  t4981 = t4979 + t4980;
  t4965 = t424*t92*t1070*t442;
  t4976 = -1.*t4975*t991;
  t4977 = t4965 + t4976;
  t4695 = -1.*t11*t4690*t991;
  t4698 = -1.*t1070*t4690*t1085;
  t4699 = t4695 + t4698;
  t4710 = -0.16*t4699;
  t4714 = -1.*t1070*t11*t4690;
  t4715 = t4690*t991*t1085;
  t4721 = t4714 + t4715;
  t4725 = -0.02*t4721;
  t4726 = t4710 + t4725;
  t5064 = -1.*t132*t4207;
  t5066 = -1.*t92*t442*t713;
  t5071 = t5064 + t5066;
  t5110 = -1.*t132*t402*t442;
  t5114 = -1.*t92*t339*t442*t713;
  t5115 = t5110 + t5114;
  t4758 = -1.*t11*t4756;
  t4762 = -1.*t4761*t1085;
  t4763 = t4758 + t4762;
  t4765 = -0.02*t4763;
  t4766 = t11*t4761;
  t4767 = -1.*t4756*t1085;
  t4769 = t4766 + t4767;
  t4775 = -0.16*t4769;
  t4776 = t4765 + t4775;
  t5043 = 0.0329*t132*t4750;
  t5044 = 0.2083*t1070*t4750*t713;
  t5045 = -0.1422*t4750*t713*t991;
  t5050 = t3348*t4750*t713*t991;
  t5053 = -1.*t1070*t4750*t713*t3394;
  t5054 = t5050 + t5053;
  t5055 = -0.02*t5054;
  t5057 = -1.*t1070*t3348*t4750*t713;
  t5058 = t4750*t713*t991*t3432;
  t5059 = t5057 + t5058;
  t5060 = -0.16*t5059;
  t5062 = t5043 + t5044 + t5045 + t5055 + t5060;
  t5203 = -1.*t92*t1070*t339*t442;
  t5204 = -1.*t424*t92*t132*t442*t991;
  t5208 = t5203 + t5204;
  t5215 = t424*t92*t132*t1070*t442;
  t5216 = -1.*t92*t339*t442*t991;
  t5219 = t5215 + t5216;
  t5298 = -1.*t132*t1070*t4750;
  t5303 = -1.*t3183*t991;
  t5304 = t5298 + t5303;
  t5339 = -1.*t132*t3183*t991;
  t5340 = t3167 + t5339;
  t5334 = t132*t1070*t3183;
  t5337 = t5334 + t3281;
  t4978 = t11*t4977;
  t4982 = -1.*t4981*t1085;
  t4983 = t4978 + t4982;
  t4984 = -0.16*t4983;
  t4985 = -1.*t11*t4981;
  t4986 = -1.*t4977*t1085;
  t4989 = t4985 + t4986;
  t4994 = -0.02*t4989;
  t4996 = t4984 + t4994;
  t5119 = -0.2083*t1070*t5115;
  t5120 = t402*t442*t713;
  t5121 = t4534 + t5120;
  t5122 = -0.0329*t5121;
  t5123 = 0.1422*t5115*t991;
  t5124 = -1.*t3348*t5115*t991;
  t5125 = t1070*t5115*t3394;
  t5126 = t5124 + t5125;
  t5127 = -0.02*t5126;
  t5128 = t1070*t3348*t5115;
  t5129 = -1.*t5115*t991*t3432;
  t5134 = t5128 + t5129;
  t5137 = -0.16*t5134;
  t5138 = t5119 + t5122 + t5123 + t5127 + t5137;
  t5388 = -1.*t1070*t4975;
  t5391 = t5388 + t4545;
  t5194 = -0.2429*t92*t339*t442;
  t5197 = 0.0329*t424*t92*t442*t713;
  t5214 = -0.1422*t5208;
  t5221 = -0.2083*t5219;
  t5224 = t3348*t5208;
  t5240 = t5219*t3394;
  t5246 = t5224 + t5240;
  t5247 = -0.02*t5246;
  t5248 = t3348*t5219;
  t5250 = t5208*t3432;
  t5251 = t5248 + t5250;
  t5252 = -0.16*t5251;
  t5253 = t5194 + t5197 + t5214 + t5221 + t5247 + t5252;
  t5470 = -1.*t132*t339*t402*t442;
  t5474 = t5470 + t3223;
  t5480 = -1.*t424*t1070*t402*t442;
  t5481 = -1.*t5474*t991;
  t5482 = t5480 + t5481;
  t5475 = t1070*t5474;
  t5476 = -1.*t424*t402*t442*t991;
  t5477 = t5475 + t5476;
  t4793 = t11*t4792;
  t4798 = -1.*t4796*t1085;
  t4799 = t4793 + t4798;
  t4802 = -0.16*t4799;
  t4809 = -1.*t11*t4796;
  t4810 = -1.*t4792*t1085;
  t4813 = t4809 + t4810;
  t4826 = -0.02*t4813;
  t4828 = t4802 + t4826;
  t5143 = -0.0329*t3660;
  t5147 = -0.2083*t1070*t721;
  t5150 = 0.1422*t721*t991;
  t5151 = t1070*t721*t3394;
  t5152 = t3431 + t5151;
  t5153 = -0.02*t5152;
  t5154 = t1070*t3348*t721;
  t5155 = -1.*t721*t991*t3432;
  t5159 = t5154 + t5155;
  t5160 = -0.16*t5159;
  t5171 = t5143 + t5147 + t5150 + t5153 + t5160;
  t5515 = -1.*t1070*t4788;
  t5516 = -1.*t1773*t991;
  t5518 = t5515 + t5516;
  t5260 = 0.2429*t1683;
  t5265 = 0.0329*t1773*t713;
  t5267 = -0.2083*t2051;
  t5268 = -0.1422*t1877;
  t5269 = t2051*t3394;
  t5272 = t4095 + t5269;
  t5273 = -0.02*t5272;
  t5274 = t3348*t2051;
  t5279 = t1877*t3432;
  t5280 = t5274 + t5279;
  t5281 = -0.16*t5280;
  t5284 = t5260 + t5265 + t5267 + t5268 + t5273 + t5281;
  t5420 = 0.2429*t424*t92*t119;
  t5423 = 0.0817*t119*t402;
  t5428 = -1.*t119*t4449*t402;
  t5434 = t5428 + t3763;
  t5436 = -0.0329*t5434;
  t5437 = -0.2083*t3074;
  t5438 = -0.1422*t3011;
  t5440 = t3074*t3394;
  t5442 = t4327 + t5440;
  t5443 = -0.02*t5442;
  t5444 = t3348*t3074;
  t5445 = t3011*t3432;
  t5447 = t5444 + t5445;
  t5448 = -0.16*t5447;
  t5453 = t5420 + t5423 + t5436 + t5437 + t5438 + t5443 + t5448;
  t5461 = 0.0817*t92*t442;
  t5325 = 0.2429*t3166;
  t5464 = -1.*t92*t4449*t442;
  t4880 = -1.*t11*t4875;
  t4909 = -1.*t4906*t1085;
  t4913 = t4880 + t4909;
  t4914 = -0.02*t4913;
  t4923 = t11*t4906;
  t4927 = -1.*t4875*t1085;
  t4928 = t4923 + t4927;
  t4929 = -0.16*t4928;
  t4933 = t4914 + t4929;
  t5007 = 0.1422*t1070*t4690;
  t5008 = 0.2083*t4690*t991;
  t5010 = -1.*t1070*t3348*t4690;
  t5018 = -1.*t4690*t991*t3394;
  t5019 = t5010 + t5018;
  t5021 = -0.02*t5019;
  t5025 = -1.*t3348*t4690*t991;
  t5026 = -1.*t1070*t4690*t3432;
  t5027 = t5025 + t5026;
  t5035 = -0.16*t5027;
  t5041 = t5007 + t5008 + t5021 + t5035;
  t5393 = -0.1422*t5391;
  t5395 = -0.2083*t4977;
  t5396 = t3348*t5391;
  t5397 = t4977*t3394;
  t5400 = t5396 + t5397;
  t5401 = -0.02*t5400;
  t5404 = t3348*t4977;
  t5405 = t5391*t3432;
  t5407 = t5404 + t5405;
  t5409 = -0.16*t5407;
  t5410 = t5393 + t5395 + t5401 + t5409;
  t5519 = -0.1422*t5518;
  t5520 = -0.2083*t4792;
  t5521 = t3348*t5518;
  t5522 = t4792*t3394;
  t5523 = t5521 + t5522;
  t5524 = -0.02*t5523;
  t5525 = t3348*t4792;
  t5526 = t5518*t3432;
  t5527 = t5525 + t5526;
  t5528 = -0.16*t5527;
  t5530 = t5519 + t5520 + t5524 + t5528;
  t5294 = -0.2083*t4761;
  t5305 = -0.1422*t5304;
  t5306 = t3348*t5304;
  t5307 = t4761*t3394;
  t5309 = t5306 + t5307;
  t5311 = -0.02*t5309;
  t5316 = t3348*t4761;
  t5317 = t5304*t3432;
  t5321 = t5316 + t5317;
  t5322 = -0.16*t5321;
  t5323 = t5294 + t5305 + t5311 + t5322;
  t5596 = -1.*t1070*t4844;
  t5597 = t4869*t991;
  t5598 = t5596 + t5597;
  t5622 = -1.*t132*t402;
  t5623 = -1.*t92*t339*t713;
  t5627 = t5622 + t5623;
  t5646 = -1.*t92*t1070*t339;
  t5647 = -1.*t424*t92*t132*t991;
  t5648 = t5646 + t5647;
  t5642 = t424*t92*t132*t1070;
  t5643 = -1.*t92*t339*t991;
  t5644 = t5642 + t5643;
  t5663 = -1.*t132*t339*t402;
  t5664 = -1.*t92*t2467;
  t5665 = t5663 + t5664;
  t5669 = t1070*t5665;
  t5670 = -1.*t424*t402*t991;
  t5674 = t5669 + t5670;
  t5662 = -1.*t424*t1070*t402;
  t5666 = -1.*t5665*t991;
  t5667 = t5662 + t5666;
  t5692 = t92*t132*t339;
  t5693 = -1.*t402*t2467;
  t5696 = 0. + t5692 + t5693;
  t5689 = t424*t92;
  t5690 = 0. + t5689;
  t5702 = -1.*t1070*t5696;
  t5703 = -1.*t5690*t991;
  t5704 = t5702 + t5703;
  t5691 = t5690*t1070;
  t5699 = -1.*t5696*t991;
  t5700 = t5691 + t5699;
  t5717 = t1070*t5696;
  t5719 = t5690*t991;
  t5722 = 0. + t5717 + t5719;
  t5714 = 0. + t5691 + t5699;
  t5628 = -1.*t11*t5627*t991;
  t5629 = -1.*t1070*t5627*t1085;
  t5630 = t5628 + t5629;
  t5631 = -0.16*t5630;
  t5632 = -1.*t1070*t11*t5627;
  t5633 = t5627*t991*t1085;
  t5634 = t5632 + t5633;
  t5637 = -0.02*t5634;
  t5638 = t5631 + t5637;
  t5771 = -1.*t92*t132*t339;
  t5772 = t402*t713;
  t5773 = t5771 + t5772;
  t5792 = -1.*t92*t132;
  t5794 = t339*t402*t713;
  t5795 = t5792 + t5794;
  t5645 = -1.*t11*t5644;
  t5649 = -1.*t5648*t1085;
  t5650 = t5645 + t5649;
  t5652 = -0.02*t5650;
  t5653 = t11*t5648;
  t5655 = -1.*t5644*t1085;
  t5658 = t5653 + t5655;
  t5659 = -0.16*t5658;
  t5660 = t5652 + t5659;
  t5750 = 0.0329*t424*t92*t132;
  t5751 = 0.2083*t424*t92*t1070*t713;
  t5753 = -0.1422*t424*t92*t713*t991;
  t5754 = t424*t92*t3348*t713*t991;
  t5755 = -1.*t424*t92*t1070*t713*t3394;
  t5756 = t5754 + t5755;
  t5757 = -0.02*t5756;
  t5758 = -1.*t424*t92*t1070*t3348*t713;
  t5759 = t424*t92*t713*t991*t3432;
  t5760 = t5758 + t5759;
  t5761 = -0.16*t5760;
  t5762 = t5750 + t5751 + t5753 + t5757 + t5761;
  t5816 = -1.*t424*t92*t132*t1070;
  t5821 = t92*t339*t991;
  t5822 = t5816 + t5821;
  t5846 = -1.*t424*t92*t1070;
  t5847 = t92*t132*t339*t991;
  t5848 = t5846 + t5847;
  t5841 = -1.*t92*t132*t1070*t339;
  t5842 = -1.*t424*t92*t991;
  t5843 = t5841 + t5842;
  t5865 = t1070*t339*t402;
  t5866 = t424*t132*t402*t991;
  t5869 = t5865 + t5866;
  t5871 = -1.*t424*t132*t1070*t402;
  t5872 = t339*t402*t991;
  t5873 = t5871 + t5872;
  t5701 = -1.*t11*t5700;
  t5705 = -1.*t5704*t1085;
  t5706 = t5701 + t5705;
  t5707 = -0.02*t5706;
  t5708 = t11*t5704;
  t5709 = -1.*t5700*t1085;
  t5710 = t5708 + t5709;
  t5711 = -0.16*t5710;
  t5712 = t5707 + t5711;
  t5736 = 0.1422*t1070*t5627;
  t5739 = 0.2083*t5627*t991;
  t5740 = -1.*t1070*t3348*t5627;
  t5741 = -1.*t5627*t991*t3394;
  t5742 = t5740 + t5741;
  t5743 = -0.02*t5742;
  t5744 = -1.*t3348*t5627*t991;
  t5745 = -1.*t1070*t5627*t3432;
  t5746 = t5744 + t5745;
  t5747 = -0.16*t5746;
  t5748 = t5736 + t5739 + t5743 + t5747;
  t5815 = -0.2083*t5648;
  t5824 = -0.1422*t5822;
  t5825 = t3348*t5822;
  t5826 = t5648*t3394;
  t5827 = t5825 + t5826;
  t5828 = -0.02*t5827;
  t5829 = t3348*t5648;
  t5830 = t5822*t3432;
  t5833 = t5829 + t5830;
  t5834 = -0.16*t5833;
  t5837 = t5815 + t5824 + t5828 + t5834;
  t5895 = -1.*t1070*t5665;
  t5896 = t424*t402*t991;
  t5897 = t5895 + t5896;
  t5916 = -1.*t5690*t1070;
  t5917 = t5696*t991;
  t5918 = t5916 + t5917;
  t5668 = t11*t5667;
  t5678 = -1.*t5674*t1085;
  t5679 = t5668 + t5678;
  t5680 = -0.16*t5679;
  t5683 = -1.*t11*t5674;
  t5684 = -1.*t5667*t1085;
  t5685 = t5683 + t5684;
  t5686 = -0.02*t5685;
  t5687 = t5680 + t5686;
  t5788 = t132*t339*t402;
  t5789 = t92*t713;
  t5790 = t5788 + t5789;
  t5791 = -0.0329*t5790;
  t5796 = -0.2083*t1070*t5795;
  t5797 = 0.1422*t5795*t991;
  t5801 = -1.*t3348*t5795*t991;
  t5802 = t1070*t5795*t3394;
  t5803 = t5801 + t5802;
  t5804 = -0.02*t5803;
  t5805 = t1070*t3348*t5795;
  t5806 = -1.*t5795*t991*t3432;
  t5807 = t5805 + t5806;
  t5808 = -0.16*t5807;
  t5809 = t5791 + t5796 + t5797 + t5804 + t5808;
  t5901 = -0.1422*t5897;
  t5902 = -0.2083*t5667;
  t5903 = t3348*t5897;
  t5906 = t5667*t3394;
  t5907 = t5903 + t5906;
  t5908 = -0.02*t5907;
  t5909 = t3348*t5667;
  t5910 = t5897*t3432;
  t5911 = t5909 + t5910;
  t5912 = -0.16*t5911;
  t5913 = t5901 + t5902 + t5908 + t5912;
  t5860 = 0.2429*t339*t402;
  t5864 = -0.0329*t424*t402*t713;
  t5870 = -0.1422*t5869;
  t5874 = -0.2083*t5873;
  t5875 = t3348*t5869;
  t5876 = t5873*t3394;
  t5877 = t5875 + t5876;
  t5878 = -0.02*t5877;
  t5879 = t3348*t5873;
  t5880 = t5869*t3432;
  t5881 = t5879 + t5880;
  t5884 = -0.16*t5881;
  t5885 = t5860 + t5864 + t5870 + t5874 + t5878 + t5884;
  t5839 = -0.2429*t424*t92;
  t5765 = t92*t339*t713;
  t5947 = t402*t2467;
  t5948 = t5771 + t5947;
  t5954 = -1.*t5948*t991;
  t5955 = t5846 + t5954;
  t5951 = t1070*t5948;
  t5952 = t5951 + t5842;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=var2[6]*(t3632*var2[3] + t3868*var2[4] + t3953*var2[5] + (-0.2083*t1070*t3660 - 0.0329*(t657*t713 - 1.*t119*t132*t92) + 0.1422*t3660*t991 - 0.02*(t1070*t3394*t3660 - 1.*t3348*t3660*t991) - 0.16*(t1070*t3348*t3660 - 1.*t3432*t3660*t991))*var2[6] + t3460*var2[7] + t1520*var2[8]) + var2[3]*((t4110 - 0.1422*t4120 - 0.2083*t4129 - 0.16*(t3432*t4120 + t3348*t4129) - 0.02*(t3348*t4120 + t3394*t4129) + 0.0329*t1683*t713)*var2[3] + t4037*var2[4] + t4290*var2[5] + t3632*var2[6] + t4099*var2[7] + t2404*var2[8]) + var2[7]*(t4099*var2[3] + t4334*var2[4] + t4385*var2[5] + t3460*var2[6] + (-0.2083*t2615 - 0.1422*t4398 - 0.02*(t2615*t3394 + t3348*t4398) - 0.16*(t2615*t3348 + t3432*t4398))*var2[7] + t2794*var2[8]) + var2[8]*(t2404*var2[3] + t3128*var2[4] + t3311*var2[5] + t1520*var2[6] + t2794*var2[7] + (-0.02*(-1.*t11*t2799 + t1085*t2807) - 0.16*(-1.*t1085*t2799 - 1.*t11*t2807))*var2[8]) + var2[4]*(t4037*var2[3] + (-0.2429*t119*t402*t424 + t4448 - 0.2083*t4637 - 0.1422*t4646 - 0.02*(t3394*t4637 + t3348*t4646) - 0.16*(t3348*t4637 + t3432*t4646) - 0.0329*(t4452 + t119*t339*t402*t713))*var2[4] + t4587*var2[5] + t3868*var2[6] + t4334*var2[7] + t3128*var2[8]) + var2[5]*(t4290*var2[3] + t4587*var2[4] + (t4110 + t4448 - 0.2083*t4468 - 0.1422*t4474 - 0.02*(t3394*t4468 + t3348*t4474) - 0.16*(t3348*t4468 + t3432*t4474) - 0.0329*(t4452 - 1.*t1683*t713))*var2[5] + t3953*var2[6] + t4385*var2[7] + t3311*var2[8]);
  p_output1[7]=var2[6]*(t5062*var2[3] + t5138*var2[4] + t5171*var2[5] + (-0.2083*t1070*t5071 - 0.0329*(t3905 + t4207*t713) + 0.1422*t5071*t991 - 0.02*(t1070*t3394*t5071 - 1.*t3348*t5071*t991) - 0.16*(t1070*t3348*t5071 - 1.*t3432*t5071*t991))*var2[6] + t5041*var2[7] + t4726*var2[8]) + var2[3]*((t5325 - 0.2083*t5337 - 0.1422*t5340 - 0.02*(t3394*t5337 + t3348*t5340) - 0.16*(t3348*t5337 + t3432*t5340) + 0.0329*t3183*t713)*var2[3] + t5253*var2[4] + t5284*var2[5] + t5062*var2[6] + t5323*var2[7] + t4776*var2[8]) + var2[5]*(t5284*var2[3] + t5453*var2[4] + (-0.1422*t3247 - 0.2083*t3291 - 0.16*(t3291*t3348 + t3247*t3432) - 0.02*(t3291*t3394 + t4373) + t5325 + t5461 - 0.0329*(t3908 + t5464))*var2[5] + t5171*var2[6] + t5530*var2[7] + t4828*var2[8]) + var2[7]*(t5323*var2[3] + t5410*var2[4] + t5530*var2[5] + t5041*var2[6] + (-0.2083*t4906 - 0.1422*t5598 - 0.02*(t3394*t4906 + t3348*t5598) - 0.16*(t3348*t4906 + t3432*t5598))*var2[7] + t4933*var2[8]) + var2[8]*(t4776*var2[3] + t4996*var2[4] + t4828*var2[5] + t4726*var2[6] + t4933*var2[7] + (-0.02*(-1.*t11*t4936 + t1085*t4946) - 0.16*(-1.*t1085*t4936 - 1.*t11*t4946))*var2[8]) + var2[4]*(t5253*var2[3] + (-0.2429*t402*t424*t442 + t5461 - 0.2083*t5477 - 0.1422*t5482 - 0.02*(t3394*t5477 + t3348*t5482) - 0.16*(t3348*t5477 + t3432*t5482) - 0.0329*(t5464 + t339*t402*t442*t713))*var2[4] + t5453*var2[5] + t5138*var2[6] + t5410*var2[7] + t4996*var2[8]);
  p_output1[8]=var2[6]*(t5762*var2[3] + t5809*var2[4] + (-0.0329*(t132*t402 + t5765) - 0.2083*t1070*t5773 + 0.1422*t5773*t991 - 0.02*(t1070*t3394*t5773 - 1.*t3348*t5773*t991) - 0.16*(t1070*t3348*t5773 - 1.*t3432*t5773*t991))*var2[6] + t5748*var2[7] + t5638*var2[8]) + var2[3]*((t5839 - 0.2083*t5843 - 0.1422*t5848 - 0.02*(t3394*t5843 + t3348*t5848) - 0.16*(t3348*t5843 + t3432*t5848) - 0.0329*t339*t713*t92)*var2[3] + t5885*var2[4] + t5762*var2[6] + t5837*var2[7] + t5660*var2[8]) + var2[4]*(t5885*var2[3] + (-0.0817*t402 - 0.0329*(t402*t4449 + t5765) + t5839 - 0.2083*t5952 - 0.1422*t5955 - 0.02*(t3394*t5952 + t3348*t5955) - 0.16*(t3348*t5952 + t3432*t5955))*var2[4] + t5809*var2[6] + t5913*var2[7] + t5687*var2[8]) + var2[7]*(t5837*var2[3] + t5913*var2[4] + t5748*var2[6] + (-0.2083*t5704 - 0.1422*t5918 - 0.02*(t3394*t5704 + t3348*t5918) - 0.16*(t3348*t5704 + t3432*t5918))*var2[7] + t5712*var2[8]) + var2[8]*(t5660*var2[3] + t5687*var2[4] + t5638*var2[6] + t5712*var2[7] + (-0.02*(-1.*t11*t5714 + t1085*t5722) - 0.16*(-1.*t1085*t5714 - 1.*t11*t5722))*var2[8]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "jj_hc_3_func.hh"

namespace SymFunction
{

void jj_hc_3_func_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
