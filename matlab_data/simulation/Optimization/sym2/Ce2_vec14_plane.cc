/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:52:58 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t174;
  double t529;
  double t130;
  double t585;
  double t1336;
  double t1360;
  double t1692;
  double t652;
  double t853;
  double t882;
  double t1125;
  double t1902;
  double t2795;
  double t2797;
  double t2902;
  double t2128;
  double t6236;
  double t6403;
  double t221;
  double t606;
  double t615;
  double t773;
  double t1876;
  double t2182;
  double t2186;
  double t2395;
  double t2443;
  double t6724;
  double t6757;
  double t6908;
  double t6991;
  double t6487;
  double t6528;
  double t6591;
  double t6679;
  double t2765;
  double t3134;
  double t3164;
  double t3286;
  double t3406;
  double t3524;
  double t9350;
  double t8463;
  double t8706;
  double t8924;
  double t9022;
  double t9058;
  double t9077;
  double t10044;
  double t10075;
  double t10212;
  double t9175;
  double t9500;
  double t3983;
  double t4174;
  double t4484;
  double t4735;
  double t4761;
  double t4880;
  double t12402;
  double t12353;
  double t12368;
  double t12373;
  double t12394;
  double t12310;
  double t12323;
  double t12330;
  double t12232;
  double t12246;
  double t12248;
  double t12279;
  double t12556;
  double t12560;
  double t12565;
  double t12587;
  double t12600;
  double t12543;
  double t10684;
  double t12940;
  double t12948;
  double t12951;
  double t12953;
  double t12954;
  double t12957;
  double t12960;
  double t12962;
  double t12964;
  double t9104;
  double t10912;
  double t12991;
  double t12994;
  double t13011;
  double t13022;
  double t11518;
  double t11870;
  double t11877;
  double t11946;
  double t12024;
  double t12105;
  double t12107;
  double t12109;
  double t12151;
  double t12631;
  double t12834;
  double t12838;
  double t12825;
  double t12830;
  double t12680;
  double t12682;
  double t13125;
  double t13126;
  double t13133;
  double t13143;
  double t13151;
  double t13152;
  double t13157;
  double t12333;
  double t12891;
  double t12895;
  double t12873;
  double t12875;
  double t12549;
  double t12551;
  double t12729;
  double t12744;
  double t12751;
  double t12769;
  double t12770;
  double t12772;
  double t12774;
  double t12778;
  double t13096;
  double t13104;
  double t13107;
  double t4954;
  double t4983;
  double t5204;
  double t5514;
  double t5621;
  double t5656;
  double t13077;
  double t13082;
  double t13083;
  double t13306;
  double t13315;
  double t13325;
  double t12822;
  double t12831;
  double t12850;
  double t12851;
  double t12858;
  double t12862;
  double t13247;
  double t13252;
  double t13261;
  double t12869;
  double t12889;
  double t12901;
  double t12908;
  double t12912;
  double t12915;
  double t13439;
  double t13455;
  double t13519;
  double t13530;
  double t13531;
  double t13538;
  double t13541;
  double t13544;
  double t13549;
  double t13552;
  double t13556;
  double t13441;
  double t13443;
  double t13445;
  double t13456;
  double t13457;
  double t13459;
  double t13478;
  double t13483;
  double t13487;
  double t13499;
  double t13501;
  double t13502;
  double t13803;
  double t13810;
  double t13812;
  double t13580;
  double t13581;
  double t13613;
  double t13631;
  double t13633;
  double t13636;
  double t13648;
  double t13650;
  double t13653;
  double t13657;
  double t13658;
  double t13668;
  double t13686;
  double t13687;
  double t13692;
  double t13694;
  double t13706;
  double t13707;
  double t13719;
  double t13723;
  double t13734;
  double t13741;
  double t13743;
  double t13752;
  double t13911;
  double t13913;
  double t13915;
  double t13892;
  double t13900;
  double t13902;
  double t13920;
  double t13921;
  double t13922;
  double t13904;
  double t13929;
  double t13930;
  double t14003;
  double t14004;
  double t14007;
  double t14014;
  double t14015;
  double t14018;
  double t13961;
  double t13962;
  double t13964;
  double t10208;
  double t13932;
  double t13969;
  double t13981;
  double t14053;
  double t14057;
  double t13049;
  double t14192;
  double t14193;
  double t14195;
  double t14175;
  double t14178;
  double t14179;
  double t14201;
  double t14202;
  double t14203;
  double t14188;
  double t14205;
  double t14206;
  double t14259;
  double t14261;
  double t14262;
  double t14266;
  double t14274;
  double t14278;
  double t14323;
  double t14325;
  double t14327;
  double t13941;
  double t14544;
  double t14545;
  double t14558;
  double t14583;
  double t14585;
  double t14586;
  double t14580;
  double t14587;
  double t14588;
  double t14019;
  double t14052;
  double t14680;
  double t14692;
  double t14694;
  double t14700;
  double t14703;
  double t14704;
  double t14651;
  double t14655;
  double t14659;
  double t14077;
  double t14086;
  double t14089;
  double t14105;
  double t14129;
  double t14662;
  double t14666;
  double t14736;
  double t14739;
  double t14137;
  double t14144;
  double t14225;
  double t14929;
  double t14932;
  double t14939;
  double t14946;
  double t14948;
  double t14951;
  double t14940;
  double t14941;
  double t14945;
  double t14955;
  double t14956;
  double t14282;
  double t14297;
  double t14309;
  double t15013;
  double t15017;
  double t15019;
  double t15021;
  double t15023;
  double t15024;
  double t14343;
  double t14381;
  double t14404;
  double t14406;
  double t14418;
  double t14426;
  double t14437;
  double t15053;
  double t15054;
  double t15055;
  double t14468;
  double t14499;
  double t14501;
  double t13823;
  double t13831;
  double t13833;
  double t13835;
  double t13836;
  double t13839;
  double t13785;
  double t13786;
  double t13787;
  double t6211;
  double t6681;
  double t7065;
  double t7344;
  double t7645;
  double t7923;
  double t7932;
  double t7935;
  double t9610;
  double t9847;
  double t9937;
  double t10338;
  double t10405;
  double t11185;
  double t11249;
  double t11356;
  double t11497;
  double t11506;
  double t11514;
  double t13778;
  double t13780;
  double t13782;
  double t12403;
  double t12415;
  double t12425;
  double t12427;
  double t12591;
  double t12598;
  double t12599;
  double t12609;
  double t12655;
  double t12657;
  double t12681;
  double t12683;
  double t12686;
  double t12714;
  double t12717;
  double t12780;
  double t12782;
  double t12793;
  double t12803;
  double t12808;
  double t12818;
  double t12819;
  double t12821;
  double t13845;
  double t13854;
  double t13870;
  double t13879;
  double t13882;
  double t13883;
  double t12952;
  double t12967;
  double t12968;
  double t12969;
  double t12998;
  double t13007;
  double t13017;
  double t13029;
  double t13034;
  double t13037;
  double t13040;
  double t13044;
  double t13056;
  double t13059;
  double t13064;
  double t13066;
  double t13072;
  double t15203;
  double t15204;
  double t15205;
  double t13135;
  double t13158;
  double t13162;
  double t13166;
  double t13168;
  double t13178;
  double t13180;
  double t13184;
  double t13185;
  double t13190;
  double t13198;
  double t13199;
  double t13205;
  double t13206;
  double t13214;
  double t13217;
  double t13218;
  double t13224;
  double t13226;
  double t13228;
  double t13232;
  double t15209;
  double t15210;
  double t15211;
  double t13272;
  double t13287;
  double t13329;
  double t13334;
  double t13342;
  double t13343;
  double t13346;
  double t13360;
  double t13368;
  double t13378;
  double t13384;
  double t13391;
  double t13392;
  double t13394;
  double t13396;
  double t13398;
  double t13784;
  double t13801;
  double t13814;
  double t13821;
  double t13834;
  double t13840;
  double t13878;
  double t13887;
  double t13889;
  double t13446;
  double t13460;
  double t13461;
  double t13488;
  double t13508;
  double t13514;
  double t13693;
  double t13711;
  double t13714;
  double t13655;
  double t13671;
  double t13681;
  double t13739;
  double t13756;
  double t13757;
  double t13614;
  double t13640;
  double t13641;
  double t13931;
  double t13937;
  double t13942;
  double t13944;
  double t13947;
  double t13965;
  double t13985;
  double t13992;
  double t13993;
  double t13996;
  double t14009;
  double t14022;
  double t14028;
  double t14039;
  double t14041;
  double t14064;
  double t14065;
  double t14067;
  double t14074;
  double t14075;
  double t14081;
  double t14084;
  double t14085;
  double t14087;
  double t14090;
  double t14094;
  double t14095;
  double t14102;
  double t14118;
  double t14121;
  double t14124;
  double t14130;
  double t14132;
  double t14133;
  double t14135;
  double t14136;
  double t14143;
  double t14151;
  double t14155;
  double t14160;
  double t14208;
  double t14211;
  double t14214;
  double t14230;
  double t14231;
  double t14234;
  double t14258;
  double t14264;
  double t14284;
  double t14285;
  double t14291;
  double t14292;
  double t14296;
  double t14304;
  double t14313;
  double t14314;
  double t14317;
  double t14332;
  double t14337;
  double t14341;
  double t14349;
  double t14355;
  double t14358;
  double t14369;
  double t14394;
  double t14396;
  double t14397;
  double t14405;
  double t14410;
  double t14413;
  double t14416;
  double t14419;
  double t14423;
  double t14424;
  double t14436;
  double t14445;
  double t14447;
  double t14450;
  double t14453;
  double t14459;
  double t14472;
  double t14475;
  double t14477;
  double t14478;
  double t14487;
  double t14500;
  double t14502;
  double t14505;
  double t14514;
  double t14589;
  double t14590;
  double t14592;
  double t14593;
  double t14612;
  double t14625;
  double t14660;
  double t14669;
  double t14673;
  double t14675;
  double t14677;
  double t14695;
  double t14707;
  double t14711;
  double t14712;
  double t14730;
  double t14731;
  double t14746;
  double t14747;
  double t14749;
  double t14759;
  double t14761;
  double t14763;
  double t14765;
  double t14768;
  double t14769;
  double t14772;
  double t14774;
  double t14776;
  double t14784;
  double t14803;
  double t14817;
  double t14840;
  double t14841;
  double t14865;
  double t14872;
  double t14873;
  double t14875;
  double t14877;
  double t14879;
  double t14883;
  double t14884;
  double t14885;
  double t14889;
  double t14895;
  double t14896;
  double t14897;
  double t14900;
  double t14908;
  double t14964;
  double t14966;
  double t14977;
  double t14999;
  double t15003;
  double t15004;
  double t15008;
  double t15020;
  double t15025;
  double t15026;
  double t15027;
  double t15028;
  double t15029;
  double t15035;
  double t15037;
  double t15040;
  double t15042;
  double t15044;
  double t15058;
  double t15060;
  double t15068;
  double t15081;
  double t15082;
  double t15088;
  double t15091;
  double t15095;
  double t15098;
  double t15100;
  double t15101;
  double t15106;
  double t15107;
  double t15108;
  double t15112;
  double t15113;
  double t15117;
  double t15119;
  double t15122;
  double t15129;
  double t15134;
  double t15136;
  double t15137;
  double t15138;
  double t15140;
  double t15141;
  double t15145;
  double t15153;
  double t15154;
  double t15155;
  double t15156;
  double t15165;
  double t15166;
  double t15167;
  double t15168;
  double t15169;
  double t15170;
  double t15173;
  double t15174;
  double t15496;
  double t15505;
  double t15506;
  double t15523;
  double t15531;
  double t15532;
  double t13466;
  double t13515;
  double t13557;
  double t13577;
  double t13647;
  double t13685;
  double t13715;
  double t13774;
  double t13775;
  double t15266;
  double t15270;
  double t15271;
  double t15272;
  double t15274;
  double t15282;
  double t15284;
  double t15285;
  double t15288;
  double t15687;
  double t15689;
  double t15692;
  double t15717;
  double t15719;
  double t15723;
  double t14636;
  double t14676;
  double t14751;
  double t14819;
  double t14927;
  double t15006;
  double t15045;
  double t15089;
  double t15146;
  double t15176;
  double t15177;
  double t15634;
  double t15639;
  double t15641;
  double t15642;
  double t15643;
  double t15646;
  double t15647;
  double t15649;
  double t15651;
  double t15652;
  double t15653;
  double t15403;
  double t15411;
  double t15418;
  double t15423;
  double t15424;
  double t15441;
  double t15444;
  double t15445;
  double t15447;
  double t15448;
  double t15449;
  double t15797;
  double t15798;
  double t15800;
  double t15707;
  double t15710;
  double t15711;
  double t15814;
  double t15815;
  double t15816;
  double t15730;
  double t15731;
  double t15734;
  double t15757;
  double t15758;
  double t15760;
  double t15771;
  double t15774;
  double t15775;
  double t13955;
  double t13995;
  double t14072;
  double t14101;
  double t14172;
  double t14237;
  double t14319;
  double t14368;
  double t14452;
  double t14523;
  double t14535;
  double t15582;
  double t15583;
  double t15584;
  double t15587;
  double t15589;
  double t15590;
  double t15603;
  double t15611;
  double t15615;
  double t15617;
  double t15620;
  double t15333;
  double t15334;
  double t15337;
  double t15339;
  double t15341;
  double t15343;
  double t15344;
  double t15348;
  double t15349;
  double t15351;
  double t15373;
  double t15787;
  double t15789;
  double t15791;
  double t15792;
  double t15793;
  double t15801;
  double t15802;
  double t15803;
  double t15808;
  double t15809;
  double t15818;
  double t15819;
  double t15820;
  double t15963;
  double t15965;
  double t15968;
  double t15972;
  double t15977;
  double t15984;
  double t13074;
  double t13090;
  double t13116;
  double t13239;
  double t13242;
  double t13243;
  double t13379;
  double t13400;
  double t15551;
  double t15552;
  double t15553;
  double t15556;
  double t15558;
  double t15563;
  double t15566;
  double t15567;
  double t15226;
  double t15227;
  double t15228;
  double t15230;
  double t15234;
  double t15236;
  double t15257;
  double t15258;
  double t15862;
  double t15871;
  double t15876;
  double t15882;
  double t15886;
  double t15891;
  double t15894;
  double t15902;
  double t15905;
  double t15745;
  double t15750;
  double t15752;
  double t15753;
  double t15754;
  double t15762;
  double t15763;
  double t15765;
  double t15770;
  double t15955;
  double t15956;
  double t15957;
  double t15959;
  double t16079;
  double t16080;
  double t16082;
  double t16084;
  double t16091;
  double t16093;
  double t11884;
  double t12191;
  double t12192;
  double t12779;
  double t12867;
  double t12921;
  double t15507;
  double t15513;
  double t15521;
  double t15535;
  double t15544;
  double t15546;
  double t15206;
  double t15207;
  double t15208;
  double t15212;
  double t15216;
  double t15222;
  double t15846;
  double t15847;
  double t15848;
  double t15849;
  double t15850;
  double t15852;
  double t15853;
  double t15855;
  double t15856;
  double t15681;
  double t15686;
  double t15699;
  double t15700;
  double t15704;
  double t15712;
  double t15713;
  double t15726;
  double t15729;
  double t16063;
  double t16064;
  double t15941;
  double t15942;
  double t16147;
  double t16148;
  double t16150;
  double t16151;
  double t4890;
  double t6126;
  double t15468;
  double t15474;
  double t15195;
  double t15196;
  double t15837;
  double t15839;
  double t15672;
  double t15673;
  double t15937;
  double t15938;
  double t15939;
  double t16056;
  double t2451;
  double t3619;
  double t3622;
  double t15463;
  double t15465;
  double t15466;
  double t15187;
  double t15188;
  double t15193;
  double t15832;
  double t15833;
  double t15835;
  double t15667;
  double t15668;
  double t15669;
  t174 = Cos(var1[14]);
  t529 = Sin(var1[13]);
  t130 = Cos(var1[13]);
  t585 = Sin(var1[14]);
  t1336 = -1.*t174*t529;
  t1360 = -1.*t130*t585;
  t1692 = t1336 + t1360;
  t652 = Sin(var1[4]);
  t853 = Cos(var1[4]);
  t882 = Cos(var1[5]);
  t1125 = Sin(var1[12]);
  t1902 = Cos(var1[12]);
  t2795 = -1.*t130*t174;
  t2797 = t529*t585;
  t2902 = t2795 + t2797;
  t2128 = Sin(var1[5]);
  t6236 = -1.*t174;
  t6403 = 1. + t6236;
  t221 = t130*t174;
  t606 = -1.*t529*t585;
  t615 = t221 + t606;
  t773 = t615*t652;
  t1876 = t882*t1125*t1692;
  t2182 = -1.*t1902*t1692*t2128;
  t2186 = t1876 + t2182;
  t2395 = t853*t2186;
  t2443 = t773 + t2395;
  t6724 = -0.20833*t6403;
  t6757 = -0.36833*t174;
  t6908 = 0.020000000000000018*t585;
  t6991 = 0. + t6724 + t6757 + t6908;
  t6487 = -0.336601*t6403;
  t6528 = -0.356601*t174;
  t6591 = -0.16*t585;
  t6679 = 0. + t6487 + t6528 + t6591;
  t2765 = t1692*t652;
  t3134 = t882*t1125*t2902;
  t3164 = -1.*t1902*t2902*t2128;
  t3286 = t3134 + t3164;
  t3406 = t853*t3286;
  t3524 = t2765 + t3406;
  t9350 = 0.04*t529;
  t8463 = -1.*t130;
  t8706 = 1. + t8463;
  t8924 = -0.194401*t8706;
  t9022 = -0.234401*t130;
  t9058 = -0.04*t529;
  t9077 = t8924 + t9022 + t9058;
  t10044 = -0.04*t130;
  t10075 = t10044 + t9350;
  t10212 = -1.*t9077*t529;
  t9175 = 0.04*t130;
  t9500 = t9175 + t9350;
  t3983 = -1.*t529*t652;
  t4174 = -1.*t130*t882*t1125;
  t4484 = t1902*t130*t2128;
  t4735 = t4174 + t4484;
  t4761 = t853*t4735;
  t4880 = t3983 + t4761;
  t12402 = 0. + t221 + t606;
  t12353 = -0.194401*t529;
  t12368 = -1.*t529*t6679;
  t12373 = t130*t6991;
  t12394 = 0. + t12353 + t12368 + t12373;
  t12310 = t174*t529;
  t12323 = t130*t585;
  t12330 = 0. + t12310 + t12323;
  t12232 = -0.194401*t8706;
  t12246 = t130*t6679;
  t12248 = t529*t6991;
  t12279 = 0. + t12232 + t12246 + t12248;
  t12556 = -0.194401*t130;
  t12560 = -1.*t130*t6679;
  t12565 = -1.*t529*t6991;
  t12587 = t12556 + t12560 + t12565;
  t12600 = 0. + t1336 + t1360;
  t12543 = t12353 + t12368 + t12373;
  t10684 = t130*t9077;
  t12940 = 0.053565*t1125;
  t12948 = t1902*t10075;
  t12951 = t12940 + t12948;
  t12953 = -1.*t1902;
  t12954 = 1. + t12953;
  t12957 = -0.081715*t12954;
  t12960 = -0.13528*t1902;
  t12962 = t1125*t10075;
  t12964 = t12957 + t12960 + t12962;
  t9104 = -1.*t130*t9077;
  t10912 = -1.*t10075*t529;
  t12991 = -1.*t1902*t130*t12951;
  t12994 = -1.*t130*t1125*t12964;
  t13011 = Power(t1902,2);
  t13022 = Power(t1125,2);
  t11518 = t1902*t882;
  t11870 = t1125*t2128;
  t11877 = t11518 + t11870;
  t11946 = t529*t652;
  t12024 = t130*t882*t1125;
  t12105 = -1.*t1902*t130*t2128;
  t12107 = t12024 + t12105;
  t12109 = t853*t12107;
  t12151 = t11946 + t12109;
  t12631 = t12279*t12402;
  t12834 = t1902*t12600;
  t12838 = 0. + t12834;
  t12825 = t1125*t12600;
  t12830 = 0. + t12825;
  t12680 = t12279*t1692;
  t12682 = t12543*t12402;
  t13125 = 0.032875*t1125;
  t13126 = t1902*t12394;
  t13133 = t13125 + t13126;
  t13143 = -0.081715*t12954;
  t13151 = -0.11459*t1902;
  t13152 = t1125*t12394;
  t13157 = t13143 + t13151 + t13152;
  t12333 = -1.*t12279*t12330;
  t12891 = t1902*t12402;
  t12895 = 0. + t12891;
  t12873 = t1125*t12402;
  t12875 = 0. + t12873;
  t12549 = -1.*t12543*t12330;
  t12551 = -1.*t12279*t615;
  t12729 = 0. + t1902;
  t12744 = t12729*t882;
  t12751 = -1.*t1125;
  t12769 = 0. + t12751;
  t12770 = -1.*t12769*t2128;
  t12772 = 0. + t12744 + t12770;
  t12774 = t853*t12772;
  t12778 = 0. + t12774;
  t13096 = t1125*t12951;
  t13104 = -1.*t1902*t12964;
  t13107 = t13096 + t13104;
  t4954 = t130*t652;
  t4983 = -1.*t882*t1125*t529;
  t5204 = t1902*t529*t2128;
  t5514 = t4983 + t5204;
  t5621 = t853*t5514;
  t5656 = t4954 + t5621;
  t13077 = -1.*t1125*t12951;
  t13082 = t1902*t12964;
  t13083 = t13077 + t13082;
  t13306 = -1.*t12769*t13133;
  t13315 = -1.*t12729*t13157;
  t13325 = 0. + t13306 + t13315;
  t12822 = t12402*t652;
  t12831 = t882*t12830;
  t12850 = -1.*t12838*t2128;
  t12851 = 0. + t12831 + t12850;
  t12858 = t853*t12851;
  t12862 = 0. + t12822 + t12858;
  t13247 = t12769*t13133;
  t13252 = t12729*t13157;
  t13261 = 0. + t13247 + t13252;
  t12869 = t12330*t652;
  t12889 = t882*t12875;
  t12901 = -1.*t12895*t2128;
  t12908 = 0. + t12889 + t12901;
  t12912 = t853*t12908;
  t12915 = 0. + t12869 + t12912;
  t13439 = Sin(var1[3]);
  t13455 = Cos(var1[3]);
  t13519 = -1.*t1902*t882*t529;
  t13530 = -1.*t1125*t529*t2128;
  t13531 = t13519 + t13530;
  t13538 = t13439*t13531;
  t13541 = t130*t853;
  t13544 = -1.*t652*t5514;
  t13549 = t13541 + t13544;
  t13552 = t13455*t13549;
  t13556 = t13538 + t13552;
  t13441 = t1902*t130*t882;
  t13443 = t130*t1125*t2128;
  t13445 = t13441 + t13443;
  t13456 = t853*t529;
  t13457 = -1.*t652*t12107;
  t13459 = t13456 + t13457;
  t13478 = -1.*t1902*t130*t882;
  t13483 = -1.*t130*t1125*t2128;
  t13487 = t13478 + t13483;
  t13499 = -1.*t853*t529;
  t13501 = -1.*t652*t4735;
  t13502 = t13499 + t13501;
  t13803 = t13455*t13531;
  t13810 = -1.*t13439*t13549;
  t13812 = t13803 + t13810;
  t13580 = t1902*t882*t1692;
  t13581 = t1125*t1692*t2128;
  t13613 = t13580 + t13581;
  t13631 = t853*t615;
  t13633 = -1.*t652*t2186;
  t13636 = t13631 + t13633;
  t13648 = t1902*t882*t2902;
  t13650 = t1125*t2902*t2128;
  t13653 = t13648 + t13650;
  t13657 = t853*t1692;
  t13658 = -1.*t652*t3286;
  t13668 = t13657 + t13658;
  t13686 = t882*t12838;
  t13687 = t12830*t2128;
  t13692 = 0. + t13686 + t13687;
  t13694 = t853*t12402;
  t13706 = -1.*t652*t12851;
  t13707 = 0. + t13694 + t13706;
  t13719 = t882*t12895;
  t13723 = t12875*t2128;
  t13734 = 0. + t13719 + t13723;
  t13741 = t853*t12330;
  t13743 = -1.*t652*t12908;
  t13752 = 0. + t13741 + t13743;
  t13911 = -1.*t882*t1125;
  t13913 = t1902*t2128;
  t13915 = t13911 + t13913;
  t13892 = t882*t12964;
  t13900 = -1.*t12951*t2128;
  t13902 = t13892 + t13900;
  t13920 = t882*t12951;
  t13921 = t12964*t2128;
  t13922 = t13920 + t13921;
  t13904 = -1.*t11877*t13902;
  t13929 = -1.*t13915*t13922;
  t13930 = t13904 + t13929;
  t14003 = t882*t1125*t9500;
  t14004 = -1.*t1902*t9500*t2128;
  t14007 = t14003 + t14004;
  t14014 = t1902*t882*t9500;
  t14015 = t1125*t9500*t2128;
  t14018 = t14014 + t14015;
  t13961 = t11877*t13902;
  t13962 = t13915*t13922;
  t13964 = t13961 + t13962;
  t10208 = -1.*t130*t10075;
  t13932 = t9077*t529;
  t13969 = -1.*t13902*t5514;
  t13981 = -1.*t13922*t13531;
  t14053 = t13902*t5514;
  t14057 = t13922*t13531;
  t13049 = t130*t10075;
  t14192 = t882*t12769;
  t14193 = t12729*t2128;
  t14195 = 0. + t14192 + t14193;
  t14175 = t882*t13157;
  t14178 = -1.*t13133*t2128;
  t14179 = 0. + t14175 + t14178;
  t14201 = t882*t13133;
  t14202 = t13157*t2128;
  t14203 = 0. + t14201 + t14202;
  t14188 = t12772*t14179;
  t14205 = t14195*t14203;
  t14206 = 0. + t14188 + t14205;
  t14259 = t882*t1125*t12587;
  t14261 = -1.*t1902*t12587*t2128;
  t14262 = t14259 + t14261;
  t14266 = t1902*t882*t12587;
  t14274 = t1125*t12587*t2128;
  t14278 = t14266 + t14274;
  t14323 = -1.*t12772*t14179;
  t14325 = -1.*t14195*t14203;
  t14327 = 0. + t14323 + t14325;
  t13941 = t13445*t13922;
  t14544 = t9077*t652;
  t14545 = t853*t13902;
  t14558 = t14544 + t14545;
  t14583 = t853*t9077;
  t14585 = -1.*t652*t13902;
  t14586 = t14583 + t14585;
  t14580 = -1.*t853*t11877*t14558;
  t14587 = t652*t11877*t14586;
  t14588 = t13929 + t14580 + t14587;
  t14019 = -1.*t13915*t14018;
  t14052 = t13445*t14018;
  t14680 = t10075*t652;
  t14692 = t853*t14007;
  t14694 = t14680 + t14692;
  t14700 = t853*t10075;
  t14703 = -1.*t652*t14007;
  t14704 = t14700 + t14703;
  t14651 = t853*t11877*t14558;
  t14655 = -1.*t652*t11877*t14586;
  t14659 = t13962 + t14651 + t14655;
  t14077 = t13915*t14018;
  t14086 = -1.*t13487*t13922;
  t14089 = -1.*t14018*t13531;
  t14105 = -1.*t13445*t13922;
  t14129 = -1.*t13445*t14018;
  t14662 = -1.*t14558*t5656;
  t14666 = -1.*t14586*t13549;
  t14736 = t14558*t5656;
  t14739 = t14586*t13549;
  t14137 = t13487*t13922;
  t14144 = t14018*t13531;
  t14225 = -1.*t14203*t13692;
  t14929 = t12279*t652;
  t14932 = t853*t14179;
  t14939 = 0. + t14929 + t14932;
  t14946 = t853*t12279;
  t14948 = -1.*t652*t14179;
  t14951 = 0. + t14946 + t14948;
  t14940 = t12778*t14939;
  t14941 = -1.*t652*t12772;
  t14945 = 0. + t14941;
  t14955 = t14945*t14951;
  t14956 = t14205 + t14940 + t14955;
  t14282 = t14195*t14278;
  t14297 = -1.*t14203*t13653;
  t14309 = -1.*t14278*t13692;
  t15013 = t12543*t652;
  t15017 = t853*t14262;
  t15019 = t15013 + t15017;
  t15021 = t853*t12543;
  t15023 = -1.*t652*t14262;
  t15024 = t15021 + t15023;
  t14343 = t14203*t13734;
  t14381 = t14203*t13692;
  t14404 = t14203*t13653;
  t14406 = t14278*t13692;
  t14418 = -1.*t14203*t13734;
  t14426 = -1.*t14203*t13613;
  t14437 = -1.*t14278*t13734;
  t15053 = -1.*t12778*t14939;
  t15054 = -1.*t14945*t14951;
  t15055 = t14325 + t15053 + t15054;
  t14468 = -1.*t14195*t14278;
  t14499 = t14203*t13613;
  t14501 = t14278*t13734;
  t13823 = t13455*t13613;
  t13831 = -1.*t13439*t13636;
  t13833 = t13823 + t13831;
  t13835 = t13455*t13653;
  t13836 = -1.*t13439*t13668;
  t13839 = t13835 + t13836;
  t13785 = t13455*t13487;
  t13786 = -1.*t13439*t13502;
  t13787 = t13785 + t13786;
  t6211 = -0.194401*t174;
  t6681 = -1.*t174*t6679;
  t7065 = t6991*t585;
  t7344 = 0. + t6211 + t6681 + t7065;
  t7645 = t174*t6991;
  t7923 = 0.194401*t585;
  t7932 = t6679*t585;
  t7935 = 0. + t7645 + t7923 + t7932;
  t9610 = -1.*t130*t9500;
  t9847 = t9104 + t9610;
  t9937 = -1.*t130*t9847;
  t10338 = t10208 + t10212;
  t10405 = t529*t10338;
  t11185 = t10684 + t10912;
  t11249 = -1.*t130*t11185;
  t11356 = -1.*t9500*t529;
  t11497 = t10212 + t11356;
  t11506 = -1.*t529*t11497;
  t11514 = t9937 + t10405 + t11249 + t11506;
  t13778 = t13455*t13445;
  t13780 = -1.*t13439*t13459;
  t13782 = t13778 + t13780;
  t12403 = -1.*t12394*t12402;
  t12415 = 0. + t12333 + t12403;
  t12425 = -1.*t1692*t12415;
  t12427 = -1.*t12394*t1692;
  t12591 = -1.*t12587*t12402;
  t12598 = t12427 + t12549 + t12551 + t12591;
  t12599 = -1.*t12402*t12598;
  t12609 = t12394*t12600;
  t12655 = 0. + t12609 + t12631;
  t12657 = -1.*t615*t12655;
  t12681 = t12587*t12600;
  t12683 = t12394*t2902;
  t12686 = t12680 + t12681 + t12682 + t12683;
  t12714 = -1.*t12330*t12686;
  t12717 = t12425 + t12599 + t12657 + t12714;
  t12780 = 0.032875*t12402;
  t12782 = 0. + t12780;
  t12793 = -0.081715*t12600;
  t12803 = -0.11459*t12330;
  t12808 = 0. + t12793 + t12803;
  t12818 = -0.11459*t615;
  t12819 = -0.081715*t2902;
  t12821 = t12818 + t12819;
  t13845 = t13455*t13692;
  t13854 = -1.*t13439*t13707;
  t13870 = 0. + t13845 + t13854;
  t13879 = t13455*t13734;
  t13882 = -1.*t13439*t13752;
  t13883 = 0. + t13879 + t13882;
  t12952 = -1.*t1902*t12951*t529;
  t12967 = -1.*t1125*t12964*t529;
  t12968 = t10684 + t12952 + t12967;
  t12969 = t130*t12968;
  t12998 = t12991 + t12994 + t10212;
  t13007 = -1.*t529*t12998;
  t13017 = -1.*t13011*t130*t9500;
  t13029 = -1.*t130*t13022*t9500;
  t13034 = t1902*t12951*t529;
  t13037 = t1125*t12964*t529;
  t13040 = t9104 + t13017 + t13029 + t13034 + t13037 + t10912;
  t13044 = t130*t13040;
  t13056 = -1.*t13011*t9500*t529;
  t13059 = -1.*t13022*t9500*t529;
  t13064 = t12991 + t12994 + t13049 + t10212 + t13056 + t13059;
  t13066 = t529*t13064;
  t13072 = t12969 + t13007 + t13044 + t13066;
  t15203 = t13455*t13915;
  t15204 = t13439*t652*t11877;
  t15205 = t15203 + t15204;
  t13135 = t13133*t12838;
  t13158 = t13157*t12830;
  t13162 = t12631 + t13135 + t13158;
  t13166 = t615*t13162;
  t13168 = t1902*t13133*t2902;
  t13178 = t1125*t13157*t2902;
  t13180 = t1902*t12587*t12838;
  t13184 = t1125*t12587*t12830;
  t13185 = t12680 + t12682 + t13168 + t13178 + t13180 + t13184;
  t13190 = t12330*t13185;
  t13198 = -1.*t13133*t12895;
  t13199 = -1.*t13157*t12875;
  t13205 = t12333 + t13198 + t13199;
  t13206 = t1692*t13205;
  t13214 = -1.*t1902*t13133*t1692;
  t13217 = -1.*t1125*t13157*t1692;
  t13218 = -1.*t1902*t12587*t12895;
  t13224 = -1.*t1125*t12587*t12875;
  t13226 = t13214 + t13217 + t12549 + t12551 + t13218 + t13224;
  t13228 = t12402*t13226;
  t13232 = t13166 + t13190 + t13206 + t13228;
  t15209 = t13455*t14195;
  t15210 = -1.*t13439*t14945;
  t15211 = 0. + t15209 + t15210;
  t13272 = t13261*t12402;
  t13287 = 0. + t13272;
  t13329 = t13325*t12330;
  t13334 = 0. + t13329;
  t13342 = -1.*t1902*t12769*t12587;
  t13343 = -1.*t12729*t1125*t12587;
  t13346 = t13342 + t13343;
  t13360 = t13346*t12330;
  t13368 = t13325*t615;
  t13378 = t13360 + t13368;
  t13384 = t13261*t1692;
  t13391 = t1902*t12769*t12587;
  t13392 = t12729*t1125*t12587;
  t13394 = t13391 + t13392;
  t13396 = t13394*t12402;
  t13398 = t13384 + t13396;
  t13784 = 1.527*t5656*t13782;
  t13801 = 1.527*t5656*t13787;
  t13814 = 1.527*t12151*t13812;
  t13821 = 1.527*t4880*t13812;
  t13834 = 0.241*t12915*t13833;
  t13840 = 0.241*t12862*t13839;
  t13878 = 0.241*t3524*t13870;
  t13887 = 0.241*t2443*t13883;
  t13889 = t13784 + t13801 + t13814 + t13821 + t13834 + t13840 + t13878 + t13887;
  t13446 = t13439*t13445;
  t13460 = t13455*t13459;
  t13461 = t13446 + t13460;
  t13488 = t13439*t13487;
  t13508 = t13455*t13502;
  t13514 = t13488 + t13508;
  t13693 = t13439*t13692;
  t13711 = t13455*t13707;
  t13714 = 0. + t13693 + t13711;
  t13655 = t13439*t13653;
  t13671 = t13455*t13668;
  t13681 = t13655 + t13671;
  t13739 = t13439*t13734;
  t13756 = t13455*t13752;
  t13757 = 0. + t13739 + t13756;
  t13614 = t13439*t13613;
  t13640 = t13455*t13636;
  t13641 = t13614 + t13640;
  t13931 = t13445*t13930;
  t13937 = t12107*t13902;
  t13942 = t13932 + t13937 + t13941;
  t13944 = t13915*t13942;
  t13947 = t13931 + t13944;
  t13965 = t13531*t13964;
  t13985 = t9104 + t13969 + t13981;
  t13992 = t13915*t13985;
  t13993 = t13965 + t13992;
  t13996 = t13531*t13930;
  t14009 = -1.*t11877*t14007;
  t14022 = t14009 + t14019;
  t14028 = t13445*t14022;
  t14039 = t10075*t529;
  t14041 = t12107*t14007;
  t14064 = t10684 + t14039 + t14041 + t14052 + t14053 + t14057;
  t14065 = t13915*t14064;
  t14067 = t13996 + t14028 + t14065;
  t14074 = t13487*t13964;
  t14075 = t11877*t14007;
  t14081 = t14075 + t14077;
  t14084 = t13531*t14081;
  t14085 = -1.*t4735*t13902;
  t14087 = -1.*t14007*t5514;
  t14090 = t10208 + t13932 + t14085 + t14086 + t14087 + t14089;
  t14094 = t13915*t14090;
  t14095 = t14074 + t14084 + t14094;
  t14102 = -1.*t12107*t13902;
  t14118 = t10212 + t14102 + t14105;
  t14121 = t13487*t14118;
  t14124 = -1.*t12107*t14007;
  t14130 = t9104 + t10912 + t14124 + t14129 + t13969 + t13981;
  t14132 = t13531*t14130;
  t14133 = t10684 + t14053 + t14057;
  t14135 = t13531*t14133;
  t14136 = t4735*t13902;
  t14143 = t14007*t5514;
  t14151 = t13049 + t10212 + t14136 + t14137 + t14143 + t14144;
  t14155 = t13445*t14151;
  t14160 = t14121 + t14132 + t14135 + t14155;
  t14208 = t13692*t14206;
  t14211 = -1.*t12279*t12402;
  t14214 = -1.*t14179*t12851;
  t14230 = t14211 + t14214 + t14225;
  t14231 = t14195*t14230;
  t14234 = t14208 + t14231;
  t14258 = t13653*t14206;
  t14264 = t12772*t14262;
  t14284 = t14264 + t14282;
  t14285 = t13692*t14284;
  t14291 = -1.*t12279*t1692;
  t14292 = -1.*t12543*t12402;
  t14296 = -1.*t14179*t3286;
  t14304 = -1.*t14262*t12851;
  t14313 = t14291 + t14292 + t14296 + t14297 + t14304 + t14309;
  t14314 = t14195*t14313;
  t14317 = t14258 + t14285 + t14314;
  t14332 = t13734*t14327;
  t14337 = t12279*t12330;
  t14341 = t14179*t12908;
  t14349 = t14337 + t14341 + t14343;
  t14355 = t14195*t14349;
  t14358 = t14332 + t14355;
  t14369 = t14179*t12851;
  t14394 = t12631 + t14369 + t14381;
  t14396 = t13613*t14394;
  t14397 = t14179*t3286;
  t14405 = t14262*t12851;
  t14410 = t12680 + t12682 + t14397 + t14404 + t14405 + t14406;
  t14413 = t13734*t14410;
  t14416 = -1.*t14179*t12908;
  t14419 = t12333 + t14416 + t14418;
  t14423 = t13653*t14419;
  t14424 = -1.*t14179*t2186;
  t14436 = -1.*t14262*t12908;
  t14445 = t12549 + t12551 + t14424 + t14426 + t14436 + t14437;
  t14447 = t13692*t14445;
  t14450 = t14396 + t14413 + t14423 + t14447;
  t14453 = t13613*t14327;
  t14459 = -1.*t12772*t14262;
  t14472 = t14459 + t14468;
  t14475 = t13734*t14472;
  t14477 = t12543*t12330;
  t14478 = t12279*t615;
  t14487 = t14179*t2186;
  t14500 = t14262*t12908;
  t14502 = t14477 + t14478 + t14487 + t14499 + t14500 + t14501;
  t14505 = t14195*t14502;
  t14514 = t14453 + t14475 + t14505;
  t14589 = t12151*t14588;
  t14590 = t12151*t14558;
  t14592 = t13459*t14586;
  t14593 = t13941 + t14590 + t14592;
  t14612 = t853*t11877*t14593;
  t14625 = t14589 + t14612;
  t14660 = t5656*t14659;
  t14669 = t13981 + t14662 + t14666;
  t14673 = t853*t11877*t14669;
  t14675 = t14660 + t14673;
  t14677 = t5656*t14588;
  t14695 = -1.*t853*t11877*t14694;
  t14707 = t652*t11877*t14704;
  t14711 = t14019 + t14695 + t14707;
  t14712 = t12151*t14711;
  t14730 = t12151*t14694;
  t14731 = t13459*t14704;
  t14746 = t14052 + t14057 + t14730 + t14731 + t14736 + t14739;
  t14747 = t853*t11877*t14746;
  t14749 = t14677 + t14712 + t14747;
  t14759 = t4880*t14659;
  t14761 = t853*t11877*t14694;
  t14763 = -1.*t652*t11877*t14704;
  t14765 = t14077 + t14761 + t14763;
  t14768 = t5656*t14765;
  t14769 = -1.*t4880*t14558;
  t14772 = -1.*t13502*t14586;
  t14774 = -1.*t14694*t5656;
  t14776 = -1.*t14704*t13549;
  t14784 = t14086 + t14089 + t14769 + t14772 + t14774 + t14776;
  t14803 = t853*t11877*t14784;
  t14817 = t14759 + t14768 + t14803;
  t14840 = -1.*t12151*t14558;
  t14841 = -1.*t13459*t14586;
  t14865 = t14105 + t14840 + t14841;
  t14872 = t4880*t14865;
  t14873 = -1.*t12151*t14694;
  t14875 = -1.*t13459*t14704;
  t14877 = t14129 + t13981 + t14873 + t14875 + t14662 + t14666;
  t14879 = t5656*t14877;
  t14883 = t14057 + t14736 + t14739;
  t14884 = t5656*t14883;
  t14885 = t4880*t14558;
  t14889 = t13502*t14586;
  t14895 = t14694*t5656;
  t14896 = t14704*t13549;
  t14897 = t14137 + t14144 + t14885 + t14889 + t14895 + t14896;
  t14900 = t12151*t14897;
  t14908 = t14872 + t14879 + t14884 + t14900;
  t14964 = t12862*t14956;
  t14966 = -1.*t14939*t12862;
  t14977 = -1.*t14951*t13707;
  t14999 = t14225 + t14966 + t14977;
  t15003 = t12778*t14999;
  t15004 = t14964 + t15003;
  t15008 = t3524*t14956;
  t15020 = t12778*t15019;
  t15025 = t14945*t15024;
  t15026 = t14282 + t15020 + t15025;
  t15027 = t12862*t15026;
  t15028 = -1.*t14939*t3524;
  t15029 = -1.*t14951*t13668;
  t15035 = -1.*t15019*t12862;
  t15037 = -1.*t15024*t13707;
  t15040 = t14297 + t14309 + t15028 + t15029 + t15035 + t15037;
  t15042 = t12778*t15040;
  t15044 = t15008 + t15027 + t15042;
  t15058 = t12915*t15055;
  t15060 = t14939*t12915;
  t15068 = t14951*t13752;
  t15081 = t14343 + t15060 + t15068;
  t15082 = t12778*t15081;
  t15088 = t15058 + t15082;
  t15091 = t14939*t12862;
  t15095 = t14951*t13707;
  t15098 = t14381 + t15091 + t15095;
  t15100 = t2443*t15098;
  t15101 = t14939*t3524;
  t15106 = t14951*t13668;
  t15107 = t15019*t12862;
  t15108 = t15024*t13707;
  t15112 = t14404 + t14406 + t15101 + t15106 + t15107 + t15108;
  t15113 = t12915*t15112;
  t15117 = -1.*t14939*t12915;
  t15119 = -1.*t14951*t13752;
  t15122 = t14418 + t15117 + t15119;
  t15129 = t3524*t15122;
  t15134 = -1.*t14939*t2443;
  t15136 = -1.*t14951*t13636;
  t15137 = -1.*t15019*t12915;
  t15138 = -1.*t15024*t13752;
  t15140 = t14426 + t14437 + t15134 + t15136 + t15137 + t15138;
  t15141 = t12862*t15140;
  t15145 = t15100 + t15113 + t15129 + t15141;
  t15153 = t2443*t15055;
  t15154 = -1.*t12778*t15019;
  t15155 = -1.*t14945*t15024;
  t15156 = t14468 + t15154 + t15155;
  t15165 = t12915*t15156;
  t15166 = t14939*t2443;
  t15167 = t14951*t13636;
  t15168 = t15019*t12915;
  t15169 = t15024*t13752;
  t15170 = t14499 + t14501 + t15166 + t15167 + t15168 + t15169;
  t15173 = t12778*t15170;
  t15174 = t15153 + t15165 + t15173;
  t15496 = t13439*t13915;
  t15505 = -1.*t13455*t652*t11877;
  t15506 = t15496 + t15505;
  t15523 = t13439*t14195;
  t15531 = t13455*t14945;
  t15532 = 0. + t15523 + t15531;
  t13466 = 1.527*t5656*t13461;
  t13515 = 1.527*t5656*t13514;
  t13557 = 1.527*t12151*t13556;
  t13577 = 1.527*t4880*t13556;
  t13647 = 0.241*t12915*t13641;
  t13685 = 0.241*t12862*t13681;
  t13715 = 0.241*t3524*t13714;
  t13774 = 0.241*t2443*t13757;
  t13775 = t13466 + t13515 + t13557 + t13577 + t13647 + t13685 + t13715 + t13774;
  t15266 = 1.527*t13782*t13556;
  t15270 = 1.527*t13787*t13556;
  t15271 = 1.527*t13461*t13812;
  t15272 = 1.527*t13514*t13812;
  t15274 = 0.241*t13839*t13714;
  t15282 = 0.241*t13681*t13870;
  t15284 = 0.241*t13833*t13757;
  t15285 = 0.241*t13641*t13883;
  t15288 = t15266 + t15270 + t15271 + t15272 + t15274 + t15282 + t15284 + t15285;
  t15687 = t5656*t14865;
  t15689 = t12151*t14883;
  t15692 = t15687 + t15689;
  t15717 = t12915*t15098;
  t15719 = t12862*t15122;
  t15723 = t15717 + t15719;
  t14636 = 1.527*t4880*t14625;
  t14676 = 1.527*t5656*t14675;
  t14751 = 1.527*t5656*t14749;
  t14819 = 1.527*t12151*t14817;
  t14927 = 1.527*t853*t11877*t14908;
  t15006 = 0.241*t2443*t15004;
  t15045 = 0.241*t12915*t15044;
  t15089 = 0.241*t3524*t15088;
  t15146 = 0.241*t12778*t15145;
  t15176 = 0.241*t12862*t15174;
  t15177 = t14636 + t14676 + t14751 + t14819 + t14927 + t15006 + t15045 + t15089 + t15146 + t15176;
  t15634 = 1.527*t13514*t14625;
  t15639 = 1.527*t13556*t14675;
  t15641 = 1.527*t13556*t14749;
  t15642 = 1.527*t13461*t14817;
  t15643 = 1.527*t15506*t14908;
  t15646 = 0.241*t13641*t15004;
  t15647 = 0.241*t13757*t15044;
  t15649 = 0.241*t13681*t15088;
  t15651 = 0.241*t15532*t15145;
  t15652 = 0.241*t13714*t15174;
  t15653 = t15634 + t15639 + t15641 + t15642 + t15643 + t15646 + t15647 + t15649 + t15651 + t15652;
  t15403 = 1.527*t13787*t14625;
  t15411 = 1.527*t13812*t14675;
  t15418 = 1.527*t13812*t14749;
  t15423 = 1.527*t13782*t14817;
  t15424 = 1.527*t15205*t14908;
  t15441 = 0.241*t13833*t15004;
  t15444 = 0.241*t13883*t15044;
  t15445 = 0.241*t13839*t15088;
  t15447 = 0.241*t15211*t15145;
  t15448 = 0.241*t13870*t15174;
  t15449 = t15403 + t15411 + t15418 + t15423 + t15424 + t15441 + t15444 + t15445 + t15447 + t15448;
  t15797 = t13531*t14118;
  t15798 = t13445*t14133;
  t15800 = t15797 + t15798;
  t15707 = -1.*t130*t10338;
  t15710 = -1.*t529*t11185;
  t15711 = t15707 + t15710;
  t15814 = t13734*t14394;
  t15815 = t13692*t14419;
  t15816 = 0. + t15814 + t15815;
  t15730 = -1.*t12402*t12415;
  t15731 = -1.*t12330*t12655;
  t15734 = 0. + t15730 + t15731;
  t15757 = t529*t12968;
  t15758 = t130*t12998;
  t15760 = t15757 + t15758;
  t15771 = t12330*t13162;
  t15774 = t12402*t13205;
  t15775 = 0. + t15771 + t15774;
  t13955 = 1.527*t4880*t13947;
  t13995 = 1.527*t5656*t13993;
  t14072 = 1.527*t5656*t14067;
  t14101 = 1.527*t12151*t14095;
  t14172 = 1.527*t853*t11877*t14160;
  t14237 = 0.241*t2443*t14234;
  t14319 = 0.241*t12915*t14317;
  t14368 = 0.241*t3524*t14358;
  t14452 = 0.241*t12778*t14450;
  t14523 = 0.241*t12862*t14514;
  t14535 = t13955 + t13995 + t14072 + t14101 + t14172 + t14237 + t14319 + t14368 + t14452 + t14523;
  t15582 = 1.527*t13514*t13947;
  t15583 = 1.527*t13556*t13993;
  t15584 = 1.527*t13556*t14067;
  t15587 = 1.527*t13461*t14095;
  t15589 = 1.527*t15506*t14160;
  t15590 = 0.241*t13641*t14234;
  t15603 = 0.241*t14317*t13757;
  t15611 = 0.241*t13681*t14358;
  t15615 = 0.241*t15532*t14450;
  t15617 = 0.241*t13714*t14514;
  t15620 = t15582 + t15583 + t15584 + t15587 + t15589 + t15590 + t15603 + t15611 + t15615 + t15617;
  t15333 = 1.527*t13787*t13947;
  t15334 = 1.527*t13812*t13993;
  t15337 = 1.527*t13812*t14067;
  t15339 = 1.527*t13782*t14095;
  t15341 = 1.527*t15205*t14160;
  t15343 = 0.241*t13833*t14234;
  t15344 = 0.241*t14317*t13883;
  t15348 = 0.241*t13839*t14358;
  t15349 = 0.241*t15211*t14450;
  t15351 = 0.241*t13870*t14514;
  t15373 = t15333 + t15334 + t15337 + t15339 + t15341 + t15343 + t15344 + t15348 + t15349 + t15351;
  t15787 = 1.527*t14067*t14625;
  t15789 = 1.527*t14095*t14675;
  t15791 = 1.527*t14160*t15692;
  t15792 = 1.527*t13947*t14749;
  t15793 = 1.527*t13993*t14817;
  t15801 = 1.527*t15800*t14908;
  t15802 = 0.241*t14317*t15004;
  t15803 = 0.241*t14234*t15044;
  t15808 = 0.241*t14450*t15723;
  t15809 = 0.241*t14514*t15088;
  t15818 = 0.241*t15816*t15145;
  t15819 = 0.241*t14358*t15174;
  t15820 = t15787 + t15789 + t15791 + t15792 + t15793 + t15801 + t15802 + t15803 + t15808 + t15809 + t15818 + t15819;
  t15963 = 0.241*t13334;
  t15965 = 0. + t15963;
  t15968 = 0.241*t13287;
  t15972 = 0. + t15968;
  t15977 = 0.241*t15775;
  t15984 = 0. + t15977;
  t13074 = 1.527*t853*t13072*t11877;
  t13090 = -1.527*t13083*t529*t12151;
  t13116 = 1.527*t13107*t529*t4880;
  t13239 = 0.241*t13232*t12778;
  t13242 = 1.527*t130*t13107*t5656;
  t13243 = 1.527*t130*t13083*t5656;
  t13379 = 0.241*t13378*t12862;
  t13400 = 0.241*t13398*t12915;
  t15551 = 1.527*t13072*t15506;
  t15552 = -1.527*t13083*t529*t13461;
  t15553 = 1.527*t13107*t529*t13514;
  t15556 = 0.241*t13232*t15532;
  t15558 = 1.527*t130*t13107*t13556;
  t15563 = 1.527*t130*t13083*t13556;
  t15566 = 0.241*t13378*t13714;
  t15567 = 0.241*t13398*t13757;
  t15226 = 1.527*t13072*t15205;
  t15227 = -1.527*t13083*t529*t13782;
  t15228 = 1.527*t13107*t529*t13787;
  t15230 = 0.241*t13232*t15211;
  t15234 = 1.527*t130*t13107*t13812;
  t15236 = 1.527*t130*t13083*t13812;
  t15257 = 0.241*t13378*t13870;
  t15258 = 0.241*t13398*t13883;
  t15862 = 1.527*t130*t13107*t13947;
  t15871 = -1.527*t13083*t529*t13993;
  t15876 = 1.527*t13072*t15800;
  t15882 = 1.527*t13107*t529*t14067;
  t15886 = 1.527*t130*t13083*t14095;
  t15891 = 1.527*t15760*t14160;
  t15894 = 0.241*t13398*t14234;
  t15902 = 0.241*t13232*t15816;
  t15905 = 0.241*t13378*t14358;
  t15745 = 1.527*t130*t13107*t14625;
  t15750 = -1.527*t13083*t529*t14675;
  t15752 = 1.527*t13072*t15692;
  t15753 = 1.527*t13107*t529*t14749;
  t15754 = 1.527*t130*t13083*t14817;
  t15762 = 1.527*t15760*t14908;
  t15763 = 0.241*t13398*t15004;
  t15765 = 0.241*t13232*t15723;
  t15770 = 0.241*t13378*t15088;
  t15955 = -0.16358751*t130*t13107*t529;
  t15956 = -0.16358751*t130*t13083*t529;
  t15957 = 1.527*t15760*t11514;
  t15959 = 1.527*t15711*t13072;
  t16079 = 0.241*t12808;
  t16080 = 0. + t16079;
  t16082 = 0.241*t12782;
  t16084 = 0. + t16082;
  t16091 = 0.241*t15734;
  t16093 = 0. + t16091;
  t11884 = 1.527*t853*t11514*t11877;
  t12191 = -0.081793755*t529*t12151;
  t12192 = -0.081793755*t529*t4880;
  t12779 = 0.241*t12717*t12778;
  t12867 = 0.241*t12821*t12862;
  t12921 = 0.007922875*t1692*t12915;
  t15507 = 1.527*t11514*t15506;
  t15513 = -0.081793755*t529*t13461;
  t15521 = -0.081793755*t529*t13514;
  t15535 = 0.241*t12717*t15532;
  t15544 = 0.241*t12821*t13714;
  t15546 = 0.007922875*t1692*t13757;
  t15206 = 1.527*t11514*t15205;
  t15207 = -0.081793755*t529*t13782;
  t15208 = -0.081793755*t529*t13787;
  t15212 = 0.241*t12717*t15211;
  t15216 = 0.241*t12821*t13870;
  t15222 = 0.007922875*t1692*t13883;
  t15846 = -0.081793755*t130*t13947;
  t15847 = -0.081793755*t529*t13993;
  t15848 = 1.527*t11514*t15800;
  t15849 = -0.081793755*t529*t14067;
  t15850 = 0.081793755*t130*t14095;
  t15852 = 1.527*t15711*t14160;
  t15853 = 0.007922875*t1692*t14234;
  t15855 = 0.241*t12717*t15816;
  t15856 = 0.241*t12821*t14358;
  t15681 = -0.081793755*t130*t14625;
  t15686 = -0.081793755*t529*t14675;
  t15699 = 1.527*t11514*t15692;
  t15700 = -0.081793755*t529*t14749;
  t15704 = 0.081793755*t130*t14817;
  t15712 = 1.527*t15711*t14908;
  t15713 = 0.007922875*t1692*t15004;
  t15726 = 0.241*t12717*t15723;
  t15729 = 0.241*t12821*t15088;
  t16063 = 0.0032717502*t130;
  t16064 = -0.0032717502*t529;
  t15941 = -0.06108*t130*t13107;
  t15942 = -0.06108*t13083*t529;
  t16147 = 0.241*t7935;
  t16148 = 0. + t16147;
  t16150 = 0.241*t7344;
  t16151 = 0. + t16150;
  t4890 = -0.06108*t4880;
  t6126 = 0.06108*t5656;
  t15468 = -0.06108*t13514;
  t15474 = 0.06108*t13556;
  t15195 = -0.06108*t13787;
  t15196 = 0.06108*t13812;
  t15837 = -0.06108*t14067;
  t15839 = 0.06108*t14095;
  t15672 = -0.06108*t14749;
  t15673 = 0.06108*t14817;
  t15937 = -0.03856*t13378;
  t15938 = 0.004820000000000004*t13398;
  t15939 = t15937 + t15938;
  t16056 = -0.03856*t12821;
  t2451 = 0.004820000000000004*t2443;
  t3619 = -0.03856*t3524;
  t3622 = t2451 + t3619;
  t15463 = 0.004820000000000004*t13641;
  t15465 = -0.03856*t13681;
  t15466 = t15463 + t15465;
  t15187 = 0.004820000000000004*t13833;
  t15188 = -0.03856*t13839;
  t15193 = t15187 + t15188;
  t15832 = 0.004820000000000004*t14317;
  t15833 = -0.03856*t14514;
  t15835 = t15832 + t15833;
  t15667 = 0.004820000000000004*t15044;
  t15668 = -0.03856*t15174;
  t15669 = t15667 + t15668;
  p_output1[0]=var2[13]*(-0.5*(0.482*t12915*t2443 + 0.482*t12862*t3524 + 3.054*t12151*t5656 + 3.054*t4880*t5656)*var2[0] - 0.5*t13889*var2[1] - 0.5*t13775*var2[2] - 0.5*t15177*var2[3] - 0.5*t14535*var2[4] - 0.5*(t13074 + t13090 + t13116 + t13239 + t13242 + t13243 + t13379 + t13400 + 0.241*t13287*t2443 + 0.241*t13334*t3524)*var2[5] - 0.5*(t11884 + t12191 + t12192 + t12779 + t12867 + t12921 + 0.241*t12782*t2443 + 0.241*t12808*t3524)*var2[12] - 0.5*(t4890 + t6126 + 0.241*t2443*t7344 + 0.241*t3524*t7935)*var2[13] - 0.5*t3622*var2[14]);
  p_output1[1]=var2[13]*(-0.5*t13889*var2[0] - 0.5*(3.054*t13782*t13812 + 3.054*t13787*t13812 + 0.482*t13839*t13870 + 0.482*t13833*t13883)*var2[1] - 0.5*t15288*var2[2] - 0.5*t15449*var2[3] - 0.5*t15373*var2[4] - 0.5*(0.241*t13287*t13833 + 0.241*t13334*t13839 + t15226 + t15227 + t15228 + t15230 + t15234 + t15236 + t15257 + t15258)*var2[5] - 0.5*(0.241*t12782*t13833 + 0.241*t12808*t13839 + t15206 + t15207 + t15208 + t15212 + t15216 + t15222)*var2[12] - 0.5*(t15195 + t15196 + 0.241*t13833*t7344 + 0.241*t13839*t7935)*var2[13] - 0.5*t15193*var2[14]);
  p_output1[2]=var2[13]*(-0.5*t13775*var2[0] - 0.5*t15288*var2[1] - 0.5*(3.054*t13461*t13556 + 3.054*t13514*t13556 + 0.482*t13681*t13714 + 0.482*t13641*t13757)*var2[2] - 0.5*t15653*var2[3] - 0.5*t15620*var2[4] - 0.5*(0.241*t13287*t13641 + 0.241*t13334*t13681 + t15551 + t15552 + t15553 + t15556 + t15558 + t15563 + t15566 + t15567)*var2[5] - 0.5*(0.241*t12782*t13641 + 0.241*t12808*t13681 + t15507 + t15513 + t15521 + t15535 + t15544 + t15546)*var2[12] - 0.5*(t15468 + t15474 + 0.241*t13641*t7344 + 0.241*t13681*t7935)*var2[13] - 0.5*t15466*var2[14]);
  p_output1[3]=var2[13]*(-0.5*t15177*var2[0] - 0.5*t15449*var2[1] - 0.5*t15653*var2[2] - 0.5*(3.054*t14625*t14749 + 3.054*t14675*t14817 + 0.482*t15004*t15044 + 0.482*t15088*t15174 + 3.054*t14908*t15692 + 0.482*t15145*t15723)*var2[3] - 0.5*t15820*var2[4] - 0.5*(0.241*t13287*t15044 + 0.241*t13334*t15174 + t15745 + t15750 + t15752 + t15753 + t15754 + t15762 + t15763 + t15765 + t15770 + 0.241*t15145*t15775)*var2[5] - 0.5*(0.241*t12782*t15044 + 0.241*t12808*t15174 + t15681 + t15686 + t15699 + t15700 + t15704 + t15712 + t15713 + t15726 + t15729 + 0.241*t15145*t15734)*var2[12] - 0.5*(t15672 + t15673 + 0.241*t15044*t7344 + 0.241*t15174*t7935)*var2[13] - 0.5*t15669*var2[14]);
  p_output1[4]=var2[13]*(-0.5*t14535*var2[0] - 0.5*t15373*var2[1] - 0.5*t15620*var2[2] - 0.5*t15820*var2[3] - 0.5*(3.054*t13947*t14067 + 3.054*t13993*t14095 + 0.482*t14234*t14317 + 0.482*t14358*t14514 + 3.054*t14160*t15800 + 0.482*t14450*t15816)*var2[4] - 0.5*(0.241*t13287*t14317 + 0.241*t13334*t14514 + 0.241*t14450*t15775 + t15862 + t15871 + t15876 + t15882 + t15886 + t15891 + t15894 + t15902 + t15905)*var2[5] - 0.5*(0.241*t12782*t14317 + 0.241*t12808*t14514 + 0.241*t14450*t15734 + t15846 + t15847 + t15848 + t15849 + t15850 + t15852 + t15853 + t15855 + t15856)*var2[12] - 0.5*(t15837 + t15839 + 0.241*t14317*t7344 + 0.241*t14514*t7935)*var2[13] - 0.5*t15835*var2[14]);
  p_output1[5]=var2[13]*(-0.5*(t13074 + t13090 + t13116 + t13239 + t13242 + t13243 + t13379 + t13400 + t15972*t2443 + t15965*t3524)*var2[0] - 0.5*(t15226 + t15227 + t15228 + t15230 + t15234 + t15236 + t15257 + t15258 + t13839*t15965 + t13833*t15972)*var2[1] - 0.5*(t15551 + t15552 + t15553 + t15556 + t15558 + t15563 + t15566 + t15567 + t13681*t15965 + t13641*t15972)*var2[2] - 0.5*(t15745 + t15750 + t15752 + t15753 + t15754 + t15762 + t15763 + t15765 + t15770 + t15174*t15965 + t15044*t15972 + t15145*t15984)*var2[3] - 0.5*(t15862 + t15871 + t15876 + t15882 + t15886 + t15891 + t15894 + t15902 + t15905 + t14514*t15965 + t14317*t15972 + t14450*t15984)*var2[4] - 0.5*(0.241*t13334*t13378 + 0.241*t13287*t13398 + 3.054*t13072*t15760 + 0.241*t13232*t15775 + t13378*t15965 + t13398*t15972 + t13232*t15984 - 3.054*t130*Power(t13083,2)*t529 + 3.054*t130*Power(t13107,2)*t529)*var2[5] - 0.5*(0.241*t12808*t13378 + 0.241*t12782*t13398 + 0.241*t13232*t15734 + t15955 + t15956 + t15957 + t15959 + t12821*t15965 + t12717*t15984 + 0.032875*t15972*t1692)*var2[12] - 0.5*(t15941 + t15942 + 0.241*t13398*t7344 + 0.241*t13378*t7935)*var2[13] - 0.5*t15939*var2[14]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=var2[13]*(-0.5*(t11884 + t12191 + t12192 + t12779 + t12867 + t12921 + t16084*t2443 + t16080*t3524)*var2[0] - 0.5*(t15206 + t15207 + t15208 + t15212 + t15216 + t15222 + t13839*t16080 + t13833*t16084)*var2[1] - 0.5*(t15507 + t15513 + t15521 + t15535 + t15544 + t15546 + t13681*t16080 + t13641*t16084)*var2[2] - 0.5*(t15681 + t15686 + t15699 + t15700 + t15704 + t15712 + t15713 + t15726 + t15729 + t15174*t16080 + t15044*t16084 + t15145*t16093)*var2[3] - 0.5*(t15846 + t15847 + t15848 + t15849 + t15850 + t15852 + t15853 + t15855 + t15856 + t14514*t16080 + t14317*t16084 + t14450*t16093)*var2[4] - 0.5*(0.241*t12821*t13334 + 0.241*t12717*t15775 + t15955 + t15956 + t15957 + t15959 + t13378*t16080 + t13398*t16084 + t13232*t16093 + 0.007922875*t13287*t1692)*var2[5] - 0.5*(0.241*t12808*t12821 + 3.054*t11514*t15711 + 0.241*t12717*t15734 + t12821*t16080 + t12717*t16093 + 0.007922875*t12782*t1692 + 0.032875*t16084*t1692)*var2[12] - 0.5*(t16063 + t16064 + 0.007922875*t1692*t7344 + 0.241*t12821*t7935)*var2[13] - 0.5*(t16056 + 0.00015845750000000012*t1692)*var2[14]);
  p_output1[13]=(-0.5*(t16151*t2443 + t16148*t3524 + t4890 + t6126)*var2[0] - 0.5*(t15195 + t15196 + t13839*t16148 + t13833*t16151)*var2[1] - 0.5*(t15468 + t15474 + t13681*t16148 + t13641*t16151)*var2[2] - 0.5*(t15672 + t15673 + t15174*t16148 + t15044*t16151)*var2[3] - 0.5*(t15837 + t15839 + t14514*t16148 + t14317*t16151)*var2[4] - 0.5*(t15941 + t15942 + t13378*t16148 + t13398*t16151)*var2[5] - 0.5*(t16063 + t16064 + t12821*t16148 + 0.032875*t16151*t1692)*var2[12])*var2[13];
  p_output1[14]=(-0.5*t3622*var2[0] - 0.5*t15193*var2[1] - 0.5*t15466*var2[2] - 0.5*t15669*var2[3] - 0.5*t15835*var2[4] - 0.5*t15939*var2[5] - 0.5*(t16056 + 0.00015845750000000015*t1692)*var2[12])*var2[13];
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec14_plane.hh"

namespace SymFunction
{

void Ce2_vec14_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
