/*
 * Automatically Generated from Mathematica.
 * Sat 7 Dec 2019 21:23:28 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t696;
  double t8;
  double t338;
  double t74;
  double t946;
  double t417;
  double t951;
  double t963;
  double t1080;
  double t1174;
  double t1238;
  double t1532;
  double t1493;
  double t1351;
  double t1489;
  double t1550;
  double t1551;
  double t1559;
  double t1624;
  double t1633;
  double t2117;
  double t2172;
  double t1882;
  double t979;
  double t2724;
  double t2729;
  double t2733;
  double t2774;
  double t2790;
  double t2794;
  double t2502;
  double t2800;
  double t2802;
  double t2821;
  double t2841;
  double t2873;
  double t2913;
  double t1904;
  double t2039;
  double t3125;
  double t3179;
  double t3257;
  double t3275;
  double t3299;
  double t3301;
  double t3305;
  double t977;
  double t3625;
  double t3615;
  double t3677;
  double t3711;
  double t3724;
  double t3728;
  double t3661;
  double t3678;
  double t3680;
  double t3766;
  double t3768;
  double t3784;
  double t2796;
  double t3498;
  double t3997;
  double t4009;
  double t4019;
  double t4034;
  double t4037;
  double t4051;
  double t3787;
  double t3799;
  double t3893;
  double t3167;
  double t4195;
  double t4197;
  double t4203;
  double t4205;
  double t4209;
  double t4218;
  double t4365;
  double t4361;
  double t4334;
  double t4335;
  double t4367;
  double t4375;
  double t4383;
  double t4392;
  double t4404;
  double t4426;
  double t4428;
  double t4407;
  double t4327;
  double t4480;
  double t4528;
  double t4537;
  double t4558;
  double t4564;
  double t4568;
  double t4570;
  double t4409;
  double t4421;
  double t4657;
  double t4661;
  double t4662;
  double t4667;
  double t4669;
  double t4678;
  double t4795;
  double t4799;
  double t4802;
  double t4813;
  double t4826;
  double t4794;
  double t4828;
  double t4842;
  double t4847;
  double t4865;
  double t4913;
  double t4765;
  double t4989;
  double t4994;
  double t4996;
  double t4984;
  double t4997;
  double t5002;
  double t5006;
  double t5007;
  double t5008;
  double t5083;
  double t5086;
  double t5087;
  double t5079;
  double t5089;
  double t5090;
  double t5092;
  double t5094;
  double t5099;
  double t4754;
  double t5153;
  double t5154;
  double t5171;
  double t5186;
  double t5197;
  double t5208;
  double t5214;
  double t5187;
  double t5192;
  double t5193;
  double t4958;
  double t5142;
  double t5267;
  double t5268;
  double t5269;
  double t5281;
  double t5284;
  double t5285;
  double t5272;
  double t5274;
  double t5279;
  double t5062;
  double t5340;
  double t5342;
  double t5345;
  double t5371;
  double t5372;
  double t5380;
  double t5348;
  double t5350;
  double t5353;
  double t4755;
  double t5438;
  double t5440;
  double t5444;
  double t5445;
  double t5453;
  double t5437;
  double t5457;
  double t5459;
  double t5462;
  double t5465;
  double t5466;
  double t4960;
  double t5420;
  double t5512;
  double t5513;
  double t5520;
  double t5509;
  double t5521;
  double t5522;
  double t5526;
  double t5527;
  double t5528;
  double t5060;
  double t5588;
  double t5589;
  double t5594;
  double t5575;
  double t5595;
  double t5597;
  double t5605;
  double t5606;
  double t5609;
  double t5638;
  double t5639;
  double t5642;
  double t5685;
  double t5686;
  double t5687;
  double t5680;
  double t5688;
  double t5689;
  double t5692;
  double t5706;
  double t5707;
  double t5732;
  double t5733;
  double t5735;
  double t5746;
  double t5747;
  double t5748;
  double t5743;
  double t5749;
  double t5750;
  double t5753;
  double t5754;
  double t5756;
  double t5650;
  double t5794;
  double t5796;
  double t5797;
  double t5807;
  double t5808;
  double t5809;
  double t5802;
  double t5803;
  double t5804;
  double t5730;
  double t5834;
  double t5837;
  double t5838;
  double t5847;
  double t5848;
  double t5849;
  double t5839;
  double t5840;
  double t5843;
  double t5637;
  double t5879;
  double t5880;
  double t5885;
  double t5878;
  double t5886;
  double t5891;
  double t5893;
  double t5896;
  double t5897;
  double t5729;
  double t5927;
  double t5931;
  double t5932;
  double t5926;
  double t5934;
  double t5935;
  double t5937;
  double t5939;
  double t5940;
  double t5829;
  double t5970;
  double t5971;
  double t5992;
  double t5993;
  double t5998;
  double t6004;
  double t6005;
  double t6006;
  double t6019;
  double t6020;
  double t6022;
  double t6044;
  double t6040;
  double t6041;
  double t6056;
  double t6062;
  double t6066;
  double t6068;
  double t6069;
  double t6087;
  double t6083;
  double t6084;
  double t6085;
  double t6086;
  double t6088;
  double t6089;
  double t6096;
  double t6101;
  double t6102;
  double t6126;
  double t6127;
  double t6121;
  double t6123;
  double t6124;
  double t6125;
  double t6129;
  double t6130;
  double t6133;
  double t6134;
  double t6136;
  double t6153;
  double t6156;
  double t6157;
  double t6150;
  double t6171;
  double t6172;
  double t6174;
  double t6169;
  double t6187;
  double t6193;
  double t6197;
  double t6184;
  double t6211;
  double t6212;
  double t6213;
  double t6236;
  double t6237;
  double t6238;
  double t6251;
  double t6252;
  double t6254;
  double t6276;
  double t6273;
  double t6277;
  double t6278;
  double t6280;
  double t6281;
  double t6282;
  double t6233;
  double t6296;
  double t6297;
  double t6295;
  double t6298;
  double t6299;
  double t6301;
  double t6302;
  double t6303;
  double t6257;
  double t6315;
  double t6316;
  double t6314;
  double t6317;
  double t6318;
  double t6320;
  double t6321;
  double t6322;
  double t6333;
  double t6334;
  double t6335;
  double t6337;
  double t6346;
  double t6347;
  double t6348;
  double t6350;
  double t6359;
  double t6360;
  double t6361;
  double t6363;
  double t6375;
  double t6376;
  double t6377;
  double t6393;
  double t6394;
  double t6395;
  double t6407;
  double t6408;
  double t6409;
  double t6426;
  double t6425;
  double t6427;
  double t6428;
  double t6430;
  double t6431;
  double t6432;
  double t6390;
  double t6444;
  double t6445;
  double t6443;
  double t6446;
  double t6447;
  double t6449;
  double t6450;
  double t6451;
  double t6412;
  double t6463;
  double t6464;
  double t6462;
  double t6465;
  double t6466;
  double t6468;
  double t6469;
  double t6470;
  double t6481;
  double t6482;
  double t6483;
  double t6485;
  double t6494;
  double t6495;
  double t6496;
  double t6498;
  double t6507;
  double t6508;
  double t6509;
  double t6511;
  t696 = Cos(var1[3]);
  t8 = Cos(var1[5]);
  t338 = Sin(var1[4]);
  t74 = Sin(var1[3]);
  t946 = Sin(var1[5]);
  t417 = -1.*t8*t74*t338;
  t951 = t696*t946;
  t963 = t417 + t951;
  t1080 = t696*t8*t338;
  t1174 = t74*t946;
  t1238 = t1080 + t1174;
  t1532 = Cos(var1[10]);
  t1493 = Cos(var1[9]);
  t1351 = Sin(var1[10]);
  t1489 = t1351*t963;
  t1550 = t1493*t1532*t1238;
  t1551 = t1489 + t1550;
  t1559 = t1532*t963;
  t1624 = -1.*t1493*t1351*t1238;
  t1633 = t1559 + t1624;
  t2117 = Cos(var1[11]);
  t2172 = 0. + t2117;
  t1882 = Sin(var1[11]);
  t979 = Sin(var1[9]);
  t2724 = -1.*t8*t74;
  t2729 = t696*t338*t946;
  t2733 = t2724 + t2729;
  t2774 = -1.*t696*t8;
  t2790 = -1.*t74*t338*t946;
  t2794 = t2774 + t2790;
  t2502 = 0. + t1882;
  t2800 = -1.*t1493*t1351*t2733;
  t2802 = t1532*t2794;
  t2821 = t2800 + t2802;
  t2841 = t1493*t1532*t2733;
  t2873 = t1351*t2794;
  t2913 = t2841 + t2873;
  t1904 = -1.*t1882;
  t2039 = 0. + t1904;
  t3125 = Cos(var1[4]);
  t3179 = -1.*t1493*t696*t3125*t1351;
  t3257 = -1.*t1532*t3125*t74;
  t3275 = t3179 + t3257;
  t3299 = t1493*t1532*t696*t3125;
  t3301 = -1.*t3125*t1351*t74;
  t3305 = t3299 + t3301;
  t977 = 0.2429*t963;
  t3625 = Cos(var1[7]);
  t3615 = Cos(var1[6]);
  t3677 = Sin(var1[7]);
  t3711 = t3625*t963;
  t3724 = -1.*t3615*t1238*t3677;
  t3728 = t3711 + t3724;
  t3661 = t3615*t3625*t1238;
  t3678 = t963*t3677;
  t3680 = t3661 + t3678;
  t3766 = Cos(var1[8]);
  t3768 = 0. + t3766;
  t3784 = Sin(var1[8]);
  t2796 = 0.2429*t2794;
  t3498 = Sin(var1[6]);
  t3997 = t3625*t2794;
  t4009 = -1.*t3615*t2733*t3677;
  t4019 = t3997 + t4009;
  t4034 = t3615*t3625*t2733;
  t4037 = t2794*t3677;
  t4051 = t4034 + t4037;
  t3787 = -1.*t3784;
  t3799 = 0. + t3787;
  t3893 = 0. + t3784;
  t3167 = -0.2429*t3125*t74;
  t4195 = -1.*t3125*t3625*t74;
  t4197 = -1.*t696*t3125*t3615*t3677;
  t4203 = t4195 + t4197;
  t4205 = t696*t3125*t3615*t3625;
  t4209 = -1.*t3125*t74*t3677;
  t4218 = t4205 + t4209;
  t4365 = Cos(var1[16]);
  t4361 = Cos(var1[15]);
  t4334 = Sin(var1[16]);
  t4335 = t4334*t963;
  t4367 = t4361*t4365*t1238;
  t4375 = t4335 + t4367;
  t4383 = t4365*t963;
  t4392 = -1.*t4361*t4334*t1238;
  t4404 = t4383 + t4392;
  t4426 = Cos(var1[17]);
  t4428 = 0. + t4426;
  t4407 = Sin(var1[17]);
  t4327 = Sin(var1[15]);
  t4480 = 0. + t4407;
  t4528 = -1.*t4361*t4334*t2733;
  t4537 = t4365*t2794;
  t4558 = t4528 + t4537;
  t4564 = t4361*t4365*t2733;
  t4568 = t4334*t2794;
  t4570 = t4564 + t4568;
  t4409 = -1.*t4407;
  t4421 = 0. + t4409;
  t4657 = -1.*t4361*t696*t3125*t4334;
  t4661 = -1.*t4365*t3125*t74;
  t4662 = t4657 + t4661;
  t4667 = t4361*t4365*t696*t3125;
  t4669 = -1.*t3125*t4334*t74;
  t4678 = t4667 + t4669;
  t4795 = t1493*t3125*t8*t74;
  t4799 = -1.*t979;
  t4802 = 0. + t4799;
  t4813 = -1.*t8*t4802*t338;
  t4826 = t4795 + t4813;
  t4794 = t696*t3125*t8*t1351;
  t4828 = t1532*t4826;
  t4842 = t4794 + t4828;
  t4847 = t1532*t696*t3125*t8;
  t4865 = -1.*t1351*t4826;
  t4913 = t4847 + t4865;
  t4765 = 0. + t1493;
  t4989 = t1493*t3125*t74*t946;
  t4994 = -1.*t4802*t338*t946;
  t4996 = t4989 + t4994;
  t4984 = t696*t3125*t1351*t946;
  t4997 = t1532*t4996;
  t5002 = t4984 + t4997;
  t5006 = t1532*t696*t3125*t946;
  t5007 = -1.*t1351*t4996;
  t5008 = t5006 + t5007;
  t5083 = -1.*t3125*t4802;
  t5086 = -1.*t1493*t74*t338;
  t5087 = t5083 + t5086;
  t5079 = -1.*t696*t1351*t338;
  t5089 = t1532*t5087;
  t5090 = t5079 + t5089;
  t5092 = -1.*t1532*t696*t338;
  t5094 = -1.*t1351*t5087;
  t5099 = t5092 + t5094;
  t4754 = 0.2429*t696*t3125*t8;
  t5153 = t3125*t8*t3615*t74;
  t5154 = 0. + t3498;
  t5171 = -1.*t8*t338*t5154;
  t5186 = t5153 + t5171;
  t5197 = t696*t3125*t8*t3625;
  t5208 = -1.*t5186*t3677;
  t5214 = t5197 + t5208;
  t5187 = t3625*t5186;
  t5192 = t696*t3125*t8*t3677;
  t5193 = t5187 + t5192;
  t4958 = 0.2429*t696*t3125*t946;
  t5142 = 0. + t3615;
  t5267 = t3125*t3615*t74*t946;
  t5268 = -1.*t338*t946*t5154;
  t5269 = t5267 + t5268;
  t5281 = t696*t3125*t3625*t946;
  t5284 = -1.*t5269*t3677;
  t5285 = t5281 + t5284;
  t5272 = t3625*t5269;
  t5274 = t696*t3125*t946*t3677;
  t5279 = t5272 + t5274;
  t5062 = -0.2429*t696*t338;
  t5340 = -1.*t3615*t74*t338;
  t5342 = -1.*t3125*t5154;
  t5345 = t5340 + t5342;
  t5371 = -1.*t696*t3625*t338;
  t5372 = -1.*t5345*t3677;
  t5380 = t5371 + t5372;
  t5348 = t3625*t5345;
  t5350 = -1.*t696*t338*t3677;
  t5353 = t5348 + t5350;
  t4755 = -0.0817*t8*t338;
  t5438 = t4361*t3125*t8*t74;
  t5440 = -1.*t4327;
  t5444 = 0. + t5440;
  t5445 = -1.*t8*t5444*t338;
  t5453 = t5438 + t5445;
  t5437 = t696*t3125*t8*t4334;
  t5457 = t4365*t5453;
  t5459 = t5437 + t5457;
  t5462 = t4365*t696*t3125*t8;
  t5465 = -1.*t4334*t5453;
  t5466 = t5462 + t5465;
  t4960 = -0.0817*t338*t946;
  t5420 = 0. + t4361;
  t5512 = t4361*t3125*t74*t946;
  t5513 = -1.*t5444*t338*t946;
  t5520 = t5512 + t5513;
  t5509 = t696*t3125*t4334*t946;
  t5521 = t4365*t5520;
  t5522 = t5509 + t5521;
  t5526 = t4365*t696*t3125*t946;
  t5527 = -1.*t4334*t5520;
  t5528 = t5526 + t5527;
  t5060 = -0.0817*t3125;
  t5588 = -1.*t3125*t5444;
  t5589 = -1.*t4361*t74*t338;
  t5594 = t5588 + t5589;
  t5575 = -1.*t696*t4334*t338;
  t5595 = t4365*t5594;
  t5597 = t5575 + t5595;
  t5605 = -1.*t4365*t696*t338;
  t5606 = -1.*t4334*t5594;
  t5609 = t5605 + t5606;
  t5638 = t8*t74;
  t5639 = -1.*t696*t338*t946;
  t5642 = t5638 + t5639;
  t5685 = -1.*t3125*t4802*t946;
  t5686 = t1493*t2794;
  t5687 = t5685 + t5686;
  t5680 = t1351*t5642;
  t5688 = t1532*t5687;
  t5689 = t5680 + t5688;
  t5692 = t1532*t5642;
  t5706 = -1.*t1351*t5687;
  t5707 = t5692 + t5706;
  t5732 = t8*t74*t338;
  t5733 = -1.*t696*t946;
  t5735 = t5732 + t5733;
  t5746 = t3125*t8*t4802;
  t5747 = t1493*t5735;
  t5748 = t5746 + t5747;
  t5743 = t1351*t1238;
  t5749 = t1532*t5748;
  t5750 = t5743 + t5749;
  t5753 = t1532*t1238;
  t5754 = -1.*t1351*t5748;
  t5756 = t5753 + t5754;
  t5650 = 0.2429*t5642;
  t5794 = t3615*t2794;
  t5796 = -1.*t3125*t946*t5154;
  t5797 = t5794 + t5796;
  t5807 = t3625*t5642;
  t5808 = -1.*t5797*t3677;
  t5809 = t5807 + t5808;
  t5802 = t3625*t5797;
  t5803 = t5642*t3677;
  t5804 = t5802 + t5803;
  t5730 = 0.2429*t1238;
  t5834 = t3615*t5735;
  t5837 = t3125*t8*t5154;
  t5838 = t5834 + t5837;
  t5847 = t3625*t1238;
  t5848 = -1.*t5838*t3677;
  t5849 = t5847 + t5848;
  t5839 = t3625*t5838;
  t5840 = t1238*t3677;
  t5843 = t5839 + t5840;
  t5637 = -0.0817*t3125*t946;
  t5879 = -1.*t3125*t5444*t946;
  t5880 = t4361*t2794;
  t5885 = t5879 + t5880;
  t5878 = t4334*t5642;
  t5886 = t4365*t5885;
  t5891 = t5878 + t5886;
  t5893 = t4365*t5642;
  t5896 = -1.*t4334*t5885;
  t5897 = t5893 + t5896;
  t5729 = 0.0817*t3125*t8;
  t5927 = t3125*t8*t5444;
  t5931 = t4361*t5735;
  t5932 = t5927 + t5931;
  t5926 = t4334*t1238;
  t5934 = t4365*t5932;
  t5935 = t5926 + t5934;
  t5937 = t4365*t1238;
  t5939 = -1.*t4334*t5932;
  t5940 = t5937 + t5939;
  t5829 = -1.*t5735*t3498;
  t5970 = t3125*t8*t3615;
  t5971 = t5970 + t5829;
  t5992 = t696*t8;
  t5993 = t74*t338*t946;
  t5998 = t5992 + t5993;
  t6004 = t3125*t3615*t946;
  t6005 = -1.*t5998*t3498;
  t6006 = t6004 + t6005;
  t6019 = -1.*t3615*t338;
  t6020 = -1.*t3125*t74*t3498;
  t6022 = t6019 + t6020;
  t6044 = 0. + t1080 + t1174;
  t6040 = 0. + t5834 + t5837;
  t6041 = -1.*t3625*t6040;
  t6056 = -1.*t6044*t3677;
  t6062 = t6041 + t6056;
  t6066 = t3625*t6044;
  t6068 = -1.*t6040*t3677;
  t6069 = t6066 + t6068;
  t6087 = 0. + t2724 + t2729;
  t6083 = t3615*t5998;
  t6084 = t3125*t946*t5154;
  t6085 = 0. + t6083 + t6084;
  t6086 = -1.*t3625*t6085;
  t6088 = -1.*t6087*t3677;
  t6089 = t6086 + t6088;
  t6096 = t3625*t6087;
  t6101 = -1.*t6085*t3677;
  t6102 = t6096 + t6101;
  t6126 = t696*t3125;
  t6127 = 0. + t6126;
  t6121 = t3125*t3615*t74;
  t6123 = -1.*t338*t5154;
  t6124 = 0. + t6121 + t6123;
  t6125 = -1.*t3625*t6124;
  t6129 = -1.*t6127*t3677;
  t6130 = t6125 + t6129;
  t6133 = t6127*t3625;
  t6134 = -1.*t6124*t3677;
  t6136 = t6133 + t6134;
  t6153 = t3625*t6040;
  t6156 = t6044*t3677;
  t6157 = 0. + t6153 + t6156;
  t6150 = 0. + t6066 + t6068;
  t6171 = t3625*t6085;
  t6172 = t6087*t3677;
  t6174 = 0. + t6171 + t6172;
  t6169 = 0. + t6096 + t6101;
  t6187 = t3625*t6124;
  t6193 = t6127*t3677;
  t6197 = 0. + t6187 + t6193;
  t6184 = 0. + t6133 + t6134;
  t6211 = -1.*t1493*t3125*t8;
  t6212 = -1.*t979*t5735;
  t6213 = t6211 + t6212;
  t6236 = -1.*t1493*t3125*t946;
  t6237 = -1.*t979*t5998;
  t6238 = t6236 + t6237;
  t6251 = -1.*t3125*t979*t74;
  t6252 = t1493*t338;
  t6254 = t6251 + t6252;
  t6276 = 0. + t5746 + t5747;
  t6273 = -1.*t1351*t6044;
  t6277 = -1.*t1532*t6276;
  t6278 = t6273 + t6277;
  t6280 = t1532*t6044;
  t6281 = -1.*t1351*t6276;
  t6282 = t6280 + t6281;
  t6233 = t1493*t5998;
  t6296 = t3125*t4802*t946;
  t6297 = 0. + t6296 + t6233;
  t6295 = -1.*t1351*t6087;
  t6298 = -1.*t1532*t6297;
  t6299 = t6295 + t6298;
  t6301 = t1532*t6087;
  t6302 = -1.*t1351*t6297;
  t6303 = t6301 + t6302;
  t6257 = t1493*t3125*t74;
  t6315 = -1.*t4802*t338;
  t6316 = 0. + t6257 + t6315;
  t6314 = -1.*t6127*t1351;
  t6317 = -1.*t1532*t6316;
  t6318 = t6314 + t6317;
  t6320 = t1532*t6127;
  t6321 = -1.*t1351*t6316;
  t6322 = t6320 + t6321;
  t6333 = t1351*t6044;
  t6334 = t1532*t6276;
  t6335 = 0. + t6333 + t6334;
  t6337 = 0. + t6280 + t6281;
  t6346 = t1351*t6087;
  t6347 = t1532*t6297;
  t6348 = 0. + t6346 + t6347;
  t6350 = 0. + t6301 + t6302;
  t6359 = t6127*t1351;
  t6360 = t1532*t6316;
  t6361 = 0. + t6359 + t6360;
  t6363 = 0. + t6320 + t6321;
  t6375 = -1.*t4361*t3125*t8;
  t6376 = -1.*t4327*t5735;
  t6377 = t6375 + t6376;
  t6393 = -1.*t4361*t3125*t946;
  t6394 = -1.*t4327*t5998;
  t6395 = t6393 + t6394;
  t6407 = -1.*t3125*t4327*t74;
  t6408 = t4361*t338;
  t6409 = t6407 + t6408;
  t6426 = 0. + t5927 + t5931;
  t6425 = -1.*t4334*t6044;
  t6427 = -1.*t4365*t6426;
  t6428 = t6425 + t6427;
  t6430 = t4365*t6044;
  t6431 = -1.*t4334*t6426;
  t6432 = t6430 + t6431;
  t6390 = t4361*t5998;
  t6444 = t3125*t5444*t946;
  t6445 = 0. + t6444 + t6390;
  t6443 = -1.*t4334*t6087;
  t6446 = -1.*t4365*t6445;
  t6447 = t6443 + t6446;
  t6449 = t4365*t6087;
  t6450 = -1.*t4334*t6445;
  t6451 = t6449 + t6450;
  t6412 = t4361*t3125*t74;
  t6463 = -1.*t5444*t338;
  t6464 = 0. + t6412 + t6463;
  t6462 = -1.*t6127*t4334;
  t6465 = -1.*t4365*t6464;
  t6466 = t6462 + t6465;
  t6468 = t4365*t6127;
  t6469 = -1.*t4334*t6464;
  t6470 = t6468 + t6469;
  t6481 = t4334*t6044;
  t6482 = t4365*t6426;
  t6483 = 0. + t6481 + t6482;
  t6485 = 0. + t6430 + t6431;
  t6494 = t4334*t6087;
  t6495 = t4365*t6445;
  t6496 = 0. + t6494 + t6495;
  t6498 = 0. + t6449 + t6450;
  t6507 = t6127*t4334;
  t6508 = t4365*t6464;
  t6509 = 0. + t6507 + t6508;
  t6511 = 0. + t6468 + t6469;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=1.;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=1.;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=1.;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=1.;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=1.;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=1.;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=1.;
  p_output1[27]=-0.2083*t1551 - 0.1422*t1633 - 0.02*(t1551*t2039 + t1633*t2172) - 0.16*(t1551*t2172 + t1633*t2502) + t977 + 0.035199999999999995*t1238*t979;
  p_output1[28]=t2796 - 0.1422*t2821 - 0.2083*t2913 - 0.02*(t2172*t2821 + t2039*t2913) - 0.16*(t2502*t2821 + t2172*t2913) + 0.035199999999999995*t2733*t979;
  p_output1[29]=t3167 - 0.1422*t3275 - 0.2083*t3305 - 0.02*(t2172*t3275 + t2039*t3305) - 0.16*(t2502*t3275 + t2172*t3305) + 0.035199999999999995*t3125*t696*t979;
  p_output1[30]=0.0329*t1238*t3498 - 0.2083*t3680 - 0.1422*t3728 - 0.02*(t3728*t3768 + t3680*t3799) - 0.16*(t3680*t3768 + t3728*t3893) + t977;
  p_output1[31]=t2796 + 0.0329*t2733*t3498 - 0.1422*t4019 - 0.2083*t4051 - 0.16*(t3893*t4019 + t3768*t4051) - 0.02*(t3768*t4019 + t3799*t4051);
  p_output1[32]=t3167 - 0.1422*t4203 - 0.2083*t4218 - 0.16*(t3893*t4203 + t3768*t4218) - 0.02*(t3768*t4203 + t3799*t4218) + 0.0329*t3125*t3498*t696;
  p_output1[33]=0.035199999999999995*t1238*t4327 - 0.2083*t4375 - 0.1422*t4404 - 0.02*(t4375*t4421 + t4404*t4428) - 0.16*(t4375*t4428 + t4404*t4480) - 0.1944*t963;
  p_output1[34]=-0.1944*t2794 + 0.035199999999999995*t2733*t4327 - 0.1422*t4558 - 0.2083*t4570 - 0.02*(t4428*t4558 + t4421*t4570) - 0.16*(t4480*t4558 + t4428*t4570);
  p_output1[35]=-0.1422*t4662 - 0.2083*t4678 - 0.02*(t4428*t4662 + t4421*t4678) - 0.16*(t4480*t4662 + t4428*t4678) + 0.035199999999999995*t3125*t4327*t696 + 0.1944*t3125*t74;
  p_output1[36]=t4754 + t4755 - 0.2083*t4842 - 0.1422*t4913 - 0.02*(t2039*t4842 + t2172*t4913) - 0.16*(t2172*t4842 + t2502*t4913) + 0.035199999999999995*(-1.*t338*t4765*t8 + t3125*t74*t8*t979);
  p_output1[37]=t4958 + t4960 - 0.2083*t5002 - 0.1422*t5008 - 0.02*(t2039*t5002 + t2172*t5008) - 0.16*(t2172*t5002 + t2502*t5008) + 0.035199999999999995*(-1.*t338*t4765*t946 + t3125*t74*t946*t979);
  p_output1[38]=t5060 + t5062 - 0.2083*t5090 - 0.1422*t5099 - 0.02*(t2039*t5090 + t2172*t5099) - 0.16*(t2172*t5090 + t2502*t5099) + 0.035199999999999995*(-1.*t3125*t4765 - 1.*t338*t74*t979);
  p_output1[39]=t4754 - 0.2083*t5193 - 0.1422*t5214 - 0.02*(t3799*t5193 + t3768*t5214) - 0.16*(t3768*t5193 + t3893*t5214) + 0.0817*t338*t8 - 0.0329*(-1.*t338*t5142*t8 - 1.*t3125*t3498*t74*t8);
  p_output1[40]=t4958 - 0.2083*t5279 - 0.1422*t5285 - 0.02*(t3799*t5279 + t3768*t5285) - 0.16*(t3768*t5279 + t3893*t5285) + 0.0817*t338*t946 - 0.0329*(-1.*t338*t5142*t946 - 1.*t3125*t3498*t74*t946);
  p_output1[41]=0.0817*t3125 + t5062 - 0.2083*t5353 - 0.1422*t5380 - 0.02*(t3799*t5353 + t3768*t5380) - 0.16*(t3768*t5353 + t3893*t5380) - 0.0329*(-1.*t3125*t5142 + t338*t3498*t74);
  p_output1[42]=t4755 - 0.2083*t5459 - 0.1422*t5466 - 0.02*(t4421*t5459 + t4428*t5466) - 0.16*(t4428*t5459 + t4480*t5466) - 0.1944*t3125*t696*t8 + 0.035199999999999995*(-1.*t338*t5420*t8 + t3125*t4327*t74*t8);
  p_output1[43]=t4960 - 0.2083*t5522 - 0.1422*t5528 - 0.02*(t4421*t5522 + t4428*t5528) - 0.16*(t4428*t5522 + t4480*t5528) - 0.1944*t3125*t696*t946 + 0.035199999999999995*(-1.*t338*t5420*t946 + t3125*t4327*t74*t946);
  p_output1[44]=t5060 - 0.2083*t5597 - 0.1422*t5609 - 0.02*(t4421*t5597 + t4428*t5609) - 0.16*(t4428*t5597 + t4480*t5609) + 0.1944*t338*t696 + 0.035199999999999995*(-1.*t3125*t5420 - 1.*t338*t4327*t74);
  p_output1[45]=t5637 + t5650 - 0.2083*t5689 - 0.1422*t5707 - 0.02*(t2039*t5689 + t2172*t5707) - 0.16*(t2172*t5689 + t2502*t5707) + 0.035199999999999995*(-1.*t3125*t4765*t946 + t2794*t979);
  p_output1[46]=t5729 + t5730 - 0.2083*t5750 - 0.1422*t5756 - 0.02*(t2039*t5750 + t2172*t5756) - 0.16*(t2172*t5750 + t2502*t5756) + 0.035199999999999995*(t3125*t4765*t8 + t5735*t979);
  p_output1[47]=0;
  p_output1[48]=t5650 - 0.2083*t5804 - 0.1422*t5809 - 0.02*(t3799*t5804 + t3768*t5809) - 0.16*(t3768*t5804 + t3893*t5809) + 0.0817*t3125*t946 - 0.0329*(-1.*t2794*t3498 - 1.*t3125*t5142*t946);
  p_output1[49]=t5730 - 0.2083*t5843 - 0.1422*t5849 - 0.02*(t3799*t5843 + t3768*t5849) - 0.16*(t3768*t5843 + t3893*t5849) - 0.0817*t3125*t8 - 0.0329*(t5829 + t3125*t5142*t8);
  p_output1[50]=0;
  p_output1[51]=t5637 - 0.1944*t5642 - 0.2083*t5891 - 0.1422*t5897 - 0.02*(t4421*t5891 + t4428*t5897) - 0.16*(t4428*t5891 + t4480*t5897) + 0.035199999999999995*(t2794*t4327 - 1.*t3125*t5420*t946);
  p_output1[52]=-0.1944*t1238 + t5729 - 0.2083*t5935 - 0.1422*t5940 - 0.02*(t4421*t5935 + t4428*t5940) - 0.16*(t4428*t5935 + t4480*t5940) + 0.035199999999999995*(t4327*t5735 + t3125*t5420*t8);
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=-0.2083*t3625*t5971 + 0.1422*t3677*t5971 - 0.02*(-1.*t3677*t3768*t5971 + t3625*t3799*t5971) - 0.16*(t3625*t3768*t5971 - 1.*t3677*t3893*t5971) - 0.0329*(-1.*t3615*t5735 - 1.*t3125*t3498*t8);
  p_output1[58]=-0.2083*t3625*t6006 + 0.1422*t3677*t6006 - 0.02*(-1.*t3677*t3768*t6006 + t3625*t3799*t6006) - 0.16*(t3625*t3768*t6006 - 1.*t3677*t3893*t6006) - 0.0329*(-1.*t3615*t5998 - 1.*t3125*t3498*t946);
  p_output1[59]=-0.2083*t3625*t6022 + 0.1422*t3677*t6022 - 0.02*(-1.*t3677*t3768*t6022 + t3625*t3799*t6022) - 0.16*(t3625*t3768*t6022 - 1.*t3677*t3893*t6022) - 0.0329*(t338*t3498 - 1.*t3125*t3615*t74);
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=-0.1422*t6062 - 0.2083*t6069 - 0.16*(t3893*t6062 + t3768*t6069) - 0.02*(t3768*t6062 + t3799*t6069);
  p_output1[67]=-0.1422*t6089 - 0.2083*t6102 - 0.16*(t3893*t6089 + t3768*t6102) - 0.02*(t3768*t6089 + t3799*t6102);
  p_output1[68]=-0.1422*t6130 - 0.2083*t6136 - 0.16*(t3893*t6130 + t3768*t6136) - 0.02*(t3768*t6130 + t3799*t6136);
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=-0.02*(-1.*t3784*t6150 - 1.*t3766*t6157) - 0.16*(t3766*t6150 - 1.*t3784*t6157);
  p_output1[76]=-0.02*(-1.*t3784*t6169 - 1.*t3766*t6174) - 0.16*(t3766*t6169 - 1.*t3784*t6174);
  p_output1[77]=-0.02*(-1.*t3784*t6184 - 1.*t3766*t6197) - 0.16*(t3766*t6184 - 1.*t3784*t6197);
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0.1422*t1351*t6213 - 0.2083*t1532*t6213 - 0.02*(t1532*t2039*t6213 - 1.*t1351*t2172*t6213) - 0.16*(t1532*t2172*t6213 - 1.*t1351*t2502*t6213) + 0.035199999999999995*(t5747 - 1.*t3125*t8*t979);
  p_output1[82]=0.1422*t1351*t6238 - 0.2083*t1532*t6238 - 0.02*(t1532*t2039*t6238 - 1.*t1351*t2172*t6238) - 0.16*(t1532*t2172*t6238 - 1.*t1351*t2502*t6238) + 0.035199999999999995*(t6233 - 1.*t3125*t946*t979);
  p_output1[83]=0.1422*t1351*t6254 - 0.2083*t1532*t6254 - 0.02*(t1532*t2039*t6254 - 1.*t1351*t2172*t6254) - 0.16*(t1532*t2172*t6254 - 1.*t1351*t2502*t6254) + 0.035199999999999995*(t6257 + t338*t979);
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=-0.1422*t6278 - 0.2083*t6282 - 0.02*(t2172*t6278 + t2039*t6282) - 0.16*(t2502*t6278 + t2172*t6282);
  p_output1[91]=-0.1422*t6299 - 0.2083*t6303 - 0.02*(t2172*t6299 + t2039*t6303) - 0.16*(t2502*t6299 + t2172*t6303);
  p_output1[92]=-0.1422*t6318 - 0.2083*t6322 - 0.02*(t2172*t6318 + t2039*t6322) - 0.16*(t2502*t6318 + t2172*t6322);
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=-0.02*(-1.*t2117*t6335 - 1.*t1882*t6337) - 0.16*(-1.*t1882*t6335 + t2117*t6337);
  p_output1[100]=-0.02*(-1.*t2117*t6348 - 1.*t1882*t6350) - 0.16*(-1.*t1882*t6348 + t2117*t6350);
  p_output1[101]=-0.02*(-1.*t2117*t6361 - 1.*t1882*t6363) - 0.16*(-1.*t1882*t6361 + t2117*t6363);
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0.1422*t4334*t6377 - 0.2083*t4365*t6377 - 0.02*(t4365*t4421*t6377 - 1.*t4334*t4428*t6377) - 0.16*(t4365*t4428*t6377 - 1.*t4334*t4480*t6377) + 0.035199999999999995*(t5931 - 1.*t3125*t4327*t8);
  p_output1[142]=0.1422*t4334*t6395 - 0.2083*t4365*t6395 - 0.02*(t4365*t4421*t6395 - 1.*t4334*t4428*t6395) - 0.16*(t4365*t4428*t6395 - 1.*t4334*t4480*t6395) + 0.035199999999999995*(t6390 - 1.*t3125*t4327*t946);
  p_output1[143]=0.1422*t4334*t6409 - 0.2083*t4365*t6409 - 0.02*(t4365*t4421*t6409 - 1.*t4334*t4428*t6409) - 0.16*(t4365*t4428*t6409 - 1.*t4334*t4480*t6409) + 0.035199999999999995*(t338*t4327 + t6412);
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=-0.1422*t6428 - 0.2083*t6432 - 0.02*(t4428*t6428 + t4421*t6432) - 0.16*(t4480*t6428 + t4428*t6432);
  p_output1[151]=-0.1422*t6447 - 0.2083*t6451 - 0.02*(t4428*t6447 + t4421*t6451) - 0.16*(t4480*t6447 + t4428*t6451);
  p_output1[152]=-0.1422*t6466 - 0.2083*t6470 - 0.02*(t4428*t6466 + t4421*t6470) - 0.16*(t4480*t6466 + t4428*t6470);
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=-0.02*(-1.*t4426*t6483 - 1.*t4407*t6485) - 0.16*(-1.*t4407*t6483 + t4426*t6485);
  p_output1[160]=-0.02*(-1.*t4426*t6496 - 1.*t4407*t6498) - 0.16*(-1.*t4407*t6496 + t4426*t6498);
  p_output1[161]=-0.02*(-1.*t4426*t6509 - 1.*t4407*t6511) - 0.16*(-1.*t4407*t6509 + t4426*t6511);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Reset_j_1_func.hh"

namespace SymFunction
{

void Reset_j_1_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
