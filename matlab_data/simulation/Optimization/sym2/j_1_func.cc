/*
 * Automatically Generated from Mathematica.
 * Sat 7 Dec 2019 21:22:14 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t73;
  double t50;
  double t70;
  double t56;
  double t79;
  double t92;
  double t96;
  double t102;
  double t71;
  double t81;
  double t86;
  double t110;
  double t109;
  double t113;
  double t126;
  double t133;
  double t134;
  double t112;
  double t115;
  double t116;
  double t138;
  double t141;
  double t143;
  double t104;
  double t169;
  double t171;
  double t175;
  double t177;
  double t178;
  double t179;
  double t181;
  double t183;
  double t185;
  double t190;
  double t196;
  double t198;
  double t144;
  double t145;
  double t153;
  double t221;
  double t225;
  double t226;
  double t230;
  double t235;
  double t236;
  double t244;
  double t283;
  double t281;
  double t274;
  double t275;
  double t285;
  double t287;
  double t289;
  double t290;
  double t292;
  double t307;
  double t309;
  double t297;
  double t269;
  double t319;
  double t334;
  double t335;
  double t336;
  double t339;
  double t340;
  double t341;
  double t298;
  double t302;
  double t361;
  double t362;
  double t364;
  double t367;
  double t368;
  double t369;
  double t268;
  double t394;
  double t393;
  double t391;
  double t392;
  double t395;
  double t396;
  double t398;
  double t399;
  double t401;
  double t411;
  double t412;
  double t404;
  double t389;
  double t331;
  double t419;
  double t431;
  double t432;
  double t433;
  double t435;
  double t436;
  double t437;
  double t407;
  double t408;
  double t359;
  double t449;
  double t451;
  double t452;
  double t454;
  double t456;
  double t457;
  double t477;
  double t478;
  double t479;
  double t481;
  double t486;
  double t487;
  double t488;
  double t482;
  double t483;
  double t484;
  double t470;
  double t505;
  double t506;
  double t507;
  double t512;
  double t513;
  double t514;
  double t508;
  double t509;
  double t510;
  double t531;
  double t532;
  double t533;
  double t538;
  double t539;
  double t540;
  double t534;
  double t535;
  double t536;
  double t559;
  double t560;
  double t561;
  double t562;
  double t563;
  double t558;
  double t564;
  double t565;
  double t567;
  double t568;
  double t569;
  double t554;
  double t587;
  double t588;
  double t589;
  double t586;
  double t590;
  double t591;
  double t593;
  double t594;
  double t595;
  double t613;
  double t614;
  double t615;
  double t612;
  double t616;
  double t617;
  double t619;
  double t620;
  double t621;
  double t551;
  double t469;
  double t638;
  double t639;
  double t640;
  double t641;
  double t637;
  double t642;
  double t643;
  double t645;
  double t646;
  double t647;
  double t580;
  double t500;
  double t633;
  double t663;
  double t664;
  double t665;
  double t662;
  double t666;
  double t667;
  double t669;
  double t670;
  double t671;
  double t525;
  double t607;
  double t687;
  double t688;
  double t689;
  double t686;
  double t690;
  double t691;
  double t693;
  double t694;
  double t695;
  double t707;
  double t708;
  double t709;
  double t715;
  double t716;
  double t717;
  double t722;
  double t723;
  double t724;
  double t718;
  double t719;
  double t720;
  double t738;
  double t739;
  double t740;
  double t744;
  double t745;
  double t746;
  double t751;
  double t752;
  double t753;
  double t747;
  double t748;
  double t749;
  double t771;
  double t772;
  double t773;
  double t770;
  double t774;
  double t775;
  double t777;
  double t778;
  double t779;
  double t797;
  double t798;
  double t799;
  double t796;
  double t800;
  double t801;
  double t803;
  double t804;
  double t805;
  double t706;
  double t765;
  double t821;
  double t822;
  double t823;
  double t820;
  double t824;
  double t825;
  double t827;
  double t828;
  double t829;
  double t735;
  double t791;
  double t845;
  double t846;
  double t847;
  double t844;
  double t848;
  double t849;
  double t851;
  double t852;
  double t853;
  double t741;
  double t868;
  double t869;
  double t881;
  double t882;
  double t883;
  double t888;
  double t889;
  double t890;
  double t902;
  double t903;
  double t904;
  double t922;
  double t920;
  double t921;
  double t923;
  double t924;
  double t926;
  double t927;
  double t928;
  double t943;
  double t939;
  double t940;
  double t941;
  double t942;
  double t944;
  double t945;
  double t947;
  double t948;
  double t949;
  double t964;
  double t965;
  double t960;
  double t961;
  double t962;
  double t963;
  double t966;
  double t967;
  double t969;
  double t970;
  double t971;
  double t984;
  double t985;
  double t986;
  double t982;
  double t997;
  double t998;
  double t999;
  double t995;
  double t1010;
  double t1011;
  double t1012;
  double t1008;
  double t841;
  double t1025;
  double t1026;
  double t1042;
  double t1043;
  double t1044;
  double t1056;
  double t1057;
  double t1058;
  double t1075;
  double t1074;
  double t1076;
  double t1077;
  double t1079;
  double t1080;
  double t1081;
  double t1093;
  double t1094;
  double t1095;
  double t1092;
  double t1096;
  double t1097;
  double t1099;
  double t1100;
  double t1101;
  double t1113;
  double t1114;
  double t1115;
  double t1112;
  double t1116;
  double t1117;
  double t1119;
  double t1120;
  double t1121;
  double t1132;
  double t1133;
  double t1134;
  double t1136;
  double t1145;
  double t1146;
  double t1147;
  double t1149;
  double t1158;
  double t1159;
  double t1160;
  double t1162;
  double t1174;
  double t1175;
  double t1176;
  double t1192;
  double t1193;
  double t1194;
  double t1206;
  double t1207;
  double t1208;
  double t1225;
  double t1224;
  double t1226;
  double t1227;
  double t1229;
  double t1230;
  double t1231;
  double t1189;
  double t1243;
  double t1244;
  double t1242;
  double t1245;
  double t1246;
  double t1248;
  double t1249;
  double t1250;
  double t1211;
  double t1262;
  double t1263;
  double t1261;
  double t1264;
  double t1265;
  double t1267;
  double t1268;
  double t1269;
  double t1280;
  double t1281;
  double t1282;
  double t1284;
  double t1293;
  double t1294;
  double t1295;
  double t1297;
  double t1306;
  double t1307;
  double t1308;
  double t1310;
  t73 = Cos(var1[3]);
  t50 = Cos(var1[5]);
  t70 = Sin(var1[4]);
  t56 = Sin(var1[3]);
  t79 = Sin(var1[5]);
  t92 = t73*t50*t70;
  t96 = t56*t79;
  t102 = t92 + t96;
  t71 = -1.*t50*t56*t70;
  t81 = t73*t79;
  t86 = t71 + t81;
  t110 = Cos(var1[7]);
  t109 = Cos(var1[6]);
  t113 = Sin(var1[7]);
  t126 = t110*t86;
  t133 = -1.*t109*t102*t113;
  t134 = t126 + t133;
  t112 = t109*t110*t102;
  t115 = t86*t113;
  t116 = t112 + t115;
  t138 = Cos(var1[8]);
  t141 = 0. + t138;
  t143 = Sin(var1[8]);
  t104 = Sin(var1[6]);
  t169 = -1.*t73*t50;
  t171 = -1.*t56*t70*t79;
  t175 = t169 + t171;
  t177 = -1.*t50*t56;
  t178 = t73*t70*t79;
  t179 = t177 + t178;
  t181 = t110*t175;
  t183 = -1.*t109*t179*t113;
  t185 = t181 + t183;
  t190 = t109*t110*t179;
  t196 = t175*t113;
  t198 = t190 + t196;
  t144 = -1.*t143;
  t145 = 0. + t144;
  t153 = 0. + t143;
  t221 = Cos(var1[4]);
  t225 = -1.*t221*t110*t56;
  t226 = -1.*t73*t221*t109*t113;
  t230 = t225 + t226;
  t235 = t73*t221*t109*t110;
  t236 = -1.*t221*t56*t113;
  t244 = t235 + t236;
  t283 = Cos(var1[16]);
  t281 = Cos(var1[15]);
  t274 = Sin(var1[16]);
  t275 = t274*t86;
  t285 = t281*t283*t102;
  t287 = t275 + t285;
  t289 = t283*t86;
  t290 = -1.*t281*t274*t102;
  t292 = t289 + t290;
  t307 = Cos(var1[17]);
  t309 = 0. + t307;
  t297 = Sin(var1[17]);
  t269 = Sin(var1[15]);
  t319 = 0. + t297;
  t334 = -1.*t281*t274*t179;
  t335 = t283*t175;
  t336 = t334 + t335;
  t339 = t281*t283*t179;
  t340 = t274*t175;
  t341 = t339 + t340;
  t298 = -1.*t297;
  t302 = 0. + t298;
  t361 = -1.*t281*t73*t221*t274;
  t362 = -1.*t283*t221*t56;
  t364 = t361 + t362;
  t367 = t281*t283*t73*t221;
  t368 = -1.*t221*t274*t56;
  t369 = t367 + t368;
  t268 = -0.1944*t86;
  t394 = Cos(var1[13]);
  t393 = Cos(var1[12]);
  t391 = Sin(var1[13]);
  t392 = t391*t86;
  t395 = t393*t394*t102;
  t396 = t392 + t395;
  t398 = t394*t86;
  t399 = -1.*t393*t391*t102;
  t401 = t398 + t399;
  t411 = Cos(var1[14]);
  t412 = 0. + t411;
  t404 = Sin(var1[14]);
  t389 = Sin(var1[12]);
  t331 = -0.1944*t175;
  t419 = 0. + t404;
  t431 = -1.*t393*t391*t179;
  t432 = t394*t175;
  t433 = t431 + t432;
  t435 = t393*t394*t179;
  t436 = t391*t175;
  t437 = t435 + t436;
  t407 = -1.*t404;
  t408 = 0. + t407;
  t359 = 0.1944*t221*t56;
  t449 = -1.*t393*t73*t221*t391;
  t451 = -1.*t394*t221*t56;
  t452 = t449 + t451;
  t454 = t393*t394*t73*t221;
  t456 = -1.*t221*t391*t56;
  t457 = t454 + t456;
  t477 = t221*t50*t109*t56;
  t478 = 0. + t104;
  t479 = -1.*t50*t70*t478;
  t481 = t477 + t479;
  t486 = t73*t221*t50*t110;
  t487 = -1.*t481*t113;
  t488 = t486 + t487;
  t482 = t110*t481;
  t483 = t73*t221*t50*t113;
  t484 = t482 + t483;
  t470 = 0. + t109;
  t505 = t221*t109*t56*t79;
  t506 = -1.*t70*t79*t478;
  t507 = t505 + t506;
  t512 = t73*t221*t110*t79;
  t513 = -1.*t507*t113;
  t514 = t512 + t513;
  t508 = t110*t507;
  t509 = t73*t221*t79*t113;
  t510 = t508 + t509;
  t531 = -1.*t109*t56*t70;
  t532 = -1.*t221*t478;
  t533 = t531 + t532;
  t538 = -1.*t73*t110*t70;
  t539 = -1.*t533*t113;
  t540 = t538 + t539;
  t534 = t110*t533;
  t535 = -1.*t73*t70*t113;
  t536 = t534 + t535;
  t559 = t281*t221*t50*t56;
  t560 = -1.*t269;
  t561 = 0. + t560;
  t562 = -1.*t50*t561*t70;
  t563 = t559 + t562;
  t558 = t73*t221*t50*t274;
  t564 = t283*t563;
  t565 = t558 + t564;
  t567 = t283*t73*t221*t50;
  t568 = -1.*t274*t563;
  t569 = t567 + t568;
  t554 = 0. + t281;
  t587 = t281*t221*t56*t79;
  t588 = -1.*t561*t70*t79;
  t589 = t587 + t588;
  t586 = t73*t221*t274*t79;
  t590 = t283*t589;
  t591 = t586 + t590;
  t593 = t283*t73*t221*t79;
  t594 = -1.*t274*t589;
  t595 = t593 + t594;
  t613 = -1.*t221*t561;
  t614 = -1.*t281*t56*t70;
  t615 = t613 + t614;
  t612 = -1.*t73*t274*t70;
  t616 = t283*t615;
  t617 = t612 + t616;
  t619 = -1.*t283*t73*t70;
  t620 = -1.*t274*t615;
  t621 = t619 + t620;
  t551 = -0.1944*t73*t221*t50;
  t469 = 0.0817*t50*t70;
  t638 = t393*t221*t50*t56;
  t639 = 0. + t389;
  t640 = -1.*t50*t639*t70;
  t641 = t638 + t640;
  t637 = t73*t221*t50*t391;
  t642 = t394*t641;
  t643 = t637 + t642;
  t645 = t394*t73*t221*t50;
  t646 = -1.*t391*t641;
  t647 = t645 + t646;
  t580 = -0.1944*t73*t221*t79;
  t500 = 0.0817*t70*t79;
  t633 = 0. + t393;
  t663 = t393*t221*t56*t79;
  t664 = -1.*t639*t70*t79;
  t665 = t663 + t664;
  t662 = t73*t221*t391*t79;
  t666 = t394*t665;
  t667 = t662 + t666;
  t669 = t394*t73*t221*t79;
  t670 = -1.*t391*t665;
  t671 = t669 + t670;
  t525 = 0.0817*t221;
  t607 = 0.1944*t73*t70;
  t687 = -1.*t221*t639;
  t688 = -1.*t393*t56*t70;
  t689 = t687 + t688;
  t686 = -1.*t73*t391*t70;
  t690 = t394*t689;
  t691 = t686 + t690;
  t693 = -1.*t394*t73*t70;
  t694 = -1.*t391*t689;
  t695 = t693 + t694;
  t707 = t50*t56;
  t708 = -1.*t73*t70*t79;
  t709 = t707 + t708;
  t715 = t109*t175;
  t716 = -1.*t221*t79*t478;
  t717 = t715 + t716;
  t722 = t110*t709;
  t723 = -1.*t717*t113;
  t724 = t722 + t723;
  t718 = t110*t717;
  t719 = t709*t113;
  t720 = t718 + t719;
  t738 = t50*t56*t70;
  t739 = -1.*t73*t79;
  t740 = t738 + t739;
  t744 = t109*t740;
  t745 = t221*t50*t478;
  t746 = t744 + t745;
  t751 = t110*t102;
  t752 = -1.*t746*t113;
  t753 = t751 + t752;
  t747 = t110*t746;
  t748 = t102*t113;
  t749 = t747 + t748;
  t771 = -1.*t221*t561*t79;
  t772 = t281*t175;
  t773 = t771 + t772;
  t770 = t274*t709;
  t774 = t283*t773;
  t775 = t770 + t774;
  t777 = t283*t709;
  t778 = -1.*t274*t773;
  t779 = t777 + t778;
  t797 = t221*t50*t561;
  t798 = t281*t740;
  t799 = t797 + t798;
  t796 = t274*t102;
  t800 = t283*t799;
  t801 = t796 + t800;
  t803 = t283*t102;
  t804 = -1.*t274*t799;
  t805 = t803 + t804;
  t706 = 0.0817*t221*t79;
  t765 = -0.1944*t709;
  t821 = -1.*t221*t639*t79;
  t822 = t393*t175;
  t823 = t821 + t822;
  t820 = t391*t709;
  t824 = t394*t823;
  t825 = t820 + t824;
  t827 = t394*t709;
  t828 = -1.*t391*t823;
  t829 = t827 + t828;
  t735 = -0.0817*t221*t50;
  t791 = -0.1944*t102;
  t845 = t221*t50*t639;
  t846 = t393*t740;
  t847 = t845 + t846;
  t844 = t391*t102;
  t848 = t394*t847;
  t849 = t844 + t848;
  t851 = t394*t102;
  t852 = -1.*t391*t847;
  t853 = t851 + t852;
  t741 = -1.*t740*t104;
  t868 = t221*t50*t109;
  t869 = t868 + t741;
  t881 = t73*t50;
  t882 = t56*t70*t79;
  t883 = t881 + t882;
  t888 = t221*t109*t79;
  t889 = -1.*t883*t104;
  t890 = t888 + t889;
  t902 = -1.*t109*t70;
  t903 = -1.*t221*t56*t104;
  t904 = t902 + t903;
  t922 = 0. + t92 + t96;
  t920 = 0. + t744 + t745;
  t921 = -1.*t110*t920;
  t923 = -1.*t922*t113;
  t924 = t921 + t923;
  t926 = t110*t922;
  t927 = -1.*t920*t113;
  t928 = t926 + t927;
  t943 = 0. + t177 + t178;
  t939 = t109*t883;
  t940 = t221*t79*t478;
  t941 = 0. + t939 + t940;
  t942 = -1.*t110*t941;
  t944 = -1.*t943*t113;
  t945 = t942 + t944;
  t947 = t110*t943;
  t948 = -1.*t941*t113;
  t949 = t947 + t948;
  t964 = t73*t221;
  t965 = 0. + t964;
  t960 = t221*t109*t56;
  t961 = -1.*t70*t478;
  t962 = 0. + t960 + t961;
  t963 = -1.*t110*t962;
  t966 = -1.*t965*t113;
  t967 = t963 + t966;
  t969 = t965*t110;
  t970 = -1.*t962*t113;
  t971 = t969 + t970;
  t984 = t110*t920;
  t985 = t922*t113;
  t986 = 0. + t984 + t985;
  t982 = 0. + t926 + t927;
  t997 = t110*t941;
  t998 = t943*t113;
  t999 = 0. + t997 + t998;
  t995 = 0. + t947 + t948;
  t1010 = t110*t962;
  t1011 = t965*t113;
  t1012 = 0. + t1010 + t1011;
  t1008 = 0. + t969 + t970;
  t841 = -1.*t389*t740;
  t1025 = t393*t221*t50;
  t1026 = t1025 + t841;
  t1042 = t393*t221*t79;
  t1043 = -1.*t389*t883;
  t1044 = t1042 + t1043;
  t1056 = -1.*t221*t389*t56;
  t1057 = -1.*t393*t70;
  t1058 = t1056 + t1057;
  t1075 = 0. + t845 + t846;
  t1074 = -1.*t391*t922;
  t1076 = -1.*t394*t1075;
  t1077 = t1074 + t1076;
  t1079 = t394*t922;
  t1080 = -1.*t391*t1075;
  t1081 = t1079 + t1080;
  t1093 = t221*t639*t79;
  t1094 = t393*t883;
  t1095 = 0. + t1093 + t1094;
  t1092 = -1.*t391*t943;
  t1096 = -1.*t394*t1095;
  t1097 = t1092 + t1096;
  t1099 = t394*t943;
  t1100 = -1.*t391*t1095;
  t1101 = t1099 + t1100;
  t1113 = t393*t221*t56;
  t1114 = -1.*t639*t70;
  t1115 = 0. + t1113 + t1114;
  t1112 = -1.*t965*t391;
  t1116 = -1.*t394*t1115;
  t1117 = t1112 + t1116;
  t1119 = t394*t965;
  t1120 = -1.*t391*t1115;
  t1121 = t1119 + t1120;
  t1132 = t391*t922;
  t1133 = t394*t1075;
  t1134 = 0. + t1132 + t1133;
  t1136 = 0. + t1079 + t1080;
  t1145 = t391*t943;
  t1146 = t394*t1095;
  t1147 = 0. + t1145 + t1146;
  t1149 = 0. + t1099 + t1100;
  t1158 = t965*t391;
  t1159 = t394*t1115;
  t1160 = 0. + t1158 + t1159;
  t1162 = 0. + t1119 + t1120;
  t1174 = -1.*t281*t221*t50;
  t1175 = -1.*t269*t740;
  t1176 = t1174 + t1175;
  t1192 = -1.*t281*t221*t79;
  t1193 = -1.*t269*t883;
  t1194 = t1192 + t1193;
  t1206 = -1.*t221*t269*t56;
  t1207 = t281*t70;
  t1208 = t1206 + t1207;
  t1225 = 0. + t797 + t798;
  t1224 = -1.*t274*t922;
  t1226 = -1.*t283*t1225;
  t1227 = t1224 + t1226;
  t1229 = t283*t922;
  t1230 = -1.*t274*t1225;
  t1231 = t1229 + t1230;
  t1189 = t281*t883;
  t1243 = t221*t561*t79;
  t1244 = 0. + t1243 + t1189;
  t1242 = -1.*t274*t943;
  t1245 = -1.*t283*t1244;
  t1246 = t1242 + t1245;
  t1248 = t283*t943;
  t1249 = -1.*t274*t1244;
  t1250 = t1248 + t1249;
  t1211 = t281*t221*t56;
  t1262 = -1.*t561*t70;
  t1263 = 0. + t1211 + t1262;
  t1261 = -1.*t965*t274;
  t1264 = -1.*t283*t1263;
  t1265 = t1261 + t1264;
  t1267 = t283*t965;
  t1268 = -1.*t274*t1263;
  t1269 = t1267 + t1268;
  t1280 = t274*t922;
  t1281 = t283*t1225;
  t1282 = 0. + t1280 + t1281;
  t1284 = 0. + t1229 + t1230;
  t1293 = t274*t943;
  t1294 = t283*t1244;
  t1295 = 0. + t1293 + t1294;
  t1297 = 0. + t1248 + t1249;
  t1306 = t965*t274;
  t1307 = t283*t1263;
  t1308 = 0. + t1306 + t1307;
  t1310 = 0. + t1267 + t1268;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=1.;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=1.;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=1.;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=1.;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=1.;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=1.;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=1.;
  p_output1[27]=0.0329*t102*t104 - 0.2083*t116 - 0.1422*t134 - 0.02*(t134*t141 + t116*t145) - 0.16*(t116*t141 + t134*t153) + 0.2429*t86;
  p_output1[28]=0.2429*t175 + 0.0329*t104*t179 - 0.1422*t185 - 0.2083*t198 - 0.16*(t153*t185 + t141*t198) - 0.02*(t141*t185 + t145*t198);
  p_output1[29]=-0.1422*t230 - 0.2083*t244 - 0.16*(t153*t230 + t141*t244) - 0.02*(t141*t230 + t145*t244) - 0.2429*t221*t56 + 0.0329*t104*t221*t73;
  p_output1[30]=t268 + 0.035199999999999995*t102*t269 - 0.2083*t287 - 0.1422*t292 - 0.02*(t287*t302 + t292*t309) - 0.16*(t287*t309 + t292*t319);
  p_output1[31]=0.035199999999999995*t179*t269 + t331 - 0.1422*t336 - 0.2083*t341 - 0.02*(t309*t336 + t302*t341) - 0.16*(t319*t336 + t309*t341);
  p_output1[32]=t359 - 0.1422*t364 - 0.2083*t369 - 0.02*(t309*t364 + t302*t369) - 0.16*(t319*t364 + t309*t369) + 0.035199999999999995*t221*t269*t73;
  p_output1[33]=t268 + 0.0329*t102*t389 - 0.2083*t396 - 0.1422*t401 - 0.02*(t396*t408 + t401*t412) - 0.16*(t396*t412 + t401*t419);
  p_output1[34]=t331 + 0.0329*t179*t389 - 0.1422*t433 - 0.2083*t437 - 0.02*(t412*t433 + t408*t437) - 0.16*(t419*t433 + t412*t437);
  p_output1[35]=t359 - 0.1422*t452 - 0.2083*t457 - 0.02*(t412*t452 + t408*t457) - 0.16*(t419*t452 + t412*t457) + 0.0329*t221*t389*t73;
  p_output1[36]=t469 - 0.2083*t484 - 0.1422*t488 - 0.02*(t145*t484 + t141*t488) - 0.16*(t141*t484 + t153*t488) - 0.0329*(-1.*t104*t221*t50*t56 - 1.*t470*t50*t70) + 0.2429*t221*t50*t73;
  p_output1[37]=t500 - 0.2083*t510 - 0.1422*t514 - 0.02*(t145*t510 + t141*t514) - 0.16*(t141*t510 + t153*t514) + 0.2429*t221*t73*t79 - 0.0329*(-1.*t104*t221*t56*t79 - 1.*t470*t70*t79);
  p_output1[38]=t525 - 0.2083*t536 - 0.1422*t540 - 0.02*(t145*t536 + t141*t540) - 0.16*(t141*t536 + t153*t540) - 0.0329*(-1.*t221*t470 + t104*t56*t70) - 0.2429*t70*t73;
  p_output1[39]=t551 - 0.2083*t565 - 0.1422*t569 - 0.02*(t302*t565 + t309*t569) - 0.16*(t309*t565 + t319*t569) - 0.0817*t50*t70 + 0.035199999999999995*(t221*t269*t50*t56 - 1.*t50*t554*t70);
  p_output1[40]=t580 - 0.2083*t591 - 0.1422*t595 - 0.02*(t302*t591 + t309*t595) - 0.16*(t309*t591 + t319*t595) - 0.0817*t70*t79 + 0.035199999999999995*(t221*t269*t56*t79 - 1.*t554*t70*t79);
  p_output1[41]=-0.0817*t221 + t607 - 0.2083*t617 - 0.1422*t621 - 0.02*(t302*t617 + t309*t621) - 0.16*(t309*t617 + t319*t621) + 0.035199999999999995*(-1.*t221*t554 - 1.*t269*t56*t70);
  p_output1[42]=t469 + t551 - 0.2083*t643 - 0.1422*t647 - 0.02*(t408*t643 + t412*t647) - 0.16*(t412*t643 + t419*t647) - 0.0329*(-1.*t221*t389*t50*t56 - 1.*t50*t633*t70);
  p_output1[43]=t500 + t580 - 0.2083*t667 - 0.1422*t671 - 0.02*(t408*t667 + t412*t671) - 0.16*(t412*t667 + t419*t671) - 0.0329*(-1.*t221*t389*t56*t79 - 1.*t633*t70*t79);
  p_output1[44]=t525 + t607 - 0.2083*t691 - 0.1422*t695 - 0.02*(t408*t691 + t412*t695) - 0.16*(t412*t691 + t419*t695) - 0.0329*(-1.*t221*t633 + t389*t56*t70);
  p_output1[45]=t706 + 0.2429*t709 - 0.2083*t720 - 0.1422*t724 - 0.02*(t145*t720 + t141*t724) - 0.16*(t141*t720 + t153*t724) - 0.0329*(-1.*t104*t175 - 1.*t221*t470*t79);
  p_output1[46]=0.2429*t102 + t735 - 0.0329*(t221*t470*t50 + t741) - 0.2083*t749 - 0.1422*t753 - 0.02*(t145*t749 + t141*t753) - 0.16*(t141*t749 + t153*t753);
  p_output1[47]=0;
  p_output1[48]=t765 - 0.2083*t775 - 0.1422*t779 - 0.02*(t302*t775 + t309*t779) - 0.16*(t309*t775 + t319*t779) - 0.0817*t221*t79 + 0.035199999999999995*(t175*t269 - 1.*t221*t554*t79);
  p_output1[49]=0.0817*t221*t50 + 0.035199999999999995*(t221*t50*t554 + t269*t740) + t791 - 0.2083*t801 - 0.1422*t805 - 0.02*(t302*t801 + t309*t805) - 0.16*(t309*t801 + t319*t805);
  p_output1[50]=0;
  p_output1[51]=t706 + t765 - 0.0329*(-1.*t175*t389 - 1.*t221*t633*t79) - 0.2083*t825 - 0.1422*t829 - 0.02*(t408*t825 + t412*t829) - 0.16*(t412*t825 + t419*t829);
  p_output1[52]=t735 + t791 - 0.0329*(t221*t50*t633 + t841) - 0.2083*t849 - 0.1422*t853 - 0.02*(t408*t849 + t412*t853) - 0.16*(t412*t849 + t419*t853);
  p_output1[53]=0;
  p_output1[54]=-0.0329*(-1.*t104*t221*t50 - 1.*t109*t740) - 0.2083*t110*t869 + 0.1422*t113*t869 - 0.02*(-1.*t113*t141*t869 + t110*t145*t869) - 0.16*(t110*t141*t869 - 1.*t113*t153*t869);
  p_output1[55]=-0.0329*(-1.*t104*t221*t79 - 1.*t109*t883) - 0.2083*t110*t890 + 0.1422*t113*t890 - 0.02*(-1.*t113*t141*t890 + t110*t145*t890) - 0.16*(t110*t141*t890 - 1.*t113*t153*t890);
  p_output1[56]=-0.0329*(-1.*t109*t221*t56 + t104*t70) - 0.2083*t110*t904 + 0.1422*t113*t904 - 0.02*(-1.*t113*t141*t904 + t110*t145*t904) - 0.16*(t110*t141*t904 - 1.*t113*t153*t904);
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=-0.1422*t924 - 0.2083*t928 - 0.16*(t153*t924 + t141*t928) - 0.02*(t141*t924 + t145*t928);
  p_output1[64]=-0.1422*t945 - 0.2083*t949 - 0.16*(t153*t945 + t141*t949) - 0.02*(t141*t945 + t145*t949);
  p_output1[65]=-0.1422*t967 - 0.2083*t971 - 0.16*(t153*t967 + t141*t971) - 0.02*(t141*t967 + t145*t971);
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=-0.02*(-1.*t143*t982 - 1.*t138*t986) - 0.16*(t138*t982 - 1.*t143*t986);
  p_output1[73]=-0.02*(-1.*t143*t995 - 1.*t138*t999) - 0.16*(t138*t995 - 1.*t143*t999);
  p_output1[74]=-0.02*(-1.*t1012*t138 - 1.*t1008*t143) - 0.16*(t1008*t138 - 1.*t1012*t143);
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0.1422*t1026*t391 - 0.2083*t1026*t394 - 0.02*(t1026*t394*t408 - 1.*t1026*t391*t412) - 0.16*(t1026*t394*t412 - 1.*t1026*t391*t419) - 0.0329*(-1.*t221*t389*t50 - 1.*t393*t740);
  p_output1[115]=0.1422*t1044*t391 - 0.2083*t1044*t394 - 0.02*(t1044*t394*t408 - 1.*t1044*t391*t412) - 0.16*(t1044*t394*t412 - 1.*t1044*t391*t419) - 0.0329*(-1.*t221*t389*t79 - 1.*t393*t883);
  p_output1[116]=0.1422*t1058*t391 - 0.2083*t1058*t394 - 0.02*(t1058*t394*t408 - 1.*t1058*t391*t412) - 0.16*(t1058*t394*t412 - 1.*t1058*t391*t419) - 0.0329*(-1.*t221*t393*t56 + t389*t70);
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=-0.1422*t1077 - 0.2083*t1081 - 0.02*(t1081*t408 + t1077*t412) - 0.16*(t1081*t412 + t1077*t419);
  p_output1[124]=-0.1422*t1097 - 0.2083*t1101 - 0.02*(t1101*t408 + t1097*t412) - 0.16*(t1101*t412 + t1097*t419);
  p_output1[125]=-0.1422*t1117 - 0.2083*t1121 - 0.02*(t1121*t408 + t1117*t412) - 0.16*(t1121*t412 + t1117*t419);
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=-0.02*(-1.*t1136*t404 - 1.*t1134*t411) - 0.16*(-1.*t1134*t404 + t1136*t411);
  p_output1[133]=-0.02*(-1.*t1149*t404 - 1.*t1147*t411) - 0.16*(-1.*t1147*t404 + t1149*t411);
  p_output1[134]=-0.02*(-1.*t1162*t404 - 1.*t1160*t411) - 0.16*(-1.*t1160*t404 + t1162*t411);
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0.1422*t1176*t274 - 0.2083*t1176*t283 - 0.02*(t1176*t283*t302 - 1.*t1176*t274*t309) - 0.16*(t1176*t283*t309 - 1.*t1176*t274*t319) + 0.035199999999999995*(-1.*t221*t269*t50 + t798);
  p_output1[139]=0.1422*t1194*t274 - 0.2083*t1194*t283 - 0.02*(t1194*t283*t302 - 1.*t1194*t274*t309) - 0.16*(t1194*t283*t309 - 1.*t1194*t274*t319) + 0.035199999999999995*(t1189 - 1.*t221*t269*t79);
  p_output1[140]=0.1422*t1208*t274 - 0.2083*t1208*t283 - 0.02*(t1208*t283*t302 - 1.*t1208*t274*t309) - 0.16*(t1208*t283*t309 - 1.*t1208*t274*t319) + 0.035199999999999995*(t1211 + t269*t70);
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=-0.1422*t1227 - 0.2083*t1231 - 0.02*(t1231*t302 + t1227*t309) - 0.16*(t1231*t309 + t1227*t319);
  p_output1[148]=-0.1422*t1246 - 0.2083*t1250 - 0.02*(t1250*t302 + t1246*t309) - 0.16*(t1250*t309 + t1246*t319);
  p_output1[149]=-0.1422*t1265 - 0.2083*t1269 - 0.02*(t1269*t302 + t1265*t309) - 0.16*(t1269*t309 + t1265*t319);
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=-0.02*(-1.*t1284*t297 - 1.*t1282*t307) - 0.16*(-1.*t1282*t297 + t1284*t307);
  p_output1[157]=-0.02*(-1.*t1297*t297 - 1.*t1295*t307) - 0.16*(-1.*t1295*t297 + t1297*t307);
  p_output1[158]=-0.02*(-1.*t1310*t297 - 1.*t1308*t307) - 0.16*(-1.*t1308*t297 + t1310*t307);
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_1_func.hh"

namespace SymFunction
{

void j_1_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
