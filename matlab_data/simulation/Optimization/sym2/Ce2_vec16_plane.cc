/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:53:05 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t273;
  double t297;
  double t304;
  double t314;
  double t342;
  double t424;
  double t460;
  double t140;
  double t144;
  double t155;
  double t601;
  double t784;
  double t941;
  double t1025;
  double t656;
  double t1527;
  double t1530;
  double t561;
  double t662;
  double t747;
  double t1677;
  double t1740;
  double t1757;
  double t1820;
  double t1539;
  double t1589;
  double t1610;
  double t1625;
  double t1039;
  double t1074;
  double t1082;
  double t2522;
  double t2553;
  double t2657;
  double t2681;
  double t2797;
  double t2800;
  double t2391;
  double t2395;
  double t2402;
  double t3424;
  double t3452;
  double t3528;
  double t3550;
  double t3555;
  double t3562;
  double t3571;
  double t3290;
  double t3326;
  double t3336;
  double t3354;
  double t3186;
  double t3191;
  double t3239;
  double t1211;
  double t1226;
  double t1246;
  double t1317;
  double t1361;
  double t1381;
  double t4304;
  double t4395;
  double t4403;
  double t4484;
  double t4514;
  double t2964;
  double t4770;
  double t4836;
  double t4853;
  double t4900;
  double t4944;
  double t4950;
  double t2849;
  double t3677;
  double t3543;
  double t5426;
  double t5456;
  double t5553;
  double t5596;
  double t5621;
  double t5854;
  double t5921;
  double t7069;
  double t7071;
  double t7080;
  double t7260;
  double t7316;
  double t6908;
  double t6973;
  double t6977;
  double t6751;
  double t3884;
  double t3886;
  double t3889;
  double t8345;
  double t8407;
  double t5563;
  double t5574;
  double t5930;
  double t5984;
  double t9332;
  double t9336;
  double t6135;
  double t6164;
  double t9460;
  double t9537;
  double t9541;
  double t6286;
  double t6549;
  double t9209;
  double t11773;
  double t9263;
  double t9269;
  double t9273;
  double t9283;
  double t9284;
  double t9285;
  double t10020;
  double t10138;
  double t10200;
  double t10273;
  double t10316;
  double t11175;
  double t11247;
  double t11267;
  double t11269;
  double t11270;
  double t11278;
  double t11475;
  double t11478;
  double t11487;
  double t11498;
  double t11509;
  double t11521;
  double t11690;
  double t11716;
  double t11722;
  double t11740;
  double t11741;
  double t11742;
  double t11971;
  double t12024;
  double t12100;
  double t12131;
  double t12140;
  double t13135;
  double t13139;
  double t13141;
  double t12232;
  double t12235;
  double t12239;
  double t12424;
  double t12443;
  double t12473;
  double t12556;
  double t12562;
  double t12564;
  double t12632;
  double t12634;
  double t12636;
  double t12678;
  double t12682;
  double t12683;
  double t12755;
  double t12774;
  double t12780;
  double t12809;
  double t12825;
  double t12878;
  double t12881;
  double t12887;
  double t12913;
  double t12922;
  double t12925;
  double t12948;
  double t12961;
  double t12962;
  double t12969;
  double t12971;
  double t12973;
  double t13004;
  double t13010;
  double t13025;
  double t13035;
  double t13037;
  double t13064;
  double t13495;
  double t13508;
  double t13524;
  double t13538;
  double t13541;
  double t13547;
  double t13631;
  double t13632;
  double t13639;
  double t13650;
  double t13655;
  double t13747;
  double t13754;
  double t13766;
  double t13777;
  double t13778;
  double t13781;
  double t13772;
  double t13785;
  double t13790;
  double t13850;
  double t13853;
  double t13861;
  double t13864;
  double t13873;
  double t13874;
  double t13794;
  double t13800;
  double t13813;
  double t13817;
  double t13945;
  double t13950;
  double t13958;
  double t13962;
  double t13963;
  double t13964;
  double t13965;
  double t14084;
  double t14090;
  double t14094;
  double t14121;
  double t14126;
  double t14127;
  double t14144;
  double t14151;
  double t14153;
  double t14156;
  double t14161;
  double t14162;
  double t14155;
  double t14169;
  double t14175;
  double t14231;
  double t14232;
  double t14236;
  double t14205;
  double t14221;
  double t14222;
  double t14182;
  double t14188;
  double t14189;
  double t14190;
  double t14308;
  double t14311;
  double t14313;
  double t14343;
  double t14347;
  double t14349;
  double t14381;
  double t14382;
  double t14385;
  double t14394;
  double t14396;
  double t14404;
  double t14410;
  double t13530;
  double t14481;
  double t14482;
  double t14485;
  double t14489;
  double t14490;
  double t14491;
  double t13630;
  double t14487;
  double t14499;
  double t14500;
  double t14524;
  double t14525;
  double t14505;
  double t13657;
  double t14567;
  double t14568;
  double t13576;
  double t13673;
  double t13686;
  double t14545;
  double t14548;
  double t14549;
  double t13897;
  double t13921;
  double t14856;
  double t14857;
  double t14864;
  double t14869;
  double t14872;
  double t14877;
  double t13862;
  double t13888;
  double t14885;
  double t14889;
  double t14895;
  double t14955;
  double t14956;
  double t14964;
  double t13984;
  double t13996;
  double t14012;
  double t14028;
  double t15040;
  double t15042;
  double t15055;
  double t15095;
  double t15098;
  double t15100;
  double t14053;
  double t14075;
  double t14114;
  double t14118;
  double t15153;
  double t15156;
  double t15165;
  double t15179;
  double t15182;
  double t15187;
  double t14225;
  double t14240;
  double t15209;
  double t15213;
  double t15214;
  double t15219;
  double t15224;
  double t15225;
  double t14260;
  double t14267;
  double t15240;
  double t15241;
  double t15242;
  double t15261;
  double t15262;
  double t15265;
  double t14282;
  double t14285;
  double t14318;
  double t14332;
  double t15311;
  double t15313;
  double t15314;
  double t15346;
  double t15353;
  double t15358;
  double t14422;
  double t14427;
  double t14444;
  double t14453;
  double t15426;
  double t15427;
  double t15428;
  double t15451;
  double t15452;
  double t15454;
  double t13261;
  double t13272;
  double t13299;
  double t13304;
  double t13313;
  double t13319;
  double t13184;
  double t13197;
  double t13205;
  double t13234;
  double t13238;
  double t13251;
  double t1635;
  double t1668;
  double t1850;
  double t1862;
  double t1876;
  double t1885;
  double t1915;
  double t1937;
  double t2426;
  double t2937;
  double t2963;
  double t3073;
  double t3108;
  double t3134;
  double t3177;
  double t3574;
  double t3585;
  double t3645;
  double t3670;
  double t3711;
  double t3741;
  double t3772;
  double t13172;
  double t13175;
  double t13176;
  double t3936;
  double t3948;
  double t3951;
  double t4129;
  double t4147;
  double t4525;
  double t4529;
  double t4652;
  double t4678;
  double t4736;
  double t4755;
  double t4884;
  double t4954;
  double t4985;
  double t5013;
  double t5039;
  double t5160;
  double t5261;
  double t5308;
  double t5334;
  double t5581;
  double t6046;
  double t6086;
  double t6128;
  double t6274;
  double t6591;
  double t6644;
  double t6660;
  double t6680;
  double t6752;
  double t6850;
  double t6881;
  double t13159;
  double t13166;
  double t13167;
  double t7114;
  double t7207;
  double t7350;
  double t7359;
  double t7410;
  double t7416;
  double t7433;
  double t7440;
  double t7449;
  double t7490;
  double t7503;
  double t7538;
  double t7539;
  double t7645;
  double t7661;
  double t7680;
  double t7865;
  double t7910;
  double t7932;
  double t8010;
  double t8114;
  double t8193;
  double t8380;
  double t8444;
  double t8445;
  double t8477;
  double t8507;
  double t8619;
  double t8727;
  double t8746;
  double t8890;
  double t8944;
  double t9028;
  double t9055;
  double t9068;
  double t9079;
  double t9191;
  double t13341;
  double t13346;
  double t13351;
  double t9324;
  double t9328;
  double t9377;
  double t9564;
  double t9659;
  double t9664;
  double t9680;
  double t9685;
  double t9692;
  double t9728;
  double t9843;
  double t9942;
  double t10016;
  double t13355;
  double t13387;
  double t13402;
  double t10405;
  double t10818;
  double t10997;
  double t11005;
  double t11053;
  double t13404;
  double t13405;
  double t13410;
  double t11378;
  double t11393;
  double t11408;
  double t11409;
  double t11437;
  double t13421;
  double t13422;
  double t13433;
  double t11536;
  double t11548;
  double t11558;
  double t11608;
  double t11635;
  double t13441;
  double t13443;
  double t13444;
  double t13143;
  double t13151;
  double t13168;
  double t13180;
  double t13228;
  double t13233;
  double t13252;
  double t13301;
  double t13340;
  double t13354;
  double t13403;
  double t13416;
  double t13435;
  double t13446;
  double t13456;
  double t12242;
  double t12246;
  double t12248;
  double t12296;
  double t12300;
  double t12305;
  double t12663;
  double t12687;
  double t12740;
  double t12320;
  double t12323;
  double t12324;
  double t12803;
  double t12830;
  double t12831;
  double t12894;
  double t12927;
  double t12928;
  double t12353;
  double t12362;
  double t12382;
  double t12968;
  double t12976;
  double t12995;
  double t12509;
  double t12522;
  double t12539;
  double t13026;
  double t13066;
  double t13094;
  double t12585;
  double t12588;
  double t12604;
  double t13552;
  double t13554;
  double t13566;
  double t13589;
  double t13617;
  double t13623;
  double t13640;
  double t13648;
  double t13660;
  double t13671;
  double t13683;
  double t13721;
  double t13723;
  double t13724;
  double t13728;
  double t13791;
  double t13838;
  double t13841;
  double t13849;
  double t13863;
  double t13884;
  double t13891;
  double t13896;
  double t13899;
  double t13913;
  double t13930;
  double t13931;
  double t13932;
  double t13935;
  double t13961;
  double t13971;
  double t13972;
  double t13983;
  double t13985;
  double t13992;
  double t14001;
  double t14003;
  double t14011;
  double t14022;
  double t14037;
  double t14038;
  double t14039;
  double t14041;
  double t14057;
  double t14074;
  double t14077;
  double t14081;
  double t14108;
  double t14109;
  double t14117;
  double t14119;
  double t14120;
  double t14130;
  double t14132;
  double t14135;
  double t14136;
  double t14137;
  double t14181;
  double t14191;
  double t14192;
  double t14197;
  double t14230;
  double t14239;
  double t14258;
  double t14259;
  double t14264;
  double t14266;
  double t14270;
  double t14274;
  double t14275;
  double t14280;
  double t14283;
  double t14284;
  double t14300;
  double t14303;
  double t14314;
  double t14327;
  double t14329;
  double t14337;
  double t14341;
  double t14355;
  double t14361;
  double t14369;
  double t14371;
  double t14379;
  double t14391;
  double t14413;
  double t14414;
  double t14419;
  double t14423;
  double t14425;
  double t14428;
  double t14443;
  double t14445;
  double t14447;
  double t14454;
  double t14455;
  double t14472;
  double t14475;
  double t14501;
  double t14502;
  double t14515;
  double t14516;
  double t14536;
  double t14540;
  double t14543;
  double t14551;
  double t14569;
  double t14583;
  double t14587;
  double t14589;
  double t14590;
  double t14592;
  double t14593;
  double t14612;
  double t14630;
  double t14651;
  double t14660;
  double t14669;
  double t14673;
  double t14677;
  double t14680;
  double t14691;
  double t14692;
  double t14696;
  double t14700;
  double t14707;
  double t14711;
  double t14712;
  double t14730;
  double t14731;
  double t14736;
  double t14739;
  double t14746;
  double t14758;
  double t14759;
  double t14761;
  double t14765;
  double t14768;
  double t14784;
  double t14787;
  double t14797;
  double t14799;
  double t14803;
  double t14821;
  double t14852;
  double t14865;
  double t14879;
  double t14883;
  double t14884;
  double t14896;
  double t14897;
  double t14900;
  double t14929;
  double t14932;
  double t14940;
  double t14946;
  double t14999;
  double t15003;
  double t15008;
  double t15013;
  double t15017;
  double t15020;
  double t15021;
  double t15025;
  double t15026;
  double t15027;
  double t15034;
  double t15058;
  double t15060;
  double t15068;
  double t15081;
  double t15082;
  double t15083;
  double t15091;
  double t15101;
  double t15106;
  double t15108;
  double t15112;
  double t15113;
  double t15115;
  double t15120;
  double t15122;
  double t15129;
  double t15140;
  double t15141;
  double t15166;
  double t15167;
  double t15168;
  double t15169;
  double t15170;
  double t15173;
  double t15178;
  double t15188;
  double t15194;
  double t15199;
  double t15200;
  double t15201;
  double t15203;
  double t15204;
  double t15215;
  double t15229;
  double t15232;
  double t15235;
  double t15243;
  double t15244;
  double t15245;
  double t15251;
  double t15253;
  double t15254;
  double t15259;
  double t15266;
  double t15267;
  double t15281;
  double t15290;
  double t15291;
  double t15298;
  double t15299;
  double t15301;
  double t15308;
  double t15309;
  double t15310;
  double t15315;
  double t15316;
  double t15317;
  double t15319;
  double t15325;
  double t15334;
  double t15335;
  double t15365;
  double t15370;
  double t15386;
  double t15393;
  double t15395;
  double t15404;
  double t15405;
  double t15406;
  double t15407;
  double t15414;
  double t15422;
  double t15431;
  double t15433;
  double t15434;
  double t15439;
  double t15442;
  double t15446;
  double t15450;
  double t15455;
  double t15457;
  double t15459;
  double t15460;
  double t15463;
  double t12156;
  double t12218;
  double t12272;
  double t12310;
  double t12325;
  double t12347;
  double t12383;
  double t12546;
  double t12606;
  double t12744;
  double t12863;
  double t12937;
  double t12999;
  double t13108;
  double t13125;
  double t15578;
  double t15579;
  double t15580;
  double t15581;
  double t15593;
  double t15598;
  double t15599;
  double t15614;
  double t15618;
  double t15619;
  double t15621;
  double t15626;
  double t15627;
  double t15629;
  double t15637;
  double t14544;
  double t14588;
  double t14659;
  double t14747;
  double t14811;
  double t15007;
  double t15018;
  double t15107;
  double t15114;
  double t15198;
  double t15202;
  double t15278;
  double t15294;
  double t15375;
  double t15400;
  double t15458;
  double t15464;
  double t15465;
  double t15932;
  double t15933;
  double t15934;
  double t15936;
  double t15937;
  double t15938;
  double t15940;
  double t15946;
  double t15948;
  double t15952;
  double t15954;
  double t15961;
  double t15962;
  double t15964;
  double t15966;
  double t15967;
  double t15970;
  double t15973;
  double t15721;
  double t15725;
  double t15727;
  double t15736;
  double t15738;
  double t15739;
  double t15742;
  double t15743;
  double t15744;
  double t15748;
  double t15751;
  double t15755;
  double t15757;
  double t15758;
  double t15759;
  double t15764;
  double t15771;
  double t15774;
  double t16032;
  double t16033;
  double t16034;
  double t13474;
  double t13482;
  double t13737;
  double t13845;
  double t13941;
  double t13975;
  double t14052;
  double t14133;
  double t14143;
  double t14193;
  double t14281;
  double t14362;
  double t14380;
  double t14415;
  double t14477;
  double t14478;
  double t15904;
  double t15906;
  double t15907;
  double t15909;
  double t15910;
  double t15913;
  double t15915;
  double t15916;
  double t15917;
  double t15918;
  double t15919;
  double t15922;
  double t15924;
  double t15926;
  double t15928;
  double t15930;
  double t15676;
  double t15677;
  double t15680;
  double t15683;
  double t15685;
  double t15687;
  double t15688;
  double t15689;
  double t15690;
  double t15696;
  double t15703;
  double t15705;
  double t15706;
  double t15708;
  double t15716;
  double t15717;
  double t16037;
  double t16038;
  double t16039;
  double t16028;
  double t16029;
  double t16030;
  double t16035;
  double t16041;
  double t16042;
  double t16043;
  double t16044;
  double t16045;
  double t16046;
  double t16047;
  double t16048;
  double t16050;
  double t16052;
  double t16053;
  double t16054;
  double t16055;
  double t16056;
  double t16057;
  double t16187;
  double t16194;
  double t4661;
  double t4761;
  double t5359;
  double t16222;
  double t16223;
  double t7065;
  double t7644;
  double t7711;
  double t7991;
  double t8273;
  double t16212;
  double t16213;
  double t16217;
  double t16219;
  double t9320;
  double t10384;
  double t11335;
  double t11535;
  double t11752;
  double t15826;
  double t15827;
  double t15828;
  double t15830;
  double t15831;
  double t15832;
  double t15833;
  double t15836;
  double t15844;
  double t15845;
  double t15851;
  double t15854;
  double t15858;
  double t15530;
  double t15531;
  double t15534;
  double t15537;
  double t15538;
  double t15542;
  double t15547;
  double t15550;
  double t15565;
  double t15568;
  double t15569;
  double t15570;
  double t15571;
  double t16117;
  double t16121;
  double t16123;
  double t16124;
  double t16125;
  double t16126;
  double t16127;
  double t16128;
  double t16129;
  double t16130;
  double t16131;
  double t16137;
  double t16138;
  double t16006;
  double t16007;
  double t16008;
  double t16009;
  double t16010;
  double t16011;
  double t16012;
  double t16013;
  double t16014;
  double t16015;
  double t16017;
  double t16019;
  double t16021;
  double t16186;
  double t16189;
  double t16195;
  double t16196;
  double t3259;
  double t16273;
  double t16274;
  double t3891;
  double t3908;
  double t3915;
  double t16267;
  double t16268;
  double t16270;
  double t16271;
  double t15811;
  double t15814;
  double t15815;
  double t15821;
  double t15496;
  double t15514;
  double t15516;
  double t15519;
  double t16102;
  double t16104;
  double t16105;
  double t16106;
  double t15994;
  double t15995;
  double t15997;
  double t15998;
  double t16179;
  double t16180;
  double t1305;
  double t1518;
  double t16318;
  double t16319;
  double t16321;
  double t16322;
  double t15786;
  double t15790;
  double t15485;
  double t15486;
  double t16095;
  double t16096;
  double t15988;
  double t15989;
  double t16172;
  double t16175;
  double t16176;
  double t773;
  double t1107;
  double t1152;
  double t15782;
  double t15783;
  double t15784;
  double t15480;
  double t15481;
  double t15482;
  double t16088;
  double t16090;
  double t16092;
  double t15982;
  double t15983;
  double t15985;
  t273 = Cos(var1[17]);
  t297 = Sin(var1[16]);
  t304 = -1.*t273*t297;
  t314 = Cos(var1[16]);
  t342 = Sin(var1[17]);
  t424 = -1.*t314*t342;
  t460 = 0. + t304 + t424;
  t140 = Cos(var1[4]);
  t144 = Cos(var1[15]);
  t155 = Cos(var1[5]);
  t601 = Sin(var1[15]);
  t784 = t314*t273;
  t941 = -1.*t297*t342;
  t1025 = 0. + t784 + t941;
  t656 = Sin(var1[5]);
  t1527 = -1.*t273;
  t1530 = 1. + t1527;
  t561 = -1.*t144*t155*t460;
  t662 = t601*t460*t656;
  t747 = t561 + t662;
  t1677 = -0.336601*t1530;
  t1740 = -0.356601*t273;
  t1757 = -0.16*t342;
  t1820 = 0. + t1677 + t1740 + t1757;
  t1539 = -0.20833*t1530;
  t1589 = -0.36833*t273;
  t1610 = 0.020000000000000018*t342;
  t1625 = 0. + t1539 + t1589 + t1610;
  t1039 = -1.*t144*t155*t1025;
  t1074 = t601*t1025*t656;
  t1082 = t1039 + t1074;
  t2522 = -1.*t314;
  t2553 = 1. + t2522;
  t2657 = -0.194401*t2553;
  t2681 = -0.234401*t314;
  t2797 = -0.04*t297;
  t2800 = t2657 + t2681 + t2797;
  t2391 = -0.04*t314;
  t2395 = 0.04*t297;
  t2402 = t2391 + t2395;
  t3424 = t273*t297;
  t3452 = t314*t342;
  t3528 = 0. + t3424 + t3452;
  t3550 = -0.194401*t297;
  t3555 = -1.*t297*t1820;
  t3562 = t314*t1625;
  t3571 = 0. + t3550 + t3555 + t3562;
  t3290 = -0.194401*t2553;
  t3326 = t314*t1820;
  t3336 = t297*t1625;
  t3354 = 0. + t3290 + t3326 + t3336;
  t3186 = -1.*t155*t601;
  t3191 = -1.*t144*t656;
  t3239 = t3186 + t3191;
  t1211 = -1.*t144*t314*t155;
  t1226 = t314*t601*t656;
  t1246 = t1211 + t1226;
  t1317 = t144*t155*t297;
  t1361 = -1.*t601*t297*t656;
  t1381 = t1317 + t1361;
  t4304 = -1.*t144;
  t4395 = 1. + t4304;
  t4403 = 0.081715*t4395;
  t4484 = 0.061715*t144;
  t4514 = t4403 + t4484;
  t2964 = t314*t2800;
  t4770 = 0.055855*t601;
  t4836 = t144*t2402;
  t4853 = t4770 + t4836;
  t4900 = 0.13757*t144;
  t4944 = -1.*t601*t2402;
  t4950 = t4403 + t4900 + t4944;
  t2849 = -1.*t2800*t297;
  t3677 = t3354*t1025;
  t3543 = -1.*t3354*t3528;
  t5426 = 0.035165*t601;
  t5456 = t144*t3571;
  t5553 = t5426 + t5456;
  t5596 = 0.081715*t4395;
  t5621 = 0.11688*t144;
  t5854 = -1.*t601*t3571;
  t5921 = t5596 + t5621 + t5854;
  t7069 = -0.055855*t601;
  t7071 = -1.*t144*t2402;
  t7080 = t7069 + t7071;
  t7260 = 0.055855*t144;
  t7316 = t7260 + t4944;
  t6908 = t144*t155;
  t6973 = -1.*t601*t656;
  t6977 = t6908 + t6973;
  t6751 = t4514*t144;
  t3884 = -1.*t144*t155;
  t3886 = t601*t656;
  t3889 = t3884 + t3886;
  t8345 = 0. + t601;
  t8407 = 0. + t144;
  t5563 = t144*t460;
  t5574 = 0. + t5563;
  t5930 = -1.*t601*t460;
  t5984 = 0. + t5930;
  t9332 = 0.035165*t144;
  t9336 = t9332 + t5854;
  t6135 = t144*t1025;
  t6164 = 0. + t6135;
  t9460 = -0.035165*t601;
  t9537 = -1.*t144*t3571;
  t9541 = t9460 + t9537;
  t6286 = -1.*t601*t1025;
  t6549 = 0. + t6286;
  t9209 = Sin(var1[4]);
  t11773 = Power(t140,2);
  t9263 = t297*t9209;
  t9269 = -1.*t314*t155*t601;
  t9273 = -1.*t144*t314*t656;
  t9283 = t9269 + t9273;
  t9284 = t140*t9283;
  t9285 = t9263 + t9284;
  t10020 = t8407*t155;
  t10138 = -1.*t8345*t656;
  t10200 = 0. + t10020 + t10138;
  t10273 = t140*t10200;
  t10316 = 0. + t10273;
  t11175 = t314*t9209;
  t11247 = t155*t601*t297;
  t11267 = t144*t297*t656;
  t11269 = t11247 + t11267;
  t11270 = t140*t11269;
  t11278 = t11175 + t11270;
  t11475 = t1025*t9209;
  t11478 = t155*t5984;
  t11487 = -1.*t5574*t656;
  t11498 = 0. + t11478 + t11487;
  t11509 = t140*t11498;
  t11521 = 0. + t11475 + t11509;
  t11690 = t3528*t9209;
  t11716 = t155*t6549;
  t11722 = -1.*t6164*t656;
  t11740 = 0. + t11716 + t11722;
  t11741 = t140*t11740;
  t11742 = 0. + t11690 + t11741;
  t11971 = Cos(var1[3]);
  t12024 = -1.*t11971*t9209*t3239;
  t12100 = Sin(var1[3]);
  t12131 = t12100*t6977;
  t12140 = t12024 + t12131;
  t13135 = t12100*t9209*t3239;
  t13139 = t11971*t6977;
  t13141 = t13135 + t13139;
  t12232 = t155*t601;
  t12235 = t144*t656;
  t12239 = t12232 + t12235;
  t12424 = -1.*t155*t601*t460;
  t12443 = -1.*t144*t460*t656;
  t12473 = t12424 + t12443;
  t12556 = -1.*t155*t601*t1025;
  t12562 = -1.*t144*t1025*t656;
  t12564 = t12556 + t12562;
  t12632 = t144*t314*t155;
  t12634 = -1.*t314*t601*t656;
  t12636 = t12632 + t12634;
  t12678 = t140*t297;
  t12682 = -1.*t9209*t9283;
  t12683 = t12678 + t12682;
  t12755 = t155*t8345;
  t12774 = t8407*t656;
  t12780 = 0. + t12755 + t12774;
  t12809 = -1.*t9209*t10200;
  t12825 = 0. + t12809;
  t12878 = -1.*t144*t155*t297;
  t12881 = t601*t297*t656;
  t12887 = t12878 + t12881;
  t12913 = t314*t140;
  t12922 = -1.*t9209*t11269;
  t12925 = t12913 + t12922;
  t12948 = t155*t5574;
  t12961 = t5984*t656;
  t12962 = 0. + t12948 + t12961;
  t12969 = t140*t1025;
  t12971 = -1.*t9209*t11498;
  t12973 = 0. + t12969 + t12971;
  t13004 = t155*t6164;
  t13010 = t6549*t656;
  t13025 = 0. + t13004 + t13010;
  t13035 = t140*t3528;
  t13037 = -1.*t9209*t11740;
  t13064 = 0. + t13035 + t13037;
  t13495 = -0.02*t155*t601;
  t13508 = t4514*t656;
  t13524 = t13495 + t13508;
  t13538 = t4514*t155;
  t13541 = 0.02*t601*t656;
  t13547 = t13538 + t13541;
  t13631 = 0.02*t155*t601;
  t13632 = 0.02*t144*t656;
  t13639 = t13631 + t13632;
  t13650 = -0.02*t144*t155;
  t13655 = t13650 + t13541;
  t13747 = t155*t4950;
  t13754 = -1.*t4853*t656;
  t13766 = t13747 + t13754;
  t13777 = t155*t4853;
  t13778 = t4950*t656;
  t13781 = t13777 + t13778;
  t13772 = -1.*t6977*t13766;
  t13785 = -1.*t12239*t13781;
  t13790 = t13772 + t13785;
  t13850 = t155*t7316;
  t13853 = t7080*t656;
  t13861 = t13850 + t13853;
  t13864 = t155*t7080;
  t13873 = -1.*t7316*t656;
  t13874 = t13864 + t13873;
  t13794 = t2800*t297;
  t13800 = t9283*t13766;
  t13813 = t12636*t13781;
  t13817 = t13794 + t13800 + t13813;
  t13945 = t6977*t13766;
  t13950 = t12239*t13781;
  t13958 = t13945 + t13950;
  t13962 = -1.*t314*t2800;
  t13963 = -1.*t13766*t11269;
  t13964 = -1.*t13781*t12887;
  t13965 = t13962 + t13963 + t13964;
  t14084 = -1.*t9283*t13766;
  t14090 = -1.*t12636*t13781;
  t14094 = t2849 + t14084 + t14090;
  t14121 = t13766*t11269;
  t14126 = t13781*t12887;
  t14127 = t2964 + t14121 + t14126;
  t14144 = t155*t5921;
  t14151 = -1.*t5553*t656;
  t14153 = 0. + t14144 + t14151;
  t14156 = t155*t5553;
  t14161 = t5921*t656;
  t14162 = 0. + t14156 + t14161;
  t14155 = t10200*t14153;
  t14169 = t12780*t14162;
  t14175 = 0. + t14155 + t14169;
  t14231 = t155*t9541;
  t14232 = -1.*t9336*t656;
  t14236 = t14231 + t14232;
  t14205 = t155*t9336;
  t14221 = t9541*t656;
  t14222 = t14205 + t14221;
  t14182 = -1.*t3354*t1025;
  t14188 = -1.*t14153*t11498;
  t14189 = -1.*t14162*t12962;
  t14190 = t14182 + t14188 + t14189;
  t14308 = t14153*t11498;
  t14311 = t14162*t12962;
  t14313 = t3677 + t14308 + t14311;
  t14343 = -1.*t14153*t11740;
  t14347 = -1.*t14162*t13025;
  t14349 = t3543 + t14343 + t14347;
  t14381 = -1.*t10200*t14153;
  t14382 = -1.*t12780*t14162;
  t14385 = 0. + t14381 + t14382;
  t14394 = t3354*t3528;
  t14396 = t14153*t11740;
  t14404 = t14162*t13025;
  t14410 = t14394 + t14396 + t14404;
  t13530 = t13524*t6977;
  t14481 = -0.194401*t9209;
  t14482 = t140*t13547;
  t14485 = t14481 + t14482;
  t14489 = -0.194401*t140;
  t14490 = -1.*t9209*t13547;
  t14491 = t14489 + t14490;
  t13630 = -1.*t13524*t6977;
  t14487 = -1.*t9209*t14485;
  t14499 = -1.*t140*t14491;
  t14500 = t14487 + t14499;
  t14524 = t140*t3239*t14485;
  t14525 = -1.*t9209*t3239*t14491;
  t14505 = Power(t9209,2);
  t13657 = -1.*t12239*t13655;
  t14567 = -1.*t140*t3239*t14485;
  t14568 = t9209*t3239*t14491;
  t13576 = -1.*t13524*t12239;
  t13673 = t13524*t3239;
  t13686 = t6977*t13655;
  t14545 = t9209*t14485;
  t14548 = t140*t14491;
  t14549 = t14545 + t14548;
  t13897 = -1.*t12239*t13861;
  t13921 = -1.*t6977*t13781;
  t14856 = t2800*t9209;
  t14857 = t140*t13766;
  t14864 = t14856 + t14857;
  t14869 = t140*t2800;
  t14872 = -1.*t9209*t13766;
  t14877 = t14869 + t14872;
  t13862 = t12636*t13861;
  t13888 = t9283*t13781;
  t14885 = -1.*t140*t6977*t14864;
  t14889 = t9209*t6977*t14877;
  t14895 = t13785 + t14885 + t14889;
  t14955 = t9285*t14864;
  t14956 = t12683*t14877;
  t14964 = t13813 + t14955 + t14956;
  t13984 = t12239*t13861;
  t13996 = t6977*t13781;
  t14012 = -1.*t13781*t11269;
  t14028 = -1.*t13861*t12887;
  t15040 = t140*t6977*t14864;
  t15042 = -1.*t9209*t6977*t14877;
  t15055 = t13950 + t15040 + t15042;
  t15095 = -1.*t14864*t11278;
  t15098 = -1.*t14877*t12925;
  t15100 = t13964 + t15095 + t15098;
  t14053 = -1.*t12636*t13861;
  t14075 = -1.*t9283*t13781;
  t14114 = t13781*t11269;
  t14118 = t13861*t12887;
  t15153 = -1.*t9285*t14864;
  t15156 = -1.*t12683*t14877;
  t15165 = t14090 + t15153 + t15156;
  t15179 = t14864*t11278;
  t15182 = t14877*t12925;
  t15187 = t14126 + t15179 + t15182;
  t14225 = t12780*t14222;
  t14240 = t6977*t14162;
  t15209 = t3354*t9209;
  t15213 = t140*t14153;
  t15214 = 0. + t15209 + t15213;
  t15219 = t140*t3354;
  t15224 = -1.*t9209*t14153;
  t15225 = 0. + t15219 + t15224;
  t14260 = -1.*t14162*t12473;
  t14267 = -1.*t14222*t12962;
  t15240 = t10316*t15214;
  t15241 = t12825*t15225;
  t15242 = t14169 + t15240 + t15241;
  t15261 = -1.*t15214*t11521;
  t15262 = -1.*t15225*t12973;
  t15265 = t14189 + t15261 + t15262;
  t14282 = t14162*t12473;
  t14285 = t14222*t12962;
  t14318 = -1.*t14162*t12564;
  t14332 = -1.*t14222*t13025;
  t15311 = t15214*t11521;
  t15313 = t15225*t12973;
  t15314 = t14311 + t15311 + t15313;
  t15346 = -1.*t15214*t11742;
  t15353 = -1.*t15225*t13064;
  t15358 = t14347 + t15346 + t15353;
  t14422 = -1.*t12780*t14222;
  t14427 = -1.*t6977*t14162;
  t14444 = t14162*t12564;
  t14453 = t14222*t13025;
  t15426 = -1.*t10316*t15214;
  t15427 = -1.*t12825*t15225;
  t15428 = t14382 + t15426 + t15427;
  t15451 = t15214*t11742;
  t15452 = t15225*t13064;
  t15454 = t14404 + t15451 + t15452;
  t13261 = t11971*t12473;
  t13272 = t12100*t9209*t747;
  t13299 = t13261 + t13272;
  t13304 = t11971*t12564;
  t13313 = t12100*t9209*t1082;
  t13319 = t13304 + t13313;
  t13184 = t11971*t9283;
  t13197 = t12100*t9209*t1246;
  t13205 = t13184 + t13197;
  t13234 = t11971*t11269;
  t13238 = t12100*t9209*t1381;
  t13251 = t13234 + t13238;
  t1635 = t273*t1625;
  t1668 = 0.194401*t342;
  t1850 = t1820*t342;
  t1862 = 0. + t1635 + t1668 + t1850;
  t1876 = -0.194401*t273;
  t1885 = -1.*t273*t1820;
  t1915 = t1625*t342;
  t1937 = 0. + t1876 + t1885 + t1915;
  t2426 = -1.*t314*t2402;
  t2937 = t2426 + t2849;
  t2963 = t314*t2937;
  t3073 = -1.*t2402*t297;
  t3108 = t2964 + t3073;
  t3134 = t297*t3108;
  t3177 = t2963 + t3134;
  t3574 = -1.*t3571*t1025;
  t3585 = 0. + t3543 + t3574;
  t3645 = t1025*t3585;
  t3670 = t3571*t460;
  t3711 = 0. + t3670 + t3677;
  t3741 = t3528*t3711;
  t3772 = 0. + t3645 + t3741;
  t13172 = t11971*t3239;
  t13175 = t12100*t9209*t3889;
  t13176 = t13172 + t13175;
  t3936 = -0.081715*t460;
  t3948 = -0.11688*t3528;
  t3951 = 0. + t3936 + t3948;
  t4129 = 0.035165*t1025;
  t4147 = 0. + t4129;
  t4525 = -1.*t4514*t601;
  t4529 = -0.02*t144*t601;
  t4652 = t4525 + t4529;
  t4678 = t4514*t601;
  t4736 = 0.02*t144*t601;
  t4755 = t4678 + t4736;
  t4884 = -1.*t144*t4853*t297;
  t4954 = t601*t4950*t297;
  t4985 = t2964 + t4884 + t4954;
  t5013 = t297*t4985;
  t5039 = -1.*t144*t314*t4853;
  t5160 = t314*t601*t4950;
  t5261 = t5039 + t5160 + t2849;
  t5308 = t314*t5261;
  t5334 = t5013 + t5308;
  t5581 = t5553*t5574;
  t6046 = t5921*t5984;
  t6086 = t3677 + t5581 + t6046;
  t6128 = t3528*t6086;
  t6274 = -1.*t5553*t6164;
  t6591 = -1.*t5921*t6549;
  t6644 = t3543 + t6274 + t6591;
  t6660 = t1025*t6644;
  t6680 = 0. + t6128 + t6660;
  t6752 = Power(t144,2);
  t6850 = 0.02*t6752;
  t6881 = t6751 + t6850;
  t13159 = t11971*t12239;
  t13166 = t12100*t9209*t6977;
  t13167 = t13159 + t13166;
  t7114 = t314*t601*t7080;
  t7207 = t314*t601*t4853;
  t7350 = -1.*t144*t314*t7316;
  t7359 = t144*t314*t4950;
  t7410 = t7114 + t7207 + t7350 + t7359;
  t7416 = t314*t7410;
  t7433 = t601*t7080*t297;
  t7440 = t601*t4853*t297;
  t7449 = -1.*t144*t7316*t297;
  t7490 = t144*t4950*t297;
  t7503 = t7433 + t7440 + t7449 + t7490;
  t7538 = t297*t7503;
  t7539 = t7416 + t7538;
  t7645 = Power(t601,2);
  t7661 = -0.02*t7645;
  t7680 = t6751 + t7661;
  t7865 = t601*t4853;
  t7910 = t144*t4950;
  t7932 = t7865 + t7910;
  t8010 = -1.*t601*t4853;
  t8114 = -1.*t144*t4950;
  t8193 = t8010 + t8114;
  t8380 = -1.*t8345*t5553;
  t8444 = -1.*t8407*t5921;
  t8445 = 0. + t8380 + t8444;
  t8477 = t8445*t3528;
  t8507 = 0. + t8477;
  t8619 = t8345*t5553;
  t8727 = t8407*t5921;
  t8746 = 0. + t8619 + t8727;
  t8890 = t8746*t1025;
  t8944 = 0. + t8890;
  t9028 = t144*t7080;
  t9055 = t144*t4853;
  t9068 = t601*t7316;
  t9079 = -1.*t601*t4950;
  t9191 = t9028 + t9055 + t9068 + t9079;
  t13341 = t11971*t12636;
  t13346 = -1.*t12100*t12683;
  t13351 = t13341 + t13346;
  t9324 = -1.*t601*t5553*t460;
  t9328 = -1.*t144*t5921*t460;
  t9377 = t9336*t5574;
  t9564 = t9541*t5984;
  t9659 = t9324 + t9328 + t9377 + t9564;
  t9664 = t3528*t9659;
  t9680 = t601*t5553*t1025;
  t9685 = t144*t5921*t1025;
  t9692 = -1.*t9336*t6164;
  t9728 = -1.*t9541*t6549;
  t9843 = t9680 + t9685 + t9692 + t9728;
  t9942 = t1025*t9843;
  t10016 = t9664 + t9942;
  t13355 = t11971*t12780;
  t13387 = -1.*t12100*t12825;
  t13402 = 0. + t13355 + t13387;
  t10405 = -1.*t144*t7080;
  t10818 = -1.*t144*t4853;
  t10997 = -1.*t601*t7316;
  t11005 = t601*t4950;
  t11053 = t10405 + t10818 + t10997 + t11005;
  t13404 = t11971*t12887;
  t13405 = -1.*t12100*t12925;
  t13410 = t13404 + t13405;
  t11378 = -1.*t8407*t9541;
  t11393 = -1.*t144*t5553;
  t11408 = -1.*t8345*t9336;
  t11409 = t601*t5921;
  t11437 = t11378 + t11393 + t11408 + t11409;
  t13421 = t11971*t12962;
  t13422 = -1.*t12100*t12973;
  t13433 = 0. + t13421 + t13422;
  t11536 = t8407*t9541;
  t11548 = t144*t5553;
  t11558 = t8345*t9336;
  t11608 = -1.*t601*t5921;
  t11635 = t11536 + t11548 + t11558 + t11608;
  t13441 = t11971*t13025;
  t13443 = -1.*t12100*t13064;
  t13444 = 0. + t13441 + t13443;
  t13143 = 2.622*t140*t6977*t13141;
  t13151 = 1.095*t140*t3889*t13141;
  t13168 = 2.622*t140*t3239*t13167;
  t13180 = 1.095*t140*t3239*t13176;
  t13228 = 1.527*t9285*t13205;
  t13233 = 0.241*t13141*t10316;
  t13252 = 1.527*t11278*t13251;
  t13301 = 0.241*t13299*t11521;
  t13340 = 0.241*t13319*t11742;
  t13354 = 1.527*t140*t1246*t13351;
  t13403 = 0.241*t140*t3239*t13402;
  t13416 = 1.527*t140*t1381*t13410;
  t13435 = 0.241*t140*t747*t13433;
  t13446 = 0.241*t140*t1082*t13444;
  t13456 = t13143 + t13151 + t13168 + t13180 + t13228 + t13233 + t13252 + t13301 + t13340 + t13354 + t13403 + t13416 + t13435 + t13446;
  t12242 = t12100*t12239;
  t12246 = -1.*t11971*t9209*t6977;
  t12248 = t12242 + t12246;
  t12296 = t12100*t3239;
  t12300 = -1.*t11971*t9209*t3889;
  t12305 = t12296 + t12300;
  t12663 = t12100*t12636;
  t12687 = t11971*t12683;
  t12740 = t12663 + t12687;
  t12320 = t12100*t9283;
  t12323 = -1.*t11971*t9209*t1246;
  t12324 = t12320 + t12323;
  t12803 = t12100*t12780;
  t12830 = t11971*t12825;
  t12831 = 0. + t12803 + t12830;
  t12894 = t12100*t12887;
  t12927 = t11971*t12925;
  t12928 = t12894 + t12927;
  t12353 = t12100*t11269;
  t12362 = -1.*t11971*t9209*t1381;
  t12382 = t12353 + t12362;
  t12968 = t12100*t12962;
  t12976 = t11971*t12973;
  t12995 = 0. + t12968 + t12976;
  t12509 = t12100*t12473;
  t12522 = -1.*t11971*t9209*t747;
  t12539 = t12509 + t12522;
  t13026 = t12100*t13025;
  t13066 = t11971*t13064;
  t13094 = 0. + t13026 + t13066;
  t12585 = t12100*t12564;
  t12588 = -1.*t11971*t9209*t1082;
  t12604 = t12585 + t12588;
  t13552 = t3239*t13547;
  t13554 = t13530 + t13552;
  t13566 = t6977*t13554;
  t13589 = -1.*t6977*t13547;
  t13617 = t13576 + t13589;
  t13623 = t3239*t13617;
  t13640 = -1.*t13639*t6977;
  t13648 = -1.*t3239*t13547;
  t13660 = t13630 + t13640 + t13648 + t13657;
  t13671 = t6977*t13660;
  t13683 = t3239*t13639;
  t13721 = t13547*t3889;
  t13723 = t13673 + t13683 + t13686 + t13721;
  t13724 = t12239*t13723;
  t13728 = t13566 + t13623 + t13671 + t13724;
  t13791 = t12636*t13790;
  t13838 = t12239*t13817;
  t13841 = t13791 + t13838;
  t13849 = t9283*t13790;
  t13863 = t1246*t13766;
  t13884 = t9283*t13874;
  t13891 = t13862 + t13863 + t13884 + t13888;
  t13896 = t12239*t13891;
  t13899 = -1.*t3239*t13766;
  t13913 = -1.*t6977*t13874;
  t13930 = t13897 + t13899 + t13913 + t13921;
  t13931 = t12636*t13930;
  t13932 = t6977*t13817;
  t13935 = t13849 + t13896 + t13931 + t13932;
  t13961 = t12887*t13958;
  t13971 = t12239*t13965;
  t13972 = t13961 + t13971;
  t13983 = t11269*t13958;
  t13985 = t3239*t13766;
  t13992 = t6977*t13874;
  t14001 = t13984 + t13985 + t13992 + t13996;
  t14003 = t12887*t14001;
  t14011 = -1.*t13874*t11269;
  t14022 = -1.*t13766*t1381;
  t14037 = t14011 + t14012 + t14022 + t14028;
  t14038 = t12239*t14037;
  t14039 = t6977*t13965;
  t14041 = t13983 + t14003 + t14038 + t14039;
  t14057 = -1.*t1246*t13766;
  t14074 = -1.*t9283*t13874;
  t14077 = t14053 + t14057 + t14074 + t14075;
  t14081 = t12887*t14077;
  t14108 = t11269*t14094;
  t14109 = t13874*t11269;
  t14117 = t13766*t1381;
  t14119 = t14109 + t14114 + t14117 + t14118;
  t14120 = t12636*t14119;
  t14130 = t9283*t14127;
  t14132 = t14081 + t14108 + t14120 + t14130;
  t14135 = t12887*t14094;
  t14136 = t12636*t14127;
  t14137 = t14135 + t14136;
  t14181 = t12962*t14175;
  t14191 = t12780*t14190;
  t14192 = t14181 + t14191;
  t14197 = t12473*t14175;
  t14230 = t3239*t14153;
  t14239 = t10200*t14236;
  t14258 = t14225 + t14230 + t14239 + t14240;
  t14259 = t12962*t14258;
  t14264 = -1.*t14153*t747;
  t14266 = -1.*t14236*t11498;
  t14270 = t14260 + t14264 + t14266 + t14267;
  t14274 = t12780*t14270;
  t14275 = t6977*t14190;
  t14280 = t14197 + t14259 + t14274 + t14275;
  t14283 = t14153*t747;
  t14284 = t14236*t11498;
  t14300 = t14282 + t14283 + t14284 + t14285;
  t14303 = t13025*t14300;
  t14314 = t12564*t14313;
  t14327 = -1.*t14153*t1082;
  t14329 = -1.*t14236*t11740;
  t14337 = t14318 + t14327 + t14329 + t14332;
  t14341 = t12962*t14337;
  t14355 = t12473*t14349;
  t14361 = t14303 + t14314 + t14341 + t14355;
  t14369 = t13025*t14313;
  t14371 = t12962*t14349;
  t14379 = 0. + t14369 + t14371;
  t14391 = t13025*t14385;
  t14413 = t12780*t14410;
  t14414 = t14391 + t14413;
  t14419 = t12564*t14385;
  t14423 = -1.*t3239*t14153;
  t14425 = -1.*t10200*t14236;
  t14428 = t14422 + t14423 + t14425 + t14427;
  t14443 = t13025*t14428;
  t14445 = t14153*t1082;
  t14447 = t14236*t11740;
  t14454 = t14444 + t14445 + t14447 + t14453;
  t14455 = t12780*t14454;
  t14472 = t6977*t14410;
  t14475 = t14419 + t14443 + t14455 + t14472;
  t14501 = t140*t3239*t14500;
  t14502 = t11773*t13639*t6977;
  t14515 = t14505*t13639*t6977;
  t14516 = t12239*t13655;
  t14536 = t13530 + t14502 + t14515 + t14516 + t14524 + t14525;
  t14540 = t9209*t14536;
  t14543 = t14501 + t14540;
  t14551 = t140*t3239*t14549;
  t14569 = t13630 + t14567 + t14568;
  t14583 = t9209*t14569;
  t14587 = t14551 + t14583;
  t14589 = t140*t6977*t14500;
  t14590 = t13524*t12239;
  t14592 = t140*t6977*t14485;
  t14593 = -1.*t9209*t6977*t14491;
  t14612 = t14590 + t14592 + t14593;
  t14630 = t9209*t14612;
  t14651 = t14589 + t14630;
  t14660 = t13530 + t14524 + t14525;
  t14669 = t140*t3239*t14660;
  t14673 = -1.*t11773*t13639*t6977;
  t14677 = -1.*t14505*t13639*t6977;
  t14680 = t13630 + t14673 + t14677 + t13657 + t14567 + t14568;
  t14691 = t140*t3239*t14680;
  t14692 = -1.*t140*t6977*t14485;
  t14696 = t9209*t6977*t14491;
  t14700 = t13576 + t14692 + t14696;
  t14707 = t140*t3889*t14700;
  t14711 = t11773*t3239*t13639;
  t14712 = t14505*t3239*t13639;
  t14730 = t140*t3889*t14485;
  t14731 = -1.*t9209*t3889*t14491;
  t14736 = t13673 + t14711 + t14712 + t13686 + t14730 + t14731;
  t14739 = t140*t6977*t14736;
  t14746 = t14669 + t14691 + t14707 + t14739;
  t14758 = t140*t3889*t14549;
  t14759 = -1.*t13524*t3239;
  t14761 = -1.*t11773*t3239*t13639;
  t14765 = -1.*t14505*t3239*t13639;
  t14768 = -1.*t6977*t13655;
  t14784 = -1.*t140*t3889*t14485;
  t14787 = t9209*t3889*t14491;
  t14797 = t14759 + t14761 + t14765 + t14768 + t14784 + t14787;
  t14799 = t9209*t14797;
  t14803 = t14758 + t14799;
  t14821 = -1.*t11773*t6977*t13874;
  t14852 = -1.*t14505*t6977*t13874;
  t14865 = -1.*t140*t3239*t14864;
  t14879 = t9209*t3239*t14877;
  t14883 = t13897 + t14821 + t14852 + t13921 + t14865 + t14879;
  t14884 = t9285*t14883;
  t14896 = t140*t1246*t14895;
  t14897 = t140*t13874*t9285;
  t14900 = -1.*t9209*t13874*t12683;
  t14929 = t140*t1246*t14864;
  t14932 = -1.*t9209*t1246*t14877;
  t14940 = t13862 + t13888 + t14897 + t14900 + t14929 + t14932;
  t14946 = t140*t6977*t14940;
  t14999 = t140*t3239*t14964;
  t15003 = t14884 + t14896 + t14946 + t14999;
  t15008 = t9285*t14895;
  t15013 = t140*t6977*t14964;
  t15017 = t15008 + t15013;
  t15020 = t11773*t6977*t13874;
  t15021 = t14505*t6977*t13874;
  t15025 = t140*t3239*t14864;
  t15026 = -1.*t9209*t3239*t14877;
  t15027 = t13984 + t15020 + t15021 + t13996 + t15025 + t15026;
  t15034 = t11278*t15027;
  t15058 = t140*t1381*t15055;
  t15060 = -1.*t140*t1381*t14864;
  t15068 = t9209*t1381*t14877;
  t15081 = -1.*t140*t13874*t11278;
  t15082 = t9209*t13874*t12925;
  t15083 = t14012 + t14028 + t15060 + t15068 + t15081 + t15082;
  t15091 = t140*t6977*t15083;
  t15101 = t140*t3239*t15100;
  t15106 = t15034 + t15058 + t15091 + t15101;
  t15108 = t11278*t15055;
  t15112 = t140*t6977*t15100;
  t15113 = t15108 + t15112;
  t15115 = -1.*t140*t13874*t9285;
  t15120 = t9209*t13874*t12683;
  t15122 = -1.*t140*t1246*t14864;
  t15129 = t9209*t1246*t14877;
  t15140 = t14053 + t14075 + t15115 + t15120 + t15122 + t15129;
  t15141 = t11278*t15140;
  t15166 = t140*t1381*t15165;
  t15167 = t140*t1381*t14864;
  t15168 = -1.*t9209*t1381*t14877;
  t15169 = t140*t13874*t11278;
  t15170 = -1.*t9209*t13874*t12925;
  t15173 = t14114 + t14118 + t15167 + t15168 + t15169 + t15170;
  t15178 = t9285*t15173;
  t15188 = t140*t1246*t15187;
  t15194 = t15141 + t15166 + t15178 + t15188;
  t15199 = t11278*t15165;
  t15200 = t9285*t15187;
  t15201 = t15199 + t15200;
  t15203 = t140*t14236*t10316;
  t15204 = -1.*t9209*t14236*t12825;
  t15215 = t140*t3239*t15214;
  t15229 = -1.*t9209*t3239*t15225;
  t15232 = t14225 + t14240 + t15203 + t15204 + t15215 + t15229;
  t15235 = t11521*t15232;
  t15243 = t140*t747*t15242;
  t15244 = -1.*t140*t747*t15214;
  t15245 = t9209*t747*t15225;
  t15251 = -1.*t140*t14236*t11521;
  t15253 = t9209*t14236*t12973;
  t15254 = t14260 + t14267 + t15244 + t15245 + t15251 + t15253;
  t15259 = t10316*t15254;
  t15266 = t140*t3239*t15265;
  t15267 = t15235 + t15243 + t15259 + t15266;
  t15281 = t11521*t15242;
  t15290 = t10316*t15265;
  t15291 = t15281 + t15290;
  t15298 = t140*t747*t15214;
  t15299 = -1.*t9209*t747*t15225;
  t15301 = t140*t14236*t11521;
  t15308 = -1.*t9209*t14236*t12973;
  t15309 = t14282 + t14285 + t15298 + t15299 + t15301 + t15308;
  t15310 = t11742*t15309;
  t15315 = t140*t1082*t15314;
  t15316 = -1.*t140*t1082*t15214;
  t15317 = t9209*t1082*t15225;
  t15319 = -1.*t140*t14236*t11742;
  t15325 = t9209*t14236*t13064;
  t15334 = t14318 + t14332 + t15316 + t15317 + t15319 + t15325;
  t15335 = t11521*t15334;
  t15365 = t140*t747*t15358;
  t15370 = t15310 + t15315 + t15335 + t15365;
  t15386 = t11742*t15314;
  t15393 = t11521*t15358;
  t15395 = t15386 + t15393;
  t15404 = -1.*t140*t14236*t10316;
  t15405 = t9209*t14236*t12825;
  t15406 = -1.*t140*t3239*t15214;
  t15407 = t9209*t3239*t15225;
  t15414 = t14422 + t14427 + t15404 + t15405 + t15406 + t15407;
  t15422 = t11742*t15414;
  t15431 = t140*t1082*t15428;
  t15433 = t140*t1082*t15214;
  t15434 = -1.*t9209*t1082*t15225;
  t15439 = t140*t14236*t11742;
  t15442 = -1.*t9209*t14236*t13064;
  t15446 = t14444 + t14453 + t15433 + t15434 + t15439 + t15442;
  t15450 = t10316*t15446;
  t15455 = t140*t3239*t15454;
  t15457 = t15422 + t15431 + t15450 + t15455;
  t15459 = t11742*t15428;
  t15460 = t10316*t15454;
  t15463 = t15459 + t15460;
  t12156 = 2.622*t140*t6977*t12140;
  t12218 = 1.095*t140*t3889*t12140;
  t12272 = 2.622*t140*t3239*t12248;
  t12310 = 1.095*t140*t3239*t12305;
  t12325 = 1.527*t9285*t12324;
  t12347 = 0.241*t12140*t10316;
  t12383 = 1.527*t11278*t12382;
  t12546 = 0.241*t12539*t11521;
  t12606 = 0.241*t12604*t11742;
  t12744 = 1.527*t140*t1246*t12740;
  t12863 = 0.241*t140*t3239*t12831;
  t12937 = 1.527*t140*t1381*t12928;
  t12999 = 0.241*t140*t747*t12995;
  t13108 = 0.241*t140*t1082*t13094;
  t13125 = t12156 + t12218 + t12272 + t12310 + t12325 + t12347 + t12383 + t12546 + t12606 + t12744 + t12863 + t12937 + t12999 + t13108;
  t15578 = 2.622*t13141*t12248;
  t15579 = 2.622*t12140*t13167;
  t15580 = 1.095*t13141*t12305;
  t15581 = 1.095*t12140*t13176;
  t15593 = 1.527*t13205*t12740;
  t15598 = 1.527*t12324*t13351;
  t15599 = 0.241*t13141*t12831;
  t15614 = 0.241*t12140*t13402;
  t15618 = 1.527*t13251*t12928;
  t15619 = 1.527*t12382*t13410;
  t15621 = 0.241*t13299*t12995;
  t15626 = 0.241*t12539*t13433;
  t15627 = 0.241*t13319*t13094;
  t15629 = 0.241*t12604*t13444;
  t15637 = t15578 + t15579 + t15580 + t15581 + t15593 + t15598 + t15599 + t15614 + t15618 + t15619 + t15621 + t15626 + t15627 + t15629;
  t14544 = 1.095*t140*t3239*t14543;
  t14588 = 1.095*t140*t3239*t14587;
  t14659 = 1.095*t140*t3889*t14651;
  t14747 = 1.095*t9209*t14746;
  t14811 = 1.095*t140*t6977*t14803;
  t15007 = 1.527*t11278*t15003;
  t15018 = 1.527*t140*t1381*t15017;
  t15107 = 1.527*t9285*t15106;
  t15114 = 1.527*t140*t1246*t15113;
  t15198 = 1.527*t140*t6977*t15194;
  t15202 = 1.527*t140*t3239*t15201;
  t15278 = 0.241*t11742*t15267;
  t15294 = 0.241*t140*t1082*t15291;
  t15375 = 0.241*t10316*t15370;
  t15400 = 0.241*t140*t3239*t15395;
  t15458 = 0.241*t11521*t15457;
  t15464 = 0.241*t140*t747*t15463;
  t15465 = t14544 + t14588 + t14659 + t14747 + t14811 + t15007 + t15018 + t15107 + t15114 + t15198 + t15202 + t15278 + t15294 + t15375 + t15400 + t15458 + t15464;
  t15932 = 1.095*t12140*t14543;
  t15933 = 1.095*t12140*t14587;
  t15934 = 1.095*t12305*t14651;
  t15936 = 1.095*t11971*t140*t14746;
  t15937 = 1.095*t12248*t14803;
  t15938 = 1.527*t12928*t15003;
  t15940 = 1.527*t12382*t15017;
  t15946 = 1.527*t12740*t15106;
  t15948 = 1.527*t12324*t15113;
  t15952 = 1.527*t12248*t15194;
  t15954 = 1.527*t12140*t15201;
  t15961 = 0.241*t13094*t15267;
  t15962 = 0.241*t12604*t15291;
  t15964 = 0.241*t12831*t15370;
  t15966 = 0.241*t12140*t15395;
  t15967 = 0.241*t12995*t15457;
  t15970 = 0.241*t12539*t15463;
  t15973 = t15932 + t15933 + t15934 + t15936 + t15937 + t15938 + t15940 + t15946 + t15948 + t15952 + t15954 + t15961 + t15962 + t15964 + t15966 + t15967 + t15970;
  t15721 = 1.095*t13141*t14543;
  t15725 = 1.095*t13141*t14587;
  t15727 = 1.095*t13176*t14651;
  t15736 = -1.095*t140*t12100*t14746;
  t15738 = 1.095*t13167*t14803;
  t15739 = 1.527*t13410*t15003;
  t15742 = 1.527*t13251*t15017;
  t15743 = 1.527*t13351*t15106;
  t15744 = 1.527*t13205*t15113;
  t15748 = 1.527*t13167*t15194;
  t15751 = 1.527*t13141*t15201;
  t15755 = 0.241*t13444*t15267;
  t15757 = 0.241*t13319*t15291;
  t15758 = 0.241*t13402*t15370;
  t15759 = 0.241*t13141*t15395;
  t15764 = 0.241*t13433*t15457;
  t15771 = 0.241*t13299*t15463;
  t15774 = t15721 + t15725 + t15727 + t15736 + t15738 + t15739 + t15742 + t15743 + t15744 + t15748 + t15751 + t15755 + t15757 + t15758 + t15759 + t15764 + t15771;
  t16032 = t140*t6977*t14660;
  t16033 = t140*t3239*t14700;
  t16034 = t16032 + t16033;
  t13474 = -0.212869095*t140*t3239*t6977;
  t13482 = 0.212869095*t140*t12239*t3889;
  t13737 = 1.095*t9209*t13728;
  t13845 = 1.527*t140*t1381*t13841;
  t13941 = 1.527*t11278*t13935;
  t13975 = 1.527*t140*t1246*t13972;
  t14052 = 1.527*t9285*t14041;
  t14133 = 1.527*t140*t6977*t14132;
  t14143 = 1.527*t140*t3239*t14137;
  t14193 = 0.241*t140*t1082*t14192;
  t14281 = 0.241*t11742*t14280;
  t14362 = 0.241*t10316*t14361;
  t14380 = 0.241*t140*t3239*t14379;
  t14415 = 0.241*t140*t747*t14414;
  t14477 = 0.241*t11521*t14475;
  t14478 = t13474 + t13482 + t13737 + t13845 + t13941 + t13975 + t14052 + t14133 + t14143 + t14193 + t14281 + t14362 + t14380 + t14415 + t14477;
  t15904 = -0.212869095*t3239*t12248;
  t15906 = 0.212869095*t12239*t12305;
  t15907 = 1.095*t11971*t140*t13728;
  t15909 = 1.527*t12382*t13841;
  t15910 = 1.527*t13935*t12928;
  t15913 = 1.527*t12324*t13972;
  t15915 = 1.527*t12740*t14041;
  t15916 = 1.527*t12248*t14132;
  t15917 = 1.527*t12140*t14137;
  t15918 = 0.241*t12604*t14192;
  t15919 = 0.241*t14280*t13094;
  t15922 = 0.241*t12831*t14361;
  t15924 = 0.241*t12140*t14379;
  t15926 = 0.241*t12539*t14414;
  t15928 = 0.241*t12995*t14475;
  t15930 = t15904 + t15906 + t15907 + t15909 + t15910 + t15913 + t15915 + t15916 + t15917 + t15918 + t15919 + t15922 + t15924 + t15926 + t15928;
  t15676 = -0.212869095*t3239*t13167;
  t15677 = 0.212869095*t12239*t13176;
  t15680 = -1.095*t140*t12100*t13728;
  t15683 = 1.527*t13251*t13841;
  t15685 = 1.527*t13935*t13410;
  t15687 = 1.527*t13205*t13972;
  t15688 = 1.527*t13351*t14041;
  t15689 = 1.527*t13167*t14132;
  t15690 = 1.527*t13141*t14137;
  t15696 = 0.241*t13319*t14192;
  t15703 = 0.241*t14280*t13444;
  t15705 = 0.241*t13402*t14361;
  t15706 = 0.241*t13141*t14379;
  t15708 = 0.241*t13299*t14414;
  t15716 = 0.241*t13433*t14475;
  t15717 = t15676 + t15677 + t15680 + t15683 + t15685 + t15687 + t15688 + t15689 + t15690 + t15696 + t15703 + t15705 + t15706 + t15708 + t15716;
  t16037 = t12239*t13554;
  t16038 = t6977*t13617;
  t16039 = t16037 + t16038;
  t16028 = 0.212869095*t12239*t14543;
  t16029 = -0.212869095*t3239*t14587;
  t16030 = 0.212869095*t6977*t14651;
  t16035 = 1.095*t13728*t16034;
  t16041 = 1.095*t16039*t14746;
  t16042 = -0.212869095*t6977*t14803;
  t16043 = 1.527*t13841*t15003;
  t16044 = 1.527*t13935*t15017;
  t16045 = 1.527*t13972*t15106;
  t16046 = 1.527*t14041*t15113;
  t16047 = 1.527*t14137*t15194;
  t16048 = 1.527*t14132*t15201;
  t16050 = 0.241*t14192*t15267;
  t16052 = 0.241*t14280*t15291;
  t16053 = 0.241*t14379*t15370;
  t16054 = 0.241*t14361*t15395;
  t16055 = 0.241*t14414*t15457;
  t16056 = 0.241*t14475*t15463;
  t16057 = t16028 + t16029 + t16030 + t16035 + t16041 + t16042 + t16043 + t16044 + t16045 + t16046 + t16047 + t16048 + t16050 + t16052 + t16053 + t16054 + t16055 + t16056;
  t16187 = Power(t314,2);
  t16194 = Power(t297,2);
  t4661 = 1.095*t140*t4652*t3239;
  t4761 = 1.095*t140*t4755*t3239;
  t5359 = 1.527*t140*t5334*t3239;
  t16222 = 0.241*t6680;
  t16223 = 0. + t16222;
  t7065 = 1.095*t6881*t140*t6977;
  t7644 = 1.527*t140*t7539*t6977;
  t7711 = 1.095*t140*t7680*t3889;
  t7991 = 1.527*t314*t140*t7932*t1246;
  t8273 = 1.527*t140*t8193*t297*t1381;
  t16212 = 0.241*t8507;
  t16213 = 0. + t16212;
  t16217 = 0.241*t8944;
  t16219 = 0. + t16217;
  t9320 = 1.527*t314*t9191*t9285;
  t10384 = 0.241*t10016*t10316;
  t11335 = 1.527*t11053*t297*t11278;
  t11535 = 0.241*t11437*t3528*t11521;
  t11752 = 0.241*t11635*t1025*t11742;
  t15826 = 1.095*t4652*t12140;
  t15827 = 1.095*t4755*t12140;
  t15828 = 1.527*t5334*t12140;
  t15830 = 1.095*t6881*t12248;
  t15831 = 1.527*t7539*t12248;
  t15832 = 1.095*t7680*t12305;
  t15833 = 1.527*t314*t7932*t12324;
  t15836 = 1.527*t8193*t297*t12382;
  t15844 = 1.527*t314*t9191*t12740;
  t15845 = 0.241*t10016*t12831;
  t15851 = 1.527*t11053*t297*t12928;
  t15854 = 0.241*t11437*t3528*t12995;
  t15858 = 0.241*t11635*t1025*t13094;
  t15530 = 1.095*t4652*t13141;
  t15531 = 1.095*t4755*t13141;
  t15534 = 1.527*t5334*t13141;
  t15537 = 1.095*t6881*t13167;
  t15538 = 1.527*t7539*t13167;
  t15542 = 1.095*t7680*t13176;
  t15547 = 1.527*t314*t7932*t13205;
  t15550 = 1.527*t8193*t297*t13251;
  t15565 = 1.527*t314*t9191*t13351;
  t15568 = 0.241*t10016*t13402;
  t15569 = 1.527*t11053*t297*t13410;
  t15570 = 0.241*t11437*t3528*t13433;
  t15571 = 0.241*t11635*t1025*t13444;
  t16117 = -0.212869095*t4755*t3239;
  t16121 = 0.212869095*t4652*t12239;
  t16123 = -0.212869095*t6881*t6977;
  t16124 = 0.212869095*t7680*t6977;
  t16125 = 1.527*t11053*t297*t13841;
  t16126 = 1.527*t8193*t297*t13935;
  t16127 = 1.527*t314*t9191*t13972;
  t16128 = 1.527*t314*t7932*t14041;
  t16129 = 1.527*t5334*t14132;
  t16130 = 1.527*t7539*t14137;
  t16131 = 0.241*t11635*t1025*t14192;
  t16137 = 0.241*t10016*t14379;
  t16138 = 0.241*t11437*t3528*t14414;
  t16006 = 1.095*t7680*t14543;
  t16007 = 1.095*t6881*t14587;
  t16008 = 1.095*t4652*t14651;
  t16009 = 1.095*t4755*t14803;
  t16010 = 1.527*t8193*t297*t15003;
  t16011 = 1.527*t11053*t297*t15017;
  t16012 = 1.527*t314*t7932*t15106;
  t16013 = 1.527*t314*t9191*t15113;
  t16014 = 1.527*t5334*t15194;
  t16015 = 1.527*t7539*t15201;
  t16017 = 0.241*t11635*t1025*t15291;
  t16019 = 0.241*t10016*t15395;
  t16021 = 0.241*t11437*t3528*t15463;
  t16186 = -0.0219*t4652;
  t16189 = 0.085290585*t16187*t9191;
  t16195 = -0.085290585*t11053*t16194;
  t16196 = 1.527*t7539*t3177;
  t3259 = 1.527*t140*t3177*t3239;
  t16273 = 0.241*t3772;
  t16274 = 0. + t16273;
  t3891 = -0.0219*t140*t3889;
  t3908 = 0.085290585*t314*t140*t1246;
  t3915 = -0.085290585*t140*t297*t1381;
  t16267 = 0.241*t3951;
  t16268 = 0. + t16267;
  t16270 = 0.241*t4147;
  t16271 = 0. + t16270;
  t15811 = 1.527*t3177*t12140;
  t15814 = -0.0219*t12305;
  t15815 = 0.085290585*t314*t12324;
  t15821 = -0.085290585*t297*t12382;
  t15496 = 1.527*t3177*t13141;
  t15514 = -0.0219*t13176;
  t15516 = 0.085290585*t314*t13205;
  t15519 = -0.085290585*t297*t13251;
  t16102 = -0.0042573819*t6977;
  t16104 = -0.085290585*t297*t13935;
  t16105 = 0.085290585*t314*t14041;
  t16106 = 1.527*t3177*t14132;
  t15994 = -0.0219*t14543;
  t15995 = -0.085290585*t297*t15003;
  t15997 = 0.085290585*t314*t15106;
  t15998 = 1.527*t3177*t15194;
  t16179 = 0.06108*t314*t9191;
  t16180 = -0.06108*t11053*t297;
  t1305 = 0.06108*t140*t1246;
  t1518 = -0.06108*t140*t1381;
  t16318 = 0.241*t1862;
  t16319 = 0. + t16318;
  t16321 = 0.241*t1937;
  t16322 = 0. + t16321;
  t15786 = 0.06108*t12324;
  t15790 = -0.06108*t12382;
  t15485 = 0.06108*t13205;
  t15486 = -0.06108*t13251;
  t16095 = -0.06108*t13935;
  t16096 = 0.06108*t14041;
  t15988 = -0.06108*t15003;
  t15989 = 0.06108*t15106;
  t16172 = -0.03856*t11437*t3528;
  t16175 = 0.004820000000000004*t11635*t1025;
  t16176 = t16172 + t16175;
  t773 = -0.03856*t140*t747;
  t1107 = 0.004820000000000004*t140*t1082;
  t1152 = t773 + t1107;
  t15782 = -0.03856*t12539;
  t15783 = 0.004820000000000004*t12604;
  t15784 = t15782 + t15783;
  t15480 = -0.03856*t13299;
  t15481 = 0.004820000000000004*t13319;
  t15482 = t15480 + t15481;
  t16088 = 0.004820000000000004*t14280;
  t16090 = -0.03856*t14475;
  t16092 = t16088 + t16090;
  t15982 = 0.004820000000000004*t15267;
  t15983 = -0.03856*t15457;
  t15985 = t15982 + t15983;
  p_output1[0]=var2[15]*(-0.5*(0.482*t1082*t11742*t140 + 3.054*t11278*t1381*t140 + 0.482*t10316*t140*t3239 + 2.19*t11773*t3239*t3889 + 5.244*t11773*t3239*t6977 + 0.482*t11521*t140*t747 + 3.054*t1246*t140*t9285)*var2[0] - 0.5*t13456*var2[1] - 0.5*t13125*var2[2] - 0.5*t15465*var2[3] - 0.5*t14478*var2[4] - 0.5*(t10384 + t11335 + t11535 + t11752 + t4661 + t4761 + t5359 + 0.241*t140*t3239*t6680 + t7065 + t7644 + t7711 + t7991 + t8273 + 0.241*t140*t747*t8507 + 0.241*t1082*t140*t8944 + t9320)*var2[5] - 0.5*(t3259 + 0.241*t140*t3239*t3772 + t3891 + t3908 + t3915 + 0.241*t1082*t140*t4147 + 0.241*t140*t3951*t747)*var2[15] - 0.5*(t1305 + t1518 + 0.241*t1082*t140*t1937 + 0.241*t140*t1862*t747)*var2[16] - 0.5*t1152*var2[17]);
  p_output1[1]=var2[15]*(-0.5*t13456*var2[0] - 0.5*(5.244*t13141*t13167 + 2.19*t13141*t13176 + 3.054*t13205*t13351 + 0.482*t13141*t13402 + 3.054*t13251*t13410 + 0.482*t13299*t13433 + 0.482*t13319*t13444)*var2[1] - 0.5*t15637*var2[2] - 0.5*t15774*var2[3] - 0.5*t15717*var2[4] - 0.5*(t15530 + t15531 + t15534 + t15537 + t15538 + t15542 + t15547 + t15550 + t15565 + t15568 + t15569 + t15570 + t15571 + 0.241*t13141*t6680 + 0.241*t13299*t8507 + 0.241*t13319*t8944)*var2[5] - 0.5*(t15496 + t15514 + t15516 + t15519 + 0.241*t13141*t3772 + 0.241*t13299*t3951 + 0.241*t13319*t4147)*var2[15] - 0.5*(t15485 + t15486 + 0.241*t13299*t1862 + 0.241*t13319*t1937)*var2[16] - 0.5*t15482*var2[17]);
  p_output1[2]=var2[15]*(-0.5*t13125*var2[0] - 0.5*t15637*var2[1] - 0.5*(5.244*t12140*t12248 + 2.19*t12140*t12305 + 3.054*t12324*t12740 + 0.482*t12140*t12831 + 3.054*t12382*t12928 + 0.482*t12539*t12995 + 0.482*t12604*t13094)*var2[2] - 0.5*t15973*var2[3] - 0.5*t15930*var2[4] - 0.5*(t15826 + t15827 + t15828 + t15830 + t15831 + t15832 + t15833 + t15836 + t15844 + t15845 + t15851 + t15854 + t15858 + 0.241*t12140*t6680 + 0.241*t12539*t8507 + 0.241*t12604*t8944)*var2[5] - 0.5*(t15811 + t15814 + t15815 + t15821 + 0.241*t12140*t3772 + 0.241*t12539*t3951 + 0.241*t12604*t4147)*var2[15] - 0.5*(t15786 + t15790 + 0.241*t12539*t1862 + 0.241*t12604*t1937)*var2[16] - 0.5*t15784*var2[17]);
  p_output1[3]=var2[15]*(-0.5*t15465*var2[0] - 0.5*t15774*var2[1] - 0.5*t15973*var2[2] - 0.5*(2.19*t14543*t14651 + 2.19*t14587*t14803 + 3.054*t15003*t15017 + 3.054*t15106*t15113 + 3.054*t15194*t15201 + 0.482*t15267*t15291 + 0.482*t15370*t15395 + 0.482*t15457*t15463 + 2.19*t14746*t16034)*var2[3] - 0.5*t16057*var2[4] - 0.5*(t16006 + t16007 + t16008 + t16009 + t16010 + t16011 + t16012 + t16013 + t16014 + t16015 + t16017 + t16019 + t16021 + 0.241*t15370*t6680 + 0.241*t15457*t8507 + 0.241*t15267*t8944)*var2[5] - 0.5*(t15994 + t15995 + t15997 + t15998 + 0.241*t15370*t3772 + 0.241*t15457*t3951 + 0.241*t15267*t4147)*var2[15] - 0.5*(t15988 + t15989 + 0.241*t15457*t1862 + 0.241*t15267*t1937)*var2[16] - 0.5*t15985*var2[17]);
  p_output1[4]=var2[15]*(-0.5*t14478*var2[0] - 0.5*t15717*var2[1] - 0.5*t15930*var2[2] - 0.5*t16057*var2[3] - 0.5*(3.054*t13841*t13935 + 3.054*t13972*t14041 + 3.054*t14132*t14137 + 0.482*t14192*t14280 + 0.482*t14361*t14379 + 0.482*t14414*t14475 + 2.19*t13728*t16039 + 0.08276392987419*t12239*t6977 + 0.08276392987419*t3239*t6977)*var2[4] - 0.5*(t16117 + t16121 + t16123 + t16124 + t16125 + t16126 + t16127 + t16128 + t16129 + t16130 + t16131 + t16137 + t16138 + 0.241*t14361*t6680 + 0.241*t14475*t8507 + 0.241*t14280*t8944)*var2[5] - 0.5*(t16102 + t16104 + t16105 + t16106 + 0.241*t14361*t3772 + 0.241*t14475*t3951 + 0.241*t14280*t4147)*var2[15] - 0.5*(t16095 + t16096 + 0.241*t14475*t1862 + 0.241*t14280*t1937)*var2[16] - 0.5*t16092*var2[17]);
  p_output1[5]=var2[15]*(-0.5*(t10384 + t11335 + t11535 + t11752 + t1082*t140*t16219 + t140*t16223*t3239 + t4661 + t4761 + t5359 + t7065 + t140*t16213*t747 + t7644 + t7711 + t7991 + t8273 + t9320)*var2[0] - 0.5*(t15530 + t15531 + t15534 + t15537 + t15538 + t15542 + t15547 + t15550 + t15565 + t15568 + t15569 + t15570 + t15571 + t13299*t16213 + t13319*t16219 + t13141*t16223)*var2[1] - 0.5*(t15826 + t15827 + t15828 + t15830 + t15831 + t15832 + t15833 + t15836 + t15844 + t15845 + t15851 + t15854 + t15858 + t12539*t16213 + t12604*t16219 + t12140*t16223)*var2[2] - 0.5*(t16006 + t16007 + t16008 + t16009 + t16010 + t16011 + t16012 + t16013 + t16014 + t16015 + t16017 + t16019 + t16021 + t15457*t16213 + t15267*t16219 + t15370*t16223)*var2[3] - 0.5*(t16117 + t16121 + t16123 + t16124 + t16125 + t16126 + t16127 + t16128 + t16129 + t16130 + t16131 + t16137 + t16138 + t14475*t16213 + t14280*t16219 + t14361*t16223)*var2[4] - 0.5*(t1025*t11635*t16219 + t10016*t16223 + t11437*t16213*t3528 + 0.241*t10016*t6680 + 2.19*t4755*t6881 + 3.054*t5334*t7539 + 2.19*t4652*t7680 + 3.054*t11053*t16194*t8193 + 0.241*t11437*t3528*t8507 + 0.241*t1025*t11635*t8944 + 3.054*t16187*t7932*t9191)*var2[5] - 0.5*(t16186 + t16189 + t16195 + t16196 + 0.241*t10016*t3772 + 0.241*t11437*t3528*t3951 + 0.241*t1025*t11635*t4147)*var2[15] - 0.5*(t16179 + t16180 + 0.241*t1025*t11635*t1937 + 0.241*t11437*t1862*t3528)*var2[16] - 0.5*t16176*var2[17]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=(-0.5*(t1082*t140*t16271 + t140*t16274*t3239 + t3259 + t3891 + t3908 + t3915 + t140*t16268*t747)*var2[0] - 0.5*(t15496 + t15514 + t15516 + t15519 + t13299*t16268 + t13319*t16271 + t13141*t16274)*var2[1] - 0.5*(t15811 + t15814 + t15815 + t15821 + t12539*t16268 + t12604*t16271 + t12140*t16274)*var2[2] - 0.5*(t15994 + t15995 + t15997 + t15998 + t15457*t16268 + t15267*t16271 + t15370*t16274)*var2[3] - 0.5*(t16102 + t16104 + t16105 + t16106 + t14475*t16268 + t14280*t16271 + t14361*t16274)*var2[4] - 0.5*(t16186 + t16189 + t16195 + t16196 + t1025*t11635*t16271 + t10016*t16274 + t11437*t16268*t3528)*var2[5])*var2[15];
  p_output1[16]=(-0.5*(t1305 + t1518 + t1082*t140*t16322 + t140*t16319*t747)*var2[0] - 0.5*(t15485 + t15486 + t13299*t16319 + t13319*t16322)*var2[1] - 0.5*(t15786 + t15790 + t12539*t16319 + t12604*t16322)*var2[2] - 0.5*(t15988 + t15989 + t15457*t16319 + t15267*t16322)*var2[3] - 0.5*(t16095 + t16096 + t14475*t16319 + t14280*t16322)*var2[4] - 0.5*(t16179 + t16180 + t1025*t11635*t16322 + t11437*t16319*t3528)*var2[5])*var2[15];
  p_output1[17]=(-0.5*t1152*var2[0] - 0.5*t15482*var2[1] - 0.5*t15784*var2[2] - 0.5*t15985*var2[3] - 0.5*t16092*var2[4] - 0.5*t16176*var2[5])*var2[15];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec16_plane.hh"

namespace SymFunction
{

void Ce2_vec16_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
