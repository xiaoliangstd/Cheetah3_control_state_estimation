/*
 * Automatically Generated from Mathematica.
 * Sat 7 Dec 2019 21:23:47 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t583;
  double t238;
  double t475;
  double t401;
  double t586;
  double t480;
  double t666;
  double t702;
  double t756;
  double t862;
  double t900;
  double t1009;
  double t1002;
  double t973;
  double t998;
  double t1013;
  double t1023;
  double t1031;
  double t1060;
  double t1127;
  double t1319;
  double t1376;
  double t1208;
  double t739;
  double t1519;
  double t1522;
  double t1523;
  double t1541;
  double t1549;
  double t1550;
  double t1453;
  double t1557;
  double t1618;
  double t1621;
  double t1650;
  double t1660;
  double t1666;
  double t1221;
  double t1294;
  double t1967;
  double t2047;
  double t2148;
  double t2149;
  double t2164;
  double t2212;
  double t2217;
  double t725;
  double t2602;
  double t2601;
  double t2666;
  double t2773;
  double t2805;
  double t2846;
  double t2628;
  double t2672;
  double t2688;
  double t2906;
  double t2942;
  double t2976;
  double t1554;
  double t2586;
  double t3336;
  double t3376;
  double t3407;
  double t3484;
  double t3489;
  double t3490;
  double t2982;
  double t2999;
  double t3175;
  double t2043;
  double t3815;
  double t3834;
  double t3846;
  double t3871;
  double t3876;
  double t3921;
  double t4218;
  double t4213;
  double t4174;
  double t4203;
  double t4231;
  double t4238;
  double t4250;
  double t4254;
  double t4255;
  double t4454;
  double t4492;
  double t4332;
  double t4145;
  double t4558;
  double t4631;
  double t4645;
  double t4683;
  double t4710;
  double t4725;
  double t4734;
  double t4377;
  double t4383;
  double t4950;
  double t4958;
  double t4960;
  double t4980;
  double t4984;
  double t4987;
  double t4144;
  double t5221;
  double t5197;
  double t5147;
  double t5150;
  double t5251;
  double t5255;
  double t5265;
  double t5267;
  double t5272;
  double t5304;
  double t5307;
  double t5279;
  double t5137;
  double t4625;
  double t5400;
  double t5470;
  double t5475;
  double t5486;
  double t5504;
  double t5509;
  double t5512;
  double t5280;
  double t5281;
  double t4949;
  double t5610;
  double t5611;
  double t5616;
  double t5633;
  double t5638;
  double t5650;
  double t5785;
  double t5786;
  double t5789;
  double t5802;
  double t5803;
  double t5783;
  double t5804;
  double t5809;
  double t5814;
  double t5815;
  double t5825;
  double t5761;
  double t5893;
  double t5898;
  double t5907;
  double t5880;
  double t5908;
  double t5909;
  double t5912;
  double t5913;
  double t5914;
  double t5967;
  double t5968;
  double t5972;
  double t5966;
  double t5973;
  double t5975;
  double t5981;
  double t5987;
  double t5990;
  double t5749;
  double t6028;
  double t6029;
  double t6030;
  double t6031;
  double t6063;
  double t6066;
  double t6070;
  double t6033;
  double t6035;
  double t6038;
  double t5850;
  double t6013;
  double t6132;
  double t6133;
  double t6136;
  double t6143;
  double t6146;
  double t6149;
  double t6138;
  double t6139;
  double t6140;
  double t5943;
  double t6193;
  double t6198;
  double t6199;
  double t6208;
  double t6218;
  double t6219;
  double t6201;
  double t6203;
  double t6204;
  double t5756;
  double t6264;
  double t6265;
  double t6266;
  double t6268;
  double t6271;
  double t6263;
  double t6284;
  double t6285;
  double t6290;
  double t6294;
  double t6299;
  double t5852;
  double t6256;
  double t6338;
  double t6342;
  double t6345;
  double t6334;
  double t6346;
  double t6347;
  double t6352;
  double t6353;
  double t6356;
  double t5942;
  double t6397;
  double t6398;
  double t6399;
  double t6388;
  double t6404;
  double t6410;
  double t6413;
  double t6416;
  double t6419;
  double t6252;
  double t6012;
  double t6455;
  double t6457;
  double t6458;
  double t6466;
  double t6454;
  double t6470;
  double t6472;
  double t6475;
  double t6476;
  double t6477;
  double t6324;
  double t6106;
  double t6447;
  double t6505;
  double t6510;
  double t6512;
  double t6504;
  double t6513;
  double t6518;
  double t6521;
  double t6522;
  double t6523;
  double t6176;
  double t6382;
  double t6551;
  double t6552;
  double t6553;
  double t6550;
  double t6558;
  double t6559;
  double t6562;
  double t6563;
  double t6564;
  double t6588;
  double t6589;
  double t6591;
  double t6608;
  double t6610;
  double t6611;
  double t6607;
  double t6612;
  double t6613;
  double t6617;
  double t6618;
  double t6619;
  double t6642;
  double t6643;
  double t6644;
  double t6658;
  double t6659;
  double t6660;
  double t6656;
  double t6661;
  double t6662;
  double t6664;
  double t6665;
  double t6669;
  double t6592;
  double t6692;
  double t6694;
  double t6695;
  double t6700;
  double t6701;
  double t6703;
  double t6696;
  double t6697;
  double t6698;
  double t6640;
  double t6732;
  double t6733;
  double t6734;
  double t6739;
  double t6740;
  double t6741;
  double t6735;
  double t6736;
  double t6737;
  double t6587;
  double t6768;
  double t6769;
  double t6771;
  double t6767;
  double t6773;
  double t6774;
  double t6776;
  double t6777;
  double t6778;
  double t6639;
  double t6799;
  double t6800;
  double t6802;
  double t6798;
  double t6805;
  double t6806;
  double t6809;
  double t6810;
  double t6811;
  double t6682;
  double t6760;
  double t6832;
  double t6833;
  double t6834;
  double t6831;
  double t6835;
  double t6836;
  double t6838;
  double t6839;
  double t6840;
  double t6719;
  double t6793;
  double t6860;
  double t6861;
  double t6862;
  double t6859;
  double t6863;
  double t6864;
  double t6866;
  double t6868;
  double t6870;
  double t6721;
  double t6885;
  double t6886;
  double t6898;
  double t6899;
  double t6900;
  double t6905;
  double t6906;
  double t6907;
  double t6919;
  double t6920;
  double t6921;
  double t6939;
  double t6937;
  double t6938;
  double t6940;
  double t6941;
  double t6943;
  double t6944;
  double t6945;
  double t6960;
  double t6956;
  double t6957;
  double t6958;
  double t6959;
  double t6961;
  double t6962;
  double t6964;
  double t6965;
  double t6966;
  double t6981;
  double t6982;
  double t6977;
  double t6978;
  double t6979;
  double t6980;
  double t6983;
  double t6984;
  double t6986;
  double t6987;
  double t6988;
  double t7001;
  double t7002;
  double t7003;
  double t6999;
  double t7014;
  double t7015;
  double t7016;
  double t7012;
  double t7027;
  double t7028;
  double t7029;
  double t7025;
  double t7041;
  double t7042;
  double t7043;
  double t7059;
  double t7060;
  double t7061;
  double t7073;
  double t7074;
  double t7075;
  double t7092;
  double t7091;
  double t7093;
  double t7094;
  double t7096;
  double t7097;
  double t7098;
  double t7056;
  double t7110;
  double t7111;
  double t7109;
  double t7112;
  double t7113;
  double t7115;
  double t7116;
  double t7117;
  double t7078;
  double t7129;
  double t7130;
  double t7128;
  double t7131;
  double t7132;
  double t7134;
  double t7135;
  double t7136;
  double t7147;
  double t7148;
  double t7149;
  double t7151;
  double t7160;
  double t7161;
  double t7162;
  double t7164;
  double t7173;
  double t7174;
  double t7175;
  double t7177;
  double t6855;
  double t7190;
  double t7191;
  double t7207;
  double t7208;
  double t7209;
  double t7221;
  double t7222;
  double t7223;
  double t7240;
  double t7239;
  double t7241;
  double t7242;
  double t7244;
  double t7245;
  double t7246;
  double t7258;
  double t7259;
  double t7260;
  double t7257;
  double t7261;
  double t7262;
  double t7264;
  double t7265;
  double t7266;
  double t7278;
  double t7279;
  double t7280;
  double t7277;
  double t7281;
  double t7282;
  double t7284;
  double t7285;
  double t7286;
  double t7297;
  double t7298;
  double t7299;
  double t7301;
  double t7310;
  double t7311;
  double t7312;
  double t7314;
  double t7323;
  double t7324;
  double t7325;
  double t7327;
  double t7339;
  double t7340;
  double t7341;
  double t7357;
  double t7358;
  double t7359;
  double t7371;
  double t7372;
  double t7373;
  double t7390;
  double t7389;
  double t7391;
  double t7392;
  double t7394;
  double t7395;
  double t7396;
  double t7354;
  double t7408;
  double t7409;
  double t7407;
  double t7410;
  double t7411;
  double t7413;
  double t7414;
  double t7415;
  double t7376;
  double t7427;
  double t7428;
  double t7426;
  double t7429;
  double t7430;
  double t7432;
  double t7433;
  double t7434;
  double t7445;
  double t7446;
  double t7447;
  double t7449;
  double t7458;
  double t7459;
  double t7460;
  double t7462;
  double t7471;
  double t7472;
  double t7473;
  double t7475;
  t583 = Cos(var1[3]);
  t238 = Cos(var1[5]);
  t475 = Sin(var1[4]);
  t401 = Sin(var1[3]);
  t586 = Sin(var1[5]);
  t480 = -1.*t238*t401*t475;
  t666 = t583*t586;
  t702 = t480 + t666;
  t756 = t583*t238*t475;
  t862 = t401*t586;
  t900 = t756 + t862;
  t1009 = Cos(var1[10]);
  t1002 = Cos(var1[9]);
  t973 = Sin(var1[10]);
  t998 = t973*t702;
  t1013 = t1002*t1009*t900;
  t1023 = t998 + t1013;
  t1031 = t1009*t702;
  t1060 = -1.*t1002*t973*t900;
  t1127 = t1031 + t1060;
  t1319 = Cos(var1[11]);
  t1376 = 0. + t1319;
  t1208 = Sin(var1[11]);
  t739 = Sin(var1[9]);
  t1519 = -1.*t238*t401;
  t1522 = t583*t475*t586;
  t1523 = t1519 + t1522;
  t1541 = -1.*t583*t238;
  t1549 = -1.*t401*t475*t586;
  t1550 = t1541 + t1549;
  t1453 = 0. + t1208;
  t1557 = -1.*t1002*t973*t1523;
  t1618 = t1009*t1550;
  t1621 = t1557 + t1618;
  t1650 = t1002*t1009*t1523;
  t1660 = t973*t1550;
  t1666 = t1650 + t1660;
  t1221 = -1.*t1208;
  t1294 = 0. + t1221;
  t1967 = Cos(var1[4]);
  t2047 = -1.*t1002*t583*t1967*t973;
  t2148 = -1.*t1009*t1967*t401;
  t2149 = t2047 + t2148;
  t2164 = t1002*t1009*t583*t1967;
  t2212 = -1.*t1967*t973*t401;
  t2217 = t2164 + t2212;
  t725 = 0.2429*t702;
  t2602 = Cos(var1[7]);
  t2601 = Cos(var1[6]);
  t2666 = Sin(var1[7]);
  t2773 = t2602*t702;
  t2805 = -1.*t2601*t900*t2666;
  t2846 = t2773 + t2805;
  t2628 = t2601*t2602*t900;
  t2672 = t702*t2666;
  t2688 = t2628 + t2672;
  t2906 = Cos(var1[8]);
  t2942 = 0. + t2906;
  t2976 = Sin(var1[8]);
  t1554 = 0.2429*t1550;
  t2586 = Sin(var1[6]);
  t3336 = t2602*t1550;
  t3376 = -1.*t2601*t1523*t2666;
  t3407 = t3336 + t3376;
  t3484 = t2601*t2602*t1523;
  t3489 = t1550*t2666;
  t3490 = t3484 + t3489;
  t2982 = -1.*t2976;
  t2999 = 0. + t2982;
  t3175 = 0. + t2976;
  t2043 = -0.2429*t1967*t401;
  t3815 = -1.*t1967*t2602*t401;
  t3834 = -1.*t583*t1967*t2601*t2666;
  t3846 = t3815 + t3834;
  t3871 = t583*t1967*t2601*t2602;
  t3876 = -1.*t1967*t401*t2666;
  t3921 = t3871 + t3876;
  t4218 = Cos(var1[16]);
  t4213 = Cos(var1[15]);
  t4174 = Sin(var1[16]);
  t4203 = t4174*t702;
  t4231 = t4213*t4218*t900;
  t4238 = t4203 + t4231;
  t4250 = t4218*t702;
  t4254 = -1.*t4213*t4174*t900;
  t4255 = t4250 + t4254;
  t4454 = Cos(var1[17]);
  t4492 = 0. + t4454;
  t4332 = Sin(var1[17]);
  t4145 = Sin(var1[15]);
  t4558 = 0. + t4332;
  t4631 = -1.*t4213*t4174*t1523;
  t4645 = t4218*t1550;
  t4683 = t4631 + t4645;
  t4710 = t4213*t4218*t1523;
  t4725 = t4174*t1550;
  t4734 = t4710 + t4725;
  t4377 = -1.*t4332;
  t4383 = 0. + t4377;
  t4950 = -1.*t4213*t583*t1967*t4174;
  t4958 = -1.*t4218*t1967*t401;
  t4960 = t4950 + t4958;
  t4980 = t4213*t4218*t583*t1967;
  t4984 = -1.*t1967*t4174*t401;
  t4987 = t4980 + t4984;
  t4144 = -0.1944*t702;
  t5221 = Cos(var1[13]);
  t5197 = Cos(var1[12]);
  t5147 = Sin(var1[13]);
  t5150 = t5147*t702;
  t5251 = t5197*t5221*t900;
  t5255 = t5150 + t5251;
  t5265 = t5221*t702;
  t5267 = -1.*t5197*t5147*t900;
  t5272 = t5265 + t5267;
  t5304 = Cos(var1[14]);
  t5307 = 0. + t5304;
  t5279 = Sin(var1[14]);
  t5137 = Sin(var1[12]);
  t4625 = -0.1944*t1550;
  t5400 = 0. + t5279;
  t5470 = -1.*t5197*t5147*t1523;
  t5475 = t5221*t1550;
  t5486 = t5470 + t5475;
  t5504 = t5197*t5221*t1523;
  t5509 = t5147*t1550;
  t5512 = t5504 + t5509;
  t5280 = -1.*t5279;
  t5281 = 0. + t5280;
  t4949 = 0.1944*t1967*t401;
  t5610 = -1.*t5197*t583*t1967*t5147;
  t5611 = -1.*t5221*t1967*t401;
  t5616 = t5610 + t5611;
  t5633 = t5197*t5221*t583*t1967;
  t5638 = -1.*t1967*t5147*t401;
  t5650 = t5633 + t5638;
  t5785 = t1002*t1967*t238*t401;
  t5786 = -1.*t739;
  t5789 = 0. + t5786;
  t5802 = -1.*t238*t5789*t475;
  t5803 = t5785 + t5802;
  t5783 = t583*t1967*t238*t973;
  t5804 = t1009*t5803;
  t5809 = t5783 + t5804;
  t5814 = t1009*t583*t1967*t238;
  t5815 = -1.*t973*t5803;
  t5825 = t5814 + t5815;
  t5761 = 0. + t1002;
  t5893 = t1002*t1967*t401*t586;
  t5898 = -1.*t5789*t475*t586;
  t5907 = t5893 + t5898;
  t5880 = t583*t1967*t973*t586;
  t5908 = t1009*t5907;
  t5909 = t5880 + t5908;
  t5912 = t1009*t583*t1967*t586;
  t5913 = -1.*t973*t5907;
  t5914 = t5912 + t5913;
  t5967 = -1.*t1967*t5789;
  t5968 = -1.*t1002*t401*t475;
  t5972 = t5967 + t5968;
  t5966 = -1.*t583*t973*t475;
  t5973 = t1009*t5972;
  t5975 = t5966 + t5973;
  t5981 = -1.*t1009*t583*t475;
  t5987 = -1.*t973*t5972;
  t5990 = t5981 + t5987;
  t5749 = 0.2429*t583*t1967*t238;
  t6028 = t1967*t238*t2601*t401;
  t6029 = 0. + t2586;
  t6030 = -1.*t238*t475*t6029;
  t6031 = t6028 + t6030;
  t6063 = t583*t1967*t238*t2602;
  t6066 = -1.*t6031*t2666;
  t6070 = t6063 + t6066;
  t6033 = t2602*t6031;
  t6035 = t583*t1967*t238*t2666;
  t6038 = t6033 + t6035;
  t5850 = 0.2429*t583*t1967*t586;
  t6013 = 0. + t2601;
  t6132 = t1967*t2601*t401*t586;
  t6133 = -1.*t475*t586*t6029;
  t6136 = t6132 + t6133;
  t6143 = t583*t1967*t2602*t586;
  t6146 = -1.*t6136*t2666;
  t6149 = t6143 + t6146;
  t6138 = t2602*t6136;
  t6139 = t583*t1967*t586*t2666;
  t6140 = t6138 + t6139;
  t5943 = -0.2429*t583*t475;
  t6193 = -1.*t2601*t401*t475;
  t6198 = -1.*t1967*t6029;
  t6199 = t6193 + t6198;
  t6208 = -1.*t583*t2602*t475;
  t6218 = -1.*t6199*t2666;
  t6219 = t6208 + t6218;
  t6201 = t2602*t6199;
  t6203 = -1.*t583*t475*t2666;
  t6204 = t6201 + t6203;
  t5756 = -0.0817*t238*t475;
  t6264 = t4213*t1967*t238*t401;
  t6265 = -1.*t4145;
  t6266 = 0. + t6265;
  t6268 = -1.*t238*t6266*t475;
  t6271 = t6264 + t6268;
  t6263 = t583*t1967*t238*t4174;
  t6284 = t4218*t6271;
  t6285 = t6263 + t6284;
  t6290 = t4218*t583*t1967*t238;
  t6294 = -1.*t4174*t6271;
  t6299 = t6290 + t6294;
  t5852 = -0.0817*t475*t586;
  t6256 = 0. + t4213;
  t6338 = t4213*t1967*t401*t586;
  t6342 = -1.*t6266*t475*t586;
  t6345 = t6338 + t6342;
  t6334 = t583*t1967*t4174*t586;
  t6346 = t4218*t6345;
  t6347 = t6334 + t6346;
  t6352 = t4218*t583*t1967*t586;
  t6353 = -1.*t4174*t6345;
  t6356 = t6352 + t6353;
  t5942 = -0.0817*t1967;
  t6397 = -1.*t1967*t6266;
  t6398 = -1.*t4213*t401*t475;
  t6399 = t6397 + t6398;
  t6388 = -1.*t583*t4174*t475;
  t6404 = t4218*t6399;
  t6410 = t6388 + t6404;
  t6413 = -1.*t4218*t583*t475;
  t6416 = -1.*t4174*t6399;
  t6419 = t6413 + t6416;
  t6252 = -0.1944*t583*t1967*t238;
  t6012 = 0.0817*t238*t475;
  t6455 = t5197*t1967*t238*t401;
  t6457 = 0. + t5137;
  t6458 = -1.*t238*t6457*t475;
  t6466 = t6455 + t6458;
  t6454 = t583*t1967*t238*t5147;
  t6470 = t5221*t6466;
  t6472 = t6454 + t6470;
  t6475 = t5221*t583*t1967*t238;
  t6476 = -1.*t5147*t6466;
  t6477 = t6475 + t6476;
  t6324 = -0.1944*t583*t1967*t586;
  t6106 = 0.0817*t475*t586;
  t6447 = 0. + t5197;
  t6505 = t5197*t1967*t401*t586;
  t6510 = -1.*t6457*t475*t586;
  t6512 = t6505 + t6510;
  t6504 = t583*t1967*t5147*t586;
  t6513 = t5221*t6512;
  t6518 = t6504 + t6513;
  t6521 = t5221*t583*t1967*t586;
  t6522 = -1.*t5147*t6512;
  t6523 = t6521 + t6522;
  t6176 = 0.0817*t1967;
  t6382 = 0.1944*t583*t475;
  t6551 = -1.*t1967*t6457;
  t6552 = -1.*t5197*t401*t475;
  t6553 = t6551 + t6552;
  t6550 = -1.*t583*t5147*t475;
  t6558 = t5221*t6553;
  t6559 = t6550 + t6558;
  t6562 = -1.*t5221*t583*t475;
  t6563 = -1.*t5147*t6553;
  t6564 = t6562 + t6563;
  t6588 = t238*t401;
  t6589 = -1.*t583*t475*t586;
  t6591 = t6588 + t6589;
  t6608 = -1.*t1967*t5789*t586;
  t6610 = t1002*t1550;
  t6611 = t6608 + t6610;
  t6607 = t973*t6591;
  t6612 = t1009*t6611;
  t6613 = t6607 + t6612;
  t6617 = t1009*t6591;
  t6618 = -1.*t973*t6611;
  t6619 = t6617 + t6618;
  t6642 = t238*t401*t475;
  t6643 = -1.*t583*t586;
  t6644 = t6642 + t6643;
  t6658 = t1967*t238*t5789;
  t6659 = t1002*t6644;
  t6660 = t6658 + t6659;
  t6656 = t973*t900;
  t6661 = t1009*t6660;
  t6662 = t6656 + t6661;
  t6664 = t1009*t900;
  t6665 = -1.*t973*t6660;
  t6669 = t6664 + t6665;
  t6592 = 0.2429*t6591;
  t6692 = t2601*t1550;
  t6694 = -1.*t1967*t586*t6029;
  t6695 = t6692 + t6694;
  t6700 = t2602*t6591;
  t6701 = -1.*t6695*t2666;
  t6703 = t6700 + t6701;
  t6696 = t2602*t6695;
  t6697 = t6591*t2666;
  t6698 = t6696 + t6697;
  t6640 = 0.2429*t900;
  t6732 = t2601*t6644;
  t6733 = t1967*t238*t6029;
  t6734 = t6732 + t6733;
  t6739 = t2602*t900;
  t6740 = -1.*t6734*t2666;
  t6741 = t6739 + t6740;
  t6735 = t2602*t6734;
  t6736 = t900*t2666;
  t6737 = t6735 + t6736;
  t6587 = -0.0817*t1967*t586;
  t6768 = -1.*t1967*t6266*t586;
  t6769 = t4213*t1550;
  t6771 = t6768 + t6769;
  t6767 = t4174*t6591;
  t6773 = t4218*t6771;
  t6774 = t6767 + t6773;
  t6776 = t4218*t6591;
  t6777 = -1.*t4174*t6771;
  t6778 = t6776 + t6777;
  t6639 = 0.0817*t1967*t238;
  t6799 = t1967*t238*t6266;
  t6800 = t4213*t6644;
  t6802 = t6799 + t6800;
  t6798 = t4174*t900;
  t6805 = t4218*t6802;
  t6806 = t6798 + t6805;
  t6809 = t4218*t900;
  t6810 = -1.*t4174*t6802;
  t6811 = t6809 + t6810;
  t6682 = 0.0817*t1967*t586;
  t6760 = -0.1944*t6591;
  t6832 = -1.*t1967*t6457*t586;
  t6833 = t5197*t1550;
  t6834 = t6832 + t6833;
  t6831 = t5147*t6591;
  t6835 = t5221*t6834;
  t6836 = t6831 + t6835;
  t6838 = t5221*t6591;
  t6839 = -1.*t5147*t6834;
  t6840 = t6838 + t6839;
  t6719 = -0.0817*t1967*t238;
  t6793 = -0.1944*t900;
  t6860 = t1967*t238*t6457;
  t6861 = t5197*t6644;
  t6862 = t6860 + t6861;
  t6859 = t5147*t900;
  t6863 = t5221*t6862;
  t6864 = t6859 + t6863;
  t6866 = t5221*t900;
  t6868 = -1.*t5147*t6862;
  t6870 = t6866 + t6868;
  t6721 = -1.*t6644*t2586;
  t6885 = t1967*t238*t2601;
  t6886 = t6885 + t6721;
  t6898 = t583*t238;
  t6899 = t401*t475*t586;
  t6900 = t6898 + t6899;
  t6905 = t1967*t2601*t586;
  t6906 = -1.*t6900*t2586;
  t6907 = t6905 + t6906;
  t6919 = -1.*t2601*t475;
  t6920 = -1.*t1967*t401*t2586;
  t6921 = t6919 + t6920;
  t6939 = 0. + t756 + t862;
  t6937 = 0. + t6732 + t6733;
  t6938 = -1.*t2602*t6937;
  t6940 = -1.*t6939*t2666;
  t6941 = t6938 + t6940;
  t6943 = t2602*t6939;
  t6944 = -1.*t6937*t2666;
  t6945 = t6943 + t6944;
  t6960 = 0. + t1519 + t1522;
  t6956 = t2601*t6900;
  t6957 = t1967*t586*t6029;
  t6958 = 0. + t6956 + t6957;
  t6959 = -1.*t2602*t6958;
  t6961 = -1.*t6960*t2666;
  t6962 = t6959 + t6961;
  t6964 = t2602*t6960;
  t6965 = -1.*t6958*t2666;
  t6966 = t6964 + t6965;
  t6981 = t583*t1967;
  t6982 = 0. + t6981;
  t6977 = t1967*t2601*t401;
  t6978 = -1.*t475*t6029;
  t6979 = 0. + t6977 + t6978;
  t6980 = -1.*t2602*t6979;
  t6983 = -1.*t6982*t2666;
  t6984 = t6980 + t6983;
  t6986 = t6982*t2602;
  t6987 = -1.*t6979*t2666;
  t6988 = t6986 + t6987;
  t7001 = t2602*t6937;
  t7002 = t6939*t2666;
  t7003 = 0. + t7001 + t7002;
  t6999 = 0. + t6943 + t6944;
  t7014 = t2602*t6958;
  t7015 = t6960*t2666;
  t7016 = 0. + t7014 + t7015;
  t7012 = 0. + t6964 + t6965;
  t7027 = t2602*t6979;
  t7028 = t6982*t2666;
  t7029 = 0. + t7027 + t7028;
  t7025 = 0. + t6986 + t6987;
  t7041 = -1.*t1002*t1967*t238;
  t7042 = -1.*t739*t6644;
  t7043 = t7041 + t7042;
  t7059 = -1.*t1002*t1967*t586;
  t7060 = -1.*t739*t6900;
  t7061 = t7059 + t7060;
  t7073 = -1.*t1967*t739*t401;
  t7074 = t1002*t475;
  t7075 = t7073 + t7074;
  t7092 = 0. + t6658 + t6659;
  t7091 = -1.*t973*t6939;
  t7093 = -1.*t1009*t7092;
  t7094 = t7091 + t7093;
  t7096 = t1009*t6939;
  t7097 = -1.*t973*t7092;
  t7098 = t7096 + t7097;
  t7056 = t1002*t6900;
  t7110 = t1967*t5789*t586;
  t7111 = 0. + t7110 + t7056;
  t7109 = -1.*t973*t6960;
  t7112 = -1.*t1009*t7111;
  t7113 = t7109 + t7112;
  t7115 = t1009*t6960;
  t7116 = -1.*t973*t7111;
  t7117 = t7115 + t7116;
  t7078 = t1002*t1967*t401;
  t7129 = -1.*t5789*t475;
  t7130 = 0. + t7078 + t7129;
  t7128 = -1.*t6982*t973;
  t7131 = -1.*t1009*t7130;
  t7132 = t7128 + t7131;
  t7134 = t1009*t6982;
  t7135 = -1.*t973*t7130;
  t7136 = t7134 + t7135;
  t7147 = t973*t6939;
  t7148 = t1009*t7092;
  t7149 = 0. + t7147 + t7148;
  t7151 = 0. + t7096 + t7097;
  t7160 = t973*t6960;
  t7161 = t1009*t7111;
  t7162 = 0. + t7160 + t7161;
  t7164 = 0. + t7115 + t7116;
  t7173 = t6982*t973;
  t7174 = t1009*t7130;
  t7175 = 0. + t7173 + t7174;
  t7177 = 0. + t7134 + t7135;
  t6855 = -1.*t5137*t6644;
  t7190 = t5197*t1967*t238;
  t7191 = t7190 + t6855;
  t7207 = t5197*t1967*t586;
  t7208 = -1.*t5137*t6900;
  t7209 = t7207 + t7208;
  t7221 = -1.*t1967*t5137*t401;
  t7222 = -1.*t5197*t475;
  t7223 = t7221 + t7222;
  t7240 = 0. + t6860 + t6861;
  t7239 = -1.*t5147*t6939;
  t7241 = -1.*t5221*t7240;
  t7242 = t7239 + t7241;
  t7244 = t5221*t6939;
  t7245 = -1.*t5147*t7240;
  t7246 = t7244 + t7245;
  t7258 = t1967*t6457*t586;
  t7259 = t5197*t6900;
  t7260 = 0. + t7258 + t7259;
  t7257 = -1.*t5147*t6960;
  t7261 = -1.*t5221*t7260;
  t7262 = t7257 + t7261;
  t7264 = t5221*t6960;
  t7265 = -1.*t5147*t7260;
  t7266 = t7264 + t7265;
  t7278 = t5197*t1967*t401;
  t7279 = -1.*t6457*t475;
  t7280 = 0. + t7278 + t7279;
  t7277 = -1.*t6982*t5147;
  t7281 = -1.*t5221*t7280;
  t7282 = t7277 + t7281;
  t7284 = t5221*t6982;
  t7285 = -1.*t5147*t7280;
  t7286 = t7284 + t7285;
  t7297 = t5147*t6939;
  t7298 = t5221*t7240;
  t7299 = 0. + t7297 + t7298;
  t7301 = 0. + t7244 + t7245;
  t7310 = t5147*t6960;
  t7311 = t5221*t7260;
  t7312 = 0. + t7310 + t7311;
  t7314 = 0. + t7264 + t7265;
  t7323 = t6982*t5147;
  t7324 = t5221*t7280;
  t7325 = 0. + t7323 + t7324;
  t7327 = 0. + t7284 + t7285;
  t7339 = -1.*t4213*t1967*t238;
  t7340 = -1.*t4145*t6644;
  t7341 = t7339 + t7340;
  t7357 = -1.*t4213*t1967*t586;
  t7358 = -1.*t4145*t6900;
  t7359 = t7357 + t7358;
  t7371 = -1.*t1967*t4145*t401;
  t7372 = t4213*t475;
  t7373 = t7371 + t7372;
  t7390 = 0. + t6799 + t6800;
  t7389 = -1.*t4174*t6939;
  t7391 = -1.*t4218*t7390;
  t7392 = t7389 + t7391;
  t7394 = t4218*t6939;
  t7395 = -1.*t4174*t7390;
  t7396 = t7394 + t7395;
  t7354 = t4213*t6900;
  t7408 = t1967*t6266*t586;
  t7409 = 0. + t7408 + t7354;
  t7407 = -1.*t4174*t6960;
  t7410 = -1.*t4218*t7409;
  t7411 = t7407 + t7410;
  t7413 = t4218*t6960;
  t7414 = -1.*t4174*t7409;
  t7415 = t7413 + t7414;
  t7376 = t4213*t1967*t401;
  t7427 = -1.*t6266*t475;
  t7428 = 0. + t7376 + t7427;
  t7426 = -1.*t6982*t4174;
  t7429 = -1.*t4218*t7428;
  t7430 = t7426 + t7429;
  t7432 = t4218*t6982;
  t7433 = -1.*t4174*t7428;
  t7434 = t7432 + t7433;
  t7445 = t4174*t6939;
  t7446 = t4218*t7390;
  t7447 = 0. + t7445 + t7446;
  t7449 = 0. + t7394 + t7395;
  t7458 = t4174*t6960;
  t7459 = t4218*t7409;
  t7460 = 0. + t7458 + t7459;
  t7462 = 0. + t7413 + t7414;
  t7471 = t6982*t4174;
  t7472 = t4218*t7428;
  t7473 = 0. + t7471 + t7472;
  t7475 = 0. + t7432 + t7433;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=1.;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=1.;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=1.;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=1.;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=1.;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=1.;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=1.;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=1.;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=1.;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=1.;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=1.;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=1.;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=1.;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=1.;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=-0.2083*t1023 - 0.1422*t1127 - 0.02*(t1023*t1294 + t1127*t1376) - 0.16*(t1023*t1376 + t1127*t1453) + t725 + 0.035199999999999995*t739*t900;
  p_output1[61]=t1554 - 0.1422*t1621 - 0.2083*t1666 - 0.02*(t1376*t1621 + t1294*t1666) - 0.16*(t1453*t1621 + t1376*t1666) + 0.035199999999999995*t1523*t739;
  p_output1[62]=t2043 - 0.1422*t2149 - 0.2083*t2217 - 0.02*(t1376*t2149 + t1294*t2217) - 0.16*(t1453*t2149 + t1376*t2217) + 0.035199999999999995*t1967*t583*t739;
  p_output1[63]=-0.2083*t2688 - 0.1422*t2846 - 0.02*(t2846*t2942 + t2688*t2999) - 0.16*(t2688*t2942 + t2846*t3175) + t725 + 0.0329*t2586*t900;
  p_output1[64]=t1554 + 0.0329*t1523*t2586 - 0.1422*t3407 - 0.2083*t3490 - 0.16*(t3175*t3407 + t2942*t3490) - 0.02*(t2942*t3407 + t2999*t3490);
  p_output1[65]=t2043 - 0.1422*t3846 - 0.2083*t3921 - 0.16*(t3175*t3846 + t2942*t3921) - 0.02*(t2942*t3846 + t2999*t3921) + 0.0329*t1967*t2586*t583;
  p_output1[66]=t4144 - 0.2083*t4238 - 0.1422*t4255 - 0.02*(t4238*t4383 + t4255*t4492) - 0.16*(t4238*t4492 + t4255*t4558) + 0.035199999999999995*t4145*t900;
  p_output1[67]=0.035199999999999995*t1523*t4145 + t4625 - 0.1422*t4683 - 0.2083*t4734 - 0.02*(t4492*t4683 + t4383*t4734) - 0.16*(t4558*t4683 + t4492*t4734);
  p_output1[68]=t4949 - 0.1422*t4960 - 0.2083*t4987 - 0.02*(t4492*t4960 + t4383*t4987) - 0.16*(t4558*t4960 + t4492*t4987) + 0.035199999999999995*t1967*t4145*t583;
  p_output1[69]=t4144 - 0.2083*t5255 - 0.1422*t5272 - 0.02*(t5255*t5281 + t5272*t5307) - 0.16*(t5255*t5307 + t5272*t5400) + 0.0329*t5137*t900;
  p_output1[70]=t4625 + 0.0329*t1523*t5137 - 0.1422*t5486 - 0.2083*t5512 - 0.02*(t5307*t5486 + t5281*t5512) - 0.16*(t5400*t5486 + t5307*t5512);
  p_output1[71]=t4949 - 0.1422*t5616 - 0.2083*t5650 - 0.02*(t5307*t5616 + t5281*t5650) - 0.16*(t5400*t5616 + t5307*t5650) + 0.0329*t1967*t5137*t583;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=1.;
  p_output1[77]=0;
  p_output1[78]=t5749 + t5756 - 0.2083*t5809 - 0.1422*t5825 - 0.02*(t1294*t5809 + t1376*t5825) - 0.16*(t1376*t5809 + t1453*t5825) + 0.035199999999999995*(-1.*t238*t475*t5761 + t1967*t238*t401*t739);
  p_output1[79]=t5850 + t5852 - 0.2083*t5909 - 0.1422*t5914 - 0.02*(t1294*t5909 + t1376*t5914) - 0.16*(t1376*t5909 + t1453*t5914) + 0.035199999999999995*(-1.*t475*t5761*t586 + t1967*t401*t586*t739);
  p_output1[80]=t5942 + t5943 - 0.2083*t5975 - 0.1422*t5990 - 0.02*(t1294*t5975 + t1376*t5990) - 0.16*(t1376*t5975 + t1453*t5990) + 0.035199999999999995*(-1.*t1967*t5761 - 1.*t401*t475*t739);
  p_output1[81]=t5749 + t6012 - 0.0329*(-1.*t1967*t238*t2586*t401 - 1.*t238*t475*t6013) - 0.2083*t6038 - 0.1422*t6070 - 0.02*(t2999*t6038 + t2942*t6070) - 0.16*(t2942*t6038 + t3175*t6070);
  p_output1[82]=t5850 - 0.0329*(-1.*t1967*t2586*t401*t586 - 1.*t475*t586*t6013) + t6106 - 0.2083*t6140 - 0.1422*t6149 - 0.02*(t2999*t6140 + t2942*t6149) - 0.16*(t2942*t6140 + t3175*t6149);
  p_output1[83]=t5943 - 0.0329*(t2586*t401*t475 - 1.*t1967*t6013) + t6176 - 0.2083*t6204 - 0.1422*t6219 - 0.02*(t2999*t6204 + t2942*t6219) - 0.16*(t2942*t6204 + t3175*t6219);
  p_output1[84]=t5756 + t6252 + 0.035199999999999995*(t1967*t238*t401*t4145 - 1.*t238*t475*t6256) - 0.2083*t6285 - 0.1422*t6299 - 0.02*(t4383*t6285 + t4492*t6299) - 0.16*(t4492*t6285 + t4558*t6299);
  p_output1[85]=t5852 + 0.035199999999999995*(t1967*t401*t4145*t586 - 1.*t475*t586*t6256) + t6324 - 0.2083*t6347 - 0.1422*t6356 - 0.02*(t4383*t6347 + t4492*t6356) - 0.16*(t4492*t6347 + t4558*t6356);
  p_output1[86]=t5942 + 0.035199999999999995*(-1.*t401*t4145*t475 - 1.*t1967*t6256) + t6382 - 0.2083*t6410 - 0.1422*t6419 - 0.02*(t4383*t6410 + t4492*t6419) - 0.16*(t4492*t6410 + t4558*t6419);
  p_output1[87]=t6012 + t6252 - 0.0329*(-1.*t1967*t238*t401*t5137 - 1.*t238*t475*t6447) - 0.2083*t6472 - 0.1422*t6477 - 0.02*(t5281*t6472 + t5307*t6477) - 0.16*(t5307*t6472 + t5400*t6477);
  p_output1[88]=t6106 + t6324 - 0.0329*(-1.*t1967*t401*t5137*t586 - 1.*t475*t586*t6447) - 0.2083*t6518 - 0.1422*t6523 - 0.02*(t5281*t6518 + t5307*t6523) - 0.16*(t5307*t6518 + t5400*t6523);
  p_output1[89]=t6176 + t6382 - 0.0329*(t401*t475*t5137 - 1.*t1967*t6447) - 0.2083*t6559 - 0.1422*t6564 - 0.02*(t5281*t6559 + t5307*t6564) - 0.16*(t5307*t6559 + t5400*t6564);
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=1.;
  p_output1[96]=t6587 + t6592 - 0.2083*t6613 - 0.1422*t6619 - 0.02*(t1294*t6613 + t1376*t6619) - 0.16*(t1376*t6613 + t1453*t6619) + 0.035199999999999995*(-1.*t1967*t5761*t586 + t1550*t739);
  p_output1[97]=t6639 + t6640 - 0.2083*t6662 - 0.1422*t6669 - 0.02*(t1294*t6662 + t1376*t6669) - 0.16*(t1376*t6662 + t1453*t6669) + 0.035199999999999995*(t1967*t238*t5761 + t6644*t739);
  p_output1[98]=0;
  p_output1[99]=-0.0329*(-1.*t1550*t2586 - 1.*t1967*t586*t6013) + t6592 + t6682 - 0.2083*t6698 - 0.1422*t6703 - 0.02*(t2999*t6698 + t2942*t6703) - 0.16*(t2942*t6698 + t3175*t6703);
  p_output1[100]=t6640 + t6719 - 0.0329*(t1967*t238*t6013 + t6721) - 0.2083*t6737 - 0.1422*t6741 - 0.02*(t2999*t6737 + t2942*t6741) - 0.16*(t2942*t6737 + t3175*t6741);
  p_output1[101]=0;
  p_output1[102]=0.035199999999999995*(t1550*t4145 - 1.*t1967*t586*t6256) + t6587 + t6760 - 0.2083*t6774 - 0.1422*t6778 - 0.02*(t4383*t6774 + t4492*t6778) - 0.16*(t4492*t6774 + t4558*t6778);
  p_output1[103]=t6639 + 0.035199999999999995*(t1967*t238*t6256 + t4145*t6644) + t6793 - 0.2083*t6806 - 0.1422*t6811 - 0.02*(t4383*t6806 + t4492*t6811) - 0.16*(t4492*t6806 + t4558*t6811);
  p_output1[104]=0;
  p_output1[105]=-0.0329*(-1.*t1550*t5137 - 1.*t1967*t586*t6447) + t6682 + t6760 - 0.2083*t6836 - 0.1422*t6840 - 0.02*(t5281*t6836 + t5307*t6840) - 0.16*(t5307*t6836 + t5400*t6840);
  p_output1[106]=t6719 + t6793 - 0.0329*(t1967*t238*t6447 + t6855) - 0.2083*t6864 - 0.1422*t6870 - 0.02*(t5281*t6864 + t5307*t6870) - 0.16*(t5307*t6864 + t5400*t6870);
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=-0.0329*(-1.*t1967*t238*t2586 - 1.*t2601*t6644) - 0.2083*t2602*t6886 + 0.1422*t2666*t6886 - 0.02*(-1.*t2666*t2942*t6886 + t2602*t2999*t6886) - 0.16*(t2602*t2942*t6886 - 1.*t2666*t3175*t6886);
  p_output1[118]=-0.0329*(-1.*t1967*t2586*t586 - 1.*t2601*t6900) - 0.2083*t2602*t6907 + 0.1422*t2666*t6907 - 0.02*(-1.*t2666*t2942*t6907 + t2602*t2999*t6907) - 0.16*(t2602*t2942*t6907 - 1.*t2666*t3175*t6907);
  p_output1[119]=-0.0329*(-1.*t1967*t2601*t401 + t2586*t475) - 0.2083*t2602*t6921 + 0.1422*t2666*t6921 - 0.02*(-1.*t2666*t2942*t6921 + t2602*t2999*t6921) - 0.16*(t2602*t2942*t6921 - 1.*t2666*t3175*t6921);
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=-0.1422*t6941 - 0.2083*t6945 - 0.16*(t3175*t6941 + t2942*t6945) - 0.02*(t2942*t6941 + t2999*t6945);
  p_output1[136]=-0.1422*t6962 - 0.2083*t6966 - 0.16*(t3175*t6962 + t2942*t6966) - 0.02*(t2942*t6962 + t2999*t6966);
  p_output1[137]=-0.1422*t6984 - 0.2083*t6988 - 0.16*(t3175*t6984 + t2942*t6988) - 0.02*(t2942*t6984 + t2999*t6988);
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=-0.02*(-1.*t2976*t6999 - 1.*t2906*t7003) - 0.16*(t2906*t6999 - 1.*t2976*t7003);
  p_output1[154]=-0.02*(-1.*t2976*t7012 - 1.*t2906*t7016) - 0.16*(t2906*t7012 - 1.*t2976*t7016);
  p_output1[155]=-0.02*(-1.*t2976*t7025 - 1.*t2906*t7029) - 0.16*(t2906*t7025 - 1.*t2976*t7029);
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=-0.2083*t1009*t7043 + 0.035199999999999995*(t6659 - 1.*t1967*t238*t739) + 0.1422*t7043*t973 - 0.02*(t1009*t1294*t7043 - 1.*t1376*t7043*t973) - 0.16*(t1009*t1376*t7043 - 1.*t1453*t7043*t973);
  p_output1[169]=-0.2083*t1009*t7061 + 0.035199999999999995*(t7056 - 1.*t1967*t586*t739) + 0.1422*t7061*t973 - 0.02*(t1009*t1294*t7061 - 1.*t1376*t7061*t973) - 0.16*(t1009*t1376*t7061 - 1.*t1453*t7061*t973);
  p_output1[170]=-0.2083*t1009*t7075 + 0.035199999999999995*(t7078 + t475*t739) + 0.1422*t7075*t973 - 0.02*(t1009*t1294*t7075 - 1.*t1376*t7075*t973) - 0.16*(t1009*t1376*t7075 - 1.*t1453*t7075*t973);
  p_output1[171]=0;
  p_output1[172]=0;
  p_output1[173]=0;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=-0.1422*t7094 - 0.2083*t7098 - 0.02*(t1376*t7094 + t1294*t7098) - 0.16*(t1453*t7094 + t1376*t7098);
  p_output1[187]=-0.1422*t7113 - 0.2083*t7117 - 0.02*(t1376*t7113 + t1294*t7117) - 0.16*(t1453*t7113 + t1376*t7117);
  p_output1[188]=-0.1422*t7132 - 0.2083*t7136 - 0.02*(t1376*t7132 + t1294*t7136) - 0.16*(t1453*t7132 + t1376*t7136);
  p_output1[189]=0;
  p_output1[190]=0;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=-0.02*(-1.*t1319*t7149 - 1.*t1208*t7151) - 0.16*(-1.*t1208*t7149 + t1319*t7151);
  p_output1[205]=-0.02*(-1.*t1319*t7162 - 1.*t1208*t7164) - 0.16*(-1.*t1208*t7162 + t1319*t7164);
  p_output1[206]=-0.02*(-1.*t1319*t7175 - 1.*t1208*t7177) - 0.16*(-1.*t1208*t7175 + t1319*t7177);
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=-0.0329*(-1.*t1967*t238*t5137 - 1.*t5197*t6644) + 0.1422*t5147*t7191 - 0.2083*t5221*t7191 - 0.02*(t5221*t5281*t7191 - 1.*t5147*t5307*t7191) - 0.16*(t5221*t5307*t7191 - 1.*t5147*t5400*t7191);
  p_output1[232]=-0.0329*(-1.*t1967*t5137*t586 - 1.*t5197*t6900) + 0.1422*t5147*t7209 - 0.2083*t5221*t7209 - 0.02*(t5221*t5281*t7209 - 1.*t5147*t5307*t7209) - 0.16*(t5221*t5307*t7209 - 1.*t5147*t5400*t7209);
  p_output1[233]=-0.0329*(t475*t5137 - 1.*t1967*t401*t5197) + 0.1422*t5147*t7223 - 0.2083*t5221*t7223 - 0.02*(t5221*t5281*t7223 - 1.*t5147*t5307*t7223) - 0.16*(t5221*t5307*t7223 - 1.*t5147*t5400*t7223);
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=-0.1422*t7242 - 0.2083*t7246 - 0.02*(t5307*t7242 + t5281*t7246) - 0.16*(t5400*t7242 + t5307*t7246);
  p_output1[250]=-0.1422*t7262 - 0.2083*t7266 - 0.02*(t5307*t7262 + t5281*t7266) - 0.16*(t5400*t7262 + t5307*t7266);
  p_output1[251]=-0.1422*t7282 - 0.2083*t7286 - 0.02*(t5307*t7282 + t5281*t7286) - 0.16*(t5400*t7282 + t5307*t7286);
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=-0.02*(-1.*t5304*t7299 - 1.*t5279*t7301) - 0.16*(-1.*t5279*t7299 + t5304*t7301);
  p_output1[268]=-0.02*(-1.*t5304*t7312 - 1.*t5279*t7314) - 0.16*(-1.*t5279*t7312 + t5304*t7314);
  p_output1[269]=-0.02*(-1.*t5304*t7325 - 1.*t5279*t7327) - 0.16*(-1.*t5279*t7325 + t5304*t7327);
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0.035199999999999995*(-1.*t1967*t238*t4145 + t6800) + 0.1422*t4174*t7341 - 0.2083*t4218*t7341 - 0.02*(t4218*t4383*t7341 - 1.*t4174*t4492*t7341) - 0.16*(t4218*t4492*t7341 - 1.*t4174*t4558*t7341);
  p_output1[283]=0.035199999999999995*(-1.*t1967*t4145*t586 + t7354) + 0.1422*t4174*t7359 - 0.2083*t4218*t7359 - 0.02*(t4218*t4383*t7359 - 1.*t4174*t4492*t7359) - 0.16*(t4218*t4492*t7359 - 1.*t4174*t4558*t7359);
  p_output1[284]=0.1422*t4174*t7373 - 0.2083*t4218*t7373 - 0.02*(t4218*t4383*t7373 - 1.*t4174*t4492*t7373) - 0.16*(t4218*t4492*t7373 - 1.*t4174*t4558*t7373) + 0.035199999999999995*(t4145*t475 + t7376);
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=-0.1422*t7392 - 0.2083*t7396 - 0.02*(t4492*t7392 + t4383*t7396) - 0.16*(t4558*t7392 + t4492*t7396);
  p_output1[301]=-0.1422*t7411 - 0.2083*t7415 - 0.02*(t4492*t7411 + t4383*t7415) - 0.16*(t4558*t7411 + t4492*t7415);
  p_output1[302]=-0.1422*t7430 - 0.2083*t7434 - 0.02*(t4492*t7430 + t4383*t7434) - 0.16*(t4558*t7430 + t4492*t7434);
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=-0.02*(-1.*t4454*t7447 - 1.*t4332*t7449) - 0.16*(-1.*t4332*t7447 + t4454*t7449);
  p_output1[319]=-0.02*(-1.*t4454*t7460 - 1.*t4332*t7462) - 0.16*(-1.*t4332*t7460 + t4454*t7462);
  p_output1[320]=-0.02*(-1.*t4454*t7473 - 1.*t4332*t7475) - 0.16*(-1.*t4332*t7473 + t4454*t7475);
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_hc_opt1_func.hh"

namespace SymFunction
{

void j_hc_opt1_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
