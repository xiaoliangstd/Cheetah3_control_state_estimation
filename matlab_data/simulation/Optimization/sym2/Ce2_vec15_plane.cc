/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:53:02 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t138;
  double t205;
  double t76;
  double t221;
  double t729;
  double t735;
  double t763;
  double t359;
  double t561;
  double t601;
  double t664;
  double t777;
  double t1476;
  double t1539;
  double t1584;
  double t785;
  double t1818;
  double t1840;
  double t1850;
  double t1876;
  double t1885;
  double t1906;
  double t1937;
  double t1948;
  double t1965;
  double t2117;
  double t140;
  double t314;
  double t336;
  double t2426;
  double t2451;
  double t2522;
  double t2547;
  double t1716;
  double t1724;
  double t1757;
  double t1915;
  double t2118;
  double t2360;
  double t2574;
  double t2395;
  double t2402;
  double t2420;
  double t3073;
  double t3132;
  double t3177;
  double t3191;
  double t3239;
  double t3461;
  double t3585;
  double t3586;
  double t2765;
  double t3134;
  double t3290;
  double t3293;
  double t424;
  double t773;
  double t838;
  double t840;
  double t1074;
  double t1137;
  double t1361;
  double t1589;
  double t1596;
  double t1619;
  double t1635;
  double t1664;
  double t4652;
  double t4736;
  double t4755;
  double t4761;
  double t4770;
  double t4799;
  double t4834;
  double t4850;
  double t4884;
  double t4932;
  double t5621;
  double t5833;
  double t5854;
  double t4944;
  double t4950;
  double t4953;
  double t4954;
  double t5039;
  double t5047;
  double t5087;
  double t5129;
  double t5160;
  double t5204;
  double t2937;
  double t3645;
  double t3677;
  double t6644;
  double t6660;
  double t6724;
  double t6813;
  double t6832;
  double t6850;
  double t6881;
  double t6908;
  double t6909;
  double t2421;
  double t3343;
  double t3406;
  double t3862;
  double t3886;
  double t3936;
  double t3937;
  double t3950;
  double t3996;
  double t4147;
  double t4169;
  double t8031;
  double t8058;
  double t8114;
  double t7661;
  double t7680;
  double t7865;
  double t9610;
  double t10384;
  double t9685;
  double t9692;
  double t9902;
  double t10405;
  double t10464;
  double t10684;
  double t11175;
  double t11247;
  double t11250;
  double t11278;
  double t11321;
  double t11323;
  double t11378;
  double t11393;
  double t11394;
  double t11409;
  double t11416;
  double t11434;
  double t11478;
  double t11487;
  double t11488;
  double t11509;
  double t11512;
  double t11518;
  double t11741;
  double t11742;
  double t11748;
  double t11722;
  double t11723;
  double t11738;
  double t11752;
  double t11755;
  double t11757;
  double t11740;
  double t11766;
  double t11773;
  double t11846;
  double t11851;
  double t11853;
  double t11870;
  double t11943;
  double t11946;
  double t12203;
  double t12204;
  double t12218;
  double t11793;
  double t12634;
  double t12636;
  double t12654;
  double t12678;
  double t12680;
  double t12681;
  double t12663;
  double t12664;
  double t12677;
  double t12682;
  double t12683;
  double t11955;
  double t12097;
  double t12128;
  double t12774;
  double t12780;
  double t12792;
  double t12809;
  double t12818;
  double t12822;
  double t12242;
  double t12296;
  double t12323;
  double t12325;
  double t12373;
  double t12391;
  double t12419;
  double t12894;
  double t12912;
  double t12913;
  double t12521;
  double t12564;
  double t12588;
  double t11558;
  double t11559;
  double t11590;
  double t11608;
  double t11613;
  double t11614;
  double t2612;
  double t2627;
  double t2732;
  double t2797;
  double t2938;
  double t3062;
  double t3071;
  double t3598;
  double t3618;
  double t3619;
  double t3670;
  double t3741;
  double t3808;
  double t3826;
  double t3860;
  double t4202;
  double t4290;
  double t4440;
  double t4484;
  double t4497;
  double t4529;
  double t4593;
  double t4607;
  double t11635;
  double t11636;
  double t11661;
  double t11690;
  double t11698;
  double t11703;
  double t5365;
  double t5374;
  double t5426;
  double t5453;
  double t5915;
  double t5976;
  double t5984;
  double t6086;
  double t6092;
  double t6135;
  double t6178;
  double t6274;
  double t6286;
  double t6487;
  double t6752;
  double t7065;
  double t7071;
  double t7316;
  double t7350;
  double t7359;
  double t7410;
  double t7416;
  double t7449;
  double t7490;
  double t7514;
  double t7522;
  double t7538;
  double t7539;
  double t7599;
  double t7609;
  double t7611;
  double t7614;
  double t7644;
  double t7645;
  double t7653;
  double t13184;
  double t13185;
  double t13190;
  double t7910;
  double t7918;
  double t8273;
  double t8355;
  double t8395;
  double t8407;
  double t8444;
  double t8477;
  double t8595;
  double t8669;
  double t8727;
  double t8746;
  double t8890;
  double t8944;
  double t9055;
  double t9089;
  double t11600;
  double t11628;
  double t11666;
  double t11704;
  double t11713;
  double t11408;
  double t11437;
  double t11443;
  double t11267;
  double t11335;
  double t11347;
  double t11498;
  double t11521;
  double t11526;
  double t10138;
  double t10818;
  double t10933;
  double t11778;
  double t11785;
  double t11789;
  double t11835;
  double t11836;
  double t11837;
  double t11845;
  double t11854;
  double t11971;
  double t12024;
  double t12032;
  double t12042;
  double t12084;
  double t12109;
  double t12131;
  double t12140;
  double t12144;
  double t12232;
  double t12235;
  double t12239;
  double t12246;
  double t12248;
  double t12267;
  double t12272;
  double t12300;
  double t12310;
  double t12320;
  double t12324;
  double t12353;
  double t12362;
  double t12363;
  double t12382;
  double t12383;
  double t12390;
  double t12399;
  double t12424;
  double t12443;
  double t12456;
  double t12473;
  double t12506;
  double t12522;
  double t12539;
  double t12546;
  double t12556;
  double t12562;
  double t12585;
  double t12604;
  double t12606;
  double t12609;
  double t12687;
  double t12713;
  double t12730;
  double t12740;
  double t12744;
  double t12747;
  double t12755;
  double t12803;
  double t12825;
  double t12830;
  double t12831;
  double t12834;
  double t12858;
  double t12869;
  double t12873;
  double t12878;
  double t12881;
  double t12889;
  double t12922;
  double t12927;
  double t12928;
  double t12937;
  double t12948;
  double t12955;
  double t12961;
  double t12962;
  double t12968;
  double t12969;
  double t12971;
  double t12973;
  double t12999;
  double t13004;
  double t13010;
  double t13025;
  double t13030;
  double t13034;
  double t13035;
  double t13037;
  double t13040;
  double t13044;
  double t13049;
  double t13054;
  double t13064;
  double t13066;
  double t13082;
  double t13094;
  double t13096;
  double t13105;
  double t13108;
  double t13125;
  double t13126;
  double t13135;
  double t13139;
  double t13141;
  double t13143;
  double t13151;
  double t13152;
  double t13421;
  double t13422;
  double t13424;
  double t10975;
  double t11352;
  double t11454;
  double t11527;
  double t11545;
  double t13320;
  double t13325;
  double t13329;
  double t13333;
  double t13339;
  double t13673;
  double t13686;
  double t13687;
  double t12751;
  double t12891;
  double t12959;
  double t13084;
  double t13158;
  double t13162;
  double t13597;
  double t13603;
  double t13609;
  double t13610;
  double t13612;
  double t13614;
  double t13388;
  double t13390;
  double t13391;
  double t13392;
  double t13394;
  double t13396;
  double t13813;
  double t13817;
  double t13818;
  double t13706;
  double t13711;
  double t13719;
  double t13747;
  double t13754;
  double t13756;
  double t11838;
  double t12174;
  double t12268;
  double t12465;
  double t12625;
  double t12631;
  double t13558;
  double t13567;
  double t13573;
  double t13580;
  double t13581;
  double t13583;
  double t13358;
  double t13360;
  double t13368;
  double t13369;
  double t13370;
  double t13384;
  double t13802;
  double t13803;
  double t13804;
  double t13806;
  double t13823;
  double t13835;
  double t13837;
  double t14014;
  double t14015;
  double t14023;
  double t14025;
  double t14064;
  double t14065;
  double t7659;
  double t8720;
  double t9165;
  double t13469;
  double t13483;
  double t13488;
  double t13259;
  double t13286;
  double t13291;
  double t13937;
  double t13942;
  double t13944;
  double t13729;
  double t13739;
  double t13741;
  double t14201;
  double t14202;
  double t14206;
  double t14208;
  double t14243;
  double t14249;
  double t4184;
  double t4943;
  double t5260;
  double t13429;
  double t13436;
  double t13440;
  double t13196;
  double t13206;
  double t13226;
  double t13920;
  double t13924;
  double t13927;
  double t13665;
  double t13693;
  double t13694;
  double t14397;
  double t14399;
  double t14405;
  double t14406;
  double t6223;
  double t6528;
  double t13448;
  double t13454;
  double t13247;
  double t13250;
  double t13885;
  double t13892;
  double t13649;
  double t13654;
  double t14382;
  double t14385;
  double t14390;
  double t13996;
  double t14001;
  double t14002;
  double t14190;
  double t1317;
  double t1668;
  double t1672;
  double t13405;
  double t13410;
  double t13411;
  double t13172;
  double t13176;
  double t13178;
  double t13873;
  double t13874;
  double t13879;
  double t13632;
  double t13640;
  double t13645;
  t138 = Cos(var1[14]);
  t205 = Sin(var1[13]);
  t76 = Cos(var1[13]);
  t221 = Sin(var1[14]);
  t729 = -1.*t138*t205;
  t735 = -1.*t76*t221;
  t763 = t729 + t735;
  t359 = Sin(var1[4]);
  t561 = Cos(var1[4]);
  t601 = Cos(var1[5]);
  t664 = Sin(var1[12]);
  t777 = Cos(var1[12]);
  t1476 = -1.*t76*t138;
  t1539 = t205*t221;
  t1584 = t1476 + t1539;
  t785 = Sin(var1[5]);
  t1818 = -1.*t138;
  t1840 = 1. + t1818;
  t1850 = -0.336601*t1840;
  t1876 = -0.356601*t138;
  t1885 = -0.16*t221;
  t1906 = 0. + t1850 + t1876 + t1885;
  t1937 = -0.20833*t1840;
  t1948 = -0.36833*t138;
  t1965 = 0.020000000000000018*t221;
  t2117 = 0. + t1937 + t1948 + t1965;
  t140 = t76*t138;
  t314 = -1.*t205*t221;
  t336 = t140 + t314;
  t2426 = -0.194401*t205;
  t2451 = -1.*t205*t1906;
  t2522 = t76*t2117;
  t2547 = 0. + t2426 + t2451 + t2522;
  t1716 = -1.*t76;
  t1724 = 1. + t1716;
  t1757 = -0.194401*t1724;
  t1915 = t76*t1906;
  t2118 = t205*t2117;
  t2360 = 0. + t1757 + t1915 + t2118;
  t2574 = 0. + t140 + t314;
  t2395 = t138*t205;
  t2402 = t76*t221;
  t2420 = 0. + t2395 + t2402;
  t3073 = -0.16*t138;
  t3132 = t3073 + t1965;
  t3177 = 0.020000000000000018*t138;
  t3191 = 0.16*t221;
  t3239 = t3177 + t3191;
  t3461 = -1.*t205*t3132;
  t3585 = t76*t3239;
  t3586 = t3461 + t3585;
  t2765 = 0. + t729 + t735;
  t3134 = t76*t3132;
  t3290 = t205*t3239;
  t3293 = t3134 + t3290;
  t424 = t336*t359;
  t773 = t601*t664*t763;
  t838 = -1.*t777*t763*t785;
  t840 = t773 + t838;
  t1074 = t561*t840;
  t1137 = t424 + t1074;
  t1361 = t763*t359;
  t1589 = t601*t664*t1584;
  t1596 = -1.*t777*t1584*t785;
  t1619 = t1589 + t1596;
  t1635 = t561*t1619;
  t1664 = t1361 + t1635;
  t4652 = t2574*t359;
  t4736 = t664*t2765;
  t4755 = 0. + t4736;
  t4761 = t601*t4755;
  t4770 = t777*t2765;
  t4799 = 0. + t4770;
  t4834 = -1.*t4799*t785;
  t4850 = 0. + t4761 + t4834;
  t4884 = t561*t4850;
  t4932 = 0. + t4652 + t4884;
  t5621 = t138*t2117;
  t5833 = 0.194401*t221;
  t5854 = t1906*t221;
  t4944 = t2420*t359;
  t4950 = t664*t2574;
  t4953 = 0. + t4950;
  t4954 = t601*t4953;
  t5039 = t777*t2574;
  t5047 = 0. + t5039;
  t5087 = -1.*t5047*t785;
  t5129 = 0. + t4954 + t5087;
  t5160 = t561*t5129;
  t5204 = 0. + t4944 + t5160;
  t2937 = t2360*t2574;
  t3645 = t2360*t763;
  t3677 = t3293*t2574;
  t6644 = 0.032875*t664;
  t6660 = t777*t2547;
  t6724 = t6644 + t6660;
  t6813 = -1.*t777;
  t6832 = 1. + t6813;
  t6850 = -0.081715*t6832;
  t6881 = -0.11459*t777;
  t6908 = t664*t2547;
  t6909 = t6850 + t6881 + t6908;
  t2421 = -1.*t2360*t2420;
  t3343 = -1.*t3293*t2420;
  t3406 = -1.*t2360*t336;
  t3862 = 0. + t777;
  t3886 = t3862*t601;
  t3936 = -1.*t664;
  t3937 = 0. + t3936;
  t3950 = -1.*t3937*t785;
  t3996 = 0. + t3886 + t3950;
  t4147 = t561*t3996;
  t4169 = 0. + t4147;
  t8031 = -1.*t3937*t6724;
  t8058 = -1.*t3862*t6909;
  t8114 = 0. + t8031 + t8058;
  t7661 = t3937*t6724;
  t7680 = t3862*t6909;
  t7865 = 0. + t7661 + t7680;
  t9610 = Sin(var1[3]);
  t10384 = Cos(var1[3]);
  t9685 = t777*t601*t763;
  t9692 = t664*t763*t785;
  t9902 = t9685 + t9692;
  t10405 = t561*t336;
  t10464 = -1.*t359*t840;
  t10684 = t10405 + t10464;
  t11175 = t777*t601*t1584;
  t11247 = t664*t1584*t785;
  t11250 = t11175 + t11247;
  t11278 = t561*t763;
  t11321 = -1.*t359*t1619;
  t11323 = t11278 + t11321;
  t11378 = t601*t4799;
  t11393 = t4755*t785;
  t11394 = 0. + t11378 + t11393;
  t11409 = t561*t2574;
  t11416 = -1.*t359*t4850;
  t11434 = 0. + t11409 + t11416;
  t11478 = t601*t5047;
  t11487 = t4953*t785;
  t11488 = 0. + t11478 + t11487;
  t11509 = t561*t2420;
  t11512 = -1.*t359*t5129;
  t11518 = 0. + t11509 + t11512;
  t11741 = t601*t3937;
  t11742 = t3862*t785;
  t11748 = 0. + t11741 + t11742;
  t11722 = t601*t6909;
  t11723 = -1.*t6724*t785;
  t11738 = 0. + t11722 + t11723;
  t11752 = t601*t6724;
  t11755 = t6909*t785;
  t11757 = 0. + t11752 + t11755;
  t11740 = t3996*t11738;
  t11766 = t11748*t11757;
  t11773 = 0. + t11740 + t11766;
  t11846 = t601*t664*t3586;
  t11851 = -1.*t777*t3586*t785;
  t11853 = t11846 + t11851;
  t11870 = t777*t601*t3586;
  t11943 = t664*t3586*t785;
  t11946 = t11870 + t11943;
  t12203 = -1.*t3996*t11738;
  t12204 = -1.*t11748*t11757;
  t12218 = 0. + t12203 + t12204;
  t11793 = -1.*t11757*t11394;
  t12634 = t2360*t359;
  t12636 = t561*t11738;
  t12654 = 0. + t12634 + t12636;
  t12678 = t561*t2360;
  t12680 = -1.*t359*t11738;
  t12681 = 0. + t12678 + t12680;
  t12663 = t4169*t12654;
  t12664 = -1.*t359*t3996;
  t12677 = 0. + t12664;
  t12682 = t12677*t12681;
  t12683 = t11766 + t12663 + t12682;
  t11955 = t11748*t11946;
  t12097 = -1.*t11757*t11250;
  t12128 = -1.*t11946*t11394;
  t12774 = t3293*t359;
  t12780 = t561*t11853;
  t12792 = t12774 + t12780;
  t12809 = t561*t3293;
  t12818 = -1.*t359*t11853;
  t12822 = t12809 + t12818;
  t12242 = t11757*t11488;
  t12296 = t11757*t11394;
  t12323 = t11757*t11250;
  t12325 = t11946*t11394;
  t12373 = -1.*t11757*t11488;
  t12391 = -1.*t11757*t9902;
  t12419 = -1.*t11946*t11488;
  t12894 = -1.*t4169*t12654;
  t12912 = -1.*t12677*t12681;
  t12913 = t12204 + t12894 + t12912;
  t12521 = -1.*t11748*t11946;
  t12564 = t11757*t9902;
  t12588 = t11946*t11488;
  t11558 = t10384*t9902;
  t11559 = -1.*t9610*t10684;
  t11590 = t11558 + t11559;
  t11608 = t10384*t11250;
  t11613 = -1.*t9610*t11323;
  t11614 = t11608 + t11613;
  t2612 = -1.*t2547*t2574;
  t2627 = 0. + t2421 + t2612;
  t2732 = -1.*t763*t2627;
  t2797 = t2547*t2765;
  t2938 = 0. + t2797 + t2937;
  t3062 = -1.*t336*t2938;
  t3071 = -1.*t2547*t763;
  t3598 = -1.*t3586*t2574;
  t3618 = t3071 + t3343 + t3406 + t3598;
  t3619 = -1.*t2574*t3618;
  t3670 = t3586*t2765;
  t3741 = t2547*t1584;
  t3808 = t3645 + t3670 + t3677 + t3741;
  t3826 = -1.*t2420*t3808;
  t3860 = t2732 + t3062 + t3619 + t3826;
  t4202 = 0.032875*t2574;
  t4290 = 0. + t4202;
  t4440 = -0.081715*t2765;
  t4484 = -0.11459*t2420;
  t4497 = 0. + t4440 + t4484;
  t4529 = -0.11459*t336;
  t4593 = -0.081715*t1584;
  t4607 = t4529 + t4593;
  t11635 = t10384*t11394;
  t11636 = -1.*t9610*t11434;
  t11661 = 0. + t11635 + t11636;
  t11690 = t10384*t11488;
  t11698 = -1.*t9610*t11518;
  t11703 = 0. + t11690 + t11698;
  t5365 = -0.194401*t138;
  t5374 = -1.*t138*t1906;
  t5426 = t2117*t221;
  t5453 = 0. + t5365 + t5374 + t5426;
  t5915 = 0. + t5621 + t5833 + t5854;
  t5976 = 0.194401*t138;
  t5984 = t138*t1906;
  t6086 = t138*t3239;
  t6092 = -1.*t2117*t221;
  t6135 = t3132*t221;
  t6178 = t5976 + t5984 + t6086 + t6092 + t6135;
  t6274 = -1.*t138*t3132;
  t6286 = t3239*t221;
  t6487 = t5621 + t6274 + t5833 + t5854 + t6286;
  t6752 = t6724*t4799;
  t7065 = t6909*t4755;
  t7071 = t2937 + t6752 + t7065;
  t7316 = t336*t7071;
  t7350 = t777*t6724*t1584;
  t7359 = t664*t6909*t1584;
  t7410 = t777*t3586*t4799;
  t7416 = t664*t3586*t4755;
  t7449 = t3645 + t3677 + t7350 + t7359 + t7410 + t7416;
  t7490 = t2420*t7449;
  t7514 = -1.*t6724*t5047;
  t7522 = -1.*t6909*t4953;
  t7538 = t2421 + t7514 + t7522;
  t7539 = t763*t7538;
  t7599 = -1.*t777*t6724*t763;
  t7609 = -1.*t664*t6909*t763;
  t7611 = -1.*t777*t3586*t5047;
  t7614 = -1.*t664*t3586*t4953;
  t7644 = t7599 + t7609 + t3343 + t3406 + t7611 + t7614;
  t7645 = t2574*t7644;
  t7653 = t7316 + t7490 + t7539 + t7645;
  t13184 = t10384*t11748;
  t13185 = -1.*t9610*t12677;
  t13190 = 0. + t13184 + t13185;
  t7910 = t7865*t2574;
  t7918 = 0. + t7910;
  t8273 = t8114*t2420;
  t8355 = 0. + t8273;
  t8395 = -1.*t777*t3937*t3586;
  t8407 = -1.*t3862*t664*t3586;
  t8444 = t8395 + t8407;
  t8477 = t8444*t2420;
  t8595 = t8114*t336;
  t8669 = t8477 + t8595;
  t8727 = t7865*t763;
  t8746 = t777*t3937*t3586;
  t8890 = t3862*t664*t3586;
  t8944 = t8746 + t8890;
  t9055 = t8944*t2574;
  t9089 = t8727 + t9055;
  t11600 = 0.241*t5204*t11590;
  t11628 = 0.241*t4932*t11614;
  t11666 = 0.241*t1664*t11661;
  t11704 = 0.241*t1137*t11703;
  t11713 = t11600 + t11628 + t11666 + t11704;
  t11408 = t9610*t11394;
  t11437 = t10384*t11434;
  t11443 = 0. + t11408 + t11437;
  t11267 = t9610*t11250;
  t11335 = t10384*t11323;
  t11347 = t11267 + t11335;
  t11498 = t9610*t11488;
  t11521 = t10384*t11518;
  t11526 = 0. + t11498 + t11521;
  t10138 = t9610*t9902;
  t10818 = t10384*t10684;
  t10933 = t10138 + t10818;
  t11778 = t11394*t11773;
  t11785 = -1.*t2360*t2574;
  t11789 = -1.*t11738*t4850;
  t11835 = t11785 + t11789 + t11793;
  t11836 = t11748*t11835;
  t11837 = t11778 + t11836;
  t11845 = t11250*t11773;
  t11854 = t3996*t11853;
  t11971 = t11854 + t11955;
  t12024 = t11394*t11971;
  t12032 = -1.*t2360*t763;
  t12042 = -1.*t3293*t2574;
  t12084 = -1.*t11738*t1619;
  t12109 = -1.*t11853*t4850;
  t12131 = t12032 + t12042 + t12084 + t12097 + t12109 + t12128;
  t12140 = t11748*t12131;
  t12144 = t11845 + t12024 + t12140;
  t12232 = t11488*t12218;
  t12235 = t2360*t2420;
  t12239 = t11738*t5129;
  t12246 = t12235 + t12239 + t12242;
  t12248 = t11748*t12246;
  t12267 = t12232 + t12248;
  t12272 = t11738*t4850;
  t12300 = t2937 + t12272 + t12296;
  t12310 = t9902*t12300;
  t12320 = t11738*t1619;
  t12324 = t11853*t4850;
  t12353 = t3645 + t3677 + t12320 + t12323 + t12324 + t12325;
  t12362 = t11488*t12353;
  t12363 = -1.*t11738*t5129;
  t12382 = t2421 + t12363 + t12373;
  t12383 = t11250*t12382;
  t12390 = -1.*t11738*t840;
  t12399 = -1.*t11853*t5129;
  t12424 = t3343 + t3406 + t12390 + t12391 + t12399 + t12419;
  t12443 = t11394*t12424;
  t12456 = t12310 + t12362 + t12383 + t12443;
  t12473 = t9902*t12218;
  t12506 = -1.*t3996*t11853;
  t12522 = t12506 + t12521;
  t12539 = t11488*t12522;
  t12546 = t3293*t2420;
  t12556 = t2360*t336;
  t12562 = t11738*t840;
  t12585 = t11853*t5129;
  t12604 = t12546 + t12556 + t12562 + t12564 + t12585 + t12588;
  t12606 = t11748*t12604;
  t12609 = t12473 + t12539 + t12606;
  t12687 = t4932*t12683;
  t12713 = -1.*t12654*t4932;
  t12730 = -1.*t12681*t11434;
  t12740 = t11793 + t12713 + t12730;
  t12744 = t4169*t12740;
  t12747 = t12687 + t12744;
  t12755 = t1664*t12683;
  t12803 = t4169*t12792;
  t12825 = t12677*t12822;
  t12830 = t11955 + t12803 + t12825;
  t12831 = t4932*t12830;
  t12834 = -1.*t12654*t1664;
  t12858 = -1.*t12681*t11323;
  t12869 = -1.*t12792*t4932;
  t12873 = -1.*t12822*t11434;
  t12878 = t12097 + t12128 + t12834 + t12858 + t12869 + t12873;
  t12881 = t4169*t12878;
  t12889 = t12755 + t12831 + t12881;
  t12922 = t5204*t12913;
  t12927 = t12654*t5204;
  t12928 = t12681*t11518;
  t12937 = t12242 + t12927 + t12928;
  t12948 = t4169*t12937;
  t12955 = t12922 + t12948;
  t12961 = t12654*t4932;
  t12962 = t12681*t11434;
  t12968 = t12296 + t12961 + t12962;
  t12969 = t1137*t12968;
  t12971 = t12654*t1664;
  t12973 = t12681*t11323;
  t12999 = t12792*t4932;
  t13004 = t12822*t11434;
  t13010 = t12323 + t12325 + t12971 + t12973 + t12999 + t13004;
  t13025 = t5204*t13010;
  t13030 = -1.*t12654*t5204;
  t13034 = -1.*t12681*t11518;
  t13035 = t12373 + t13030 + t13034;
  t13037 = t1664*t13035;
  t13040 = -1.*t12654*t1137;
  t13044 = -1.*t12681*t10684;
  t13049 = -1.*t12792*t5204;
  t13054 = -1.*t12822*t11518;
  t13064 = t12391 + t12419 + t13040 + t13044 + t13049 + t13054;
  t13066 = t4932*t13064;
  t13082 = t12969 + t13025 + t13037 + t13066;
  t13094 = t1137*t12913;
  t13096 = -1.*t4169*t12792;
  t13105 = -1.*t12677*t12822;
  t13108 = t12521 + t13096 + t13105;
  t13125 = t5204*t13108;
  t13126 = t12654*t1137;
  t13135 = t12681*t10684;
  t13139 = t12792*t5204;
  t13141 = t12822*t11518;
  t13143 = t12564 + t12588 + t13126 + t13135 + t13139 + t13141;
  t13151 = t4169*t13143;
  t13152 = t13094 + t13125 + t13151;
  t13421 = t9610*t11748;
  t13422 = t10384*t12677;
  t13424 = 0. + t13421 + t13422;
  t10975 = 0.241*t5204*t10933;
  t11352 = 0.241*t4932*t11347;
  t11454 = 0.241*t1664*t11443;
  t11527 = 0.241*t1137*t11526;
  t11545 = t10975 + t11352 + t11454 + t11527;
  t13320 = 0.241*t11614*t11443;
  t13325 = 0.241*t11347*t11661;
  t13329 = 0.241*t11590*t11526;
  t13333 = 0.241*t10933*t11703;
  t13339 = t13320 + t13325 + t13329 + t13333;
  t13673 = t5204*t12968;
  t13686 = t4932*t13035;
  t13687 = t13673 + t13686;
  t12751 = 0.241*t1137*t12747;
  t12891 = 0.241*t5204*t12889;
  t12959 = 0.241*t1664*t12955;
  t13084 = 0.241*t4169*t13082;
  t13158 = 0.241*t4932*t13152;
  t13162 = t12751 + t12891 + t12959 + t13084 + t13158;
  t13597 = 0.241*t10933*t12747;
  t13603 = 0.241*t11526*t12889;
  t13609 = 0.241*t11347*t12955;
  t13610 = 0.241*t13424*t13082;
  t13612 = 0.241*t11443*t13152;
  t13614 = t13597 + t13603 + t13609 + t13610 + t13612;
  t13388 = 0.241*t11590*t12747;
  t13390 = 0.241*t11703*t12889;
  t13391 = 0.241*t11614*t12955;
  t13392 = 0.241*t13190*t13082;
  t13394 = 0.241*t11661*t13152;
  t13396 = t13388 + t13390 + t13391 + t13392 + t13394;
  t13813 = t11488*t12300;
  t13817 = t11394*t12382;
  t13818 = 0. + t13813 + t13817;
  t13706 = -1.*t2574*t2627;
  t13711 = -1.*t2420*t2938;
  t13719 = 0. + t13706 + t13711;
  t13747 = t2420*t7071;
  t13754 = t2574*t7538;
  t13756 = 0. + t13747 + t13754;
  t11838 = 0.241*t1137*t11837;
  t12174 = 0.241*t5204*t12144;
  t12268 = 0.241*t1664*t12267;
  t12465 = 0.241*t4169*t12456;
  t12625 = 0.241*t4932*t12609;
  t12631 = t11838 + t12174 + t12268 + t12465 + t12625;
  t13558 = 0.241*t10933*t11837;
  t13567 = 0.241*t12144*t11526;
  t13573 = 0.241*t11347*t12267;
  t13580 = 0.241*t13424*t12456;
  t13581 = 0.241*t11443*t12609;
  t13583 = t13558 + t13567 + t13573 + t13580 + t13581;
  t13358 = 0.241*t11590*t11837;
  t13360 = 0.241*t12144*t11703;
  t13368 = 0.241*t11614*t12267;
  t13369 = 0.241*t13190*t12456;
  t13370 = 0.241*t11661*t12609;
  t13384 = t13358 + t13360 + t13368 + t13369 + t13370;
  t13802 = 0.241*t12144*t12747;
  t13803 = 0.241*t11837*t12889;
  t13804 = 0.241*t12456*t13687;
  t13806 = 0.241*t12609*t12955;
  t13823 = 0.241*t13818*t13082;
  t13835 = 0.241*t12267*t13152;
  t13837 = t13802 + t13803 + t13804 + t13806 + t13823 + t13835;
  t14014 = 0.241*t8355;
  t14015 = 0. + t14014;
  t14023 = 0.241*t7918;
  t14025 = 0. + t14023;
  t14064 = 0.241*t13756;
  t14065 = 0. + t14064;
  t7659 = 0.241*t7653*t4169;
  t8720 = 0.241*t8669*t4932;
  t9165 = 0.241*t9089*t5204;
  t13469 = 0.241*t7653*t13424;
  t13483 = 0.241*t8669*t11443;
  t13488 = 0.241*t9089*t11526;
  t13259 = 0.241*t7653*t13190;
  t13286 = 0.241*t8669*t11661;
  t13291 = 0.241*t9089*t11703;
  t13937 = 0.241*t9089*t11837;
  t13942 = 0.241*t7653*t13818;
  t13944 = 0.241*t8669*t12267;
  t13729 = 0.241*t9089*t12747;
  t13739 = 0.241*t7653*t13687;
  t13741 = 0.241*t8669*t12955;
  t14201 = 0.241*t4497;
  t14202 = 0. + t14201;
  t14206 = 0.241*t4290;
  t14208 = 0. + t14206;
  t14243 = 0.241*t13719;
  t14249 = 0. + t14243;
  t4184 = 0.241*t3860*t4169;
  t4943 = 0.241*t4607*t4932;
  t5260 = 0.007922875*t763*t5204;
  t13429 = 0.241*t3860*t13424;
  t13436 = 0.241*t4607*t11443;
  t13440 = 0.007922875*t763*t11526;
  t13196 = 0.241*t3860*t13190;
  t13206 = 0.241*t4607*t11661;
  t13226 = 0.007922875*t763*t11703;
  t13920 = 0.007922875*t763*t11837;
  t13924 = 0.241*t3860*t13818;
  t13927 = 0.241*t4607*t12267;
  t13665 = 0.007922875*t763*t12747;
  t13693 = 0.241*t3860*t13687;
  t13694 = 0.241*t4607*t12955;
  t14397 = 0.241*t5915;
  t14399 = 0. + t14397;
  t14405 = 0.241*t5453;
  t14406 = 0. + t14405;
  t6223 = 0.241*t6178*t4932;
  t6528 = 0.241*t6487*t5204;
  t13448 = 0.241*t6178*t11443;
  t13454 = 0.241*t6487*t11526;
  t13247 = 0.241*t6178*t11661;
  t13250 = 0.241*t6487*t11703;
  t13885 = 0.241*t6487*t11837;
  t13892 = 0.241*t6178*t12267;
  t13649 = 0.241*t6487*t12747;
  t13654 = 0.241*t6178*t12955;
  t14382 = -0.03856*t6178;
  t14385 = 0.004820000000000004*t6487;
  t14390 = t14382 + t14385;
  t13996 = -0.03856*t8669;
  t14001 = 0.004820000000000004*t9089;
  t14002 = t13996 + t14001;
  t14190 = -0.03856*t4607;
  t1317 = 0.004820000000000004*t1137;
  t1668 = -0.03856*t1664;
  t1672 = t1317 + t1668;
  t13405 = 0.004820000000000004*t10933;
  t13410 = -0.03856*t11347;
  t13411 = t13405 + t13410;
  t13172 = 0.004820000000000004*t11590;
  t13176 = -0.03856*t11614;
  t13178 = t13172 + t13176;
  t13873 = 0.004820000000000004*t12144;
  t13874 = -0.03856*t12609;
  t13879 = t13873 + t13874;
  t13632 = 0.004820000000000004*t12889;
  t13640 = -0.03856*t13152;
  t13645 = t13632 + t13640;
  p_output1[0]=var2[14]*(-0.5*(0.482*t1664*t4932 + 0.482*t1137*t5204)*var2[0] - 0.5*t11713*var2[1] - 0.5*t11545*var2[2] - 0.5*t13162*var2[3] - 0.5*t12631*var2[4] - 0.5*(t7659 + 0.241*t1137*t7918 + 0.241*t1664*t8355 + t8720 + t9165)*var2[5] - 0.5*(t4184 + 0.241*t1137*t4290 + 0.241*t1664*t4497 + t4943 + t5260)*var2[12] - 0.5*(0.241*t1137*t5453 + 0.241*t1664*t5915 + t6223 + t6528)*var2[13] - 0.5*t1672*var2[14]);
  p_output1[1]=var2[14]*(-0.5*t11713*var2[0] - 0.5*(0.482*t11614*t11661 + 0.482*t11590*t11703)*var2[1] - 0.5*t13339*var2[2] - 0.5*t13396*var2[3] - 0.5*t13384*var2[4] - 0.5*(t13259 + t13286 + t13291 + 0.241*t11590*t7918 + 0.241*t11614*t8355)*var2[5] - 0.5*(t13196 + t13206 + t13226 + 0.241*t11590*t4290 + 0.241*t11614*t4497)*var2[12] - 0.5*(t13247 + t13250 + 0.241*t11590*t5453 + 0.241*t11614*t5915)*var2[13] - 0.5*t13178*var2[14]);
  p_output1[2]=var2[14]*(-0.5*t11545*var2[0] - 0.5*t13339*var2[1] - 0.5*(0.482*t11347*t11443 + 0.482*t10933*t11526)*var2[2] - 0.5*t13614*var2[3] - 0.5*t13583*var2[4] - 0.5*(t13469 + t13483 + t13488 + 0.241*t10933*t7918 + 0.241*t11347*t8355)*var2[5] - 0.5*(t13429 + t13436 + t13440 + 0.241*t10933*t4290 + 0.241*t11347*t4497)*var2[12] - 0.5*(t13448 + t13454 + 0.241*t10933*t5453 + 0.241*t11347*t5915)*var2[13] - 0.5*t13411*var2[14]);
  p_output1[3]=var2[14]*(-0.5*t13162*var2[0] - 0.5*t13396*var2[1] - 0.5*t13614*var2[2] - 0.5*(0.482*t12747*t12889 + 0.482*t12955*t13152 + 0.482*t13082*t13687)*var2[3] - 0.5*t13837*var2[4] - 0.5*(t13729 + t13739 + t13741 + 0.241*t13082*t13756 + 0.241*t12889*t7918 + 0.241*t13152*t8355)*var2[5] - 0.5*(t13665 + t13693 + t13694 + 0.241*t13082*t13719 + 0.241*t12889*t4290 + 0.241*t13152*t4497)*var2[12] - 0.5*(t13649 + t13654 + 0.241*t12889*t5453 + 0.241*t13152*t5915)*var2[13] - 0.5*t13645*var2[14]);
  p_output1[4]=var2[14]*(-0.5*t12631*var2[0] - 0.5*t13384*var2[1] - 0.5*t13583*var2[2] - 0.5*t13837*var2[3] - 0.5*(0.482*t11837*t12144 + 0.482*t12267*t12609 + 0.482*t12456*t13818)*var2[4] - 0.5*(0.241*t12456*t13756 + t13937 + t13942 + t13944 + 0.241*t12144*t7918 + 0.241*t12609*t8355)*var2[5] - 0.5*(0.241*t12456*t13719 + t13920 + t13924 + t13927 + 0.241*t12144*t4290 + 0.241*t12609*t4497)*var2[12] - 0.5*(t13885 + t13892 + 0.241*t12144*t5453 + 0.241*t12609*t5915)*var2[13] - 0.5*t13879*var2[14]);
  p_output1[5]=var2[14]*(-0.5*(t1137*t14025 + t14015*t1664 + t7659 + t8720 + t9165)*var2[0] - 0.5*(t13259 + t13286 + t13291 + t11614*t14015 + t11590*t14025)*var2[1] - 0.5*(t13469 + t13483 + t13488 + t11347*t14015 + t10933*t14025)*var2[2] - 0.5*(t13729 + t13739 + t13741 + t13152*t14015 + t12889*t14025 + t13082*t14065)*var2[3] - 0.5*(t13937 + t13942 + t13944 + t12609*t14015 + t12144*t14025 + t12456*t14065)*var2[4] - 0.5*(0.241*t13756*t7653 + t14065*t7653 + t14015*t8669 + 0.241*t8355*t8669 + t14025*t9089 + 0.241*t7918*t9089)*var2[5] - 0.5*(t14065*t3860 + t14015*t4607 + 0.032875*t14025*t763 + 0.241*t13719*t7653 + 0.241*t4497*t8669 + 0.241*t4290*t9089)*var2[12] - 0.5*(t14015*t6178 + t14025*t6487 + 0.241*t5915*t8669 + 0.241*t5453*t9089)*var2[13] - 0.5*t14002*var2[14]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=var2[14]*(-0.5*(t1137*t14208 + t14202*t1664 + t4184 + t4943 + t5260)*var2[0] - 0.5*(t13196 + t13206 + t13226 + t11614*t14202 + t11590*t14208)*var2[1] - 0.5*(t13429 + t13436 + t13440 + t11347*t14202 + t10933*t14208)*var2[2] - 0.5*(t13665 + t13693 + t13694 + t13152*t14202 + t12889*t14208 + t13082*t14249)*var2[3] - 0.5*(t13920 + t13924 + t13927 + t12609*t14202 + t12144*t14208 + t12456*t14249)*var2[4] - 0.5*(0.241*t13756*t3860 + t14249*t7653 + 0.007922875*t763*t7918 + 0.241*t4607*t8355 + t14202*t8669 + t14208*t9089)*var2[5] - 0.5*(0.241*t13719*t3860 + t14249*t3860 + t14202*t4607 + 0.241*t4497*t4607 + 0.032875*t14208*t763 + 0.007922875*t4290*t763)*var2[12] - 0.5*(0.241*t4607*t5915 + t14202*t6178 + t14208*t6487 + 0.007922875*t5453*t763)*var2[13] - 0.5*(t14190 + 0.00015845750000000012*t763)*var2[14]);
  p_output1[13]=var2[14]*(-0.5*(t1137*t14406 + t14399*t1664 + t6223 + t6528)*var2[0] - 0.5*(t13247 + t13250 + t11614*t14399 + t11590*t14406)*var2[1] - 0.5*(t13448 + t13454 + t11347*t14399 + t10933*t14406)*var2[2] - 0.5*(t13649 + t13654 + t13152*t14399 + t12889*t14406)*var2[3] - 0.5*(t13885 + t13892 + t12609*t14399 + t12144*t14406)*var2[4] - 0.5*(0.241*t6487*t7918 + 0.241*t6178*t8355 + t14399*t8669 + t14406*t9089)*var2[5] - 0.5*(t14399*t4607 + 0.241*t4497*t6178 + 0.241*t4290*t6487 + 0.032875*t14406*t763)*var2[12] - 0.5*(t14399*t6178 + 0.241*t5915*t6178 + t14406*t6487 + 0.241*t5453*t6487)*var2[13] - 0.5*t14390*var2[14]);
  p_output1[14]=(-0.5*t1672*var2[0] - 0.5*t13178*var2[1] - 0.5*t13411*var2[2] - 0.5*t13645*var2[3] - 0.5*t13879*var2[4] - 0.5*t14002*var2[5] - 0.5*(t14190 + 0.00015845750000000015*t763)*var2[12] - 0.5*t14390*var2[13])*var2[14];
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec15_plane.hh"

namespace SymFunction
{

void Ce2_vec15_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
