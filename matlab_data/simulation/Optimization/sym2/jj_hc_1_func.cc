/*
 * Automatically Generated from Mathematica.
 * Sat 7 Dec 2019 21:23:09 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t728;
  double t801;
  double t395;
  double t1168;
  double t1293;
  double t1494;
  double t1356;
  double t1439;
  double t1529;
  double t1753;
  double t1877;
  double t1912;
  double t1999;
  double t2132;
  double t2301;
  double t2071;
  double t814;
  double t2494;
  double t2516;
  double t2543;
  double t2544;
  double t2367;
  double t2402;
  double t2090;
  double t2552;
  double t2684;
  double t2687;
  double t2693;
  double t2694;
  double t2682;
  double t2707;
  double t2708;
  double t2775;
  double t2785;
  double t2786;
  double t2831;
  double t2848;
  double t2851;
  double t2949;
  double t2953;
  double t2986;
  double t2945;
  double t3002;
  double t3011;
  double t3033;
  double t3042;
  double t3043;
  double t3107;
  double t2936;
  double t3154;
  double t3163;
  double t3165;
  double t3153;
  double t3166;
  double t3167;
  double t3169;
  double t3170;
  double t3171;
  double t2548;
  double t2549;
  double t2557;
  double t2560;
  double t2563;
  double t2614;
  double t2615;
  double t2616;
  double t2637;
  double t2645;
  double t2654;
  double t2659;
  double t2665;
  double t2671;
  double t3288;
  double t3291;
  double t3294;
  double t3348;
  double t3349;
  double t3350;
  double t3351;
  double t3370;
  double t3387;
  double t3403;
  double t3404;
  double t3405;
  double t3619;
  double t3620;
  double t3621;
  double t3647;
  double t3649;
  double t3655;
  double t991;
  double t1211;
  double t1795;
  double t2051;
  double t2114;
  double t2331;
  double t2340;
  double t2341;
  double t2350;
  double t2404;
  double t2417;
  double t2435;
  double t2450;
  double t3297;
  double t3299;
  double t3304;
  double t3305;
  double t3306;
  double t3311;
  double t3315;
  double t3327;
  double t3329;
  double t3330;
  double t3336;
  double t3339;
  double t3709;
  double t3711;
  double t3712;
  double t3721;
  double t3723;
  double t3725;
  double t3731;
  double t3737;
  double t3744;
  double t3756;
  double t3759;
  double t3760;
  double t3805;
  double t3806;
  double t3818;
  double t3823;
  double t3824;
  double t3827;
  double t3867;
  double t3868;
  double t3869;
  double t3902;
  double t3903;
  double t3904;
  double t3908;
  double t3910;
  double t3916;
  double t3932;
  double t3936;
  double t3937;
  double t3939;
  double t3940;
  double t3941;
  double t2709;
  double t2787;
  double t2790;
  double t2794;
  double t2796;
  double t2799;
  double t2800;
  double t2802;
  double t2806;
  double t2807;
  double t2820;
  double t3555;
  double t3556;
  double t3558;
  double t3564;
  double t3572;
  double t3573;
  double t3585;
  double t3586;
  double t3613;
  double t3614;
  double t3615;
  double t3822;
  double t3828;
  double t3829;
  double t3832;
  double t3833;
  double t3837;
  double t3839;
  double t3840;
  double t3842;
  double t3848;
  double t3857;
  double t3976;
  double t3979;
  double t3981;
  double t3982;
  double t3978;
  double t3984;
  double t3985;
  double t3997;
  double t4002;
  double t4005;
  double t4026;
  double t4027;
  double t4028;
  double t3632;
  double t4068;
  double t4070;
  double t4061;
  double t4071;
  double t4073;
  double t4078;
  double t4080;
  double t4084;
  double t3112;
  double t3117;
  double t3124;
  double t3125;
  double t3128;
  double t3143;
  double t3168;
  double t3182;
  double t3183;
  double t3213;
  double t3223;
  double t3237;
  double t3240;
  double t3244;
  double t3245;
  double t3247;
  double t3251;
  double t3618;
  double t3641;
  double t3646;
  double t3660;
  double t3661;
  double t3664;
  double t3677;
  double t3678;
  double t3679;
  double t3680;
  double t3681;
  double t3682;
  double t3683;
  double t3686;
  double t3905;
  double t3928;
  double t3938;
  double t3945;
  double t3946;
  double t3952;
  double t3953;
  double t3954;
  double t3957;
  double t3958;
  double t3959;
  double t3960;
  double t3965;
  double t2922;
  double t3728;
  double t2938;
  double t4116;
  double t4119;
  double t4120;
  double t4123;
  double t4125;
  double t4128;
  double t4077;
  double t4085;
  double t4086;
  double t4087;
  double t4088;
  double t4089;
  double t4092;
  double t4093;
  double t4095;
  double t4096;
  double t4097;
  double t4156;
  double t4160;
  double t4161;
  double t2852;
  double t2872;
  double t2873;
  double t2874;
  double t2875;
  double t2877;
  double t2882;
  double t2910;
  double t2913;
  double t3491;
  double t3492;
  double t3497;
  double t3498;
  double t3510;
  double t3511;
  double t3520;
  double t3547;
  double t3549;
  double t3875;
  double t3878;
  double t3879;
  double t3880;
  double t3881;
  double t3883;
  double t3885;
  double t3886;
  double t3889;
  double t3991;
  double t4006;
  double t4009;
  double t4010;
  double t4014;
  double t4015;
  double t4016;
  double t4019;
  double t4020;
  double t4210;
  double t4218;
  double t4221;
  double t4230;
  double t4165;
  double t4171;
  double t4176;
  double t4188;
  double t4192;
  double t4193;
  double t4195;
  double t4197;
  double t4199;
  double t4270;
  double t4274;
  double t4278;
  double t4280;
  double t4283;
  double t4284;
  double t4315;
  double t4316;
  double t4317;
  double t4376;
  double t4377;
  double t4380;
  double t4387;
  double t4391;
  double t4392;
  double t4409;
  double t4415;
  double t4417;
  double t4431;
  double t4432;
  double t4437;
  double t4446;
  double t4471;
  double t4472;
  double t4320;
  double t4321;
  double t4322;
  double t4324;
  double t4325;
  double t4327;
  double t4328;
  double t4330;
  double t4331;
  double t4332;
  double t4333;
  double t4334;
  double t4541;
  double t4542;
  double t4550;
  double t4551;
  double t4552;
  double t4266;
  double t4269;
  double t4279;
  double t4289;
  double t4290;
  double t4293;
  double t4294;
  double t4296;
  double t4297;
  double t4298;
  double t4310;
  double t4311;
  double t4312;
  double t4473;
  double t4474;
  double t4475;
  double t4477;
  double t4479;
  double t4480;
  double t4482;
  double t4487;
  double t4488;
  double t4489;
  double t4490;
  double t4495;
  double t4496;
  double t4501;
  double t4506;
  double t4652;
  double t4653;
  double t4654;
  double t4655;
  double t4657;
  double t4658;
  double t4659;
  double t4689;
  double t4690;
  double t4691;
  double t4729;
  double t4730;
  double t4728;
  double t4733;
  double t4734;
  double t4739;
  double t4748;
  double t4749;
  double t4623;
  double t4624;
  double t4626;
  double t4628;
  double t4630;
  double t4633;
  double t4635;
  double t4636;
  double t4637;
  double t4640;
  double t4641;
  double t4642;
  double t4643;
  double t4644;
  double t4645;
  double t4646;
  double t4512;
  double t4515;
  double t4516;
  double t4522;
  double t4523;
  double t4526;
  double t4527;
  double t4528;
  double t4530;
  double t4533;
  double t4534;
  double t4537;
  double t4538;
  double t4336;
  double t4354;
  double t4355;
  double t4357;
  double t4360;
  double t4361;
  double t4365;
  double t4367;
  double t4368;
  double t4371;
  double t4372;
  double t4373;
  double t4771;
  double t4770;
  double t4772;
  double t4775;
  double t4778;
  double t4779;
  double t4780;
  double t4798;
  double t4799;
  double t4800;
  double t4714;
  double t4429;
  double t4719;
  double t4694;
  double t4695;
  double t4698;
  double t4699;
  double t4707;
  double t4708;
  double t4710;
  double t4711;
  double t4712;
  double t4408;
  double t4419;
  double t4420;
  double t4421;
  double t4422;
  double t4423;
  double t4424;
  double t4425;
  double t4426;
  double t4577;
  double t4578;
  double t4579;
  double t4584;
  double t4585;
  double t4586;
  double t4587;
  double t4588;
  double t4591;
  double t4801;
  double t4802;
  double t4810;
  double t4813;
  double t4816;
  double t4822;
  double t4826;
  double t4828;
  double t4830;
  double t4911;
  double t4913;
  double t4914;
  double t4918;
  double t4912;
  double t4919;
  double t4920;
  double t4923;
  double t4924;
  double t4925;
  double t4937;
  double t4940;
  double t4941;
  double t4945;
  double t4656;
  double t4661;
  double t4662;
  double t4664;
  double t4665;
  double t4667;
  double t4669;
  double t4674;
  double t4678;
  double t4683;
  double t4685;
  double t4385;
  double t4393;
  double t4394;
  double t4395;
  double t4396;
  double t4397;
  double t4398;
  double t4401;
  double t4402;
  double t4404;
  double t4405;
  double t4598;
  double t4599;
  double t4600;
  double t4603;
  double t4604;
  double t4605;
  double t4607;
  double t4608;
  double t4613;
  double t4617;
  double t4618;
  double t4776;
  double t4782;
  double t4783;
  double t4784;
  double t4787;
  double t4788;
  double t4789;
  double t4792;
  double t4793;
  double t4794;
  double t4795;
  double t4922;
  double t4926;
  double t4927;
  double t4928;
  double t4929;
  double t4930;
  double t4932;
  double t4933;
  double t4934;
  double t4971;
  double t4974;
  double t4975;
  double t5011;
  double t5013;
  double t5014;
  double t5046;
  double t5047;
  double t5049;
  double t5071;
  double t5072;
  double t5073;
  double t4994;
  double t4996;
  double t4997;
  double t4999;
  double t5000;
  double t5001;
  double t5002;
  double t5004;
  double t5005;
  double t5006;
  double t5007;
  double t5008;
  double t5095;
  double t5096;
  double t5097;
  double t5099;
  double t5100;
  double t5101;
  double t5117;
  double t5118;
  double t5119;
  double t5139;
  double t5141;
  double t5142;
  double t5146;
  double t5147;
  double t5150;
  double t5171;
  double t5173;
  double t5177;
  double t5185;
  double t5186;
  double t5187;
  double t5116;
  double t5120;
  double t5121;
  double t5122;
  double t5123;
  double t5124;
  double t5125;
  double t5126;
  double t5127;
  double t5128;
  double t5129;
  double t5026;
  double t5027;
  double t5028;
  double t5029;
  double t5036;
  double t5037;
  double t5039;
  double t5040;
  double t5041;
  double t5042;
  double t5043;
  double t5221;
  double t5222;
  double t5224;
  double t5226;
  double t5231;
  double t5223;
  double t5232;
  double t5233;
  double t5240;
  double t5241;
  double t5244;
  double t5259;
  double t5260;
  double t5265;
  double t5068;
  double t5286;
  double t5288;
  double t5285;
  double t5289;
  double t5294;
  double t5299;
  double t5300;
  double t5302;
  double t5067;
  double t5069;
  double t5070;
  double t5074;
  double t5075;
  double t5076;
  double t5077;
  double t5078;
  double t5079;
  double t5083;
  double t5085;
  double t5086;
  double t5087;
  double t5089;
  double t5169;
  double t5170;
  double t5182;
  double t5188;
  double t5191;
  double t5192;
  double t5193;
  double t5194;
  double t5197;
  double t5203;
  double t5204;
  double t5206;
  double t5208;
  double t5137;
  double t5330;
  double t5331;
  double t5332;
  double t5333;
  double t5335;
  double t5336;
  double t5298;
  double t5303;
  double t5304;
  double t5305;
  double t5306;
  double t5307;
  double t5309;
  double t5311;
  double t5314;
  double t5316;
  double t5317;
  double t5356;
  double t5357;
  double t5363;
  double t5098;
  double t5103;
  double t5104;
  double t5105;
  double t5107;
  double t5108;
  double t5109;
  double t5110;
  double t5114;
  double t5016;
  double t5017;
  double t5018;
  double t5019;
  double t5020;
  double t5021;
  double t5022;
  double t5023;
  double t5024;
  double t5239;
  double t5245;
  double t5246;
  double t5247;
  double t5248;
  double t5249;
  double t5250;
  double t5251;
  double t5252;
  double t5388;
  double t5391;
  double t5392;
  double t5394;
  double t5364;
  double t5366;
  double t5367;
  double t5368;
  double t5369;
  double t5370;
  double t5371;
  double t5372;
  double t5375;
  t728 = Cos(var1[4]);
  t801 = Cos(var1[5]);
  t395 = Cos(var1[3]);
  t1168 = Sin(var1[3]);
  t1293 = Cos(var1[9]);
  t1494 = Cos(var1[10]);
  t1356 = Sin(var1[10]);
  t1439 = -1.*t1293*t395*t728*t801*t1356;
  t1529 = -1.*t1494*t728*t801*t1168;
  t1753 = t1439 + t1529;
  t1877 = t1293*t1494*t395*t728*t801;
  t1912 = -1.*t728*t801*t1356*t1168;
  t1999 = t1877 + t1912;
  t2132 = Cos(var1[11]);
  t2301 = 0. + t2132;
  t2071 = Sin(var1[11]);
  t814 = Sin(var1[9]);
  t2494 = -1.*t728*t801*t814*t1168;
  t2516 = Sin(var1[4]);
  t2543 = t1293*t801*t2516;
  t2544 = t2494 + t2543;
  t2367 = -1.*t2071;
  t2402 = 0. + t2367;
  t2090 = 0. + t2071;
  t2552 = t1293*t728*t801*t1168;
  t2684 = -1.*t814;
  t2687 = 0. + t2684;
  t2693 = -1.*t801*t2687*t2516;
  t2694 = t2552 + t2693;
  t2682 = -1.*t395*t728*t801*t1356;
  t2707 = -1.*t1494*t2694;
  t2708 = t2682 + t2707;
  t2775 = t1494*t395*t728*t801;
  t2785 = -1.*t1356*t2694;
  t2786 = t2775 + t2785;
  t2831 = t395*t728*t801*t1356;
  t2848 = t1494*t2694;
  t2851 = t2831 + t2848;
  t2949 = -1.*t728*t801*t2687;
  t2953 = -1.*t1293*t801*t1168*t2516;
  t2986 = t2949 + t2953;
  t2945 = -1.*t395*t801*t1356*t2516;
  t3002 = t1494*t2986;
  t3011 = t2945 + t3002;
  t3033 = -1.*t1494*t395*t801*t2516;
  t3042 = -1.*t1356*t2986;
  t3043 = t3033 + t3042;
  t3107 = Sin(var1[5]);
  t2936 = 0. + t1293;
  t3154 = -1.*t1293*t728*t1168*t3107;
  t3163 = t2687*t2516*t3107;
  t3165 = t3154 + t3163;
  t3153 = -1.*t395*t728*t1356*t3107;
  t3166 = t1494*t3165;
  t3167 = t3153 + t3166;
  t3169 = -1.*t1494*t395*t728*t3107;
  t3170 = -1.*t1356*t3165;
  t3171 = t3169 + t3170;
  t2548 = -0.2083*t1494*t2544;
  t2549 = 0.1422*t1356*t2544;
  t2557 = t801*t814*t2516;
  t2560 = t2552 + t2557;
  t2563 = 0.035199999999999995*t2560;
  t2614 = -1.*t2301*t1356*t2544;
  t2615 = t1494*t2402*t2544;
  t2616 = t2614 + t2615;
  t2637 = -0.02*t2616;
  t2645 = t1494*t2301*t2544;
  t2654 = -1.*t1356*t2090*t2544;
  t2659 = t2645 + t2654;
  t2665 = -0.16*t2659;
  t2671 = t2548 + t2549 + t2563 + t2637 + t2665;
  t3288 = t395*t801*t2516;
  t3291 = t1168*t3107;
  t3294 = t3288 + t3291;
  t3348 = t728*t801*t814;
  t3349 = t801*t1168*t2516;
  t3350 = -1.*t395*t3107;
  t3351 = t3349 + t3350;
  t3370 = -1.*t1293*t3351;
  t3387 = t3348 + t3370;
  t3403 = -1.*t1293*t728*t801;
  t3404 = -1.*t814*t3351;
  t3405 = t3403 + t3404;
  t3619 = -1.*t395*t801;
  t3620 = -1.*t1168*t2516*t3107;
  t3621 = t3619 + t3620;
  t3647 = t1293*t728*t3107;
  t3649 = -1.*t814*t3621;
  t3655 = t3647 + t3649;
  t991 = 0.035199999999999995*t395*t728*t801*t814;
  t1211 = -0.2429*t728*t801*t1168;
  t1795 = -0.1422*t1753;
  t2051 = -0.2083*t1999;
  t2114 = t2090*t1753;
  t2331 = t2301*t1999;
  t2340 = t2114 + t2331;
  t2341 = -0.16*t2340;
  t2350 = t2301*t1753;
  t2404 = t2402*t1999;
  t2417 = t2350 + t2404;
  t2435 = -0.02*t2417;
  t2450 = t991 + t1211 + t1795 + t2051 + t2341 + t2435;
  t3297 = 0.035199999999999995*t1293*t3294;
  t3299 = 0.2083*t1494*t814*t3294;
  t3304 = -0.1422*t814*t1356*t3294;
  t3305 = t2301*t814*t1356*t3294;
  t3306 = -1.*t1494*t814*t2402*t3294;
  t3311 = t3305 + t3306;
  t3315 = -0.02*t3311;
  t3327 = -1.*t1494*t2301*t814*t3294;
  t3329 = t814*t1356*t2090*t3294;
  t3330 = t3327 + t3329;
  t3336 = -0.16*t3330;
  t3339 = t3297 + t3299 + t3304 + t3315 + t3336;
  t3709 = -1.*t801*t1168*t2516;
  t3711 = t395*t3107;
  t3712 = t3709 + t3711;
  t3721 = -1.*t395*t801*t2516;
  t3723 = -1.*t1168*t3107;
  t3725 = t3721 + t3723;
  t3731 = -1.*t1293*t1356*t3712;
  t3737 = t1494*t3725;
  t3744 = t3731 + t3737;
  t3756 = t1293*t1494*t3712;
  t3759 = t1356*t3725;
  t3760 = t3756 + t3759;
  t3805 = -1.*t1356*t3712;
  t3806 = -1.*t1293*t1494*t3294;
  t3818 = t3805 + t3806;
  t3823 = t1494*t3712;
  t3824 = -1.*t1293*t1356*t3294;
  t3827 = t3823 + t3824;
  t3867 = t1356*t3712;
  t3868 = t1293*t1494*t3294;
  t3869 = t3867 + t3868;
  t3902 = t801*t1168;
  t3903 = -1.*t395*t2516*t3107;
  t3904 = t3902 + t3903;
  t3908 = t395*t801;
  t3910 = t1168*t2516*t3107;
  t3916 = t3908 + t3910;
  t3932 = -1.*t1293*t1356*t3904;
  t3936 = t1494*t3916;
  t3937 = t3932 + t3936;
  t3939 = t1293*t1494*t3904;
  t3940 = t1356*t3916;
  t3941 = t3939 + t3940;
  t2709 = -0.1422*t2708;
  t2787 = -0.2083*t2786;
  t2790 = t2090*t2708;
  t2794 = t2301*t2786;
  t2796 = t2790 + t2794;
  t2799 = -0.16*t2796;
  t2800 = t2301*t2708;
  t2802 = t2402*t2786;
  t2806 = t2800 + t2802;
  t2807 = -0.02*t2806;
  t2820 = t2709 + t2787 + t2799 + t2807;
  t3555 = 0.1422*t1494*t3405;
  t3556 = 0.2083*t1356*t3405;
  t3558 = -1.*t1494*t2301*t3405;
  t3564 = -1.*t1356*t2402*t3405;
  t3572 = t3558 + t3564;
  t3573 = -0.02*t3572;
  t3585 = -1.*t2301*t1356*t3405;
  t3586 = -1.*t1494*t2090*t3405;
  t3613 = t3585 + t3586;
  t3614 = -0.16*t3613;
  t3615 = t3555 + t3556 + t3573 + t3614;
  t3822 = -0.1422*t3818;
  t3828 = -0.2083*t3827;
  t3829 = t2090*t3818;
  t3832 = t2301*t3827;
  t3833 = t3829 + t3832;
  t3837 = -0.16*t3833;
  t3839 = t2301*t3818;
  t3840 = t2402*t3827;
  t3842 = t3839 + t3840;
  t3848 = -0.02*t3842;
  t3857 = t3822 + t3828 + t3837 + t3848;
  t3976 = 0. + t3288 + t3291;
  t3979 = t728*t801*t2687;
  t3981 = t1293*t3351;
  t3982 = 0. + t3979 + t3981;
  t3978 = -1.*t1356*t3976;
  t3984 = -1.*t1494*t3982;
  t3985 = t3978 + t3984;
  t3997 = t1494*t3976;
  t4002 = -1.*t1356*t3982;
  t4005 = t3997 + t4002;
  t4026 = -1.*t1494*t3976;
  t4027 = t1356*t3982;
  t4028 = t4026 + t4027;
  t3632 = t1293*t3621;
  t4068 = -1.*t728*t2687*t3107;
  t4070 = t4068 + t3632;
  t4061 = -1.*t1356*t3904;
  t4071 = -1.*t1494*t4070;
  t4073 = t4061 + t4071;
  t4078 = t1494*t3904;
  t4080 = -1.*t1356*t4070;
  t4084 = t4078 + t4080;
  t3112 = -0.2429*t395*t728*t3107;
  t3117 = 0.0817*t2516*t3107;
  t3124 = -1.*t728*t814*t1168*t3107;
  t3125 = t2936*t2516*t3107;
  t3128 = t3124 + t3125;
  t3143 = 0.035199999999999995*t3128;
  t3168 = -0.2083*t3167;
  t3182 = -0.1422*t3171;
  t3183 = t2402*t3167;
  t3213 = t2301*t3171;
  t3223 = t3183 + t3213;
  t3237 = -0.02*t3223;
  t3240 = t2301*t3167;
  t3244 = t2090*t3171;
  t3245 = t3240 + t3244;
  t3247 = -0.16*t3245;
  t3251 = t3112 + t3117 + t3143 + t3168 + t3182 + t3237 + t3247;
  t3618 = t728*t814*t3107;
  t3641 = t3618 + t3632;
  t3646 = 0.035199999999999995*t3641;
  t3660 = -0.2083*t1494*t3655;
  t3661 = 0.1422*t1356*t3655;
  t3664 = -1.*t2301*t1356*t3655;
  t3677 = t1494*t2402*t3655;
  t3678 = t3664 + t3677;
  t3679 = -0.02*t3678;
  t3680 = t1494*t2301*t3655;
  t3681 = -1.*t1356*t2090*t3655;
  t3682 = t3680 + t3681;
  t3683 = -0.16*t3682;
  t3686 = t3646 + t3660 + t3661 + t3679 + t3683;
  t3905 = 0.035199999999999995*t814*t3904;
  t3928 = 0.2429*t3916;
  t3938 = -0.1422*t3937;
  t3945 = -0.2083*t3941;
  t3946 = t2090*t3937;
  t3952 = t2301*t3941;
  t3953 = t3946 + t3952;
  t3954 = -0.16*t3953;
  t3957 = t2301*t3937;
  t3958 = t2402*t3941;
  t3959 = t3957 + t3958;
  t3960 = -0.02*t3959;
  t3965 = t3905 + t3928 + t3938 + t3945 + t3954 + t3960;
  t2922 = -0.0817*t728*t801;
  t3728 = 0.2429*t3725;
  t2938 = -1.*t2936*t728*t801;
  t4116 = t1293*t3712;
  t4119 = t2949 + t4116;
  t4120 = t1494*t4119;
  t4123 = t3759 + t4120;
  t4125 = -1.*t1356*t4119;
  t4128 = t3737 + t4125;
  t4077 = -0.1422*t4073;
  t4085 = -0.2083*t4084;
  t4086 = t2090*t4073;
  t4087 = t2301*t4084;
  t4088 = t4086 + t4087;
  t4089 = -0.16*t4088;
  t4092 = t2301*t4073;
  t4093 = t2402*t4084;
  t4095 = t4092 + t4093;
  t4096 = -0.02*t4095;
  t4097 = t4077 + t4085 + t4089 + t4096;
  t4156 = t1356*t3904;
  t4160 = t1494*t4070;
  t4161 = t4156 + t4160;
  t2852 = -1.*t2071*t2851;
  t2872 = t2132*t2786;
  t2873 = t2852 + t2872;
  t2874 = -0.16*t2873;
  t2875 = -1.*t2132*t2851;
  t2877 = -1.*t2071*t2786;
  t2882 = t2875 + t2877;
  t2910 = -0.02*t2882;
  t2913 = t2874 + t2910;
  t3491 = -1.*t2132*t1356*t3405;
  t3492 = -1.*t1494*t2071*t3405;
  t3497 = t3491 + t3492;
  t3498 = -0.16*t3497;
  t3510 = -1.*t1494*t2132*t3405;
  t3511 = t1356*t2071*t3405;
  t3520 = t3510 + t3511;
  t3547 = -0.02*t3520;
  t3549 = t3498 + t3547;
  t3875 = -1.*t2071*t3869;
  t3878 = t2132*t3827;
  t3879 = t3875 + t3878;
  t3880 = -0.16*t3879;
  t3881 = -1.*t2132*t3869;
  t3883 = -1.*t2071*t3827;
  t3885 = t3881 + t3883;
  t3886 = -0.02*t3885;
  t3889 = t3880 + t3886;
  t3991 = -1.*t2071*t3985;
  t4006 = -1.*t2132*t4005;
  t4009 = t3991 + t4006;
  t4010 = -0.02*t4009;
  t4014 = t2132*t3985;
  t4015 = -1.*t2071*t4005;
  t4016 = t4014 + t4015;
  t4019 = -0.16*t4016;
  t4020 = t4010 + t4019;
  t4210 = t1356*t3976;
  t4218 = t1494*t3982;
  t4221 = 0. + t4210 + t4218;
  t4230 = 0. + t3997 + t4002;
  t4165 = -1.*t2071*t4161;
  t4171 = t2132*t4084;
  t4176 = t4165 + t4171;
  t4188 = -0.16*t4176;
  t4192 = -1.*t2132*t4161;
  t4193 = -1.*t2071*t4084;
  t4195 = t4192 + t4193;
  t4197 = -0.02*t4195;
  t4199 = t4188 + t4197;
  t4270 = -1.*t1293*t395*t728*t1356*t3107;
  t4274 = -1.*t1494*t728*t1168*t3107;
  t4278 = t4270 + t4274;
  t4280 = t1293*t1494*t395*t728*t3107;
  t4283 = -1.*t728*t1356*t1168*t3107;
  t4284 = t4280 + t4283;
  t4315 = -1.*t801*t1168;
  t4316 = t395*t2516*t3107;
  t4317 = t4315 + t4316;
  t4376 = -1.*t1293*t1356*t4317;
  t4377 = t1494*t3621;
  t4380 = t4376 + t4377;
  t4387 = -1.*t1293*t1494*t4317;
  t4391 = -1.*t1356*t3621;
  t4392 = t4387 + t4391;
  t4409 = t1293*t1494*t4317;
  t4415 = t1356*t3621;
  t4417 = t4409 + t4415;
  t4431 = t1293*t1494*t3621;
  t4432 = t4156 + t4431;
  t4437 = -1.*t1293*t1356*t3621;
  t4446 = t4078 + t4437;
  t4471 = t1293*t2516*t3107;
  t4472 = t3124 + t4471;
  t4320 = 0.035199999999999995*t1293*t4317;
  t4321 = 0.2083*t1494*t814*t4317;
  t4322 = -0.1422*t814*t1356*t4317;
  t4324 = t2301*t814*t1356*t4317;
  t4325 = -1.*t1494*t814*t2402*t4317;
  t4327 = t4324 + t4325;
  t4328 = -0.02*t4327;
  t4330 = -1.*t1494*t2301*t814*t4317;
  t4331 = t814*t1356*t2090*t4317;
  t4332 = t4330 + t4331;
  t4333 = -0.16*t4332;
  t4334 = t4320 + t4321 + t4322 + t4328 + t4333;
  t4541 = -1.*t1293*t3916;
  t4542 = t3618 + t4541;
  t4550 = -1.*t1293*t728*t3107;
  t4551 = -1.*t814*t3916;
  t4552 = t4550 + t4551;
  t4266 = 0.035199999999999995*t395*t728*t814*t3107;
  t4269 = -0.2429*t728*t1168*t3107;
  t4279 = -0.1422*t4278;
  t4289 = -0.2083*t4284;
  t4290 = t2090*t4278;
  t4293 = t2301*t4284;
  t4294 = t4290 + t4293;
  t4296 = -0.16*t4294;
  t4297 = t2301*t4278;
  t4298 = t2402*t4284;
  t4310 = t4297 + t4298;
  t4311 = -0.02*t4310;
  t4312 = t4266 + t4269 + t4279 + t4289 + t4296 + t4311;
  t4473 = -0.2083*t1494*t4472;
  t4474 = 0.1422*t1356*t4472;
  t4475 = t1293*t728*t1168*t3107;
  t4477 = t814*t2516*t3107;
  t4479 = t4475 + t4477;
  t4480 = 0.035199999999999995*t4479;
  t4482 = -1.*t2301*t1356*t4472;
  t4487 = t1494*t2402*t4472;
  t4488 = t4482 + t4487;
  t4489 = -0.02*t4488;
  t4490 = t1494*t2301*t4472;
  t4495 = -1.*t1356*t2090*t4472;
  t4496 = t4490 + t4495;
  t4501 = -0.16*t4496;
  t4506 = t4473 + t4474 + t4480 + t4489 + t4501;
  t4652 = -1.*t2687*t2516*t3107;
  t4653 = t4475 + t4652;
  t4654 = -1.*t1494*t4653;
  t4655 = t3153 + t4654;
  t4657 = t1494*t395*t728*t3107;
  t4658 = -1.*t1356*t4653;
  t4659 = t4657 + t4658;
  t4689 = t395*t728*t1356*t3107;
  t4690 = t1494*t4653;
  t4691 = t4689 + t4690;
  t4729 = -1.*t1293*t1168*t2516*t3107;
  t4730 = t4068 + t4729;
  t4728 = -1.*t395*t1356*t2516*t3107;
  t4733 = t1494*t4730;
  t4734 = t4728 + t4733;
  t4739 = -1.*t1494*t395*t2516*t3107;
  t4748 = -1.*t1356*t4730;
  t4749 = t4739 + t4748;
  t4623 = 0.2429*t395*t728*t801;
  t4624 = -0.0817*t801*t2516;
  t4626 = t728*t801*t814*t1168;
  t4628 = -1.*t2936*t801*t2516;
  t4630 = t4626 + t4628;
  t4633 = 0.035199999999999995*t4630;
  t4635 = -0.2083*t2851;
  t4636 = -0.1422*t2786;
  t4637 = t2402*t2851;
  t4640 = t4637 + t2794;
  t4641 = -0.02*t4640;
  t4642 = t2301*t2851;
  t4643 = t2090*t2786;
  t4644 = t4642 + t4643;
  t4645 = -0.16*t4644;
  t4646 = t4623 + t4624 + t4633 + t4635 + t4636 + t4641 + t4645;
  t4512 = -1.*t728*t801*t814;
  t4515 = t4512 + t3981;
  t4516 = 0.035199999999999995*t4515;
  t4522 = -0.2083*t1494*t3405;
  t4523 = 0.1422*t1356*t3405;
  t4526 = t1494*t2402*t3405;
  t4527 = t3585 + t4526;
  t4528 = -0.02*t4527;
  t4530 = t1494*t2301*t3405;
  t4533 = -1.*t1356*t2090*t3405;
  t4534 = t4530 + t4533;
  t4537 = -0.16*t4534;
  t4538 = t4516 + t4522 + t4523 + t4528 + t4537;
  t4336 = 0.2429*t3712;
  t4354 = 0.035199999999999995*t814*t3294;
  t4355 = -0.2083*t3869;
  t4357 = -0.1422*t3827;
  t4360 = t2402*t3869;
  t4361 = t4360 + t3832;
  t4365 = -0.02*t4361;
  t4367 = t2301*t3869;
  t4368 = t2090*t3827;
  t4371 = t4367 + t4368;
  t4372 = -0.16*t4371;
  t4373 = t4336 + t4354 + t4355 + t4357 + t4365 + t4372;
  t4771 = t3979 + t3981;
  t4770 = -1.*t1356*t3294;
  t4772 = -1.*t1494*t4771;
  t4775 = t4770 + t4772;
  t4778 = t1494*t3294;
  t4779 = -1.*t1356*t4771;
  t4780 = t4778 + t4779;
  t4798 = t1356*t3294;
  t4799 = t1494*t4771;
  t4800 = t4798 + t4799;
  t4714 = -0.0817*t728*t3107;
  t4429 = 0.2429*t3904;
  t4719 = -1.*t2936*t728*t3107;
  t4694 = -1.*t2071*t4691;
  t4695 = t2132*t4659;
  t4698 = t4694 + t4695;
  t4699 = -0.16*t4698;
  t4707 = -1.*t2132*t4691;
  t4708 = -1.*t2071*t4659;
  t4710 = t4707 + t4708;
  t4711 = -0.02*t4710;
  t4712 = t4699 + t4711;
  t4408 = -1.*t2071*t4380;
  t4419 = -1.*t2132*t4417;
  t4420 = t4408 + t4419;
  t4421 = -0.02*t4420;
  t4422 = t2132*t4380;
  t4423 = -1.*t2071*t4417;
  t4424 = t4422 + t4423;
  t4425 = -0.16*t4424;
  t4426 = t4421 + t4425;
  t4577 = -1.*t2132*t1356*t4552;
  t4578 = -1.*t1494*t2071*t4552;
  t4579 = t4577 + t4578;
  t4584 = -0.16*t4579;
  t4585 = -1.*t1494*t2132*t4552;
  t4586 = t1356*t2071*t4552;
  t4587 = t4585 + t4586;
  t4588 = -0.02*t4587;
  t4591 = t4584 + t4588;
  t4801 = -1.*t2071*t4800;
  t4802 = t2132*t4780;
  t4810 = t4801 + t4802;
  t4813 = -0.16*t4810;
  t4816 = -1.*t2132*t4800;
  t4822 = -1.*t2071*t4780;
  t4826 = t4816 + t4822;
  t4828 = -0.02*t4826;
  t4830 = t4813 + t4828;
  t4911 = 0. + t4315 + t4316;
  t4913 = t728*t2687*t3107;
  t4914 = t1293*t3916;
  t4918 = 0. + t4913 + t4914;
  t4912 = -1.*t1356*t4911;
  t4919 = -1.*t1494*t4918;
  t4920 = t4912 + t4919;
  t4923 = t1494*t4911;
  t4924 = -1.*t1356*t4918;
  t4925 = t4923 + t4924;
  t4937 = t1356*t4911;
  t4940 = t1494*t4918;
  t4941 = 0. + t4937 + t4940;
  t4945 = 0. + t4923 + t4924;
  t4656 = -0.1422*t4655;
  t4661 = -0.2083*t4659;
  t4662 = t2090*t4655;
  t4664 = t2301*t4659;
  t4665 = t4662 + t4664;
  t4667 = -0.16*t4665;
  t4669 = t2301*t4655;
  t4674 = t2402*t4659;
  t4678 = t4669 + t4674;
  t4683 = -0.02*t4678;
  t4685 = t4656 + t4661 + t4667 + t4683;
  t4385 = -0.2083*t4380;
  t4393 = -0.1422*t4392;
  t4394 = t2402*t4380;
  t4395 = t2301*t4392;
  t4396 = t4394 + t4395;
  t4397 = -0.02*t4396;
  t4398 = t2301*t4380;
  t4401 = t2090*t4392;
  t4402 = t4398 + t4401;
  t4404 = -0.16*t4402;
  t4405 = t4385 + t4393 + t4397 + t4404;
  t4598 = 0.1422*t1494*t4552;
  t4599 = 0.2083*t1356*t4552;
  t4600 = -1.*t1494*t2301*t4552;
  t4603 = -1.*t1356*t2402*t4552;
  t4604 = t4600 + t4603;
  t4605 = -0.02*t4604;
  t4607 = -1.*t2301*t1356*t4552;
  t4608 = -1.*t1494*t2090*t4552;
  t4613 = t4607 + t4608;
  t4617 = -0.16*t4613;
  t4618 = t4598 + t4599 + t4605 + t4617;
  t4776 = -0.1422*t4775;
  t4782 = -0.2083*t4780;
  t4783 = t2090*t4775;
  t4784 = t2301*t4780;
  t4787 = t4783 + t4784;
  t4788 = -0.16*t4787;
  t4789 = t2301*t4775;
  t4792 = t2402*t4780;
  t4793 = t4789 + t4792;
  t4794 = -0.02*t4793;
  t4795 = t4776 + t4782 + t4788 + t4794;
  t4922 = -1.*t2071*t4920;
  t4926 = -1.*t2132*t4925;
  t4927 = t4922 + t4926;
  t4928 = -0.02*t4927;
  t4929 = t2132*t4920;
  t4930 = -1.*t2071*t4925;
  t4932 = t4929 + t4930;
  t4933 = -0.16*t4932;
  t4934 = t4928 + t4933;
  t4971 = -1.*t1494*t4911;
  t4974 = t1356*t4918;
  t4975 = t4971 + t4974;
  t5011 = -1.*t728*t814*t1168;
  t5013 = t1293*t2516;
  t5014 = t5011 + t5013;
  t5046 = -1.*t1293*t728*t1168;
  t5047 = -1.*t814*t2516;
  t5049 = t5046 + t5047;
  t5071 = t1293*t728;
  t5072 = t814*t1168*t2516;
  t5073 = t5071 + t5072;
  t4994 = 0.035199999999999995*t1293*t395*t728;
  t4996 = 0.2083*t1494*t395*t728*t814;
  t4997 = -0.1422*t395*t728*t814*t1356;
  t4999 = t2301*t395*t728*t814*t1356;
  t5000 = -1.*t1494*t395*t728*t814*t2402;
  t5001 = t4999 + t5000;
  t5002 = -0.02*t5001;
  t5004 = -1.*t1494*t2301*t395*t728*t814;
  t5005 = t395*t728*t814*t1356*t2090;
  t5006 = t5004 + t5005;
  t5007 = -0.16*t5006;
  t5008 = t4994 + t4996 + t4997 + t5002 + t5007;
  t5095 = -1.*t1293*t395*t728*t1356;
  t5096 = -1.*t1494*t728*t1168;
  t5097 = t5095 + t5096;
  t5099 = t1293*t1494*t395*t728;
  t5100 = -1.*t728*t1356*t1168;
  t5101 = t5099 + t5100;
  t5117 = -1.*t1293*t1494*t395*t728;
  t5118 = t728*t1356*t1168;
  t5119 = t5117 + t5118;
  t5139 = -1.*t395*t728*t1356;
  t5141 = -1.*t1293*t1494*t728*t1168;
  t5142 = t5139 + t5141;
  t5146 = -1.*t1494*t395*t728;
  t5147 = t1293*t728*t1356*t1168;
  t5150 = t5146 + t5147;
  t5171 = t1293*t395*t1356*t2516;
  t5173 = t1494*t1168*t2516;
  t5177 = t5171 + t5173;
  t5185 = -1.*t1293*t1494*t395*t2516;
  t5186 = t1356*t1168*t2516;
  t5187 = t5185 + t5186;
  t5116 = -0.2083*t5097;
  t5120 = -0.1422*t5119;
  t5121 = t2402*t5097;
  t5122 = t2301*t5119;
  t5123 = t5121 + t5122;
  t5124 = -0.02*t5123;
  t5125 = t2301*t5097;
  t5126 = t2090*t5119;
  t5127 = t5125 + t5126;
  t5128 = -0.16*t5127;
  t5129 = t5116 + t5120 + t5124 + t5128;
  t5026 = 0.1422*t1494*t5014;
  t5027 = 0.2083*t1356*t5014;
  t5028 = -1.*t1494*t2301*t5014;
  t5029 = -1.*t1356*t2402*t5014;
  t5036 = t5028 + t5029;
  t5037 = -0.02*t5036;
  t5039 = -1.*t2301*t1356*t5014;
  t5040 = -1.*t1494*t2090*t5014;
  t5041 = t5039 + t5040;
  t5042 = -0.16*t5041;
  t5043 = t5026 + t5027 + t5037 + t5042;
  t5221 = t395*t728;
  t5222 = 0. + t5221;
  t5224 = t1293*t728*t1168;
  t5226 = -1.*t2687*t2516;
  t5231 = 0. + t5224 + t5226;
  t5223 = -1.*t5222*t1356;
  t5232 = -1.*t1494*t5231;
  t5233 = t5223 + t5232;
  t5240 = t1494*t5222;
  t5241 = -1.*t1356*t5231;
  t5244 = t5240 + t5241;
  t5259 = -1.*t1494*t5222;
  t5260 = t1356*t5231;
  t5265 = t5259 + t5260;
  t5068 = -1.*t1293*t1168*t2516;
  t5286 = -1.*t728*t2687;
  t5288 = t5286 + t5068;
  t5285 = t395*t1356*t2516;
  t5289 = -1.*t1494*t5288;
  t5294 = t5285 + t5289;
  t5299 = -1.*t1494*t395*t2516;
  t5300 = -1.*t1356*t5288;
  t5302 = t5299 + t5300;
  t5067 = t728*t814;
  t5069 = t5067 + t5068;
  t5070 = 0.035199999999999995*t5069;
  t5074 = -0.2083*t1494*t5073;
  t5075 = 0.1422*t1356*t5073;
  t5076 = -1.*t2301*t1356*t5073;
  t5077 = t1494*t2402*t5073;
  t5078 = t5076 + t5077;
  t5079 = -0.02*t5078;
  t5083 = t1494*t2301*t5073;
  t5085 = -1.*t1356*t2090*t5073;
  t5086 = t5083 + t5085;
  t5087 = -0.16*t5086;
  t5089 = t5070 + t5074 + t5075 + t5079 + t5087;
  t5169 = -0.035199999999999995*t395*t814*t2516;
  t5170 = 0.2429*t1168*t2516;
  t5182 = -0.1422*t5177;
  t5188 = -0.2083*t5187;
  t5191 = t2090*t5177;
  t5192 = t2301*t5187;
  t5193 = t5191 + t5192;
  t5194 = -0.16*t5193;
  t5197 = t2301*t5177;
  t5203 = t2402*t5187;
  t5204 = t5197 + t5203;
  t5206 = -0.02*t5204;
  t5208 = t5169 + t5170 + t5182 + t5188 + t5194 + t5206;
  t5137 = -0.2429*t395*t728;
  t5330 = t2687*t2516;
  t5331 = t5046 + t5330;
  t5332 = t1494*t5331;
  t5333 = t5139 + t5332;
  t5335 = -1.*t1356*t5331;
  t5336 = t5146 + t5335;
  t5298 = -0.1422*t5294;
  t5303 = -0.2083*t5302;
  t5304 = t2090*t5294;
  t5305 = t2301*t5302;
  t5306 = t5304 + t5305;
  t5307 = -0.16*t5306;
  t5309 = t2301*t5294;
  t5311 = t2402*t5302;
  t5314 = t5309 + t5311;
  t5316 = -0.02*t5314;
  t5317 = t5298 + t5303 + t5307 + t5316;
  t5356 = -1.*t395*t1356*t2516;
  t5357 = t1494*t5288;
  t5363 = t5356 + t5357;
  t5098 = -1.*t2071*t5097;
  t5103 = -1.*t2132*t5101;
  t5104 = t5098 + t5103;
  t5105 = -0.02*t5104;
  t5107 = t2132*t5097;
  t5108 = -1.*t2071*t5101;
  t5109 = t5107 + t5108;
  t5110 = -0.16*t5109;
  t5114 = t5105 + t5110;
  t5016 = -1.*t2132*t1356*t5014;
  t5017 = -1.*t1494*t2071*t5014;
  t5018 = t5016 + t5017;
  t5019 = -0.16*t5018;
  t5020 = -1.*t1494*t2132*t5014;
  t5021 = t1356*t2071*t5014;
  t5022 = t5020 + t5021;
  t5023 = -0.02*t5022;
  t5024 = t5019 + t5023;
  t5239 = -1.*t2071*t5233;
  t5245 = -1.*t2132*t5244;
  t5246 = t5239 + t5245;
  t5247 = -0.02*t5246;
  t5248 = t2132*t5233;
  t5249 = -1.*t2071*t5244;
  t5250 = t5248 + t5249;
  t5251 = -0.16*t5250;
  t5252 = t5247 + t5251;
  t5388 = t5222*t1356;
  t5391 = t1494*t5231;
  t5392 = 0. + t5388 + t5391;
  t5394 = 0. + t5240 + t5241;
  t5364 = -1.*t2071*t5363;
  t5366 = t2132*t5302;
  t5367 = t5364 + t5366;
  t5368 = -0.16*t5367;
  t5369 = -1.*t2132*t5363;
  t5370 = -1.*t2071*t5302;
  t5371 = t5369 + t5370;
  t5372 = -0.02*t5371;
  t5375 = t5368 + t5372;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=var2[4]*(t2450*var2[3] + (t2922 - 0.2083*t3011 - 0.1422*t3043 - 0.16*(t2301*t3011 + t2090*t3043) - 0.02*(t2402*t3011 + t2301*t3043) - 0.2429*t2516*t395*t801 + 0.035199999999999995*(t2938 - 1.*t1168*t2516*t801*t814))*var2[4] + t3251*var2[5] + t2671*var2[9] + t2820*var2[10] + t2913*var2[11]) + var2[9]*(t3339*var2[3] + t2671*var2[4] + t3686*var2[5] + (0.1422*t1356*t3387 - 0.2083*t1494*t3387 - 0.16*(-1.*t1356*t2090*t3387 + t1494*t2301*t3387) - 0.02*(-1.*t1356*t2301*t3387 + t1494*t2402*t3387) + 0.035199999999999995*t3405)*var2[9] + t3615*var2[10] + t3549*var2[11]) + var2[3]*((t3728 - 0.1422*t3744 - 0.2083*t3760 - 0.16*(t2090*t3744 + t2301*t3760) - 0.02*(t2301*t3744 + t2402*t3760) + 0.035199999999999995*t3712*t814)*var2[3] + t2450*var2[4] + t3965*var2[5] + t3339*var2[9] + t3857*var2[10] + t3889*var2[11]) + var2[10]*(t3857*var2[3] + t2820*var2[4] + t4097*var2[5] + t3615*var2[9] + (-0.2083*t3985 - 0.1422*t4028 - 0.16*(t2301*t3985 + t2090*t4028) - 0.02*(t2402*t3985 + t2301*t4028))*var2[10] + t4020*var2[11]) + var2[5]*(t3965*var2[3] + t3251*var2[4] + (t2922 + t3728 - 0.2083*t4123 - 0.1422*t4128 - 0.16*(t2301*t4123 + t2090*t4128) - 0.02*(t2402*t4123 + t2301*t4128) + 0.035199999999999995*(t2938 + t3712*t814))*var2[5] + t3686*var2[9] + t4097*var2[10] + t4199*var2[11]) + var2[11]*(t3889*var2[3] + t2913*var2[4] + t4199*var2[5] + t3549*var2[9] + t4020*var2[10] + (-0.16*(-1.*t2132*t4221 - 1.*t2071*t4230) - 0.02*(t2071*t4221 - 1.*t2132*t4230))*var2[11]);
  p_output1[7]=var2[3]*((t4429 - 0.2083*t4432 - 0.1422*t4446 - 0.16*(t2301*t4432 + t2090*t4446) - 0.02*(t2402*t4432 + t2301*t4446) + 0.035199999999999995*t3621*t814)*var2[3] + t4312*var2[4] + t4373*var2[5] + t4334*var2[9] + t4405*var2[10] + t4426*var2[11]) + var2[9]*(t4334*var2[3] + t4506*var2[4] + t4538*var2[5] + (0.1422*t1356*t4542 - 0.2083*t1494*t4542 - 0.16*(-1.*t1356*t2090*t4542 + t1494*t2301*t4542) - 0.02*(-1.*t1356*t2301*t4542 + t1494*t2402*t4542) + 0.035199999999999995*t4552)*var2[9] + t4618*var2[10] + t4591*var2[11]) + var2[4]*(t4312*var2[3] + (-0.2429*t2516*t3107*t395 + t4714 - 0.2083*t4734 - 0.1422*t4749 - 0.16*(t2301*t4734 + t2090*t4749) - 0.02*(t2402*t4734 + t2301*t4749) + 0.035199999999999995*(t4719 - 1.*t1168*t2516*t3107*t814))*var2[4] + t4646*var2[5] + t4506*var2[9] + t4685*var2[10] + t4712*var2[11]) + var2[5]*(t4373*var2[3] + t4646*var2[4] + (-0.1422*t4084 - 0.2083*t4161 - 0.16*(t2090*t4084 + t2301*t4161) - 0.02*(t4087 + t2402*t4161) + t4429 + t4714 + 0.035199999999999995*(t4719 + t3621*t814))*var2[5] + t4538*var2[9] + t4795*var2[10] + t4830*var2[11]) + var2[10]*(t4405*var2[3] + t4685*var2[4] + t4795*var2[5] + t4618*var2[9] + (-0.2083*t4920 - 0.1422*t4975 - 0.16*(t2301*t4920 + t2090*t4975) - 0.02*(t2402*t4920 + t2301*t4975))*var2[10] + t4934*var2[11]) + var2[11]*(t4426*var2[3] + t4712*var2[4] + t4830*var2[5] + t4591*var2[9] + t4934*var2[10] + (-0.16*(-1.*t2132*t4941 - 1.*t2071*t4945) - 0.02*(t2071*t4941 - 1.*t2132*t4945))*var2[11]);
  p_output1[8]=var2[9]*(t5008*var2[3] + t5089*var2[4] + (0.035199999999999995*t5014 + 0.1422*t1356*t5049 - 0.2083*t1494*t5049 - 0.16*(-1.*t1356*t2090*t5049 + t1494*t2301*t5049) - 0.02*(-1.*t1356*t2301*t5049 + t1494*t2402*t5049))*var2[9] + t5043*var2[10] + t5024*var2[11]) + var2[3]*((t5137 - 0.2083*t5142 - 0.1422*t5150 - 0.16*(t2301*t5142 + t2090*t5150) - 0.02*(t2402*t5142 + t2301*t5150) - 0.035199999999999995*t1168*t728*t814)*var2[3] + t5208*var2[4] + t5008*var2[9] + t5129*var2[10] + t5114*var2[11]) + var2[10]*(t5129*var2[3] + t5317*var2[4] + t5043*var2[9] + (-0.2083*t5233 - 0.1422*t5265 - 0.16*(t2301*t5233 + t2090*t5265) - 0.02*(t2402*t5233 + t2301*t5265))*var2[10] + t5252*var2[11]) + var2[4]*(t5208*var2[3] + (0.0817*t2516 + 0.035199999999999995*(t2516*t2936 + t5011) + t5137 - 0.2083*t5333 - 0.1422*t5336 - 0.16*(t2301*t5333 + t2090*t5336) - 0.02*(t2402*t5333 + t2301*t5336))*var2[4] + t5089*var2[9] + t5317*var2[10] + t5375*var2[11]) + var2[11]*(t5114*var2[3] + t5375*var2[4] + t5024*var2[9] + t5252*var2[10] + (-0.16*(-1.*t2132*t5392 - 1.*t2071*t5394) - 0.02*(t2071*t5392 - 1.*t2132*t5394))*var2[11]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "jj_hc_1_func.hh"

namespace SymFunction
{

void jj_hc_1_func_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
