/*
 * Automatically Generated from Mathematica.
 * Mon 29 Jul 2019 15:07:56 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t281;
  double t143;
  double t167;
  double t163;
  double t389;
  double t557;
  double t576;
  double t663;
  double t205;
  double t421;
  double t515;
  double t745;
  double t710;
  double t772;
  double t800;
  double t833;
  double t834;
  double t764;
  double t784;
  double t787;
  double t912;
  double t917;
  double t935;
  double t664;
  double t1022;
  double t1067;
  double t1082;
  double t1105;
  double t1107;
  double t1127;
  double t1141;
  double t1145;
  double t1146;
  double t1162;
  double t1168;
  double t1174;
  double t938;
  double t939;
  double t979;
  double t1295;
  double t1314;
  double t1317;
  double t1319;
  double t1321;
  double t1334;
  double t1343;
  double t523;
  double t1547;
  double t1514;
  double t1475;
  double t1485;
  double t1552;
  double t1560;
  double t1569;
  double t1606;
  double t1610;
  double t1657;
  double t1663;
  double t1621;
  double t1470;
  double t1083;
  double t1726;
  double t1783;
  double t1785;
  double t1790;
  double t1799;
  double t1804;
  double t1807;
  double t1631;
  double t1634;
  double t1296;
  double t1964;
  double t1965;
  double t1967;
  double t1970;
  double t1973;
  double t2001;
  double t2216;
  double t2195;
  double t2182;
  double t2193;
  double t2224;
  double t2229;
  double t2240;
  double t2246;
  double t2247;
  double t2268;
  double t2273;
  double t2253;
  double t2169;
  double t2311;
  double t2381;
  double t2389;
  double t2392;
  double t2413;
  double t2425;
  double t2427;
  double t2258;
  double t2262;
  double t2480;
  double t2486;
  double t2489;
  double t2492;
  double t2493;
  double t2495;
  double t2595;
  double t2599;
  double t2603;
  double t2604;
  double t2626;
  double t2632;
  double t2633;
  double t2606;
  double t2607;
  double t2612;
  double t2570;
  double t2683;
  double t2688;
  double t2689;
  double t2706;
  double t2709;
  double t2710;
  double t2694;
  double t2700;
  double t2701;
  double t2788;
  double t2789;
  double t2794;
  double t2804;
  double t2808;
  double t2832;
  double t2795;
  double t2797;
  double t2798;
  double t2557;
  double t2898;
  double t2899;
  double t2901;
  double t2905;
  double t2906;
  double t2896;
  double t2911;
  double t2912;
  double t2925;
  double t2926;
  double t2927;
  double t2673;
  double t2889;
  double t3015;
  double t3020;
  double t3021;
  double t3012;
  double t3030;
  double t3032;
  double t3045;
  double t3052;
  double t3054;
  double t2763;
  double t3158;
  double t3170;
  double t3171;
  double t3138;
  double t3172;
  double t3182;
  double t3186;
  double t3187;
  double t3189;
  double t2887;
  double t3269;
  double t3285;
  double t3286;
  double t3291;
  double t3292;
  double t3263;
  double t3293;
  double t3296;
  double t3303;
  double t3305;
  double t3312;
  double t2999;
  double t3243;
  double t3394;
  double t3396;
  double t3400;
  double t3383;
  double t3411;
  double t3412;
  double t3421;
  double t3422;
  double t3423;
  double t3108;
  double t3491;
  double t3494;
  double t3495;
  double t3490;
  double t3496;
  double t3500;
  double t3514;
  double t3518;
  double t3521;
  double t3580;
  double t3581;
  double t3582;
  double t3598;
  double t3600;
  double t3602;
  double t3630;
  double t3631;
  double t3632;
  double t3608;
  double t3616;
  double t3618;
  double t3668;
  double t3677;
  double t3678;
  double t3686;
  double t3697;
  double t3715;
  double t3730;
  double t3731;
  double t3734;
  double t3719;
  double t3720;
  double t3722;
  double t3584;
  double t3793;
  double t3804;
  double t3806;
  double t3792;
  double t3808;
  double t3809;
  double t3812;
  double t3814;
  double t3815;
  double t3661;
  double t3865;
  double t3867;
  double t3868;
  double t3862;
  double t3869;
  double t3875;
  double t3878;
  double t3880;
  double t3881;
  double t3785;
  double t3946;
  double t3947;
  double t3949;
  double t3937;
  double t3952;
  double t3956;
  double t3958;
  double t3959;
  double t3960;
  double t3845;
  double t4027;
  double t4030;
  double t4031;
  double t4022;
  double t4039;
  double t4040;
  double t4043;
  double t4045;
  double t4047;
  double t3680;
  double t4102;
  double t4104;
  double t4174;
  double t4181;
  double t4184;
  double t4197;
  double t4198;
  double t4199;
  double t4259;
  double t4266;
  double t4272;
  double t4374;
  double t4363;
  double t4372;
  double t4386;
  double t4392;
  double t4397;
  double t4409;
  double t4421;
  double t4474;
  double t4451;
  double t4460;
  double t4463;
  double t4468;
  double t4477;
  double t4478;
  double t4481;
  double t4483;
  double t4485;
  double t4529;
  double t4535;
  double t4520;
  double t4523;
  double t4527;
  double t4528;
  double t4536;
  double t4547;
  double t4560;
  double t4568;
  double t4569;
  double t4641;
  double t4646;
  double t4649;
  double t4620;
  double t4697;
  double t4700;
  double t4701;
  double t4692;
  double t4752;
  double t4756;
  double t4757;
  double t4738;
  double t4813;
  double t4814;
  double t4819;
  double t4868;
  double t4869;
  double t4872;
  double t4914;
  double t4915;
  double t4916;
  double t5006;
  double t4995;
  double t5007;
  double t5008;
  double t5012;
  double t5015;
  double t5020;
  double t4864;
  double t5070;
  double t5073;
  double t5066;
  double t5074;
  double t5085;
  double t5093;
  double t5098;
  double t5100;
  double t4936;
  double t5179;
  double t5182;
  double t5178;
  double t5183;
  double t5198;
  double t5210;
  double t5211;
  double t5213;
  double t5243;
  double t5250;
  double t5254;
  double t5265;
  double t5306;
  double t5308;
  double t5312;
  double t5326;
  double t5373;
  double t5376;
  double t5378;
  double t5411;
  double t5448;
  double t5450;
  double t5452;
  double t5502;
  double t5508;
  double t5522;
  double t5558;
  double t5560;
  double t5575;
  double t5632;
  double t5622;
  double t5633;
  double t5635;
  double t5641;
  double t5644;
  double t5660;
  double t5495;
  double t5701;
  double t5703;
  double t5699;
  double t5704;
  double t5705;
  double t5707;
  double t5709;
  double t5711;
  double t5585;
  double t5741;
  double t5744;
  double t5740;
  double t5745;
  double t5746;
  double t5751;
  double t5753;
  double t5766;
  double t5792;
  double t5797;
  double t5805;
  double t5809;
  double t5849;
  double t5853;
  double t5854;
  double t5859;
  double t5886;
  double t5889;
  double t5890;
  double t5894;
  t281 = Cos(var1[3]);
  t143 = Cos(var1[5]);
  t167 = Sin(var1[4]);
  t163 = Sin(var1[3]);
  t389 = Sin(var1[5]);
  t557 = t281*t143*t167;
  t576 = t163*t389;
  t663 = t557 + t576;
  t205 = -1.*t143*t163*t167;
  t421 = t281*t389;
  t515 = t205 + t421;
  t745 = Cos(var1[7]);
  t710 = Cos(var1[6]);
  t772 = Sin(var1[7]);
  t800 = t745*t515;
  t833 = -1.*t710*t663*t772;
  t834 = t800 + t833;
  t764 = t710*t745*t663;
  t784 = t515*t772;
  t787 = t764 + t784;
  t912 = Cos(var1[8]);
  t917 = 0. + t912;
  t935 = Sin(var1[8]);
  t664 = Sin(var1[6]);
  t1022 = -1.*t281*t143;
  t1067 = -1.*t163*t167*t389;
  t1082 = t1022 + t1067;
  t1105 = -1.*t143*t163;
  t1107 = t281*t167*t389;
  t1127 = t1105 + t1107;
  t1141 = t745*t1082;
  t1145 = -1.*t710*t1127*t772;
  t1146 = t1141 + t1145;
  t1162 = t710*t745*t1127;
  t1168 = t1082*t772;
  t1174 = t1162 + t1168;
  t938 = -1.*t935;
  t939 = 0. + t938;
  t979 = 0. + t935;
  t1295 = Cos(var1[4]);
  t1314 = -1.*t1295*t745*t163;
  t1317 = -1.*t281*t1295*t710*t772;
  t1319 = t1314 + t1317;
  t1321 = t281*t1295*t710*t745;
  t1334 = -1.*t1295*t163*t772;
  t1343 = t1321 + t1334;
  t523 = 0.2429*t515;
  t1547 = Cos(var1[10]);
  t1514 = Cos(var1[9]);
  t1475 = Sin(var1[10]);
  t1485 = t1475*t515;
  t1552 = t1514*t1547*t663;
  t1560 = t1485 + t1552;
  t1569 = t1547*t515;
  t1606 = -1.*t1514*t1475*t663;
  t1610 = t1569 + t1606;
  t1657 = Cos(var1[11]);
  t1663 = 0. + t1657;
  t1621 = Sin(var1[11]);
  t1470 = Sin(var1[9]);
  t1083 = 0.2429*t1082;
  t1726 = 0. + t1621;
  t1783 = -1.*t1514*t1475*t1127;
  t1785 = t1547*t1082;
  t1790 = t1783 + t1785;
  t1799 = t1514*t1547*t1127;
  t1804 = t1475*t1082;
  t1807 = t1799 + t1804;
  t1631 = -1.*t1621;
  t1634 = 0. + t1631;
  t1296 = -0.2429*t1295*t163;
  t1964 = -1.*t1514*t281*t1295*t1475;
  t1965 = -1.*t1547*t1295*t163;
  t1967 = t1964 + t1965;
  t1970 = t1514*t1547*t281*t1295;
  t1973 = -1.*t1295*t1475*t163;
  t2001 = t1970 + t1973;
  t2216 = Cos(var1[16]);
  t2195 = Cos(var1[15]);
  t2182 = Sin(var1[16]);
  t2193 = t2182*t515;
  t2224 = t2195*t2216*t663;
  t2229 = t2193 + t2224;
  t2240 = t2216*t515;
  t2246 = -1.*t2195*t2182*t663;
  t2247 = t2240 + t2246;
  t2268 = Cos(var1[17]);
  t2273 = 0. + t2268;
  t2253 = Sin(var1[17]);
  t2169 = Sin(var1[15]);
  t2311 = 0. + t2253;
  t2381 = -1.*t2195*t2182*t1127;
  t2389 = t2216*t1082;
  t2392 = t2381 + t2389;
  t2413 = t2195*t2216*t1127;
  t2425 = t2182*t1082;
  t2427 = t2413 + t2425;
  t2258 = -1.*t2253;
  t2262 = 0. + t2258;
  t2480 = -1.*t2195*t281*t1295*t2182;
  t2486 = -1.*t2216*t1295*t163;
  t2489 = t2480 + t2486;
  t2492 = t2195*t2216*t281*t1295;
  t2493 = -1.*t1295*t2182*t163;
  t2495 = t2492 + t2493;
  t2595 = t1295*t143*t710*t163;
  t2599 = 0. + t664;
  t2603 = -1.*t143*t167*t2599;
  t2604 = t2595 + t2603;
  t2626 = t281*t1295*t143*t745;
  t2632 = -1.*t2604*t772;
  t2633 = t2626 + t2632;
  t2606 = t745*t2604;
  t2607 = t281*t1295*t143*t772;
  t2612 = t2606 + t2607;
  t2570 = 0. + t710;
  t2683 = t1295*t710*t163*t389;
  t2688 = -1.*t167*t389*t2599;
  t2689 = t2683 + t2688;
  t2706 = t281*t1295*t745*t389;
  t2709 = -1.*t2689*t772;
  t2710 = t2706 + t2709;
  t2694 = t745*t2689;
  t2700 = t281*t1295*t389*t772;
  t2701 = t2694 + t2700;
  t2788 = -1.*t710*t163*t167;
  t2789 = -1.*t1295*t2599;
  t2794 = t2788 + t2789;
  t2804 = -1.*t281*t745*t167;
  t2808 = -1.*t2794*t772;
  t2832 = t2804 + t2808;
  t2795 = t745*t2794;
  t2797 = -1.*t281*t167*t772;
  t2798 = t2795 + t2797;
  t2557 = 0.2429*t281*t1295*t143;
  t2898 = t1514*t1295*t143*t163;
  t2899 = -1.*t1470;
  t2901 = 0. + t2899;
  t2905 = -1.*t143*t2901*t167;
  t2906 = t2898 + t2905;
  t2896 = t281*t1295*t143*t1475;
  t2911 = t1547*t2906;
  t2912 = t2896 + t2911;
  t2925 = t1547*t281*t1295*t143;
  t2926 = -1.*t1475*t2906;
  t2927 = t2925 + t2926;
  t2673 = 0.2429*t281*t1295*t389;
  t2889 = 0. + t1514;
  t3015 = t1514*t1295*t163*t389;
  t3020 = -1.*t2901*t167*t389;
  t3021 = t3015 + t3020;
  t3012 = t281*t1295*t1475*t389;
  t3030 = t1547*t3021;
  t3032 = t3012 + t3030;
  t3045 = t1547*t281*t1295*t389;
  t3052 = -1.*t1475*t3021;
  t3054 = t3045 + t3052;
  t2763 = -0.2429*t281*t167;
  t3158 = -1.*t1295*t2901;
  t3170 = -1.*t1514*t163*t167;
  t3171 = t3158 + t3170;
  t3138 = -1.*t281*t1475*t167;
  t3172 = t1547*t3171;
  t3182 = t3138 + t3172;
  t3186 = -1.*t1547*t281*t167;
  t3187 = -1.*t1475*t3171;
  t3189 = t3186 + t3187;
  t2887 = -0.0817*t143*t167;
  t3269 = t2195*t1295*t143*t163;
  t3285 = -1.*t2169;
  t3286 = 0. + t3285;
  t3291 = -1.*t143*t3286*t167;
  t3292 = t3269 + t3291;
  t3263 = t281*t1295*t143*t2182;
  t3293 = t2216*t3292;
  t3296 = t3263 + t3293;
  t3303 = t2216*t281*t1295*t143;
  t3305 = -1.*t2182*t3292;
  t3312 = t3303 + t3305;
  t2999 = -0.0817*t167*t389;
  t3243 = 0. + t2195;
  t3394 = t2195*t1295*t163*t389;
  t3396 = -1.*t3286*t167*t389;
  t3400 = t3394 + t3396;
  t3383 = t281*t1295*t2182*t389;
  t3411 = t2216*t3400;
  t3412 = t3383 + t3411;
  t3421 = t2216*t281*t1295*t389;
  t3422 = -1.*t2182*t3400;
  t3423 = t3421 + t3422;
  t3108 = -0.0817*t1295;
  t3491 = -1.*t1295*t3286;
  t3494 = -1.*t2195*t163*t167;
  t3495 = t3491 + t3494;
  t3490 = -1.*t281*t2182*t167;
  t3496 = t2216*t3495;
  t3500 = t3490 + t3496;
  t3514 = -1.*t2216*t281*t167;
  t3518 = -1.*t2182*t3495;
  t3521 = t3514 + t3518;
  t3580 = t143*t163;
  t3581 = -1.*t281*t167*t389;
  t3582 = t3580 + t3581;
  t3598 = t710*t1082;
  t3600 = -1.*t1295*t389*t2599;
  t3602 = t3598 + t3600;
  t3630 = t745*t3582;
  t3631 = -1.*t3602*t772;
  t3632 = t3630 + t3631;
  t3608 = t745*t3602;
  t3616 = t3582*t772;
  t3618 = t3608 + t3616;
  t3668 = t143*t163*t167;
  t3677 = -1.*t281*t389;
  t3678 = t3668 + t3677;
  t3686 = t710*t3678;
  t3697 = t1295*t143*t2599;
  t3715 = t3686 + t3697;
  t3730 = t745*t663;
  t3731 = -1.*t3715*t772;
  t3734 = t3730 + t3731;
  t3719 = t745*t3715;
  t3720 = t663*t772;
  t3722 = t3719 + t3720;
  t3584 = 0.2429*t3582;
  t3793 = -1.*t1295*t2901*t389;
  t3804 = t1514*t1082;
  t3806 = t3793 + t3804;
  t3792 = t1475*t3582;
  t3808 = t1547*t3806;
  t3809 = t3792 + t3808;
  t3812 = t1547*t3582;
  t3814 = -1.*t1475*t3806;
  t3815 = t3812 + t3814;
  t3661 = 0.2429*t663;
  t3865 = t1295*t143*t2901;
  t3867 = t1514*t3678;
  t3868 = t3865 + t3867;
  t3862 = t1475*t663;
  t3869 = t1547*t3868;
  t3875 = t3862 + t3869;
  t3878 = t1547*t663;
  t3880 = -1.*t1475*t3868;
  t3881 = t3878 + t3880;
  t3785 = -0.0817*t1295*t389;
  t3946 = -1.*t1295*t3286*t389;
  t3947 = t2195*t1082;
  t3949 = t3946 + t3947;
  t3937 = t2182*t3582;
  t3952 = t2216*t3949;
  t3956 = t3937 + t3952;
  t3958 = t2216*t3582;
  t3959 = -1.*t2182*t3949;
  t3960 = t3958 + t3959;
  t3845 = 0.0817*t1295*t143;
  t4027 = t1295*t143*t3286;
  t4030 = t2195*t3678;
  t4031 = t4027 + t4030;
  t4022 = t2182*t663;
  t4039 = t2216*t4031;
  t4040 = t4022 + t4039;
  t4043 = t2216*t663;
  t4045 = -1.*t2182*t4031;
  t4047 = t4043 + t4045;
  t3680 = -1.*t3678*t664;
  t4102 = t1295*t143*t710;
  t4104 = t4102 + t3680;
  t4174 = t281*t143;
  t4181 = t163*t167*t389;
  t4184 = t4174 + t4181;
  t4197 = t1295*t710*t389;
  t4198 = -1.*t4184*t664;
  t4199 = t4197 + t4198;
  t4259 = -1.*t710*t167;
  t4266 = -1.*t1295*t163*t664;
  t4272 = t4259 + t4266;
  t4374 = 0. + t557 + t576;
  t4363 = 0. + t3686 + t3697;
  t4372 = -1.*t745*t4363;
  t4386 = -1.*t4374*t772;
  t4392 = t4372 + t4386;
  t4397 = t745*t4374;
  t4409 = -1.*t4363*t772;
  t4421 = t4397 + t4409;
  t4474 = 0. + t1105 + t1107;
  t4451 = t710*t4184;
  t4460 = t1295*t389*t2599;
  t4463 = 0. + t4451 + t4460;
  t4468 = -1.*t745*t4463;
  t4477 = -1.*t4474*t772;
  t4478 = t4468 + t4477;
  t4481 = t745*t4474;
  t4483 = -1.*t4463*t772;
  t4485 = t4481 + t4483;
  t4529 = t281*t1295;
  t4535 = 0. + t4529;
  t4520 = t1295*t710*t163;
  t4523 = -1.*t167*t2599;
  t4527 = 0. + t4520 + t4523;
  t4528 = -1.*t745*t4527;
  t4536 = -1.*t4535*t772;
  t4547 = t4528 + t4536;
  t4560 = t4535*t745;
  t4568 = -1.*t4527*t772;
  t4569 = t4560 + t4568;
  t4641 = t745*t4363;
  t4646 = t4374*t772;
  t4649 = 0. + t4641 + t4646;
  t4620 = 0. + t4397 + t4409;
  t4697 = t745*t4463;
  t4700 = t4474*t772;
  t4701 = 0. + t4697 + t4700;
  t4692 = 0. + t4481 + t4483;
  t4752 = t745*t4527;
  t4756 = t4535*t772;
  t4757 = 0. + t4752 + t4756;
  t4738 = 0. + t4560 + t4568;
  t4813 = -1.*t1514*t1295*t143;
  t4814 = -1.*t1470*t3678;
  t4819 = t4813 + t4814;
  t4868 = -1.*t1514*t1295*t389;
  t4869 = -1.*t1470*t4184;
  t4872 = t4868 + t4869;
  t4914 = -1.*t1295*t1470*t163;
  t4915 = t1514*t167;
  t4916 = t4914 + t4915;
  t5006 = 0. + t3865 + t3867;
  t4995 = -1.*t1475*t4374;
  t5007 = -1.*t1547*t5006;
  t5008 = t4995 + t5007;
  t5012 = t1547*t4374;
  t5015 = -1.*t1475*t5006;
  t5020 = t5012 + t5015;
  t4864 = t1514*t4184;
  t5070 = t1295*t2901*t389;
  t5073 = 0. + t5070 + t4864;
  t5066 = -1.*t1475*t4474;
  t5074 = -1.*t1547*t5073;
  t5085 = t5066 + t5074;
  t5093 = t1547*t4474;
  t5098 = -1.*t1475*t5073;
  t5100 = t5093 + t5098;
  t4936 = t1514*t1295*t163;
  t5179 = -1.*t2901*t167;
  t5182 = 0. + t4936 + t5179;
  t5178 = -1.*t4535*t1475;
  t5183 = -1.*t1547*t5182;
  t5198 = t5178 + t5183;
  t5210 = t1547*t4535;
  t5211 = -1.*t1475*t5182;
  t5213 = t5210 + t5211;
  t5243 = t1475*t4374;
  t5250 = t1547*t5006;
  t5254 = 0. + t5243 + t5250;
  t5265 = 0. + t5012 + t5015;
  t5306 = t1475*t4474;
  t5308 = t1547*t5073;
  t5312 = 0. + t5306 + t5308;
  t5326 = 0. + t5093 + t5098;
  t5373 = t4535*t1475;
  t5376 = t1547*t5182;
  t5378 = 0. + t5373 + t5376;
  t5411 = 0. + t5210 + t5211;
  t5448 = -1.*t2195*t1295*t143;
  t5450 = -1.*t2169*t3678;
  t5452 = t5448 + t5450;
  t5502 = -1.*t2195*t1295*t389;
  t5508 = -1.*t2169*t4184;
  t5522 = t5502 + t5508;
  t5558 = -1.*t1295*t2169*t163;
  t5560 = t2195*t167;
  t5575 = t5558 + t5560;
  t5632 = 0. + t4027 + t4030;
  t5622 = -1.*t2182*t4374;
  t5633 = -1.*t2216*t5632;
  t5635 = t5622 + t5633;
  t5641 = t2216*t4374;
  t5644 = -1.*t2182*t5632;
  t5660 = t5641 + t5644;
  t5495 = t2195*t4184;
  t5701 = t1295*t3286*t389;
  t5703 = 0. + t5701 + t5495;
  t5699 = -1.*t2182*t4474;
  t5704 = -1.*t2216*t5703;
  t5705 = t5699 + t5704;
  t5707 = t2216*t4474;
  t5709 = -1.*t2182*t5703;
  t5711 = t5707 + t5709;
  t5585 = t2195*t1295*t163;
  t5741 = -1.*t3286*t167;
  t5744 = 0. + t5585 + t5741;
  t5740 = -1.*t4535*t2182;
  t5745 = -1.*t2216*t5744;
  t5746 = t5740 + t5745;
  t5751 = t2216*t4535;
  t5753 = -1.*t2182*t5744;
  t5766 = t5751 + t5753;
  t5792 = t2182*t4374;
  t5797 = t2216*t5632;
  t5805 = 0. + t5792 + t5797;
  t5809 = 0. + t5641 + t5644;
  t5849 = t2182*t4474;
  t5853 = t2216*t5703;
  t5854 = 0. + t5849 + t5853;
  t5859 = 0. + t5707 + t5709;
  t5886 = t4535*t2182;
  t5889 = t2216*t5744;
  t5890 = 0. + t5886 + t5889;
  t5894 = 0. + t5751 + t5753;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=1.;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=1.;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=1.;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=1.;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=1.;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=1.;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=1.;
  p_output1[27]=t523 + 0.0329*t663*t664 - 0.2083*t787 - 0.1422*t834 - 0.02*(t834*t917 + t787*t939) - 0.16*(t787*t917 + t834*t979);
  p_output1[28]=t1083 - 0.1422*t1146 - 0.2083*t1174 + 0.0329*t1127*t664 - 0.02*(t1146*t917 + t1174*t939) - 0.16*(t1174*t917 + t1146*t979);
  p_output1[29]=t1296 - 0.1422*t1319 - 0.2083*t1343 + 0.0329*t1295*t281*t664 - 0.02*(t1319*t917 + t1343*t939) - 0.16*(t1343*t917 + t1319*t979);
  p_output1[30]=-0.2083*t1560 - 0.1422*t1610 - 0.02*(t1560*t1634 + t1610*t1663) - 0.16*(t1560*t1663 + t1610*t1726) + t523 + 0.035199999999999995*t1470*t663;
  p_output1[31]=t1083 + 0.035199999999999995*t1127*t1470 - 0.1422*t1790 - 0.2083*t1807 - 0.02*(t1663*t1790 + t1634*t1807) - 0.16*(t1726*t1790 + t1663*t1807);
  p_output1[32]=t1296 - 0.1422*t1967 - 0.2083*t2001 - 0.02*(t1663*t1967 + t1634*t2001) - 0.16*(t1726*t1967 + t1663*t2001) + 0.035199999999999995*t1295*t1470*t281;
  p_output1[33]=-0.2083*t2229 - 0.1422*t2247 - 0.02*(t2229*t2262 + t2247*t2273) - 0.16*(t2229*t2273 + t2247*t2311) - 0.1944*t515 + 0.0329*t2169*t663;
  p_output1[34]=-0.1944*t1082 + 0.0329*t1127*t2169 - 0.1422*t2392 - 0.2083*t2427 - 0.02*(t2273*t2392 + t2262*t2427) - 0.16*(t2311*t2392 + t2273*t2427);
  p_output1[35]=0.1944*t1295*t163 - 0.1422*t2489 - 0.2083*t2495 - 0.02*(t2273*t2489 + t2262*t2495) - 0.16*(t2311*t2489 + t2273*t2495) + 0.0329*t1295*t2169*t281;
  p_output1[36]=0.0817*t143*t167 + t2557 - 0.2083*t2612 - 0.1422*t2633 - 0.0329*(-1.*t143*t167*t2570 - 1.*t1295*t143*t163*t664) - 0.02*(t2633*t917 + t2612*t939) - 0.16*(t2612*t917 + t2633*t979);
  p_output1[37]=t2673 - 0.2083*t2701 - 0.1422*t2710 + 0.0817*t167*t389 - 0.0329*(-1.*t167*t2570*t389 - 1.*t1295*t163*t389*t664) - 0.02*(t2710*t917 + t2701*t939) - 0.16*(t2701*t917 + t2710*t979);
  p_output1[38]=0.0817*t1295 + t2763 - 0.2083*t2798 - 0.1422*t2832 - 0.0329*(-1.*t1295*t2570 + t163*t167*t664) - 0.02*(t2832*t917 + t2798*t939) - 0.16*(t2798*t917 + t2832*t979);
  p_output1[39]=t2557 + t2887 + 0.035199999999999995*(t1295*t143*t1470*t163 - 1.*t143*t167*t2889) - 0.2083*t2912 - 0.1422*t2927 - 0.02*(t1634*t2912 + t1663*t2927) - 0.16*(t1663*t2912 + t1726*t2927);
  p_output1[40]=t2673 + t2999 - 0.2083*t3032 - 0.1422*t3054 - 0.02*(t1634*t3032 + t1663*t3054) - 0.16*(t1663*t3032 + t1726*t3054) + 0.035199999999999995*(t1295*t1470*t163*t389 - 1.*t167*t2889*t389);
  p_output1[41]=t2763 + 0.035199999999999995*(-1.*t1470*t163*t167 - 1.*t1295*t2889) + t3108 - 0.2083*t3182 - 0.1422*t3189 - 0.02*(t1634*t3182 + t1663*t3189) - 0.16*(t1663*t3182 + t1726*t3189);
  p_output1[42]=-0.1944*t1295*t143*t281 + t2887 + 0.0329*(t1295*t143*t163*t2169 - 1.*t143*t167*t3243) - 0.2083*t3296 - 0.1422*t3312 - 0.02*(t2262*t3296 + t2273*t3312) - 0.16*(t2273*t3296 + t2311*t3312);
  p_output1[43]=t2999 - 0.2083*t3412 - 0.1422*t3423 - 0.02*(t2262*t3412 + t2273*t3423) - 0.16*(t2273*t3412 + t2311*t3423) - 0.1944*t1295*t281*t389 + 0.0329*(t1295*t163*t2169*t389 - 1.*t167*t3243*t389);
  p_output1[44]=0.1944*t167*t281 + t3108 + 0.0329*(-1.*t163*t167*t2169 - 1.*t1295*t3243) - 0.2083*t3500 - 0.1422*t3521 - 0.02*(t2262*t3500 + t2273*t3521) - 0.16*(t2273*t3500 + t2311*t3521);
  p_output1[45]=t3584 - 0.2083*t3618 - 0.1422*t3632 + 0.0817*t1295*t389 - 0.0329*(-1.*t1295*t2570*t389 - 1.*t1082*t664) - 0.02*(t3632*t917 + t3618*t939) - 0.16*(t3618*t917 + t3632*t979);
  p_output1[46]=-0.0817*t1295*t143 + t3661 - 0.0329*(t1295*t143*t2570 + t3680) - 0.2083*t3722 - 0.1422*t3734 - 0.02*(t3734*t917 + t3722*t939) - 0.16*(t3722*t917 + t3734*t979);
  p_output1[47]=0;
  p_output1[48]=t3584 + t3785 - 0.2083*t3809 - 0.1422*t3815 - 0.02*(t1634*t3809 + t1663*t3815) - 0.16*(t1663*t3809 + t1726*t3815) + 0.035199999999999995*(t1082*t1470 - 1.*t1295*t2889*t389);
  p_output1[49]=t3661 + 0.035199999999999995*(t1295*t143*t2889 + t1470*t3678) + t3845 - 0.2083*t3875 - 0.1422*t3881 - 0.02*(t1634*t3875 + t1663*t3881) - 0.16*(t1663*t3875 + t1726*t3881);
  p_output1[50]=0;
  p_output1[51]=-0.1944*t3582 + t3785 + 0.0329*(t1082*t2169 - 1.*t1295*t3243*t389) - 0.2083*t3956 - 0.1422*t3960 - 0.02*(t2262*t3956 + t2273*t3960) - 0.16*(t2273*t3956 + t2311*t3960);
  p_output1[52]=0.0329*(t1295*t143*t3243 + t2169*t3678) + t3845 - 0.2083*t4040 - 0.1422*t4047 - 0.02*(t2262*t4040 + t2273*t4047) - 0.16*(t2273*t4040 + t2311*t4047) - 0.1944*t663;
  p_output1[53]=0;
  p_output1[54]=-0.0329*(-1.*t1295*t143*t664 - 1.*t3678*t710) - 0.2083*t4104*t745 + 0.1422*t4104*t772 - 0.02*(-1.*t4104*t772*t917 + t4104*t745*t939) - 0.16*(t4104*t745*t917 - 1.*t4104*t772*t979);
  p_output1[55]=-0.0329*(-1.*t1295*t389*t664 - 1.*t4184*t710) - 0.2083*t4199*t745 + 0.1422*t4199*t772 - 0.02*(-1.*t4199*t772*t917 + t4199*t745*t939) - 0.16*(t4199*t745*t917 - 1.*t4199*t772*t979);
  p_output1[56]=-0.0329*(t167*t664 - 1.*t1295*t163*t710) - 0.2083*t4272*t745 + 0.1422*t4272*t772 - 0.02*(-1.*t4272*t772*t917 + t4272*t745*t939) - 0.16*(t4272*t745*t917 - 1.*t4272*t772*t979);
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=-0.1422*t4392 - 0.2083*t4421 - 0.02*(t4392*t917 + t4421*t939) - 0.16*(t4421*t917 + t4392*t979);
  p_output1[64]=-0.1422*t4478 - 0.2083*t4485 - 0.02*(t4478*t917 + t4485*t939) - 0.16*(t4485*t917 + t4478*t979);
  p_output1[65]=-0.1422*t4547 - 0.2083*t4569 - 0.02*(t4547*t917 + t4569*t939) - 0.16*(t4569*t917 + t4547*t979);
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=-0.02*(-1.*t4649*t912 - 1.*t4620*t935) - 0.16*(t4620*t912 - 1.*t4649*t935);
  p_output1[73]=-0.02*(-1.*t4701*t912 - 1.*t4692*t935) - 0.16*(t4692*t912 - 1.*t4701*t935);
  p_output1[74]=-0.02*(-1.*t4757*t912 - 1.*t4738*t935) - 0.16*(t4738*t912 - 1.*t4757*t935);
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0.035199999999999995*(-1.*t1295*t143*t1470 + t3867) + 0.1422*t1475*t4819 - 0.2083*t1547*t4819 - 0.02*(t1547*t1634*t4819 - 1.*t1475*t1663*t4819) - 0.16*(t1547*t1663*t4819 - 1.*t1475*t1726*t4819);
  p_output1[85]=0.035199999999999995*(-1.*t1295*t1470*t389 + t4864) + 0.1422*t1475*t4872 - 0.2083*t1547*t4872 - 0.02*(t1547*t1634*t4872 - 1.*t1475*t1663*t4872) - 0.16*(t1547*t1663*t4872 - 1.*t1475*t1726*t4872);
  p_output1[86]=0.1422*t1475*t4916 - 0.2083*t1547*t4916 - 0.02*(t1547*t1634*t4916 - 1.*t1475*t1663*t4916) - 0.16*(t1547*t1663*t4916 - 1.*t1475*t1726*t4916) + 0.035199999999999995*(t1470*t167 + t4936);
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=-0.1422*t5008 - 0.2083*t5020 - 0.02*(t1663*t5008 + t1634*t5020) - 0.16*(t1726*t5008 + t1663*t5020);
  p_output1[94]=-0.1422*t5085 - 0.2083*t5100 - 0.02*(t1663*t5085 + t1634*t5100) - 0.16*(t1726*t5085 + t1663*t5100);
  p_output1[95]=-0.1422*t5198 - 0.2083*t5213 - 0.02*(t1663*t5198 + t1634*t5213) - 0.16*(t1726*t5198 + t1663*t5213);
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=-0.02*(-1.*t1657*t5254 - 1.*t1621*t5265) - 0.16*(-1.*t1621*t5254 + t1657*t5265);
  p_output1[103]=-0.02*(-1.*t1657*t5312 - 1.*t1621*t5326) - 0.16*(-1.*t1621*t5312 + t1657*t5326);
  p_output1[104]=-0.02*(-1.*t1657*t5378 - 1.*t1621*t5411) - 0.16*(-1.*t1621*t5378 + t1657*t5411);
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0.0329*(-1.*t1295*t143*t2169 + t4030) + 0.1422*t2182*t5452 - 0.2083*t2216*t5452 - 0.02*(t2216*t2262*t5452 - 1.*t2182*t2273*t5452) - 0.16*(t2216*t2273*t5452 - 1.*t2182*t2311*t5452);
  p_output1[142]=0.0329*(-1.*t1295*t2169*t389 + t5495) + 0.1422*t2182*t5522 - 0.2083*t2216*t5522 - 0.02*(t2216*t2262*t5522 - 1.*t2182*t2273*t5522) - 0.16*(t2216*t2273*t5522 - 1.*t2182*t2311*t5522);
  p_output1[143]=0.1422*t2182*t5575 - 0.2083*t2216*t5575 - 0.02*(t2216*t2262*t5575 - 1.*t2182*t2273*t5575) - 0.16*(t2216*t2273*t5575 - 1.*t2182*t2311*t5575) + 0.0329*(t167*t2169 + t5585);
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=-0.1422*t5635 - 0.2083*t5660 - 0.02*(t2273*t5635 + t2262*t5660) - 0.16*(t2311*t5635 + t2273*t5660);
  p_output1[151]=-0.1422*t5705 - 0.2083*t5711 - 0.02*(t2273*t5705 + t2262*t5711) - 0.16*(t2311*t5705 + t2273*t5711);
  p_output1[152]=-0.1422*t5746 - 0.2083*t5766 - 0.02*(t2273*t5746 + t2262*t5766) - 0.16*(t2311*t5746 + t2273*t5766);
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=-0.02*(-1.*t2268*t5805 - 1.*t2253*t5809) - 0.16*(-1.*t2253*t5805 + t2268*t5809);
  p_output1[160]=-0.02*(-1.*t2268*t5854 - 1.*t2253*t5859) - 0.16*(-1.*t2253*t5854 + t2268*t5859);
  p_output1[161]=-0.02*(-1.*t2268*t5890 - 1.*t2253*t5894) - 0.16*(-1.*t2253*t5890 + t2268*t5894);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_2_func.hh"

namespace SymFunction
{

void j_2_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
