/*
 * Automatically Generated from Mathematica.
 * Mon 29 Jul 2019 15:07:53 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t489;
  double t288;
  double t418;
  double t391;
  double t512;
  double t663;
  double t666;
  double t676;
  double t470;
  double t515;
  double t557;
  double t735;
  double t727;
  double t753;
  double t800;
  double t805;
  double t833;
  double t745;
  double t764;
  double t784;
  double t843;
  double t844;
  double t867;
  double t697;
  double t999;
  double t1005;
  double t1013;
  double t1066;
  double t1067;
  double t1080;
  double t1083;
  double t1093;
  double t1105;
  double t1127;
  double t1133;
  double t1141;
  double t903;
  double t911;
  double t941;
  double t1233;
  double t1276;
  double t1277;
  double t1295;
  double t1306;
  double t1307;
  double t1314;
  double t1456;
  double t1447;
  double t1413;
  double t1444;
  double t1467;
  double t1470;
  double t1475;
  double t1483;
  double t1485;
  double t1554;
  double t1555;
  double t1525;
  double t1402;
  double t1622;
  double t1689;
  double t1690;
  double t1694;
  double t1726;
  double t1741;
  double t1743;
  double t1532;
  double t1544;
  double t1902;
  double t1905;
  double t1906;
  double t1942;
  double t1947;
  double t1952;
  double t1392;
  double t2073;
  double t2072;
  double t2048;
  double t2050;
  double t2077;
  double t2079;
  double t2140;
  double t2143;
  double t2147;
  double t2209;
  double t2214;
  double t2159;
  double t2025;
  double t1665;
  double t2236;
  double t2264;
  double t2268;
  double t2273;
  double t2280;
  double t2287;
  double t2318;
  double t2170;
  double t2175;
  double t1893;
  double t2434;
  double t2440;
  double t2450;
  double t2459;
  double t2462;
  double t2463;
  double t2534;
  double t2537;
  double t2548;
  double t2552;
  double t2570;
  double t2578;
  double t2581;
  double t2554;
  double t2556;
  double t2557;
  double t2501;
  double t2647;
  double t2650;
  double t2657;
  double t2670;
  double t2671;
  double t2673;
  double t2658;
  double t2660;
  double t2662;
  double t2721;
  double t2724;
  double t2726;
  double t2735;
  double t2736;
  double t2737;
  double t2727;
  double t2731;
  double t2733;
  double t2808;
  double t2810;
  double t2813;
  double t2818;
  double t2828;
  double t2804;
  double t2832;
  double t2844;
  double t2862;
  double t2864;
  double t2868;
  double t2796;
  double t2913;
  double t2917;
  double t2924;
  double t2912;
  double t2925;
  double t2926;
  double t2938;
  double t2941;
  double t2946;
  double t3023;
  double t3025;
  double t3029;
  double t3022;
  double t3030;
  double t3032;
  double t3037;
  double t3042;
  double t3045;
  double t2789;
  double t2497;
  double t3138;
  double t3142;
  double t3151;
  double t3157;
  double t3133;
  double t3158;
  double t3170;
  double t3172;
  double t3173;
  double t3182;
  double t2894;
  double t2633;
  double t3099;
  double t3240;
  double t3243;
  double t3254;
  double t3238;
  double t3258;
  double t3260;
  double t3263;
  double t3268;
  double t3269;
  double t2701;
  double t3008;
  double t3329;
  double t3332;
  double t3336;
  double t3327;
  double t3345;
  double t3346;
  double t3355;
  double t3356;
  double t3357;
  double t3413;
  double t3420;
  double t3421;
  double t3436;
  double t3439;
  double t3446;
  double t3470;
  double t3475;
  double t3477;
  double t3454;
  double t3460;
  double t3463;
  double t3521;
  double t3524;
  double t3525;
  double t3538;
  double t3539;
  double t3542;
  double t3560;
  double t3566;
  double t3572;
  double t3552;
  double t3555;
  double t3557;
  double t3634;
  double t3635;
  double t3637;
  double t3633;
  double t3639;
  double t3640;
  double t3643;
  double t3647;
  double t3649;
  double t3722;
  double t3727;
  double t3728;
  double t3720;
  double t3729;
  double t3730;
  double t3734;
  double t3736;
  double t3738;
  double t3412;
  double t3618;
  double t3803;
  double t3804;
  double t3805;
  double t3793;
  double t3806;
  double t3808;
  double t3810;
  double t3811;
  double t3812;
  double t3500;
  double t3685;
  double t3860;
  double t3862;
  double t3863;
  double t3859;
  double t3865;
  double t3867;
  double t3869;
  double t3871;
  double t3875;
  double t3528;
  double t3911;
  double t3912;
  double t3961;
  double t3963;
  double t3968;
  double t3991;
  double t3994;
  double t3999;
  double t4034;
  double t4036;
  double t4037;
  double t4080;
  double t4076;
  double t4079;
  double t4081;
  double t4085;
  double t4088;
  double t4095;
  double t4099;
  double t4166;
  double t4144;
  double t4153;
  double t4154;
  double t4155;
  double t4169;
  double t4171;
  double t4181;
  double t4182;
  double t4184;
  double t4244;
  double t4246;
  double t4218;
  double t4220;
  double t4230;
  double t4240;
  double t4249;
  double t4250;
  double t4256;
  double t4257;
  double t4259;
  double t4322;
  double t4325;
  double t4329;
  double t4314;
  double t4426;
  double t4428;
  double t4429;
  double t4422;
  double t4463;
  double t4468;
  double t4470;
  double t4457;
  double t3854;
  double t4506;
  double t4507;
  double t4569;
  double t4574;
  double t4577;
  double t4622;
  double t4624;
  double t4630;
  double t4713;
  double t4711;
  double t4714;
  double t4717;
  double t4721;
  double t4722;
  double t4723;
  double t4781;
  double t4782;
  double t4786;
  double t4780;
  double t4787;
  double t4788;
  double t4797;
  double t4807;
  double t4808;
  double t4841;
  double t4846;
  double t4847;
  double t4840;
  double t4848;
  double t4850;
  double t4853;
  double t4858;
  double t4859;
  double t4889;
  double t4895;
  double t4904;
  double t4906;
  double t4928;
  double t4936;
  double t4942;
  double t4947;
  double t4978;
  double t4979;
  double t4981;
  double t4991;
  double t5036;
  double t5045;
  double t5048;
  double t5123;
  double t5134;
  double t5143;
  double t5188;
  double t5198;
  double t5205;
  double t5246;
  double t5244;
  double t5249;
  double t5250;
  double t5258;
  double t5264;
  double t5265;
  double t5101;
  double t5312;
  double t5313;
  double t5309;
  double t5315;
  double t5316;
  double t5342;
  double t5343;
  double t5348;
  double t5211;
  double t5402;
  double t5403;
  double t5389;
  double t5404;
  double t5411;
  double t5418;
  double t5426;
  double t5427;
  double t5454;
  double t5457;
  double t5465;
  double t5475;
  double t5501;
  double t5502;
  double t5506;
  double t5521;
  double t5548;
  double t5550;
  double t5551;
  double t5554;
  t489 = Cos(var1[3]);
  t288 = Cos(var1[5]);
  t418 = Sin(var1[4]);
  t391 = Sin(var1[3]);
  t512 = Sin(var1[5]);
  t663 = t489*t288*t418;
  t666 = t391*t512;
  t676 = t663 + t666;
  t470 = -1.*t288*t391*t418;
  t515 = t489*t512;
  t557 = t470 + t515;
  t735 = Cos(var1[7]);
  t727 = Cos(var1[6]);
  t753 = Sin(var1[7]);
  t800 = t735*t557;
  t805 = -1.*t727*t676*t753;
  t833 = t800 + t805;
  t745 = t727*t735*t676;
  t764 = t557*t753;
  t784 = t745 + t764;
  t843 = Cos(var1[8]);
  t844 = 0. + t843;
  t867 = Sin(var1[8]);
  t697 = Sin(var1[6]);
  t999 = -1.*t489*t288;
  t1005 = -1.*t391*t418*t512;
  t1013 = t999 + t1005;
  t1066 = -1.*t288*t391;
  t1067 = t489*t418*t512;
  t1080 = t1066 + t1067;
  t1083 = t735*t1013;
  t1093 = -1.*t727*t1080*t753;
  t1105 = t1083 + t1093;
  t1127 = t727*t735*t1080;
  t1133 = t1013*t753;
  t1141 = t1127 + t1133;
  t903 = -1.*t867;
  t911 = 0. + t903;
  t941 = 0. + t867;
  t1233 = Cos(var1[4]);
  t1276 = -1.*t1233*t735*t391;
  t1277 = -1.*t489*t1233*t727*t753;
  t1295 = t1276 + t1277;
  t1306 = t489*t1233*t727*t735;
  t1307 = -1.*t1233*t391*t753;
  t1314 = t1306 + t1307;
  t1456 = Cos(var1[16]);
  t1447 = Cos(var1[15]);
  t1413 = Sin(var1[16]);
  t1444 = t1413*t557;
  t1467 = t1447*t1456*t676;
  t1470 = t1444 + t1467;
  t1475 = t1456*t557;
  t1483 = -1.*t1447*t1413*t676;
  t1485 = t1475 + t1483;
  t1554 = Cos(var1[17]);
  t1555 = 0. + t1554;
  t1525 = Sin(var1[17]);
  t1402 = Sin(var1[15]);
  t1622 = 0. + t1525;
  t1689 = -1.*t1447*t1413*t1080;
  t1690 = t1456*t1013;
  t1694 = t1689 + t1690;
  t1726 = t1447*t1456*t1080;
  t1741 = t1413*t1013;
  t1743 = t1726 + t1741;
  t1532 = -1.*t1525;
  t1544 = 0. + t1532;
  t1902 = -1.*t1447*t489*t1233*t1413;
  t1905 = -1.*t1456*t1233*t391;
  t1906 = t1902 + t1905;
  t1942 = t1447*t1456*t489*t1233;
  t1947 = -1.*t1233*t1413*t391;
  t1952 = t1942 + t1947;
  t1392 = -0.1944*t557;
  t2073 = Cos(var1[13]);
  t2072 = Cos(var1[12]);
  t2048 = Sin(var1[13]);
  t2050 = t2048*t557;
  t2077 = t2072*t2073*t676;
  t2079 = t2050 + t2077;
  t2140 = t2073*t557;
  t2143 = -1.*t2072*t2048*t676;
  t2147 = t2140 + t2143;
  t2209 = Cos(var1[14]);
  t2214 = 0. + t2209;
  t2159 = Sin(var1[14]);
  t2025 = Sin(var1[12]);
  t1665 = -0.1944*t1013;
  t2236 = 0. + t2159;
  t2264 = -1.*t2072*t2048*t1080;
  t2268 = t2073*t1013;
  t2273 = t2264 + t2268;
  t2280 = t2072*t2073*t1080;
  t2287 = t2048*t1013;
  t2318 = t2280 + t2287;
  t2170 = -1.*t2159;
  t2175 = 0. + t2170;
  t1893 = 0.1944*t1233*t391;
  t2434 = -1.*t2072*t489*t1233*t2048;
  t2440 = -1.*t2073*t1233*t391;
  t2450 = t2434 + t2440;
  t2459 = t2072*t2073*t489*t1233;
  t2462 = -1.*t1233*t2048*t391;
  t2463 = t2459 + t2462;
  t2534 = t1233*t288*t727*t391;
  t2537 = 0. + t697;
  t2548 = -1.*t288*t418*t2537;
  t2552 = t2534 + t2548;
  t2570 = t489*t1233*t288*t735;
  t2578 = -1.*t2552*t753;
  t2581 = t2570 + t2578;
  t2554 = t735*t2552;
  t2556 = t489*t1233*t288*t753;
  t2557 = t2554 + t2556;
  t2501 = 0. + t727;
  t2647 = t1233*t727*t391*t512;
  t2650 = -1.*t418*t512*t2537;
  t2657 = t2647 + t2650;
  t2670 = t489*t1233*t735*t512;
  t2671 = -1.*t2657*t753;
  t2673 = t2670 + t2671;
  t2658 = t735*t2657;
  t2660 = t489*t1233*t512*t753;
  t2662 = t2658 + t2660;
  t2721 = -1.*t727*t391*t418;
  t2724 = -1.*t1233*t2537;
  t2726 = t2721 + t2724;
  t2735 = -1.*t489*t735*t418;
  t2736 = -1.*t2726*t753;
  t2737 = t2735 + t2736;
  t2727 = t735*t2726;
  t2731 = -1.*t489*t418*t753;
  t2733 = t2727 + t2731;
  t2808 = t1447*t1233*t288*t391;
  t2810 = -1.*t1402;
  t2813 = 0. + t2810;
  t2818 = -1.*t288*t2813*t418;
  t2828 = t2808 + t2818;
  t2804 = t489*t1233*t288*t1413;
  t2832 = t1456*t2828;
  t2844 = t2804 + t2832;
  t2862 = t1456*t489*t1233*t288;
  t2864 = -1.*t1413*t2828;
  t2868 = t2862 + t2864;
  t2796 = 0. + t1447;
  t2913 = t1447*t1233*t391*t512;
  t2917 = -1.*t2813*t418*t512;
  t2924 = t2913 + t2917;
  t2912 = t489*t1233*t1413*t512;
  t2925 = t1456*t2924;
  t2926 = t2912 + t2925;
  t2938 = t1456*t489*t1233*t512;
  t2941 = -1.*t1413*t2924;
  t2946 = t2938 + t2941;
  t3023 = -1.*t1233*t2813;
  t3025 = -1.*t1447*t391*t418;
  t3029 = t3023 + t3025;
  t3022 = -1.*t489*t1413*t418;
  t3030 = t1456*t3029;
  t3032 = t3022 + t3030;
  t3037 = -1.*t1456*t489*t418;
  t3042 = -1.*t1413*t3029;
  t3045 = t3037 + t3042;
  t2789 = -0.1944*t489*t1233*t288;
  t2497 = 0.0817*t288*t418;
  t3138 = t2072*t1233*t288*t391;
  t3142 = 0. + t2025;
  t3151 = -1.*t288*t3142*t418;
  t3157 = t3138 + t3151;
  t3133 = t489*t1233*t288*t2048;
  t3158 = t2073*t3157;
  t3170 = t3133 + t3158;
  t3172 = t2073*t489*t1233*t288;
  t3173 = -1.*t2048*t3157;
  t3182 = t3172 + t3173;
  t2894 = -0.1944*t489*t1233*t512;
  t2633 = 0.0817*t418*t512;
  t3099 = 0. + t2072;
  t3240 = t2072*t1233*t391*t512;
  t3243 = -1.*t3142*t418*t512;
  t3254 = t3240 + t3243;
  t3238 = t489*t1233*t2048*t512;
  t3258 = t2073*t3254;
  t3260 = t3238 + t3258;
  t3263 = t2073*t489*t1233*t512;
  t3268 = -1.*t2048*t3254;
  t3269 = t3263 + t3268;
  t2701 = 0.0817*t1233;
  t3008 = 0.1944*t489*t418;
  t3329 = -1.*t1233*t3142;
  t3332 = -1.*t2072*t391*t418;
  t3336 = t3329 + t3332;
  t3327 = -1.*t489*t2048*t418;
  t3345 = t2073*t3336;
  t3346 = t3327 + t3345;
  t3355 = -1.*t2073*t489*t418;
  t3356 = -1.*t2048*t3336;
  t3357 = t3355 + t3356;
  t3413 = t288*t391;
  t3420 = -1.*t489*t418*t512;
  t3421 = t3413 + t3420;
  t3436 = t727*t1013;
  t3439 = -1.*t1233*t512*t2537;
  t3446 = t3436 + t3439;
  t3470 = t735*t3421;
  t3475 = -1.*t3446*t753;
  t3477 = t3470 + t3475;
  t3454 = t735*t3446;
  t3460 = t3421*t753;
  t3463 = t3454 + t3460;
  t3521 = t288*t391*t418;
  t3524 = -1.*t489*t512;
  t3525 = t3521 + t3524;
  t3538 = t727*t3525;
  t3539 = t1233*t288*t2537;
  t3542 = t3538 + t3539;
  t3560 = t735*t676;
  t3566 = -1.*t3542*t753;
  t3572 = t3560 + t3566;
  t3552 = t735*t3542;
  t3555 = t676*t753;
  t3557 = t3552 + t3555;
  t3634 = -1.*t1233*t2813*t512;
  t3635 = t1447*t1013;
  t3637 = t3634 + t3635;
  t3633 = t1413*t3421;
  t3639 = t1456*t3637;
  t3640 = t3633 + t3639;
  t3643 = t1456*t3421;
  t3647 = -1.*t1413*t3637;
  t3649 = t3643 + t3647;
  t3722 = t1233*t288*t2813;
  t3727 = t1447*t3525;
  t3728 = t3722 + t3727;
  t3720 = t1413*t676;
  t3729 = t1456*t3728;
  t3730 = t3720 + t3729;
  t3734 = t1456*t676;
  t3736 = -1.*t1413*t3728;
  t3738 = t3734 + t3736;
  t3412 = 0.0817*t1233*t512;
  t3618 = -0.1944*t3421;
  t3803 = -1.*t1233*t3142*t512;
  t3804 = t2072*t1013;
  t3805 = t3803 + t3804;
  t3793 = t2048*t3421;
  t3806 = t2073*t3805;
  t3808 = t3793 + t3806;
  t3810 = t2073*t3421;
  t3811 = -1.*t2048*t3805;
  t3812 = t3810 + t3811;
  t3500 = -0.0817*t1233*t288;
  t3685 = -0.1944*t676;
  t3860 = t1233*t288*t3142;
  t3862 = t2072*t3525;
  t3863 = t3860 + t3862;
  t3859 = t2048*t676;
  t3865 = t2073*t3863;
  t3867 = t3859 + t3865;
  t3869 = t2073*t676;
  t3871 = -1.*t2048*t3863;
  t3875 = t3869 + t3871;
  t3528 = -1.*t3525*t697;
  t3911 = t1233*t288*t727;
  t3912 = t3911 + t3528;
  t3961 = t489*t288;
  t3963 = t391*t418*t512;
  t3968 = t3961 + t3963;
  t3991 = t1233*t727*t512;
  t3994 = -1.*t3968*t697;
  t3999 = t3991 + t3994;
  t4034 = -1.*t727*t418;
  t4036 = -1.*t1233*t391*t697;
  t4037 = t4034 + t4036;
  t4080 = 0. + t663 + t666;
  t4076 = 0. + t3538 + t3539;
  t4079 = -1.*t735*t4076;
  t4081 = -1.*t4080*t753;
  t4085 = t4079 + t4081;
  t4088 = t735*t4080;
  t4095 = -1.*t4076*t753;
  t4099 = t4088 + t4095;
  t4166 = 0. + t1066 + t1067;
  t4144 = t727*t3968;
  t4153 = t1233*t512*t2537;
  t4154 = 0. + t4144 + t4153;
  t4155 = -1.*t735*t4154;
  t4169 = -1.*t4166*t753;
  t4171 = t4155 + t4169;
  t4181 = t735*t4166;
  t4182 = -1.*t4154*t753;
  t4184 = t4181 + t4182;
  t4244 = t489*t1233;
  t4246 = 0. + t4244;
  t4218 = t1233*t727*t391;
  t4220 = -1.*t418*t2537;
  t4230 = 0. + t4218 + t4220;
  t4240 = -1.*t735*t4230;
  t4249 = -1.*t4246*t753;
  t4250 = t4240 + t4249;
  t4256 = t4246*t735;
  t4257 = -1.*t4230*t753;
  t4259 = t4256 + t4257;
  t4322 = t735*t4076;
  t4325 = t4080*t753;
  t4329 = 0. + t4322 + t4325;
  t4314 = 0. + t4088 + t4095;
  t4426 = t735*t4154;
  t4428 = t4166*t753;
  t4429 = 0. + t4426 + t4428;
  t4422 = 0. + t4181 + t4182;
  t4463 = t735*t4230;
  t4468 = t4246*t753;
  t4470 = 0. + t4463 + t4468;
  t4457 = 0. + t4256 + t4257;
  t3854 = -1.*t2025*t3525;
  t4506 = t2072*t1233*t288;
  t4507 = t4506 + t3854;
  t4569 = t2072*t1233*t512;
  t4574 = -1.*t2025*t3968;
  t4577 = t4569 + t4574;
  t4622 = -1.*t1233*t2025*t391;
  t4624 = -1.*t2072*t418;
  t4630 = t4622 + t4624;
  t4713 = 0. + t3860 + t3862;
  t4711 = -1.*t2048*t4080;
  t4714 = -1.*t2073*t4713;
  t4717 = t4711 + t4714;
  t4721 = t2073*t4080;
  t4722 = -1.*t2048*t4713;
  t4723 = t4721 + t4722;
  t4781 = t1233*t3142*t512;
  t4782 = t2072*t3968;
  t4786 = 0. + t4781 + t4782;
  t4780 = -1.*t2048*t4166;
  t4787 = -1.*t2073*t4786;
  t4788 = t4780 + t4787;
  t4797 = t2073*t4166;
  t4807 = -1.*t2048*t4786;
  t4808 = t4797 + t4807;
  t4841 = t2072*t1233*t391;
  t4846 = -1.*t3142*t418;
  t4847 = 0. + t4841 + t4846;
  t4840 = -1.*t4246*t2048;
  t4848 = -1.*t2073*t4847;
  t4850 = t4840 + t4848;
  t4853 = t2073*t4246;
  t4858 = -1.*t2048*t4847;
  t4859 = t4853 + t4858;
  t4889 = t2048*t4080;
  t4895 = t2073*t4713;
  t4904 = 0. + t4889 + t4895;
  t4906 = 0. + t4721 + t4722;
  t4928 = t2048*t4166;
  t4936 = t2073*t4786;
  t4942 = 0. + t4928 + t4936;
  t4947 = 0. + t4797 + t4807;
  t4978 = t4246*t2048;
  t4979 = t2073*t4847;
  t4981 = 0. + t4978 + t4979;
  t4991 = 0. + t4853 + t4858;
  t5036 = -1.*t1447*t1233*t288;
  t5045 = -1.*t1402*t3525;
  t5048 = t5036 + t5045;
  t5123 = -1.*t1447*t1233*t512;
  t5134 = -1.*t1402*t3968;
  t5143 = t5123 + t5134;
  t5188 = -1.*t1233*t1402*t391;
  t5198 = t1447*t418;
  t5205 = t5188 + t5198;
  t5246 = 0. + t3722 + t3727;
  t5244 = -1.*t1413*t4080;
  t5249 = -1.*t1456*t5246;
  t5250 = t5244 + t5249;
  t5258 = t1456*t4080;
  t5264 = -1.*t1413*t5246;
  t5265 = t5258 + t5264;
  t5101 = t1447*t3968;
  t5312 = t1233*t2813*t512;
  t5313 = 0. + t5312 + t5101;
  t5309 = -1.*t1413*t4166;
  t5315 = -1.*t1456*t5313;
  t5316 = t5309 + t5315;
  t5342 = t1456*t4166;
  t5343 = -1.*t1413*t5313;
  t5348 = t5342 + t5343;
  t5211 = t1447*t1233*t391;
  t5402 = -1.*t2813*t418;
  t5403 = 0. + t5211 + t5402;
  t5389 = -1.*t4246*t1413;
  t5404 = -1.*t1456*t5403;
  t5411 = t5389 + t5404;
  t5418 = t1456*t4246;
  t5426 = -1.*t1413*t5403;
  t5427 = t5418 + t5426;
  t5454 = t1413*t4080;
  t5457 = t1456*t5246;
  t5465 = 0. + t5454 + t5457;
  t5475 = 0. + t5258 + t5264;
  t5501 = t1413*t4166;
  t5502 = t1456*t5313;
  t5506 = 0. + t5501 + t5502;
  t5521 = 0. + t5342 + t5343;
  t5548 = t4246*t1413;
  t5550 = t1456*t5403;
  t5551 = 0. + t5548 + t5550;
  t5554 = 0. + t5418 + t5426;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=1.;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=1.;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=1.;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=1.;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=1.;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=1.;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=1.;
  p_output1[27]=0.2429*t557 + 0.0329*t676*t697 - 0.2083*t784 - 0.1422*t833 - 0.02*(t833*t844 + t784*t911) - 0.16*(t784*t844 + t833*t941);
  p_output1[28]=0.2429*t1013 - 0.1422*t1105 - 0.2083*t1141 + 0.0329*t1080*t697 - 0.02*(t1105*t844 + t1141*t911) - 0.16*(t1141*t844 + t1105*t941);
  p_output1[29]=-0.1422*t1295 - 0.2083*t1314 - 0.2429*t1233*t391 + 0.0329*t1233*t489*t697 - 0.02*(t1295*t844 + t1314*t911) - 0.16*(t1314*t844 + t1295*t941);
  p_output1[30]=t1392 - 0.2083*t1470 - 0.1422*t1485 - 0.02*(t1470*t1544 + t1485*t1555) - 0.16*(t1470*t1555 + t1485*t1622) + 0.0329*t1402*t676;
  p_output1[31]=0.0329*t1080*t1402 + t1665 - 0.1422*t1694 - 0.2083*t1743 - 0.02*(t1555*t1694 + t1544*t1743) - 0.16*(t1622*t1694 + t1555*t1743);
  p_output1[32]=t1893 - 0.1422*t1906 - 0.2083*t1952 - 0.02*(t1555*t1906 + t1544*t1952) - 0.16*(t1622*t1906 + t1555*t1952) + 0.0329*t1233*t1402*t489;
  p_output1[33]=t1392 - 0.2083*t2079 - 0.1422*t2147 - 0.02*(t2079*t2175 + t2147*t2214) - 0.16*(t2079*t2214 + t2147*t2236) + 0.0329*t2025*t676;
  p_output1[34]=t1665 + 0.0329*t1080*t2025 - 0.1422*t2273 - 0.2083*t2318 - 0.02*(t2214*t2273 + t2175*t2318) - 0.16*(t2236*t2273 + t2214*t2318);
  p_output1[35]=t1893 - 0.1422*t2450 - 0.2083*t2463 - 0.02*(t2214*t2450 + t2175*t2463) - 0.16*(t2236*t2450 + t2214*t2463) + 0.0329*t1233*t2025*t489;
  p_output1[36]=t2497 - 0.2083*t2557 - 0.1422*t2581 + 0.2429*t1233*t288*t489 - 0.0329*(-1.*t2501*t288*t418 - 1.*t1233*t288*t391*t697) - 0.02*(t2581*t844 + t2557*t911) - 0.16*(t2557*t844 + t2581*t941);
  p_output1[37]=t2633 - 0.2083*t2662 - 0.1422*t2673 + 0.2429*t1233*t489*t512 - 0.0329*(-1.*t2501*t418*t512 - 1.*t1233*t391*t512*t697) - 0.02*(t2673*t844 + t2662*t911) - 0.16*(t2662*t844 + t2673*t941);
  p_output1[38]=t2701 - 0.2083*t2733 - 0.1422*t2737 - 0.2429*t418*t489 - 0.0329*(-1.*t1233*t2501 + t391*t418*t697) - 0.02*(t2737*t844 + t2733*t911) - 0.16*(t2733*t844 + t2737*t941);
  p_output1[39]=t2789 - 0.2083*t2844 - 0.1422*t2868 - 0.02*(t1544*t2844 + t1555*t2868) - 0.16*(t1555*t2844 + t1622*t2868) - 0.0817*t288*t418 + 0.0329*(t1233*t1402*t288*t391 - 1.*t2796*t288*t418);
  p_output1[40]=t2894 - 0.2083*t2926 - 0.1422*t2946 - 0.02*(t1544*t2926 + t1555*t2946) - 0.16*(t1555*t2926 + t1622*t2946) - 0.0817*t418*t512 + 0.0329*(t1233*t1402*t391*t512 - 1.*t2796*t418*t512);
  p_output1[41]=-0.0817*t1233 + t3008 - 0.2083*t3032 - 0.1422*t3045 - 0.02*(t1544*t3032 + t1555*t3045) - 0.16*(t1555*t3032 + t1622*t3045) + 0.0329*(-1.*t1233*t2796 - 1.*t1402*t391*t418);
  p_output1[42]=t2497 + t2789 - 0.2083*t3170 - 0.1422*t3182 - 0.02*(t2175*t3170 + t2214*t3182) - 0.16*(t2214*t3170 + t2236*t3182) - 0.0329*(-1.*t1233*t2025*t288*t391 - 1.*t288*t3099*t418);
  p_output1[43]=t2633 + t2894 - 0.2083*t3260 - 0.1422*t3269 - 0.02*(t2175*t3260 + t2214*t3269) - 0.16*(t2214*t3260 + t2236*t3269) - 0.0329*(-1.*t1233*t2025*t391*t512 - 1.*t3099*t418*t512);
  p_output1[44]=t2701 + t3008 - 0.2083*t3346 - 0.1422*t3357 - 0.02*(t2175*t3346 + t2214*t3357) - 0.16*(t2214*t3346 + t2236*t3357) - 0.0329*(-1.*t1233*t3099 + t2025*t391*t418);
  p_output1[45]=t3412 + 0.2429*t3421 - 0.2083*t3463 - 0.1422*t3477 - 0.0329*(-1.*t1233*t2501*t512 - 1.*t1013*t697) - 0.02*(t3477*t844 + t3463*t911) - 0.16*(t3463*t844 + t3477*t941);
  p_output1[46]=t3500 - 0.0329*(t1233*t2501*t288 + t3528) - 0.2083*t3557 - 0.1422*t3572 + 0.2429*t676 - 0.02*(t3572*t844 + t3557*t911) - 0.16*(t3557*t844 + t3572*t941);
  p_output1[47]=0;
  p_output1[48]=t3618 - 0.2083*t3640 - 0.1422*t3649 - 0.02*(t1544*t3640 + t1555*t3649) - 0.16*(t1555*t3640 + t1622*t3649) - 0.0817*t1233*t512 + 0.0329*(t1013*t1402 - 1.*t1233*t2796*t512);
  p_output1[49]=0.0817*t1233*t288 + 0.0329*(t1233*t2796*t288 + t1402*t3525) + t3685 - 0.2083*t3730 - 0.1422*t3738 - 0.02*(t1544*t3730 + t1555*t3738) - 0.16*(t1555*t3730 + t1622*t3738);
  p_output1[50]=0;
  p_output1[51]=t3412 + t3618 - 0.2083*t3808 - 0.1422*t3812 - 0.02*(t2175*t3808 + t2214*t3812) - 0.16*(t2214*t3808 + t2236*t3812) - 0.0329*(-1.*t1013*t2025 - 1.*t1233*t3099*t512);
  p_output1[52]=t3500 + t3685 - 0.0329*(t1233*t288*t3099 + t3854) - 0.2083*t3867 - 0.1422*t3875 - 0.02*(t2175*t3867 + t2214*t3875) - 0.16*(t2214*t3867 + t2236*t3875);
  p_output1[53]=0;
  p_output1[54]=-0.0329*(-1.*t1233*t288*t697 - 1.*t3525*t727) - 0.2083*t3912*t735 + 0.1422*t3912*t753 - 0.02*(-1.*t3912*t753*t844 + t3912*t735*t911) - 0.16*(t3912*t735*t844 - 1.*t3912*t753*t941);
  p_output1[55]=-0.0329*(-1.*t1233*t512*t697 - 1.*t3968*t727) - 0.2083*t3999*t735 + 0.1422*t3999*t753 - 0.02*(-1.*t3999*t753*t844 + t3999*t735*t911) - 0.16*(t3999*t735*t844 - 1.*t3999*t753*t941);
  p_output1[56]=-0.0329*(t418*t697 - 1.*t1233*t391*t727) - 0.2083*t4037*t735 + 0.1422*t4037*t753 - 0.02*(-1.*t4037*t753*t844 + t4037*t735*t911) - 0.16*(t4037*t735*t844 - 1.*t4037*t753*t941);
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=-0.1422*t4085 - 0.2083*t4099 - 0.02*(t4085*t844 + t4099*t911) - 0.16*(t4099*t844 + t4085*t941);
  p_output1[64]=-0.1422*t4171 - 0.2083*t4184 - 0.02*(t4171*t844 + t4184*t911) - 0.16*(t4184*t844 + t4171*t941);
  p_output1[65]=-0.1422*t4250 - 0.2083*t4259 - 0.02*(t4250*t844 + t4259*t911) - 0.16*(t4259*t844 + t4250*t941);
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=-0.02*(-1.*t4329*t843 - 1.*t4314*t867) - 0.16*(t4314*t843 - 1.*t4329*t867);
  p_output1[73]=-0.02*(-1.*t4429*t843 - 1.*t4422*t867) - 0.16*(t4422*t843 - 1.*t4429*t867);
  p_output1[74]=-0.02*(-1.*t4470*t843 - 1.*t4457*t867) - 0.16*(t4457*t843 - 1.*t4470*t867);
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=-0.0329*(-1.*t1233*t2025*t288 - 1.*t2072*t3525) + 0.1422*t2048*t4507 - 0.2083*t2073*t4507 - 0.02*(t2073*t2175*t4507 - 1.*t2048*t2214*t4507) - 0.16*(t2073*t2214*t4507 - 1.*t2048*t2236*t4507);
  p_output1[115]=0.1422*t2048*t4577 - 0.2083*t2073*t4577 - 0.02*(t2073*t2175*t4577 - 1.*t2048*t2214*t4577) - 0.16*(t2073*t2214*t4577 - 1.*t2048*t2236*t4577) - 0.0329*(-1.*t2072*t3968 - 1.*t1233*t2025*t512);
  p_output1[116]=-0.0329*(-1.*t1233*t2072*t391 + t2025*t418) + 0.1422*t2048*t4630 - 0.2083*t2073*t4630 - 0.02*(t2073*t2175*t4630 - 1.*t2048*t2214*t4630) - 0.16*(t2073*t2214*t4630 - 1.*t2048*t2236*t4630);
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=-0.1422*t4717 - 0.2083*t4723 - 0.02*(t2214*t4717 + t2175*t4723) - 0.16*(t2236*t4717 + t2214*t4723);
  p_output1[124]=-0.1422*t4788 - 0.2083*t4808 - 0.02*(t2214*t4788 + t2175*t4808) - 0.16*(t2236*t4788 + t2214*t4808);
  p_output1[125]=-0.1422*t4850 - 0.2083*t4859 - 0.02*(t2214*t4850 + t2175*t4859) - 0.16*(t2236*t4850 + t2214*t4859);
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=-0.02*(-1.*t2209*t4904 - 1.*t2159*t4906) - 0.16*(-1.*t2159*t4904 + t2209*t4906);
  p_output1[133]=-0.02*(-1.*t2209*t4942 - 1.*t2159*t4947) - 0.16*(-1.*t2159*t4942 + t2209*t4947);
  p_output1[134]=-0.02*(-1.*t2209*t4981 - 1.*t2159*t4991) - 0.16*(-1.*t2159*t4981 + t2209*t4991);
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0.0329*(-1.*t1233*t1402*t288 + t3727) + 0.1422*t1413*t5048 - 0.2083*t1456*t5048 - 0.02*(t1456*t1544*t5048 - 1.*t1413*t1555*t5048) - 0.16*(t1456*t1555*t5048 - 1.*t1413*t1622*t5048);
  p_output1[139]=0.0329*(t5101 - 1.*t1233*t1402*t512) + 0.1422*t1413*t5143 - 0.2083*t1456*t5143 - 0.02*(t1456*t1544*t5143 - 1.*t1413*t1555*t5143) - 0.16*(t1456*t1555*t5143 - 1.*t1413*t1622*t5143);
  p_output1[140]=0.1422*t1413*t5205 - 0.2083*t1456*t5205 - 0.02*(t1456*t1544*t5205 - 1.*t1413*t1555*t5205) - 0.16*(t1456*t1555*t5205 - 1.*t1413*t1622*t5205) + 0.0329*(t1402*t418 + t5211);
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=-0.1422*t5250 - 0.2083*t5265 - 0.02*(t1555*t5250 + t1544*t5265) - 0.16*(t1622*t5250 + t1555*t5265);
  p_output1[148]=-0.1422*t5316 - 0.2083*t5348 - 0.02*(t1555*t5316 + t1544*t5348) - 0.16*(t1622*t5316 + t1555*t5348);
  p_output1[149]=-0.1422*t5411 - 0.2083*t5427 - 0.02*(t1555*t5411 + t1544*t5427) - 0.16*(t1622*t5411 + t1555*t5427);
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=-0.02*(-1.*t1554*t5465 - 1.*t1525*t5475) - 0.16*(-1.*t1525*t5465 + t1554*t5475);
  p_output1[157]=-0.02*(-1.*t1554*t5506 - 1.*t1525*t5521) - 0.16*(-1.*t1525*t5506 + t1554*t5521);
  p_output1[158]=-0.02*(-1.*t1554*t5551 - 1.*t1525*t5554) - 0.16*(-1.*t1525*t5551 + t1554*t5554);
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_1_func.hh"

namespace SymFunction
{

void j_1_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
