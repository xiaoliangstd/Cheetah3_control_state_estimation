/*
 * Automatically Generated from Mathematica.
 * Mon 29 Jul 2019 15:07:59 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t421;
  double t260;
  double t385;
  double t383;
  double t436;
  double t415;
  double t439;
  double t468;
  double t523;
  double t550;
  double t557;
  double t739;
  double t685;
  double t666;
  double t680;
  double t764;
  double t784;
  double t790;
  double t800;
  double t834;
  double t957;
  double t959;
  double t893;
  double t515;
  double t1083;
  double t1107;
  double t1133;
  double t1146;
  double t1151;
  double t1152;
  double t984;
  double t1168;
  double t1174;
  double t1179;
  double t1189;
  double t1200;
  double t1211;
  double t924;
  double t947;
  double t1319;
  double t1343;
  double t1348;
  double t1362;
  double t1367;
  double t1370;
  double t1372;
  double t1552;
  double t1508;
  double t1485;
  double t1486;
  double t1560;
  double t1565;
  double t1610;
  double t1613;
  double t1624;
  double t1694;
  double t1695;
  double t1640;
  double t1467;
  double t1734;
  double t1785;
  double t1790;
  double t1797;
  double t1804;
  double t1807;
  double t1814;
  double t1665;
  double t1683;
  double t1954;
  double t1959;
  double t1967;
  double t1970;
  double t2001;
  double t2023;
  double t1444;
  double t2155;
  double t2154;
  double t2147;
  double t2148;
  double t2157;
  double t2174;
  double t2215;
  double t2221;
  double t2224;
  double t2263;
  double t2275;
  double t2232;
  double t2140;
  double t1784;
  double t2334;
  double t2378;
  double t2384;
  double t2389;
  double t2398;
  double t2411;
  double t2413;
  double t2240;
  double t2247;
  double t1953;
  double t2463;
  double t2468;
  double t2470;
  double t2477;
  double t2479;
  double t2489;
  double t2590;
  double t2595;
  double t2606;
  double t2607;
  double t2612;
  double t2582;
  double t2619;
  double t2626;
  double t2637;
  double t2641;
  double t2643;
  double t2557;
  double t2701;
  double t2702;
  double t2706;
  double t2700;
  double t2710;
  double t2712;
  double t2727;
  double t2728;
  double t2733;
  double t2814;
  double t2815;
  double t2827;
  double t2801;
  double t2832;
  double t2844;
  double t2848;
  double t2862;
  double t2868;
  double t2554;
  double t2925;
  double t2927;
  double t2938;
  double t2946;
  double t2949;
  double t2913;
  double t2955;
  double t2966;
  double t2980;
  double t2988;
  double t2992;
  double t2677;
  double t2896;
  double t3060;
  double t3068;
  double t3069;
  double t3057;
  double t3071;
  double t3074;
  double t3091;
  double t3093;
  double t3104;
  double t2773;
  double t3220;
  double t3221;
  double t3224;
  double t3219;
  double t3231;
  double t3236;
  double t3238;
  double t3240;
  double t3258;
  double t2892;
  double t3346;
  double t3348;
  double t3357;
  double t3358;
  double t3345;
  double t3362;
  double t3363;
  double t3380;
  double t3383;
  double t3394;
  double t3030;
  double t3317;
  double t3479;
  double t3480;
  double t3486;
  double t3478;
  double t3489;
  double t3496;
  double t3512;
  double t3521;
  double t3530;
  double t3189;
  double t3596;
  double t3597;
  double t3598;
  double t3594;
  double t3608;
  double t3616;
  double t3619;
  double t3630;
  double t3632;
  double t3661;
  double t3665;
  double t3668;
  double t3720;
  double t3722;
  double t3729;
  double t3719;
  double t3730;
  double t3734;
  double t3739;
  double t3744;
  double t3745;
  double t3788;
  double t3789;
  double t3792;
  double t3812;
  double t3815;
  double t3820;
  double t3810;
  double t3823;
  double t3824;
  double t3830;
  double t3832;
  double t3836;
  double t3657;
  double t3886;
  double t3892;
  double t3895;
  double t3885;
  double t3896;
  double t3899;
  double t3901;
  double t3905;
  double t3908;
  double t3785;
  double t3978;
  double t3983;
  double t3986;
  double t3976;
  double t3991;
  double t3996;
  double t4007;
  double t4009;
  double t4010;
  double t3869;
  double t4058;
  double t4063;
  double t4066;
  double t4057;
  double t4068;
  double t4069;
  double t4086;
  double t4088;
  double t4098;
  double t3957;
  double t4190;
  double t4191;
  double t4194;
  double t4181;
  double t4196;
  double t4197;
  double t4202;
  double t4214;
  double t4215;
  double t4308;
  double t4311;
  double t4312;
  double t4397;
  double t4408;
  double t4410;
  double t4428;
  double t4435;
  double t4440;
  double t4486;
  double t4491;
  double t4493;
  double t4588;
  double t4600;
  double t4599;
  double t4604;
  double t4608;
  double t4611;
  double t4615;
  double t4616;
  double t4421;
  double t4683;
  double t4694;
  double t4697;
  double t4687;
  double t4700;
  double t4717;
  double t4719;
  double t4721;
  double t4723;
  double t4506;
  double t4782;
  double t4788;
  double t4794;
  double t4797;
  double t4791;
  double t4805;
  double t4808;
  double t4812;
  double t4820;
  double t4822;
  double t4851;
  double t4853;
  double t4859;
  double t4867;
  double t4909;
  double t4910;
  double t4911;
  double t4915;
  double t4953;
  double t4956;
  double t4957;
  double t4978;
  double t4153;
  double t5054;
  double t5056;
  double t5135;
  double t5144;
  double t5147;
  double t5218;
  double t5222;
  double t5223;
  double t5280;
  double t5279;
  double t5282;
  double t5291;
  double t5306;
  double t5308;
  double t5316;
  double t5387;
  double t5391;
  double t5415;
  double t5376;
  double t5418;
  double t5427;
  double t5437;
  double t5441;
  double t5442;
  double t5480;
  double t5481;
  double t5485;
  double t5478;
  double t5490;
  double t5494;
  double t5501;
  double t5517;
  double t5524;
  double t5560;
  double t5580;
  double t5582;
  double t5588;
  double t5611;
  double t5615;
  double t5616;
  double t5637;
  double t5679;
  double t5680;
  double t5681;
  double t5688;
  double t5724;
  double t5725;
  double t5727;
  double t5784;
  double t5785;
  double t5787;
  double t5848;
  double t5849;
  double t5853;
  double t5912;
  double t5910;
  double t5913;
  double t5916;
  double t5919;
  double t5924;
  double t5928;
  double t5780;
  double t5963;
  double t5979;
  double t5959;
  double t5980;
  double t5987;
  double t5990;
  double t5993;
  double t5999;
  double t5864;
  double t6048;
  double t6050;
  double t6047;
  double t6051;
  double t6063;
  double t6067;
  double t6071;
  double t6072;
  double t6105;
  double t6109;
  double t6114;
  double t6124;
  double t6163;
  double t6164;
  double t6187;
  double t6190;
  double t6217;
  double t6219;
  double t6220;
  double t6227;
  t421 = Cos(var1[3]);
  t260 = Cos(var1[5]);
  t385 = Sin(var1[4]);
  t383 = Sin(var1[3]);
  t436 = Sin(var1[5]);
  t415 = -1.*t260*t383*t385;
  t439 = t421*t436;
  t468 = t415 + t439;
  t523 = t421*t260*t385;
  t550 = t383*t436;
  t557 = t523 + t550;
  t739 = Cos(var1[10]);
  t685 = Cos(var1[9]);
  t666 = Sin(var1[10]);
  t680 = t666*t468;
  t764 = t685*t739*t557;
  t784 = t680 + t764;
  t790 = t739*t468;
  t800 = -1.*t685*t666*t557;
  t834 = t790 + t800;
  t957 = Cos(var1[11]);
  t959 = 0. + t957;
  t893 = Sin(var1[11]);
  t515 = Sin(var1[9]);
  t1083 = -1.*t260*t383;
  t1107 = t421*t385*t436;
  t1133 = t1083 + t1107;
  t1146 = -1.*t421*t260;
  t1151 = -1.*t383*t385*t436;
  t1152 = t1146 + t1151;
  t984 = 0. + t893;
  t1168 = -1.*t685*t666*t1133;
  t1174 = t739*t1152;
  t1179 = t1168 + t1174;
  t1189 = t685*t739*t1133;
  t1200 = t666*t1152;
  t1211 = t1189 + t1200;
  t924 = -1.*t893;
  t947 = 0. + t924;
  t1319 = Cos(var1[4]);
  t1343 = -1.*t685*t421*t1319*t666;
  t1348 = -1.*t739*t1319*t383;
  t1362 = t1343 + t1348;
  t1367 = t685*t739*t421*t1319;
  t1370 = -1.*t1319*t666*t383;
  t1372 = t1367 + t1370;
  t1552 = Cos(var1[16]);
  t1508 = Cos(var1[15]);
  t1485 = Sin(var1[16]);
  t1486 = t1485*t468;
  t1560 = t1508*t1552*t557;
  t1565 = t1486 + t1560;
  t1610 = t1552*t468;
  t1613 = -1.*t1508*t1485*t557;
  t1624 = t1610 + t1613;
  t1694 = Cos(var1[17]);
  t1695 = 0. + t1694;
  t1640 = Sin(var1[17]);
  t1467 = Sin(var1[15]);
  t1734 = 0. + t1640;
  t1785 = -1.*t1508*t1485*t1133;
  t1790 = t1552*t1152;
  t1797 = t1785 + t1790;
  t1804 = t1508*t1552*t1133;
  t1807 = t1485*t1152;
  t1814 = t1804 + t1807;
  t1665 = -1.*t1640;
  t1683 = 0. + t1665;
  t1954 = -1.*t1508*t421*t1319*t1485;
  t1959 = -1.*t1552*t1319*t383;
  t1967 = t1954 + t1959;
  t1970 = t1508*t1552*t421*t1319;
  t2001 = -1.*t1319*t1485*t383;
  t2023 = t1970 + t2001;
  t1444 = -0.1944*t468;
  t2155 = Cos(var1[13]);
  t2154 = Cos(var1[12]);
  t2147 = Sin(var1[13]);
  t2148 = t2147*t468;
  t2157 = t2154*t2155*t557;
  t2174 = t2148 + t2157;
  t2215 = t2155*t468;
  t2221 = -1.*t2154*t2147*t557;
  t2224 = t2215 + t2221;
  t2263 = Cos(var1[14]);
  t2275 = 0. + t2263;
  t2232 = Sin(var1[14]);
  t2140 = Sin(var1[12]);
  t1784 = -0.1944*t1152;
  t2334 = 0. + t2232;
  t2378 = -1.*t2154*t2147*t1133;
  t2384 = t2155*t1152;
  t2389 = t2378 + t2384;
  t2398 = t2154*t2155*t1133;
  t2411 = t2147*t1152;
  t2413 = t2398 + t2411;
  t2240 = -1.*t2232;
  t2247 = 0. + t2240;
  t1953 = 0.1944*t1319*t383;
  t2463 = -1.*t2154*t421*t1319*t2147;
  t2468 = -1.*t2155*t1319*t383;
  t2470 = t2463 + t2468;
  t2477 = t2154*t2155*t421*t1319;
  t2479 = -1.*t1319*t2147*t383;
  t2489 = t2477 + t2479;
  t2590 = t685*t1319*t260*t383;
  t2595 = -1.*t515;
  t2606 = 0. + t2595;
  t2607 = -1.*t260*t2606*t385;
  t2612 = t2590 + t2607;
  t2582 = t421*t1319*t260*t666;
  t2619 = t739*t2612;
  t2626 = t2582 + t2619;
  t2637 = t739*t421*t1319*t260;
  t2641 = -1.*t666*t2612;
  t2643 = t2637 + t2641;
  t2557 = 0. + t685;
  t2701 = t685*t1319*t383*t436;
  t2702 = -1.*t2606*t385*t436;
  t2706 = t2701 + t2702;
  t2700 = t421*t1319*t666*t436;
  t2710 = t739*t2706;
  t2712 = t2700 + t2710;
  t2727 = t739*t421*t1319*t436;
  t2728 = -1.*t666*t2706;
  t2733 = t2727 + t2728;
  t2814 = -1.*t1319*t2606;
  t2815 = -1.*t685*t383*t385;
  t2827 = t2814 + t2815;
  t2801 = -1.*t421*t666*t385;
  t2832 = t739*t2827;
  t2844 = t2801 + t2832;
  t2848 = -1.*t739*t421*t385;
  t2862 = -1.*t666*t2827;
  t2868 = t2848 + t2862;
  t2554 = -0.0817*t260*t385;
  t2925 = t1508*t1319*t260*t383;
  t2927 = -1.*t1467;
  t2938 = 0. + t2927;
  t2946 = -1.*t260*t2938*t385;
  t2949 = t2925 + t2946;
  t2913 = t421*t1319*t260*t1485;
  t2955 = t1552*t2949;
  t2966 = t2913 + t2955;
  t2980 = t1552*t421*t1319*t260;
  t2988 = -1.*t1485*t2949;
  t2992 = t2980 + t2988;
  t2677 = -0.0817*t385*t436;
  t2896 = 0. + t1508;
  t3060 = t1508*t1319*t383*t436;
  t3068 = -1.*t2938*t385*t436;
  t3069 = t3060 + t3068;
  t3057 = t421*t1319*t1485*t436;
  t3071 = t1552*t3069;
  t3074 = t3057 + t3071;
  t3091 = t1552*t421*t1319*t436;
  t3093 = -1.*t1485*t3069;
  t3104 = t3091 + t3093;
  t2773 = -0.0817*t1319;
  t3220 = -1.*t1319*t2938;
  t3221 = -1.*t1508*t383*t385;
  t3224 = t3220 + t3221;
  t3219 = -1.*t421*t1485*t385;
  t3231 = t1552*t3224;
  t3236 = t3219 + t3231;
  t3238 = -1.*t1552*t421*t385;
  t3240 = -1.*t1485*t3224;
  t3258 = t3238 + t3240;
  t2892 = -0.1944*t421*t1319*t260;
  t3346 = t2154*t1319*t260*t383;
  t3348 = 0. + t2140;
  t3357 = -1.*t260*t3348*t385;
  t3358 = t3346 + t3357;
  t3345 = t421*t1319*t260*t2147;
  t3362 = t2155*t3358;
  t3363 = t3345 + t3362;
  t3380 = t2155*t421*t1319*t260;
  t3383 = -1.*t2147*t3358;
  t3394 = t3380 + t3383;
  t3030 = -0.1944*t421*t1319*t436;
  t3317 = 0. + t2154;
  t3479 = t2154*t1319*t383*t436;
  t3480 = -1.*t3348*t385*t436;
  t3486 = t3479 + t3480;
  t3478 = t421*t1319*t2147*t436;
  t3489 = t2155*t3486;
  t3496 = t3478 + t3489;
  t3512 = t2155*t421*t1319*t436;
  t3521 = -1.*t2147*t3486;
  t3530 = t3512 + t3521;
  t3189 = 0.1944*t421*t385;
  t3596 = -1.*t1319*t3348;
  t3597 = -1.*t2154*t383*t385;
  t3598 = t3596 + t3597;
  t3594 = -1.*t421*t2147*t385;
  t3608 = t2155*t3598;
  t3616 = t3594 + t3608;
  t3619 = -1.*t2155*t421*t385;
  t3630 = -1.*t2147*t3598;
  t3632 = t3619 + t3630;
  t3661 = t260*t383;
  t3665 = -1.*t421*t385*t436;
  t3668 = t3661 + t3665;
  t3720 = -1.*t1319*t2606*t436;
  t3722 = t685*t1152;
  t3729 = t3720 + t3722;
  t3719 = t666*t3668;
  t3730 = t739*t3729;
  t3734 = t3719 + t3730;
  t3739 = t739*t3668;
  t3744 = -1.*t666*t3729;
  t3745 = t3739 + t3744;
  t3788 = t260*t383*t385;
  t3789 = -1.*t421*t436;
  t3792 = t3788 + t3789;
  t3812 = t1319*t260*t2606;
  t3815 = t685*t3792;
  t3820 = t3812 + t3815;
  t3810 = t666*t557;
  t3823 = t739*t3820;
  t3824 = t3810 + t3823;
  t3830 = t739*t557;
  t3832 = -1.*t666*t3820;
  t3836 = t3830 + t3832;
  t3657 = -0.0817*t1319*t436;
  t3886 = -1.*t1319*t2938*t436;
  t3892 = t1508*t1152;
  t3895 = t3886 + t3892;
  t3885 = t1485*t3668;
  t3896 = t1552*t3895;
  t3899 = t3885 + t3896;
  t3901 = t1552*t3668;
  t3905 = -1.*t1485*t3895;
  t3908 = t3901 + t3905;
  t3785 = 0.0817*t1319*t260;
  t3978 = t1319*t260*t2938;
  t3983 = t1508*t3792;
  t3986 = t3978 + t3983;
  t3976 = t1485*t557;
  t3991 = t1552*t3986;
  t3996 = t3976 + t3991;
  t4007 = t1552*t557;
  t4009 = -1.*t1485*t3986;
  t4010 = t4007 + t4009;
  t3869 = -0.1944*t3668;
  t4058 = -1.*t1319*t3348*t436;
  t4063 = t2154*t1152;
  t4066 = t4058 + t4063;
  t4057 = t2147*t3668;
  t4068 = t2155*t4066;
  t4069 = t4057 + t4068;
  t4086 = t2155*t3668;
  t4088 = -1.*t2147*t4066;
  t4098 = t4086 + t4088;
  t3957 = -0.1944*t557;
  t4190 = t1319*t260*t3348;
  t4191 = t2154*t3792;
  t4194 = t4190 + t4191;
  t4181 = t2147*t557;
  t4196 = t2155*t4194;
  t4197 = t4181 + t4196;
  t4202 = t2155*t557;
  t4214 = -1.*t2147*t4194;
  t4215 = t4202 + t4214;
  t4308 = -1.*t685*t1319*t260;
  t4311 = -1.*t515*t3792;
  t4312 = t4308 + t4311;
  t4397 = t421*t260;
  t4408 = t383*t385*t436;
  t4410 = t4397 + t4408;
  t4428 = -1.*t685*t1319*t436;
  t4435 = -1.*t515*t4410;
  t4440 = t4428 + t4435;
  t4486 = -1.*t1319*t515*t383;
  t4491 = t685*t385;
  t4493 = t4486 + t4491;
  t4588 = 0. + t523 + t550;
  t4600 = 0. + t3812 + t3815;
  t4599 = -1.*t666*t4588;
  t4604 = -1.*t739*t4600;
  t4608 = t4599 + t4604;
  t4611 = t739*t4588;
  t4615 = -1.*t666*t4600;
  t4616 = t4611 + t4615;
  t4421 = t685*t4410;
  t4683 = 0. + t1083 + t1107;
  t4694 = t1319*t2606*t436;
  t4697 = 0. + t4694 + t4421;
  t4687 = -1.*t666*t4683;
  t4700 = -1.*t739*t4697;
  t4717 = t4687 + t4700;
  t4719 = t739*t4683;
  t4721 = -1.*t666*t4697;
  t4723 = t4719 + t4721;
  t4506 = t685*t1319*t383;
  t4782 = t421*t1319;
  t4788 = 0. + t4782;
  t4794 = -1.*t2606*t385;
  t4797 = 0. + t4506 + t4794;
  t4791 = -1.*t4788*t666;
  t4805 = -1.*t739*t4797;
  t4808 = t4791 + t4805;
  t4812 = t739*t4788;
  t4820 = -1.*t666*t4797;
  t4822 = t4812 + t4820;
  t4851 = t666*t4588;
  t4853 = t739*t4600;
  t4859 = 0. + t4851 + t4853;
  t4867 = 0. + t4611 + t4615;
  t4909 = t666*t4683;
  t4910 = t739*t4697;
  t4911 = 0. + t4909 + t4910;
  t4915 = 0. + t4719 + t4721;
  t4953 = t4788*t666;
  t4956 = t739*t4797;
  t4957 = 0. + t4953 + t4956;
  t4978 = 0. + t4812 + t4820;
  t4153 = -1.*t2140*t3792;
  t5054 = t2154*t1319*t260;
  t5056 = t5054 + t4153;
  t5135 = t2154*t1319*t436;
  t5144 = -1.*t2140*t4410;
  t5147 = t5135 + t5144;
  t5218 = -1.*t1319*t2140*t383;
  t5222 = -1.*t2154*t385;
  t5223 = t5218 + t5222;
  t5280 = 0. + t4190 + t4191;
  t5279 = -1.*t2147*t4588;
  t5282 = -1.*t2155*t5280;
  t5291 = t5279 + t5282;
  t5306 = t2155*t4588;
  t5308 = -1.*t2147*t5280;
  t5316 = t5306 + t5308;
  t5387 = t1319*t3348*t436;
  t5391 = t2154*t4410;
  t5415 = 0. + t5387 + t5391;
  t5376 = -1.*t2147*t4683;
  t5418 = -1.*t2155*t5415;
  t5427 = t5376 + t5418;
  t5437 = t2155*t4683;
  t5441 = -1.*t2147*t5415;
  t5442 = t5437 + t5441;
  t5480 = t2154*t1319*t383;
  t5481 = -1.*t3348*t385;
  t5485 = 0. + t5480 + t5481;
  t5478 = -1.*t4788*t2147;
  t5490 = -1.*t2155*t5485;
  t5494 = t5478 + t5490;
  t5501 = t2155*t4788;
  t5517 = -1.*t2147*t5485;
  t5524 = t5501 + t5517;
  t5560 = t2147*t4588;
  t5580 = t2155*t5280;
  t5582 = 0. + t5560 + t5580;
  t5588 = 0. + t5306 + t5308;
  t5611 = t2147*t4683;
  t5615 = t2155*t5415;
  t5616 = 0. + t5611 + t5615;
  t5637 = 0. + t5437 + t5441;
  t5679 = t4788*t2147;
  t5680 = t2155*t5485;
  t5681 = 0. + t5679 + t5680;
  t5688 = 0. + t5501 + t5517;
  t5724 = -1.*t1508*t1319*t260;
  t5725 = -1.*t1467*t3792;
  t5727 = t5724 + t5725;
  t5784 = -1.*t1508*t1319*t436;
  t5785 = -1.*t1467*t4410;
  t5787 = t5784 + t5785;
  t5848 = -1.*t1319*t1467*t383;
  t5849 = t1508*t385;
  t5853 = t5848 + t5849;
  t5912 = 0. + t3978 + t3983;
  t5910 = -1.*t1485*t4588;
  t5913 = -1.*t1552*t5912;
  t5916 = t5910 + t5913;
  t5919 = t1552*t4588;
  t5924 = -1.*t1485*t5912;
  t5928 = t5919 + t5924;
  t5780 = t1508*t4410;
  t5963 = t1319*t2938*t436;
  t5979 = 0. + t5963 + t5780;
  t5959 = -1.*t1485*t4683;
  t5980 = -1.*t1552*t5979;
  t5987 = t5959 + t5980;
  t5990 = t1552*t4683;
  t5993 = -1.*t1485*t5979;
  t5999 = t5990 + t5993;
  t5864 = t1508*t1319*t383;
  t6048 = -1.*t2938*t385;
  t6050 = 0. + t5864 + t6048;
  t6047 = -1.*t4788*t1485;
  t6051 = -1.*t1552*t6050;
  t6063 = t6047 + t6051;
  t6067 = t1552*t4788;
  t6071 = -1.*t1485*t6050;
  t6072 = t6067 + t6071;
  t6105 = t1485*t4588;
  t6109 = t1552*t5912;
  t6114 = 0. + t6105 + t6109;
  t6124 = 0. + t5919 + t5924;
  t6163 = t1485*t4683;
  t6164 = t1552*t5979;
  t6187 = 0. + t6163 + t6164;
  t6190 = 0. + t5990 + t5993;
  t6217 = t4788*t1485;
  t6219 = t1552*t6050;
  t6220 = 0. + t6217 + t6219;
  t6227 = 0. + t6067 + t6071;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=1.;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=1.;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=1.;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=1.;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=1.;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=1.;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=1.;
  p_output1[27]=0.2429*t468 + 0.035199999999999995*t515*t557 - 0.2083*t784 - 0.1422*t834 - 0.02*(t784*t947 + t834*t959) - 0.16*(t784*t959 + t834*t984);
  p_output1[28]=0.2429*t1152 - 0.1422*t1179 - 0.2083*t1211 + 0.035199999999999995*t1133*t515 - 0.02*(t1211*t947 + t1179*t959) - 0.16*(t1211*t959 + t1179*t984);
  p_output1[29]=-0.1422*t1362 - 0.2083*t1372 - 0.2429*t1319*t383 + 0.035199999999999995*t1319*t421*t515 - 0.02*(t1372*t947 + t1362*t959) - 0.16*(t1372*t959 + t1362*t984);
  p_output1[30]=t1444 - 0.2083*t1565 - 0.1422*t1624 - 0.02*(t1565*t1683 + t1624*t1695) - 0.16*(t1565*t1695 + t1624*t1734) + 0.0329*t1467*t557;
  p_output1[31]=0.0329*t1133*t1467 + t1784 - 0.1422*t1797 - 0.2083*t1814 - 0.02*(t1695*t1797 + t1683*t1814) - 0.16*(t1734*t1797 + t1695*t1814);
  p_output1[32]=t1953 - 0.1422*t1967 - 0.2083*t2023 - 0.02*(t1695*t1967 + t1683*t2023) - 0.16*(t1734*t1967 + t1695*t2023) + 0.0329*t1319*t1467*t421;
  p_output1[33]=t1444 - 0.2083*t2174 - 0.1422*t2224 - 0.02*(t2174*t2247 + t2224*t2275) - 0.16*(t2174*t2275 + t2224*t2334) + 0.0329*t2140*t557;
  p_output1[34]=t1784 + 0.0329*t1133*t2140 - 0.1422*t2389 - 0.2083*t2413 - 0.02*(t2275*t2389 + t2247*t2413) - 0.16*(t2334*t2389 + t2275*t2413);
  p_output1[35]=t1953 - 0.1422*t2470 - 0.2083*t2489 - 0.02*(t2275*t2470 + t2247*t2489) - 0.16*(t2334*t2470 + t2275*t2489) + 0.0329*t1319*t2140*t421;
  p_output1[36]=t2554 - 0.2083*t2626 - 0.1422*t2643 + 0.2429*t1319*t260*t421 + 0.035199999999999995*(-1.*t2557*t260*t385 + t1319*t260*t383*t515) - 0.02*(t2626*t947 + t2643*t959) - 0.16*(t2626*t959 + t2643*t984);
  p_output1[37]=t2677 - 0.2083*t2712 - 0.1422*t2733 + 0.2429*t1319*t421*t436 + 0.035199999999999995*(-1.*t2557*t385*t436 + t1319*t383*t436*t515) - 0.02*(t2712*t947 + t2733*t959) - 0.16*(t2712*t959 + t2733*t984);
  p_output1[38]=t2773 - 0.2083*t2844 - 0.1422*t2868 - 0.2429*t385*t421 + 0.035199999999999995*(-1.*t1319*t2557 - 1.*t383*t385*t515) - 0.02*(t2844*t947 + t2868*t959) - 0.16*(t2844*t959 + t2868*t984);
  p_output1[39]=t2554 + t2892 - 0.2083*t2966 - 0.1422*t2992 - 0.02*(t1683*t2966 + t1695*t2992) - 0.16*(t1695*t2966 + t1734*t2992) + 0.0329*(t1319*t1467*t260*t383 - 1.*t260*t2896*t385);
  p_output1[40]=t2677 + t3030 - 0.2083*t3074 - 0.1422*t3104 - 0.02*(t1683*t3074 + t1695*t3104) - 0.16*(t1695*t3074 + t1734*t3104) + 0.0329*(t1319*t1467*t383*t436 - 1.*t2896*t385*t436);
  p_output1[41]=t2773 + t3189 - 0.2083*t3236 - 0.1422*t3258 - 0.02*(t1683*t3236 + t1695*t3258) - 0.16*(t1695*t3236 + t1734*t3258) + 0.0329*(-1.*t1319*t2896 - 1.*t1467*t383*t385);
  p_output1[42]=t2892 - 0.2083*t3363 - 0.1422*t3394 - 0.02*(t2247*t3363 + t2275*t3394) - 0.16*(t2275*t3363 + t2334*t3394) + 0.0817*t260*t385 - 0.0329*(-1.*t1319*t2140*t260*t383 - 1.*t260*t3317*t385);
  p_output1[43]=t3030 - 0.2083*t3496 - 0.1422*t3530 - 0.02*(t2247*t3496 + t2275*t3530) - 0.16*(t2275*t3496 + t2334*t3530) + 0.0817*t385*t436 - 0.0329*(-1.*t1319*t2140*t383*t436 - 1.*t3317*t385*t436);
  p_output1[44]=0.0817*t1319 + t3189 - 0.2083*t3616 - 0.1422*t3632 - 0.02*(t2247*t3616 + t2275*t3632) - 0.16*(t2275*t3616 + t2334*t3632) - 0.0329*(-1.*t1319*t3317 + t2140*t383*t385);
  p_output1[45]=t3657 + 0.2429*t3668 - 0.2083*t3734 - 0.1422*t3745 + 0.035199999999999995*(-1.*t1319*t2557*t436 + t1152*t515) - 0.02*(t3734*t947 + t3745*t959) - 0.16*(t3734*t959 + t3745*t984);
  p_output1[46]=t3785 - 0.2083*t3824 - 0.1422*t3836 + 0.035199999999999995*(t1319*t2557*t260 + t3792*t515) + 0.2429*t557 - 0.02*(t3824*t947 + t3836*t959) - 0.16*(t3824*t959 + t3836*t984);
  p_output1[47]=0;
  p_output1[48]=t3657 + t3869 - 0.2083*t3899 - 0.1422*t3908 - 0.02*(t1683*t3899 + t1695*t3908) - 0.16*(t1695*t3899 + t1734*t3908) + 0.0329*(t1152*t1467 - 1.*t1319*t2896*t436);
  p_output1[49]=t3785 + 0.0329*(t1319*t260*t2896 + t1467*t3792) + t3957 - 0.2083*t3996 - 0.1422*t4010 - 0.02*(t1683*t3996 + t1695*t4010) - 0.16*(t1695*t3996 + t1734*t4010);
  p_output1[50]=0;
  p_output1[51]=t3869 - 0.2083*t4069 - 0.1422*t4098 - 0.02*(t2247*t4069 + t2275*t4098) - 0.16*(t2275*t4069 + t2334*t4098) + 0.0817*t1319*t436 - 0.0329*(-1.*t1152*t2140 - 1.*t1319*t3317*t436);
  p_output1[52]=-0.0817*t1319*t260 + t3957 - 0.0329*(t1319*t260*t3317 + t4153) - 0.2083*t4197 - 0.1422*t4215 - 0.02*(t2247*t4197 + t2275*t4215) - 0.16*(t2275*t4197 + t2334*t4215);
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0.035199999999999995*(t3815 - 1.*t1319*t260*t515) + 0.1422*t4312*t666 - 0.2083*t4312*t739 - 0.02*(t4312*t739*t947 - 1.*t4312*t666*t959) - 0.16*(t4312*t739*t959 - 1.*t4312*t666*t984);
  p_output1[82]=0.035199999999999995*(t4421 - 1.*t1319*t436*t515) + 0.1422*t4440*t666 - 0.2083*t4440*t739 - 0.02*(t4440*t739*t947 - 1.*t4440*t666*t959) - 0.16*(t4440*t739*t959 - 1.*t4440*t666*t984);
  p_output1[83]=0.035199999999999995*(t4506 + t385*t515) + 0.1422*t4493*t666 - 0.2083*t4493*t739 - 0.02*(t4493*t739*t947 - 1.*t4493*t666*t959) - 0.16*(t4493*t739*t959 - 1.*t4493*t666*t984);
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=-0.1422*t4608 - 0.2083*t4616 - 0.02*(t4616*t947 + t4608*t959) - 0.16*(t4616*t959 + t4608*t984);
  p_output1[91]=-0.1422*t4717 - 0.2083*t4723 - 0.02*(t4723*t947 + t4717*t959) - 0.16*(t4723*t959 + t4717*t984);
  p_output1[92]=-0.1422*t4808 - 0.2083*t4822 - 0.02*(t4822*t947 + t4808*t959) - 0.16*(t4822*t959 + t4808*t984);
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=-0.02*(-1.*t4867*t893 - 1.*t4859*t957) - 0.16*(-1.*t4859*t893 + t4867*t957);
  p_output1[100]=-0.02*(-1.*t4915*t893 - 1.*t4911*t957) - 0.16*(-1.*t4911*t893 + t4915*t957);
  p_output1[101]=-0.02*(-1.*t4978*t893 - 1.*t4957*t957) - 0.16*(-1.*t4957*t893 + t4978*t957);
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=-0.0329*(-1.*t1319*t2140*t260 - 1.*t2154*t3792) + 0.1422*t2147*t5056 - 0.2083*t2155*t5056 - 0.02*(t2155*t2247*t5056 - 1.*t2147*t2275*t5056) - 0.16*(t2155*t2275*t5056 - 1.*t2147*t2334*t5056);
  p_output1[115]=-0.0329*(-1.*t1319*t2140*t436 - 1.*t2154*t4410) + 0.1422*t2147*t5147 - 0.2083*t2155*t5147 - 0.02*(t2155*t2247*t5147 - 1.*t2147*t2275*t5147) - 0.16*(t2155*t2275*t5147 - 1.*t2147*t2334*t5147);
  p_output1[116]=-0.0329*(-1.*t1319*t2154*t383 + t2140*t385) + 0.1422*t2147*t5223 - 0.2083*t2155*t5223 - 0.02*(t2155*t2247*t5223 - 1.*t2147*t2275*t5223) - 0.16*(t2155*t2275*t5223 - 1.*t2147*t2334*t5223);
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=-0.1422*t5291 - 0.2083*t5316 - 0.02*(t2275*t5291 + t2247*t5316) - 0.16*(t2334*t5291 + t2275*t5316);
  p_output1[124]=-0.1422*t5427 - 0.2083*t5442 - 0.02*(t2275*t5427 + t2247*t5442) - 0.16*(t2334*t5427 + t2275*t5442);
  p_output1[125]=-0.1422*t5494 - 0.2083*t5524 - 0.02*(t2275*t5494 + t2247*t5524) - 0.16*(t2334*t5494 + t2275*t5524);
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=-0.02*(-1.*t2263*t5582 - 1.*t2232*t5588) - 0.16*(-1.*t2232*t5582 + t2263*t5588);
  p_output1[133]=-0.02*(-1.*t2263*t5616 - 1.*t2232*t5637) - 0.16*(-1.*t2232*t5616 + t2263*t5637);
  p_output1[134]=-0.02*(-1.*t2263*t5681 - 1.*t2232*t5688) - 0.16*(-1.*t2232*t5681 + t2263*t5688);
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0.0329*(-1.*t1319*t1467*t260 + t3983) + 0.1422*t1485*t5727 - 0.2083*t1552*t5727 - 0.02*(t1552*t1683*t5727 - 1.*t1485*t1695*t5727) - 0.16*(t1552*t1695*t5727 - 1.*t1485*t1734*t5727);
  p_output1[139]=0.0329*(-1.*t1319*t1467*t436 + t5780) + 0.1422*t1485*t5787 - 0.2083*t1552*t5787 - 0.02*(t1552*t1683*t5787 - 1.*t1485*t1695*t5787) - 0.16*(t1552*t1695*t5787 - 1.*t1485*t1734*t5787);
  p_output1[140]=0.1422*t1485*t5853 - 0.2083*t1552*t5853 - 0.02*(t1552*t1683*t5853 - 1.*t1485*t1695*t5853) - 0.16*(t1552*t1695*t5853 - 1.*t1485*t1734*t5853) + 0.0329*(t1467*t385 + t5864);
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=-0.1422*t5916 - 0.2083*t5928 - 0.02*(t1695*t5916 + t1683*t5928) - 0.16*(t1734*t5916 + t1695*t5928);
  p_output1[148]=-0.1422*t5987 - 0.2083*t5999 - 0.02*(t1695*t5987 + t1683*t5999) - 0.16*(t1734*t5987 + t1695*t5999);
  p_output1[149]=-0.1422*t6063 - 0.2083*t6072 - 0.02*(t1695*t6063 + t1683*t6072) - 0.16*(t1734*t6063 + t1695*t6072);
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=-0.02*(-1.*t1694*t6114 - 1.*t1640*t6124) - 0.16*(-1.*t1640*t6114 + t1694*t6124);
  p_output1[157]=-0.02*(-1.*t1694*t6187 - 1.*t1640*t6190) - 0.16*(-1.*t1640*t6187 + t1694*t6190);
  p_output1[158]=-0.02*(-1.*t1694*t6220 - 1.*t1640*t6227) - 0.16*(-1.*t1640*t6220 + t1694*t6227);
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_3_func.hh"

namespace SymFunction
{

void j_3_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
