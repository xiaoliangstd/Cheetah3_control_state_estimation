/*
 * Automatically Generated from Mathematica.
 * Mon 29 Jul 2019 15:09:00 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t322;
  double t360;
  double t289;
  double t403;
  double t406;
  double t590;
  double t504;
  double t540;
  double t612;
  double t614;
  double t644;
  double t649;
  double t655;
  double t1110;
  double t1112;
  double t694;
  double t397;
  double t1605;
  double t1606;
  double t1623;
  double t1635;
  double t1389;
  double t1448;
  double t712;
  double t1658;
  double t1952;
  double t1961;
  double t1968;
  double t1978;
  double t1948;
  double t1983;
  double t2007;
  double t2012;
  double t2020;
  double t2021;
  double t2144;
  double t2153;
  double t2156;
  double t2584;
  double t2618;
  double t2638;
  double t2569;
  double t2644;
  double t2649;
  double t2677;
  double t2679;
  double t2680;
  double t2810;
  double t2477;
  double t2903;
  double t2906;
  double t2907;
  double t2872;
  double t2926;
  double t2928;
  double t2949;
  double t2950;
  double t2953;
  double t1648;
  double t1656;
  double t1704;
  double t1709;
  double t1758;
  double t1770;
  double t1781;
  double t1822;
  double t1829;
  double t1848;
  double t1872;
  double t1897;
  double t1905;
  double t1909;
  double t3021;
  double t3039;
  double t3055;
  double t3089;
  double t3091;
  double t3092;
  double t3102;
  double t3124;
  double t3134;
  double t3151;
  double t3154;
  double t3164;
  double t3339;
  double t3349;
  double t3350;
  double t3380;
  double t3382;
  double t3385;
  double t398;
  double t404;
  double t638;
  double t671;
  double t825;
  double t1168;
  double t1325;
  double t1381;
  double t1388;
  double t1483;
  double t1497;
  double t1507;
  double t1519;
  double t3059;
  double t3062;
  double t3066;
  double t3067;
  double t3073;
  double t3075;
  double t3078;
  double t3081;
  double t3083;
  double t3084;
  double t3085;
  double t3086;
  double t3451;
  double t3453;
  double t3464;
  double t3507;
  double t3511;
  double t3519;
  double t3539;
  double t3540;
  double t3541;
  double t3547;
  double t3548;
  double t3563;
  double t3600;
  double t3606;
  double t3609;
  double t3622;
  double t3627;
  double t3634;
  double t3694;
  double t3695;
  double t3706;
  double t3749;
  double t3752;
  double t3753;
  double t3761;
  double t3767;
  double t3769;
  double t3785;
  double t3788;
  double t3789;
  double t3796;
  double t3798;
  double t3804;
  double t2009;
  double t2029;
  double t2037;
  double t2041;
  double t2056;
  double t2060;
  double t2063;
  double t2067;
  double t2079;
  double t2089;
  double t2094;
  double t3271;
  double t3273;
  double t3279;
  double t3308;
  double t3309;
  double t3313;
  double t3326;
  double t3328;
  double t3329;
  double t3330;
  double t3334;
  double t3616;
  double t3641;
  double t3645;
  double t3652;
  double t3655;
  double t3663;
  double t3665;
  double t3667;
  double t3668;
  double t3669;
  double t3674;
  double t3885;
  double t3891;
  double t3897;
  double t3898;
  double t3887;
  double t3907;
  double t3908;
  double t3910;
  double t3917;
  double t3921;
  double t3972;
  double t3977;
  double t3978;
  double t3367;
  double t4034;
  double t4036;
  double t4028;
  double t4040;
  double t4042;
  double t4047;
  double t4048;
  double t4051;
  double t2815;
  double t2820;
  double t2836;
  double t2841;
  double t2866;
  double t2869;
  double t2929;
  double t2958;
  double t2960;
  double t2962;
  double t2964;
  double t2969;
  double t2972;
  double t2973;
  double t2974;
  double t2976;
  double t2977;
  double t3337;
  double t3376;
  double t3378;
  double t3387;
  double t3388;
  double t3390;
  double t3401;
  double t3402;
  double t3404;
  double t3410;
  double t3414;
  double t3417;
  double t3431;
  double t3433;
  double t3760;
  double t3774;
  double t3793;
  double t3808;
  double t3811;
  double t3818;
  double t3839;
  double t3841;
  double t3844;
  double t3848;
  double t3851;
  double t3855;
  double t3859;
  double t2434;
  double t3530;
  double t2503;
  double t4093;
  double t4108;
  double t4109;
  double t4116;
  double t4122;
  double t4124;
  double t4046;
  double t4056;
  double t4059;
  double t4060;
  double t4062;
  double t4064;
  double t4065;
  double t4071;
  double t4072;
  double t4073;
  double t4077;
  double t4163;
  double t4168;
  double t4175;
  double t2157;
  double t2184;
  double t2188;
  double t2193;
  double t2208;
  double t2212;
  double t2234;
  double t2310;
  double t2315;
  double t3212;
  double t3218;
  double t3222;
  double t3225;
  double t3226;
  double t3227;
  double t3233;
  double t3239;
  double t3245;
  double t3707;
  double t3708;
  double t3716;
  double t3718;
  double t3726;
  double t3732;
  double t3733;
  double t3737;
  double t3740;
  double t3909;
  double t3931;
  double t3937;
  double t3938;
  double t3943;
  double t3959;
  double t3960;
  double t3961;
  double t3964;
  double t4231;
  double t4232;
  double t4233;
  double t4235;
  double t4177;
  double t4179;
  double t4186;
  double t4189;
  double t4192;
  double t4208;
  double t4211;
  double t4212;
  double t4215;
  double t4277;
  double t4278;
  double t4279;
  double t4281;
  double t4285;
  double t4286;
  double t4315;
  double t4317;
  double t4318;
  double t4378;
  double t4380;
  double t4383;
  double t4397;
  double t4398;
  double t4408;
  double t4471;
  double t4479;
  double t4480;
  double t4508;
  double t4511;
  double t4522;
  double t4524;
  double t4570;
  double t4572;
  double t4322;
  double t4323;
  double t4326;
  double t4327;
  double t4328;
  double t4331;
  double t4333;
  double t4334;
  double t4335;
  double t4337;
  double t4338;
  double t4339;
  double t4663;
  double t4664;
  double t4673;
  double t4675;
  double t4681;
  double t4274;
  double t4275;
  double t4280;
  double t4287;
  double t4290;
  double t4295;
  double t4296;
  double t4300;
  double t4301;
  double t4303;
  double t4306;
  double t4307;
  double t4309;
  double t4579;
  double t4580;
  double t4582;
  double t4589;
  double t4590;
  double t4591;
  double t4595;
  double t4599;
  double t4603;
  double t4604;
  double t4605;
  double t4616;
  double t4617;
  double t4621;
  double t4624;
  double t4824;
  double t4825;
  double t4827;
  double t4830;
  double t4832;
  double t4833;
  double t4834;
  double t4873;
  double t4877;
  double t4878;
  double t4918;
  double t4921;
  double t4910;
  double t4924;
  double t4926;
  double t4929;
  double t4939;
  double t4941;
  double t4755;
  double t4763;
  double t4767;
  double t4768;
  double t4769;
  double t4775;
  double t4781;
  double t4782;
  double t4785;
  double t4795;
  double t4796;
  double t4798;
  double t4800;
  double t4802;
  double t4808;
  double t4812;
  double t4634;
  double t4638;
  double t4641;
  double t4642;
  double t4643;
  double t4644;
  double t4645;
  double t4646;
  double t4650;
  double t4651;
  double t4654;
  double t4656;
  double t4661;
  double t4341;
  double t4342;
  double t4343;
  double t4350;
  double t4351;
  double t4353;
  double t4354;
  double t4356;
  double t4358;
  double t4362;
  double t4365;
  double t4370;
  double t5015;
  double t5009;
  double t5021;
  double t5024;
  double t5029;
  double t5031;
  double t5034;
  double t5066;
  double t5067;
  double t5076;
  double t4896;
  double t4502;
  double t4899;
  double t4879;
  double t4880;
  double t4886;
  double t4887;
  double t4888;
  double t4889;
  double t4891;
  double t4893;
  double t4894;
  double t4470;
  double t4481;
  double t4482;
  double t4484;
  double t4490;
  double t4492;
  double t4495;
  double t4496;
  double t4498;
  double t4713;
  double t4714;
  double t4716;
  double t4718;
  double t4720;
  double t4722;
  double t4723;
  double t4726;
  double t4727;
  double t5083;
  double t5085;
  double t5088;
  double t5089;
  double t5096;
  double t5114;
  double t5115;
  double t5123;
  double t5136;
  double t5210;
  double t5213;
  double t5216;
  double t5219;
  double t5211;
  double t5221;
  double t5222;
  double t5228;
  double t5231;
  double t5232;
  double t5250;
  double t5253;
  double t5255;
  double t5264;
  double t4831;
  double t4838;
  double t4840;
  double t4842;
  double t4843;
  double t4844;
  double t4845;
  double t4846;
  double t4851;
  double t4855;
  double t4856;
  double t4390;
  double t4409;
  double t4427;
  double t4433;
  double t4434;
  double t4445;
  double t4446;
  double t4448;
  double t4450;
  double t4451;
  double t4457;
  double t4730;
  double t4731;
  double t4732;
  double t4734;
  double t4735;
  double t4737;
  double t4739;
  double t4740;
  double t4741;
  double t4743;
  double t4745;
  double t5027;
  double t5035;
  double t5037;
  double t5038;
  double t5039;
  double t5041;
  double t5043;
  double t5046;
  double t5047;
  double t5049;
  double t5052;
  double t5224;
  double t5233;
  double t5236;
  double t5237;
  double t5238;
  double t5240;
  double t5241;
  double t5244;
  double t5248;
  double t5328;
  double t5329;
  double t5332;
  double t5438;
  double t5439;
  double t5440;
  double t5520;
  double t5524;
  double t5528;
  double t5568;
  double t5569;
  double t5572;
  double t5399;
  double t5404;
  double t5407;
  double t5412;
  double t5414;
  double t5418;
  double t5420;
  double t5421;
  double t5423;
  double t5424;
  double t5426;
  double t5434;
  double t5607;
  double t5609;
  double t5611;
  double t5613;
  double t5614;
  double t5620;
  double t5655;
  double t5661;
  double t5668;
  double t5719;
  double t5720;
  double t5722;
  double t5725;
  double t5735;
  double t5736;
  double t5797;
  double t5799;
  double t5806;
  double t5813;
  double t5814;
  double t5818;
  double t5648;
  double t5669;
  double t5672;
  double t5673;
  double t5675;
  double t5676;
  double t5678;
  double t5698;
  double t5700;
  double t5701;
  double t5702;
  double t5461;
  double t5466;
  double t5469;
  double t5470;
  double t5493;
  double t5498;
  double t5500;
  double t5504;
  double t5505;
  double t5512;
  double t5514;
  double t5874;
  double t5875;
  double t5879;
  double t5880;
  double t5881;
  double t5876;
  double t5884;
  double t5886;
  double t5893;
  double t5896;
  double t5897;
  double t5933;
  double t5934;
  double t5938;
  double t5564;
  double t5972;
  double t5975;
  double t5958;
  double t5980;
  double t5982;
  double t5984;
  double t5992;
  double t5996;
  double t5561;
  double t5565;
  double t5567;
  double t5574;
  double t5577;
  double t5578;
  double t5579;
  double t5580;
  double t5584;
  double t5585;
  double t5588;
  double t5596;
  double t5597;
  double t5600;
  double t5791;
  double t5795;
  double t5812;
  double t5822;
  double t5824;
  double t5825;
  double t5828;
  double t5829;
  double t5835;
  double t5836;
  double t5838;
  double t5839;
  double t5840;
  double t5717;
  double t6059;
  double t6060;
  double t6062;
  double t6063;
  double t6066;
  double t6068;
  double t5983;
  double t6007;
  double t6013;
  double t6014;
  double t6015;
  double t6019;
  double t6022;
  double t6025;
  double t6028;
  double t6030;
  double t6033;
  double t6103;
  double t6104;
  double t6105;
  double t5612;
  double t5621;
  double t5623;
  double t5628;
  double t5631;
  double t5634;
  double t5636;
  double t5639;
  double t5640;
  double t5443;
  double t5444;
  double t5445;
  double t5446;
  double t5447;
  double t5454;
  double t5457;
  double t5458;
  double t5459;
  double t5887;
  double t5899;
  double t5901;
  double t5902;
  double t5905;
  double t5909;
  double t5917;
  double t5921;
  double t5925;
  double t6138;
  double t6139;
  double t6140;
  double t6142;
  double t6107;
  double t6108;
  double t6111;
  double t6117;
  double t6119;
  double t6120;
  double t6121;
  double t6123;
  double t6126;
  double t6176;
  double t6177;
  double t6181;
  double t6191;
  double t6196;
  double t6197;
  double t6183;
  double t6184;
  double t6185;
  double t6186;
  double t6188;
  double t6189;
  double t6198;
  double t6200;
  double t6201;
  double t6202;
  double t6205;
  double t6212;
  double t6216;
  double t6221;
  double t6168;
  double t6171;
  double t6175;
  double t6242;
  double t6222;
  double t6225;
  double t6229;
  double t6149;
  double t6150;
  double t6153;
  double t6259;
  double t6260;
  double t6261;
  double t6233;
  double t6234;
  double t6240;
  double t5948;
  double t6277;
  double t6278;
  double t6280;
  double t6283;
  double t6284;
  double t5764;
  double t5768;
  double t5769;
  double t5751;
  double t5756;
  double t5757;
  double t6321;
  double t6326;
  double t6329;
  double t6330;
  double t6340;
  double t6367;
  double t6370;
  double t6371;
  double t6251;
  double t6252;
  double t6380;
  double t6381;
  double t5548;
  double t5553;
  double t5555;
  double t5531;
  double t5535;
  double t5543;
  double t6471;
  double t6474;
  double t6482;
  double t6293;
  double t6303;
  double t6487;
  double t6489;
  double t6492;
  double t6390;
  double t6391;
  double t5940;
  double t5944;
  double t5946;
  double t5949;
  double t5950;
  double t6568;
  double t6569;
  double t6572;
  double t6141;
  double t6143;
  double t6144;
  double t6267;
  double t6269;
  double t6401;
  double t6404;
  double t6526;
  double t6530;
  double t6347;
  double t6348;
  double t6675;
  double t6678;
  double t6680;
  double t6457;
  double t6458;
  double t6664;
  double t6668;
  double t6671;
  double t6554;
  double t6558;
  double t6646;
  double t6650;
  double t6074;
  double t6075;
  double t6077;
  double t6082;
  double t6083;
  double t6090;
  double t6052;
  double t6769;
  double t6771;
  double t6773;
  double t6779;
  double t6781;
  double t6784;
  double t6789;
  double t6795;
  double t6778;
  double t6802;
  double t6803;
  double t6845;
  double t6907;
  double t6908;
  double t6945;
  double t6815;
  double t6816;
  double t6818;
  double t6819;
  double t6820;
  double t7085;
  double t7087;
  double t6991;
  double t6992;
  double t6999;
  double t7009;
  double t7013;
  double t6852;
  double t6859;
  double t6860;
  double t6861;
  double t6862;
  double t7216;
  double t7219;
  double t7032;
  double t7034;
  double t7035;
  double t7036;
  double t7038;
  double t6889;
  double t6892;
  double t6898;
  double t6899;
  double t6900;
  double t7241;
  double t7242;
  double t7120;
  double t7124;
  double t7125;
  double t7126;
  double t7131;
  double t7132;
  double t7133;
  double t7142;
  double t7356;
  double t7360;
  double t7361;
  double t6913;
  double t6915;
  double t6917;
  double t6918;
  double t6919;
  double t7056;
  double t7057;
  double t7058;
  double t7060;
  double t7061;
  double t7375;
  double t7381;
  double t7176;
  double t7178;
  double t7181;
  double t7182;
  double t7193;
  double t7196;
  double t7199;
  double t7202;
  double t7319;
  double t7320;
  double t7323;
  double t7324;
  double t7327;
  double t7328;
  double t7329;
  double t7332;
  double t7333;
  double t7334;
  double t7339;
  double t7461;
  double t7471;
  double t7481;
  double t7488;
  double t7489;
  double t7491;
  double t7482;
  double t7483;
  double t7485;
  double t7487;
  double t7492;
  double t7493;
  double t7495;
  double t7496;
  double t7500;
  double t7502;
  double t7512;
  double t7504;
  double t7532;
  double t7535;
  double t4900;
  double t4902;
  double t2514;
  double t2560;
  double t5144;
  double t5145;
  double t7569;
  double t7583;
  double t7584;
  double t7585;
  double t7526;
  double t7527;
  double t7641;
  double t7644;
  double t7649;
  double t7541;
  double t7548;
  double t7620;
  double t7623;
  double t7741;
  double t7742;
  double t7746;
  double t7575;
  double t7577;
  double t7751;
  double t7629;
  double t7631;
  double t4089;
  double t4090;
  double t7712;
  double t7720;
  t322 = Cos(var1[4]);
  t360 = Cos(var1[5]);
  t289 = Cos(var1[3]);
  t403 = Sin(var1[3]);
  t406 = Cos(var1[9]);
  t590 = Cos(var1[10]);
  t504 = Sin(var1[10]);
  t540 = -1.*t406*t289*t322*t360*t504;
  t612 = -1.*t590*t322*t360*t403;
  t614 = t540 + t612;
  t644 = t406*t590*t289*t322*t360;
  t649 = -1.*t322*t360*t504*t403;
  t655 = t644 + t649;
  t1110 = Cos(var1[11]);
  t1112 = 0. + t1110;
  t694 = Sin(var1[11]);
  t397 = Sin(var1[9]);
  t1605 = -1.*t322*t360*t397*t403;
  t1606 = Sin(var1[4]);
  t1623 = t406*t360*t1606;
  t1635 = t1605 + t1623;
  t1389 = -1.*t694;
  t1448 = 0. + t1389;
  t712 = 0. + t694;
  t1658 = t406*t322*t360*t403;
  t1952 = -1.*t397;
  t1961 = 0. + t1952;
  t1968 = -1.*t360*t1961*t1606;
  t1978 = t1658 + t1968;
  t1948 = -1.*t289*t322*t360*t504;
  t1983 = -1.*t590*t1978;
  t2007 = t1948 + t1983;
  t2012 = t590*t289*t322*t360;
  t2020 = -1.*t504*t1978;
  t2021 = t2012 + t2020;
  t2144 = t289*t322*t360*t504;
  t2153 = t590*t1978;
  t2156 = t2144 + t2153;
  t2584 = -1.*t322*t360*t1961;
  t2618 = -1.*t406*t360*t403*t1606;
  t2638 = t2584 + t2618;
  t2569 = -1.*t289*t360*t504*t1606;
  t2644 = t590*t2638;
  t2649 = t2569 + t2644;
  t2677 = -1.*t590*t289*t360*t1606;
  t2679 = -1.*t504*t2638;
  t2680 = t2677 + t2679;
  t2810 = Sin(var1[5]);
  t2477 = 0. + t406;
  t2903 = -1.*t406*t322*t403*t2810;
  t2906 = t1961*t1606*t2810;
  t2907 = t2903 + t2906;
  t2872 = -1.*t289*t322*t504*t2810;
  t2926 = t590*t2907;
  t2928 = t2872 + t2926;
  t2949 = -1.*t590*t289*t322*t2810;
  t2950 = -1.*t504*t2907;
  t2953 = t2949 + t2950;
  t1648 = -0.2083*t590*t1635;
  t1656 = 0.1422*t504*t1635;
  t1704 = t360*t397*t1606;
  t1709 = t1658 + t1704;
  t1758 = 0.035199999999999995*t1709;
  t1770 = -1.*t1112*t504*t1635;
  t1781 = t590*t1448*t1635;
  t1822 = t1770 + t1781;
  t1829 = -0.02*t1822;
  t1848 = t590*t1112*t1635;
  t1872 = -1.*t504*t712*t1635;
  t1897 = t1848 + t1872;
  t1905 = -0.16*t1897;
  t1909 = t1648 + t1656 + t1758 + t1829 + t1905;
  t3021 = t289*t360*t1606;
  t3039 = t403*t2810;
  t3055 = t3021 + t3039;
  t3089 = t322*t360*t397;
  t3091 = t360*t403*t1606;
  t3092 = -1.*t289*t2810;
  t3102 = t3091 + t3092;
  t3124 = -1.*t406*t3102;
  t3134 = t3089 + t3124;
  t3151 = -1.*t406*t322*t360;
  t3154 = -1.*t397*t3102;
  t3164 = t3151 + t3154;
  t3339 = -1.*t289*t360;
  t3349 = -1.*t403*t1606*t2810;
  t3350 = t3339 + t3349;
  t3380 = t406*t322*t2810;
  t3382 = -1.*t397*t3350;
  t3385 = t3380 + t3382;
  t398 = 0.035199999999999995*t289*t322*t360*t397;
  t404 = -0.2429*t322*t360*t403;
  t638 = -0.1422*t614;
  t671 = -0.2083*t655;
  t825 = t712*t614;
  t1168 = t1112*t655;
  t1325 = t825 + t1168;
  t1381 = -0.16*t1325;
  t1388 = t1112*t614;
  t1483 = t1448*t655;
  t1497 = t1388 + t1483;
  t1507 = -0.02*t1497;
  t1519 = t398 + t404 + t638 + t671 + t1381 + t1507;
  t3059 = 0.035199999999999995*t406*t3055;
  t3062 = 0.2083*t590*t397*t3055;
  t3066 = -0.1422*t397*t504*t3055;
  t3067 = t1112*t397*t504*t3055;
  t3073 = -1.*t590*t397*t1448*t3055;
  t3075 = t3067 + t3073;
  t3078 = -0.02*t3075;
  t3081 = -1.*t590*t1112*t397*t3055;
  t3083 = t397*t504*t712*t3055;
  t3084 = t3081 + t3083;
  t3085 = -0.16*t3084;
  t3086 = t3059 + t3062 + t3066 + t3078 + t3085;
  t3451 = -1.*t360*t403*t1606;
  t3453 = t289*t2810;
  t3464 = t3451 + t3453;
  t3507 = -1.*t289*t360*t1606;
  t3511 = -1.*t403*t2810;
  t3519 = t3507 + t3511;
  t3539 = -1.*t406*t504*t3464;
  t3540 = t590*t3519;
  t3541 = t3539 + t3540;
  t3547 = t406*t590*t3464;
  t3548 = t504*t3519;
  t3563 = t3547 + t3548;
  t3600 = -1.*t504*t3464;
  t3606 = -1.*t406*t590*t3055;
  t3609 = t3600 + t3606;
  t3622 = t590*t3464;
  t3627 = -1.*t406*t504*t3055;
  t3634 = t3622 + t3627;
  t3694 = t504*t3464;
  t3695 = t406*t590*t3055;
  t3706 = t3694 + t3695;
  t3749 = t360*t403;
  t3752 = -1.*t289*t1606*t2810;
  t3753 = t3749 + t3752;
  t3761 = t289*t360;
  t3767 = t403*t1606*t2810;
  t3769 = t3761 + t3767;
  t3785 = -1.*t406*t504*t3753;
  t3788 = t590*t3769;
  t3789 = t3785 + t3788;
  t3796 = t406*t590*t3753;
  t3798 = t504*t3769;
  t3804 = t3796 + t3798;
  t2009 = -0.1422*t2007;
  t2029 = -0.2083*t2021;
  t2037 = t712*t2007;
  t2041 = t1112*t2021;
  t2056 = t2037 + t2041;
  t2060 = -0.16*t2056;
  t2063 = t1112*t2007;
  t2067 = t1448*t2021;
  t2079 = t2063 + t2067;
  t2089 = -0.02*t2079;
  t2094 = t2009 + t2029 + t2060 + t2089;
  t3271 = 0.1422*t590*t3164;
  t3273 = 0.2083*t504*t3164;
  t3279 = -1.*t590*t1112*t3164;
  t3308 = -1.*t504*t1448*t3164;
  t3309 = t3279 + t3308;
  t3313 = -0.02*t3309;
  t3326 = -1.*t1112*t504*t3164;
  t3328 = -1.*t590*t712*t3164;
  t3329 = t3326 + t3328;
  t3330 = -0.16*t3329;
  t3334 = t3271 + t3273 + t3313 + t3330;
  t3616 = -0.1422*t3609;
  t3641 = -0.2083*t3634;
  t3645 = t712*t3609;
  t3652 = t1112*t3634;
  t3655 = t3645 + t3652;
  t3663 = -0.16*t3655;
  t3665 = t1112*t3609;
  t3667 = t1448*t3634;
  t3668 = t3665 + t3667;
  t3669 = -0.02*t3668;
  t3674 = t3616 + t3641 + t3663 + t3669;
  t3885 = 0. + t3021 + t3039;
  t3891 = t322*t360*t1961;
  t3897 = t406*t3102;
  t3898 = 0. + t3891 + t3897;
  t3887 = -1.*t504*t3885;
  t3907 = -1.*t590*t3898;
  t3908 = t3887 + t3907;
  t3910 = t590*t3885;
  t3917 = -1.*t504*t3898;
  t3921 = t3910 + t3917;
  t3972 = -1.*t590*t3885;
  t3977 = t504*t3898;
  t3978 = t3972 + t3977;
  t3367 = t406*t3350;
  t4034 = -1.*t322*t1961*t2810;
  t4036 = t4034 + t3367;
  t4028 = -1.*t504*t3753;
  t4040 = -1.*t590*t4036;
  t4042 = t4028 + t4040;
  t4047 = t590*t3753;
  t4048 = -1.*t504*t4036;
  t4051 = t4047 + t4048;
  t2815 = -0.2429*t289*t322*t2810;
  t2820 = 0.0817*t1606*t2810;
  t2836 = -1.*t322*t397*t403*t2810;
  t2841 = t2477*t1606*t2810;
  t2866 = t2836 + t2841;
  t2869 = 0.035199999999999995*t2866;
  t2929 = -0.2083*t2928;
  t2958 = -0.1422*t2953;
  t2960 = t1448*t2928;
  t2962 = t1112*t2953;
  t2964 = t2960 + t2962;
  t2969 = -0.02*t2964;
  t2972 = t1112*t2928;
  t2973 = t712*t2953;
  t2974 = t2972 + t2973;
  t2976 = -0.16*t2974;
  t2977 = t2815 + t2820 + t2869 + t2929 + t2958 + t2969 + t2976;
  t3337 = t322*t397*t2810;
  t3376 = t3337 + t3367;
  t3378 = 0.035199999999999995*t3376;
  t3387 = -0.2083*t590*t3385;
  t3388 = 0.1422*t504*t3385;
  t3390 = -1.*t1112*t504*t3385;
  t3401 = t590*t1448*t3385;
  t3402 = t3390 + t3401;
  t3404 = -0.02*t3402;
  t3410 = t590*t1112*t3385;
  t3414 = -1.*t504*t712*t3385;
  t3417 = t3410 + t3414;
  t3431 = -0.16*t3417;
  t3433 = t3378 + t3387 + t3388 + t3404 + t3431;
  t3760 = 0.035199999999999995*t397*t3753;
  t3774 = 0.2429*t3769;
  t3793 = -0.1422*t3789;
  t3808 = -0.2083*t3804;
  t3811 = t712*t3789;
  t3818 = t1112*t3804;
  t3839 = t3811 + t3818;
  t3841 = -0.16*t3839;
  t3844 = t1112*t3789;
  t3848 = t1448*t3804;
  t3851 = t3844 + t3848;
  t3855 = -0.02*t3851;
  t3859 = t3760 + t3774 + t3793 + t3808 + t3841 + t3855;
  t2434 = -0.0817*t322*t360;
  t3530 = 0.2429*t3519;
  t2503 = -1.*t2477*t322*t360;
  t4093 = t406*t3464;
  t4108 = t2584 + t4093;
  t4109 = t590*t4108;
  t4116 = t3548 + t4109;
  t4122 = -1.*t504*t4108;
  t4124 = t3540 + t4122;
  t4046 = -0.1422*t4042;
  t4056 = -0.2083*t4051;
  t4059 = t712*t4042;
  t4060 = t1112*t4051;
  t4062 = t4059 + t4060;
  t4064 = -0.16*t4062;
  t4065 = t1112*t4042;
  t4071 = t1448*t4051;
  t4072 = t4065 + t4071;
  t4073 = -0.02*t4072;
  t4077 = t4046 + t4056 + t4064 + t4073;
  t4163 = t504*t3753;
  t4168 = t590*t4036;
  t4175 = t4163 + t4168;
  t2157 = -1.*t694*t2156;
  t2184 = t1110*t2021;
  t2188 = t2157 + t2184;
  t2193 = -0.16*t2188;
  t2208 = -1.*t1110*t2156;
  t2212 = -1.*t694*t2021;
  t2234 = t2208 + t2212;
  t2310 = -0.02*t2234;
  t2315 = t2193 + t2310;
  t3212 = -1.*t1110*t504*t3164;
  t3218 = -1.*t590*t694*t3164;
  t3222 = t3212 + t3218;
  t3225 = -0.16*t3222;
  t3226 = -1.*t590*t1110*t3164;
  t3227 = t504*t694*t3164;
  t3233 = t3226 + t3227;
  t3239 = -0.02*t3233;
  t3245 = t3225 + t3239;
  t3707 = -1.*t694*t3706;
  t3708 = t1110*t3634;
  t3716 = t3707 + t3708;
  t3718 = -0.16*t3716;
  t3726 = -1.*t1110*t3706;
  t3732 = -1.*t694*t3634;
  t3733 = t3726 + t3732;
  t3737 = -0.02*t3733;
  t3740 = t3718 + t3737;
  t3909 = -1.*t694*t3908;
  t3931 = -1.*t1110*t3921;
  t3937 = t3909 + t3931;
  t3938 = -0.02*t3937;
  t3943 = t1110*t3908;
  t3959 = -1.*t694*t3921;
  t3960 = t3943 + t3959;
  t3961 = -0.16*t3960;
  t3964 = t3938 + t3961;
  t4231 = t504*t3885;
  t4232 = t590*t3898;
  t4233 = 0. + t4231 + t4232;
  t4235 = 0. + t3910 + t3917;
  t4177 = -1.*t694*t4175;
  t4179 = t1110*t4051;
  t4186 = t4177 + t4179;
  t4189 = -0.16*t4186;
  t4192 = -1.*t1110*t4175;
  t4208 = -1.*t694*t4051;
  t4211 = t4192 + t4208;
  t4212 = -0.02*t4211;
  t4215 = t4189 + t4212;
  t4277 = -1.*t406*t289*t322*t504*t2810;
  t4278 = -1.*t590*t322*t403*t2810;
  t4279 = t4277 + t4278;
  t4281 = t406*t590*t289*t322*t2810;
  t4285 = -1.*t322*t504*t403*t2810;
  t4286 = t4281 + t4285;
  t4315 = -1.*t360*t403;
  t4317 = t289*t1606*t2810;
  t4318 = t4315 + t4317;
  t4378 = -1.*t406*t504*t4318;
  t4380 = t590*t3350;
  t4383 = t4378 + t4380;
  t4397 = -1.*t406*t590*t4318;
  t4398 = -1.*t504*t3350;
  t4408 = t4397 + t4398;
  t4471 = t406*t590*t4318;
  t4479 = t504*t3350;
  t4480 = t4471 + t4479;
  t4508 = t406*t590*t3350;
  t4511 = t4163 + t4508;
  t4522 = -1.*t406*t504*t3350;
  t4524 = t4047 + t4522;
  t4570 = t406*t1606*t2810;
  t4572 = t2836 + t4570;
  t4322 = 0.035199999999999995*t406*t4318;
  t4323 = 0.2083*t590*t397*t4318;
  t4326 = -0.1422*t397*t504*t4318;
  t4327 = t1112*t397*t504*t4318;
  t4328 = -1.*t590*t397*t1448*t4318;
  t4331 = t4327 + t4328;
  t4333 = -0.02*t4331;
  t4334 = -1.*t590*t1112*t397*t4318;
  t4335 = t397*t504*t712*t4318;
  t4337 = t4334 + t4335;
  t4338 = -0.16*t4337;
  t4339 = t4322 + t4323 + t4326 + t4333 + t4338;
  t4663 = -1.*t406*t3769;
  t4664 = t3337 + t4663;
  t4673 = -1.*t406*t322*t2810;
  t4675 = -1.*t397*t3769;
  t4681 = t4673 + t4675;
  t4274 = 0.035199999999999995*t289*t322*t397*t2810;
  t4275 = -0.2429*t322*t403*t2810;
  t4280 = -0.1422*t4279;
  t4287 = -0.2083*t4286;
  t4290 = t712*t4279;
  t4295 = t1112*t4286;
  t4296 = t4290 + t4295;
  t4300 = -0.16*t4296;
  t4301 = t1112*t4279;
  t4303 = t1448*t4286;
  t4306 = t4301 + t4303;
  t4307 = -0.02*t4306;
  t4309 = t4274 + t4275 + t4280 + t4287 + t4300 + t4307;
  t4579 = -0.2083*t590*t4572;
  t4580 = 0.1422*t504*t4572;
  t4582 = t406*t322*t403*t2810;
  t4589 = t397*t1606*t2810;
  t4590 = t4582 + t4589;
  t4591 = 0.035199999999999995*t4590;
  t4595 = -1.*t1112*t504*t4572;
  t4599 = t590*t1448*t4572;
  t4603 = t4595 + t4599;
  t4604 = -0.02*t4603;
  t4605 = t590*t1112*t4572;
  t4616 = -1.*t504*t712*t4572;
  t4617 = t4605 + t4616;
  t4621 = -0.16*t4617;
  t4624 = t4579 + t4580 + t4591 + t4604 + t4621;
  t4824 = -1.*t1961*t1606*t2810;
  t4825 = t4582 + t4824;
  t4827 = -1.*t590*t4825;
  t4830 = t2872 + t4827;
  t4832 = t590*t289*t322*t2810;
  t4833 = -1.*t504*t4825;
  t4834 = t4832 + t4833;
  t4873 = t289*t322*t504*t2810;
  t4877 = t590*t4825;
  t4878 = t4873 + t4877;
  t4918 = -1.*t406*t403*t1606*t2810;
  t4921 = t4034 + t4918;
  t4910 = -1.*t289*t504*t1606*t2810;
  t4924 = t590*t4921;
  t4926 = t4910 + t4924;
  t4929 = -1.*t590*t289*t1606*t2810;
  t4939 = -1.*t504*t4921;
  t4941 = t4929 + t4939;
  t4755 = 0.2429*t289*t322*t360;
  t4763 = -0.0817*t360*t1606;
  t4767 = t322*t360*t397*t403;
  t4768 = -1.*t2477*t360*t1606;
  t4769 = t4767 + t4768;
  t4775 = 0.035199999999999995*t4769;
  t4781 = -0.2083*t2156;
  t4782 = -0.1422*t2021;
  t4785 = t1448*t2156;
  t4795 = t4785 + t2041;
  t4796 = -0.02*t4795;
  t4798 = t1112*t2156;
  t4800 = t712*t2021;
  t4802 = t4798 + t4800;
  t4808 = -0.16*t4802;
  t4812 = t4755 + t4763 + t4775 + t4781 + t4782 + t4796 + t4808;
  t4634 = -1.*t322*t360*t397;
  t4638 = t4634 + t3897;
  t4641 = 0.035199999999999995*t4638;
  t4642 = -0.2083*t590*t3164;
  t4643 = 0.1422*t504*t3164;
  t4644 = t590*t1448*t3164;
  t4645 = t3326 + t4644;
  t4646 = -0.02*t4645;
  t4650 = t590*t1112*t3164;
  t4651 = -1.*t504*t712*t3164;
  t4654 = t4650 + t4651;
  t4656 = -0.16*t4654;
  t4661 = t4641 + t4642 + t4643 + t4646 + t4656;
  t4341 = 0.2429*t3464;
  t4342 = 0.035199999999999995*t397*t3055;
  t4343 = -0.2083*t3706;
  t4350 = -0.1422*t3634;
  t4351 = t1448*t3706;
  t4353 = t4351 + t3652;
  t4354 = -0.02*t4353;
  t4356 = t1112*t3706;
  t4358 = t712*t3634;
  t4362 = t4356 + t4358;
  t4365 = -0.16*t4362;
  t4370 = t4341 + t4342 + t4343 + t4350 + t4354 + t4365;
  t5015 = t3891 + t3897;
  t5009 = -1.*t504*t3055;
  t5021 = -1.*t590*t5015;
  t5024 = t5009 + t5021;
  t5029 = t590*t3055;
  t5031 = -1.*t504*t5015;
  t5034 = t5029 + t5031;
  t5066 = t504*t3055;
  t5067 = t590*t5015;
  t5076 = t5066 + t5067;
  t4896 = -0.0817*t322*t2810;
  t4502 = 0.2429*t3753;
  t4899 = -1.*t2477*t322*t2810;
  t4879 = -1.*t694*t4878;
  t4880 = t1110*t4834;
  t4886 = t4879 + t4880;
  t4887 = -0.16*t4886;
  t4888 = -1.*t1110*t4878;
  t4889 = -1.*t694*t4834;
  t4891 = t4888 + t4889;
  t4893 = -0.02*t4891;
  t4894 = t4887 + t4893;
  t4470 = -1.*t694*t4383;
  t4481 = -1.*t1110*t4480;
  t4482 = t4470 + t4481;
  t4484 = -0.02*t4482;
  t4490 = t1110*t4383;
  t4492 = -1.*t694*t4480;
  t4495 = t4490 + t4492;
  t4496 = -0.16*t4495;
  t4498 = t4484 + t4496;
  t4713 = -1.*t1110*t504*t4681;
  t4714 = -1.*t590*t694*t4681;
  t4716 = t4713 + t4714;
  t4718 = -0.16*t4716;
  t4720 = -1.*t590*t1110*t4681;
  t4722 = t504*t694*t4681;
  t4723 = t4720 + t4722;
  t4726 = -0.02*t4723;
  t4727 = t4718 + t4726;
  t5083 = -1.*t694*t5076;
  t5085 = t1110*t5034;
  t5088 = t5083 + t5085;
  t5089 = -0.16*t5088;
  t5096 = -1.*t1110*t5076;
  t5114 = -1.*t694*t5034;
  t5115 = t5096 + t5114;
  t5123 = -0.02*t5115;
  t5136 = t5089 + t5123;
  t5210 = 0. + t4315 + t4317;
  t5213 = t322*t1961*t2810;
  t5216 = t406*t3769;
  t5219 = 0. + t5213 + t5216;
  t5211 = -1.*t504*t5210;
  t5221 = -1.*t590*t5219;
  t5222 = t5211 + t5221;
  t5228 = t590*t5210;
  t5231 = -1.*t504*t5219;
  t5232 = t5228 + t5231;
  t5250 = t504*t5210;
  t5253 = t590*t5219;
  t5255 = 0. + t5250 + t5253;
  t5264 = 0. + t5228 + t5231;
  t4831 = -0.1422*t4830;
  t4838 = -0.2083*t4834;
  t4840 = t712*t4830;
  t4842 = t1112*t4834;
  t4843 = t4840 + t4842;
  t4844 = -0.16*t4843;
  t4845 = t1112*t4830;
  t4846 = t1448*t4834;
  t4851 = t4845 + t4846;
  t4855 = -0.02*t4851;
  t4856 = t4831 + t4838 + t4844 + t4855;
  t4390 = -0.2083*t4383;
  t4409 = -0.1422*t4408;
  t4427 = t1448*t4383;
  t4433 = t1112*t4408;
  t4434 = t4427 + t4433;
  t4445 = -0.02*t4434;
  t4446 = t1112*t4383;
  t4448 = t712*t4408;
  t4450 = t4446 + t4448;
  t4451 = -0.16*t4450;
  t4457 = t4390 + t4409 + t4445 + t4451;
  t4730 = 0.1422*t590*t4681;
  t4731 = 0.2083*t504*t4681;
  t4732 = -1.*t590*t1112*t4681;
  t4734 = -1.*t504*t1448*t4681;
  t4735 = t4732 + t4734;
  t4737 = -0.02*t4735;
  t4739 = -1.*t1112*t504*t4681;
  t4740 = -1.*t590*t712*t4681;
  t4741 = t4739 + t4740;
  t4743 = -0.16*t4741;
  t4745 = t4730 + t4731 + t4737 + t4743;
  t5027 = -0.1422*t5024;
  t5035 = -0.2083*t5034;
  t5037 = t712*t5024;
  t5038 = t1112*t5034;
  t5039 = t5037 + t5038;
  t5041 = -0.16*t5039;
  t5043 = t1112*t5024;
  t5046 = t1448*t5034;
  t5047 = t5043 + t5046;
  t5049 = -0.02*t5047;
  t5052 = t5027 + t5035 + t5041 + t5049;
  t5224 = -1.*t694*t5222;
  t5233 = -1.*t1110*t5232;
  t5236 = t5224 + t5233;
  t5237 = -0.02*t5236;
  t5238 = t1110*t5222;
  t5240 = -1.*t694*t5232;
  t5241 = t5238 + t5240;
  t5244 = -0.16*t5241;
  t5248 = t5237 + t5244;
  t5328 = -1.*t590*t5210;
  t5329 = t504*t5219;
  t5332 = t5328 + t5329;
  t5438 = -1.*t322*t397*t403;
  t5439 = t406*t1606;
  t5440 = t5438 + t5439;
  t5520 = -1.*t406*t322*t403;
  t5524 = -1.*t397*t1606;
  t5528 = t5520 + t5524;
  t5568 = t406*t322;
  t5569 = t397*t403*t1606;
  t5572 = t5568 + t5569;
  t5399 = 0.035199999999999995*t406*t289*t322;
  t5404 = 0.2083*t590*t289*t322*t397;
  t5407 = -0.1422*t289*t322*t397*t504;
  t5412 = t1112*t289*t322*t397*t504;
  t5414 = -1.*t590*t289*t322*t397*t1448;
  t5418 = t5412 + t5414;
  t5420 = -0.02*t5418;
  t5421 = -1.*t590*t1112*t289*t322*t397;
  t5423 = t289*t322*t397*t504*t712;
  t5424 = t5421 + t5423;
  t5426 = -0.16*t5424;
  t5434 = t5399 + t5404 + t5407 + t5420 + t5426;
  t5607 = -1.*t406*t289*t322*t504;
  t5609 = -1.*t590*t322*t403;
  t5611 = t5607 + t5609;
  t5613 = t406*t590*t289*t322;
  t5614 = -1.*t322*t504*t403;
  t5620 = t5613 + t5614;
  t5655 = -1.*t406*t590*t289*t322;
  t5661 = t322*t504*t403;
  t5668 = t5655 + t5661;
  t5719 = -1.*t289*t322*t504;
  t5720 = -1.*t406*t590*t322*t403;
  t5722 = t5719 + t5720;
  t5725 = -1.*t590*t289*t322;
  t5735 = t406*t322*t504*t403;
  t5736 = t5725 + t5735;
  t5797 = t406*t289*t504*t1606;
  t5799 = t590*t403*t1606;
  t5806 = t5797 + t5799;
  t5813 = -1.*t406*t590*t289*t1606;
  t5814 = t504*t403*t1606;
  t5818 = t5813 + t5814;
  t5648 = -0.2083*t5611;
  t5669 = -0.1422*t5668;
  t5672 = t1448*t5611;
  t5673 = t1112*t5668;
  t5675 = t5672 + t5673;
  t5676 = -0.02*t5675;
  t5678 = t1112*t5611;
  t5698 = t712*t5668;
  t5700 = t5678 + t5698;
  t5701 = -0.16*t5700;
  t5702 = t5648 + t5669 + t5676 + t5701;
  t5461 = 0.1422*t590*t5440;
  t5466 = 0.2083*t504*t5440;
  t5469 = -1.*t590*t1112*t5440;
  t5470 = -1.*t504*t1448*t5440;
  t5493 = t5469 + t5470;
  t5498 = -0.02*t5493;
  t5500 = -1.*t1112*t504*t5440;
  t5504 = -1.*t590*t712*t5440;
  t5505 = t5500 + t5504;
  t5512 = -0.16*t5505;
  t5514 = t5461 + t5466 + t5498 + t5512;
  t5874 = t289*t322;
  t5875 = 0. + t5874;
  t5879 = t406*t322*t403;
  t5880 = -1.*t1961*t1606;
  t5881 = 0. + t5879 + t5880;
  t5876 = -1.*t5875*t504;
  t5884 = -1.*t590*t5881;
  t5886 = t5876 + t5884;
  t5893 = t590*t5875;
  t5896 = -1.*t504*t5881;
  t5897 = t5893 + t5896;
  t5933 = -1.*t590*t5875;
  t5934 = t504*t5881;
  t5938 = t5933 + t5934;
  t5564 = -1.*t406*t403*t1606;
  t5972 = -1.*t322*t1961;
  t5975 = t5972 + t5564;
  t5958 = t289*t504*t1606;
  t5980 = -1.*t590*t5975;
  t5982 = t5958 + t5980;
  t5984 = -1.*t590*t289*t1606;
  t5992 = -1.*t504*t5975;
  t5996 = t5984 + t5992;
  t5561 = t322*t397;
  t5565 = t5561 + t5564;
  t5567 = 0.035199999999999995*t5565;
  t5574 = -0.2083*t590*t5572;
  t5577 = 0.1422*t504*t5572;
  t5578 = -1.*t1112*t504*t5572;
  t5579 = t590*t1448*t5572;
  t5580 = t5578 + t5579;
  t5584 = -0.02*t5580;
  t5585 = t590*t1112*t5572;
  t5588 = -1.*t504*t712*t5572;
  t5596 = t5585 + t5588;
  t5597 = -0.16*t5596;
  t5600 = t5567 + t5574 + t5577 + t5584 + t5597;
  t5791 = -0.035199999999999995*t289*t397*t1606;
  t5795 = 0.2429*t403*t1606;
  t5812 = -0.1422*t5806;
  t5822 = -0.2083*t5818;
  t5824 = t712*t5806;
  t5825 = t1112*t5818;
  t5828 = t5824 + t5825;
  t5829 = -0.16*t5828;
  t5835 = t1112*t5806;
  t5836 = t1448*t5818;
  t5838 = t5835 + t5836;
  t5839 = -0.02*t5838;
  t5840 = t5791 + t5795 + t5812 + t5822 + t5829 + t5839;
  t5717 = -0.2429*t289*t322;
  t6059 = t1961*t1606;
  t6060 = t5520 + t6059;
  t6062 = t590*t6060;
  t6063 = t5719 + t6062;
  t6066 = -1.*t504*t6060;
  t6068 = t5725 + t6066;
  t5983 = -0.1422*t5982;
  t6007 = -0.2083*t5996;
  t6013 = t712*t5982;
  t6014 = t1112*t5996;
  t6015 = t6013 + t6014;
  t6019 = -0.16*t6015;
  t6022 = t1112*t5982;
  t6025 = t1448*t5996;
  t6028 = t6022 + t6025;
  t6030 = -0.02*t6028;
  t6033 = t5983 + t6007 + t6019 + t6030;
  t6103 = -1.*t289*t504*t1606;
  t6104 = t590*t5975;
  t6105 = t6103 + t6104;
  t5612 = -1.*t694*t5611;
  t5621 = -1.*t1110*t5620;
  t5623 = t5612 + t5621;
  t5628 = -0.02*t5623;
  t5631 = t1110*t5611;
  t5634 = -1.*t694*t5620;
  t5636 = t5631 + t5634;
  t5639 = -0.16*t5636;
  t5640 = t5628 + t5639;
  t5443 = -1.*t1110*t504*t5440;
  t5444 = -1.*t590*t694*t5440;
  t5445 = t5443 + t5444;
  t5446 = -0.16*t5445;
  t5447 = -1.*t590*t1110*t5440;
  t5454 = t504*t694*t5440;
  t5457 = t5447 + t5454;
  t5458 = -0.02*t5457;
  t5459 = t5446 + t5458;
  t5887 = -1.*t694*t5886;
  t5899 = -1.*t1110*t5897;
  t5901 = t5887 + t5899;
  t5902 = -0.02*t5901;
  t5905 = t1110*t5886;
  t5909 = -1.*t694*t5897;
  t5917 = t5905 + t5909;
  t5921 = -0.16*t5917;
  t5925 = t5902 + t5921;
  t6138 = t5875*t504;
  t6139 = t590*t5881;
  t6140 = 0. + t6138 + t6139;
  t6142 = 0. + t5893 + t5896;
  t6107 = -1.*t694*t6105;
  t6108 = t1110*t5996;
  t6111 = t6107 + t6108;
  t6117 = -0.16*t6111;
  t6119 = -1.*t1110*t6105;
  t6120 = -1.*t694*t5996;
  t6121 = t6119 + t6120;
  t6123 = -0.02*t6121;
  t6126 = t6117 + t6123;
  t6176 = t1448*t6140;
  t6177 = t1112*t6142;
  t6181 = 0. + t6176 + t6177;
  t6191 = t1112*t6140;
  t6196 = t712*t6142;
  t6197 = 0. + t6191 + t6196;
  t6183 = t1448*t5620;
  t6184 = t5678 + t6183;
  t6185 = 2.*t6184*t6181;
  t6186 = t712*t5611;
  t6188 = t1112*t5620;
  t6189 = t6186 + t6188;
  t6198 = 2.*t6189*t6197;
  t6200 = t6185 + t6198;
  t6201 = Power(t6181,2);
  t6202 = Power(t6197,2);
  t6205 = t6201 + t6202;
  t6212 = Power(t6205,-2);
  t6216 = t590*t1448*t5440;
  t6221 = t5500 + t6216;
  t6168 = t590*t1112*t5440;
  t6171 = -1.*t504*t712*t5440;
  t6175 = t6168 + t6171;
  t6242 = 1/t6205;
  t6222 = -1.*t1112*t6140;
  t6225 = -1.*t712*t6142;
  t6229 = 0. + t6222 + t6225;
  t6149 = -1.*t1110*t6140;
  t6150 = -1.*t694*t6142;
  t6153 = t6149 + t6150;
  t6259 = -1.*t694*t6140;
  t6260 = t1110*t6142;
  t6261 = t6259 + t6260;
  t6233 = -1.*t712*t5611;
  t6234 = -1.*t1112*t5620;
  t6240 = t6233 + t6234;
  t5948 = t1112*t5886;
  t6277 = t712*t5886;
  t6278 = t1112*t5897;
  t6280 = t6277 + t6278;
  t6283 = t1448*t5897;
  t6284 = t5948 + t6283;
  t5764 = t1112*t5722;
  t5768 = t712*t5736;
  t5769 = t5764 + t5768;
  t5751 = t1448*t5722;
  t5756 = t1112*t5736;
  t5757 = t5751 + t5756;
  t6321 = t1448*t6105;
  t6326 = t6321 + t6014;
  t6329 = t1112*t6105;
  t6330 = t712*t5996;
  t6340 = t6329 + t6330;
  t6367 = 2.*t6221*t6181;
  t6370 = 2.*t6175*t6197;
  t6371 = t6367 + t6370;
  t6251 = t5424*t6181*t6242;
  t6252 = t5418*t6229*t6242;
  t6380 = t504*t712*t5440;
  t6381 = t5469 + t6380;
  t5548 = t590*t1112*t5528;
  t5553 = -1.*t504*t712*t5528;
  t5555 = t5548 + t5553;
  t5531 = -1.*t1112*t504*t5528;
  t5535 = t590*t1448*t5528;
  t5543 = t5531 + t5535;
  t6471 = 2.*t6284*t6181;
  t6474 = 2.*t6280*t6197;
  t6482 = t6471 + t6474;
  t6293 = t5700*t6181*t6242;
  t6303 = t5675*t6229*t6242;
  t6487 = -1.*t712*t5886;
  t6489 = -1.*t1112*t5897;
  t6492 = t6487 + t6489;
  t6390 = t5505*t6181*t6242;
  t6391 = t5493*t6229*t6242;
  t5940 = t1448*t5886;
  t5944 = t1112*t5938;
  t5946 = t5940 + t5944;
  t5949 = t712*t5938;
  t5950 = t5948 + t5949;
  t6568 = 2.*t6181*t6153;
  t6569 = 2.*t6261*t6197;
  t6572 = t6568 + t6569;
  t6141 = t694*t6140;
  t6143 = -1.*t1110*t6142;
  t6144 = t6141 + t6143;
  t6267 = t5636*t6181*t6242;
  t6269 = t5623*t6229*t6242;
  t6401 = t5445*t6181*t6242;
  t6404 = t5457*t6229*t6242;
  t6526 = t5917*t6181*t6242;
  t6530 = t5901*t6229*t6242;
  t6347 = t5828*t6181*t6242;
  t6348 = t5838*t6229*t6242;
  t6675 = 2.*t6181*t6326;
  t6678 = 2.*t6197*t6340;
  t6680 = t6675 + t6678;
  t6457 = t5596*t6181*t6242;
  t6458 = t5580*t6229*t6242;
  t6664 = -1.*t1112*t6105;
  t6668 = -1.*t712*t5996;
  t6671 = t6664 + t6668;
  t6554 = t6181*t6015*t6242;
  t6558 = t6229*t6028*t6242;
  t6646 = t6181*t6111*t6242;
  t6650 = t6229*t6121*t6242;
  t6074 = t1448*t6063;
  t6075 = t1112*t6068;
  t6077 = t6074 + t6075;
  t6082 = t1112*t6063;
  t6083 = t712*t6068;
  t6090 = t6082 + t6083;
  t6052 = t2477*t1606;
  t6769 = t322*t397*t403;
  t6771 = -1.*t2477*t1606;
  t6773 = 0. + t6769 + t6771;
  t6779 = 1/Sqrt(t6205);
  t6781 = 0. + t5438 + t6052;
  t6784 = Power(t6781,2);
  t6789 = t6784 + t6201 + t6202;
  t6795 = Power(t6789,-2);
  t6778 = Power(t6482,2);
  t6802 = Power(t6205,-1.5);
  t6803 = 1/t6789;
  t6845 = Sqrt(t6205);
  t6907 = t2477*t322;
  t6908 = t6907 + t5569;
  t6945 = Power(t6572,2);
  t6815 = 2.*t6280*t6261;
  t6816 = 2.*t5901*t6181;
  t6818 = 2.*t6284*t6153;
  t6819 = 2.*t5917*t6197;
  t6820 = t6815 + t6816 + t6818 + t6819;
  t7085 = -2.*t289*t322*t397*t6781;
  t7087 = t7085 + t6185 + t6198;
  t6991 = 2.*t6189*t6261;
  t6992 = 2.*t5623*t6181;
  t6999 = 2.*t6184*t6153;
  t7009 = 2.*t5636*t6197;
  t7013 = t6991 + t6992 + t6999 + t7009;
  t6852 = 2.*t6189*t6280;
  t6859 = 2.*t6184*t6284;
  t6860 = 2.*t5675*t6181;
  t6861 = 2.*t5700*t6197;
  t6862 = t6852 + t6859 + t6860 + t6861;
  t7216 = 2.*t6781*t5528;
  t7219 = t7216 + t6367 + t6370;
  t7032 = 2.*t6175*t6261;
  t7034 = 2.*t5457*t6181;
  t7035 = 2.*t6221*t6153;
  t7036 = 2.*t5445*t6197;
  t7038 = t7032 + t7034 + t7035 + t7036;
  t6889 = 2.*t6175*t6280;
  t6892 = 2.*t6221*t6284;
  t6898 = 2.*t5493*t6181;
  t6899 = 2.*t5505*t6197;
  t6900 = t6889 + t6892 + t6898 + t6899;
  t7241 = t397*t1606;
  t7242 = t5879 + t7241;
  t7120 = -0.25*t6773*t6200*t6371*t6802*t6803;
  t7124 = 2.*t6184*t6221;
  t7125 = 2.*t6189*t6175;
  t7126 = 2.*t5418*t6181;
  t7131 = 2.*t5424*t6197;
  t7132 = t7124 + t7125 + t7126 + t7131;
  t7133 = 0.5*t6773*t7132*t6779*t6803;
  t7142 = -1.*t406*t289*t322*t6845*t6803;
  t7356 = -1.*t2477*t322;
  t7360 = -1.*t397*t403*t1606;
  t7361 = t7356 + t7360;
  t6913 = 2.*t6197*t6015;
  t6915 = 2.*t6284*t6326;
  t6917 = 2.*t6181*t6028;
  t6918 = 2.*t6280*t6340;
  t6919 = t6913 + t6915 + t6917 + t6918;
  t7056 = 2.*t6197*t6111;
  t7057 = 2.*t6153*t6326;
  t7058 = 2.*t6181*t6121;
  t7060 = 2.*t6261*t6340;
  t7061 = t7056 + t7057 + t7058 + t7060;
  t7375 = 2.*t6781*t6908;
  t7381 = t7375 + t6675 + t6678;
  t7176 = t289*t397*t1606*t6845*t6803;
  t7178 = 2.*t5838*t6181;
  t7181 = 2.*t5828*t6197;
  t7182 = 2.*t6184*t6326;
  t7193 = 2.*t6189*t6340;
  t7196 = t7178 + t7181 + t7182 + t7193;
  t7199 = 0.5*t6773*t6779*t6803*t7196;
  t7202 = -0.25*t6773*t6200*t6802*t6803*t6680;
  t7319 = -1.*t322*t397;
  t7320 = t406*t403*t1606;
  t7323 = t7319 + t7320;
  t7324 = t7323*t6845*t6803;
  t7327 = 2.*t5580*t6181;
  t7328 = 2.*t5596*t6197;
  t7329 = 2.*t6221*t6326;
  t7332 = 2.*t6175*t6340;
  t7333 = t7327 + t7328 + t7329 + t7332;
  t7334 = 0.5*t6773*t6779*t6803*t7333;
  t7339 = -0.25*t6773*t6371*t6802*t6803*t6680;
  t7461 = t2477*t322*t360;
  t7471 = t397*t3102;
  t7481 = 0. + t7461 + t7471;
  t7488 = t2477*t322*t2810;
  t7489 = t397*t3769;
  t7491 = 0. + t7488 + t7489;
  t7482 = 2.*t4769*t7481;
  t7483 = t322*t397*t403*t2810;
  t7485 = -1.*t2477*t1606*t2810;
  t7487 = t7483 + t7485;
  t7492 = 2.*t7487*t7491;
  t7493 = t7482 + t7492;
  t7495 = Power(t7481,2);
  t7496 = Power(t7491,2);
  t7500 = t7495 + t7496;
  t7502 = Power(t7500,-2);
  t7512 = 1/t7500;
  t7504 = 0. + t4899 + t4675;
  t7532 = -1.*t322*t397*t2810;
  t7535 = t7532 + t5216;
  t4900 = -1.*t397*t403*t1606*t2810;
  t4902 = t4899 + t4900;
  t2514 = -1.*t360*t397*t403*t1606;
  t2560 = t2503 + t2514;
  t5144 = t397*t3350;
  t5145 = t4899 + t5144;
  t7569 = t7461 + t7471;
  t7583 = 2.*t397*t3055*t7481;
  t7584 = 2.*t397*t4318*t7491;
  t7585 = t7583 + t7584;
  t7526 = t289*t322*t397*t2810*t7481*t7512;
  t7527 = t289*t322*t360*t397*t7504*t7512;
  t7641 = 2.*t4638*t7481;
  t7644 = 2.*t7535*t7491;
  t7649 = t7641 + t7644;
  t7541 = t4590*t7481*t7512;
  t7548 = t1709*t7504*t7512;
  t7620 = t406*t4318*t7481*t7512;
  t7623 = t406*t3055*t7504*t7512;
  t7741 = 2.*t7481*t5145;
  t7742 = 2.*t7569*t7491;
  t7746 = t7741 + t7742;
  t7575 = t4769*t7481*t7512;
  t7577 = t2866*t7504*t7512;
  t7751 = t2503 + t3154;
  t7629 = t397*t3055*t7481*t7512;
  t7631 = t397*t3753*t7504*t7512;
  t4089 = t397*t3464;
  t4090 = t2503 + t4089;
  t7712 = t4638*t7481*t7512;
  t7720 = t3376*t7504*t7512;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=var2[4]*(t1519*var2[3] + (t2434 + 0.035199999999999995*t2560 - 0.2083*t2649 - 0.1422*t2680 - 0.02*(t1448*t2649 + t1112*t2680) - 0.2429*t1606*t289*t360 - 0.16*(t1112*t2649 + t2680*t712))*var2[4] + t2977*var2[5] + t1909*var2[9] + t2094*var2[10] + t2315*var2[11]) + var2[9]*(t3086*var2[3] + t1909*var2[4] + t3433*var2[5] + (0.035199999999999995*t3164 + 0.1422*t3134*t504 - 0.2083*t3134*t590 - 0.02*(-1.*t1112*t3134*t504 + t1448*t3134*t590) - 0.16*(t1112*t3134*t590 - 1.*t3134*t504*t712))*var2[9] + t3334*var2[10] + t3245*var2[11]) + var2[3]*((t3530 - 0.1422*t3541 - 0.2083*t3563 - 0.02*(t1112*t3541 + t1448*t3563) + 0.035199999999999995*t3464*t397 - 0.16*(t1112*t3563 + t3541*t712))*var2[3] + t1519*var2[4] + t3859*var2[5] + t3086*var2[9] + t3674*var2[10] + t3740*var2[11]) + var2[10]*(t3674*var2[3] + t2094*var2[4] + t4077*var2[5] + t3334*var2[9] + (-0.2083*t3908 - 0.1422*t3978 - 0.02*(t1448*t3908 + t1112*t3978) - 0.16*(t1112*t3908 + t3978*t712))*var2[10] + t3964*var2[11]) + var2[5]*(t3859*var2[3] + t2977*var2[4] + (t2434 + t3530 + 0.035199999999999995*t4090 - 0.2083*t4116 - 0.1422*t4124 - 0.02*(t1448*t4116 + t1112*t4124) - 0.16*(t1112*t4116 + t4124*t712))*var2[5] + t3433*var2[9] + t4077*var2[10] + t4215*var2[11]) + var2[11]*(t3740*var2[3] + t2315*var2[4] + t4215*var2[5] + t3245*var2[9] + t3964*var2[10] + (-0.02*(-1.*t1110*t4235 + t4233*t694) - 0.16*(-1.*t1110*t4233 - 1.*t4235*t694))*var2[11]);
  p_output1[4]=var2[3]*((0.035199999999999995*t3350*t397 + t4502 - 0.2083*t4511 - 0.1422*t4524 - 0.02*(t1448*t4511 + t1112*t4524) - 0.16*(t1112*t4511 + t4524*t712))*var2[3] + t4309*var2[4] + t4370*var2[5] + t4339*var2[9] + t4457*var2[10] + t4498*var2[11]) + var2[9]*(t4339*var2[3] + t4624*var2[4] + t4661*var2[5] + (0.035199999999999995*t4681 + 0.1422*t4664*t504 - 0.2083*t4664*t590 - 0.02*(-1.*t1112*t4664*t504 + t1448*t4664*t590) - 0.16*(t1112*t4664*t590 - 1.*t4664*t504*t712))*var2[9] + t4745*var2[10] + t4727*var2[11]) + var2[4]*(t4309*var2[3] + (-0.2429*t1606*t2810*t289 + t4896 + 0.035199999999999995*t4902 - 0.2083*t4926 - 0.1422*t4941 - 0.02*(t1448*t4926 + t1112*t4941) - 0.16*(t1112*t4926 + t4941*t712))*var2[4] + t4812*var2[5] + t4624*var2[9] + t4856*var2[10] + t4894*var2[11]) + var2[5]*(t4370*var2[3] + t4812*var2[4] + (-0.1422*t4051 - 0.2083*t4175 - 0.02*(t4060 + t1448*t4175) + t4502 + t4896 + 0.035199999999999995*t5145 - 0.16*(t1112*t4175 + t4051*t712))*var2[5] + t4661*var2[9] + t5052*var2[10] + t5136*var2[11]) + var2[10]*(t4457*var2[3] + t4856*var2[4] + t5052*var2[5] + t4745*var2[9] + (-0.2083*t5222 - 0.1422*t5332 - 0.02*(t1448*t5222 + t1112*t5332) - 0.16*(t1112*t5222 + t5332*t712))*var2[10] + t5248*var2[11]) + var2[11]*(t4498*var2[3] + t4894*var2[4] + t5136*var2[5] + t4727*var2[9] + t5248*var2[10] + (-0.02*(-1.*t1110*t5264 + t5255*t694) - 0.16*(-1.*t1110*t5255 - 1.*t5264*t694))*var2[11]);
  p_output1[5]=var2[9]*(t5434*var2[3] + t5600*var2[4] + (0.035199999999999995*t5440 + 0.1422*t504*t5528 - 0.02*t5543 - 0.16*t5555 - 0.2083*t5528*t590)*var2[9] + t5514*var2[10] + t5459*var2[11]) + var2[3]*((-0.035199999999999995*t322*t397*t403 + t5717 - 0.2083*t5722 - 0.1422*t5736 - 0.02*t5757 - 0.16*t5769)*var2[3] + t5840*var2[4] + t5434*var2[9] + t5702*var2[10] + t5640*var2[11]) + var2[10]*(t5702*var2[3] + t6033*var2[4] + t5514*var2[9] + (-0.2083*t5886 - 0.1422*t5938 - 0.02*t5946 - 0.16*t5950)*var2[10] + t5925*var2[11]) + var2[4]*(t5840*var2[3] + (0.0817*t1606 + t5717 + 0.035199999999999995*(t5438 + t6052) - 0.2083*t6063 - 0.1422*t6068 - 0.02*t6077 - 0.16*t6090)*var2[4] + t5600*var2[9] + t6033*var2[10] + t6126*var2[11]) + var2[11]*(t5640*var2[3] + t6126*var2[4] + t5459*var2[9] + t5925*var2[10] + (-0.02*t6144 - 0.16*t6153)*var2[11]);
  p_output1[6]=var2[3]*((-1.*t6181*t6189*t6200*t6212 - 1.*t6184*t6200*t6212*t6229 + t5769*t6181*t6242 + t6184*t6189*t6242 + t5757*t6229*t6242 + t6184*t6240*t6242)*var2[3] + (-1.*t6200*t6212*t6229*t6326 + t6240*t6242*t6326 - 1.*t6181*t6200*t6212*t6340 + t6184*t6242*t6340 + t6347 + t6348)*var2[4] + (-1.*t6175*t6181*t6200*t6212 - 1.*t6200*t6212*t6221*t6229 + t6175*t6184*t6242 + t6221*t6240*t6242 + t6251 + t6252)*var2[9] + (-1.*t6181*t6200*t6212*t6280 + t6184*t6242*t6280 - 1.*t6200*t6212*t6229*t6284 + t6240*t6242*t6284 + t6293 + t6303)*var2[10] + (-1.*t6153*t6200*t6212*t6229 + t6153*t6240*t6242 - 1.*t6181*t6200*t6212*t6261 + t6184*t6242*t6261 + t6267 + t6269)*var2[11]) + var2[9]*((t6189*t6221*t6242 + t6251 + t6252 - 1.*t6181*t6189*t6212*t6371 - 1.*t6184*t6212*t6229*t6371 + t6184*t6242*t6381)*var2[3] + (t6221*t6242*t6340 - 1.*t6212*t6229*t6326*t6371 - 1.*t6181*t6212*t6340*t6371 + t6242*t6326*t6381 + t6457 + t6458)*var2[4] + (t5555*t6181*t6242 + t6175*t6221*t6242 + t5543*t6229*t6242 - 1.*t6175*t6181*t6212*t6371 - 1.*t6212*t6221*t6229*t6371 + t6221*t6242*t6381)*var2[9] + (t6221*t6242*t6280 - 1.*t6181*t6212*t6280*t6371 - 1.*t6212*t6229*t6284*t6371 + t6242*t6284*t6381 + t6390 + t6391)*var2[10] + (t6221*t6242*t6261 - 1.*t6153*t6212*t6229*t6371 - 1.*t6181*t6212*t6261*t6371 + t6153*t6242*t6381 + t6401 + t6404)*var2[11]) + var2[10]*((t6189*t6242*t6284 + t6293 + t6303 - 1.*t6181*t6189*t6212*t6482 - 1.*t6184*t6212*t6229*t6482 + t6184*t6242*t6492)*var2[3] + (t6242*t6284*t6340 - 1.*t6212*t6229*t6326*t6482 - 1.*t6181*t6212*t6340*t6482 + t6242*t6326*t6492 + t6554 + t6558)*var2[4] + (t6175*t6242*t6284 + t6390 + t6391 - 1.*t6175*t6181*t6212*t6482 - 1.*t6212*t6221*t6229*t6482 + t6221*t6242*t6492)*var2[9] + (t5950*t6181*t6242 + t5946*t6229*t6242 + t6242*t6280*t6284 - 1.*t6181*t6212*t6280*t6482 - 1.*t6212*t6229*t6284*t6482 + t6242*t6284*t6492)*var2[10] + (t6242*t6261*t6284 - 1.*t6153*t6212*t6229*t6482 - 1.*t6181*t6212*t6261*t6482 + t6153*t6242*t6492 + t6526 + t6530)*var2[11]) + var2[11]*((t6144*t6184*t6242 + t6153*t6189*t6242 + t6267 + t6269 - 1.*t6181*t6189*t6212*t6572 - 1.*t6184*t6212*t6229*t6572)*var2[3] + (t6144*t6242*t6326 + t6153*t6242*t6340 - 1.*t6212*t6229*t6326*t6572 - 1.*t6181*t6212*t6340*t6572 + t6646 + t6650)*var2[4] + (t6153*t6175*t6242 + t6144*t6221*t6242 + t6401 + t6404 - 1.*t6175*t6181*t6212*t6572 - 1.*t6212*t6221*t6229*t6572)*var2[9] + (t6153*t6242*t6280 + t6144*t6242*t6284 + t6526 + t6530 - 1.*t6181*t6212*t6280*t6572 - 1.*t6212*t6229*t6284*t6572)*var2[10] + (t6144*t6153*t6242 + t6153*t6181*t6242 + t6144*t6229*t6242 + t6153*t6242*t6261 - 1.*t6153*t6212*t6229*t6572 - 1.*t6181*t6212*t6261*t6572)*var2[11]) + var2[4]*((t6189*t6242*t6326 + t6347 + t6348 + t6184*t6242*t6671 - 1.*t6181*t6189*t6212*t6680 - 1.*t6184*t6212*t6229*t6680)*var2[3] + (t6090*t6181*t6242 + t6077*t6229*t6242 + t6242*t6326*t6340 + t6242*t6326*t6671 - 1.*t6212*t6229*t6326*t6680 - 1.*t6181*t6212*t6340*t6680)*var2[4] + (t6175*t6242*t6326 + t6457 + t6458 + t6221*t6242*t6671 - 1.*t6175*t6181*t6212*t6680 - 1.*t6212*t6221*t6229*t6680)*var2[9] + (t6242*t6280*t6326 + t6554 + t6558 + t6242*t6284*t6671 - 1.*t6181*t6212*t6280*t6680 - 1.*t6212*t6229*t6284*t6680)*var2[10] + (t6242*t6261*t6326 + t6646 + t6650 + t6153*t6242*t6671 - 1.*t6153*t6212*t6229*t6680 - 1.*t6181*t6212*t6261*t6680)*var2[11]);
  p_output1[7]=var2[10]*((-0.5*t6200*t6482*t6773*t6779*t6795 - 0.5*t289*t322*t397*t6482*t6779*t6803 - 0.25*t6200*t6482*t6773*t6802*t6803 + t289*t322*t397*t6482*t6795*t6845 + 0.5*t6773*t6779*t6803*t6862)*var2[3] + (-0.5*t6482*t6680*t6773*t6779*t6795 - 0.25*t6482*t6680*t6773*t6802*t6803 + 0.5*t6482*t6779*t6803*t6908 - 1.*t6482*t6795*t6845*t6908 + 0.5*t6773*t6779*t6803*t6919)*var2[4] + (-0.5*t6371*t6482*t6773*t6779*t6795 + 0.5*t5528*t6482*t6779*t6803 - 0.25*t6371*t6482*t6773*t6802*t6803 - 1.*t5528*t6482*t6795*t6845 + 0.5*t6773*t6779*t6803*t6900)*var2[9] - 0.5*t6773*t6778*t6779*t6795*var2[10] + 0.5*(2.*t5946*t6181 + 2.*t5950*t6197 + 2.*Power(t6280,2) + 2.*Power(t6284,2))*t6773*t6779*t6803*var2[10] - 0.25*t6773*t6778*t6802*t6803*var2[10] - 0.5*t6482*t6572*t6773*t6779*t6795*var2[11] - 0.25*t6482*t6572*t6773*t6802*t6803*var2[11] + 0.5*t6773*t6779*t6803*t6820*var2[11]) + var2[11]*((-0.5*t6200*t6572*t6773*t6779*t6795 - 0.5*t289*t322*t397*t6572*t6779*t6803 - 0.25*t6200*t6572*t6773*t6802*t6803 + t289*t322*t397*t6572*t6795*t6845 + 0.5*t6773*t6779*t6803*t7013)*var2[3] + (-0.5*t6572*t6680*t6773*t6779*t6795 - 0.25*t6572*t6680*t6773*t6802*t6803 + 0.5*t6572*t6779*t6803*t6908 - 1.*t6572*t6795*t6845*t6908 + 0.5*t6773*t6779*t6803*t7061)*var2[4] + (-0.5*t6371*t6572*t6773*t6779*t6795 + 0.5*t5528*t6572*t6779*t6803 - 0.25*t6371*t6572*t6773*t6802*t6803 - 1.*t5528*t6572*t6795*t6845 + 0.5*t6773*t6779*t6803*t7038)*var2[9] - 0.5*t6482*t6572*t6773*t6779*t6795*var2[10] - 0.25*t6482*t6572*t6773*t6802*t6803*var2[10] + 0.5*t6773*t6779*t6803*t6820*var2[10] + 0.5*(2.*Power(t6153,2) + 2.*t6144*t6181 + 2.*t6153*t6197 + 2.*Power(t6261,2))*t6773*t6779*t6803*var2[11] - 0.5*t6773*t6779*t6795*t6945*var2[11] - 0.25*t6773*t6802*t6803*t6945*var2[11]) + var2[3]*((0.5*(2.*t5757*t6181 + 2.*Power(t6184,2) + 2.*Power(t6189,2) + 2.*t5769*t6197)*t6773*t6779*t6803 - 0.25*Power(t6200,2)*t6773*t6802*t6803 + t322*t397*t403*t6803*t6845 - 0.5*t6200*t6773*t6779*t6795*t7087 + t289*t322*t397*t6795*t6845*t7087)*var2[3] + (0.5*t289*t322*t397*t6680*t6779*t6803 + 0.5*t6200*t6779*t6803*t6908 - 0.5*t6680*t6773*t6779*t6795*t7087 - 1.*t6795*t6845*t6908*t7087 + t7176 + t7199 + t7202)*var2[4] + (0.5*t5528*t6200*t6779*t6803 + 0.5*t289*t322*t397*t6371*t6779*t6803 - 0.5*t6371*t6773*t6779*t6795*t7087 - 1.*t5528*t6795*t6845*t7087 + t7120 + t7133 + t7142)*var2[9] + 0.5*t289*t322*t397*t6482*t6779*t6803*var2[10] - 0.25*t6200*t6482*t6773*t6802*t6803*var2[10] + 0.5*t6773*t6779*t6803*t6862*var2[10] - 0.5*t6482*t6773*t6779*t6795*t7087*var2[10] + 0.5*t289*t322*t397*t6572*t6779*t6803*var2[11] - 0.25*t6200*t6572*t6773*t6802*t6803*var2[11] + 0.5*t6773*t6779*t6803*t7013*var2[11] - 0.5*t6572*t6773*t6779*t6795*t7087*var2[11]) + var2[9]*((-0.5*t289*t322*t397*t6371*t6779*t6803 + t7120 + t7133 + t7142 - 0.5*t6200*t6773*t6779*t6795*t7219 + t289*t322*t397*t6795*t6845*t7219 + 0.5*t6200*t6779*t6803*t7242)*var2[3] + (0.5*t6371*t6779*t6803*t6908 - 0.5*t6680*t6773*t6779*t6795*t7219 - 1.*t6795*t6845*t6908*t7219 + 0.5*t6680*t6779*t6803*t7242 + t7324 + t7334 + t7339)*var2[4] + (0.5*t5528*t6371*t6779*t6803 + 0.5*(2.*Power(t6175,2) + 2.*t5543*t6181 + 2.*t5555*t6197 + 2.*Power(t6221,2))*t6773*t6779*t6803 - 0.25*Power(t6371,2)*t6773*t6802*t6803 + (-1.*t1606*t406 + t6769)*t6803*t6845 - 0.5*t6371*t6773*t6779*t6795*t7219 - 1.*t5528*t6795*t6845*t7219 + 0.5*t6371*t6779*t6803*t7242)*var2[9] - 0.25*t6371*t6482*t6773*t6802*t6803*var2[10] + 0.5*t6773*t6779*t6803*t6900*var2[10] - 0.5*t6482*t6773*t6779*t6795*t7219*var2[10] + 0.5*t6482*t6779*t6803*t7242*var2[10] - 0.25*t6371*t6572*t6773*t6802*t6803*var2[11] + 0.5*t6773*t6779*t6803*t7038*var2[11] - 0.5*t6572*t6773*t6779*t6795*t7219*var2[11] + 0.5*t6572*t6779*t6803*t7242*var2[11]) + var2[4]*((-0.5*t289*t322*t397*t6680*t6779*t6803 + t7176 + t7199 + t7202 + 0.5*t6200*t6779*t6803*t7361 - 0.5*t6200*t6773*t6779*t6795*t7381 + t289*t322*t397*t6795*t6845*t7381)*var2[3] + (0.5*(2.*t6077*t6181 + 2.*t6090*t6197 + 2.*Power(t6326,2) + 2.*Power(t6340,2))*t6773*t6779*t6803 - 0.25*Power(t6680,2)*t6773*t6802*t6803 + (t6769 + t6771)*t6803*t6845 + 0.5*t6680*t6779*t6803*t6908 + 0.5*t6680*t6779*t6803*t7361 - 0.5*t6680*t6773*t6779*t6795*t7381 - 1.*t6795*t6845*t6908*t7381)*var2[4] + (0.5*t5528*t6680*t6779*t6803 + t7324 + t7334 + t7339 + 0.5*t6371*t6779*t6803*t7361 - 0.5*t6371*t6773*t6779*t6795*t7381 - 1.*t5528*t6795*t6845*t7381)*var2[9] - 0.25*t6482*t6680*t6773*t6802*t6803*var2[10] + 0.5*t6773*t6779*t6803*t6919*var2[10] + 0.5*t6482*t6779*t6803*t7361*var2[10] - 0.5*t6482*t6773*t6779*t6795*t7381*var2[10] - 0.25*t6572*t6680*t6773*t6802*t6803*var2[11] + 0.5*t6773*t6779*t6803*t7061*var2[11] + 0.5*t6572*t6779*t6803*t7361*var2[11] - 0.5*t6572*t6773*t6779*t6795*t7381*var2[11]);
  p_output1[8]=var2[4]*((-1.*t397*t4318*t7481*t7493*t7502 - 1.*t3055*t397*t7493*t7502*t7504 + t2866*t3055*t397*t7512 + t397*t4318*t4769*t7512 + t7526 + t7527)*var2[3] + (-1.*t7481*t7487*t7493*t7502 - 1.*t4769*t7493*t7502*t7504 + t2866*t4769*t7512 + t4902*t7481*t7512 + t4769*t7487*t7512 + t2560*t7504*t7512)*var2[4] + (-1.*t5145*t7493*t7502*t7504 + t2866*t5145*t7512 - 1.*t7481*t7493*t7502*t7569 + t4769*t7512*t7569 + t7575 + t7577)*var2[5] + (-1.*t4638*t7493*t7502*t7504 + t2866*t4638*t7512 - 1.*t7481*t7493*t7502*t7535 + t4769*t7512*t7535 + t7541 + t7548)*var2[9]) + var2[3]*((t3350*t397*t7481*t7512 + t3464*t397*t7504*t7512 - 1.*t397*t4318*t7481*t7502*t7585 - 1.*t3055*t397*t7502*t7504*t7585)*var2[3] + (-1.*t397*t4318*t4769*t7512 + t3055*t397*t7487*t7512 + t7526 + t7527 - 1.*t7481*t7487*t7502*t7585 - 1.*t4769*t7502*t7504*t7585)*var2[4] + (-1.*t397*t4318*t5145*t7512 + t3055*t397*t7512*t7569 - 1.*t5145*t7502*t7504*t7585 - 1.*t7481*t7502*t7569*t7585 + t7629 + t7631)*var2[5] + (-1.*t397*t4318*t4638*t7512 + t3055*t397*t7512*t7535 - 1.*t4638*t7502*t7504*t7585 - 1.*t7481*t7502*t7535*t7585 + t7620 + t7623)*var2[9]) + var2[9]*((t397*t4318*t4638*t7512 + t3055*t397*t4664*t7512 + t7620 + t7623 - 1.*t397*t4318*t7481*t7502*t7649 - 1.*t3055*t397*t7502*t7504*t7649)*var2[3] + (t4664*t4769*t7512 + t4638*t7487*t7512 + t7541 + t7548 - 1.*t7481*t7487*t7502*t7649 - 1.*t4769*t7502*t7504*t7649)*var2[4] + (t4664*t5145*t7512 + t4638*t7512*t7569 - 1.*t5145*t7502*t7504*t7649 - 1.*t7481*t7502*t7569*t7649 + t7712 + t7720)*var2[5] + (t4638*t4664*t7512 + t4681*t7481*t7512 + t3164*t7504*t7512 + t4638*t7512*t7535 - 1.*t4638*t7502*t7504*t7649 - 1.*t7481*t7502*t7535*t7649)*var2[9]) + var2[5]*((t397*t4318*t5145*t7512 + t7629 + t7631 - 1.*t397*t4318*t7481*t7502*t7746 - 1.*t3055*t397*t7502*t7504*t7746 + t3055*t397*t7512*t7751)*var2[3] + (t5145*t7487*t7512 + t7575 + t7577 - 1.*t7481*t7487*t7502*t7746 - 1.*t4769*t7502*t7504*t7746 + t4769*t7512*t7751)*var2[4] + (t5145*t7481*t7512 + t4090*t7504*t7512 + t5145*t7512*t7569 - 1.*t5145*t7502*t7504*t7746 - 1.*t7481*t7502*t7569*t7746 + t5145*t7512*t7751)*var2[5] + (t5145*t7512*t7535 + t7712 + t7720 - 1.*t4638*t7502*t7504*t7746 - 1.*t7481*t7502*t7535*t7746 + t4638*t7512*t7751)*var2[9]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "jj_hc_1_func.hh"

namespace SymFunction
{

void jj_hc_1_func_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
