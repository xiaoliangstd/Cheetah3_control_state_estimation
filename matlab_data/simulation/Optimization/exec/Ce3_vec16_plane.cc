/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:54:17 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1383;
  double t1086;
  double t1342;
  double t1444;
  double t2123;
  double t2236;
  double t2486;
  double t2514;
  double t2641;
  double t2644;
  double t2720;
  double t2755;
  double t2223;
  double t2250;
  double t2290;
  double t1700;
  double t688;
  double t750;
  double t1804;
  double t1817;
  double t1863;
  double t4225;
  double t4279;
  double t4418;
  double t4450;
  double t4488;
  double t4489;
  double t4502;
  double t4527;
  double t4531;
  double t4532;
  double t4543;
  double t4574;
  double t4273;
  double t4304;
  double t4378;
  double t4634;
  double t4666;
  double t4667;
  double t4674;
  double t4685;
  double t4707;
  double t4725;
  double t4383;
  double t4529;
  double t4589;
  double t4605;
  double t4873;
  double t4862;
  double t3943;
  double t4749;
  double t4767;
  double t4782;
  double t5374;
  double t5377;
  double t5361;
  double t5364;
  double t5874;
  double t5947;
  double t5743;
  double t5784;
  double t1382;
  double t1533;
  double t1602;
  double t2474;
  double t2777;
  double t2884;
  double t2918;
  double t2929;
  double t2964;
  double t2976;
  double t3073;
  double t3107;
  double t3517;
  double t3618;
  double t3634;
  double t3871;
  double t3892;
  double t3912;
  double t3967;
  double t3973;
  double t3975;
  double t4050;
  double t4072;
  double t4131;
  double t4670;
  double t4726;
  double t4742;
  double t4746;
  double t4790;
  double t4809;
  double t4814;
  double t4822;
  double t4832;
  double t4834;
  double t4848;
  double t4863;
  double t4929;
  double t4930;
  double t4949;
  double t4953;
  double t4959;
  double t4975;
  double t4994;
  double t5026;
  double t5029;
  double t5044;
  double t5090;
  double t5106;
  double t5116;
  double t5120;
  double t5130;
  double t5131;
  double t5298;
  double t5302;
  double t5303;
  double t5306;
  double t5320;
  double t5365;
  double t5392;
  double t5395;
  double t5421;
  double t5431;
  double t5442;
  double t5443;
  double t5461;
  double t5494;
  double t5701;
  double t5731;
  double t5740;
  double t5741;
  double t5823;
  double t5948;
  double t5953;
  double t6035;
  double t6062;
  double t6078;
  double t6110;
  double t6116;
  double t6127;
  double t7109;
  double t7112;
  double t7113;
  double t7236;
  double t7237;
  double t7273;
  double t7275;
  double t7343;
  double t7344;
  double t7361;
  double t7379;
  double t7380;
  double t7574;
  double t7575;
  double t7577;
  double t7579;
  double t7580;
  double t7582;
  double t7583;
  double t7588;
  double t7537;
  double t7592;
  double t7593;
  double t7602;
  double t7606;
  double t7610;
  double t7640;
  double t7642;
  double t7643;
  double t7924;
  double t7930;
  double t7969;
  double t8011;
  double t8039;
  double t8058;
  double t8059;
  double t8080;
  double t8083;
  double t8094;
  double t8136;
  double t8195;
  double t7922;
  double t8087;
  double t8089;
  double t8585;
  double t8595;
  double t8616;
  double t7875;
  double t7886;
  double t7891;
  double t8306;
  double t8313;
  double t8370;
  double t8982;
  double t8999;
  double t9007;
  double t9717;
  double t9719;
  double t9732;
  double t9736;
  double t9745;
  double t9747;
  double t9753;
  double t9763;
  double t9774;
  double t9784;
  double t9821;
  double t9823;
  double t7498;
  double t9818;
  double t9819;
  double t9810;
  double t9812;
  double t9813;
  double t9862;
  double t9824;
  double t9695;
  double t9698;
  double t9701;
  double t9716;
  double t9785;
  double t9789;
  double t9880;
  double t9891;
  double t9893;
  double t7516;
  double t10025;
  double t10038;
  double t10042;
  double t10630;
  double t10638;
  double t10639;
  double t10648;
  double t10649;
  double t10661;
  double t10616;
  double t10619;
  double t10622;
  double t10669;
  double t10680;
  double t10683;
  double t10692;
  double t10693;
  double t10705;
  double t10716;
  double t10717;
  double t10721;
  double t6203;
  double t6235;
  double t6263;
  double t10819;
  double t10845;
  double t10859;
  double t8375;
  double t11055;
  double t11066;
  double t11067;
  double t8796;
  double t9038;
  double t9516;
  double t9563;
  double t9630;
  double t9900;
  double t11403;
  double t11408;
  double t11410;
  double t11392;
  double t9992;
  double t10139;
  double t10285;
  double t10380;
  double t10538;
  double t7636;
  double t7685;
  double t7735;
  double t11644;
  double t11649;
  double t11659;
  double t7738;
  double t7751;
  double t7768;
  double t11092;
  double t11631;
  double t11669;
  double t11110;
  double t8542;
  double t8628;
  double t8682;
  double t11047;
  double t11078;
  double t8874;
  double t8875;
  double t8882;
  double t11205;
  double t11222;
  double t9039;
  double t9046;
  double t9048;
  double t11237;
  double t11249;
  double t9520;
  double t9522;
  double t9523;
  double t11287;
  double t11322;
  double t9564;
  double t9593;
  double t9604;
  double t11361;
  double t11363;
  double t9634;
  double t9646;
  double t9663;
  double t11395;
  double t11413;
  double t9910;
  double t9915;
  double t9919;
  double t11417;
  double t11423;
  double t9995;
  double t10009;
  double t10011;
  double t11443;
  double t11452;
  double t10142;
  double t10147;
  double t10193;
  double t11480;
  double t11487;
  double t10290;
  double t10293;
  double t10297;
  double t11558;
  double t11568;
  double t10383;
  double t10418;
  double t10427;
  double t11581;
  double t11591;
  double t10548;
  double t10550;
  double t10555;
  double t12148;
  double t12157;
  double t12165;
  double t12209;
  double t12210;
  double t12401;
  double t12406;
  double t12413;
  double t12437;
  double t12457;
  double t10614;
  double t10645;
  double t10666;
  double t10689;
  double t10738;
  double t10749;
  double t10760;
  double t10762;
  double t10763;
  double t10766;
  double t10769;
  double t10774;
  double t10783;
  double t10800;
  double t10806;
  double t10807;
  double t10825;
  double t10827;
  double t10836;
  double t10841;
  double t12570;
  double t12571;
  double t12572;
  double t12575;
  double t12586;
  double t12588;
  double t10898;
  double t10899;
  double t10903;
  double t10908;
  double t10909;
  double t10917;
  double t10921;
  double t10932;
  double t10934;
  double t10956;
  double t10960;
  double t10964;
  double t10970;
  double t12607;
  double t12611;
  double t12615;
  double t12634;
  double t12635;
  double t12638;
  double t11041;
  double t11042;
  double t11043;
  double t11044;
  double t11050;
  double t12685;
  double t12689;
  double t12691;
  double t11085;
  double t12693;
  double t12697;
  double t12699;
  double t11139;
  double t11146;
  double t11160;
  double t11169;
  double t11183;
  double t11198;
  double t11203;
  double t11204;
  double t11241;
  double t11260;
  double t11261;
  double t11267;
  double t11271;
  double t11299;
  double t11344;
  double t11352;
  double t11357;
  double t11362;
  double t11371;
  double t11374;
  double t11377;
  double t11387;
  double t11388;
  double t12849;
  double t12860;
  double t12864;
  double t12828;
  double t12829;
  double t12832;
  double t11428;
  double t11429;
  double t11432;
  double t11468;
  double t11471;
  double t11500;
  double t11508;
  double t11551;
  double t11556;
  double t11598;
  double t11603;
  double t11604;
  double t11626;
  double t11675;
  double t13041;
  double t13044;
  double t11684;
  double t11687;
  double t12718;
  double t11722;
  double t11723;
  double t11732;
  double t12692;
  double t11744;
  double t11745;
  double t11760;
  double t12727;
  double t11807;
  double t11814;
  double t11829;
  double t12751;
  double t11834;
  double t11843;
  double t11872;
  double t12763;
  double t11898;
  double t11899;
  double t11909;
  double t12775;
  double t11910;
  double t11922;
  double t11951;
  double t12844;
  double t12872;
  double t12880;
  double t12902;
  double t12932;
  double t12939;
  double t12948;
  double t12956;
  double t12990;
  double t12999;
  double t13010;
  double t13020;
  double t13458;
  double t13465;
  double t13470;
  double t13478;
  double t13480;
  double t13483;
  double t13484;
  double t13491;
  double t13568;
  double t13570;
  double t13679;
  double t13680;
  double t13686;
  double t13691;
  double t13669;
  double t13655;
  double t13657;
  double t13674;
  double t13676;
  double t13695;
  double t13715;
  double t13726;
  double t13731;
  double t13749;
  double t13753;
  double t13754;
  double t13757;
  double t13758;
  double t13760;
  double t13764;
  double t13571;
  double t13573;
  double t13578;
  double t13579;
  double t13581;
  double t13590;
  double t13593;
  double t13598;
  double t13604;
  double t13805;
  double t13806;
  double t13807;
  double t13809;
  double t13813;
  double t13814;
  double t13822;
  double t13826;
  double t13885;
  double t13887;
  double t13888;
  double t13875;
  double t13876;
  double t13877;
  double t13937;
  double t13942;
  double t13944;
  double t13965;
  double t13970;
  double t13975;
  double t14082;
  double t14101;
  double t14102;
  double t14111;
  double t14113;
  double t14115;
  double t14131;
  double t14134;
  double t14135;
  double t6295;
  double t6297;
  double t6627;
  double t6658;
  double t6716;
  double t6851;
  double t14207;
  double t14212;
  double t14214;
  double t6872;
  double t6880;
  double t14233;
  double t14237;
  double t14239;
  double t14243;
  double t14244;
  double t14262;
  double t14307;
  double t14311;
  double t14314;
  double t14323;
  double t14325;
  double t14327;
  double t6931;
  double t6948;
  double t6965;
  double t7009;
  double t14451;
  double t14454;
  double t14457;
  double t14469;
  double t14470;
  double t14472;
  double t13852;
  double t14593;
  double t14595;
  double t14596;
  double t14598;
  double t14599;
  double t14602;
  double t14476;
  double t14487;
  double t14757;
  double t14759;
  double t14760;
  double t14767;
  double t14768;
  double t14769;
  double t14103;
  double t14105;
  double t14501;
  double t14512;
  double t14524;
  double t14546;
  double t14560;
  double t14565;
  double t14128;
  double t14138;
  double t14143;
  double t14604;
  double t14615;
  double t14622;
  double t14849;
  double t14854;
  double t14855;
  double t14858;
  double t14861;
  double t14863;
  double t14109;
  double t14117;
  double t14123;
  double t14661;
  double t14663;
  double t14670;
  double t14672;
  double t14681;
  double t14706;
  double t14711;
  double t13463;
  double t13498;
  double t13509;
  double t13512;
  double t13522;
  double t13525;
  double t13530;
  double t13531;
  double t13533;
  double t13536;
  double t13537;
  double t13540;
  double t13541;
  double t13545;
  double t14981;
  double t14982;
  double t14971;
  double t14976;
  double t14977;
  double t13612;
  double t13613;
  double t13642;
  double t13647;
  double t15005;
  double t15006;
  double t15007;
  double t14995;
  double t14999;
  double t15000;
  double t15001;
  double t15008;
  double t15009;
  double t15010;
  double t15011;
  double t15013;
  double t15015;
  double t15016;
  double t15019;
  double t13878;
  double t13880;
  double t13884;
  double t13889;
  double t13891;
  double t13894;
  double t13909;
  double t13920;
  double t13958;
  double t13978;
  double t13995;
  double t14008;
  double t14011;
  double t14013;
  double t14023;
  double t14026;
  double t14030;
  double t14124;
  double t14145;
  double t14151;
  double t14157;
  double t14227;
  double t14228;
  double t14230;
  double t14241;
  double t14284;
  double t14303;
  double t14306;
  double t14320;
  double t14329;
  double t14332;
  double t14333;
  double t14334;
  double t14335;
  double t14336;
  double t14341;
  double t14343;
  double t14346;
  double t14347;
  double t14349;
  double t14376;
  double t14380;
  double t14381;
  double t14382;
  double t14387;
  double t14388;
  double t14389;
  double t14391;
  double t14392;
  double t14396;
  double t14397;
  double t14401;
  double t14402;
  double t14575;
  double t14580;
  double t14584;
  double t14588;
  double t14590;
  double t14611;
  double t14614;
  double t15096;
  double t15101;
  double t15102;
  double t15104;
  double t15105;
  double t15107;
  double t14634;
  double t14636;
  double t14638;
  double t14642;
  double t14643;
  double t14644;
  double t14650;
  double t14654;
  double t14659;
  double t14668;
  double t14669;
  double t14679;
  double t14701;
  double t14703;
  double t14838;
  double t14842;
  double t14844;
  double t14845;
  double t14846;
  double t15109;
  double t15122;
  double t14872;
  double t14874;
  double t15191;
  double t15193;
  double t15196;
  double t15205;
  double t15209;
  double t15215;
  double t14887;
  double t14889;
  double t14890;
  double t14894;
  double t14896;
  double t14898;
  double t14899;
  double t14900;
  double t15141;
  double t14903;
  double t14906;
  double t14914;
  double t15156;
  double t14917;
  double t14918;
  double t14929;
  double t15163;
  double t15175;
  double t14944;
  double t14946;
  t1383 = Cos(var1[15]);
  t1086 = Cos(var1[5]);
  t1342 = Sin(var1[15]);
  t1444 = Sin(var1[5]);
  t2123 = Cos(var1[16]);
  t2236 = Sin(var1[16]);
  t2486 = -1.*t2123;
  t2514 = 1. + t2486;
  t2641 = -0.194401*t2514;
  t2644 = -0.234401*t2123;
  t2720 = -0.04*t2236;
  t2755 = t2641 + t2644 + t2720;
  t2223 = -0.04*t2123;
  t2250 = 0.04*t2236;
  t2290 = t2223 + t2250;
  t1700 = Sin(var1[3]);
  t688 = Cos(var1[3]);
  t750 = Sin(var1[4]);
  t1804 = t1383*t1086;
  t1817 = -1.*t1342*t1444;
  t1863 = t1804 + t1817;
  t4225 = Cos(var1[17]);
  t4279 = Sin(var1[17]);
  t4418 = -1.*t4225;
  t4450 = 1. + t4418;
  t4488 = -0.336601*t4450;
  t4489 = -0.356601*t4225;
  t4502 = -0.16*t4279;
  t4527 = 0. + t4488 + t4489 + t4502;
  t4531 = -0.20833*t4450;
  t4532 = -0.36833*t4225;
  t4543 = 0.020000000000000018*t4279;
  t4574 = 0. + t4531 + t4532 + t4543;
  t4273 = t2123*t4225;
  t4304 = -1.*t2236*t4279;
  t4378 = 0. + t4273 + t4304;
  t4634 = t4225*t2236;
  t4666 = t2123*t4279;
  t4667 = 0. + t4634 + t4666;
  t4674 = -0.194401*t2236;
  t4685 = -1.*t2236*t4527;
  t4707 = t2123*t4574;
  t4725 = 0. + t4674 + t4685 + t4707;
  t4383 = -0.194401*t2514;
  t4529 = t2123*t4527;
  t4589 = t2236*t4574;
  t4605 = 0. + t4383 + t4529 + t4589;
  t4873 = 0. + t1383;
  t4862 = 0. + t1342;
  t3943 = Cos(var1[4]);
  t4749 = -1.*t4225*t2236;
  t4767 = -1.*t2123*t4279;
  t4782 = 0. + t4749 + t4767;
  t5374 = -1.*t1342*t4782;
  t5377 = 0. + t5374;
  t5361 = t1383*t4782;
  t5364 = 0. + t5361;
  t5874 = -1.*t1342*t4378;
  t5947 = 0. + t5874;
  t5743 = t1383*t4378;
  t5784 = 0. + t5743;
  t1382 = -1.*t1086*t1342;
  t1533 = -1.*t1383*t1444;
  t1602 = t1382 + t1533;
  t2474 = -1.*t2123*t2290;
  t2777 = -1.*t2755*t2236;
  t2884 = t2474 + t2777;
  t2918 = t2123*t2884;
  t2929 = t2123*t2755;
  t2964 = -1.*t2290*t2236;
  t2976 = t2929 + t2964;
  t3073 = t2236*t2976;
  t3107 = t2918 + t3073;
  t3517 = t1086*t1342;
  t3618 = t1383*t1444;
  t3634 = t3517 + t3618;
  t3871 = t1383*t2123*t1086;
  t3892 = -1.*t2123*t1342*t1444;
  t3912 = t3871 + t3892;
  t3967 = t3943*t2236;
  t3973 = -1.*t2123*t1086*t1342;
  t3975 = -1.*t1383*t2123*t1444;
  t4050 = t3973 + t3975;
  t4072 = -1.*t750*t4050;
  t4131 = t3967 + t4072;
  t4670 = -1.*t4605*t4667;
  t4726 = -1.*t4725*t4378;
  t4742 = 0. + t4670 + t4726;
  t4746 = t4378*t4742;
  t4790 = t4725*t4782;
  t4809 = t4605*t4378;
  t4814 = 0. + t4790 + t4809;
  t4822 = t4667*t4814;
  t4832 = 0. + t4746 + t4822;
  t4834 = 0.241*t4832;
  t4848 = 0. + t4834;
  t4863 = t1086*t4862;
  t4929 = t4873*t1444;
  t4930 = 0. + t4863 + t4929;
  t4949 = t4873*t1086;
  t4953 = -1.*t4862*t1444;
  t4959 = 0. + t4949 + t4953;
  t4975 = -1.*t750*t4959;
  t4994 = 0. + t4975;
  t5026 = -1.*t1383*t1086*t2236;
  t5029 = t1342*t2236*t1444;
  t5044 = t5026 + t5029;
  t5090 = t2123*t3943;
  t5106 = t1086*t1342*t2236;
  t5116 = t1383*t2236*t1444;
  t5120 = t5106 + t5116;
  t5130 = -1.*t750*t5120;
  t5131 = t5090 + t5130;
  t5298 = -0.081715*t4782;
  t5302 = -0.11688*t4667;
  t5303 = 0. + t5298 + t5302;
  t5306 = 0.241*t5303;
  t5320 = 0. + t5306;
  t5365 = t1086*t5364;
  t5392 = t5377*t1444;
  t5395 = 0. + t5365 + t5392;
  t5421 = t3943*t4378;
  t5431 = t1086*t5377;
  t5442 = -1.*t5364*t1444;
  t5443 = 0. + t5431 + t5442;
  t5461 = -1.*t750*t5443;
  t5494 = 0. + t5421 + t5461;
  t5701 = 0.035165*t4378;
  t5731 = 0. + t5701;
  t5740 = 0.241*t5731;
  t5741 = 0. + t5740;
  t5823 = t1086*t5784;
  t5948 = t5947*t1444;
  t5953 = 0. + t5823 + t5948;
  t6035 = t3943*t4667;
  t6062 = t1086*t5947;
  t6078 = -1.*t5784*t1444;
  t6110 = 0. + t6062 + t6078;
  t6116 = -1.*t750*t6110;
  t6127 = 0. + t6035 + t6116;
  t7109 = -1.*t2236*t750;
  t7112 = -1.*t3943*t4050;
  t7113 = t7109 + t7112;
  t7236 = -1.*t2123*t750;
  t7237 = -1.*t3943*t5120;
  t7273 = t7236 + t7237;
  t7275 = -1.*t4378*t750;
  t7343 = -1.*t3943*t5443;
  t7344 = t7275 + t7343;
  t7361 = -1.*t4667*t750;
  t7379 = -1.*t3943*t6110;
  t7380 = t7361 + t7379;
  t7574 = -1.*t1383;
  t7575 = 1. + t7574;
  t7577 = 0.081715*t7575;
  t7579 = 0.061715*t1383;
  t7580 = t7577 + t7579;
  t7582 = t7580*t1086;
  t7583 = 0.02*t1342*t1444;
  t7588 = t7582 + t7583;
  t7537 = 0.194401*t750;
  t7592 = -1.*t3943*t7588;
  t7593 = t7537 + t7592;
  t7602 = -0.194401*t750;
  t7606 = t3943*t7588;
  t7610 = t7602 + t7606;
  t7640 = -0.194401*t3943;
  t7642 = -1.*t750*t7588;
  t7643 = t7640 + t7642;
  t7924 = 0.13757*t1383;
  t7930 = -1.*t1342*t2290;
  t7969 = t7577 + t7924 + t7930;
  t8011 = t1086*t7969;
  t8039 = 0.055855*t1342;
  t8058 = t1383*t2290;
  t8059 = t8039 + t8058;
  t8080 = -1.*t8059*t1444;
  t8083 = t8011 + t8080;
  t8094 = t2755*t750;
  t8136 = t3943*t8083;
  t8195 = t8094 + t8136;
  t7922 = -1.*t2755*t750;
  t8087 = -1.*t3943*t8083;
  t8089 = t7922 + t8087;
  t8585 = t3943*t2755;
  t8595 = -1.*t750*t8083;
  t8616 = t8585 + t8595;
  t7875 = t2236*t750;
  t7886 = t3943*t4050;
  t7891 = t7875 + t7886;
  t8306 = t1086*t8059;
  t8313 = t7969*t1444;
  t8370 = t8306 + t8313;
  t8982 = t2123*t750;
  t8999 = t3943*t5120;
  t9007 = t8982 + t8999;
  t9717 = 0.081715*t7575;
  t9719 = 0.11688*t1383;
  t9732 = -1.*t1342*t4725;
  t9736 = t9717 + t9719 + t9732;
  t9745 = t1086*t9736;
  t9747 = 0.035165*t1342;
  t9753 = t1383*t4725;
  t9763 = t9747 + t9753;
  t9774 = -1.*t9763*t1444;
  t9784 = 0. + t9745 + t9774;
  t9821 = t3943*t4605;
  t9823 = -1.*t750*t9784;
  t7498 = t5421 + t5461;
  t9818 = t3943*t4959;
  t9819 = 0. + t9818;
  t9810 = t4605*t750;
  t9812 = t3943*t9784;
  t9813 = 0. + t9810 + t9812;
  t9862 = 0. + t9821 + t9823;
  t9824 = t9821 + t9823;
  t9695 = t4378*t750;
  t9698 = t3943*t5443;
  t9701 = 0. + t9695 + t9698;
  t9716 = -1.*t4605*t750;
  t9785 = -1.*t3943*t9784;
  t9789 = t9716 + t9785;
  t9880 = t1086*t9763;
  t9891 = t9736*t1444;
  t9893 = 0. + t9880 + t9891;
  t7516 = t6035 + t6116;
  t10025 = t4667*t750;
  t10038 = t3943*t6110;
  t10042 = 0. + t10025 + t10038;
  t10630 = -1.*t1383*t1086;
  t10638 = t1342*t1444;
  t10639 = t10630 + t10638;
  t10648 = -1.*t1383*t2123*t1086;
  t10649 = t2123*t1342*t1444;
  t10661 = t10648 + t10649;
  t10616 = -1.*t1086*t4862;
  t10619 = -1.*t4873*t1444;
  t10622 = t10616 + t10619;
  t10669 = t1383*t1086*t2236;
  t10680 = -1.*t1342*t2236*t1444;
  t10683 = t10669 + t10680;
  t10692 = -1.*t1086*t5364;
  t10693 = -1.*t5377*t1444;
  t10705 = t10692 + t10693;
  t10716 = -1.*t1086*t5784;
  t10717 = -1.*t5947*t1444;
  t10721 = t10716 + t10717;
  t6203 = t1700*t750*t1602;
  t6235 = t688*t1863;
  t6263 = t6203 + t6235;
  t10819 = t4949 + t4953;
  t10845 = t5431 + t5442;
  t10859 = t6062 + t6078;
  t8375 = -1.*t3634*t8370;
  t11055 = -1.*t1086*t8059;
  t11066 = -1.*t7969*t1444;
  t11067 = t11055 + t11066;
  t8796 = t3912*t8370;
  t9038 = t3634*t8370;
  t9516 = -1.*t8370*t5044;
  t9563 = -1.*t3912*t8370;
  t9630 = t8370*t5044;
  t9900 = t4930*t9893;
  t11403 = -1.*t1086*t9763;
  t11408 = -1.*t9736*t1444;
  t11410 = t11403 + t11408;
  t11392 = t9745 + t9774;
  t9992 = -1.*t9893*t5395;
  t10139 = t9893*t5395;
  t10285 = -1.*t9893*t5953;
  t10380 = -1.*t4930*t9893;
  t10538 = t9893*t5953;
  t7636 = -1.*t750*t7610;
  t7685 = -1.*t3943*t7643;
  t7735 = t7636 + t7685;
  t11644 = 0.02*t1086*t1342;
  t11649 = -1.*t7580*t1444;
  t11659 = t11644 + t11649;
  t7738 = -0.02*t1086*t1342;
  t7751 = t7580*t1444;
  t7768 = t7738 + t7751;
  t11092 = -1.*t3634*t8083;
  t11631 = Power(t3943,2);
  t11669 = Power(t750,2);
  t11110 = -1.*t1863*t8370;
  t8542 = -1.*t3943*t1863*t8195;
  t8628 = t750*t1863*t8616;
  t8682 = t8375 + t8542 + t8628;
  t11047 = t3912*t8083;
  t11078 = t4050*t8370;
  t8874 = t7891*t8195;
  t8875 = t4131*t8616;
  t8882 = t8796 + t8874 + t8875;
  t11205 = t3634*t8083;
  t11222 = t1863*t8370;
  t9039 = t3943*t1863*t8195;
  t9046 = -1.*t750*t1863*t8616;
  t9048 = t9038 + t9039 + t9046;
  t11237 = -1.*t8370*t5120;
  t11249 = -1.*t8083*t5044;
  t9520 = -1.*t8195*t9007;
  t9522 = -1.*t8616*t5131;
  t9523 = t9516 + t9520 + t9522;
  t11287 = -1.*t3912*t8083;
  t11322 = -1.*t4050*t8370;
  t9564 = -1.*t7891*t8195;
  t9593 = -1.*t4131*t8616;
  t9604 = t9563 + t9564 + t9593;
  t11361 = t8370*t5120;
  t11363 = t8083*t5044;
  t9634 = t8195*t9007;
  t9646 = t8616*t5131;
  t9663 = t9630 + t9634 + t9646;
  t11395 = t4930*t11392;
  t11413 = t10819*t9893;
  t9910 = t9819*t9813;
  t9915 = t4994*t9862;
  t9919 = t9900 + t9910 + t9915;
  t11417 = -1.*t9893*t10845;
  t11423 = -1.*t11392*t5395;
  t9995 = -1.*t9813*t9701;
  t10009 = -1.*t9862*t5494;
  t10011 = t9992 + t9995 + t10009;
  t11443 = t9893*t10845;
  t11452 = t11392*t5395;
  t10142 = t9813*t9701;
  t10147 = t9862*t5494;
  t10193 = t10139 + t10142 + t10147;
  t11480 = -1.*t9893*t10859;
  t11487 = -1.*t11392*t5953;
  t10290 = -1.*t9813*t10042;
  t10293 = -1.*t9862*t6127;
  t10297 = t10285 + t10290 + t10293;
  t11558 = -1.*t4930*t11392;
  t11568 = -1.*t10819*t9893;
  t10383 = -1.*t9819*t9813;
  t10418 = -1.*t4994*t9862;
  t10427 = t10380 + t10383 + t10418;
  t11581 = t9893*t10859;
  t11591 = t11392*t5953;
  t10548 = t9813*t10042;
  t10550 = t9862*t6127;
  t10555 = t10538 + t10548 + t10550;
  t12148 = -0.055855*t1342;
  t12157 = -1.*t1383*t2290;
  t12165 = t12148 + t12157;
  t12209 = 0.055855*t1383;
  t12210 = t12209 + t7930;
  t12401 = -0.035165*t1342;
  t12406 = -1.*t1383*t4725;
  t12413 = t12401 + t12406;
  t12437 = 0.035165*t1383;
  t12457 = t12437 + t9732;
  t10614 = -1.527*t3943*t3107*t1602;
  t10645 = 0.0219*t3943*t10639;
  t10666 = -0.085290585*t2123*t3943*t10661;
  t10689 = 0.085290585*t3943*t2236*t10683;
  t10738 = -1.*t688*t750*t1602;
  t10749 = t1700*t1863;
  t10760 = t10738 + t10749;
  t10762 = -1.527*t3107*t10760;
  t10763 = t1700*t1602;
  t10766 = -1.*t688*t750*t10639;
  t10769 = t10763 + t10766;
  t10774 = 0.0219*t10769;
  t10783 = t1700*t4050;
  t10800 = -1.*t688*t750*t10661;
  t10806 = t10783 + t10800;
  t10807 = -0.085290585*t2123*t10806;
  t10825 = t1700*t5120;
  t10827 = -1.*t688*t750*t10683;
  t10836 = t10825 + t10827;
  t10841 = 0.085290585*t2236*t10836;
  t12570 = -1.*t1383*t1086*t4782;
  t12571 = t1342*t4782*t1444;
  t12572 = t12570 + t12571;
  t12575 = -1.*t1383*t1086*t4378;
  t12586 = t1342*t4378*t1444;
  t12588 = t12575 + t12586;
  t10898 = -1.527*t3107*t6263;
  t10899 = t688*t1602;
  t10903 = t1700*t750*t10639;
  t10908 = t10899 + t10903;
  t10909 = 0.0219*t10908;
  t10917 = t688*t4050;
  t10921 = t1700*t750*t10661;
  t10932 = t10917 + t10921;
  t10934 = -0.085290585*t2123*t10932;
  t10956 = t688*t5120;
  t10960 = t1700*t750*t10683;
  t10964 = t10956 + t10960;
  t10970 = 0.085290585*t2236*t10964;
  t12607 = -1.*t1086*t1342*t4782;
  t12611 = -1.*t1383*t4782*t1444;
  t12615 = t12607 + t12611;
  t12634 = -1.*t1086*t1342*t4378;
  t12635 = -1.*t1383*t4378*t1444;
  t12638 = t12634 + t12635;
  t11041 = 0.0042573819*t1863;
  t11042 = -1.*t1863*t8083;
  t11043 = t11042 + t8375;
  t11044 = t4050*t11043;
  t11050 = t10661*t8083;
  t12685 = t1086*t12210;
  t12689 = t12165*t1444;
  t12691 = t12685 + t12689;
  t11085 = -1.*t1602*t8083;
  t12693 = t1086*t12165;
  t12697 = -1.*t12210*t1444;
  t12699 = t12693 + t12697;
  t11139 = t2755*t2236;
  t11146 = t4050*t8083;
  t11160 = t11139 + t11146 + t8796;
  t11169 = t1863*t11160;
  t11183 = t1863*t8083;
  t11198 = t11183 + t9038;
  t11203 = t5120*t11198;
  t11204 = t1602*t8083;
  t11241 = -1.*t8083*t10683;
  t11260 = -1.*t2123*t2755;
  t11261 = -1.*t8083*t5120;
  t11267 = t11260 + t11261 + t9516;
  t11271 = t1863*t11267;
  t11299 = -1.*t10661*t8083;
  t11344 = -1.*t4050*t8083;
  t11352 = t2777 + t11344 + t9563;
  t11357 = t5120*t11352;
  t11362 = t8083*t10683;
  t11371 = t8083*t5120;
  t11374 = t2929 + t11371 + t9630;
  t11377 = t4050*t11374;
  t11387 = t4959*t9784;
  t11388 = 0. + t11387 + t9900;
  t12849 = t1086*t12413;
  t12860 = -1.*t12457*t1444;
  t12864 = t12849 + t12860;
  t12828 = t1086*t12457;
  t12829 = t12413*t1444;
  t12832 = t12828 + t12829;
  t11428 = -1.*t4605*t4378;
  t11429 = -1.*t9784*t5443;
  t11432 = t11428 + t11429 + t9992;
  t11468 = t9784*t5443;
  t11471 = t4809 + t11468 + t10139;
  t11500 = -1.*t9784*t6110;
  t11508 = t4670 + t11500 + t10285;
  t11551 = -1.*t4959*t9784;
  t11556 = 0. + t11551 + t10380;
  t11598 = t4605*t4667;
  t11603 = t9784*t6110;
  t11604 = t11598 + t11603 + t10538;
  t11626 = t3943*t1602*t7735;
  t11675 = t7768*t1863;
  t13041 = 0.02*t1383*t1444;
  t13044 = t11644 + t13041;
  t11684 = t3943*t1602*t7610;
  t11687 = -1.*t750*t1602*t7643;
  t12718 = -1.*t3634*t12691;
  t11722 = -1.*t3943*t1602*t8195;
  t11723 = t750*t1602*t8616;
  t11732 = t3943*t10661*t8682;
  t12692 = t3912*t12691;
  t11744 = t3943*t10661*t8195;
  t11745 = -1.*t750*t10661*t8616;
  t11760 = t3943*t1602*t8882;
  t12727 = t3634*t12691;
  t11807 = t3943*t1602*t8195;
  t11814 = -1.*t750*t1602*t8616;
  t11829 = t3943*t10683*t9048;
  t12751 = -1.*t12691*t5044;
  t11834 = -1.*t3943*t10683*t8195;
  t11843 = t750*t10683*t8616;
  t11872 = t3943*t1602*t9523;
  t12763 = -1.*t3912*t12691;
  t11898 = -1.*t3943*t10661*t8195;
  t11899 = t750*t10661*t8616;
  t11909 = t3943*t10683*t9604;
  t12775 = t12691*t5044;
  t11910 = t3943*t10683*t8195;
  t11922 = -1.*t750*t10683*t8616;
  t11951 = t3943*t10661*t9663;
  t12844 = t4930*t12832;
  t12872 = t1863*t9893;
  t12880 = -1.*t9893*t12615;
  t12902 = -1.*t12832*t5395;
  t12932 = t9893*t12615;
  t12939 = t12832*t5395;
  t12948 = -1.*t9893*t12638;
  t12956 = -1.*t12832*t5953;
  t12990 = -1.*t4930*t12832;
  t12999 = -1.*t1863*t9893;
  t13010 = t9893*t12638;
  t13020 = t12832*t5953;
  t13458 = t4749 + t4767;
  t13465 = t4273 + t4304;
  t13470 = -0.11688*t13465;
  t13478 = -1.*t2123*t4225;
  t13480 = t2236*t4279;
  t13483 = t13478 + t13480;
  t13484 = -0.081715*t13483;
  t13491 = t13470 + t13484;
  t13568 = 0.04*t2123;
  t13570 = t13568 + t2250;
  t13679 = -0.194401*t2123;
  t13680 = -1.*t2123*t4527;
  t13686 = -1.*t2236*t4574;
  t13691 = t13679 + t13680 + t13686;
  t13669 = t4674 + t4685 + t4707;
  t13655 = t13458*t4742;
  t13657 = -1.*t4725*t13458;
  t13674 = -1.*t13669*t4667;
  t13676 = -1.*t4605*t13465;
  t13695 = -1.*t13691*t4378;
  t13715 = t13657 + t13674 + t13676 + t13695;
  t13726 = t4378*t13715;
  t13731 = t13465*t4814;
  t13749 = t4605*t13458;
  t13753 = t13691*t4782;
  t13754 = t13669*t4378;
  t13757 = t4725*t13483;
  t13758 = t13749 + t13753 + t13754 + t13757;
  t13760 = t4667*t13758;
  t13764 = t13655 + t13726 + t13731 + t13760;
  t13571 = -1.*t2123*t13570;
  t13573 = t11260 + t13571;
  t13578 = t2123*t13573;
  t13579 = -1.*t2236*t2884;
  t13581 = t2123*t2976;
  t13590 = -1.*t13570*t2236;
  t13593 = t2777 + t13590;
  t13598 = t2236*t13593;
  t13604 = t13578 + t13579 + t13581 + t13598;
  t13805 = -1.*t1383*t8059*t2236;
  t13806 = t1342*t7969*t2236;
  t13807 = t2929 + t13805 + t13806;
  t13809 = -1.*t1383*t2123*t8059;
  t13813 = t2123*t1342*t7969;
  t13814 = t13809 + t13813 + t2777;
  t13822 = Power(t1383,2);
  t13826 = Power(t1342,2);
  t13885 = -1.*t4862*t9763;
  t13887 = -1.*t4873*t9736;
  t13888 = 0. + t13885 + t13887;
  t13875 = t4862*t9763;
  t13876 = t4873*t9736;
  t13877 = 0. + t13875 + t13876;
  t13937 = t9763*t5364;
  t13942 = t9736*t5377;
  t13944 = t4809 + t13937 + t13942;
  t13965 = -1.*t9763*t5784;
  t13970 = -1.*t9736*t5947;
  t13975 = t4670 + t13965 + t13970;
  t14082 = t2123*t1086*t1342;
  t14101 = t1383*t2123*t1444;
  t14102 = t14082 + t14101;
  t14111 = -1.*t1086*t1342*t13458;
  t14113 = -1.*t1383*t13458*t1444;
  t14115 = t14111 + t14113;
  t14131 = -1.*t1086*t1342*t13483;
  t14134 = -1.*t1383*t13483*t1444;
  t14135 = t14131 + t14134;
  t6295 = t688*t3634;
  t6297 = t1700*t750*t1863;
  t6627 = t6295 + t6297;
  t6658 = t688*t3912;
  t6716 = -1.*t1700*t4131;
  t6851 = t6658 + t6716;
  t14207 = -1.*t3943*t2236;
  t14212 = -1.*t750*t14102;
  t14214 = t14207 + t14212;
  t6872 = t688*t4930;
  t6880 = -1.*t1700*t4994;
  t14233 = t1383*t1086*t13458;
  t14237 = -1.*t1342*t13458*t1444;
  t14239 = t14233 + t14237;
  t14243 = t3943*t13465;
  t14244 = -1.*t750*t14115;
  t14262 = t14243 + t14244;
  t14307 = t1383*t1086*t13483;
  t14311 = -1.*t1342*t13483*t1444;
  t14314 = t14307 + t14311;
  t14323 = t3943*t13458;
  t14325 = -1.*t750*t14135;
  t14327 = t14323 + t14325;
  t6931 = t688*t5395;
  t6948 = -1.*t1700*t5494;
  t6965 = t688*t5953;
  t7009 = -1.*t1700*t6127;
  t14451 = -1.*t1086*t1342*t13570;
  t14454 = -1.*t1383*t13570*t1444;
  t14457 = t14451 + t14454;
  t14469 = t1383*t1086*t13570;
  t14470 = -1.*t1342*t13570*t1444;
  t14472 = t14469 + t14470;
  t13852 = t2123*t2290;
  t14593 = -1.*t1086*t1342*t13691;
  t14595 = -1.*t1383*t13691*t1444;
  t14596 = t14593 + t14595;
  t14598 = t1383*t1086*t13691;
  t14599 = -1.*t1342*t13691*t1444;
  t14602 = t14598 + t14599;
  t14476 = -1.*t3634*t14472;
  t14487 = t3912*t14472;
  t14757 = t2290*t750;
  t14759 = t3943*t14457;
  t14760 = t14757 + t14759;
  t14767 = t3943*t2290;
  t14768 = -1.*t750*t14457;
  t14769 = t14767 + t14768;
  t14103 = t3943*t14102;
  t14105 = t7109 + t14103;
  t14501 = t3634*t14472;
  t14512 = -1.*t10661*t8370;
  t14524 = -1.*t14472*t5044;
  t14546 = -1.*t3912*t14472;
  t14560 = t10661*t8370;
  t14565 = t14472*t5044;
  t14128 = t13458*t750;
  t14138 = t3943*t14135;
  t14143 = t14128 + t14138;
  t14604 = t4930*t14602;
  t14615 = -1.*t9893*t14314;
  t14622 = -1.*t14602*t5395;
  t14849 = t13669*t750;
  t14854 = t3943*t14596;
  t14855 = t14849 + t14854;
  t14858 = t3943*t13669;
  t14861 = -1.*t750*t14596;
  t14863 = t14858 + t14861;
  t14109 = t13465*t750;
  t14117 = t3943*t14115;
  t14123 = t14109 + t14117;
  t14661 = t9893*t14314;
  t14663 = t14602*t5395;
  t14670 = -1.*t9893*t14239;
  t14672 = -1.*t14602*t5953;
  t14681 = -1.*t4930*t14602;
  t14706 = t9893*t14239;
  t14711 = t14602*t5953;
  t13463 = -0.00016949530000000016*t13458;
  t13498 = 0.03856*t13491;
  t13509 = t13463 + t13498;
  t13512 = -0.5*var2[17]*t13509;
  t13522 = -0.194401*t4225;
  t13525 = -1.*t4225*t4527;
  t13530 = t4574*t4279;
  t13531 = 0. + t13522 + t13525 + t13530;
  t13533 = -0.008474765*t13458*t13531;
  t13536 = t4225*t4574;
  t13537 = 0.194401*t4279;
  t13540 = t4527*t4279;
  t13541 = 0. + t13536 + t13537 + t13540;
  t13545 = -0.241*t13541*t13491;
  t14981 = -0.16*t4225;
  t14982 = t14981 + t4543;
  t14971 = 0.020000000000000018*t4225;
  t14976 = 0.16*t4279;
  t14977 = t14971 + t14976;
  t13612 = -0.008474765*t13458*t5731;
  t13613 = -0.241*t5303*t13491;
  t13642 = -1.*t13491*t5320;
  t13647 = -0.035165*t13458*t5741;
  t15005 = -1.*t2236*t14982;
  t15006 = t2123*t14977;
  t15007 = t15005 + t15006;
  t14995 = t2123*t14982;
  t14999 = t2236*t14977;
  t15000 = t14995 + t14999;
  t15001 = -1.*t15000*t4667;
  t15008 = -1.*t15007*t4378;
  t15009 = t13657 + t15001 + t13676 + t15008;
  t15010 = t4378*t15009;
  t15011 = t15007*t4782;
  t15013 = t15000*t4378;
  t15015 = t13749 + t15011 + t15013 + t13757;
  t15016 = t4667*t15015;
  t15019 = t13655 + t13731 + t15010 + t15016;
  t13878 = t13877*t4378;
  t13880 = 0. + t13878;
  t13884 = -0.008474765*t13458*t13880;
  t13889 = t13888*t4667;
  t13891 = 0. + t13889;
  t13894 = -0.241*t13891*t13491;
  t13909 = t13888*t13465;
  t13920 = t13877*t13458;
  t13958 = t4667*t13944;
  t13978 = t4378*t13975;
  t13995 = 0. + t13958 + t13978;
  t14008 = t13465*t13944;
  t14011 = t1383*t9763*t13483;
  t14013 = -1.*t1342*t9736*t13483;
  t14023 = t13458*t13975;
  t14026 = -1.*t1383*t9763*t13458;
  t14030 = t1342*t9736*t13458;
  t14124 = -1.*t5741*t14123;
  t14145 = -1.*t5320*t14143;
  t14151 = -0.241*t13491*t9701;
  t14157 = -0.008474765*t13458*t10042;
  t14227 = t1700*t4930;
  t14228 = t688*t4994;
  t14230 = 0. + t14227 + t14228;
  t14241 = t1700*t14239;
  t14284 = t688*t14262;
  t14303 = t14241 + t14284;
  t14306 = -1.*t5741*t14303;
  t14320 = t1700*t14314;
  t14329 = t688*t14327;
  t14332 = t14320 + t14329;
  t14333 = -1.*t5320*t14332;
  t14334 = t1700*t5395;
  t14335 = t688*t5494;
  t14336 = 0. + t14334 + t14335;
  t14341 = -0.241*t13491*t14336;
  t14343 = t1700*t5953;
  t14346 = t688*t6127;
  t14347 = 0. + t14343 + t14346;
  t14349 = -0.008474765*t13458*t14347;
  t14376 = 0. + t6872 + t6880;
  t14380 = t688*t14239;
  t14381 = -1.*t1700*t14262;
  t14382 = t14380 + t14381;
  t14387 = -1.*t5741*t14382;
  t14388 = t688*t14314;
  t14389 = -1.*t1700*t14327;
  t14391 = t14388 + t14389;
  t14392 = -1.*t5320*t14391;
  t14396 = 0. + t6931 + t6948;
  t14397 = -0.241*t13491*t14396;
  t14401 = 0. + t6965 + t7009;
  t14402 = -0.008474765*t13458*t14401;
  t14575 = t5395*t11388;
  t14580 = t4930*t11432;
  t14584 = t14575 + t14580;
  t14588 = -0.008474765*t13458*t14584;
  t14590 = t14314*t11388;
  t14611 = -1.*t4605*t13458;
  t14614 = -1.*t9784*t14135;
  t15096 = -1.*t1086*t1342*t15007;
  t15101 = -1.*t1383*t15007*t1444;
  t15102 = t15096 + t15101;
  t15104 = t1383*t1086*t15007;
  t15105 = -1.*t1342*t15007*t1444;
  t15107 = t15104 + t15105;
  t14634 = t5953*t11471;
  t14636 = t5395*t11508;
  t14638 = 0. + t14634 + t14636;
  t14642 = t5953*t11556;
  t14643 = t4930*t11604;
  t14644 = t14642 + t14643;
  t14650 = -0.241*t13491*t14644;
  t14654 = t14239*t11471;
  t14659 = t9784*t14135;
  t14668 = t14314*t11508;
  t14669 = -1.*t9784*t14115;
  t14679 = t14239*t11556;
  t14701 = t4605*t13465;
  t14703 = t9784*t14115;
  t14838 = t9701*t9919;
  t14842 = t9819*t10011;
  t14844 = t14838 + t14842;
  t14845 = -0.008474765*t13458*t14844;
  t14846 = t14143*t9919;
  t15109 = t4930*t15107;
  t15122 = -1.*t15107*t5395;
  t14872 = -1.*t9813*t14143;
  t14874 = -1.*t9862*t14327;
  t15191 = t15000*t750;
  t15193 = t3943*t15102;
  t15196 = t15191 + t15193;
  t15205 = t3943*t15000;
  t15209 = -1.*t750*t15102;
  t15215 = t15205 + t15209;
  t14887 = t10042*t10193;
  t14889 = t9701*t10297;
  t14890 = t14887 + t14889;
  t14894 = t10042*t10427;
  t14896 = t9819*t10555;
  t14898 = t14894 + t14896;
  t14899 = -0.241*t13491*t14898;
  t14900 = t14123*t10193;
  t15141 = t15107*t5395;
  t14903 = t9813*t14143;
  t14906 = t9862*t14327;
  t14914 = t14143*t10297;
  t15156 = -1.*t15107*t5953;
  t14917 = -1.*t9813*t14123;
  t14918 = -1.*t9862*t14262;
  t14929 = t14123*t10427;
  t15163 = -1.*t4930*t15107;
  t15175 = t15107*t5953;
  t14944 = t9813*t14123;
  t14946 = t9862*t14262;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.085290585*t2123*(-1.*t1700*t3912 - 1.*t4131*t688) - 1.*t4848*(-1.*t1700*t4930 - 1.*t4994*t688) + 0.085290585*t2236*(-1.*t1700*t5044 - 1.*t5131*t688) - 1.*t5320*(-1.*t1700*t5395 - 1.*t5494*t688) - 1.*t5741*(-1.*t1700*t5953 - 1.*t6127*t688) + 0.0219*(-1.*t1700*t1863 + t1602*t688*t750) - 1.527*t3107*(-1.*t1700*t3634 + t1863*t688*t750))*var2[1] - 0.5*(0.0219*t6263 - 1.527*t3107*t6627 - 0.085290585*t2123*t6851 + 0.085290585*t2236*(-1.*t1700*t5131 + t5044*t688) - 1.*t4848*(t6872 + t6880) - 1.*t5320*(t6931 + t6948) - 1.*t5741*(t6965 + t7009))*var2[2])*var2[15];
  p_output1[4]=(-0.5*(-0.085290585*t2123*t4131 + 0.085290585*t2236*t5131 - 1.*t5320*t7498 - 0.0219*t1602*t750 + 1.527*t1863*t3107*t750 + t4848*t4959*t750 - 1.*t5741*t7516)*var2[0] - 0.5*(0.0219*t1602*t1700*t3943 - 1.527*t1700*t1863*t3107*t3943 - 1.*t1700*t3943*t4848*t4959 + 0.085290585*t1700*t2123*t7113 - 0.085290585*t1700*t2236*t7273 + t1700*t5320*t7344 + t1700*t5741*t7380)*var2[1] - 0.5*(-0.0219*t1602*t3943*t688 + 1.527*t1863*t3107*t3943*t688 + t3943*t4848*t4959*t688 - 0.085290585*t2123*t688*t7113 + 0.085290585*t2236*t688*t7273 - 1.*t5320*t688*t7344 - 1.*t5741*t688*t7380)*var2[2] - 0.5*(0.0219*(t1863*t3943*(-1.*t3943*t7593 - 1.*t3943*t7610) + t750*(-1.*t1863*t750*t7593 - 1.*t1863*t750*t7610) - 1.*t1863*t750*t7735 + t3943*(t1863*t3943*t7610 - 1.*t1863*t750*t7643 + t3634*t7768)) + 0.085290585*t2236*(t7891*(t1863*t750*t8089 + t1863*t750*t8195) + t1863*t3943*(t4131*t8089 + t4131*t8195 + t7113*t8616 + t7891*t8616) + t4131*t8682 - 1.*t1863*t750*t8882) - 0.085290585*t2123*((-1.*t1863*t750*t8089 - 1.*t1863*t750*t8195)*t9007 + t1863*t3943*(-1.*t5131*t8089 - 1.*t5131*t8195 - 1.*t7273*t8616 - 1.*t8616*t9007) + t5131*t9048 - 1.*t1863*t750*t9523) - 1.527*t3107*((-1.*t4131*t8089 - 1.*t4131*t8195 - 1.*t7113*t8616 - 1.*t7891*t8616)*t9007 + t7891*(t5131*t8089 + t5131*t8195 + t7273*t8616 + t8616*t9007) + t5131*t9604 + t4131*t9663) - 1.*t4848*(t10297*t7498 + t10193*t7516 + t10042*(t5494*t9789 + t7498*t9813 + t9701*t9824 + t7344*t9862) + t9701*(-1.*t6127*t9789 - 1.*t7516*t9813 - 1.*t10042*t9824 - 1.*t7380*t9862)) - 1.*t5320*(-1.*t10555*t4959*t750 + t10427*t7516 + t10042*(-1.*t4994*t9789 + t4959*t750*t9813 - 1.*t9819*t9824 + t3943*t4959*t9862) + t9819*(t6127*t9789 + t7516*t9813 + t10042*t9824 + t7380*t9862)) - 1.*t5741*(-1.*t10011*t4959*t750 + t9701*(t4994*t9789 - 1.*t4959*t750*t9813 + t9819*t9824 - 1.*t3943*t4959*t9862) + t9819*(-1.*t5494*t9789 - 1.*t7498*t9813 - 1.*t9701*t9824 - 1.*t7344*t9862) + t7498*t9919))*var2[3])*var2[15];
  p_output1[5]=(-0.5*(t10614 + t10645 + t10666 + t10689 - 1.*t10622*t3943*t4848 - 1.*t10705*t3943*t5320 - 1.*t10721*t3943*t5741)*var2[0] - 0.5*(t10898 + t10909 + t10934 + t10970 - 1.*t4848*(t10819*t688 + t10622*t1700*t750) - 1.*t5320*(t10845*t688 + t10705*t1700*t750) - 1.*t5741*(t10859*t688 + t10721*t1700*t750))*var2[1] - 0.5*(t10762 + t10774 + t10807 + t10841 - 1.*t4848*(t10819*t1700 - 1.*t10622*t688*t750) - 1.*t5320*(t10845*t1700 - 1.*t10705*t688*t750) - 1.*t5741*(t10859*t1700 - 1.*t10721*t688*t750))*var2[2] - 0.5*(0.0219*(t11626 + t750*(t11675 + t11684 + t11687 + t11631*t11659*t1863 + t11659*t11669*t1863 + t3634*t7588)) + 0.085290585*t2236*(t11732 + t11760 + (t11092 + t11110 + t11722 + t11723 - 1.*t11067*t11631*t1863 - 1.*t11067*t11669*t1863)*t7891 + t1863*t3943*(t11047 + t11078 + t11744 + t11745 - 1.*t11067*t4131*t750 + t11067*t3943*t7891)) - 0.085290585*t2123*(t11829 + t11872 + (t11205 + t11222 + t11807 + t11814 + t11067*t11631*t1863 + t11067*t11669*t1863)*t9007 + t1863*t3943*(t11237 + t11249 + t11834 + t11843 + t11067*t5131*t750 - 1.*t11067*t3943*t9007)) - 1.527*t3107*(t11909 + t11951 + (t11287 + t11322 + t11898 + t11899 + t11067*t4131*t750 - 1.*t11067*t3943*t7891)*t9007 + t7891*(t11361 + t11363 + t11910 + t11922 - 1.*t11067*t5131*t750 + t11067*t3943*t9007)) - 1.*t5320*(t10555*t10622*t3943 + t10427*t10721*t3943 + t10042*(t11558 + t11568 + t11410*t4994*t750 - 1.*t10622*t3943*t9813 - 1.*t11410*t3943*t9819 + t10622*t750*t9862) + t9819*(t11581 + t11591 + t10042*t11410*t3943 - 1.*t11410*t6127*t750 + t10721*t3943*t9813 - 1.*t10721*t750*t9862)) - 1.*t4848*(t10297*t10705*t3943 + t10193*t10721*t3943 + t10042*(t11443 + t11452 - 1.*t11410*t5494*t750 + t11410*t3943*t9701 + t10705*t3943*t9813 - 1.*t10705*t750*t9862) + t9701*(t11480 + t11487 - 1.*t10042*t11410*t3943 + t11410*t6127*t750 - 1.*t10721*t3943*t9813 + t10721*t750*t9862)) - 1.*t5741*(t10011*t10622*t3943 + t9701*(t11395 + t11413 - 1.*t11410*t4994*t750 + t10622*t3943*t9813 + t11410*t3943*t9819 - 1.*t10622*t750*t9862) + t9819*(t11417 + t11423 + t11410*t5494*t750 - 1.*t11410*t3943*t9701 - 1.*t10705*t3943*t9813 + t10705*t750*t9862) + t10705*t3943*t9919))*var2[3] - 0.5*(t11041 + 0.085290585*t2236*(t11044 + t11169 + (t11085 + t11092 + t11110 - 1.*t11067*t1863)*t3912 + t3634*(t11047 + t11050 + t11078 + t11067*t4050)) - 0.085290585*t2123*(t11203 + t11271 + (t11204 + t11205 + t11222 + t11067*t1863)*t5044 + t3634*(t11237 + t11241 + t11249 - 1.*t11067*t5120)) - 1.527*t3107*(t11357 + t11377 + (t11287 + t11299 + t11322 - 1.*t11067*t4050)*t5044 + t3912*(t11361 + t11362 + t11363 + t11067*t5120)) - 1.*t5741*(t10845*t11388 + t10819*t11432 + t5395*(t11395 + t11413 + t11410*t4959 + t10622*t9784) + t4930*(t11417 + t11423 - 1.*t11410*t5443 - 1.*t10705*t9784)) - 1.*t4848*(t10859*t11471 + t10845*t11508 + t5953*(t11443 + t11452 + t11410*t5443 + t10705*t9784) + t5395*(t11480 + t11487 - 1.*t11410*t6110 - 1.*t10721*t9784)) - 1.*t5320*(t10859*t11556 + t10819*t11604 + t5953*(t11558 + t11568 - 1.*t11410*t4959 - 1.*t10622*t9784) + t4930*(t11581 + t11591 + t11410*t6110 + t10721*t9784)))*var2[4])*var2[15];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=(-0.5*(t10614 + t10645 + t10666 + t10689 - 1.*t1602*t3943*t4848 - 1.*t12572*t3943*t5320 - 1.*t12588*t3943*t5741)*var2[0] - 0.5*(t10898 + t10909 + t10934 + t10970 - 1.*t4848*t6263 - 1.*t5320*(t12615*t688 + t12572*t1700*t750) - 1.*t5741*(t12638*t688 + t12588*t1700*t750))*var2[1] - 0.5*(t10762 + t10774 + t10807 + t10841 - 1.*t10760*t4848 - 1.*t5320*(t12615*t1700 - 1.*t12572*t688*t750) - 1.*t5741*(t12638*t1700 - 1.*t12588*t688*t750))*var2[2] - 0.5*(0.0219*(t11626 + t750*(t11675 + t11684 + t11687 + t11631*t13044*t1863 + t11669*t13044*t1863 + t3634*(-0.02*t1086*t1383 + t7583))) + 0.085290585*t2236*(t11732 + t11760 + (t11110 + t11722 + t11723 + t12718 - 1.*t11631*t12699*t1863 - 1.*t11669*t12699*t1863)*t7891 + t1863*t3943*(t11078 + t11744 + t11745 + t12692 - 1.*t12699*t4131*t750 + t12699*t3943*t7891)) - 0.085290585*t2123*(t11829 + t11872 + (t11222 + t11807 + t11814 + t12727 + t11631*t12699*t1863 + t11669*t12699*t1863)*t9007 + t1863*t3943*(t11237 + t11834 + t11843 + t12751 + t12699*t5131*t750 - 1.*t12699*t3943*t9007)) - 1.527*t3107*(t11909 + t11951 + (t11322 + t11898 + t11899 + t12763 + t12699*t4131*t750 - 1.*t12699*t3943*t7891)*t9007 + t7891*(t11361 + t11910 + t11922 + t12775 - 1.*t12699*t5131*t750 + t12699*t3943*t9007)) - 1.*t4848*(t10297*t12572*t3943 + t10193*t12588*t3943 + t10042*(t12932 + t12939 - 1.*t12864*t5494*t750 + t12864*t3943*t9701 + t12572*t3943*t9813 - 1.*t12572*t750*t9862) + t9701*(t12948 + t12956 - 1.*t10042*t12864*t3943 + t12864*t6127*t750 - 1.*t12588*t3943*t9813 + t12588*t750*t9862)) - 1.*t5320*(t10427*t12588*t3943 + t10555*t1602*t3943 + t9819*(t13010 + t13020 + t10042*t12864*t3943 - 1.*t12864*t6127*t750 + t12588*t3943*t9813 - 1.*t12588*t750*t9862) + t10042*(t12990 + t12999 + t12864*t4994*t750 - 1.*t1602*t3943*t9813 - 1.*t12864*t3943*t9819 + t1602*t750*t9862)) - 1.*t5741*(t10011*t1602*t3943 + t9819*(t12880 + t12902 + t12864*t5494*t750 - 1.*t12864*t3943*t9701 - 1.*t12572*t3943*t9813 + t12572*t750*t9862) + t9701*(t12844 + t12872 - 1.*t12864*t4994*t750 + t1602*t3943*t9813 + t12864*t3943*t9819 - 1.*t1602*t750*t9862) + t12572*t3943*t9919))*var2[3] - 0.5*(t11041 + 0.085290585*t2236*(t11044 + t11169 + (t11085 + t11110 + t12718 - 1.*t12699*t1863)*t3912 + t3634*(t11050 + t11078 + t12692 + t12699*t4050)) - 0.085290585*t2123*(t11203 + t11271 + (t11204 + t11222 + t12727 + t12699*t1863)*t5044 + t3634*(t11237 + t11241 + t12751 - 1.*t12699*t5120)) - 1.527*t3107*(t11357 + t11377 + (t11299 + t11322 + t12763 - 1.*t12699*t4050)*t5044 + t3912*(t11361 + t11362 + t12775 + t12699*t5120)) - 1.*t4848*(t11508*t12615 + t11471*t12638 + t5953*(t12932 + t12939 + t12864*t5443 + t12572*t9784) + t5395*(t12948 + t12956 - 1.*t12864*t6110 - 1.*t12588*t9784)) - 1.*t5320*(t11556*t12638 + t11604*t1863 + t4930*(t13010 + t13020 + t12864*t6110 + t12588*t9784) + t5953*(t12990 + t12999 - 1.*t12864*t4959 - 1.*t1602*t9784)) - 1.*t5741*(t11388*t12615 + t11432*t1863 + t4930*(t12880 + t12902 - 1.*t12864*t5443 - 1.*t12572*t9784) + t5395*(t12844 + t12872 + t12864*t4959 + t1602*t9784)))*var2[4] - 0.5*(0.0219*(-0.02*t1342*t1383 - 1.*t1342*t7580) + 0.085290585*Power(t2236,2)*(-1.*t12210*t1342 - 1.*t12165*t1383 + t1342*t7969 - 1.*t1383*t8059) - 0.085290585*Power(t2123,2)*(t12210*t1342 + t12165*t1383 - 1.*t1342*t7969 + t1383*t8059) - 1.527*t3107*(t2123*(t12165*t1342*t2123 - 1.*t12210*t1383*t2123 + t1383*t2123*t7969 + t1342*t2123*t8059) + t2236*(t12165*t1342*t2236 - 1.*t12210*t1383*t2236 + t1383*t2236*t7969 + t1342*t2236*t8059)) - 1.*t4667*t5320*(-1.*t12457*t4862 - 1.*t12413*t4873 + t1342*t9736 - 1.*t1383*t9763) - 1.*t4378*t5741*(t12457*t4862 + t12413*t4873 - 1.*t1342*t9736 + t1383*t9763) - 1.*t4848*(t4378*(-1.*t12457*t5784 - 1.*t12413*t5947 + t1383*t4378*t9736 + t1342*t4378*t9763) + t4667*(t12457*t5364 + t12413*t5377 - 1.*t1383*t4782*t9736 - 1.*t1342*t4782*t9763)))*var2[5])*var2[15];
  p_output1[16]=var2[15]*(t13512 - 0.5*(t14124 + t14145 + t14151 + t14157 + 0.085290585*t14105*t2236 - 1.527*t13604*t1863*t3943 + 0.085290585*t2236*t7891 - 0.241*t13764*t9819)*var2[0] - 0.5*(-0.241*t13764*t14376 + t14387 + t14392 + t14397 + t14402 - 1.527*t13604*t6627 + 0.085290585*t2236*t6851 + 0.085290585*t2236*(-1.*t14214*t1700 + t10661*t688))*var2[1] - 0.5*(-0.241*t13764*t14230 + t14306 + t14333 + t14341 + t14349 + 0.085290585*t2236*(t10661*t1700 + t14214*t688) + 0.085290585*t2236*(t1700*t3912 + t4131*t688) - 1.527*t13604*(t1700*t3634 - 1.*t1863*t688*t750))*var2[2] - 0.5*(t14845 - 0.241*t13764*t14890 + t14899 + 0.085290585*t2123*(t7891*t8682 + t1863*t3943*t8882) - 0.085290585*t2123*((t14501 + t14760*t1863*t3943 - 1.*t14769*t1863*t750)*t9007 + t1863*t3943*(t14512 + t14524 - 1.*t14769*t5131 - 1.*t14105*t8195 - 1.*t14214*t8616 - 1.*t14760*t9007) + t14105*t9048) + 0.085290585*t2236*(t9007*t9048 + t1863*t3943*t9523) + 0.085290585*t2236*((t14476 - 1.*t14760*t1863*t3943 + t14769*t1863*t750)*t7891 + t8682*t9007 + t1863*t3943*(t14487 + t14769*t4131 + t14760*t7891 + t9630 + t9634 + t9646)) - 1.527*t13604*(t9007*t9604 + t7891*t9663) - 1.527*t3107*(t7891*(t14560 + t14565 + t14769*t5131 + t14105*t8195 + t14214*t8616 + t14760*t9007) + t9007*(t14546 - 1.*t14769*t4131 - 1.*t14760*t7891 + t9516 + t9520 + t9522) + t14105*t9604 + t9007*t9663) - 1.*t4848*(t14900 + t14914 + (t14670 + t14672 - 1.*t10042*t14855 + t14917 + t14918 - 1.*t14863*t6127)*t9701 + t10042*(t14661 + t14663 + t14903 + t14906 + t14863*t5494 + t14855*t9701)) - 1.*t5320*(t14929 + (t14706 + t14711 + t10042*t14855 + t14944 + t14946 + t14863*t6127)*t9819 + t10042*(t14681 - 1.*t14863*t4994 - 1.*t14855*t9819)) - 1.*t5741*(t14846 + (t14615 + t14622 + t14872 + t14874 - 1.*t14863*t5494 - 1.*t14855*t9701)*t9819 + t9701*(t14604 + t14863*t4994 + t14855*t9819)))*var2[3] - 0.5*(t14588 - 0.241*t13764*t14638 + t14650 + 0.085290585*t2123*(t11160*t3634 + t11043*t3912) + 0.085290585*t2236*(t11267*t3634 + t11198*t5044) - 1.527*t13604*(t11374*t3912 + t11352*t5044) - 1.*(t14590 + (t14604 + t14596*t4959)*t5395 + t4930*(t14611 + t14614 + t14615 + t14622 - 1.*t13669*t4378 - 1.*t14596*t5443))*t5741 - 1.*t4848*(t14654 + t14668 + (t13749 + t13754 + t14659 + t14661 + t14663 + t14596*t5443)*t5953 + t5395*(t13674 + t13676 + t14669 + t14670 + t14672 - 1.*t14596*t6110)) - 1.*t5320*(t14679 + (t14681 - 1.*t14596*t4959)*t5953 + t4930*(t14701 + t14703 + t14706 + t14711 + t13669*t4667 + t14596*t6110)) - 0.085290585*t2123*(t10661*t11198 + (t14501 + t14457*t1863)*t5044 + t3634*(t11139 + t14512 + t14524 + t2474 - 1.*t14457*t5120 - 1.*t14102*t8083)) - 1.527*t3107*(t10661*t11352 + t11374*t5044 + t3912*(t13852 + t14560 + t14565 + t2777 + t14457*t5120 + t14102*t8083) + t5044*(t11260 + t11261 + t14546 + t2964 - 1.*t14457*t4050 + t9516)) + 0.085290585*t2236*((t14476 - 1.*t14457*t1863)*t3912 + t11043*t5044 + t3634*(t11371 + t14487 + t2236*t2290 + t2929 + t14457*t4050 + t9630)))*var2[4] - 0.5*(t13884 + t13894 - 0.241*t13764*t13995 - 1.527*t13604*(t13814*t2123 + t13807*t2236) - 1.*(t13909 + t4667*(-1.*t13691*t1383*t4862 + t1342*t13691*t4873))*t5320 - 1.*(t13920 + t4378*(t13691*t1383*t4862 - 1.*t1342*t13691*t4873))*t5741 - 1.*t4848*(t14008 + t14023 + t4667*(t13749 + t13754 + t14011 + t14013 + t13691*t1383*t5364 - 1.*t1342*t13691*t5377) + t4378*(t13674 + t13676 + t14026 + t14030 - 1.*t13691*t1383*t5784 + t1342*t13691*t5947)) + 0.17058117*t2123*t2236*(-1.*t1383*t7969 - 1.*t1342*t8059) + 0.17058117*t2123*t2236*(t1383*t7969 + t1342*t8059) - 1.527*t3107*(t13807*t2123 - 1.*t13814*t2236 + t2236*(t13809 + t13813 + t13852 - 1.*t13570*t13822*t2236 - 1.*t13570*t13826*t2236 + t2777) + t2123*(t11260 - 1.*t13570*t13822*t2123 - 1.*t13570*t13826*t2123 + t2964 - 1.*t1342*t2236*t7969 + t1383*t2236*t8059)))*var2[5] - 0.5*(t13612 + t13613 + t13642 + t13647 - 3.054*t13604*t3107 - 0.241*t13764*t4832 - 1.*t13764*t4848)*var2[15] - 0.5*(t13533 + t13545 - 0.0034116234*t2123 + 0.0034116234*t2236)*var2[16]);
  p_output1[17]=var2[15]*(t13512 - 0.5*(t14124 + t14145 + t14151 + t14157 - 0.241*t15019*t9819)*var2[0] - 0.5*(t14387 + t14392 + t14397 + t14402 - 0.241*t14376*t15019)*var2[1] - 0.5*(t14306 + t14333 + t14341 + t14349 - 0.241*t14230*t15019)*var2[2] - 0.5*(t14845 + t14899 - 0.241*t14890*t15019 - 1.*t4848*(t14900 + t14914 + (t14670 + t14917 + t14918 + t15156 - 1.*t10042*t15196 - 1.*t15215*t6127)*t9701 + t10042*(t14661 + t14903 + t14906 + t15141 + t15215*t5494 + t15196*t9701)) - 1.*t5320*(t14929 + (t14706 + t14944 + t14946 + t15175 + t10042*t15196 + t15215*t6127)*t9819 + t10042*(t15163 - 1.*t15215*t4994 - 1.*t15196*t9819)) - 1.*t5741*(t14846 + (t14615 + t14872 + t14874 + t15122 - 1.*t15215*t5494 - 1.*t15196*t9701)*t9819 + t9701*(t15109 + t15215*t4994 + t15196*t9819)))*var2[3] - 0.5*(t14588 + t14650 - 0.241*t14638*t15019 - 1.*(t14590 + (t15109 + t15102*t4959)*t5395 + t4930*(t14611 + t14614 + t14615 + t15122 - 1.*t15000*t4378 - 1.*t15102*t5443))*t5741 - 1.*t4848*(t14654 + t14668 + (t13749 + t14659 + t14661 + t15013 + t15141 + t15102*t5443)*t5953 + t5395*(t13676 + t14669 + t14670 + t15001 + t15156 - 1.*t15102*t6110)) - 1.*t5320*(t14679 + (t15163 - 1.*t15102*t4959)*t5953 + t4930*(t14701 + t14703 + t14706 + t15175 + t15000*t4667 + t15102*t6110)))*var2[4] - 0.5*(t13884 + t13894 - 0.241*t13995*t15019 - 1.*(t13909 + t4667*(-1.*t1383*t15007*t4862 + t1342*t15007*t4873))*t5320 - 1.*(t13920 + t4378*(t1383*t15007*t4862 - 1.*t1342*t15007*t4873))*t5741 - 1.*t4848*(t14008 + t14023 + t4667*(t13749 + t14011 + t14013 + t15013 + t1383*t15007*t5364 - 1.*t1342*t15007*t5377) + t4378*(t13676 + t14026 + t14030 + t15001 - 1.*t1383*t15007*t5784 + t1342*t15007*t5947)))*var2[5] - 0.5*(t13612 + t13613 + t13642 + t13647 - 0.241*t15019*t4832 - 1.*t15019*t4848)*var2[15] - 0.5*(t13533 + t13545 - 1.*(0.194401*t4225 + t14977*t4225 + t14982*t4279 + t4225*t4527 - 1.*t4279*t4574)*t5320 - 1.*(t13536 + t13537 + t13540 - 1.*t14982*t4225 + t14977*t4279)*t5741)*var2[16]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec16_plane.hh"

namespace SymFunction
{

void Ce3_vec16_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
