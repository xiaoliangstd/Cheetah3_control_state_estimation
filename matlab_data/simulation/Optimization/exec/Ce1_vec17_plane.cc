/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:50:30 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t490;
  double t263;
  double t455;
  double t508;
  double t686;
  double t921;
  double t799;
  double t1126;
  double t1232;
  double t1128;
  double t1167;
  double t1656;
  double t1661;
  double t1682;
  double t1441;
  double t1444;
  double t1470;
  double t1526;
  double t1200;
  double t1204;
  double t1278;
  double t1314;
  double t1802;
  double t1933;
  double t1939;
  double t640;
  double t802;
  double t862;
  double t882;
  double t984;
  double t1052;
  double t1053;
  double t1125;
  double t1363;
  double t1440;
  double t1530;
  double t1649;
  double t1773;
  double t1784;
  double t1791;
  double t1799;
  double t2625;
  double t3261;
  double t3373;
  double t3389;
  double t3403;
  double t3218;
  double t3248;
  double t3283;
  double t3286;
  double t3314;
  double t3320;
  double t3324;
  double t3335;
  double t3372;
  double t3405;
  double t3406;
  double t3410;
  double t3420;
  double t3438;
  double t3440;
  double t2166;
  double t2181;
  double t2051;
  double t2065;
  double t3489;
  double t3492;
  double t3473;
  double t3474;
  double t3478;
  double t2374;
  double t2387;
  double t2307;
  double t2310;
  double t3060;
  double t3077;
  double t3082;
  double t3519;
  double t3557;
  double t3578;
  double t3660;
  double t3670;
  double t3673;
  double t3751;
  double t3772;
  double t3797;
  double t3871;
  double t3880;
  double t3893;
  double t4219;
  double t4274;
  double t1754;
  double t1756;
  double t1761;
  double t1940;
  double t1941;
  double t1958;
  double t2667;
  double t4264;
  double t4286;
  double t4287;
  double t4288;
  double t4319;
  double t4320;
  double t4328;
  double t4329;
  double t2089;
  double t2196;
  double t2274;
  double t2311;
  double t2388;
  double t2413;
  double t2734;
  double t2957;
  double t2966;
  double t3970;
  double t3994;
  double t4028;
  double t3858;
  double t3910;
  double t3946;
  double t4778;
  double t4779;
  double t4783;
  double t4041;
  double t4045;
  double t4095;
  double t4101;
  double t4801;
  double t4802;
  double t4813;
  double t4831;
  double t4855;
  double t4859;
  double t4860;
  double t4865;
  double t4868;
  double t4875;
  double t4877;
  double t4883;
  double t4889;
  double t4890;
  double t4901;
  double t4910;
  double t4913;
  double t4915;
  double t4920;
  double t4927;
  double t3463;
  double t3466;
  double t3486;
  double t3487;
  double t3504;
  double t3509;
  double t5021;
  double t5034;
  double t5040;
  double t5043;
  double t3630;
  double t3638;
  double t3640;
  double t5074;
  double t5092;
  double t5096;
  double t5152;
  double t4346;
  double t4369;
  double t4371;
  double t4441;
  double t4454;
  double t4455;
  double t4501;
  double t4503;
  double t4563;
  double t4578;
  double t4579;
  double t4606;
  double t4608;
  double t4613;
  double t4618;
  double t4619;
  double t4620;
  double t5445;
  double t5446;
  double t5447;
  double t5456;
  double t5478;
  double t5485;
  double t5516;
  double t5553;
  double t4628;
  double t4676;
  double t4747;
  double t4754;
  double t4761;
  double t5844;
  double t5859;
  double t5860;
  double t5871;
  double t5872;
  double t5875;
  double t5881;
  double t5882;
  double t4937;
  double t4938;
  double t4939;
  double t4785;
  double t4790;
  double t4795;
  double t5234;
  double t5248;
  double t5281;
  double t5289;
  double t6133;
  double t6137;
  double t6139;
  double t6152;
  double t6154;
  double t6161;
  double t6132;
  double t6147;
  double t6148;
  double t6215;
  double t6219;
  double t6259;
  double t6275;
  double t6284;
  double t6291;
  double t6345;
  double t6359;
  double t6370;
  double t6380;
  double t6383;
  double t6326;
  double t6338;
  double t6340;
  double t6409;
  double t6420;
  double t6434;
  double t6445;
  double t6467;
  double t6488;
  double t6491;
  double t6511;
  double t6514;
  double t6558;
  double t6559;
  double t6566;
  double t6128;
  double t6130;
  double t6131;
  double t6342;
  double t6385;
  double t6396;
  double t6533;
  double t6567;
  double t6570;
  double t6606;
  double t6607;
  double t6613;
  double t6149;
  double t6164;
  double t6169;
  double t6103;
  double t6124;
  double t6126;
  double t3053;
  double t3099;
  double t3185;
  double t6211;
  double t6293;
  double t3517;
  double t3605;
  double t3619;
  double t7722;
  double t7727;
  double t7748;
  double t7770;
  double t7775;
  double t7804;
  double t7806;
  double t7808;
  double t7716;
  double t7793;
  double t7696;
  double t7689;
  double t7900;
  double t7901;
  double t7902;
  double t7903;
  double t7909;
  double t7927;
  double t7860;
  double t7867;
  double t7879;
  double t7850;
  double t7851;
  double t7854;
  double t7955;
  double t7963;
  double t7977;
  double t7978;
  double t7988;
  double t8004;
  double t8008;
  double t7690;
  double t7703;
  double t7714;
  double t7858;
  double t7884;
  double t7895;
  double t7930;
  double t7932;
  double t7979;
  double t8016;
  double t8021;
  double t7941;
  double t7946;
  double t8029;
  double t8047;
  double t8054;
  double t7801;
  double t7812;
  double t7819;
  double t3706;
  double t3807;
  double t3826;
  double t8429;
  double t8433;
  double t8455;
  double t6407;
  double t6598;
  double t6619;
  double t6654;
  double t6659;
  double t6664;
  double t6681;
  double t6689;
  double t6709;
  double t6724;
  double t6757;
  double t6910;
  double t6942;
  double t6953;
  double t6954;
  double t6961;
  double t7083;
  double t7099;
  double t7101;
  double t7249;
  double t7269;
  double t7375;
  double t7389;
  double t7421;
  double t7434;
  double t7530;
  double t7544;
  double t7620;
  double t7633;
  double t7637;
  double t7651;
  double t7674;
  double t8658;
  double t8660;
  double t8663;
  double t8669;
  double t8673;
  double t8677;
  double t8087;
  double t8101;
  double t8106;
  double t8114;
  double t8643;
  double t8169;
  double t8172;
  double t8176;
  double t8178;
  double t8649;
  double t8314;
  double t8347;
  double t8348;
  double t8351;
  double t8386;
  double t8389;
  double t8394;
  double t8395;
  double t9713;
  double t9774;
  double t9835;
  double t4051;
  double t11083;
  double t11022;
  double t11053;
  double t11054;
  double t4114;
  double t11808;
  double t11812;
  double t11861;
  double t11865;
  double t11867;
  double t11814;
  double t11816;
  double t11818;
  double t11859;
  double t11872;
  double t11877;
  double t11881;
  double t11882;
  double t11907;
  double t3021;
  double t3038;
  double t12201;
  double t12216;
  double t12217;
  double t12223;
  double t12251;
  double t12259;
  double t12260;
  double t12263;
  double t12226;
  double t12246;
  double t12247;
  double t12255;
  double t12266;
  double t12272;
  double t12276;
  double t12278;
  double t12279;
  double t12192;
  double t12475;
  double t12484;
  double t12502;
  double t12532;
  double t12533;
  double t12534;
  double t12537;
  double t12543;
  double t12544;
  double t12314;
  double t12503;
  double t12508;
  double t12509;
  double t12318;
  double t12326;
  double t12536;
  double t12547;
  double t12549;
  double t12561;
  double t12563;
  double t12565;
  double t12394;
  double t12413;
  double t12425;
  double t12427;
  double t6705;
  double t6170;
  double t7066;
  double t7461;
  double t7836;
  double t7897;
  double t8120;
  double t8129;
  double t8274;
  double t8278;
  double t8359;
  double t8365;
  double t12863;
  double t12871;
  double t12880;
  double t8510;
  double t12883;
  double t12898;
  double t8427;
  double t12929;
  double t12937;
  double t12938;
  double t12942;
  double t13005;
  double t13015;
  double t13018;
  double t13027;
  double t8551;
  double t13128;
  double t8584;
  double t13171;
  double t13181;
  double t13182;
  double t13183;
  double t13235;
  double t13236;
  double t8647;
  double t8651;
  double t8690;
  double t8691;
  double t13287;
  double t13288;
  double t13298;
  double t13303;
  double t13309;
  double t8893;
  double t8926;
  double t9184;
  double t9185;
  double t13341;
  double t13342;
  double t13344;
  double t11840;
  double t11935;
  double t11939;
  double t12075;
  double t12099;
  double t12103;
  double t12249;
  double t12315;
  double t12395;
  double t12422;
  double t13588;
  double t12527;
  double t13596;
  double t13599;
  double t12574;
  double t13608;
  double t12795;
  double t13615;
  double t13616;
  double t12820;
  double t13890;
  double t13892;
  double t13893;
  double t13899;
  double t13906;
  double t13907;
  double t13909;
  double t13911;
  double t14018;
  double t14022;
  double t14024;
  double t14027;
  double t14028;
  t490 = Cos(var1[16]);
  t263 = Cos(var1[4]);
  t455 = Cos(var1[15]);
  t508 = Cos(var1[5]);
  t686 = Sin(var1[15]);
  t921 = Sin(var1[16]);
  t799 = Sin(var1[5]);
  t1126 = Cos(var1[17]);
  t1232 = Sin(var1[17]);
  t1128 = -1.*t1126;
  t1167 = 1. + t1128;
  t1656 = -1.*t1126*t921;
  t1661 = -1.*t490*t1232;
  t1682 = 0. + t1656 + t1661;
  t1441 = -0.336601*t1167;
  t1444 = -0.356601*t1126;
  t1470 = -0.16*t1232;
  t1526 = 0. + t1441 + t1444 + t1470;
  t1200 = -0.20833*t1167;
  t1204 = -0.36833*t1126;
  t1278 = 0.020000000000000018*t1232;
  t1314 = 0. + t1200 + t1204 + t1278;
  t1802 = t490*t1126;
  t1933 = -1.*t921*t1232;
  t1939 = 0. + t1802 + t1933;
  t640 = -1.*t455*t490*t508;
  t802 = t490*t686*t799;
  t862 = t640 + t802;
  t882 = 0.06108*t263*t862;
  t984 = t455*t508*t921;
  t1052 = -1.*t686*t921*t799;
  t1053 = t984 + t1052;
  t1125 = -0.06108*t263*t1053;
  t1363 = t1126*t1314;
  t1440 = 0.194401*t1232;
  t1530 = t1526*t1232;
  t1649 = 0. + t1363 + t1440 + t1530;
  t1773 = -0.194401*t1126;
  t1784 = -1.*t1126*t1526;
  t1791 = t1314*t1232;
  t1799 = 0. + t1773 + t1784 + t1791;
  t2625 = Sin(var1[4]);
  t3261 = t1656 + t1661;
  t3373 = -1.*t490*t1126;
  t3389 = t921*t1232;
  t3403 = t3373 + t3389;
  t3218 = t1802 + t1933;
  t3248 = t3218*t2625;
  t3283 = -1.*t508*t686*t3261;
  t3286 = -1.*t455*t3261*t799;
  t3314 = t3283 + t3286;
  t3320 = t263*t3314;
  t3324 = t3248 + t3320;
  t3335 = 0.241*t1799*t3324;
  t3372 = t3261*t2625;
  t3405 = -1.*t508*t686*t3403;
  t3406 = -1.*t455*t3403*t799;
  t3410 = t3405 + t3406;
  t3420 = t263*t3410;
  t3438 = t3372 + t3420;
  t3440 = 0.241*t1649*t3438;
  t2166 = -1.*t686*t1682;
  t2181 = 0. + t2166;
  t2051 = t455*t1682;
  t2065 = 0. + t2051;
  t3489 = -0.16*t1126;
  t3492 = t3489 + t1278;
  t3473 = 0.020000000000000018*t1126;
  t3474 = 0.16*t1232;
  t3478 = t3473 + t3474;
  t2374 = -1.*t686*t1939;
  t2387 = 0. + t2374;
  t2307 = t455*t1939;
  t2310 = 0. + t2307;
  t3060 = t508*t686*t921;
  t3077 = t455*t921*t799;
  t3082 = t3060 + t3077;
  t3519 = t508*t2181;
  t3557 = -1.*t2065*t799;
  t3578 = 0. + t3519 + t3557;
  t3660 = t1126*t921;
  t3670 = t490*t1232;
  t3673 = 0. + t3660 + t3670;
  t3751 = t508*t2387;
  t3772 = -1.*t2310*t799;
  t3797 = 0. + t3751 + t3772;
  t3871 = -1.*t490*t508*t686;
  t3880 = -1.*t455*t490*t799;
  t3893 = t3871 + t3880;
  t4219 = Cos(var1[3]);
  t4274 = Sin(var1[3]);
  t1754 = -1.*t455*t508*t1682;
  t1756 = t686*t1682*t799;
  t1761 = t1754 + t1756;
  t1940 = -1.*t455*t508*t1939;
  t1941 = t686*t1939*t799;
  t1958 = t1940 + t1941;
  t2667 = -1.*t921*t2625;
  t4264 = t4219*t3893;
  t4286 = t4274*t2625*t862;
  t4287 = t4264 + t4286;
  t4288 = 0.06108*t4287;
  t4319 = t4219*t3082;
  t4320 = t4274*t2625*t1053;
  t4328 = t4319 + t4320;
  t4329 = -0.06108*t4328;
  t2089 = -1.*t508*t2065;
  t2196 = -1.*t2181*t799;
  t2274 = t2089 + t2196;
  t2311 = -1.*t508*t2310;
  t2388 = -1.*t2387*t799;
  t2413 = t2311 + t2388;
  t2734 = t490*t508*t686;
  t2957 = t455*t490*t799;
  t2966 = t2734 + t2957;
  t3970 = t490*t263;
  t3994 = -1.*t2625*t3082;
  t4028 = t3970 + t3994;
  t3858 = t263*t921;
  t3910 = -1.*t2625*t3893;
  t3946 = t3858 + t3910;
  t4778 = -1.*t455*t508*t921;
  t4779 = t686*t921*t799;
  t4783 = t4778 + t4779;
  t4041 = t263*t1939;
  t4045 = -1.*t2625*t3578;
  t4095 = t263*t3673;
  t4101 = -1.*t2625*t3797;
  t4801 = t455*t508*t3261;
  t4802 = -1.*t686*t3261*t799;
  t4813 = t4801 + t4802;
  t4831 = t4219*t4813;
  t4855 = t263*t3218;
  t4859 = -1.*t2625*t3314;
  t4860 = t4855 + t4859;
  t4865 = -1.*t4274*t4860;
  t4868 = t4831 + t4865;
  t4875 = 0.241*t1799*t4868;
  t4877 = t455*t508*t3403;
  t4883 = -1.*t686*t3403*t799;
  t4889 = t4877 + t4883;
  t4890 = t4219*t4889;
  t4901 = t263*t3261;
  t4910 = -1.*t2625*t3410;
  t4913 = t4901 + t4910;
  t4915 = -1.*t4274*t4913;
  t4920 = t4890 + t4915;
  t4927 = 0.241*t1649*t4920;
  t3463 = 0.194401*t1126;
  t3466 = t1126*t1526;
  t3486 = t1126*t3478;
  t3487 = -1.*t1314*t1232;
  t3504 = t3492*t1232;
  t3509 = t3463 + t3466 + t3486 + t3487 + t3504;
  t5021 = t508*t2065;
  t5034 = t2181*t799;
  t5040 = 0. + t5021 + t5034;
  t5043 = 0. + t4041 + t4045;
  t3630 = -1.*t1126*t3492;
  t3638 = t3478*t1232;
  t3640 = t1363 + t3630 + t1440 + t1530 + t3638;
  t5074 = t508*t2310;
  t5092 = t2387*t799;
  t5096 = 0. + t5074 + t5092;
  t5152 = 0. + t4095 + t4101;
  t4346 = -1.*t508*t686*t1682;
  t4369 = -1.*t455*t1682*t799;
  t4371 = t4346 + t4369;
  t4441 = -1.*t508*t686*t1939;
  t4454 = -1.*t455*t1939*t799;
  t4455 = t4441 + t4454;
  t4501 = -1.*t263*t3893;
  t4503 = t2667 + t4501;
  t4563 = -1.*t490*t2625;
  t4578 = -1.*t263*t3082;
  t4579 = t4563 + t4578;
  t4606 = -1.*t1939*t2625;
  t4608 = -1.*t263*t3578;
  t4613 = t4606 + t4608;
  t4618 = -1.*t3673*t2625;
  t4619 = -1.*t263*t3797;
  t4620 = t4618 + t4619;
  t5445 = t4274*t3893;
  t5446 = -1.*t4219*t2625*t862;
  t5447 = t5445 + t5446;
  t5456 = 0.06108*t5447;
  t5478 = t4274*t3082;
  t5485 = -1.*t4219*t2625*t1053;
  t5516 = t5478 + t5485;
  t5553 = -0.06108*t5516;
  t4628 = t3519 + t3557;
  t4676 = t3751 + t3772;
  t4747 = -1.*t263*t921;
  t4754 = -1.*t2625*t2966;
  t4761 = t4747 + t4754;
  t5844 = t4274*t4813;
  t5859 = t4219*t4860;
  t5860 = t5844 + t5859;
  t5871 = 0.241*t1799*t5860;
  t5872 = t4274*t4889;
  t5875 = t4219*t4913;
  t5881 = t5872 + t5875;
  t5882 = 0.241*t1649*t5881;
  t4937 = t455*t490*t508;
  t4938 = -1.*t490*t686*t799;
  t4939 = t4937 + t4938;
  t4785 = t4219*t4783;
  t4790 = -1.*t4274*t4028;
  t4795 = t4785 + t4790;
  t5234 = t4219*t5040;
  t5248 = -1.*t4274*t5043;
  t5281 = t4219*t5096;
  t5289 = -1.*t4274*t5152;
  t6133 = -0.04*t490;
  t6137 = 0.04*t921;
  t6139 = t6133 + t6137;
  t6152 = -0.055855*t686;
  t6154 = -1.*t455*t6139;
  t6161 = t6152 + t6154;
  t6132 = 0.055855*t455;
  t6147 = -1.*t686*t6139;
  t6148 = t6132 + t6147;
  t6215 = t455*t508;
  t6219 = -1.*t686*t799;
  t6259 = t6215 + t6219;
  t6275 = t508*t6161;
  t6284 = -1.*t6148*t799;
  t6291 = t6275 + t6284;
  t6345 = -1.*t455;
  t6359 = 1. + t6345;
  t6370 = 0.081715*t6359;
  t6380 = 0.13757*t455;
  t6383 = t6370 + t6380 + t6147;
  t6326 = 0.055855*t686;
  t6338 = t455*t6139;
  t6340 = t6326 + t6338;
  t6409 = -1.*t508*t686;
  t6420 = -1.*t455*t799;
  t6434 = t6409 + t6420;
  t6445 = -1.*t490;
  t6467 = 1. + t6445;
  t6488 = -0.194401*t6467;
  t6491 = -0.234401*t490;
  t6511 = -0.04*t921;
  t6514 = t6488 + t6491 + t6511;
  t6558 = t508*t6383;
  t6559 = -1.*t6340*t799;
  t6566 = t6558 + t6559;
  t6128 = t508*t686;
  t6130 = t455*t799;
  t6131 = t6128 + t6130;
  t6342 = t508*t6340;
  t6385 = t6383*t799;
  t6396 = t6342 + t6385;
  t6533 = t6514*t2625;
  t6567 = t263*t6566;
  t6570 = t6533 + t6567;
  t6606 = t263*t6514;
  t6607 = -1.*t2625*t6566;
  t6613 = t6606 + t6607;
  t6149 = t508*t6148;
  t6164 = t6161*t799;
  t6169 = t6149 + t6164;
  t6103 = t921*t2625;
  t6124 = t263*t3893;
  t6126 = t6103 + t6124;
  t3053 = t490*t2625;
  t3099 = t263*t3082;
  t3185 = t3053 + t3099;
  t6211 = Power(t263,2);
  t6293 = Power(t2625,2);
  t3517 = t1939*t2625;
  t3605 = t263*t3578;
  t3619 = 0. + t3517 + t3605;
  t7722 = -0.194401*t921;
  t7727 = -1.*t921*t1526;
  t7748 = t490*t1314;
  t7770 = 0. + t7722 + t7727 + t7748;
  t7775 = -1.*t686*t7770;
  t7804 = -0.035165*t686;
  t7806 = -1.*t455*t7770;
  t7808 = t7804 + t7806;
  t7716 = 0.035165*t455;
  t7793 = t7716 + t7775;
  t7696 = 0. + t455;
  t7689 = 0. + t686;
  t7900 = t508*t7808;
  t7901 = -1.*t7793*t799;
  t7902 = t7900 + t7901;
  t7903 = t7696*t508;
  t7909 = -1.*t7689*t799;
  t7927 = 0. + t7903 + t7909;
  t7860 = 0.081715*t6359;
  t7867 = 0.11688*t455;
  t7879 = t7860 + t7867 + t7775;
  t7850 = 0.035165*t686;
  t7851 = t455*t7770;
  t7854 = t7850 + t7851;
  t7955 = -0.194401*t6467;
  t7963 = t490*t1526;
  t7977 = t921*t1314;
  t7978 = 0. + t7955 + t7963 + t7977;
  t7988 = t508*t7879;
  t8004 = -1.*t7854*t799;
  t8008 = 0. + t7988 + t8004;
  t7690 = t508*t7689;
  t7703 = t7696*t799;
  t7714 = 0. + t7690 + t7703;
  t7858 = t508*t7854;
  t7884 = t7879*t799;
  t7895 = 0. + t7858 + t7884;
  t7930 = t263*t7927;
  t7932 = 0. + t7930;
  t7979 = t7978*t2625;
  t8016 = t263*t8008;
  t8021 = 0. + t7979 + t8016;
  t7941 = -1.*t2625*t7927;
  t7946 = 0. + t7941;
  t8029 = t263*t7978;
  t8047 = -1.*t2625*t8008;
  t8054 = 0. + t8029 + t8047;
  t7801 = t508*t7793;
  t7812 = t7808*t799;
  t7819 = t7801 + t7812;
  t3706 = t3673*t2625;
  t3807 = t263*t3797;
  t3826 = 0. + t3706 + t3807;
  t8429 = -1.*t508*t6340;
  t8433 = -1.*t6383*t799;
  t8455 = t8429 + t8433;
  t6407 = -1.*t6259*t6396;
  t6598 = -1.*t263*t6434*t6570;
  t6619 = t2625*t6434*t6613;
  t6654 = -1.*t6131*t6396;
  t6659 = -1.*t263*t6259*t6570;
  t6664 = t2625*t6259*t6613;
  t6681 = t6654 + t6659 + t6664;
  t6689 = t263*t862*t6681;
  t6709 = t3893*t6396;
  t6724 = t263*t862*t6570;
  t6757 = -1.*t2625*t862*t6613;
  t6910 = t4939*t6396;
  t6942 = t6126*t6570;
  t6953 = t3946*t6613;
  t6954 = t6910 + t6942 + t6953;
  t6961 = t263*t6434*t6954;
  t7083 = t6259*t6396;
  t7099 = t263*t6434*t6570;
  t7101 = -1.*t2625*t6434*t6613;
  t7249 = t6131*t6396;
  t7269 = t263*t6259*t6570;
  t7375 = -1.*t2625*t6259*t6613;
  t7389 = t7249 + t7269 + t7375;
  t7421 = t263*t1053*t7389;
  t7434 = -1.*t6396*t3082;
  t7530 = -1.*t263*t1053*t6570;
  t7544 = t2625*t1053*t6613;
  t7620 = -1.*t6396*t4783;
  t7633 = -1.*t6570*t3185;
  t7637 = -1.*t6613*t4028;
  t7651 = t7620 + t7633 + t7637;
  t7674 = t263*t6434*t7651;
  t8658 = -1.*t508*t7854;
  t8660 = -1.*t7879*t799;
  t8663 = t8658 + t8660;
  t8669 = -1.*t508*t7689;
  t8673 = -1.*t7696*t799;
  t8677 = t8669 + t8673;
  t8087 = t7714*t7895;
  t8101 = t7932*t8021;
  t8106 = t7946*t8054;
  t8114 = t8087 + t8101 + t8106;
  t8643 = t7988 + t8004;
  t8169 = -1.*t7895*t5040;
  t8172 = -1.*t8021*t3619;
  t8176 = -1.*t8054*t5043;
  t8178 = t8169 + t8172 + t8176;
  t8649 = t7903 + t7909;
  t8314 = -1.*t7714*t7895;
  t8347 = -1.*t7932*t8021;
  t8348 = -1.*t7946*t8054;
  t8351 = t8314 + t8347 + t8348;
  t8386 = t7895*t5096;
  t8389 = t8021*t3826;
  t8394 = t8054*t5152;
  t8395 = t8386 + t8389 + t8394;
  t9713 = -1.*t6514*t2625;
  t9774 = -1.*t263*t6566;
  t9835 = t9713 + t9774;
  t4051 = t4041 + t4045;
  t11083 = t8029 + t8047;
  t11022 = -1.*t7978*t2625;
  t11053 = -1.*t263*t8008;
  t11054 = t11022 + t11053;
  t4114 = t4095 + t4101;
  t11808 = 0.04*t490;
  t11812 = t11808 + t6137;
  t11861 = -1.*t508*t686*t11812;
  t11865 = -1.*t455*t11812*t799;
  t11867 = t11861 + t11865;
  t11814 = t455*t508*t11812;
  t11816 = -1.*t686*t11812*t799;
  t11818 = t11814 + t11816;
  t11859 = t6139*t2625;
  t11872 = t263*t11867;
  t11877 = t11859 + t11872;
  t11881 = t263*t6139;
  t11882 = -1.*t2625*t11867;
  t11907 = t11881 + t11882;
  t3021 = t263*t2966;
  t3038 = t2667 + t3021;
  t12201 = -0.194401*t490;
  t12216 = -1.*t490*t1526;
  t12217 = -1.*t921*t1314;
  t12223 = t12201 + t12216 + t12217;
  t12251 = t7722 + t7727 + t7748;
  t12259 = -1.*t508*t686*t12223;
  t12260 = -1.*t455*t12223*t799;
  t12263 = t12259 + t12260;
  t12226 = t455*t508*t12223;
  t12246 = -1.*t686*t12223*t799;
  t12247 = t12226 + t12246;
  t12255 = t12251*t2625;
  t12266 = t263*t12263;
  t12272 = t12255 + t12266;
  t12276 = t263*t12251;
  t12278 = -1.*t2625*t12263;
  t12279 = t12276 + t12278;
  t12192 = t3438*t8114;
  t12475 = -1.*t921*t3492;
  t12484 = t490*t3478;
  t12502 = t12475 + t12484;
  t12532 = t490*t3492;
  t12533 = t921*t3478;
  t12534 = t12532 + t12533;
  t12537 = -1.*t508*t686*t12502;
  t12543 = -1.*t455*t12502*t799;
  t12544 = t12537 + t12543;
  t12314 = -1.*t7895*t4889;
  t12503 = t455*t508*t12502;
  t12508 = -1.*t686*t12502*t799;
  t12509 = t12503 + t12508;
  t12318 = -1.*t8021*t3438;
  t12326 = -1.*t8054*t4913;
  t12536 = t12534*t2625;
  t12547 = t263*t12544;
  t12549 = t12536 + t12547;
  t12561 = t263*t12534;
  t12563 = -1.*t2625*t12544;
  t12565 = t12561 + t12563;
  t12394 = t3324*t8351;
  t12413 = t7895*t4813;
  t12425 = t8021*t3324;
  t12427 = t8054*t4860;
  t6705 = t4939*t6169;
  t6170 = -1.*t6131*t6169;
  t7066 = t6131*t6169;
  t7461 = -1.*t6169*t4783;
  t7836 = t7714*t7819;
  t7897 = t6259*t7895;
  t8120 = -1.*t7895*t4371;
  t8129 = -1.*t7819*t5040;
  t8274 = -1.*t7714*t7819;
  t8278 = -1.*t6259*t7895;
  t8359 = t7895*t4455;
  t8365 = t7819*t5096;
  t12863 = -1.*t6259*t6566;
  t12871 = t12863 + t6654;
  t12880 = t3893*t12871;
  t8510 = t4939*t6566;
  t12883 = t862*t6566;
  t12898 = -1.*t6434*t6566;
  t8427 = -1.*t6131*t6566;
  t12929 = t6514*t921;
  t12937 = t3893*t6566;
  t12938 = t12929 + t12937 + t6910;
  t12942 = t6259*t12938;
  t13005 = t6259*t6566;
  t13015 = t13005 + t7249;
  t13018 = t3082*t13015;
  t13027 = t6434*t6566;
  t8551 = t6131*t6566;
  t13128 = -1.*t6566*t1053;
  t8584 = -1.*t6566*t4783;
  t13171 = -1.*t490*t6514;
  t13181 = -1.*t6566*t3082;
  t13182 = t13171 + t13181 + t7620;
  t13183 = t6259*t13182;
  t13235 = t7927*t8008;
  t13236 = 0. + t13235 + t8087;
  t8647 = t7714*t8643;
  t8651 = t8649*t7895;
  t8690 = -1.*t7895*t4628;
  t8691 = -1.*t8643*t5040;
  t13287 = -1.*t7978*t1939;
  t13288 = -1.*t8008*t3578;
  t13298 = t13287 + t13288 + t8169;
  t13303 = -1.*t7927*t8008;
  t13309 = 0. + t13303 + t8314;
  t8893 = -1.*t7714*t8643;
  t8926 = -1.*t8649*t7895;
  t9184 = t7895*t4676;
  t9185 = t8643*t5096;
  t13341 = t7978*t3673;
  t13342 = t8008*t3797;
  t13344 = t13341 + t13342 + t8386;
  t11840 = -1.*t6131*t11818;
  t11935 = t4939*t11818;
  t11939 = t6396*t4783;
  t12075 = t6131*t11818;
  t12099 = -1.*t862*t6396;
  t12103 = -1.*t11818*t4783;
  t12249 = t7714*t12247;
  t12315 = -1.*t12247*t5040;
  t12395 = -1.*t7714*t12247;
  t12422 = t12247*t5096;
  t13588 = t4889*t13236;
  t12527 = t7714*t12509;
  t13596 = -1.*t7978*t3261;
  t13599 = -1.*t8008*t3410;
  t12574 = -1.*t12509*t5040;
  t13608 = t4813*t13309;
  t12795 = -1.*t7714*t12509;
  t13615 = t7978*t3218;
  t13616 = t8008*t3314;
  t12820 = t12509*t5096;
  t13890 = -1.*t7689*t7854;
  t13892 = -1.*t7696*t7879;
  t13893 = 0. + t13890 + t13892;
  t13899 = t13893*t3218;
  t13906 = t7689*t7854;
  t13907 = t7696*t7879;
  t13909 = 0. + t13906 + t13907;
  t13911 = t13909*t3261;
  t14018 = 0.008474765*t3261*t1799;
  t14022 = -0.11688*t3218;
  t14024 = -0.081715*t3403;
  t14027 = t14022 + t14024;
  t14028 = 0.241*t1649*t14027;
  p_output1[0]=var2[16]*(-0.5*(0.06108*t3946 - 0.06108*t4028 + 0.241*t1649*t4051 + 0.241*t1799*t4114)*var2[4] - 0.5*(t1125 + 0.241*t1649*t2274*t263 + 0.241*t1799*t2413*t263 + t882)*var2[5] - 0.5*(t1125 + 0.241*t1649*t1761*t263 + 0.241*t1799*t1958*t263 + t882)*var2[15] - 0.5*(-0.06108*t3038 + 0.06108*t3185 + t3335 + t3440)*var2[16] - 0.5*(t3335 + t3440 + 0.241*t3509*t3619 + 0.241*t3640*t3826)*var2[17]);
  p_output1[1]=var2[16]*(-0.5*(-0.06108*(-1.*t4028*t4219 - 1.*t4274*t4783) + 0.06108*(-1.*t3946*t4219 - 1.*t4274*t4939) + 0.241*t1649*(-1.*t4274*t5040 - 1.*t4219*t5043) + 0.241*t1799*(-1.*t4274*t5096 - 1.*t4219*t5152))*var2[3] - 0.5*(-0.06108*t4274*t4503 + 0.06108*t4274*t4579 - 0.241*t1649*t4274*t4613 - 0.241*t1799*t4274*t4620)*var2[4] - 0.5*(t4288 + t4329 + 0.241*t1649*(t2274*t2625*t4274 + t4219*t4628) + 0.241*t1799*(t2413*t2625*t4274 + t4219*t4676))*var2[5] - 0.5*(t4288 + t4329 + 0.241*t1649*(t1761*t2625*t4274 + t4219*t4371) + 0.241*t1799*(t1958*t2625*t4274 + t4219*t4455))*var2[15] - 0.5*(0.06108*t4795 + t4875 + t4927 - 0.06108*(-1.*t4274*t4761 + t4219*t862))*var2[16] - 0.5*(t4875 + t4927 + 0.241*t3509*(0. + t5234 + t5248) + 0.241*t3640*(0. + t5281 + t5289))*var2[17]);
  p_output1[2]=var2[16]*(-0.5*(-0.06108*t4795 + 0.06108*(-1.*t3946*t4274 + t4219*t4939) + 0.241*t1649*(t5234 + t5248) + 0.241*t1799*(t5281 + t5289))*var2[3] - 0.5*(0.06108*t4219*t4503 - 0.06108*t4219*t4579 + 0.241*t1649*t4219*t4613 + 0.241*t1799*t4219*t4620)*var2[4] - 0.5*(0.241*t1649*(-1.*t2274*t2625*t4219 + t4274*t4628) + 0.241*t1799*(-1.*t2413*t2625*t4219 + t4274*t4676) + t5456 + t5553)*var2[5] - 0.5*(0.241*t1649*(-1.*t1761*t2625*t4219 + t4274*t4371) + 0.241*t1799*(-1.*t1958*t2625*t4219 + t4274*t4455) + t5456 + t5553)*var2[15] - 0.5*(0.06108*(t4028*t4219 + t4274*t4783) + t5871 + t5882 - 0.06108*(t4219*t4761 + t4274*t862))*var2[16] - 0.5*(0.241*t3509*(0. + t4274*t5040 + t4219*t5043) + 0.241*t3640*(0. + t4274*t5096 + t4219*t5152) + t5871 + t5882)*var2[17]);
  p_output1[3]=var2[16]*(-0.5*(0.241*t1799*(t7932*(-1.*t11083*t3619 - 1.*t11054*t5043 - 1.*t4051*t8021 - 1.*t4613*t8054) + t3619*(t11083*t7932 + t11054*t7946 - 1.*t2625*t7927*t8021 - 1.*t263*t7927*t8054) + t4051*t8114 - 1.*t2625*t7927*t8178) + 0.241*t1649*(t7932*(t11083*t3826 + t11054*t5152 + t4114*t8021 + t4620*t8054) + t3826*(-1.*t11083*t7932 - 1.*t11054*t7946 + t2625*t7927*t8021 + t263*t7927*t8054) + t4114*t8351 - 1.*t2625*t7927*t8395) + 0.06108*(t4028*t7389 - 1.*t2625*t6259*t7651 + t263*t6259*(-1.*t4028*t6570 - 1.*t3185*t6613 - 1.*t4579*t6613 - 1.*t4028*t9835) + t3185*(-1.*t2625*t6259*t6570 - 1.*t2625*t6259*t9835)) - 0.06108*(t3946*t6681 - 1.*t2625*t6259*t6954 + t263*t6259*(t3946*t6570 + t4503*t6613 + t6126*t6613 + t3946*t9835) + t6126*(t2625*t6259*t6570 + t2625*t6259*t9835)))*var2[4] - 0.5*(-0.06108*(t6689 + t6961 + t6126*(t6407 + t6598 + t6619 + t8427 - 1.*t6211*t6259*t8455 - 1.*t6259*t6293*t8455) + t263*t6259*(t6709 + t6724 + t6757 - 1.*t2625*t3946*t8455 + t263*t6126*t8455 + t8510)) + 0.06108*(t7421 + t7674 + t3185*(t7083 + t7099 + t7101 + t6211*t6259*t8455 + t6259*t6293*t8455 + t8551) + t263*t6259*(t7434 + t7530 + t7544 - 1.*t263*t3185*t8455 + t2625*t4028*t8455 + t8584)) + 0.241*t1799*(t2274*t263*t8114 + t263*t8178*t8677 + t3619*(t8647 + t8651 + t263*t7932*t8663 - 1.*t2625*t7946*t8663 + t263*t8021*t8677 - 1.*t2625*t8054*t8677) + t7932*(-1.*t2274*t263*t8021 + t2274*t2625*t8054 - 1.*t263*t3619*t8663 + t2625*t5043*t8663 + t8690 + t8691)) + 0.241*t1649*(t2413*t263*t8351 + t263*t8395*t8677 + t3826*(-1.*t263*t7932*t8663 + t2625*t7946*t8663 - 1.*t263*t8021*t8677 + t2625*t8054*t8677 + t8893 + t8926) + t7932*(t2413*t263*t8021 - 1.*t2413*t2625*t8054 + t263*t3826*t8663 - 1.*t2625*t5152*t8663 + t9184 + t9185)))*var2[5] - 0.5*(-0.06108*(t6126*(t6170 - 1.*t6211*t6259*t6291 - 1.*t6259*t6291*t6293 + t6407 + t6598 + t6619) + t6689 + t263*t6259*(-1.*t2625*t3946*t6291 + t263*t6126*t6291 + t6705 + t6709 + t6724 + t6757) + t6961) + 0.06108*(t3185*(t6211*t6259*t6291 + t6259*t6291*t6293 + t7066 + t7083 + t7099 + t7101) + t7421 + t263*t6259*(-1.*t263*t3185*t6291 + t2625*t4028*t6291 + t7434 + t7461 + t7530 + t7544) + t7674) + 0.241*t1799*(t3619*(t7836 + t7897 + t263*t7902*t7932 - 1.*t2625*t7902*t7946 + t263*t6434*t8021 - 1.*t2625*t6434*t8054) + t1761*t263*t8114 + t7932*(-1.*t263*t3619*t7902 + t2625*t5043*t7902 - 1.*t1761*t263*t8021 + t1761*t2625*t8054 + t8120 + t8129) + t263*t6434*t8178) + 0.241*t1649*(t3826*(-1.*t263*t7902*t7932 + t2625*t7902*t7946 - 1.*t263*t6434*t8021 + t2625*t6434*t8054 + t8274 + t8278) + t1958*t263*t8351 + t7932*(t263*t3826*t7902 - 1.*t2625*t5152*t7902 + t1958*t263*t8021 - 1.*t1958*t2625*t8054 + t8359 + t8365) + t263*t6434*t8395))*var2[15] - 0.5*(-0.06108*(t6126*(t11840 + t11907*t2625*t6259 - 1.*t11877*t263*t6259) + t263*t6259*(t11935 + t11939 + t11907*t3946 + t11877*t6126 + t3185*t6570 + t4028*t6613) + t3185*t6681) + 0.06108*(t3185*(t12075 - 1.*t11907*t2625*t6259 + t11877*t263*t6259) + t263*t6259*(t12099 + t12103 - 1.*t11877*t3185 - 1.*t11907*t4028 - 1.*t3038*t6570 - 1.*t4761*t6613) + t3038*t7389) + 0.241*t1649*(t12394 + (t12413 + t12422 + t12425 + t12427 + t12272*t3826 + t12279*t5152)*t7932 + t3826*(t12395 - 1.*t12272*t7932 - 1.*t12279*t7946)) + 0.241*t1799*(t12192 + (t12314 + t12315 + t12318 + t12326 - 1.*t12272*t3619 - 1.*t12279*t5043)*t7932 + t3619*(t12249 + t12272*t7932 + t12279*t7946)))*var2[16] - 0.5*(0.241*t1649*(t12394 + (t12413 + t12425 + t12427 + t12820 + t12549*t3826 + t12565*t5152)*t7932 + t3826*(t12795 - 1.*t12549*t7932 - 1.*t12565*t7946)) + 0.241*t1799*(t12192 + (t12314 + t12318 + t12326 + t12574 - 1.*t12549*t3619 - 1.*t12565*t5043)*t7932 + t3619*(t12527 + t12549*t7932 + t12565*t7946)) + 0.241*t3640*(t3619*t8114 + t7932*t8178) + 0.241*t3509*(t3826*t8351 + t7932*t8395))*var2[17]);
  p_output1[4]=var2[16]*(-0.5*(-0.06108*(t12880 + t12942 + t4939*(t12898 + t6407 + t8427 - 1.*t6259*t8455) + t6131*(t12883 + t6709 + t3893*t8455 + t8510)) + 0.06108*(t13018 + t13183 + t4783*(t13027 + t7083 + t6259*t8455 + t8551) + t6131*(t13128 + t7434 - 1.*t3082*t8455 + t8584)) + 0.241*t1799*(t13236*t4628 + t13298*t8649 + t5040*(t8647 + t8651 + t7927*t8663 + t8008*t8677) + t7714*(-1.*t2274*t8008 - 1.*t3578*t8663 + t8690 + t8691)) + 0.241*t1649*(t13309*t4676 + t13344*t8649 + t5096*(-1.*t7927*t8663 - 1.*t8008*t8677 + t8893 + t8926) + t7714*(t2413*t8008 + t3797*t8663 + t9184 + t9185)))*var2[5] - 0.5*(-0.06108*(t12880 + t12942 + t4939*(t12898 + t6170 - 1.*t6259*t6291 + t6407) + t6131*(t12883 + t3893*t6291 + t6705 + t6709)) + 0.06108*(t13018 + t13183 + t4783*(t13027 + t6259*t6291 + t7066 + t7083) + t6131*(t13128 - 1.*t3082*t6291 + t7434 + t7461)) + 0.241*t1799*(t13236*t4371 + t13298*t6259 + t5040*(t7836 + t7897 + t7902*t7927 + t6434*t8008) + t7714*(-1.*t3578*t7902 - 1.*t1761*t8008 + t8120 + t8129)) + 0.241*t1649*(t13309*t4455 + t13344*t6259 + t5096*(-1.*t7902*t7927 - 1.*t6434*t8008 + t8274 + t8278) + t7714*(t3797*t7902 + t1958*t8008 + t8359 + t8365)))*var2[15] - 0.5*(0.241*t1649*(t13608 + (t12413 + t12422 + t13615 + t13616 + t12251*t3673 + t12263*t3797)*t7714 + t5096*(t12395 - 1.*t12263*t7927)) + 0.241*t1799*(t13588 + (t12314 + t12315 + t13596 + t13599 - 1.*t12251*t1939 - 1.*t12263*t3578)*t7714 + t5040*(t12249 + t12263*t7927)) + 0.06108*(t4783*(t12075 + t11867*t6259) + t6131*(t12099 + t12103 + t12929 - 1.*t11867*t3082 - 1.*t490*t6139 - 1.*t2966*t6566) + t13015*t862) - 0.06108*(t12871*t4783 + t4939*(t11840 - 1.*t11867*t6259) + t6131*(t11935 + t11939 + t11867*t3893 + t490*t6514 + t3082*t6566 + t6139*t921)))*var2[16] - 0.5*(0.241*t3640*(t13236*t5040 + t13298*t7714) + 0.241*t3509*(t13309*t5096 + t13344*t7714) + 0.241*t1649*(t13608 + (t12413 + t12820 + t13615 + t13616 + t12534*t3673 + t12544*t3797)*t7714 + t5096*(t12795 - 1.*t12544*t7927)) + 0.241*t1799*(t13588 + (t12314 + t12574 + t13596 + t13599 - 1.*t12534*t1939 - 1.*t12544*t3578)*t7714 + t5040*(t12527 + t12544*t7927)))*var2[17]);
  p_output1[5]=var2[16]*(-0.5*(0.06108*t490*(t455*t6161 + t455*t6340 + t6148*t686 - 1.*t6383*t686) + 0.241*t1799*t1939*(t7689*t7793 + t7696*t7808 + t455*t7854 - 1.*t686*t7879) + 0.241*t1649*t3673*(-1.*t7689*t7793 - 1.*t7696*t7808 - 1.*t455*t7854 + t686*t7879) - 0.06108*(-1.*t455*t6161 - 1.*t455*t6340 - 1.*t6148*t686 + t6383*t686)*t921)*var2[15] - 0.5*(-0.06108*t490*(-1.*t455*t6383 - 1.*t6340*t686) + 0.241*t1799*(t13911 + t1939*(t12223*t455*t7689 - 1.*t12223*t686*t7696)) + 0.241*t1649*(t13899 + t3673*(-1.*t12223*t455*t7689 + t12223*t686*t7696)) - 0.06108*(t455*t6383 + t6340*t686)*t921)*var2[16] - 0.5*((0. + 0.241*(0. + t13909*t1939))*t3640 + t3509*(0. + 0.241*(0. + t13893*t3673)) + 0.241*t1799*(t13911 + t1939*(t12502*t455*t7689 - 1.*t12502*t686*t7696)) + 0.241*t1649*(t13899 + t3673*(-1.*t12502*t455*t7689 + t12502*t686*t7696)))*var2[17]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=var2[16]*(-0.5*(t14018 + t14028 + 0.0034116234*t490 - 0.0034116234*t921)*var2[16] - 0.5*(t14018 + t14028 + (0. + 0.241*(0. + 0.035165*t1939))*t3640 + t3509*(0. + 0.241*(0. - 0.081715*t1682 - 0.11688*t3673)))*var2[17]);
  p_output1[16]=-0.5*((0. + 0.241*t1649)*t3509 + 0.241*t1649*t3509 + (0. + 0.241*t1799)*t3640 + 0.241*t1799*t3640)*var2[16]*var2[17];
  p_output1[17]=-0.5*(-0.03856*t3509 + 0.004820000000000004*t3640)*var2[16]*var2[17];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec17_plane.hh"

namespace SymFunction
{

void Ce1_vec17_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
