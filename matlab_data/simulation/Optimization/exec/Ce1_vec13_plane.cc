/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:50:15 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t2357;
  double t3391;
  double t4124;
  double t4154;
  double t4361;
  double t4535;
  double t4550;
  double t4661;
  double t2383;
  double t3702;
  double t3958;
  double t1212;
  double t7975;
  double t7993;
  double t8621;
  double t8759;
  double t8827;
  double t8907;
  double t8923;
  double t8925;
  double t8940;
  double t9007;
  double t9009;
  double t9011;
  double t7976;
  double t8146;
  double t8370;
  double t9068;
  double t9069;
  double t9074;
  double t9244;
  double t9525;
  double t9633;
  double t9634;
  double t8387;
  double t8926;
  double t9019;
  double t9067;
  double t6448;
  double t6538;
  double t6622;
  double t6666;
  double t7412;
  double t7571;
  double t7625;
  double t9680;
  double t9685;
  double t9734;
  double t4052;
  double t5104;
  double t5119;
  double t5398;
  double t5868;
  double t5889;
  double t5941;
  double t6175;
  double t6352;
  double t9129;
  double t9677;
  double t9678;
  double t9679;
  double t9743;
  double t9745;
  double t9746;
  double t9768;
  double t9769;
  double t10489;
  double t10703;
  double t10722;
  double t10791;
  double t10792;
  double t11063;
  double t11064;
  double t9774;
  double t9779;
  double t9934;
  double t11082;
  double t11307;
  double t11349;
  double t11357;
  double t11358;
  double t11361;
  double t11363;
  double t11329;
  double t10915;
  double t10900;
  double t10902;
  double t11504;
  double t11505;
  double t11506;
  double t10994;
  double t10997;
  double t10989;
  double t10992;
  double t11022;
  double t11027;
  double t11014;
  double t11020;
  double t11313;
  double t11493;
  double t11315;
  double t11350;
  double t11712;
  double t11717;
  double t11720;
  double t11721;
  double t11724;
  double t11494;
  double t11731;
  double t11732;
  double t11735;
  double t11719;
  double t11725;
  double t11728;
  double t11508;
  double t11532;
  double t11534;
  double t11542;
  double t11544;
  double t11546;
  double t11552;
  double t11562;
  double t11563;
  double t11564;
  double t11565;
  double t11566;
  double t11573;
  double t11574;
  double t11584;
  double t11607;
  double t11612;
  double t11615;
  double t11616;
  double t11617;
  double t11629;
  double t11630;
  double t11631;
  double t11642;
  double t11644;
  double t11647;
  double t11652;
  double t11655;
  double t11659;
  double t11665;
  double t11670;
  double t11677;
  double t11679;
  double t11684;
  double t11685;
  double t11691;
  double t11692;
  double t10859;
  double t10863;
  double t10888;
  double t11086;
  double t11089;
  double t11236;
  double t10932;
  double t10933;
  double t10934;
  double t11824;
  double t11825;
  double t11827;
  double t11263;
  double t11268;
  double t11272;
  double t10000;
  double t10025;
  double t10032;
  double t10039;
  double t10185;
  double t10205;
  double t10764;
  double t10776;
  double t10778;
  double t10799;
  double t10800;
  double t10806;
  double t11262;
  double t11780;
  double t11781;
  double t11782;
  double t10914;
  double t10920;
  double t10924;
  double t10945;
  double t10971;
  double t10976;
  double t10978;
  double t10986;
  double t10987;
  double t10993;
  double t11005;
  double t11012;
  double t11021;
  double t11029;
  double t11049;
  double t11774;
  double t11775;
  double t11776;
  double t11779;
  double t11783;
  double t11784;
  double t11801;
  double t11802;
  double t11808;
  double t11809;
  double t11062;
  double t11065;
  double t11066;
  double t11067;
  double t11071;
  double t11072;
  double t11073;
  double t11074;
  double t11077;
  double t11078;
  double t11877;
  double t11879;
  double t11880;
  double t11337;
  double t11451;
  double t11460;
  double t11478;
  double t11495;
  double t11503;
  double t11510;
  double t11518;
  double t11519;
  double t12223;
  double t12226;
  double t12227;
  double t12230;
  double t12231;
  double t12250;
  double t12251;
  double t12253;
  double t12256;
  double t12262;
  double t12263;
  double t12264;
  double t12270;
  double t11729;
  double t11737;
  double t11751;
  double t11753;
  double t11755;
  double t11756;
  double t11759;
  double t11761;
  double t11763;
  double t12308;
  double t12309;
  double t12311;
  double t12315;
  double t12318;
  double t12322;
  double t12326;
  double t12327;
  double t12328;
  double t12330;
  double t12335;
  double t12338;
  double t12340;
  double t12343;
  double t12346;
  double t12348;
  double t12350;
  double t12352;
  double t12361;
  double t12364;
  double t12365;
  double t12366;
  double t12369;
  double t12370;
  double t12372;
  double t12373;
  double t12378;
  double t12381;
  double t12384;
  double t12386;
  double t12387;
  double t12402;
  double t11867;
  double t11868;
  double t11912;
  double t11916;
  double t11917;
  double t11941;
  double t11944;
  double t11949;
  double t11964;
  double t11973;
  double t11977;
  double t12007;
  double t12026;
  double t12043;
  double t12044;
  double t12045;
  double t12051;
  double t12054;
  double t12058;
  double t12061;
  double t12062;
  double t12068;
  double t12080;
  double t12155;
  double t12175;
  double t12410;
  double t12411;
  double t12412;
  double t12286;
  double t12288;
  double t12291;
  double t12565;
  double t12569;
  double t12570;
  double t12573;
  double t12574;
  double t12576;
  double t12577;
  double t12578;
  double t12579;
  double t12581;
  double t12582;
  double t12583;
  double t12593;
  double t12594;
  double t12595;
  double t12597;
  double t12598;
  double t12599;
  double t12609;
  double t12106;
  double t12107;
  double t12108;
  double t12279;
  double t12281;
  double t12282;
  double t12684;
  double t12691;
  double t12694;
  double t12695;
  double t12698;
  double t12699;
  double t12703;
  double t12705;
  double t12723;
  double t12742;
  double t12743;
  double t12681;
  double t12707;
  double t12712;
  double t12715;
  double t12717;
  double t12718;
  double t11083;
  double t11243;
  double t11248;
  double t12741;
  double t12769;
  double t12770;
  double t12773;
  double t12761;
  double t12762;
  double t12763;
  double t12745;
  double t12780;
  double t12782;
  double t12787;
  double t12793;
  double t12794;
  double t12797;
  double t12810;
  double t12811;
  double t12812;
  double t12801;
  double t12802;
  double t12806;
  double t12813;
  double t12814;
  double t12816;
  double t12819;
  double t12821;
  double t12768;
  double t12774;
  double t12775;
  double t12860;
  double t12863;
  double t12864;
  double t13017;
  double t13018;
  double t13042;
  double t13049;
  double t13007;
  double t13013;
  double t13014;
  double t13090;
  double t13092;
  double t13052;
  double t13067;
  double t13068;
  double t13070;
  double t13106;
  double t13107;
  double t13110;
  double t13073;
  double t13086;
  double t13104;
  double t13111;
  double t13112;
  double t13120;
  double t13123;
  double t13124;
  double t13016;
  double t13043;
  double t13044;
  double t12714;
  double t12719;
  double t12720;
  double t13294;
  double t13295;
  double t13296;
  double t12728;
  double t12729;
  double t13312;
  double t13314;
  double t13315;
  double t12827;
  double t12832;
  double t12833;
  double t12835;
  double t12847;
  double t12849;
  double t12850;
  double t12851;
  double t12887;
  double t12888;
  double t12889;
  double t12891;
  double t12911;
  double t12919;
  double t12920;
  double t12921;
  double t12949;
  double t12950;
  double t12952;
  double t12957;
  double t12986;
  double t12992;
  double t12993;
  double t12994;
  double t13431;
  double t13432;
  double t13433;
  double t13133;
  double t13134;
  double t13136;
  double t13139;
  double t13428;
  double t13161;
  double t13162;
  double t13165;
  double t13166;
  double t13188;
  double t13195;
  double t13202;
  double t13203;
  double t13223;
  double t13228;
  double t13229;
  double t13231;
  double t13255;
  double t13256;
  double t13257;
  double t13259;
  double t13272;
  double t13273;
  double t13275;
  double t13276;
  double t13531;
  double t13536;
  double t13538;
  double t13566;
  double t13567;
  double t13568;
  double t11805;
  double t13658;
  double t13650;
  double t13653;
  double t13655;
  double t11811;
  double t13792;
  double t13793;
  double t13794;
  double t13779;
  double t13780;
  double t13781;
  double t13786;
  double t13795;
  double t13796;
  double t13799;
  double t13800;
  double t13801;
  double t11278;
  double t11283;
  double t13887;
  double t13888;
  double t13889;
  double t13880;
  double t13881;
  double t13882;
  double t13886;
  double t13890;
  double t13891;
  double t13893;
  double t13895;
  double t13898;
  double t13875;
  double t13876;
  double t13877;
  double t13878;
  double t13879;
  double t13985;
  double t13989;
  double t13990;
  double t13902;
  double t13978;
  double t13979;
  double t13980;
  double t13904;
  double t13905;
  double t13982;
  double t13991;
  double t13992;
  double t13994;
  double t13995;
  double t13996;
  double t13913;
  double t13914;
  double t13915;
  double t13917;
  double t13918;
  double t13919;
  double t13920;
  double t13921;
  double t13922;
  double t13926;
  double t13928;
  double t13937;
  double t13941;
  double t13943;
  double t13944;
  double t13954;
  double t13961;
  double t13964;
  double t13965;
  double t13328;
  double t13329;
  double t13311;
  double t13321;
  double t13343;
  double t13346;
  double t13355;
  double t13356;
  double t13378;
  double t13381;
  double t13400;
  double t13407;
  double t13429;
  double t13430;
  double t13445;
  double t13447;
  double t13459;
  double t13460;
  double t13473;
  double t13475;
  double t13499;
  double t13503;
  double t13514;
  double t13515;
  double t14053;
  double t14055;
  double t12838;
  double t12839;
  double t12776;
  double t12803;
  double t14073;
  double t14074;
  double t14075;
  double t14079;
  double t14080;
  double t12865;
  double t12872;
  double t12896;
  double t12897;
  double t14087;
  double t14088;
  double t12930;
  double t12936;
  double t14105;
  double t14107;
  double t12962;
  double t12964;
  double t14109;
  double t14111;
  double t14125;
  double t14128;
  double t13047;
  double t13088;
  double t13146;
  double t13147;
  double t14145;
  double t14146;
  double t14147;
  double t13177;
  double t13178;
  double t14159;
  double t14160;
  double t13205;
  double t13207;
  double t14168;
  double t14173;
  double t14180;
  double t14183;
  double t13239;
  double t13240;
  double t13261;
  double t13262;
  double t14195;
  double t14196;
  double t14201;
  double t13782;
  double t13812;
  double t13825;
  double t13831;
  double t13840;
  double t13853;
  double t13860;
  double t13861;
  double t13883;
  double t13903;
  double t13925;
  double t13942;
  double t13955;
  double t13962;
  double t14375;
  double t14376;
  double t14377;
  double t14379;
  double t14381;
  double t13981;
  double t14387;
  double t14389;
  double t14003;
  double t14397;
  double t14398;
  double t14399;
  double t14402;
  double t14403;
  double t14404;
  double t14405;
  double t14406;
  double t14407;
  double t14015;
  double t14412;
  double t14413;
  double t14020;
  double t14424;
  double t14031;
  double t14431;
  double t14432;
  double t14036;
  double t14567;
  double t14568;
  double t14569;
  double t14571;
  double t14572;
  double t14575;
  double t14368;
  double t14581;
  double t14583;
  double t14600;
  double t14601;
  double t14602;
  double t14607;
  double t14609;
  double t14610;
  double t14629;
  double t14632;
  double t14633;
  double t14642;
  double t14643;
  double t14644;
  double t14603;
  double t14611;
  double t14618;
  double t14619;
  double t14620;
  double t14621;
  double t14622;
  double t14623;
  double t14624;
  double t14625;
  double t14626;
  double t14627;
  double t14634;
  double t14635;
  double t14637;
  double t14645;
  double t14646;
  double t14647;
  double t14654;
  double t14655;
  double t14657;
  double t14658;
  double t14659;
  double t14700;
  double t14701;
  double t14702;
  double t14703;
  double t14704;
  double t14705;
  double t14706;
  double t14707;
  double t14709;
  double t14711;
  double t14724;
  double t14725;
  double t14726;
  double t14727;
  double t14728;
  double t14729;
  double t14730;
  double t14731;
  double t14733;
  double t14735;
  double t14737;
  double t14738;
  double t14739;
  double t14740;
  double t14765;
  double t14766;
  double t14767;
  t2357 = Cos(var1[13]);
  t3391 = Sin(var1[13]);
  t4124 = -1.*t2357;
  t4154 = 1. + t4124;
  t4361 = -0.194401*t4154;
  t4535 = -0.234401*t2357;
  t4550 = -0.04*t3391;
  t4661 = t4361 + t4535 + t4550;
  t2383 = -0.04*t2357;
  t3702 = 0.04*t3391;
  t3958 = t2383 + t3702;
  t1212 = Cos(var1[4]);
  t7975 = Cos(var1[14]);
  t7993 = Sin(var1[14]);
  t8621 = -1.*t7975;
  t8759 = 1. + t8621;
  t8827 = -0.336601*t8759;
  t8907 = -0.356601*t7975;
  t8923 = -0.16*t7993;
  t8925 = 0. + t8827 + t8907 + t8923;
  t8940 = -0.20833*t8759;
  t9007 = -0.36833*t7975;
  t9009 = 0.020000000000000018*t7993;
  t9011 = 0. + t8940 + t9007 + t9009;
  t7976 = t2357*t7975;
  t8146 = -1.*t3391*t7993;
  t8370 = 0. + t7976 + t8146;
  t9068 = t7975*t3391;
  t9069 = t2357*t7993;
  t9074 = 0. + t9068 + t9069;
  t9244 = -0.194401*t3391;
  t9525 = -1.*t3391*t8925;
  t9633 = t2357*t9011;
  t9634 = 0. + t9244 + t9525 + t9633;
  t8387 = -0.194401*t4154;
  t8926 = t2357*t8925;
  t9019 = t3391*t9011;
  t9067 = 0. + t8387 + t8926 + t9019;
  t6448 = Cos(var1[5]);
  t6538 = Sin(var1[12]);
  t6622 = -1.*t6448*t6538;
  t6666 = Cos(var1[12]);
  t7412 = Sin(var1[5]);
  t7571 = t6666*t7412;
  t7625 = t6622 + t7571;
  t9680 = -1.*t7975*t3391;
  t9685 = -1.*t2357*t7993;
  t9734 = 0. + t9680 + t9685;
  t4052 = -1.*t2357*t3958;
  t5104 = -1.*t4661*t3391;
  t5119 = t4052 + t5104;
  t5398 = -1.*t2357*t5119;
  t5868 = t2357*t4661;
  t5889 = -1.*t3958*t3391;
  t5941 = t5868 + t5889;
  t6175 = -1.*t3391*t5941;
  t6352 = t5398 + t6175;
  t9129 = -1.*t9067*t9074;
  t9677 = -1.*t9634*t8370;
  t9678 = 0. + t9129 + t9677;
  t9679 = -1.*t8370*t9678;
  t9743 = t9634*t9734;
  t9745 = t9067*t8370;
  t9746 = 0. + t9743 + t9745;
  t9768 = -1.*t9074*t9746;
  t9769 = 0. + t9679 + t9768;
  t10489 = -0.081715*t9734;
  t10703 = -0.11459*t9074;
  t10722 = 0. + t10489 + t10703;
  t10791 = 0.032875*t8370;
  t10792 = 0. + t10791;
  t11063 = 0.04*t2357;
  t11064 = t11063 + t3702;
  t9774 = t6666*t6448;
  t9779 = t6538*t7412;
  t9934 = t9774 + t9779;
  t11082 = Sin(var1[4]);
  t11307 = t9680 + t9685;
  t11349 = t7976 + t8146;
  t11357 = -0.194401*t2357;
  t11358 = -1.*t2357*t8925;
  t11361 = -1.*t3391*t9011;
  t11363 = t11357 + t11358 + t11361;
  t11329 = t9244 + t9525 + t9633;
  t10915 = 0. + t6666;
  t10900 = -1.*t6538;
  t10902 = 0. + t10900;
  t11504 = -1.*t2357*t7975;
  t11505 = t3391*t7993;
  t11506 = t11504 + t11505;
  t10994 = t6538*t9734;
  t10997 = 0. + t10994;
  t10989 = t6666*t9734;
  t10992 = 0. + t10989;
  t11022 = t6538*t8370;
  t11027 = 0. + t11022;
  t11014 = t6666*t8370;
  t11020 = 0. + t11014;
  t11313 = -1.*t11307*t9678;
  t11493 = -1.*t11349*t9746;
  t11315 = -1.*t9634*t11307;
  t11350 = -1.*t9067*t11349;
  t11712 = -0.16*t7975;
  t11717 = t11712 + t9009;
  t11720 = 0.020000000000000018*t7975;
  t11721 = 0.16*t7993;
  t11724 = t11720 + t11721;
  t11494 = t9067*t11307;
  t11731 = -1.*t3391*t11717;
  t11732 = t2357*t11724;
  t11735 = t11731 + t11732;
  t11719 = t2357*t11717;
  t11725 = t3391*t11724;
  t11728 = t11719 + t11725;
  t11508 = t9634*t11506;
  t11532 = t10915*t6448;
  t11534 = -1.*t10902*t7412;
  t11542 = 0. + t11532 + t11534;
  t11544 = t1212*t11542;
  t11546 = 0. + t11544;
  t11552 = t11349*t11082;
  t11562 = t6448*t6538*t11307;
  t11563 = -1.*t6666*t11307*t7412;
  t11564 = t11562 + t11563;
  t11565 = t1212*t11564;
  t11566 = t11552 + t11565;
  t11573 = 0.241*t10792*t11566;
  t11574 = t11307*t11082;
  t11584 = t6448*t6538*t11506;
  t11607 = -1.*t6666*t11506*t7412;
  t11612 = t11584 + t11607;
  t11615 = t1212*t11612;
  t11616 = t11574 + t11615;
  t11617 = 0.241*t10722*t11616;
  t11629 = -0.11459*t11349;
  t11630 = -0.081715*t11506;
  t11631 = t11629 + t11630;
  t11642 = t8370*t11082;
  t11644 = t6448*t10997;
  t11647 = -1.*t10992*t7412;
  t11652 = 0. + t11644 + t11647;
  t11655 = t1212*t11652;
  t11659 = 0. + t11642 + t11655;
  t11665 = 0.241*t11631*t11659;
  t11670 = t9074*t11082;
  t11677 = t6448*t11027;
  t11679 = -1.*t11020*t7412;
  t11684 = 0. + t11677 + t11679;
  t11685 = t1212*t11684;
  t11691 = 0. + t11670 + t11685;
  t11692 = 0.007922875*t11307*t11691;
  t10859 = t6448*t6538;
  t10863 = -1.*t6666*t7412;
  t10888 = t10859 + t10863;
  t11086 = t2357*t6448*t6538;
  t11089 = -1.*t6666*t2357*t7412;
  t11236 = t11086 + t11089;
  t10932 = -1.*t6666*t6448;
  t10933 = -1.*t6538*t7412;
  t10934 = t10932 + t10933;
  t11824 = Sin(var1[3]);
  t11825 = t11824*t11082*t7625;
  t11827 = Cos(var1[3]);
  t11263 = -1.*t2357*t6448*t6538;
  t11268 = t6666*t2357*t7412;
  t11272 = t11263 + t11268;
  t10000 = t6666*t2357*t6448;
  t10025 = t2357*t6538*t7412;
  t10032 = t10000 + t10025;
  t10039 = -1.*t6666*t6448*t3391;
  t10185 = -1.*t6538*t3391*t7412;
  t10205 = t10039 + t10185;
  t10764 = t6666*t6448*t9734;
  t10776 = t6538*t9734*t7412;
  t10778 = t10764 + t10776;
  t10799 = t6666*t6448*t8370;
  t10800 = t6538*t8370*t7412;
  t10806 = t10799 + t10800;
  t11262 = -1.*t3391*t11082;
  t11780 = -1.*t6448*t6538*t3391;
  t11781 = t6666*t3391*t7412;
  t11782 = t11780 + t11781;
  t10914 = -1.*t6448*t10902;
  t10920 = -1.*t10915*t7412;
  t10924 = t10914 + t10920;
  t10945 = -1.*t6666*t2357*t6448;
  t10971 = -1.*t2357*t6538*t7412;
  t10976 = t10945 + t10971;
  t10978 = t6666*t6448*t3391;
  t10986 = t6538*t3391*t7412;
  t10987 = t10978 + t10986;
  t10993 = -1.*t6448*t10992;
  t11005 = -1.*t10997*t7412;
  t11012 = t10993 + t11005;
  t11021 = -1.*t6448*t11020;
  t11029 = -1.*t11027*t7412;
  t11049 = t11021 + t11029;
  t11774 = t1212*t3391;
  t11775 = -1.*t11082*t11236;
  t11776 = t11774 + t11775;
  t11779 = t2357*t1212;
  t11783 = -1.*t11082*t11782;
  t11784 = t11779 + t11783;
  t11801 = t1212*t8370;
  t11802 = -1.*t11082*t11652;
  t11808 = t1212*t9074;
  t11809 = -1.*t11082*t11684;
  t11062 = -1.*t2357*t4661;
  t11065 = -1.*t2357*t11064;
  t11066 = t11062 + t11065;
  t11067 = -1.*t2357*t11066;
  t11071 = t3391*t5119;
  t11072 = -1.*t2357*t5941;
  t11073 = -1.*t11064*t3391;
  t11074 = t5104 + t11073;
  t11077 = -1.*t3391*t11074;
  t11078 = t11067 + t11071 + t11072 + t11077;
  t11877 = t11827*t7625;
  t11879 = t11824*t11082*t9934;
  t11880 = t11877 + t11879;
  t11337 = -1.*t11329*t9074;
  t11451 = -1.*t11363*t8370;
  t11460 = t11315 + t11337 + t11350 + t11451;
  t11478 = -1.*t8370*t11460;
  t11495 = t11363*t9734;
  t11503 = t11329*t8370;
  t11510 = t11494 + t11495 + t11503 + t11508;
  t11518 = -1.*t9074*t11510;
  t11519 = t11313 + t11478 + t11493 + t11518;
  t12223 = t6448*t10902;
  t12226 = t10915*t7412;
  t12227 = 0. + t12223 + t12226;
  t12230 = -1.*t11082*t11542;
  t12231 = 0. + t12230;
  t12250 = t6448*t10992;
  t12251 = t10997*t7412;
  t12253 = 0. + t12250 + t12251;
  t12256 = 0. + t11801 + t11802;
  t12262 = t6448*t11020;
  t12263 = t11027*t7412;
  t12264 = 0. + t12262 + t12263;
  t12270 = 0. + t11808 + t11809;
  t11729 = -1.*t11728*t9074;
  t11737 = -1.*t11735*t8370;
  t11751 = t11315 + t11729 + t11350 + t11737;
  t11753 = -1.*t8370*t11751;
  t11755 = t11735*t9734;
  t11756 = t11728*t8370;
  t11759 = t11494 + t11755 + t11756 + t11508;
  t11761 = -1.*t9074*t11759;
  t11763 = t11313 + t11493 + t11753 + t11761;
  t12308 = t11827*t12227;
  t12309 = -1.*t11824*t12231;
  t12311 = 0. + t12308 + t12309;
  t12315 = t6666*t6448*t11307;
  t12318 = t6538*t11307*t7412;
  t12322 = t12315 + t12318;
  t12326 = t11827*t12322;
  t12327 = t1212*t11349;
  t12328 = -1.*t11082*t11564;
  t12330 = t12327 + t12328;
  t12335 = -1.*t11824*t12330;
  t12338 = t12326 + t12335;
  t12340 = 0.241*t10792*t12338;
  t12343 = t6666*t6448*t11506;
  t12346 = t6538*t11506*t7412;
  t12348 = t12343 + t12346;
  t12350 = t11827*t12348;
  t12352 = t1212*t11307;
  t12361 = -1.*t11082*t11612;
  t12364 = t12352 + t12361;
  t12365 = -1.*t11824*t12364;
  t12366 = t12350 + t12365;
  t12369 = 0.241*t10722*t12366;
  t12370 = t11827*t12253;
  t12372 = -1.*t11824*t12256;
  t12373 = 0. + t12370 + t12372;
  t12378 = 0.241*t11631*t12373;
  t12381 = t11827*t12264;
  t12384 = -1.*t11824*t12270;
  t12386 = 0. + t12381 + t12384;
  t12387 = 0.007922875*t11307*t12386;
  t12402 = -1.*t11827*t11082*t7625;
  t11867 = -1.*t6666*t6448;
  t11868 = t11867 + t10933;
  t11912 = t6448*t6538*t3391;
  t11916 = -1.*t6666*t3391*t7412;
  t11917 = t11912 + t11916;
  t11941 = -1.*t6448*t6538*t9734;
  t11944 = t6666*t9734*t7412;
  t11949 = t11941 + t11944;
  t11964 = -1.*t6448*t6538*t8370;
  t11973 = t6666*t8370*t7412;
  t11977 = t11964 + t11973;
  t12007 = -1.*t1212*t11236;
  t12026 = t11262 + t12007;
  t12043 = -1.*t2357*t11082;
  t12044 = -1.*t1212*t11782;
  t12045 = t12043 + t12044;
  t12051 = -1.*t8370*t11082;
  t12054 = -1.*t1212*t11652;
  t12058 = t12051 + t12054;
  t12061 = -1.*t9074*t11082;
  t12062 = -1.*t1212*t11684;
  t12068 = t12061 + t12062;
  t12080 = t11532 + t11534;
  t12155 = t11644 + t11647;
  t12175 = t11677 + t11679;
  t12410 = t11824*t7625;
  t12411 = -1.*t11827*t11082*t9934;
  t12412 = t12410 + t12411;
  t12286 = -1.*t1212*t3391;
  t12288 = -1.*t11082*t11272;
  t12291 = t12286 + t12288;
  t12565 = t11824*t12227;
  t12569 = t11827*t12231;
  t12570 = 0. + t12565 + t12569;
  t12573 = t11824*t12322;
  t12574 = t11827*t12330;
  t12576 = t12573 + t12574;
  t12577 = 0.241*t10792*t12576;
  t12578 = t11824*t12348;
  t12579 = t11827*t12364;
  t12581 = t12578 + t12579;
  t12582 = 0.241*t10722*t12581;
  t12583 = t11824*t12253;
  t12593 = t11827*t12256;
  t12594 = 0. + t12583 + t12593;
  t12595 = 0.241*t11631*t12594;
  t12597 = t11824*t12264;
  t12598 = t11827*t12270;
  t12599 = 0. + t12597 + t12598;
  t12609 = 0.007922875*t11307*t12599;
  t12106 = t11824*t11082*t10888;
  t12107 = t11827*t9934;
  t12108 = t12106 + t12107;
  t12279 = t11827*t10032;
  t12281 = -1.*t11824*t11776;
  t12282 = t12279 + t12281;
  t12684 = -1.*t6666;
  t12691 = 1. + t12684;
  t12694 = -0.081715*t12691;
  t12695 = -0.061715*t6666;
  t12698 = t12694 + t12695;
  t12699 = t12698*t6448;
  t12703 = 0.02*t6538*t7412;
  t12705 = t12699 + t12703;
  t12723 = -0.02*t6448*t6538;
  t12742 = 0.02*t6666*t7412;
  t12743 = t12723 + t12742;
  t12681 = -0.194401*t11082;
  t12707 = t1212*t12705;
  t12712 = t12681 + t12707;
  t12715 = -0.194401*t1212;
  t12717 = -1.*t11082*t12705;
  t12718 = t12715 + t12717;
  t11083 = t3391*t11082;
  t11243 = t1212*t11236;
  t11248 = t11083 + t11243;
  t12741 = Power(t1212,2);
  t12769 = 0.053565*t6538;
  t12770 = t6666*t3958;
  t12773 = t12769 + t12770;
  t12761 = 0.053565*t6666;
  t12762 = -1.*t6538*t3958;
  t12763 = t12761 + t12762;
  t12745 = Power(t11082,2);
  t12780 = t6448*t12773;
  t12782 = -1.*t12763*t7412;
  t12787 = t12780 + t12782;
  t12793 = -0.13528*t6666;
  t12794 = t6538*t3958;
  t12797 = t12694 + t12793 + t12794;
  t12810 = t6448*t12797;
  t12811 = -1.*t12773*t7412;
  t12812 = t12810 + t12811;
  t12801 = t12797*t7412;
  t12802 = t12780 + t12801;
  t12806 = t4661*t11082;
  t12813 = t1212*t12812;
  t12814 = t12806 + t12813;
  t12816 = t1212*t4661;
  t12819 = -1.*t11082*t12812;
  t12821 = t12816 + t12819;
  t12768 = t6448*t12763;
  t12774 = t12773*t7412;
  t12775 = t12768 + t12774;
  t12860 = t2357*t11082;
  t12863 = t1212*t11782;
  t12864 = t12860 + t12863;
  t13017 = 0.032875*t6538;
  t13018 = t6666*t9634;
  t13042 = t13017 + t13018;
  t13049 = t6448*t13042;
  t13007 = 0.032875*t6666;
  t13013 = -1.*t6538*t9634;
  t13014 = t13007 + t13013;
  t13090 = -1.*t13014*t7412;
  t13092 = t13049 + t13090;
  t13052 = -0.081715*t12691;
  t13067 = -0.11459*t6666;
  t13068 = t6538*t9634;
  t13070 = t13052 + t13067 + t13068;
  t13106 = t6448*t13070;
  t13107 = -1.*t13042*t7412;
  t13110 = 0. + t13106 + t13107;
  t13073 = t13070*t7412;
  t13086 = 0. + t13049 + t13073;
  t13104 = t9067*t11082;
  t13111 = t1212*t13110;
  t13112 = 0. + t13104 + t13111;
  t13120 = t1212*t9067;
  t13123 = -1.*t11082*t13110;
  t13124 = 0. + t13120 + t13123;
  t13016 = t6448*t13014;
  t13043 = t13042*t7412;
  t13044 = t13016 + t13043;
  t12714 = -1.*t11082*t12712;
  t12719 = -1.*t1212*t12718;
  t12720 = t12714 + t12719;
  t13294 = 0.02*t6448*t6538;
  t13295 = -1.*t12698*t7412;
  t13296 = t13294 + t13295;
  t12728 = t12698*t7412;
  t12729 = t12723 + t12728;
  t13312 = -1.*t6448*t12773;
  t13314 = -1.*t12797*t7412;
  t13315 = t13312 + t13314;
  t12827 = -1.*t7625*t12802;
  t12832 = -1.*t1212*t9934*t12814;
  t12833 = t11082*t9934*t12821;
  t12835 = t12827 + t12832 + t12833;
  t12847 = t10032*t12802;
  t12849 = t11248*t12814;
  t12850 = t11776*t12821;
  t12851 = t12847 + t12849 + t12850;
  t12887 = t7625*t12802;
  t12888 = t1212*t9934*t12814;
  t12889 = -1.*t11082*t9934*t12821;
  t12891 = t12887 + t12888 + t12889;
  t12911 = -1.*t12802*t10205;
  t12919 = -1.*t12814*t12864;
  t12920 = -1.*t12821*t11784;
  t12921 = t12911 + t12919 + t12920;
  t12949 = -1.*t10032*t12802;
  t12950 = -1.*t11248*t12814;
  t12952 = -1.*t11776*t12821;
  t12957 = t12949 + t12950 + t12952;
  t12986 = t12802*t10205;
  t12992 = t12814*t12864;
  t12993 = t12821*t11784;
  t12994 = t12986 + t12992 + t12993;
  t13431 = -1.*t6448*t13042;
  t13432 = -1.*t13070*t7412;
  t13433 = t13431 + t13432;
  t13133 = t12227*t13086;
  t13134 = t11546*t13112;
  t13136 = t12231*t13124;
  t13139 = t13133 + t13134 + t13136;
  t13428 = t13106 + t13107;
  t13161 = -1.*t13086*t12253;
  t13162 = -1.*t13112*t11659;
  t13165 = -1.*t13124*t12256;
  t13166 = t13161 + t13162 + t13165;
  t13188 = t13086*t12253;
  t13195 = t13112*t11659;
  t13202 = t13124*t12256;
  t13203 = t13188 + t13195 + t13202;
  t13223 = -1.*t13086*t12264;
  t13228 = -1.*t13112*t11691;
  t13229 = -1.*t13124*t12270;
  t13231 = t13223 + t13228 + t13229;
  t13255 = -1.*t12227*t13086;
  t13256 = -1.*t11546*t13112;
  t13257 = -1.*t12231*t13124;
  t13259 = t13255 + t13256 + t13257;
  t13272 = t13086*t12264;
  t13273 = t13112*t11691;
  t13275 = t13124*t12270;
  t13276 = t13272 + t13273 + t13275;
  t13531 = 0.194401*t11082;
  t13536 = -1.*t1212*t12705;
  t13538 = t13531 + t13536;
  t13566 = -1.*t4661*t11082;
  t13567 = -1.*t1212*t12812;
  t13568 = t13566 + t13567;
  t11805 = t11801 + t11802;
  t13658 = t13120 + t13123;
  t13650 = -1.*t9067*t11082;
  t13653 = -1.*t1212*t13110;
  t13655 = t13650 + t13653;
  t11811 = t11808 + t11809;
  t13792 = t6448*t6538*t11064;
  t13793 = -1.*t6666*t11064*t7412;
  t13794 = t13792 + t13793;
  t13779 = t6666*t6448*t11064;
  t13780 = t6538*t11064*t7412;
  t13781 = t13779 + t13780;
  t13786 = t3958*t11082;
  t13795 = t1212*t13794;
  t13796 = t13786 + t13795;
  t13799 = t1212*t3958;
  t13800 = -1.*t11082*t13794;
  t13801 = t13799 + t13800;
  t11278 = t1212*t11272;
  t11283 = t11262 + t11278;
  t13887 = t6448*t6538*t11363;
  t13888 = -1.*t6666*t11363*t7412;
  t13889 = t13887 + t13888;
  t13880 = t6666*t6448*t11363;
  t13881 = t6538*t11363*t7412;
  t13882 = t13880 + t13881;
  t13886 = t11329*t11082;
  t13890 = t1212*t13889;
  t13891 = t13886 + t13890;
  t13893 = t1212*t11329;
  t13895 = -1.*t11082*t13889;
  t13898 = t13893 + t13895;
  t13875 = t11659*t13139;
  t13876 = t11546*t13166;
  t13877 = t13875 + t13876;
  t13878 = 0.007922875*t11307*t13877;
  t13879 = t11616*t13139;
  t13985 = t6448*t6538*t11735;
  t13989 = -1.*t6666*t11735*t7412;
  t13990 = t13985 + t13989;
  t13902 = -1.*t13086*t12348;
  t13978 = t6666*t6448*t11735;
  t13979 = t6538*t11735*t7412;
  t13980 = t13978 + t13979;
  t13904 = -1.*t13112*t11616;
  t13905 = -1.*t13124*t12364;
  t13982 = t11728*t11082;
  t13991 = t1212*t13990;
  t13992 = t13982 + t13991;
  t13994 = t1212*t11728;
  t13995 = -1.*t11082*t13990;
  t13996 = t13994 + t13995;
  t13913 = t11691*t13203;
  t13914 = t11659*t13231;
  t13915 = t13913 + t13914;
  t13917 = t11691*t13259;
  t13918 = t11546*t13276;
  t13919 = t13917 + t13918;
  t13920 = 0.241*t11631*t13919;
  t13921 = t11566*t13203;
  t13922 = t13086*t12348;
  t13926 = t13112*t11616;
  t13928 = t13124*t12364;
  t13937 = t11616*t13231;
  t13941 = -1.*t13086*t12322;
  t13943 = -1.*t13112*t11566;
  t13944 = -1.*t13124*t12330;
  t13954 = t11566*t13259;
  t13961 = t13086*t12322;
  t13964 = t13112*t11566;
  t13965 = t13124*t12330;
  t13328 = t10032*t12812;
  t13329 = t11236*t12802;
  t13311 = -1.*t7625*t12812;
  t13321 = -1.*t9934*t12802;
  t13343 = t7625*t12812;
  t13346 = t9934*t12802;
  t13355 = -1.*t12802*t11782;
  t13356 = -1.*t12812*t10205;
  t13378 = -1.*t10032*t12812;
  t13381 = -1.*t11236*t12802;
  t13400 = t12802*t11782;
  t13407 = t12812*t10205;
  t13429 = t12227*t13428;
  t13430 = t12080*t13086;
  t13445 = -1.*t13086*t12155;
  t13447 = -1.*t13428*t12253;
  t13459 = t13086*t12155;
  t13460 = t13428*t12253;
  t13473 = -1.*t13086*t12175;
  t13475 = -1.*t13428*t12264;
  t13499 = -1.*t12227*t13428;
  t13503 = -1.*t12080*t13086;
  t13514 = t13086*t12175;
  t13515 = t13428*t12264;
  t14053 = -1.*t9934*t12812;
  t14055 = t14053 + t12827;
  t12838 = t10032*t12775;
  t12839 = t11272*t12802;
  t12776 = -1.*t7625*t12775;
  t12803 = -1.*t10934*t12802;
  t14073 = t4661*t3391;
  t14074 = t11236*t12812;
  t14075 = t14073 + t14074 + t12847;
  t14079 = t9934*t12812;
  t14080 = t14079 + t12887;
  t12865 = t7625*t12775;
  t12872 = t10934*t12802;
  t12896 = -1.*t12802*t11917;
  t12897 = -1.*t12775*t10205;
  t14087 = -1.*t12812*t11782;
  t14088 = t11062 + t14087 + t12911;
  t12930 = -1.*t10032*t12775;
  t12936 = -1.*t11272*t12802;
  t14105 = -1.*t11236*t12812;
  t14107 = t5104 + t14105 + t12949;
  t12962 = t12802*t11917;
  t12964 = t12775*t10205;
  t14109 = t12812*t11782;
  t14111 = t5868 + t14109 + t12986;
  t14125 = t11542*t13110;
  t14128 = 0. + t14125 + t13133;
  t13047 = t12227*t13044;
  t13088 = t11868*t13086;
  t13146 = -1.*t13086*t11949;
  t13147 = -1.*t13044*t12253;
  t14145 = -1.*t9067*t8370;
  t14146 = -1.*t13110*t11652;
  t14147 = t14145 + t14146 + t13161;
  t13177 = t13086*t11949;
  t13178 = t13044*t12253;
  t14159 = t13110*t11652;
  t14160 = t9745 + t14159 + t13188;
  t13205 = -1.*t13086*t11977;
  t13207 = -1.*t13044*t12264;
  t14168 = -1.*t13110*t11684;
  t14173 = t9129 + t14168 + t13223;
  t14180 = -1.*t11542*t13110;
  t14183 = 0. + t14180 + t13255;
  t13239 = -1.*t12227*t13044;
  t13240 = -1.*t11868*t13086;
  t13261 = t13086*t11977;
  t13262 = t13044*t12264;
  t14195 = t9067*t9074;
  t14196 = t13110*t11684;
  t14201 = t14195 + t14196 + t13272;
  t13782 = -1.*t7625*t13781;
  t13812 = t10032*t13781;
  t13825 = t7625*t13781;
  t13831 = -1.*t10976*t12802;
  t13840 = -1.*t13781*t10205;
  t13853 = -1.*t10032*t13781;
  t13860 = t10976*t12802;
  t13861 = t13781*t10205;
  t13883 = t12227*t13882;
  t13903 = -1.*t13882*t12253;
  t13925 = t13882*t12253;
  t13942 = -1.*t13882*t12264;
  t13955 = -1.*t12227*t13882;
  t13962 = t13882*t12264;
  t14375 = t12253*t14128;
  t14376 = t12227*t14147;
  t14377 = t14375 + t14376;
  t14379 = 0.007922875*t11307*t14377;
  t14381 = t12348*t14128;
  t13981 = t12227*t13980;
  t14387 = -1.*t9067*t11307;
  t14389 = -1.*t13110*t11612;
  t14003 = -1.*t13980*t12253;
  t14397 = t12264*t14160;
  t14398 = t12253*t14173;
  t14399 = 0. + t14397 + t14398;
  t14402 = t12264*t14183;
  t14403 = t12227*t14201;
  t14404 = t14402 + t14403;
  t14405 = 0.241*t11631*t14404;
  t14406 = t12322*t14160;
  t14407 = t13110*t11612;
  t14015 = t13980*t12253;
  t14412 = t12348*t14173;
  t14413 = -1.*t13110*t11564;
  t14020 = -1.*t13980*t12264;
  t14424 = t12322*t14183;
  t14031 = -1.*t12227*t13980;
  t14431 = t9067*t11349;
  t14432 = t13110*t11564;
  t14036 = t13980*t12264;
  t14567 = -1.*t6666*t12773*t3391;
  t14568 = -1.*t6538*t12797*t3391;
  t14569 = t5868 + t14567 + t14568;
  t14571 = -1.*t6666*t2357*t12773;
  t14572 = -1.*t2357*t6538*t12797;
  t14575 = t14571 + t14572 + t5104;
  t14368 = t2357*t3958;
  t14581 = Power(t6666,2);
  t14583 = Power(t6538,2);
  t14600 = -1.*t10902*t13042;
  t14601 = -1.*t10915*t13070;
  t14602 = 0. + t14600 + t14601;
  t14607 = t10902*t13042;
  t14609 = t10915*t13070;
  t14610 = 0. + t14607 + t14609;
  t14629 = t13042*t10992;
  t14632 = t13070*t10997;
  t14633 = t9745 + t14629 + t14632;
  t14642 = -1.*t13042*t11020;
  t14643 = -1.*t13070*t11027;
  t14644 = t9129 + t14642 + t14643;
  t14603 = t14602*t11349;
  t14611 = t14610*t11307;
  t14618 = t14602*t9074;
  t14619 = 0. + t14618;
  t14620 = 0.241*t14619;
  t14621 = 0. + t14620;
  t14622 = t11631*t14621;
  t14623 = t14610*t8370;
  t14624 = 0. + t14623;
  t14625 = 0.241*t14624;
  t14626 = 0. + t14625;
  t14627 = 0.032875*t11307*t14626;
  t14634 = t11349*t14633;
  t14635 = t6666*t13042*t11506;
  t14637 = t6538*t13070*t11506;
  t14645 = t11307*t14644;
  t14646 = -1.*t6666*t13042*t11307;
  t14647 = -1.*t6538*t13070*t11307;
  t14654 = t9074*t14633;
  t14655 = t8370*t14644;
  t14657 = 0. + t14654 + t14655;
  t14658 = 0.241*t14657;
  t14659 = 0. + t14658;
  t14700 = 0.007922875*t11307*t10792;
  t14701 = 0.241*t10722*t11631;
  t14702 = 0.241*t10722;
  t14703 = 0. + t14702;
  t14704 = t11631*t14703;
  t14705 = 0.241*t10792;
  t14706 = 0. + t14705;
  t14707 = 0.032875*t11307*t14706;
  t14709 = 0.241*t9769;
  t14711 = 0. + t14709;
  t14724 = t7975*t9011;
  t14725 = 0.194401*t7993;
  t14726 = t8925*t7993;
  t14727 = 0. + t14724 + t14725 + t14726;
  t14728 = 0.241*t14727;
  t14729 = 0. + t14728;
  t14730 = t11631*t14729;
  t14731 = -0.194401*t7975;
  t14733 = -1.*t7975*t8925;
  t14735 = t9011*t7993;
  t14737 = 0. + t14731 + t14733 + t14735;
  t14738 = 0.241*t14737;
  t14739 = 0. + t14738;
  t14740 = 0.032875*t11307*t14739;
  t14765 = 0.00015845750000000015*t11307;
  t14766 = -0.03856*t11631;
  t14767 = t14765 + t14766;
  p_output1[0]=var2[12]*(-0.5*(0.00482*t10888*t11082 + 0.241*t10722*t11805 + 0.241*t10792*t11811 + 0.081793755*t11776*t2357 - 0.081793755*t11784*t3391 - 0.241*t11082*t11542*t9769 - 1.527*t11082*t6352*t9934)*var2[4] - 0.5*(-0.00482*t10934*t1212 + 0.241*t10722*t11012*t1212 + 0.241*t10792*t11049*t1212 + 0.081793755*t10976*t1212*t2357 - 0.081793755*t10987*t1212*t3391 + 1.527*t10888*t1212*t6352 + 0.241*t10924*t1212*t9769)*var2[5] - 0.5*(0.241*t10722*t10778*t1212 + 0.241*t10792*t10806*t1212 + 0.081793755*t10032*t1212*t2357 - 0.081793755*t10205*t1212*t3391 + 1.527*t1212*t6352*t7625 + 0.241*t1212*t7625*t9769 - 0.00482*t1212*t9934)*var2[12] - 0.5*(0.241*t11519*t11546 + t11573 + t11617 + t11665 + t11692 - 0.081793755*t11248*t3391 - 0.081793755*t11283*t3391 + 1.527*t11078*t1212*t9934)*var2[13] - 0.5*(t11573 + t11617 + t11665 + t11692 + 0.241*t11546*t11763)*var2[14]);
  p_output1[1]=var2[12]*(-0.5*(0.241*t10722*(-1.*t11824*t12253 - 1.*t11827*t12256) + 0.241*t10792*(-1.*t11824*t12264 - 1.*t11827*t12270) + 0.081793755*(-1.*t10032*t11824 - 1.*t11776*t11827)*t2357 - 0.081793755*(-1.*t10205*t11824 - 1.*t11784*t11827)*t3391 + 0.241*(-1.*t11824*t12227 - 1.*t11827*t12231)*t9769 - 0.00482*(t10888*t11082*t11827 - 1.*t11824*t9934) + 1.527*t6352*(-1.*t11824*t7625 + t11082*t11827*t9934))*var2[3] - 0.5*(-0.241*t10722*t11824*t12058 - 0.241*t10792*t11824*t12068 - 0.00482*t10888*t11824*t1212 - 0.081793755*t11824*t12026*t2357 + 0.081793755*t11824*t12045*t3391 + 0.241*t11542*t11824*t1212*t9769 + 1.527*t11824*t1212*t6352*t9934)*var2[4] - 0.5*(-0.00482*(t10934*t11082*t11824 + t10888*t11827) + 0.241*t10722*(t11012*t11082*t11824 + t11827*t12155) + 0.241*t10792*(t11049*t11082*t11824 + t11827*t12175) + 0.081793755*(t10976*t11082*t11824 + t11236*t11827)*t2357 - 0.081793755*(t10987*t11082*t11824 + t11782*t11827)*t3391 + 1.527*t12108*t6352 + 0.241*(t10924*t11082*t11824 + t11827*t12080)*t9769)*var2[5] - 0.5*(-0.00482*t11880 + 0.241*t10722*(t10778*t11082*t11824 + t11827*t11949) + 0.241*t10792*(t10806*t11082*t11824 + t11827*t11977) + 0.081793755*(t10032*t11082*t11824 + t11272*t11827)*t2357 - 0.081793755*(t10205*t11082*t11824 + t11827*t11917)*t3391 + 1.527*(t11825 + t10934*t11827)*t6352 + 0.241*(t11825 + t11827*t11868)*t9769)*var2[12] - 0.5*(1.527*t11078*t11880 + 0.241*t11519*t12311 + t12340 + t12369 + t12378 + t12387 - 0.081793755*t12282*t3391 - 0.081793755*(t10976*t11827 - 1.*t11824*t12291)*t3391)*var2[13] - 0.5*(0.241*t11763*t12311 + t12340 + t12369 + t12378 + t12387)*var2[14]);
  p_output1[2]=var2[12]*(-0.5*(-0.00482*t12108 + 0.241*t10722*(t12370 + t12372) + 0.241*t10792*(t12381 + t12384) + 0.081793755*t12282*t2357 - 0.081793755*(-1.*t11784*t11824 + t10205*t11827)*t3391 + 1.527*t11880*t6352 + 0.241*(t12308 + t12309)*t9769)*var2[3] - 0.5*(0.241*t10722*t11827*t12058 + 0.241*t10792*t11827*t12068 + 0.00482*t10888*t11827*t1212 + 0.081793755*t11827*t12026*t2357 - 0.081793755*t11827*t12045*t3391 - 0.241*t11542*t11827*t1212*t9769 - 1.527*t11827*t1212*t6352*t9934)*var2[4] - 0.5*(-0.00482*(t10888*t11824 - 1.*t10934*t11082*t11827) + 0.241*t10722*(-1.*t11012*t11082*t11827 + t11824*t12155) + 0.241*t10792*(-1.*t11049*t11082*t11827 + t11824*t12175) + 0.081793755*(t11236*t11824 - 1.*t10976*t11082*t11827)*t2357 - 0.081793755*(t11782*t11824 - 1.*t10987*t11082*t11827)*t3391 + 0.241*(-1.*t10924*t11082*t11827 + t11824*t12080)*t9769 + 1.527*t6352*(-1.*t10888*t11082*t11827 + t11824*t9934))*var2[5] - 0.5*(0.241*t10722*(-1.*t10778*t11082*t11827 + t11824*t11949) + 0.241*t10792*(-1.*t10806*t11082*t11827 + t11824*t11977) - 0.00482*t12412 + 0.081793755*(t11272*t11824 - 1.*t10032*t11082*t11827)*t2357 - 0.081793755*(-1.*t10205*t11082*t11827 + t11824*t11917)*t3391 + 1.527*(t10934*t11824 + t12402)*t6352 + 0.241*(t11824*t11868 + t12402)*t9769)*var2[12] - 0.5*(1.527*t11078*t12412 + 0.241*t11519*t12570 + t12577 + t12582 + t12595 + t12609 - 0.081793755*(t10032*t11824 + t11776*t11827)*t3391 - 0.081793755*(t10976*t11824 + t11827*t12291)*t3391)*var2[13] - 0.5*(0.241*t11763*t12570 + t12577 + t12582 + t12595 + t12609)*var2[14]);
  p_output1[3]=var2[12]*(-0.5*(0.241*t10792*(t11805*t13139 - 1.*t11082*t11542*t13166 + t11659*(-1.*t11082*t11542*t13112 - 1.*t11542*t1212*t13124 + t12231*t13655 + t11546*t13658) + t11546*(-1.*t11805*t13112 - 1.*t12058*t13124 - 1.*t12256*t13655 - 1.*t11659*t13658)) + 0.241*t10722*(t11811*t13259 - 1.*t11082*t11542*t13276 + t11691*(t11082*t11542*t13112 + t11542*t1212*t13124 - 1.*t12231*t13655 - 1.*t11546*t13658) + t11546*(t11811*t13112 + t12068*t13124 + t12270*t13655 + t11691*t13658)) + 1.527*(t11784*t12957 + t11776*t12994 + t12864*(-1.*t11776*t12814 - 1.*t11248*t12821 - 1.*t12026*t12821 - 1.*t11776*t13568) + t11248*(t11784*t12814 + t12045*t12821 + t12821*t12864 + t11784*t13568))*t6352 + 0.241*(t11811*t13203 + t11805*t13231 + t11691*(t11805*t13112 + t12058*t13124 + t12256*t13655 + t11659*t13658) + t11659*(-1.*t11811*t13112 - 1.*t12068*t13124 - 1.*t12270*t13655 - 1.*t11691*t13658))*t9769 - 0.00482*(-1.*t11082*t12720*t9934 + t1212*(-1.*t1212*t12712 - 1.*t1212*t13538)*t9934 + t1212*(t12729*t7625 + t1212*t12712*t9934 - 1.*t11082*t12718*t9934) + t11082*(-1.*t11082*t12712*t9934 - 1.*t11082*t13538*t9934)) + 0.081793755*t2357*(t11784*t12891 - 1.*t11082*t12921*t9934 + t1212*(-1.*t11784*t12814 - 1.*t12045*t12821 - 1.*t12821*t12864 - 1.*t11784*t13568)*t9934 + t12864*(-1.*t11082*t12814*t9934 - 1.*t11082*t13568*t9934)) - 0.081793755*t3391*(t11776*t12835 - 1.*t11082*t12851*t9934 + t1212*(t11776*t12814 + t11248*t12821 + t12026*t12821 + t11776*t13568)*t9934 + t11248*(t11082*t12814*t9934 + t11082*t13568*t9934)))*var2[4] - 0.5*(0.241*t10792*(t11012*t1212*t13139 + t10924*t1212*t13166 + t11659*(t10924*t1212*t13112 - 1.*t10924*t11082*t13124 + t13429 + t13430 + t11546*t1212*t13433 - 1.*t11082*t12231*t13433) + t11546*(-1.*t11012*t1212*t13112 + t11012*t11082*t13124 - 1.*t11659*t1212*t13433 + t11082*t12256*t13433 + t13445 + t13447)) + 0.241*t10722*(t11049*t1212*t13259 + t10924*t1212*t13276 + t11691*(-1.*t10924*t1212*t13112 + t10924*t11082*t13124 - 1.*t11546*t1212*t13433 + t11082*t12231*t13433 + t13499 + t13503) + t11546*(t11049*t1212*t13112 - 1.*t11049*t11082*t13124 + t11691*t1212*t13433 - 1.*t11082*t12270*t13433 + t13514 + t13515)) + 1.527*(t10987*t1212*t12957 + t10976*t1212*t12994 + t12864*(-1.*t10976*t1212*t12814 + t10976*t11082*t12821 + t11082*t11776*t13315 - 1.*t11248*t1212*t13315 + t13378 + t13381) + t11248*(t10987*t1212*t12814 - 1.*t10987*t11082*t12821 - 1.*t11082*t11784*t13315 + t1212*t12864*t13315 + t13400 + t13407))*t6352 + 0.241*(t11049*t1212*t13203 + t11012*t1212*t13231 + t11691*(t11012*t1212*t13112 - 1.*t11012*t11082*t13124 + t11659*t1212*t13433 - 1.*t11082*t12256*t13433 + t13459 + t13460) + t11659*(-1.*t11049*t1212*t13112 + t11049*t11082*t13124 - 1.*t11691*t1212*t13433 + t11082*t12270*t13433 + t13473 + t13475))*t9769 - 0.00482*(t10888*t1212*t12720 + t11082*(t10888*t1212*t12712 - 1.*t10888*t11082*t12718 + t12705*t7625 + t12729*t9934 + t12741*t13296*t9934 + t12745*t13296*t9934)) - 0.081793755*t3391*(t10976*t1212*t12835 + t10888*t1212*t12851 + t1212*(t10976*t1212*t12814 - 1.*t10976*t11082*t12821 - 1.*t11082*t11776*t13315 + t11248*t1212*t13315 + t13328 + t13329)*t9934 + t11248*(-1.*t10888*t1212*t12814 + t10888*t11082*t12821 + t13311 + t13321 - 1.*t12741*t13315*t9934 - 1.*t12745*t13315*t9934)) + 0.081793755*t2357*(t10987*t1212*t12891 + t10888*t1212*t12921 + t1212*(-1.*t10987*t1212*t12814 + t10987*t11082*t12821 + t11082*t11784*t13315 - 1.*t1212*t12864*t13315 + t13355 + t13356)*t9934 + t12864*(t10888*t1212*t12814 - 1.*t10888*t11082*t12821 + t13343 + t13346 + t12741*t13315*t9934 + t12745*t13315*t9934)))*var2[5] - 0.5*(1.527*(t12864*(t11082*t11776*t12787 - 1.*t11248*t1212*t12787 - 1.*t10032*t1212*t12814 + t10032*t11082*t12821 + t12930 + t12936) + t10205*t1212*t12957 + t11248*(-1.*t11082*t11784*t12787 + t10205*t1212*t12814 - 1.*t10205*t11082*t12821 + t1212*t12787*t12864 + t12962 + t12964) + t10032*t1212*t12994)*t6352 + 0.241*t10792*(t10778*t1212*t13139 + t11546*(-1.*t11659*t1212*t13092 + t11082*t12256*t13092 - 1.*t10778*t1212*t13112 + t10778*t11082*t13124 + t13146 + t13147) + t1212*t13166*t7625 + t11659*(t13047 + t13088 + t11546*t1212*t13092 - 1.*t11082*t12231*t13092 + t1212*t13112*t7625 - 1.*t11082*t13124*t7625)) + 0.241*t10722*(t10806*t1212*t13259 + t11546*(t11691*t1212*t13092 - 1.*t11082*t12270*t13092 + t10806*t1212*t13112 - 1.*t10806*t11082*t13124 + t13261 + t13262) + t1212*t13276*t7625 + t11691*(-1.*t11546*t1212*t13092 + t11082*t12231*t13092 + t13239 + t13240 - 1.*t1212*t13112*t7625 + t11082*t13124*t7625)) + 0.241*(t11691*(t11659*t1212*t13092 - 1.*t11082*t12256*t13092 + t10778*t1212*t13112 - 1.*t10778*t11082*t13124 + t13177 + t13178) + t10806*t1212*t13203 + t11659*(-1.*t11691*t1212*t13092 + t11082*t12270*t13092 - 1.*t10806*t1212*t13112 + t10806*t11082*t13124 + t13205 + t13207) + t10778*t1212*t13231)*t9769 - 0.00482*(t1212*t12720*t7625 + t11082*(t10934*t12729 + t1212*t12712*t7625 - 1.*t11082*t12718*t7625 + (-0.02*t6448*t6666 - 0.02*t6538*t7412)*t7625 + t12741*t12743*t9934 + t12743*t12745*t9934)) - 0.081793755*t3391*(t10032*t1212*t12835 + t1212*t12851*t7625 + t1212*(-1.*t11082*t11776*t12787 + t11248*t1212*t12787 + t10032*t1212*t12814 - 1.*t10032*t11082*t12821 + t12838 + t12839)*t9934 + t11248*(t12776 + t12803 - 1.*t1212*t12814*t7625 + t11082*t12821*t7625 - 1.*t12741*t12787*t9934 - 1.*t12745*t12787*t9934)) + 0.081793755*t2357*(t10205*t1212*t12891 + t1212*t12921*t7625 + t1212*(t11082*t11784*t12787 - 1.*t10205*t1212*t12814 + t10205*t11082*t12821 - 1.*t1212*t12787*t12864 + t12896 + t12897)*t9934 + t12864*(t12865 + t12872 + t1212*t12814*t7625 - 1.*t11082*t12821*t7625 + t12741*t12787*t9934 + t12745*t12787*t9934)))*var2[12] - 0.5*(1.527*t11078*(t12864*t12957 + t11248*t12994) + t13878 + 0.241*t10792*(t13879 + t11659*(t13883 + t11546*t13891 + t12231*t13898) + t11546*(-1.*t11659*t13891 - 1.*t12256*t13898 + t13902 + t13903 + t13904 + t13905)) + 0.241*t11519*t13915 + t13920 + 0.241*t10722*(t13954 + t11691*(-1.*t11546*t13891 - 1.*t12231*t13898 + t13955) + t11546*(t11691*t13891 + t12270*t13898 + t13961 + t13962 + t13964 + t13965)) + 1.527*(t11283*t12957 + t12864*t12994 + t12864*(t12911 + t12919 + t12920 - 1.*t11248*t13796 - 1.*t11776*t13801 + t13853) + t11248*(t11283*t12814 + t12291*t12821 + t12864*t13796 + t11784*t13801 + t13860 + t13861))*t6352 + 0.241*(t13921 + t11691*(t11659*t13891 + t12256*t13898 + t13922 + t13925 + t13926 + t13928) + t13937 + t11659*(-1.*t11691*t13891 - 1.*t12270*t13898 + t13941 + t13942 + t13943 + t13944))*t9769 - 0.081793755*t2357*(t11248*t12835 + t1212*t12851*t9934) - 0.081793755*t3391*(t12864*t12891 + t1212*t12921*t9934) + 0.081793755*t2357*(t11283*t12891 + t1212*(-1.*t11283*t12814 - 1.*t12291*t12821 - 1.*t12864*t13796 - 1.*t11784*t13801 + t13831 + t13840)*t9934 + t12864*(t13825 + t1212*t13796*t9934 - 1.*t11082*t13801*t9934)) - 0.081793755*t3391*(t12835*t12864 + t1212*(t12986 + t12992 + t12993 + t11248*t13796 + t11776*t13801 + t13812)*t9934 + t11248*(t13782 - 1.*t1212*t13796*t9934 + t11082*t13801*t9934)))*var2[13] - 0.5*(t13878 + 0.241*t11763*t13915 + t13920 + 0.241*t10792*(t13879 + t11659*(t13981 + t11546*t13992 + t12231*t13996) + t11546*(t13902 + t13904 + t13905 - 1.*t11659*t13992 - 1.*t12256*t13996 + t14003)) + 0.241*t10722*(t13954 + t11691*(-1.*t11546*t13992 - 1.*t12231*t13996 + t14031) + t11546*(t13961 + t13964 + t13965 + t11691*t13992 + t12270*t13996 + t14036)) + 0.241*(t13921 + t13937 + t11691*(t13922 + t13926 + t13928 + t11659*t13992 + t12256*t13996 + t14015) + t11659*(t13941 + t13943 + t13944 - 1.*t11691*t13992 - 1.*t12270*t13996 + t14020))*t9769)*var2[14]);
  p_output1[4]=var2[12]*(-0.5*(0.241*t10792*(t12253*(t10924*t13110 + t13429 + t13430 + t11542*t13433) + t12227*(-1.*t11012*t13110 - 1.*t11652*t13433 + t13445 + t13447) + t12155*t14128 + t12080*t14147) + 0.241*t10722*(t12264*(-1.*t10924*t13110 - 1.*t11542*t13433 + t13499 + t13503) + t12227*(t11049*t13110 + t11684*t13433 + t13514 + t13515) + t12175*t14183 + t12080*t14201) + 1.527*(t10205*(-1.*t10976*t12812 - 1.*t11236*t13315 + t13378 + t13381) + t10032*(t10987*t12812 + t11782*t13315 + t13400 + t13407) + t11782*t14107 + t11236*t14111)*t6352 + 0.241*(t12264*(t11012*t13110 + t11652*t13433 + t13459 + t13460) + t12253*(-1.*t11049*t13110 - 1.*t11684*t13433 + t13473 + t13475) + t12175*t14160 + t12155*t14173)*t9769 - 0.00093701282*t9934 - 0.081793755*t3391*(t11236*t14055 + (t10976*t12812 + t11236*t13315 + t13328 + t13329)*t7625 + t14075*t9934 + t10032*(-1.*t10888*t12812 + t13311 + t13321 - 1.*t13315*t9934)) + 0.081793755*t2357*(t11782*t14080 + (-1.*t10987*t12812 - 1.*t11782*t13315 + t13355 + t13356)*t7625 + t14088*t9934 + t10205*(t10888*t12812 + t13343 + t13346 + t13315*t9934)))*var2[5] - 0.5*(-0.00093701282*t10934 + 1.527*(t10205*(-1.*t11236*t12787 + t12930 + t12936 + t13378) + t10032*(t11782*t12787 + t12962 + t12964 + t13407) + t11917*t14107 + t11272*t14111)*t6352 + 0.241*t10722*(t12227*(t11684*t13092 + t10806*t13110 + t13261 + t13262) + t11977*t14183 + t11868*t14201 + t12264*(-1.*t11542*t13092 + t13239 + t13240 - 1.*t13110*t7625)) + 0.241*t10792*(t12227*(-1.*t11652*t13092 - 1.*t10778*t13110 + t13146 + t13147) + t11949*t14128 + t11868*t14147 + t12253*(t13047 + t13088 + t11542*t13092 + t13110*t7625)) + 0.241*(t12264*(t11652*t13092 + t10778*t13110 + t13177 + t13178) + t12253*(-1.*t11684*t13092 - 1.*t10806*t13110 + t13205 + t13207) + t11977*t14160 + t11949*t14173)*t9769 - 0.081793755*t3391*(t11272*t14055 + t10934*t14075 + (t11236*t12787 + t12838 + t12839 + t13328)*t7625 + t10032*(t12776 + t12803 + t13311 - 1.*t12787*t9934)) + 0.081793755*t2357*(t11917*t14080 + t10934*t14088 + (-1.*t11782*t12787 + t12896 + t12897 + t13356)*t7625 + t10205*(t12865 + t12872 + t13343 + t12787*t9934)))*var2[12] - 0.5*(1.527*t11078*(t10205*t14107 + t10032*t14111) + t14379 + 0.241*t11519*t14399 + t14405 + 1.527*(t10976*t14107 + t10205*t14111 + t10032*(t11272*t12812 + t11782*t13794 + t13860 + t13861 + t14368 + t5104) + t10205*(t11062 + t12911 - 1.*t11236*t13794 + t13853 + t14087 + t5889))*t6352 - 0.081793755*t2357*(t10032*t14055 + t14075*t7625) - 0.081793755*t3391*(t10205*t14080 + t14088*t7625) + 0.241*t10792*(t12253*(t13883 + t11542*t13889) + t14381 + t12227*(-1.*t11652*t13889 + t13902 + t13903 + t14387 + t14389 - 1.*t11329*t8370)) + 0.241*t10722*(t12264*(-1.*t11542*t13889 + t13955) + t14424 + t12227*(t11684*t13889 + t13961 + t13962 + t14431 + t14432 + t11329*t9074)) + 0.241*(t14406 + t12264*(t11494 + t11503 + t11652*t13889 + t13922 + t13925 + t14407) + t14412 + t12253*(t11337 + t11350 - 1.*t11684*t13889 + t13941 + t13942 + t14413))*t9769 - 0.081793755*t3391*(t10205*t14055 + (t12986 + t11236*t13794 + t13812 + t14109 + t3391*t3958 + t5868)*t7625 + t10032*(t13782 - 1.*t13794*t9934)) + 0.081793755*t2357*(t10976*t14080 + (-1.*t11272*t12812 - 1.*t11782*t13794 + t13831 + t13840 + t14073 + t4052)*t7625 + t10205*(t13825 + t13794*t9934)))*var2[13] - 0.5*(t14379 + 0.241*t11763*t14399 + t14405 + 0.241*t10792*(t12253*(t13981 + t11542*t13990) + t14381 + t12227*(t13902 - 1.*t11652*t13990 + t14003 + t14387 + t14389 - 1.*t11728*t8370)) + 0.241*t10722*(t12264*(-1.*t11542*t13990 + t14031) + t14424 + t12227*(t13961 + t11684*t13990 + t14036 + t14431 + t14432 + t11728*t9074)) + 0.241*(t14406 + t12264*(t11494 + t11756 + t13922 + t11652*t13990 + t14015 + t14407) + t14412 + t12253*(t11350 + t11729 + t13941 - 1.*t11684*t13990 + t14020 + t14413))*t9769)*var2[14]);
  p_output1[5]=var2[12]*(-0.5*(0.081793755*Power(t2357,2)*(-1.*t12763*t6538 - 1.*t12797*t6538) - 0.081793755*Power(t3391,2)*(t12763*t6538 + t12797*t6538) - 0.00482*(-1.*t12698*t6538 + 0.02*t6538*t6666) + 1.527*t6352*(t2357*(-1.*t12763*t2357*t6666 - 1.*t12797*t2357*t6666) + t3391*(-1.*t12763*t3391*t6666 - 1.*t12797*t3391*t6666)) + 0.241*t10792*(t10902*t13014 + t10915*t13042 - 1.*t13070*t6538 - 1.*t13042*t6666)*t8370 + 0.241*t10722*(-1.*t10902*t13014 - 1.*t10915*t13042 + t13070*t6538 + t13042*t6666)*t9074 + 0.241*(t8370*(-1.*t11020*t13014 - 1.*t11027*t13042 + t13042*t6538*t8370 - 1.*t13070*t6666*t8370) + t9074*(t10992*t13014 + t10997*t13042 - 1.*t13042*t6538*t9734 + t13070*t6666*t9734))*t9769)*var2[12] - 0.5*(t14622 + t14627 + t11519*t14659 + 1.527*t11078*(t14575*t2357 + t14569*t3391) - 0.16358751*t2357*t3391*(t12773*t6538 - 1.*t12797*t6666) - 0.16358751*t2357*t3391*(-1.*t12773*t6538 + t12797*t6666) + 1.527*t6352*(t14569*t2357 - 1.*t14575*t3391 + t3391*(t14368 + t14571 + t14572 - 1.*t11064*t14581*t3391 - 1.*t11064*t14583*t3391 + t5104) + t2357*(t11062 - 1.*t11064*t14581*t2357 - 1.*t11064*t14583*t2357 + t5889 + t12797*t3391*t6538 + t12773*t3391*t6666)) + 0.241*t10792*(t14611 + (t10915*t11363*t6538 + t10902*t11363*t6666)*t8370) + 0.241*t10722*(t14603 + (-1.*t10915*t11363*t6538 - 1.*t10902*t11363*t6666)*t9074) + 0.241*(t14634 + t14645 + (t11337 + t11350 + t14646 + t14647 - 1.*t11027*t11363*t6538 - 1.*t11020*t11363*t6666)*t8370 + (t11494 + t11503 + t14635 + t14637 + t10997*t11363*t6538 + t10992*t11363*t6666)*t9074)*t9769)*var2[13] - 0.5*(t14622 + t14627 + t11763*t14659 + 0.241*t10792*(t14611 + (t10915*t11735*t6538 + t10902*t11735*t6666)*t8370) + 0.241*t10722*(t14603 + (-1.*t10915*t11735*t6538 - 1.*t10902*t11735*t6666)*t9074) + 0.241*(t14634 + t14645 + (t11350 + t11729 + t14646 + t14647 - 1.*t11027*t11735*t6538 - 1.*t11020*t11735*t6666)*t8370 + (t11494 + t11756 + t14635 + t14637 + t10997*t11735*t6538 + t10992*t11735*t6666)*t9074)*t9769)*var2[14]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=var2[12]*(-0.5*(t14700 + t14701 + t14704 + t14707 + t11519*t14711 + 3.054*t11078*t6352 + 0.241*t11519*t9769)*var2[13] - 0.5*(t14700 + t14701 + t14704 + t14707 + t11763*t14711 + 0.241*t11763*t9769)*var2[14]);
  p_output1[13]=var2[12]*(-0.5*(t14730 + t14740 + 0.0032717502*t2357 - 0.0032717502*t3391)*var2[13] - 0.5*(t14730 + t14740 + 0.241*t10792*(t14724 + t14725 + t14726 - 1.*t11717*t7975 + t11724*t7993) + 0.241*t10722*(0.194401*t7975 + t11724*t7975 + t11717*t7993 + t7975*t8925 - 1.*t7993*t9011))*var2[14]);
  p_output1[14]=var2[12]*(-0.5*t14767*var2[13] - 0.5*t14767*var2[14]);
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec13_plane.hh"

namespace SymFunction
{

void Ce1_vec13_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
