/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:52:47 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t466;
  double t494;
  double t346;
  double t594;
  double t1092;
  double t1099;
  double t1132;
  double t723;
  double t864;
  double t969;
  double t1049;
  double t1204;
  double t1607;
  double t1658;
  double t1686;
  double t1285;
  double t2926;
  double t3053;
  double t3069;
  double t2884;
  double t3192;
  double t3194;
  double t3296;
  double t3325;
  double t3366;
  double t3410;
  double t3450;
  double t3459;
  double t2119;
  double t2147;
  double t2401;
  double t2404;
  double t2473;
  double t2635;
  double t3930;
  double t3974;
  double t3532;
  double t3582;
  double t3605;
  double t3903;
  double t4000;
  double t5114;
  double t5205;
  double t5264;
  double t5305;
  double t5461;
  double t5485;
  double t5867;
  double t5873;
  double t6031;
  double t6084;
  double t479;
  double t696;
  double t702;
  double t6743;
  double t6947;
  double t6985;
  double t7134;
  double t6730;
  double t7144;
  double t7249;
  double t7252;
  double t7253;
  double t7254;
  double t6194;
  double t6265;
  double t6559;
  double t7494;
  double t7585;
  double t7677;
  double t7697;
  double t5764;
  double t6088;
  double t6100;
  double t4872;
  double t4910;
  double t4933;
  double t8921;
  double t9000;
  double t9021;
  double t8868;
  double t8874;
  double t8908;
  double t9135;
  double t9202;
  double t9203;
  double t9204;
  double t9207;
  double t9210;
  double t772;
  double t1159;
  double t1454;
  double t1460;
  double t1461;
  double t1481;
  double t9233;
  double t9297;
  double t9316;
  double t9217;
  double t9229;
  double t9230;
  double t1564;
  double t1745;
  double t1784;
  double t1847;
  double t1867;
  double t1868;
  double t9043;
  double t9046;
  double t9047;
  double t9048;
  double t9060;
  double t9107;
  double t3824;
  double t2763;
  double t4252;
  double t6631;
  double t7454;
  double t8125;
  double t8367;
  double t8776;
  double t8778;
  double t8910;
  double t8911;
  double t8912;
  double t8914;
  double t8915;
  double t8918;
  double t9375;
  double t9379;
  double t9387;
  double t9405;
  double t9408;
  double t9420;
  double t9877;
  double t9886;
  double t9914;
  double t9915;
  double t9916;
  double t9918;
  double t9919;
  double t9920;
  double t9921;
  double t9922;
  double t9929;
  double t9935;
  double t9938;
  double t9939;
  double t9941;
  double t9948;
  double t9949;
  double t9950;
  double t9951;
  double t9954;
  double t9878;
  double t9880;
  double t9883;
  double t9887;
  double t9888;
  double t9889;
  double t9896;
  double t9897;
  double t9898;
  double t9900;
  double t9901;
  double t9903;
  double t10017;
  double t10018;
  double t10019;
  double t10029;
  double t10031;
  double t10034;
  double t9957;
  double t9958;
  double t9959;
  double t9961;
  double t9965;
  double t9966;
  double t9972;
  double t9973;
  double t9980;
  double t9985;
  double t9986;
  double t9988;
  double t10057;
  double t10060;
  double t10061;
  double t10049;
  double t10052;
  double t10053;
  double t10062;
  double t10065;
  double t10066;
  double t10056;
  double t10067;
  double t10071;
  double t10100;
  double t10101;
  double t10102;
  double t10104;
  double t10106;
  double t10107;
  double t10084;
  double t10086;
  double t10087;
  double t9647;
  double t10073;
  double t10091;
  double t10092;
  double t10131;
  double t10132;
  double t4527;
  double t10225;
  double t10226;
  double t10228;
  double t10234;
  double t10235;
  double t10236;
  double t10258;
  double t10260;
  double t10261;
  double t10289;
  double t10290;
  double t10291;
  double t10293;
  double t10294;
  double t10296;
  double t10231;
  double t10237;
  double t10241;
  double t9758;
  double t10302;
  double t10303;
  double t10245;
  double t10246;
  double t10077;
  double t10403;
  double t10411;
  double t10413;
  double t10416;
  double t10419;
  double t10421;
  double t10414;
  double t10423;
  double t10424;
  double t10113;
  double t10130;
  double t10463;
  double t10465;
  double t10473;
  double t10475;
  double t10476;
  double t10485;
  double t10437;
  double t10439;
  double t10440;
  double t10145;
  double t10155;
  double t10159;
  double t10170;
  double t10176;
  double t10447;
  double t10448;
  double t10502;
  double t10503;
  double t10194;
  double t10199;
  double t10631;
  double t10633;
  double t10634;
  double t10637;
  double t10638;
  double t10639;
  double t10269;
  double t10659;
  double t10664;
  double t10666;
  double t10297;
  double t10307;
  double t10693;
  double t10694;
  double t10695;
  double t10697;
  double t10699;
  double t10700;
  double t10635;
  double t10640;
  double t10643;
  double t10322;
  double t10331;
  double t10340;
  double t10712;
  double t10718;
  double t10353;
  double t10362;
  double t10646;
  double t10647;
  double t10370;
  double t10375;
  double t10042;
  double t10043;
  double t10045;
  double t3248;
  double t3466;
  double t3470;
  double t3531;
  double t3620;
  double t3770;
  double t3992;
  double t4007;
  double t4018;
  double t4209;
  double t4266;
  double t4432;
  double t4531;
  double t4556;
  double t4673;
  double t4781;
  double t4801;
  double t7251;
  double t7256;
  double t7259;
  double t7261;
  double t7264;
  double t7292;
  double t7907;
  double t7996;
  double t8142;
  double t8179;
  double t8201;
  double t8210;
  double t8394;
  double t8475;
  double t8710;
  double t8767;
  double t8780;
  double t8784;
  double t8785;
  double t8786;
  double t8804;
  double t10851;
  double t10852;
  double t10857;
  double t10003;
  double t10004;
  double t10005;
  double t10007;
  double t10009;
  double t10010;
  double t10037;
  double t10038;
  double t10039;
  double t9536;
  double t9603;
  double t9608;
  double t9613;
  double t9616;
  double t9617;
  double t9621;
  double t9623;
  double t9636;
  double t9637;
  double t9640;
  double t9693;
  double t9695;
  double t9714;
  double t9739;
  double t9747;
  double t9752;
  double t9755;
  double t9756;
  double t9759;
  double t9760;
  double t9762;
  double t9768;
  double t9770;
  double t9773;
  double t9774;
  double t9775;
  double t9778;
  double t9779;
  double t9780;
  double t9782;
  double t9784;
  double t9789;
  double t9811;
  double t9812;
  double t9813;
  double t9821;
  double t9822;
  double t9828;
  double t10006;
  double t10015;
  double t10021;
  double t10023;
  double t10035;
  double t10036;
  double t10041;
  double t10046;
  double t10047;
  double t9884;
  double t9891;
  double t9893;
  double t9899;
  double t9905;
  double t9907;
  double t9960;
  double t9967;
  double t9969;
  double t9983;
  double t9991;
  double t9992;
  double t10072;
  double t10076;
  double t10078;
  double t10080;
  double t10082;
  double t10090;
  double t10093;
  double t10094;
  double t10096;
  double t10098;
  double t10103;
  double t10114;
  double t10118;
  double t10125;
  double t10126;
  double t10134;
  double t10135;
  double t10136;
  double t10140;
  double t10141;
  double t10147;
  double t10148;
  double t10152;
  double t10156;
  double t10162;
  double t10163;
  double t10166;
  double t10168;
  double t10171;
  double t10172;
  double t10175;
  double t10182;
  double t10185;
  double t10187;
  double t10192;
  double t10193;
  double t10196;
  double t10203;
  double t10211;
  double t10223;
  double t10244;
  double t10250;
  double t10251;
  double t10252;
  double t10287;
  double t10292;
  double t10298;
  double t10299;
  double t10300;
  double t10304;
  double t10308;
  double t10312;
  double t10315;
  double t10263;
  double t10264;
  double t10266;
  double t10271;
  double t10284;
  double t10285;
  double t10319;
  double t10321;
  double t10323;
  double t10328;
  double t10329;
  double t10330;
  double t10334;
  double t10341;
  double t10342;
  double t10343;
  double t10347;
  double t10350;
  double t10351;
  double t10357;
  double t10358;
  double t10361;
  double t10363;
  double t10367;
  double t10369;
  double t10372;
  double t10376;
  double t10378;
  double t10381;
  double t10427;
  double t10430;
  double t10432;
  double t10433;
  double t10434;
  double t10435;
  double t10446;
  double t10449;
  double t10450;
  double t10451;
  double t10459;
  double t10474;
  double t10490;
  double t10491;
  double t10496;
  double t10497;
  double t10501;
  double t10504;
  double t10505;
  double t10508;
  double t10511;
  double t10521;
  double t10523;
  double t10525;
  double t10526;
  double t10528;
  double t10533;
  double t10540;
  double t10547;
  double t10553;
  double t10555;
  double t10556;
  double t10561;
  double t10563;
  double t10569;
  double t10571;
  double t10580;
  double t10586;
  double t10587;
  double t10590;
  double t10595;
  double t10597;
  double t10599;
  double t10607;
  double t10610;
  double t10616;
  double t10617;
  double t10620;
  double t10626;
  double t10644;
  double t10648;
  double t10650;
  double t10651;
  double t10667;
  double t10668;
  double t10671;
  double t10672;
  double t10676;
  double t10681;
  double t10685;
  double t10696;
  double t10701;
  double t10702;
  double t10708;
  double t10730;
  double t10732;
  double t10734;
  double t10735;
  double t10740;
  double t10742;
  double t10744;
  double t10747;
  double t10749;
  double t10753;
  double t10756;
  double t10763;
  double t10765;
  double t10770;
  double t10773;
  double t10776;
  double t10779;
  double t10783;
  double t10785;
  double t10788;
  double t10790;
  double t10794;
  double t10795;
  double t10796;
  double t10797;
  double t10799;
  double t10800;
  double t10801;
  double t10803;
  double t10804;
  double t10805;
  double t10812;
  double t10813;
  double t10814;
  double t11087;
  double t11089;
  double t11090;
  double t9895;
  double t9911;
  double t9930;
  double t9933;
  double t9955;
  double t9956;
  double t9970;
  double t9995;
  double t9997;
  double t10973;
  double t10983;
  double t10984;
  double t10985;
  double t10988;
  double t10992;
  double t10994;
  double t10998;
  double t10999;
  double t11274;
  double t11275;
  double t11281;
  double t11297;
  double t11299;
  double t11300;
  double t10436;
  double t10452;
  double t10510;
  double t10560;
  double t10627;
  double t10655;
  double t10682;
  double t10741;
  double t10782;
  double t10815;
  double t10821;
  double t11218;
  double t11219;
  double t11221;
  double t11222;
  double t11225;
  double t11227;
  double t11229;
  double t11231;
  double t11232;
  double t11237;
  double t11238;
  double t11051;
  double t11052;
  double t11057;
  double t11058;
  double t11060;
  double t11061;
  double t11062;
  double t11063;
  double t11067;
  double t11068;
  double t11069;
  double t11368;
  double t11372;
  double t11374;
  double t11288;
  double t11290;
  double t11292;
  double t11385;
  double t11386;
  double t11387;
  double t11308;
  double t11309;
  double t11311;
  double t11329;
  double t11330;
  double t11332;
  double t11342;
  double t11343;
  double t11344;
  double t10083;
  double t10097;
  double t10139;
  double t10167;
  double t10224;
  double t10253;
  double t10286;
  double t10317;
  double t10344;
  double t10386;
  double t10388;
  double t11198;
  double t11199;
  double t11201;
  double t11203;
  double t11204;
  double t11207;
  double t11210;
  double t11211;
  double t11212;
  double t11213;
  double t11214;
  double t11030;
  double t11031;
  double t11033;
  double t11035;
  double t11039;
  double t11040;
  double t11042;
  double t11043;
  double t11044;
  double t11045;
  double t11046;
  double t11360;
  double t11361;
  double t11363;
  double t11364;
  double t11365;
  double t11375;
  double t11376;
  double t11377;
  double t11380;
  double t11382;
  double t11384;
  double t11388;
  double t11390;
  double t5093;
  double t8816;
  double t8919;
  double t9131;
  double t9214;
  double t9215;
  double t9231;
  double t9374;
  double t9437;
  double t9499;
  double t9502;
  double t11092;
  double t11094;
  double t11096;
  double t11101;
  double t11102;
  double t11103;
  double t11106;
  double t11110;
  double t11115;
  double t11117;
  double t11122;
  double t10859;
  double t10863;
  double t10869;
  double t10874;
  double t10877;
  double t10879;
  double t10900;
  double t10902;
  double t10903;
  double t10904;
  double t10910;
  double t11436;
  double t11438;
  double t11439;
  double t11440;
  double t11444;
  double t11445;
  double t11447;
  double t11449;
  double t11450;
  double t11451;
  double t11457;
  double t11458;
  double t11460;
  double t11265;
  double t11268;
  double t11282;
  double t11284;
  double t11286;
  double t11295;
  double t11296;
  double t11301;
  double t11302;
  double t11304;
  double t11306;
  double t11312;
  double t11313;
  double t11625;
  double t11626;
  double t11627;
  double t11629;
  double t11630;
  double t11633;
  double t11634;
  double t11639;
  double t11640;
  double t11642;
  double t9757;
  double t9800;
  double t9801;
  double t9803;
  double t9809;
  double t9814;
  double t9820;
  double t9854;
  double t9856;
  double t11150;
  double t11159;
  double t11166;
  double t11167;
  double t11169;
  double t11178;
  double t11180;
  double t11182;
  double t11183;
  double t10947;
  double t10955;
  double t10957;
  double t10959;
  double t10960;
  double t10962;
  double t10963;
  double t10964;
  double t10966;
  double t11462;
  double t11469;
  double t11470;
  double t11471;
  double t11474;
  double t11476;
  double t11477;
  double t11479;
  double t11481;
  double t11482;
  double t11483;
  double t11490;
  double t11491;
  double t11315;
  double t11322;
  double t11324;
  double t11325;
  double t11327;
  double t11333;
  double t11336;
  double t11337;
  double t11338;
  double t11340;
  double t11341;
  double t11346;
  double t11348;
  double t11561;
  double t11562;
  double t11564;
  double t11566;
  double t11567;
  double t11670;
  double t11677;
  double t11678;
  double t11679;
  double t11685;
  double t9512;
  double t9514;
  double t9615;
  double t9631;
  double t9634;
  double t11127;
  double t11133;
  double t11134;
  double t11136;
  double t11142;
  double t10914;
  double t10919;
  double t10920;
  double t10925;
  double t10939;
  double t11425;
  double t11428;
  double t11429;
  double t11431;
  double t11432;
  double t11252;
  double t11256;
  double t11257;
  double t11260;
  double t11263;
  double t11541;
  double t11544;
  double t11550;
  double t11660;
  double t11663;
  double t11668;
  double t1508;
  double t2060;
  double t2107;
  double t11079;
  double t11080;
  double t11081;
  double t10834;
  double t10841;
  double t10847;
  double t11419;
  double t11421;
  double t11423;
  double t11243;
  double t11244;
  double t11246;
  t466 = Cos(var1[11]);
  t494 = Sin(var1[10]);
  t346 = Cos(var1[10]);
  t594 = Sin(var1[11]);
  t1092 = -1.*t466*t494;
  t1099 = -1.*t346*t594;
  t1132 = t1092 + t1099;
  t723 = Sin(var1[4]);
  t864 = Cos(var1[4]);
  t969 = Cos(var1[5]);
  t1049 = Sin(var1[9]);
  t1204 = Cos(var1[9]);
  t1607 = -1.*t346*t466;
  t1658 = t494*t594;
  t1686 = t1607 + t1658;
  t1285 = Sin(var1[5]);
  t2926 = -0.04*t346;
  t3053 = 0.04*t494;
  t3069 = t2926 + t3053;
  t2884 = 0.055855*t1049;
  t3192 = t1204*t3069;
  t3194 = t2884 + t3192;
  t3296 = -1.*t1204;
  t3325 = 1. + t3296;
  t3366 = 0.081715*t3325;
  t3410 = 0.13757*t1204;
  t3450 = -1.*t1049*t3069;
  t3459 = t3366 + t3410 + t3450;
  t2119 = -1.*t346;
  t2147 = 1. + t2119;
  t2401 = 0.242889*t2147;
  t2404 = 0.202889*t346;
  t2473 = -0.04*t494;
  t2635 = t2401 + t2404 + t2473;
  t3930 = 0.04*t346;
  t3974 = t3930 + t3053;
  t3532 = -1.*t1204*t346*t3194;
  t3582 = t346*t1049*t3459;
  t3605 = -1.*t2635*t494;
  t3903 = Power(t1204,2);
  t4000 = Power(t1049,2);
  t5114 = -1.*t466;
  t5205 = 1. + t5114;
  t5264 = 0.100689*t5205;
  t5305 = 0.080689*t466;
  t5461 = -0.16*t594;
  t5485 = t5264 + t5305 + t5461;
  t5867 = -0.20833*t5205;
  t5873 = -0.36833*t466;
  t6031 = 0.02*t594;
  t6084 = t5867 + t5873 + t6031;
  t479 = t346*t466;
  t696 = -1.*t494*t594;
  t702 = t479 + t696;
  t6743 = 0.242889*t494;
  t6947 = -1.*t494*t5485;
  t6985 = t346*t6084;
  t7134 = t6743 + t6947 + t6985;
  t6730 = 0.035165*t1049;
  t7144 = t1204*t7134;
  t7249 = t6730 + t7144;
  t7252 = 0.11688*t1204;
  t7253 = -1.*t1049*t7134;
  t7254 = t3366 + t7252 + t7253;
  t6194 = t466*t494;
  t6265 = t346*t594;
  t6559 = t6194 + t6265;
  t7494 = 0.242889*t346;
  t7585 = -1.*t346*t5485;
  t7677 = -1.*t494*t6084;
  t7697 = t7494 + t7585 + t7677;
  t5764 = t346*t5485;
  t6088 = t494*t6084;
  t6100 = t2401 + t5764 + t6088;
  t4872 = t1204*t969;
  t4910 = -1.*t1049*t1285;
  t4933 = t4872 + t4910;
  t8921 = -1.*t1049*t3194;
  t9000 = -1.*t1204*t3459;
  t9021 = t8921 + t9000;
  t8868 = t1049*t3194;
  t8874 = t1204*t3459;
  t8908 = t8868 + t8874;
  t9135 = t346*t723;
  t9202 = t969*t1049*t494;
  t9203 = t1204*t494*t1285;
  t9204 = t9202 + t9203;
  t9207 = t864*t9204;
  t9210 = t9135 + t9207;
  t772 = t702*t723;
  t1159 = -1.*t969*t1049*t1132;
  t1454 = -1.*t1204*t1132*t1285;
  t1460 = t1159 + t1454;
  t1461 = t864*t1460;
  t1481 = t772 + t1461;
  t9233 = t1049*t7249;
  t9297 = t1204*t7254;
  t9316 = t9233 + t9297;
  t9217 = -1.*t1049*t7249;
  t9229 = -1.*t1204*t7254;
  t9230 = t9217 + t9229;
  t1564 = t1132*t723;
  t1745 = -1.*t969*t1049*t1686;
  t1784 = -1.*t1204*t1686*t1285;
  t1847 = t1745 + t1784;
  t1867 = t864*t1847;
  t1868 = t1564 + t1867;
  t9043 = -1.*t494*t723;
  t9046 = t346*t969*t1049;
  t9047 = t1204*t346*t1285;
  t9048 = t9046 + t9047;
  t9060 = t864*t9048;
  t9107 = t9043 + t9060;
  t3824 = -1.*t346*t2635;
  t2763 = t346*t2635;
  t4252 = -1.*t3069*t494;
  t6631 = -1.*t6100*t6559;
  t7454 = -1.*t7134*t6559;
  t8125 = -1.*t6100*t702;
  t8367 = t6100*t702;
  t8776 = t6100*t1132;
  t8778 = t7134*t702;
  t8910 = t494*t723;
  t8911 = -1.*t346*t969*t1049;
  t8912 = -1.*t1204*t346*t1285;
  t8914 = t8911 + t8912;
  t8915 = t864*t8914;
  t8918 = t8910 + t8915;
  t9375 = t6559*t723;
  t9379 = -1.*t969*t1049*t702;
  t9387 = -1.*t1204*t702*t1285;
  t9405 = t9379 + t9387;
  t9408 = t864*t9405;
  t9420 = t9375 + t9408;
  t9877 = Sin(var1[3]);
  t9886 = Cos(var1[3]);
  t9914 = -1.*t1204*t969*t494;
  t9915 = t1049*t494*t1285;
  t9916 = t9914 + t9915;
  t9918 = t9877*t9916;
  t9919 = t346*t864;
  t9920 = -1.*t723*t9204;
  t9921 = t9919 + t9920;
  t9922 = t9886*t9921;
  t9929 = t9918 + t9922;
  t9935 = t1204*t969*t1132;
  t9938 = -1.*t1049*t1132*t1285;
  t9939 = t9935 + t9938;
  t9941 = t9877*t9939;
  t9948 = t864*t702;
  t9949 = -1.*t723*t1460;
  t9950 = t9948 + t9949;
  t9951 = t9886*t9950;
  t9954 = t9941 + t9951;
  t9878 = t1204*t346*t969;
  t9880 = -1.*t346*t1049*t1285;
  t9883 = t9878 + t9880;
  t9887 = t864*t494;
  t9888 = -1.*t723*t8914;
  t9889 = t9887 + t9888;
  t9896 = -1.*t1204*t346*t969;
  t9897 = t346*t1049*t1285;
  t9898 = t9896 + t9897;
  t9900 = -1.*t864*t494;
  t9901 = -1.*t723*t9048;
  t9903 = t9900 + t9901;
  t10017 = t9886*t9916;
  t10018 = -1.*t9877*t9921;
  t10019 = t10017 + t10018;
  t10029 = t9886*t9939;
  t10031 = -1.*t9877*t9950;
  t10034 = t10029 + t10031;
  t9957 = t1204*t969*t702;
  t9958 = -1.*t1049*t702*t1285;
  t9959 = t9957 + t9958;
  t9961 = t864*t6559;
  t9965 = -1.*t723*t9405;
  t9966 = t9961 + t9965;
  t9972 = t1204*t969*t1686;
  t9973 = -1.*t1049*t1686*t1285;
  t9980 = t9972 + t9973;
  t9985 = t864*t1132;
  t9986 = -1.*t723*t1847;
  t9988 = t9985 + t9986;
  t10057 = t969*t1049;
  t10060 = t1204*t1285;
  t10061 = t10057 + t10060;
  t10049 = t969*t3459;
  t10052 = -1.*t3194*t1285;
  t10053 = t10049 + t10052;
  t10062 = t969*t3194;
  t10065 = t3459*t1285;
  t10066 = t10062 + t10065;
  t10056 = -1.*t4933*t10053;
  t10067 = -1.*t10061*t10066;
  t10071 = t10056 + t10067;
  t10100 = -1.*t969*t1049*t3974;
  t10101 = -1.*t1204*t3974*t1285;
  t10102 = t10100 + t10101;
  t10104 = t1204*t969*t3974;
  t10106 = -1.*t1049*t3974*t1285;
  t10107 = t10104 + t10106;
  t10084 = t4933*t10053;
  t10086 = t10061*t10066;
  t10087 = t10084 + t10086;
  t9647 = -1.*t346*t3069;
  t10073 = t2635*t494;
  t10091 = -1.*t10053*t9204;
  t10092 = -1.*t10066*t9916;
  t10131 = t10053*t9204;
  t10132 = t10066*t9916;
  t4527 = t346*t3069;
  t10225 = t969*t7254;
  t10226 = -1.*t7249*t1285;
  t10228 = t10225 + t10226;
  t10234 = t969*t7249;
  t10235 = t7254*t1285;
  t10236 = t10234 + t10235;
  t10258 = -1.*t4933*t10228;
  t10260 = -1.*t10061*t10236;
  t10261 = t10258 + t10260;
  t10289 = -1.*t969*t1049*t7697;
  t10290 = -1.*t1204*t7697*t1285;
  t10291 = t10289 + t10290;
  t10293 = t1204*t969*t7697;
  t10294 = -1.*t1049*t7697*t1285;
  t10296 = t10293 + t10294;
  t10231 = t4933*t10228;
  t10237 = t10061*t10236;
  t10241 = t10231 + t10237;
  t9758 = -1.*t7134*t702;
  t10302 = t10228*t1460;
  t10303 = t10236*t9939;
  t10245 = -1.*t10228*t1460;
  t10246 = -1.*t10236*t9939;
  t10077 = t9883*t10066;
  t10403 = t2635*t723;
  t10411 = t864*t10053;
  t10413 = t10403 + t10411;
  t10416 = t864*t2635;
  t10419 = -1.*t723*t10053;
  t10421 = t10416 + t10419;
  t10414 = -1.*t864*t4933*t10413;
  t10423 = t723*t4933*t10421;
  t10424 = t10067 + t10414 + t10423;
  t10113 = -1.*t10061*t10107;
  t10130 = t9883*t10107;
  t10463 = t3069*t723;
  t10465 = t864*t10102;
  t10473 = t10463 + t10465;
  t10475 = t864*t3069;
  t10476 = -1.*t723*t10102;
  t10485 = t10475 + t10476;
  t10437 = t864*t4933*t10413;
  t10439 = -1.*t723*t4933*t10421;
  t10440 = t10086 + t10437 + t10439;
  t10145 = t10061*t10107;
  t10155 = -1.*t9898*t10066;
  t10159 = -1.*t10107*t9916;
  t10170 = -1.*t9883*t10066;
  t10176 = -1.*t9883*t10107;
  t10447 = -1.*t10413*t9210;
  t10448 = -1.*t10421*t9921;
  t10502 = t10413*t9210;
  t10503 = t10421*t9921;
  t10194 = t9898*t10066;
  t10199 = t10107*t9916;
  t10631 = t6100*t723;
  t10633 = t864*t10228;
  t10634 = t10631 + t10633;
  t10637 = t864*t6100;
  t10638 = -1.*t723*t10228;
  t10639 = t10637 + t10638;
  t10269 = t10236*t9959;
  t10659 = -1.*t864*t4933*t10634;
  t10664 = t723*t4933*t10639;
  t10666 = t10260 + t10659 + t10664;
  t10297 = -1.*t10061*t10296;
  t10307 = t10296*t9959;
  t10693 = t7134*t723;
  t10694 = t864*t10291;
  t10695 = t10693 + t10694;
  t10697 = t864*t7134;
  t10699 = -1.*t723*t10291;
  t10700 = t10697 + t10699;
  t10635 = t864*t4933*t10634;
  t10640 = -1.*t723*t4933*t10639;
  t10643 = t10237 + t10635 + t10640;
  t10322 = t10061*t10296;
  t10331 = -1.*t10296*t9939;
  t10340 = -1.*t10236*t9980;
  t10712 = t10634*t1481;
  t10718 = t10639*t9950;
  t10353 = -1.*t10236*t9959;
  t10362 = -1.*t10296*t9959;
  t10646 = -1.*t10634*t1481;
  t10647 = -1.*t10639*t9950;
  t10370 = t10296*t9939;
  t10375 = t10236*t9980;
  t10042 = t9886*t9980;
  t10043 = -1.*t9877*t9988;
  t10045 = t10042 + t10043;
  t3248 = -1.*t1204*t3194*t494;
  t3466 = t1049*t3459*t494;
  t3470 = t2763 + t3248 + t3466;
  t3531 = t346*t3470;
  t3620 = t3532 + t3582 + t3605;
  t3770 = -1.*t494*t3620;
  t3992 = -1.*t3903*t346*t3974;
  t4007 = -1.*t346*t4000*t3974;
  t4018 = t1204*t3194*t494;
  t4209 = -1.*t1049*t3459*t494;
  t4266 = t3824 + t3992 + t4007 + t4018 + t4209 + t4252;
  t4432 = t346*t4266;
  t4531 = -1.*t3903*t3974*t494;
  t4556 = -1.*t4000*t3974*t494;
  t4673 = t3532 + t3582 + t4527 + t3605 + t4531 + t4556;
  t4781 = t494*t4673;
  t4801 = t3531 + t3770 + t4432 + t4781;
  t7251 = -1.*t1204*t7249*t702;
  t7256 = t1049*t7254*t702;
  t7259 = t6631 + t7251 + t7256;
  t7261 = t1132*t7259;
  t7264 = -1.*t1204*t7249*t1132;
  t7292 = t1049*t7254*t1132;
  t7907 = -1.*t3903*t7697*t702;
  t7996 = -1.*t4000*t7697*t702;
  t8142 = t7264 + t7292 + t7454 + t7907 + t7996 + t8125;
  t8179 = t702*t8142;
  t8201 = t1204*t7249*t1132;
  t8210 = -1.*t1049*t7254*t1132;
  t8394 = t8201 + t8210 + t8367;
  t8475 = t702*t8394;
  t8710 = t3903*t7697*t1132;
  t8767 = t4000*t7697*t1132;
  t8780 = t1204*t7249*t1686;
  t8784 = -1.*t1049*t7254*t1686;
  t8785 = t8710 + t8767 + t8776 + t8778 + t8780 + t8784;
  t8786 = t6559*t8785;
  t8804 = t7261 + t8179 + t8475 + t8786;
  t10851 = t9886*t10061;
  t10852 = t9877*t723*t4933;
  t10857 = t10851 + t10852;
  t10003 = t9886*t9883;
  t10004 = -1.*t9877*t9889;
  t10005 = t10003 + t10004;
  t10007 = t9886*t9898;
  t10009 = -1.*t9877*t9903;
  t10010 = t10007 + t10009;
  t10037 = t9886*t9959;
  t10038 = -1.*t9877*t9966;
  t10039 = t10037 + t10038;
  t9536 = 0.242889*t466;
  t9603 = -1.*t466*t5485;
  t9608 = t6084*t594;
  t9613 = t9536 + t9603 + t9608;
  t9616 = t466*t6084;
  t9617 = -0.242889*t594;
  t9621 = t5485*t594;
  t9623 = t9616 + t9617 + t9621;
  t9636 = -1.*t346*t3974;
  t9637 = t3824 + t9636;
  t9640 = t346*t9637;
  t9693 = t9647 + t3605;
  t9695 = -1.*t494*t9693;
  t9714 = t2763 + t4252;
  t9739 = t346*t9714;
  t9747 = -1.*t3974*t494;
  t9752 = t3605 + t9747;
  t9755 = t494*t9752;
  t9756 = t9640 + t9695 + t9739 + t9755;
  t9759 = t6631 + t9758;
  t9760 = t1132*t9759;
  t9762 = -1.*t7134*t1132;
  t9768 = -1.*t7697*t702;
  t9770 = t9762 + t7454 + t9768 + t8125;
  t9773 = t702*t9770;
  t9774 = t7134*t1132;
  t9775 = t9774 + t8367;
  t9778 = t702*t9775;
  t9779 = t7697*t1132;
  t9780 = t7134*t1686;
  t9782 = t9779 + t8776 + t8778 + t9780;
  t9784 = t6559*t9782;
  t9789 = t9760 + t9773 + t9778 + t9784;
  t9811 = -0.11688*t702;
  t9812 = -0.081715*t1686;
  t9813 = t9811 + t9812;
  t9821 = -0.081715*t1132;
  t9822 = -0.11688*t6559;
  t9828 = t9821 + t9822;
  t10006 = 1.527*t9210*t10005;
  t10015 = 1.527*t9210*t10010;
  t10021 = 1.527*t8918*t10019;
  t10023 = 1.527*t9107*t10019;
  t10035 = 0.241*t9420*t10034;
  t10036 = 0.241*t1868*t10034;
  t10041 = 0.241*t1481*t10039;
  t10046 = 0.241*t1481*t10045;
  t10047 = t10006 + t10015 + t10021 + t10023 + t10035 + t10036 + t10041 + t10046;
  t9884 = t9877*t9883;
  t9891 = t9886*t9889;
  t9893 = t9884 + t9891;
  t9899 = t9877*t9898;
  t9905 = t9886*t9903;
  t9907 = t9899 + t9905;
  t9960 = t9877*t9959;
  t9967 = t9886*t9966;
  t9969 = t9960 + t9967;
  t9983 = t9877*t9980;
  t9991 = t9886*t9988;
  t9992 = t9983 + t9991;
  t10072 = t9883*t10071;
  t10076 = t8914*t10053;
  t10078 = t10073 + t10076 + t10077;
  t10080 = t10061*t10078;
  t10082 = t10072 + t10080;
  t10090 = t9916*t10087;
  t10093 = t3824 + t10091 + t10092;
  t10094 = t10061*t10093;
  t10096 = t10090 + t10094;
  t10098 = t9916*t10071;
  t10103 = -1.*t4933*t10102;
  t10114 = t10103 + t10113;
  t10118 = t9883*t10114;
  t10125 = t3069*t494;
  t10126 = t8914*t10102;
  t10134 = t2763 + t10125 + t10126 + t10130 + t10131 + t10132;
  t10135 = t10061*t10134;
  t10136 = t10098 + t10118 + t10135;
  t10140 = t9898*t10087;
  t10141 = t4933*t10102;
  t10147 = t10141 + t10145;
  t10148 = t9916*t10147;
  t10152 = -1.*t9048*t10053;
  t10156 = -1.*t10102*t9204;
  t10162 = t9647 + t10073 + t10152 + t10155 + t10156 + t10159;
  t10163 = t10061*t10162;
  t10166 = t10140 + t10148 + t10163;
  t10168 = -1.*t8914*t10053;
  t10171 = t3605 + t10168 + t10170;
  t10172 = t9898*t10171;
  t10175 = -1.*t8914*t10102;
  t10182 = t3824 + t4252 + t10175 + t10176 + t10091 + t10092;
  t10185 = t9916*t10182;
  t10187 = t2763 + t10131 + t10132;
  t10192 = t9916*t10187;
  t10193 = t9048*t10053;
  t10196 = t10102*t9204;
  t10203 = t4527 + t3605 + t10193 + t10194 + t10196 + t10199;
  t10211 = t9883*t10203;
  t10223 = t10172 + t10185 + t10192 + t10211;
  t10244 = t9939*t10241;
  t10250 = t8125 + t10245 + t10246;
  t10251 = t10061*t10250;
  t10252 = t10244 + t10251;
  t10287 = t9939*t10261;
  t10292 = -1.*t4933*t10291;
  t10298 = t10292 + t10297;
  t10299 = t9959*t10298;
  t10300 = t7134*t6559;
  t10304 = t10291*t9405;
  t10308 = t10300 + t8367 + t10302 + t10303 + t10304 + t10307;
  t10312 = t10061*t10308;
  t10315 = t10287 + t10299 + t10312;
  t10263 = t9959*t10261;
  t10264 = t6100*t6559;
  t10266 = t10228*t9405;
  t10271 = t10264 + t10266 + t10269;
  t10284 = t10061*t10271;
  t10285 = t10263 + t10284;
  t10319 = t9980*t10241;
  t10321 = t4933*t10291;
  t10323 = t10321 + t10322;
  t10328 = t9939*t10323;
  t10329 = -1.*t6100*t1132;
  t10330 = -1.*t10291*t1460;
  t10334 = -1.*t10228*t1847;
  t10341 = t10329 + t9758 + t10330 + t10331 + t10334 + t10340;
  t10342 = t10061*t10341;
  t10343 = t10319 + t10328 + t10342;
  t10347 = t8367 + t10302 + t10303;
  t10350 = t9939*t10347;
  t10351 = -1.*t10228*t9405;
  t10357 = t6631 + t10351 + t10353;
  t10358 = t9980*t10357;
  t10361 = -1.*t10291*t9405;
  t10363 = t7454 + t8125 + t10245 + t10246 + t10361 + t10362;
  t10367 = t9939*t10363;
  t10369 = t10291*t1460;
  t10372 = t10228*t1847;
  t10376 = t8776 + t8778 + t10369 + t10370 + t10372 + t10375;
  t10378 = t9959*t10376;
  t10381 = t10350 + t10358 + t10367 + t10378;
  t10427 = t8918*t10424;
  t10430 = t8918*t10413;
  t10432 = t9889*t10421;
  t10433 = t10077 + t10430 + t10432;
  t10434 = t864*t4933*t10433;
  t10435 = t10427 + t10434;
  t10446 = t9210*t10440;
  t10449 = t10092 + t10447 + t10448;
  t10450 = t864*t4933*t10449;
  t10451 = t10446 + t10450;
  t10459 = t9210*t10424;
  t10474 = -1.*t864*t4933*t10473;
  t10490 = t723*t4933*t10485;
  t10491 = t10113 + t10474 + t10490;
  t10496 = t8918*t10491;
  t10497 = t8918*t10473;
  t10501 = t9889*t10485;
  t10504 = t10130 + t10132 + t10497 + t10501 + t10502 + t10503;
  t10505 = t864*t4933*t10504;
  t10508 = t10459 + t10496 + t10505;
  t10511 = t9107*t10440;
  t10521 = t864*t4933*t10473;
  t10523 = -1.*t723*t4933*t10485;
  t10525 = t10145 + t10521 + t10523;
  t10526 = t9210*t10525;
  t10528 = -1.*t9107*t10413;
  t10533 = -1.*t9903*t10421;
  t10540 = -1.*t10473*t9210;
  t10547 = -1.*t10485*t9921;
  t10553 = t10155 + t10159 + t10528 + t10533 + t10540 + t10547;
  t10555 = t864*t4933*t10553;
  t10556 = t10511 + t10526 + t10555;
  t10561 = -1.*t8918*t10413;
  t10563 = -1.*t9889*t10421;
  t10569 = t10170 + t10561 + t10563;
  t10571 = t9107*t10569;
  t10580 = -1.*t8918*t10473;
  t10586 = -1.*t9889*t10485;
  t10587 = t10176 + t10092 + t10580 + t10586 + t10447 + t10448;
  t10590 = t9210*t10587;
  t10595 = t10132 + t10502 + t10503;
  t10597 = t9210*t10595;
  t10599 = t9107*t10413;
  t10607 = t9903*t10421;
  t10610 = t10473*t9210;
  t10616 = t10485*t9921;
  t10617 = t10194 + t10199 + t10599 + t10607 + t10610 + t10616;
  t10620 = t8918*t10617;
  t10626 = t10571 + t10590 + t10597 + t10620;
  t10644 = t1481*t10643;
  t10648 = t10246 + t10646 + t10647;
  t10650 = t864*t4933*t10648;
  t10651 = t10644 + t10650;
  t10667 = t9420*t10666;
  t10668 = t10634*t9420;
  t10671 = t10639*t9966;
  t10672 = t10269 + t10668 + t10671;
  t10676 = t864*t4933*t10672;
  t10681 = t10667 + t10676;
  t10685 = t1481*t10666;
  t10696 = -1.*t864*t4933*t10695;
  t10701 = t723*t4933*t10700;
  t10702 = t10297 + t10696 + t10701;
  t10708 = t9420*t10702;
  t10730 = t10695*t9420;
  t10732 = t10700*t9966;
  t10734 = t10303 + t10307 + t10712 + t10718 + t10730 + t10732;
  t10735 = t864*t4933*t10734;
  t10740 = t10685 + t10708 + t10735;
  t10742 = t1868*t10643;
  t10744 = t864*t4933*t10695;
  t10747 = -1.*t723*t4933*t10700;
  t10749 = t10322 + t10744 + t10747;
  t10753 = t1481*t10749;
  t10756 = -1.*t10695*t1481;
  t10763 = -1.*t10700*t9950;
  t10765 = -1.*t10634*t1868;
  t10770 = -1.*t10639*t9988;
  t10773 = t10331 + t10340 + t10756 + t10763 + t10765 + t10770;
  t10776 = t864*t4933*t10773;
  t10779 = t10742 + t10753 + t10776;
  t10783 = t10303 + t10712 + t10718;
  t10785 = t1481*t10783;
  t10788 = -1.*t10634*t9420;
  t10790 = -1.*t10639*t9966;
  t10794 = t10353 + t10788 + t10790;
  t10795 = t1868*t10794;
  t10796 = -1.*t10695*t9420;
  t10797 = -1.*t10700*t9966;
  t10799 = t10246 + t10362 + t10646 + t10647 + t10796 + t10797;
  t10800 = t1481*t10799;
  t10801 = t10695*t1481;
  t10803 = t10700*t9950;
  t10804 = t10634*t1868;
  t10805 = t10639*t9988;
  t10812 = t10370 + t10375 + t10801 + t10803 + t10804 + t10805;
  t10813 = t9420*t10812;
  t10814 = t10785 + t10795 + t10800 + t10813;
  t11087 = t9877*t10061;
  t11089 = -1.*t9886*t723*t4933;
  t11090 = t11087 + t11089;
  t9895 = 1.527*t9210*t9893;
  t9911 = 1.527*t9210*t9907;
  t9930 = 1.527*t8918*t9929;
  t9933 = 1.527*t9107*t9929;
  t9955 = 0.241*t9420*t9954;
  t9956 = 0.241*t1868*t9954;
  t9970 = 0.241*t1481*t9969;
  t9995 = 0.241*t1481*t9992;
  t9997 = t9895 + t9911 + t9930 + t9933 + t9955 + t9956 + t9970 + t9995;
  t10973 = 1.527*t10005*t9929;
  t10983 = 1.527*t10010*t9929;
  t10984 = 1.527*t9893*t10019;
  t10985 = 1.527*t9907*t10019;
  t10988 = 0.241*t10034*t9969;
  t10992 = 0.241*t9954*t10039;
  t10994 = 0.241*t10034*t9992;
  t10998 = 0.241*t9954*t10045;
  t10999 = t10973 + t10983 + t10984 + t10985 + t10988 + t10992 + t10994 + t10998;
  t11274 = t9210*t10569;
  t11275 = t8918*t10595;
  t11281 = t11274 + t11275;
  t11297 = t9420*t10783;
  t11299 = t1481*t10794;
  t11300 = t11297 + t11299;
  t10436 = 1.527*t9107*t10435;
  t10452 = 1.527*t9210*t10451;
  t10510 = 1.527*t9210*t10508;
  t10560 = 1.527*t8918*t10556;
  t10627 = 1.527*t864*t4933*t10626;
  t10655 = 0.241*t1481*t10651;
  t10682 = 0.241*t1868*t10681;
  t10741 = 0.241*t1481*t10740;
  t10782 = 0.241*t9420*t10779;
  t10815 = 0.241*t864*t4933*t10814;
  t10821 = t10436 + t10452 + t10510 + t10560 + t10627 + t10655 + t10682 + t10741 + t10782 + t10815;
  t11218 = 1.527*t9907*t10435;
  t11219 = 1.527*t9929*t10451;
  t11221 = 1.527*t9929*t10508;
  t11222 = 1.527*t9893*t10556;
  t11225 = 1.527*t11090*t10626;
  t11227 = 0.241*t9954*t10651;
  t11229 = 0.241*t9992*t10681;
  t11231 = 0.241*t9954*t10740;
  t11232 = 0.241*t9969*t10779;
  t11237 = 0.241*t11090*t10814;
  t11238 = t11218 + t11219 + t11221 + t11222 + t11225 + t11227 + t11229 + t11231 + t11232 + t11237;
  t11051 = 1.527*t10010*t10435;
  t11052 = 1.527*t10019*t10451;
  t11057 = 1.527*t10019*t10508;
  t11058 = 1.527*t10005*t10556;
  t11060 = 1.527*t10857*t10626;
  t11061 = 0.241*t10034*t10651;
  t11062 = 0.241*t10045*t10681;
  t11063 = 0.241*t10034*t10740;
  t11067 = 0.241*t10039*t10779;
  t11068 = 0.241*t10857*t10814;
  t11069 = t11051 + t11052 + t11057 + t11058 + t11060 + t11061 + t11062 + t11063 + t11067 + t11068;
  t11368 = t9916*t10171;
  t11372 = t9883*t10187;
  t11374 = t11368 + t11372;
  t11288 = t494*t3470;
  t11290 = t346*t3620;
  t11292 = t11288 + t11290;
  t11385 = t9959*t10347;
  t11386 = t9939*t10357;
  t11387 = t11385 + t11386;
  t11308 = t702*t7259;
  t11309 = t6559*t8394;
  t11311 = t11308 + t11309;
  t11329 = t346*t9693;
  t11330 = t494*t9714;
  t11332 = t11329 + t11330;
  t11342 = t702*t9759;
  t11343 = t6559*t9775;
  t11344 = t11342 + t11343;
  t10083 = 1.527*t9107*t10082;
  t10097 = 1.527*t9210*t10096;
  t10139 = 1.527*t9210*t10136;
  t10167 = 1.527*t8918*t10166;
  t10224 = 1.527*t864*t4933*t10223;
  t10253 = 0.241*t1481*t10252;
  t10286 = 0.241*t1868*t10285;
  t10317 = 0.241*t1481*t10315;
  t10344 = 0.241*t9420*t10343;
  t10386 = 0.241*t864*t4933*t10381;
  t10388 = t10083 + t10097 + t10139 + t10167 + t10224 + t10253 + t10286 + t10317 + t10344 + t10386;
  t11198 = 1.527*t9907*t10082;
  t11199 = 1.527*t9929*t10096;
  t11201 = 1.527*t9929*t10136;
  t11203 = 1.527*t9893*t10166;
  t11204 = 1.527*t11090*t10223;
  t11207 = 0.241*t9954*t10252;
  t11210 = 0.241*t9954*t10315;
  t11211 = 0.241*t10285*t9992;
  t11212 = 0.241*t9969*t10343;
  t11213 = 0.241*t11090*t10381;
  t11214 = t11198 + t11199 + t11201 + t11203 + t11204 + t11207 + t11210 + t11211 + t11212 + t11213;
  t11030 = 1.527*t10010*t10082;
  t11031 = 1.527*t10019*t10096;
  t11033 = 1.527*t10019*t10136;
  t11035 = 1.527*t10005*t10166;
  t11039 = 1.527*t10857*t10223;
  t11040 = 0.241*t10034*t10252;
  t11042 = 0.241*t10034*t10315;
  t11043 = 0.241*t10285*t10045;
  t11044 = 0.241*t10039*t10343;
  t11045 = 0.241*t10857*t10381;
  t11046 = t11030 + t11031 + t11033 + t11035 + t11039 + t11040 + t11042 + t11043 + t11044 + t11045;
  t11360 = 1.527*t10136*t10435;
  t11361 = 1.527*t10166*t10451;
  t11363 = 1.527*t10223*t11281;
  t11364 = 1.527*t10082*t10508;
  t11365 = 1.527*t10096*t10556;
  t11375 = 1.527*t11374*t10626;
  t11376 = 0.241*t10343*t10651;
  t11377 = 0.241*t10381*t11300;
  t11380 = 0.241*t10315*t10681;
  t11382 = 0.241*t10285*t10740;
  t11384 = 0.241*t10252*t10779;
  t11388 = 0.241*t11387*t10814;
  t11390 = t11360 + t11361 + t11363 + t11364 + t11365 + t11375 + t11376 + t11377 + t11380 + t11382 + t11384 + t11388;
  t5093 = 1.527*t864*t4801*t4933;
  t8816 = 0.241*t864*t8804*t4933;
  t8919 = -1.527*t8908*t494*t8918;
  t9131 = 1.527*t9021*t494*t9107;
  t9214 = 1.527*t346*t9021*t9210;
  t9215 = 1.527*t346*t8908*t9210;
  t9231 = 0.241*t9230*t702*t1481;
  t9374 = 0.241*t9316*t702*t1481;
  t9437 = 0.241*t9316*t1132*t9420;
  t9499 = 0.241*t9230*t6559*t1868;
  t9502 = t5093 + t8816 + t8919 + t9131 + t9214 + t9215 + t9231 + t9374 + t9437 + t9499;
  t11092 = 1.527*t4801*t11090;
  t11094 = 0.241*t8804*t11090;
  t11096 = -1.527*t8908*t494*t9893;
  t11101 = 1.527*t9021*t494*t9907;
  t11102 = 1.527*t346*t9021*t9929;
  t11103 = 1.527*t346*t8908*t9929;
  t11106 = 0.241*t9230*t702*t9954;
  t11110 = 0.241*t9316*t702*t9954;
  t11115 = 0.241*t9316*t1132*t9969;
  t11117 = 0.241*t9230*t6559*t9992;
  t11122 = t11092 + t11094 + t11096 + t11101 + t11102 + t11103 + t11106 + t11110 + t11115 + t11117;
  t10859 = 1.527*t4801*t10857;
  t10863 = 0.241*t8804*t10857;
  t10869 = -1.527*t8908*t494*t10005;
  t10874 = 1.527*t9021*t494*t10010;
  t10877 = 1.527*t346*t9021*t10019;
  t10879 = 1.527*t346*t8908*t10019;
  t10900 = 0.241*t9230*t702*t10034;
  t10902 = 0.241*t9316*t702*t10034;
  t10903 = 0.241*t9316*t1132*t10039;
  t10904 = 0.241*t9230*t6559*t10045;
  t10910 = t10859 + t10863 + t10869 + t10874 + t10877 + t10879 + t10900 + t10902 + t10903 + t10904;
  t11436 = 1.527*t346*t9021*t10082;
  t11438 = -1.527*t8908*t494*t10096;
  t11439 = 1.527*t4801*t11374;
  t11440 = 1.527*t9021*t494*t10136;
  t11444 = 1.527*t346*t8908*t10166;
  t11445 = 1.527*t11292*t10223;
  t11447 = 0.241*t9316*t1132*t10252;
  t11449 = 0.241*t8804*t11387;
  t11450 = 0.241*t9230*t702*t10285;
  t11451 = 0.241*t9230*t6559*t10315;
  t11457 = 0.241*t9316*t702*t10343;
  t11458 = 0.241*t11311*t10381;
  t11460 = t11436 + t11438 + t11439 + t11440 + t11444 + t11445 + t11447 + t11449 + t11450 + t11451 + t11457 + t11458;
  t11265 = 1.527*t346*t9021*t10435;
  t11268 = -1.527*t8908*t494*t10451;
  t11282 = 1.527*t4801*t11281;
  t11284 = 1.527*t9021*t494*t10508;
  t11286 = 1.527*t346*t8908*t10556;
  t11295 = 1.527*t11292*t10626;
  t11296 = 0.241*t9316*t1132*t10651;
  t11301 = 0.241*t8804*t11300;
  t11302 = 0.241*t9230*t702*t10681;
  t11304 = 0.241*t9230*t6559*t10740;
  t11306 = 0.241*t9316*t702*t10779;
  t11312 = 0.241*t11311*t10814;
  t11313 = t11265 + t11268 + t11282 + t11284 + t11286 + t11295 + t11296 + t11301 + t11302 + t11304 + t11306 + t11312;
  t11625 = -0.17058117*t346*t9021*t494;
  t11626 = -0.17058117*t346*t8908*t494;
  t11627 = 1.527*t11292*t9756;
  t11629 = 1.527*t11332*t4801;
  t11630 = 0.01694953*t9316*t1132*t702;
  t11633 = 0.241*t9230*t702*t9828;
  t11634 = 0.241*t9230*t6559*t9813;
  t11639 = 0.241*t11344*t8804;
  t11640 = 0.241*t11311*t9789;
  t11642 = t11625 + t11626 + t11627 + t11629 + t11630 + t11633 + t11634 + t11639 + t11640;
  t9757 = 1.527*t864*t9756*t4933;
  t9800 = 0.241*t864*t9789*t4933;
  t9801 = -0.085290585*t494*t8918;
  t9803 = -0.085290585*t494*t9107;
  t9809 = 0.008474765*t702*t1481;
  t9814 = 0.241*t9813*t1481;
  t9820 = 0.008474765*t1132*t9420;
  t9854 = 0.241*t9828*t1868;
  t9856 = t9757 + t9800 + t9801 + t9803 + t9809 + t9814 + t9820 + t9854;
  t11150 = 1.527*t9756*t11090;
  t11159 = 0.241*t9789*t11090;
  t11166 = -0.085290585*t494*t9893;
  t11167 = -0.085290585*t494*t9907;
  t11169 = 0.008474765*t702*t9954;
  t11178 = 0.241*t9813*t9954;
  t11180 = 0.008474765*t1132*t9969;
  t11182 = 0.241*t9828*t9992;
  t11183 = t11150 + t11159 + t11166 + t11167 + t11169 + t11178 + t11180 + t11182;
  t10947 = 1.527*t9756*t10857;
  t10955 = 0.241*t9789*t10857;
  t10957 = -0.085290585*t494*t10005;
  t10959 = -0.085290585*t494*t10010;
  t10960 = 0.008474765*t702*t10034;
  t10962 = 0.241*t9813*t10034;
  t10963 = 0.008474765*t1132*t10039;
  t10964 = 0.241*t9828*t10045;
  t10966 = t10947 + t10955 + t10957 + t10959 + t10960 + t10962 + t10963 + t10964;
  t11462 = -0.085290585*t346*t10082;
  t11469 = -0.085290585*t494*t10096;
  t11470 = 1.527*t9756*t11374;
  t11471 = -0.085290585*t494*t10136;
  t11474 = 0.085290585*t346*t10166;
  t11476 = 1.527*t11332*t10223;
  t11477 = 0.008474765*t1132*t10252;
  t11479 = 0.241*t9789*t11387;
  t11481 = 0.241*t9813*t10285;
  t11482 = 0.241*t9828*t10315;
  t11483 = 0.008474765*t702*t10343;
  t11490 = 0.241*t11344*t10381;
  t11491 = t11462 + t11469 + t11470 + t11471 + t11474 + t11476 + t11477 + t11479 + t11481 + t11482 + t11483 + t11490;
  t11315 = -0.085290585*t346*t10435;
  t11322 = -0.085290585*t494*t10451;
  t11324 = 1.527*t9756*t11281;
  t11325 = -0.085290585*t494*t10508;
  t11327 = 0.085290585*t346*t10556;
  t11333 = 1.527*t11332*t10626;
  t11336 = 0.008474765*t1132*t10651;
  t11337 = 0.241*t9789*t11300;
  t11338 = 0.241*t9813*t10681;
  t11340 = 0.241*t9828*t10740;
  t11341 = 0.008474765*t702*t10779;
  t11346 = 0.241*t11344*t10814;
  t11348 = t11315 + t11322 + t11324 + t11325 + t11327 + t11333 + t11336 + t11337 + t11338 + t11340 + t11341 + t11346;
  t11561 = -0.06108*t346*t9021;
  t11562 = -0.06108*t8908*t494;
  t11564 = 0.241*t9230*t702*t9623;
  t11566 = 0.241*t9316*t1132*t9613;
  t11567 = t11561 + t11562 + t11564 + t11566;
  t11670 = 0.0034116234*t346;
  t11677 = -0.0034116234*t494;
  t11678 = 0.008474765*t1132*t9613;
  t11679 = 0.241*t9623*t9813;
  t11685 = t11670 + t11677 + t11678 + t11679;
  t9512 = -0.06108*t9107;
  t9514 = 0.06108*t9210;
  t9615 = 0.241*t9613*t1481;
  t9631 = 0.241*t9623*t1868;
  t9634 = t9512 + t9514 + t9615 + t9631;
  t11127 = -0.06108*t9907;
  t11133 = 0.06108*t9929;
  t11134 = 0.241*t9613*t9954;
  t11136 = 0.241*t9623*t9992;
  t11142 = t11127 + t11133 + t11134 + t11136;
  t10914 = -0.06108*t10010;
  t10919 = 0.06108*t10019;
  t10920 = 0.241*t9613*t10034;
  t10925 = 0.241*t9623*t10045;
  t10939 = t10914 + t10919 + t10920 + t10925;
  t11425 = -0.06108*t10136;
  t11428 = 0.06108*t10166;
  t11429 = 0.241*t9623*t10315;
  t11431 = 0.241*t9613*t10343;
  t11432 = t11425 + t11428 + t11429 + t11431;
  t11252 = -0.06108*t10508;
  t11256 = 0.06108*t10556;
  t11257 = 0.241*t9623*t10740;
  t11260 = 0.241*t9613*t10779;
  t11263 = t11252 + t11256 + t11257 + t11260;
  t11541 = 0.00482*t9316*t1132;
  t11544 = -0.03856*t9230*t702;
  t11550 = t11541 + t11544;
  t11660 = 0.0001694953*t1132;
  t11663 = -0.03856*t9813;
  t11668 = t11660 + t11663;
  t1508 = 0.00482*t1481;
  t2060 = -0.03856*t1868;
  t2107 = t1508 + t2060;
  t11079 = 0.00482*t9954;
  t11080 = -0.03856*t9992;
  t11081 = t11079 + t11080;
  t10834 = 0.00482*t10034;
  t10841 = -0.03856*t10045;
  t10847 = t10834 + t10841;
  t11419 = -0.03856*t10315;
  t11421 = 0.00482*t10343;
  t11423 = t11419 + t11421;
  t11243 = -0.03856*t10740;
  t11244 = 0.00482*t10779;
  t11246 = t11243 + t11244;
  p_output1[0]=var2[10]*(-0.5*(0.482*t1481*t1868 + 3.054*t8918*t9210 + 3.054*t9107*t9210 + 0.482*t1481*t9420)*var2[0] - 0.5*t10047*var2[1] - 0.5*t9997*var2[2] - 0.5*t10821*var2[3] - 0.5*t10388*var2[4] - 0.5*t9502*var2[5] - 0.5*t9856*var2[9] - 0.5*t9634*var2[10] - 0.5*t2107*var2[11]);
  p_output1[1]=var2[10]*(-0.5*t10047*var2[0] - 0.5*(3.054*t10005*t10019 + 3.054*t10010*t10019 + 0.482*t10034*t10039 + 0.482*t10034*t10045)*var2[1] - 0.5*t10999*var2[2] - 0.5*t11069*var2[3] - 0.5*t11046*var2[4] - 0.5*t10910*var2[5] - 0.5*t10966*var2[9] - 0.5*t10939*var2[10] - 0.5*t10847*var2[11]);
  p_output1[2]=var2[10]*(-0.5*t9997*var2[0] - 0.5*t10999*var2[1] - 0.5*(3.054*t9893*t9929 + 3.054*t9907*t9929 + 0.482*t9954*t9969 + 0.482*t9954*t9992)*var2[2] - 0.5*t11238*var2[3] - 0.5*t11214*var2[4] - 0.5*t11122*var2[5] - 0.5*t11183*var2[9] - 0.5*t11142*var2[10] - 0.5*t11081*var2[11]);
  p_output1[3]=var2[10]*(-0.5*t10821*var2[0] - 0.5*t11069*var2[1] - 0.5*t11238*var2[2] - 0.5*(3.054*t10435*t10508 + 3.054*t10451*t10556 + 0.482*t10681*t10740 + 0.482*t10651*t10779 + 3.054*t10626*t11281 + 0.482*t10814*t11300)*var2[3] - 0.5*t11390*var2[4] - 0.5*t11313*var2[5] - 0.5*t11348*var2[9] - 0.5*t11263*var2[10] - 0.5*t11246*var2[11]);
  p_output1[4]=var2[10]*(-0.5*t10388*var2[0] - 0.5*t11046*var2[1] - 0.5*t11214*var2[2] - 0.5*t11390*var2[3] - 0.5*(3.054*t10082*t10136 + 3.054*t10096*t10166 + 0.482*t10285*t10315 + 0.482*t10252*t10343 + 3.054*t10223*t11374 + 0.482*t10381*t11387)*var2[4] - 0.5*t11460*var2[5] - 0.5*t11491*var2[9] - 0.5*t11432*var2[10] - 0.5*t11423*var2[11]);
  p_output1[5]=var2[10]*(-0.5*t9502*var2[0] - 0.5*t10910*var2[1] - 0.5*t11122*var2[2] - 0.5*t11313*var2[3] - 0.5*t11460*var2[4] - 0.5*(3.054*t11292*t4801 + 0.482*t11311*t8804 - 3.054*t346*t494*Power(t8908,2) + 3.054*t346*t494*Power(t9021,2) + 0.482*t6559*t702*Power(t9230,2) + 0.482*t1132*t702*Power(t9316,2))*var2[5] - 0.5*t11642*var2[9] - 0.5*t11567*var2[10] - 0.5*t11550*var2[11]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=var2[10]*(-0.5*t9856*var2[0] - 0.5*t10966*var2[1] - 0.5*t11183*var2[2] - 0.5*t11348*var2[3] - 0.5*t11491*var2[4] - 0.5*t11642*var2[5] - 0.5*(0.00059603022245*t1132*t702 + 3.054*t11332*t9756 + 0.482*t11344*t9789 + 0.482*t9813*t9828)*var2[9] - 0.5*t11685*var2[10] - 0.5*t11668*var2[11]);
  p_output1[10]=(-0.5*t9634*var2[0] - 0.5*t10939*var2[1] - 0.5*t11142*var2[2] - 0.5*t11263*var2[3] - 0.5*t11432*var2[4] - 0.5*t11567*var2[5] - 0.5*t11685*var2[9])*var2[10];
  p_output1[11]=(-0.5*t2107*var2[0] - 0.5*t10847*var2[1] - 0.5*t11081*var2[2] - 0.5*t11246*var2[3] - 0.5*t11423*var2[4] - 0.5*t11550*var2[5] - 0.5*t11668*var2[9])*var2[10];
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec11_plane.hh"

namespace SymFunction
{

void Ce2_vec11_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
