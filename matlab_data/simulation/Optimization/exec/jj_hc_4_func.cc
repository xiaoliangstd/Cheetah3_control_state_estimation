/*
 * Automatically Generated from Mathematica.
 * Mon 29 Jul 2019 15:09:09 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t46;
  double t50;
  double t25;
  double t126;
  double t132;
  double t165;
  double t135;
  double t162;
  double t176;
  double t177;
  double t272;
  double t302;
  double t305;
  double t328;
  double t335;
  double t315;
  double t56;
  double t426;
  double t444;
  double t448;
  double t449;
  double t369;
  double t370;
  double t319;
  double t471;
  double t548;
  double t560;
  double t564;
  double t586;
  double t541;
  double t593;
  double t600;
  double t621;
  double t622;
  double t634;
  double t726;
  double t732;
  double t734;
  double t840;
  double t849;
  double t857;
  double t839;
  double t858;
  double t859;
  double t865;
  double t870;
  double t872;
  double t983;
  double t824;
  double t1007;
  double t1037;
  double t1045;
  double t1004;
  double t1048;
  double t1051;
  double t1061;
  double t1066;
  double t1067;
  double t463;
  double t466;
  double t478;
  double t484;
  double t494;
  double t496;
  double t498;
  double t502;
  double t511;
  double t522;
  double t523;
  double t525;
  double t529;
  double t530;
  double t1169;
  double t1174;
  double t1180;
  double t1290;
  double t1300;
  double t1301;
  double t1308;
  double t1313;
  double t1315;
  double t1391;
  double t1405;
  double t1408;
  double t1717;
  double t1741;
  double t1746;
  double t1771;
  double t1778;
  double t1786;
  double t116;
  double t129;
  double t259;
  double t313;
  double t326;
  double t340;
  double t342;
  double t351;
  double t368;
  double t373;
  double t375;
  double t378;
  double t384;
  double t1181;
  double t1188;
  double t1197;
  double t1200;
  double t1216;
  double t1225;
  double t1229;
  double t1246;
  double t1247;
  double t1249;
  double t1256;
  double t1268;
  double t1919;
  double t1920;
  double t1923;
  double t1930;
  double t1933;
  double t1941;
  double t1958;
  double t1964;
  double t1973;
  double t1991;
  double t1999;
  double t2007;
  double t2041;
  double t2046;
  double t2055;
  double t2058;
  double t2060;
  double t2061;
  double t2116;
  double t2117;
  double t2119;
  double t2188;
  double t2193;
  double t2222;
  double t2235;
  double t2236;
  double t2241;
  double t2246;
  double t2256;
  double t2269;
  double t2286;
  double t2288;
  double t2289;
  double t611;
  double t637;
  double t638;
  double t647;
  double t654;
  double t669;
  double t670;
  double t671;
  double t682;
  double t693;
  double t708;
  double t1566;
  double t1595;
  double t1599;
  double t1612;
  double t1614;
  double t1633;
  double t1648;
  double t1656;
  double t1675;
  double t1676;
  double t1688;
  double t2056;
  double t2062;
  double t2063;
  double t2064;
  double t2065;
  double t2083;
  double t2084;
  double t2089;
  double t2092;
  double t2093;
  double t2094;
  double t2368;
  double t2381;
  double t2384;
  double t2390;
  double t2376;
  double t2396;
  double t2402;
  double t2420;
  double t2422;
  double t2424;
  double t2482;
  double t2490;
  double t2493;
  double t1752;
  double t2577;
  double t2581;
  double t2575;
  double t2582;
  double t2588;
  double t2597;
  double t2602;
  double t2624;
  double t984;
  double t988;
  double t995;
  double t996;
  double t1000;
  double t1001;
  double t1060;
  double t1077;
  double t1091;
  double t1104;
  double t1106;
  double t1109;
  double t1123;
  double t1129;
  double t1130;
  double t1131;
  double t1142;
  double t1704;
  double t1758;
  double t1769;
  double t1797;
  double t1801;
  double t1802;
  double t1815;
  double t1842;
  double t1848;
  double t1849;
  double t1854;
  double t1855;
  double t1861;
  double t1892;
  double t2234;
  double t2243;
  double t2282;
  double t2290;
  double t2292;
  double t2300;
  double t2301;
  double t2309;
  double t2310;
  double t2315;
  double t2319;
  double t2320;
  double t2321;
  double t817;
  double t1957;
  double t825;
  double t2712;
  double t2713;
  double t2716;
  double t2719;
  double t2728;
  double t2729;
  double t2595;
  double t2629;
  double t2645;
  double t2646;
  double t2649;
  double t2650;
  double t2655;
  double t2656;
  double t2657;
  double t2661;
  double t2670;
  double t2800;
  double t2802;
  double t2804;
  double t756;
  double t767;
  double t774;
  double t782;
  double t785;
  double t789;
  double t797;
  double t798;
  double t805;
  double t1524;
  double t1532;
  double t1533;
  double t1537;
  double t1544;
  double t1546;
  double t1551;
  double t1557;
  double t1563;
  double t2120;
  double t2124;
  double t2125;
  double t2126;
  double t2128;
  double t2136;
  double t2149;
  double t2161;
  double t2177;
  double t2408;
  double t2432;
  double t2434;
  double t2440;
  double t2443;
  double t2444;
  double t2445;
  double t2448;
  double t2456;
  double t2924;
  double t2926;
  double t2927;
  double t2929;
  double t2816;
  double t2820;
  double t2821;
  double t2827;
  double t2831;
  double t2838;
  double t2843;
  double t2846;
  double t2857;
  double t3006;
  double t3019;
  double t3020;
  double t3027;
  double t3029;
  double t3035;
  double t3067;
  double t3069;
  double t3075;
  double t3196;
  double t3199;
  double t3201;
  double t3204;
  double t3206;
  double t3209;
  double t3290;
  double t3294;
  double t3309;
  double t3369;
  double t3376;
  double t3401;
  double t3404;
  double t3497;
  double t3498;
  double t3080;
  double t3086;
  double t3089;
  double t3093;
  double t3094;
  double t3109;
  double t3128;
  double t3130;
  double t3142;
  double t3143;
  double t3144;
  double t3145;
  double t3694;
  double t3716;
  double t3733;
  double t3736;
  double t3737;
  double t2988;
  double t3002;
  double t3021;
  double t3036;
  double t3038;
  double t3039;
  double t3042;
  double t3043;
  double t3046;
  double t3049;
  double t3050;
  double t3059;
  double t3061;
  double t3503;
  double t3505;
  double t3514;
  double t3520;
  double t3530;
  double t3543;
  double t3545;
  double t3547;
  double t3548;
  double t3557;
  double t3566;
  double t3567;
  double t3574;
  double t3579;
  double t3581;
  double t3965;
  double t3970;
  double t3971;
  double t3978;
  double t3986;
  double t3991;
  double t3992;
  double t4040;
  double t4041;
  double t4044;
  double t4083;
  double t4084;
  double t4082;
  double t4085;
  double t4086;
  double t4088;
  double t4096;
  double t4098;
  double t3871;
  double t3873;
  double t3878;
  double t3882;
  double t3886;
  double t3889;
  double t3891;
  double t3897;
  double t3910;
  double t3912;
  double t3915;
  double t3919;
  double t3924;
  double t3934;
  double t3937;
  double t3943;
  double t3597;
  double t3609;
  double t3610;
  double t3616;
  double t3619;
  double t3627;
  double t3633;
  double t3637;
  double t3667;
  double t3668;
  double t3669;
  double t3687;
  double t3692;
  double t3150;
  double t3155;
  double t3159;
  double t3168;
  double t3170;
  double t3179;
  double t3182;
  double t3183;
  double t3185;
  double t3188;
  double t3189;
  double t3190;
  double t4155;
  double t4154;
  double t4156;
  double t4157;
  double t4160;
  double t4161;
  double t4162;
  double t4205;
  double t4210;
  double t4211;
  double t4072;
  double t3359;
  double t4077;
  double t4046;
  double t4047;
  double t4049;
  double t4052;
  double t4056;
  double t4059;
  double t4062;
  double t4065;
  double t4066;
  double t3274;
  double t3313;
  double t3330;
  double t3337;
  double t3340;
  double t3347;
  double t3353;
  double t3354;
  double t3356;
  double t3786;
  double t3788;
  double t3789;
  double t3798;
  double t3800;
  double t3804;
  double t3805;
  double t3807;
  double t3808;
  double t4212;
  double t4216;
  double t4217;
  double t4218;
  double t4221;
  double t4224;
  double t4225;
  double t4227;
  double t4228;
  double t4271;
  double t4275;
  double t4276;
  double t4279;
  double t4274;
  double t4280;
  double t4283;
  double t4287;
  double t4290;
  double t4295;
  double t4322;
  double t4323;
  double t4332;
  double t4335;
  double t3984;
  double t4003;
  double t4006;
  double t4013;
  double t4015;
  double t4018;
  double t4019;
  double t4027;
  double t4032;
  double t4033;
  double t4038;
  double t3203;
  double t3214;
  double t3222;
  double t3229;
  double t3233;
  double t3238;
  double t3239;
  double t3246;
  double t3260;
  double t3270;
  double t3271;
  double t3813;
  double t3818;
  double t3824;
  double t3831;
  double t3833;
  double t3839;
  double t3841;
  double t3849;
  double t3851;
  double t3855;
  double t3859;
  double t4159;
  double t4163;
  double t4164;
  double t4165;
  double t4167;
  double t4168;
  double t4170;
  double t4173;
  double t4178;
  double t4179;
  double t4181;
  double t4286;
  double t4296;
  double t4303;
  double t4306;
  double t4308;
  double t4309;
  double t4310;
  double t4311;
  double t4312;
  double t4380;
  double t4381;
  double t4384;
  double t4462;
  double t4463;
  double t4464;
  double t4513;
  double t4518;
  double t4524;
  double t4565;
  double t4566;
  double t4569;
  double t4431;
  double t4433;
  double t4434;
  double t4437;
  double t4438;
  double t4447;
  double t4448;
  double t4450;
  double t4451;
  double t4454;
  double t4456;
  double t4457;
  double t4626;
  double t4630;
  double t4633;
  double t4646;
  double t4649;
  double t4656;
  double t4715;
  double t4716;
  double t4718;
  double t4820;
  double t4821;
  double t4829;
  double t4835;
  double t4837;
  double t4838;
  double t4873;
  double t4875;
  double t4877;
  double t4884;
  double t4885;
  double t4886;
  double t4711;
  double t4726;
  double t4728;
  double t4735;
  double t4772;
  double t4773;
  double t4782;
  double t4783;
  double t4789;
  double t4795;
  double t4796;
  double t4490;
  double t4494;
  double t4497;
  double t4498;
  double t4501;
  double t4502;
  double t4503;
  double t4504;
  double t4505;
  double t4506;
  double t4508;
  double t4972;
  double t4974;
  double t4994;
  double t4996;
  double t4999;
  double t4993;
  double t5000;
  double t5004;
  double t5024;
  double t5035;
  double t5038;
  double t5086;
  double t5089;
  double t5090;
  double t4558;
  double t5146;
  double t5151;
  double t5144;
  double t5155;
  double t5160;
  double t5172;
  double t5174;
  double t5176;
  double t4557;
  double t4560;
  double t4563;
  double t4570;
  double t4573;
  double t4576;
  double t4579;
  double t4602;
  double t4604;
  double t4606;
  double t4612;
  double t4613;
  double t4614;
  double t4615;
  double t4869;
  double t4872;
  double t4880;
  double t4890;
  double t4893;
  double t4905;
  double t4917;
  double t4928;
  double t4937;
  double t4952;
  double t4954;
  double t4956;
  double t4961;
  double t4808;
  double t5270;
  double t5271;
  double t5274;
  double t5280;
  double t5285;
  double t5286;
  double t5170;
  double t5183;
  double t5184;
  double t5190;
  double t5194;
  double t5198;
  double t5199;
  double t5204;
  double t5207;
  double t5209;
  double t5212;
  double t5323;
  double t5329;
  double t5332;
  double t4645;
  double t4660;
  double t4661;
  double t4671;
  double t4674;
  double t4686;
  double t4689;
  double t4690;
  double t4696;
  double t4465;
  double t4466;
  double t4468;
  double t4469;
  double t4471;
  double t4475;
  double t4476;
  double t4483;
  double t4486;
  double t5017;
  double t5039;
  double t5043;
  double t5046;
  double t5047;
  double t5050;
  double t5058;
  double t5066;
  double t5067;
  double t5383;
  double t5385;
  double t5391;
  double t5395;
  double t5335;
  double t5338;
  double t5341;
  double t5343;
  double t5344;
  double t5347;
  double t5348;
  double t5351;
  double t5352;
  double t5478;
  double t5479;
  double t5483;
  double t5512;
  double t5514;
  double t5515;
  double t5486;
  double t5489;
  double t5496;
  double t5498;
  double t5506;
  double t5507;
  double t5518;
  double t5520;
  double t5521;
  double t5525;
  double t5529;
  double t5530;
  double t5533;
  double t5535;
  double t5461;
  double t5464;
  double t5471;
  double t5574;
  double t5548;
  double t5554;
  double t5558;
  double t5407;
  double t5409;
  double t5410;
  double t5606;
  double t5613;
  double t5624;
  double t5561;
  double t5565;
  double t5568;
  double t5127;
  double t5673;
  double t5676;
  double t5689;
  double t5692;
  double t5698;
  double t4845;
  double t4846;
  double t4847;
  double t4840;
  double t4842;
  double t4843;
  double t5789;
  double t5791;
  double t5795;
  double t5797;
  double t5798;
  double t5833;
  double t5839;
  double t5841;
  double t5597;
  double t5600;
  double t5850;
  double t5852;
  double t4544;
  double t4546;
  double t4548;
  double t4533;
  double t4534;
  double t4537;
  double t6036;
  double t6037;
  double t6039;
  double t5741;
  double t5744;
  double t6045;
  double t6046;
  double t6054;
  double t5905;
  double t5908;
  double t5112;
  double t5116;
  double t5117;
  double t5131;
  double t5132;
  double t6162;
  double t6165;
  double t6166;
  double t5393;
  double t5401;
  double t5403;
  double t5640;
  double t5644;
  double t5940;
  double t5948;
  double t6093;
  double t6106;
  double t5802;
  double t5812;
  double t6310;
  double t6311;
  double t6313;
  double t6021;
  double t6022;
  double t6290;
  double t6291;
  double t6297;
  double t6147;
  double t6152;
  double t6263;
  double t6266;
  double t5298;
  double t5299;
  double t5301;
  double t5307;
  double t5308;
  double t5310;
  double t5248;
  double t6396;
  double t6406;
  double t6407;
  double t6410;
  double t6411;
  double t6413;
  double t6416;
  double t6418;
  double t6409;
  double t6426;
  double t6427;
  double t6488;
  double t6580;
  double t6581;
  double t6639;
  double t6432;
  double t6433;
  double t6434;
  double t6437;
  double t6438;
  double t6847;
  double t6849;
  double t6687;
  double t6688;
  double t6690;
  double t6692;
  double t6696;
  double t6500;
  double t6501;
  double t6502;
  double t6503;
  double t6510;
  double t7040;
  double t7042;
  double t6748;
  double t6753;
  double t6755;
  double t6759;
  double t6761;
  double t6539;
  double t6551;
  double t6552;
  double t6557;
  double t6559;
  double t7077;
  double t7079;
  double t6907;
  double t6909;
  double t6910;
  double t6911;
  double t6912;
  double t6914;
  double t6921;
  double t6926;
  double t7229;
  double t7231;
  double t7234;
  double t6584;
  double t6585;
  double t6587;
  double t6589;
  double t6593;
  double t6791;
  double t6799;
  double t6801;
  double t6805;
  double t6809;
  double t7254;
  double t7255;
  double t6990;
  double t6997;
  double t7000;
  double t7014;
  double t7015;
  double t7017;
  double t7020;
  double t7026;
  double t7158;
  double t7159;
  double t7166;
  double t7167;
  double t7168;
  double t7169;
  double t7173;
  double t7174;
  double t7180;
  double t7185;
  double t7195;
  double t7395;
  double t7397;
  double t7401;
  double t7413;
  double t7417;
  double t7420;
  double t7408;
  double t7409;
  double t7410;
  double t7412;
  double t7427;
  double t7428;
  double t7430;
  double t7431;
  double t7433;
  double t7440;
  double t7453;
  double t7447;
  double t7496;
  double t7503;
  double t4078;
  double t4080;
  double t827;
  double t829;
  double t4230;
  double t4231;
  double t7555;
  double t7590;
  double t7595;
  double t7597;
  double t7478;
  double t7488;
  double t7680;
  double t7687;
  double t7691;
  double t7510;
  double t7513;
  double t7628;
  double t7634;
  double t7763;
  double t7764;
  double t7765;
  double t7561;
  double t7566;
  double t7775;
  double t7650;
  double t7653;
  double t2706;
  double t2707;
  double t7754;
  double t7756;
  t46 = Cos(var1[4]);
  t50 = Cos(var1[5]);
  t25 = Cos(var1[3]);
  t126 = Sin(var1[3]);
  t132 = Cos(var1[15]);
  t165 = Cos(var1[16]);
  t135 = Sin(var1[16]);
  t162 = -1.*t132*t25*t46*t50*t135;
  t176 = -1.*t165*t46*t50*t126;
  t177 = t162 + t176;
  t272 = t132*t165*t25*t46*t50;
  t302 = -1.*t46*t50*t135*t126;
  t305 = t272 + t302;
  t328 = Cos(var1[17]);
  t335 = 0. + t328;
  t315 = Sin(var1[17]);
  t56 = Sin(var1[15]);
  t426 = -1.*t46*t50*t56*t126;
  t444 = Sin(var1[4]);
  t448 = t132*t50*t444;
  t449 = t426 + t448;
  t369 = -1.*t315;
  t370 = 0. + t369;
  t319 = 0. + t315;
  t471 = t132*t46*t50*t126;
  t548 = -1.*t56;
  t560 = 0. + t548;
  t564 = -1.*t50*t560*t444;
  t586 = t471 + t564;
  t541 = -1.*t25*t46*t50*t135;
  t593 = -1.*t165*t586;
  t600 = t541 + t593;
  t621 = t165*t25*t46*t50;
  t622 = -1.*t135*t586;
  t634 = t621 + t622;
  t726 = t25*t46*t50*t135;
  t732 = t165*t586;
  t734 = t726 + t732;
  t840 = -1.*t46*t50*t560;
  t849 = -1.*t132*t50*t126*t444;
  t857 = t840 + t849;
  t839 = -1.*t25*t50*t135*t444;
  t858 = t165*t857;
  t859 = t839 + t858;
  t865 = -1.*t165*t25*t50*t444;
  t870 = -1.*t135*t857;
  t872 = t865 + t870;
  t983 = Sin(var1[5]);
  t824 = 0. + t132;
  t1007 = -1.*t132*t46*t126*t983;
  t1037 = t560*t444*t983;
  t1045 = t1007 + t1037;
  t1004 = -1.*t25*t46*t135*t983;
  t1048 = t165*t1045;
  t1051 = t1004 + t1048;
  t1061 = -1.*t165*t25*t46*t983;
  t1066 = -1.*t135*t1045;
  t1067 = t1061 + t1066;
  t463 = -0.2083*t165*t449;
  t466 = 0.1422*t135*t449;
  t478 = t50*t56*t444;
  t484 = t471 + t478;
  t494 = 0.0329*t484;
  t496 = -1.*t335*t135*t449;
  t498 = t165*t370*t449;
  t502 = t496 + t498;
  t511 = -0.02*t502;
  t522 = t165*t335*t449;
  t523 = -1.*t135*t319*t449;
  t525 = t522 + t523;
  t529 = -0.16*t525;
  t530 = t463 + t466 + t494 + t511 + t529;
  t1169 = t25*t50*t444;
  t1174 = t126*t983;
  t1180 = t1169 + t1174;
  t1290 = t46*t50*t56;
  t1300 = t50*t126*t444;
  t1301 = -1.*t25*t983;
  t1308 = t1300 + t1301;
  t1313 = -1.*t132*t1308;
  t1315 = t1290 + t1313;
  t1391 = -1.*t132*t46*t50;
  t1405 = -1.*t56*t1308;
  t1408 = t1391 + t1405;
  t1717 = -1.*t25*t50;
  t1741 = -1.*t126*t444*t983;
  t1746 = t1717 + t1741;
  t1771 = t132*t46*t983;
  t1778 = -1.*t56*t1746;
  t1786 = t1771 + t1778;
  t116 = 0.0329*t25*t46*t50*t56;
  t129 = 0.1944*t46*t50*t126;
  t259 = -0.1422*t177;
  t313 = -0.2083*t305;
  t326 = t319*t177;
  t340 = t335*t305;
  t342 = t326 + t340;
  t351 = -0.16*t342;
  t368 = t335*t177;
  t373 = t370*t305;
  t375 = t368 + t373;
  t378 = -0.02*t375;
  t384 = t116 + t129 + t259 + t313 + t351 + t378;
  t1181 = 0.0329*t132*t1180;
  t1188 = 0.2083*t165*t56*t1180;
  t1197 = -0.1422*t56*t135*t1180;
  t1200 = t335*t56*t135*t1180;
  t1216 = -1.*t165*t56*t370*t1180;
  t1225 = t1200 + t1216;
  t1229 = -0.02*t1225;
  t1246 = -1.*t165*t335*t56*t1180;
  t1247 = t56*t135*t319*t1180;
  t1249 = t1246 + t1247;
  t1256 = -0.16*t1249;
  t1268 = t1181 + t1188 + t1197 + t1229 + t1256;
  t1919 = -1.*t50*t126*t444;
  t1920 = t25*t983;
  t1923 = t1919 + t1920;
  t1930 = -1.*t25*t50*t444;
  t1933 = -1.*t126*t983;
  t1941 = t1930 + t1933;
  t1958 = -1.*t132*t135*t1923;
  t1964 = t165*t1941;
  t1973 = t1958 + t1964;
  t1991 = t132*t165*t1923;
  t1999 = t135*t1941;
  t2007 = t1991 + t1999;
  t2041 = -1.*t135*t1923;
  t2046 = -1.*t132*t165*t1180;
  t2055 = t2041 + t2046;
  t2058 = t165*t1923;
  t2060 = -1.*t132*t135*t1180;
  t2061 = t2058 + t2060;
  t2116 = t135*t1923;
  t2117 = t132*t165*t1180;
  t2119 = t2116 + t2117;
  t2188 = t50*t126;
  t2193 = -1.*t25*t444*t983;
  t2222 = t2188 + t2193;
  t2235 = t25*t50;
  t2236 = t126*t444*t983;
  t2241 = t2235 + t2236;
  t2246 = -1.*t132*t135*t2222;
  t2256 = t165*t2241;
  t2269 = t2246 + t2256;
  t2286 = t132*t165*t2222;
  t2288 = t135*t2241;
  t2289 = t2286 + t2288;
  t611 = -0.1422*t600;
  t637 = -0.2083*t634;
  t638 = t319*t600;
  t647 = t335*t634;
  t654 = t638 + t647;
  t669 = -0.16*t654;
  t670 = t335*t600;
  t671 = t370*t634;
  t682 = t670 + t671;
  t693 = -0.02*t682;
  t708 = t611 + t637 + t669 + t693;
  t1566 = 0.1422*t165*t1408;
  t1595 = 0.2083*t135*t1408;
  t1599 = -1.*t165*t335*t1408;
  t1612 = -1.*t135*t370*t1408;
  t1614 = t1599 + t1612;
  t1633 = -0.02*t1614;
  t1648 = -1.*t335*t135*t1408;
  t1656 = -1.*t165*t319*t1408;
  t1675 = t1648 + t1656;
  t1676 = -0.16*t1675;
  t1688 = t1566 + t1595 + t1633 + t1676;
  t2056 = -0.1422*t2055;
  t2062 = -0.2083*t2061;
  t2063 = t319*t2055;
  t2064 = t335*t2061;
  t2065 = t2063 + t2064;
  t2083 = -0.16*t2065;
  t2084 = t335*t2055;
  t2089 = t370*t2061;
  t2092 = t2084 + t2089;
  t2093 = -0.02*t2092;
  t2094 = t2056 + t2062 + t2083 + t2093;
  t2368 = 0. + t1169 + t1174;
  t2381 = t46*t50*t560;
  t2384 = t132*t1308;
  t2390 = 0. + t2381 + t2384;
  t2376 = -1.*t135*t2368;
  t2396 = -1.*t165*t2390;
  t2402 = t2376 + t2396;
  t2420 = t165*t2368;
  t2422 = -1.*t135*t2390;
  t2424 = t2420 + t2422;
  t2482 = -1.*t165*t2368;
  t2490 = t135*t2390;
  t2493 = t2482 + t2490;
  t1752 = t132*t1746;
  t2577 = -1.*t46*t560*t983;
  t2581 = t2577 + t1752;
  t2575 = -1.*t135*t2222;
  t2582 = -1.*t165*t2581;
  t2588 = t2575 + t2582;
  t2597 = t165*t2222;
  t2602 = -1.*t135*t2581;
  t2624 = t2597 + t2602;
  t984 = 0.1944*t25*t46*t983;
  t988 = 0.0817*t444*t983;
  t995 = -1.*t46*t56*t126*t983;
  t996 = t824*t444*t983;
  t1000 = t995 + t996;
  t1001 = 0.0329*t1000;
  t1060 = -0.2083*t1051;
  t1077 = -0.1422*t1067;
  t1091 = t370*t1051;
  t1104 = t335*t1067;
  t1106 = t1091 + t1104;
  t1109 = -0.02*t1106;
  t1123 = t335*t1051;
  t1129 = t319*t1067;
  t1130 = t1123 + t1129;
  t1131 = -0.16*t1130;
  t1142 = t984 + t988 + t1001 + t1060 + t1077 + t1109 + t1131;
  t1704 = t46*t56*t983;
  t1758 = t1704 + t1752;
  t1769 = 0.0329*t1758;
  t1797 = -0.2083*t165*t1786;
  t1801 = 0.1422*t135*t1786;
  t1802 = -1.*t335*t135*t1786;
  t1815 = t165*t370*t1786;
  t1842 = t1802 + t1815;
  t1848 = -0.02*t1842;
  t1849 = t165*t335*t1786;
  t1854 = -1.*t135*t319*t1786;
  t1855 = t1849 + t1854;
  t1861 = -0.16*t1855;
  t1892 = t1769 + t1797 + t1801 + t1848 + t1861;
  t2234 = 0.0329*t56*t2222;
  t2243 = -0.1944*t2241;
  t2282 = -0.1422*t2269;
  t2290 = -0.2083*t2289;
  t2292 = t319*t2269;
  t2300 = t335*t2289;
  t2301 = t2292 + t2300;
  t2309 = -0.16*t2301;
  t2310 = t335*t2269;
  t2315 = t370*t2289;
  t2319 = t2310 + t2315;
  t2320 = -0.02*t2319;
  t2321 = t2234 + t2243 + t2282 + t2290 + t2309 + t2320;
  t817 = -0.0817*t46*t50;
  t1957 = -0.1944*t1941;
  t825 = -1.*t824*t46*t50;
  t2712 = t132*t1923;
  t2713 = t840 + t2712;
  t2716 = t165*t2713;
  t2719 = t1999 + t2716;
  t2728 = -1.*t135*t2713;
  t2729 = t1964 + t2728;
  t2595 = -0.1422*t2588;
  t2629 = -0.2083*t2624;
  t2645 = t319*t2588;
  t2646 = t335*t2624;
  t2649 = t2645 + t2646;
  t2650 = -0.16*t2649;
  t2655 = t335*t2588;
  t2656 = t370*t2624;
  t2657 = t2655 + t2656;
  t2661 = -0.02*t2657;
  t2670 = t2595 + t2629 + t2650 + t2661;
  t2800 = t135*t2222;
  t2802 = t165*t2581;
  t2804 = t2800 + t2802;
  t756 = -1.*t315*t734;
  t767 = t328*t634;
  t774 = t756 + t767;
  t782 = -0.16*t774;
  t785 = -1.*t328*t734;
  t789 = -1.*t315*t634;
  t797 = t785 + t789;
  t798 = -0.02*t797;
  t805 = t782 + t798;
  t1524 = -1.*t328*t135*t1408;
  t1532 = -1.*t165*t315*t1408;
  t1533 = t1524 + t1532;
  t1537 = -0.16*t1533;
  t1544 = -1.*t165*t328*t1408;
  t1546 = t135*t315*t1408;
  t1551 = t1544 + t1546;
  t1557 = -0.02*t1551;
  t1563 = t1537 + t1557;
  t2120 = -1.*t315*t2119;
  t2124 = t328*t2061;
  t2125 = t2120 + t2124;
  t2126 = -0.16*t2125;
  t2128 = -1.*t328*t2119;
  t2136 = -1.*t315*t2061;
  t2149 = t2128 + t2136;
  t2161 = -0.02*t2149;
  t2177 = t2126 + t2161;
  t2408 = -1.*t315*t2402;
  t2432 = -1.*t328*t2424;
  t2434 = t2408 + t2432;
  t2440 = -0.02*t2434;
  t2443 = t328*t2402;
  t2444 = -1.*t315*t2424;
  t2445 = t2443 + t2444;
  t2448 = -0.16*t2445;
  t2456 = t2440 + t2448;
  t2924 = t135*t2368;
  t2926 = t165*t2390;
  t2927 = 0. + t2924 + t2926;
  t2929 = 0. + t2420 + t2422;
  t2816 = -1.*t315*t2804;
  t2820 = t328*t2624;
  t2821 = t2816 + t2820;
  t2827 = -0.16*t2821;
  t2831 = -1.*t328*t2804;
  t2838 = -1.*t315*t2624;
  t2843 = t2831 + t2838;
  t2846 = -0.02*t2843;
  t2857 = t2827 + t2846;
  t3006 = -1.*t132*t25*t46*t135*t983;
  t3019 = -1.*t165*t46*t126*t983;
  t3020 = t3006 + t3019;
  t3027 = t132*t165*t25*t46*t983;
  t3029 = -1.*t46*t135*t126*t983;
  t3035 = t3027 + t3029;
  t3067 = -1.*t50*t126;
  t3069 = t25*t444*t983;
  t3075 = t3067 + t3069;
  t3196 = -1.*t132*t135*t3075;
  t3199 = t165*t1746;
  t3201 = t3196 + t3199;
  t3204 = -1.*t132*t165*t3075;
  t3206 = -1.*t135*t1746;
  t3209 = t3204 + t3206;
  t3290 = t132*t165*t3075;
  t3294 = t135*t1746;
  t3309 = t3290 + t3294;
  t3369 = t132*t165*t1746;
  t3376 = t2800 + t3369;
  t3401 = -1.*t132*t135*t1746;
  t3404 = t2597 + t3401;
  t3497 = t132*t444*t983;
  t3498 = t995 + t3497;
  t3080 = 0.0329*t132*t3075;
  t3086 = 0.2083*t165*t56*t3075;
  t3089 = -0.1422*t56*t135*t3075;
  t3093 = t335*t56*t135*t3075;
  t3094 = -1.*t165*t56*t370*t3075;
  t3109 = t3093 + t3094;
  t3128 = -0.02*t3109;
  t3130 = -1.*t165*t335*t56*t3075;
  t3142 = t56*t135*t319*t3075;
  t3143 = t3130 + t3142;
  t3144 = -0.16*t3143;
  t3145 = t3080 + t3086 + t3089 + t3128 + t3144;
  t3694 = -1.*t132*t2241;
  t3716 = t1704 + t3694;
  t3733 = -1.*t132*t46*t983;
  t3736 = -1.*t56*t2241;
  t3737 = t3733 + t3736;
  t2988 = 0.0329*t25*t46*t56*t983;
  t3002 = 0.1944*t46*t126*t983;
  t3021 = -0.1422*t3020;
  t3036 = -0.2083*t3035;
  t3038 = t319*t3020;
  t3039 = t335*t3035;
  t3042 = t3038 + t3039;
  t3043 = -0.16*t3042;
  t3046 = t335*t3020;
  t3049 = t370*t3035;
  t3050 = t3046 + t3049;
  t3059 = -0.02*t3050;
  t3061 = t2988 + t3002 + t3021 + t3036 + t3043 + t3059;
  t3503 = -0.2083*t165*t3498;
  t3505 = 0.1422*t135*t3498;
  t3514 = t132*t46*t126*t983;
  t3520 = t56*t444*t983;
  t3530 = t3514 + t3520;
  t3543 = 0.0329*t3530;
  t3545 = -1.*t335*t135*t3498;
  t3547 = t165*t370*t3498;
  t3548 = t3545 + t3547;
  t3557 = -0.02*t3548;
  t3566 = t165*t335*t3498;
  t3567 = -1.*t135*t319*t3498;
  t3574 = t3566 + t3567;
  t3579 = -0.16*t3574;
  t3581 = t3503 + t3505 + t3543 + t3557 + t3579;
  t3965 = -1.*t560*t444*t983;
  t3970 = t3514 + t3965;
  t3971 = -1.*t165*t3970;
  t3978 = t1004 + t3971;
  t3986 = t165*t25*t46*t983;
  t3991 = -1.*t135*t3970;
  t3992 = t3986 + t3991;
  t4040 = t25*t46*t135*t983;
  t4041 = t165*t3970;
  t4044 = t4040 + t4041;
  t4083 = -1.*t132*t126*t444*t983;
  t4084 = t2577 + t4083;
  t4082 = -1.*t25*t135*t444*t983;
  t4085 = t165*t4084;
  t4086 = t4082 + t4085;
  t4088 = -1.*t165*t25*t444*t983;
  t4096 = -1.*t135*t4084;
  t4098 = t4088 + t4096;
  t3871 = -0.1944*t25*t46*t50;
  t3873 = -0.0817*t50*t444;
  t3878 = t46*t50*t56*t126;
  t3882 = -1.*t824*t50*t444;
  t3886 = t3878 + t3882;
  t3889 = 0.0329*t3886;
  t3891 = -0.2083*t734;
  t3897 = -0.1422*t634;
  t3910 = t370*t734;
  t3912 = t3910 + t647;
  t3915 = -0.02*t3912;
  t3919 = t335*t734;
  t3924 = t319*t634;
  t3934 = t3919 + t3924;
  t3937 = -0.16*t3934;
  t3943 = t3871 + t3873 + t3889 + t3891 + t3897 + t3915 + t3937;
  t3597 = -1.*t46*t50*t56;
  t3609 = t3597 + t2384;
  t3610 = 0.0329*t3609;
  t3616 = -0.2083*t165*t1408;
  t3619 = 0.1422*t135*t1408;
  t3627 = t165*t370*t1408;
  t3633 = t1648 + t3627;
  t3637 = -0.02*t3633;
  t3667 = t165*t335*t1408;
  t3668 = -1.*t135*t319*t1408;
  t3669 = t3667 + t3668;
  t3687 = -0.16*t3669;
  t3692 = t3610 + t3616 + t3619 + t3637 + t3687;
  t3150 = -0.1944*t1923;
  t3155 = 0.0329*t56*t1180;
  t3159 = -0.2083*t2119;
  t3168 = -0.1422*t2061;
  t3170 = t370*t2119;
  t3179 = t3170 + t2064;
  t3182 = -0.02*t3179;
  t3183 = t335*t2119;
  t3185 = t319*t2061;
  t3188 = t3183 + t3185;
  t3189 = -0.16*t3188;
  t3190 = t3150 + t3155 + t3159 + t3168 + t3182 + t3189;
  t4155 = t2381 + t2384;
  t4154 = -1.*t135*t1180;
  t4156 = -1.*t165*t4155;
  t4157 = t4154 + t4156;
  t4160 = t165*t1180;
  t4161 = -1.*t135*t4155;
  t4162 = t4160 + t4161;
  t4205 = t135*t1180;
  t4210 = t165*t4155;
  t4211 = t4205 + t4210;
  t4072 = -0.0817*t46*t983;
  t3359 = -0.1944*t2222;
  t4077 = -1.*t824*t46*t983;
  t4046 = -1.*t315*t4044;
  t4047 = t328*t3992;
  t4049 = t4046 + t4047;
  t4052 = -0.16*t4049;
  t4056 = -1.*t328*t4044;
  t4059 = -1.*t315*t3992;
  t4062 = t4056 + t4059;
  t4065 = -0.02*t4062;
  t4066 = t4052 + t4065;
  t3274 = -1.*t315*t3201;
  t3313 = -1.*t328*t3309;
  t3330 = t3274 + t3313;
  t3337 = -0.02*t3330;
  t3340 = t328*t3201;
  t3347 = -1.*t315*t3309;
  t3353 = t3340 + t3347;
  t3354 = -0.16*t3353;
  t3356 = t3337 + t3354;
  t3786 = -1.*t328*t135*t3737;
  t3788 = -1.*t165*t315*t3737;
  t3789 = t3786 + t3788;
  t3798 = -0.16*t3789;
  t3800 = -1.*t165*t328*t3737;
  t3804 = t135*t315*t3737;
  t3805 = t3800 + t3804;
  t3807 = -0.02*t3805;
  t3808 = t3798 + t3807;
  t4212 = -1.*t315*t4211;
  t4216 = t328*t4162;
  t4217 = t4212 + t4216;
  t4218 = -0.16*t4217;
  t4221 = -1.*t328*t4211;
  t4224 = -1.*t315*t4162;
  t4225 = t4221 + t4224;
  t4227 = -0.02*t4225;
  t4228 = t4218 + t4227;
  t4271 = 0. + t3067 + t3069;
  t4275 = t46*t560*t983;
  t4276 = t132*t2241;
  t4279 = 0. + t4275 + t4276;
  t4274 = -1.*t135*t4271;
  t4280 = -1.*t165*t4279;
  t4283 = t4274 + t4280;
  t4287 = t165*t4271;
  t4290 = -1.*t135*t4279;
  t4295 = t4287 + t4290;
  t4322 = t135*t4271;
  t4323 = t165*t4279;
  t4332 = 0. + t4322 + t4323;
  t4335 = 0. + t4287 + t4290;
  t3984 = -0.1422*t3978;
  t4003 = -0.2083*t3992;
  t4006 = t319*t3978;
  t4013 = t335*t3992;
  t4015 = t4006 + t4013;
  t4018 = -0.16*t4015;
  t4019 = t335*t3978;
  t4027 = t370*t3992;
  t4032 = t4019 + t4027;
  t4033 = -0.02*t4032;
  t4038 = t3984 + t4003 + t4018 + t4033;
  t3203 = -0.2083*t3201;
  t3214 = -0.1422*t3209;
  t3222 = t370*t3201;
  t3229 = t335*t3209;
  t3233 = t3222 + t3229;
  t3238 = -0.02*t3233;
  t3239 = t335*t3201;
  t3246 = t319*t3209;
  t3260 = t3239 + t3246;
  t3270 = -0.16*t3260;
  t3271 = t3203 + t3214 + t3238 + t3270;
  t3813 = 0.1422*t165*t3737;
  t3818 = 0.2083*t135*t3737;
  t3824 = -1.*t165*t335*t3737;
  t3831 = -1.*t135*t370*t3737;
  t3833 = t3824 + t3831;
  t3839 = -0.02*t3833;
  t3841 = -1.*t335*t135*t3737;
  t3849 = -1.*t165*t319*t3737;
  t3851 = t3841 + t3849;
  t3855 = -0.16*t3851;
  t3859 = t3813 + t3818 + t3839 + t3855;
  t4159 = -0.1422*t4157;
  t4163 = -0.2083*t4162;
  t4164 = t319*t4157;
  t4165 = t335*t4162;
  t4167 = t4164 + t4165;
  t4168 = -0.16*t4167;
  t4170 = t335*t4157;
  t4173 = t370*t4162;
  t4178 = t4170 + t4173;
  t4179 = -0.02*t4178;
  t4181 = t4159 + t4163 + t4168 + t4179;
  t4286 = -1.*t315*t4283;
  t4296 = -1.*t328*t4295;
  t4303 = t4286 + t4296;
  t4306 = -0.02*t4303;
  t4308 = t328*t4283;
  t4309 = -1.*t315*t4295;
  t4310 = t4308 + t4309;
  t4311 = -0.16*t4310;
  t4312 = t4306 + t4311;
  t4380 = -1.*t165*t4271;
  t4381 = t135*t4279;
  t4384 = t4380 + t4381;
  t4462 = -1.*t46*t56*t126;
  t4463 = t132*t444;
  t4464 = t4462 + t4463;
  t4513 = -1.*t132*t46*t126;
  t4518 = -1.*t56*t444;
  t4524 = t4513 + t4518;
  t4565 = t132*t46;
  t4566 = t56*t126*t444;
  t4569 = t4565 + t4566;
  t4431 = 0.0329*t132*t25*t46;
  t4433 = 0.2083*t165*t25*t46*t56;
  t4434 = -0.1422*t25*t46*t56*t135;
  t4437 = t335*t25*t46*t56*t135;
  t4438 = -1.*t165*t25*t46*t56*t370;
  t4447 = t4437 + t4438;
  t4448 = -0.02*t4447;
  t4450 = -1.*t165*t335*t25*t46*t56;
  t4451 = t25*t46*t56*t135*t319;
  t4454 = t4450 + t4451;
  t4456 = -0.16*t4454;
  t4457 = t4431 + t4433 + t4434 + t4448 + t4456;
  t4626 = -1.*t132*t25*t46*t135;
  t4630 = -1.*t165*t46*t126;
  t4633 = t4626 + t4630;
  t4646 = t132*t165*t25*t46;
  t4649 = -1.*t46*t135*t126;
  t4656 = t4646 + t4649;
  t4715 = -1.*t132*t165*t25*t46;
  t4716 = t46*t135*t126;
  t4718 = t4715 + t4716;
  t4820 = -1.*t25*t46*t135;
  t4821 = -1.*t132*t165*t46*t126;
  t4829 = t4820 + t4821;
  t4835 = -1.*t165*t25*t46;
  t4837 = t132*t46*t135*t126;
  t4838 = t4835 + t4837;
  t4873 = t132*t25*t135*t444;
  t4875 = t165*t126*t444;
  t4877 = t4873 + t4875;
  t4884 = -1.*t132*t165*t25*t444;
  t4885 = t135*t126*t444;
  t4886 = t4884 + t4885;
  t4711 = -0.2083*t4633;
  t4726 = -0.1422*t4718;
  t4728 = t370*t4633;
  t4735 = t335*t4718;
  t4772 = t4728 + t4735;
  t4773 = -0.02*t4772;
  t4782 = t335*t4633;
  t4783 = t319*t4718;
  t4789 = t4782 + t4783;
  t4795 = -0.16*t4789;
  t4796 = t4711 + t4726 + t4773 + t4795;
  t4490 = 0.1422*t165*t4464;
  t4494 = 0.2083*t135*t4464;
  t4497 = -1.*t165*t335*t4464;
  t4498 = -1.*t135*t370*t4464;
  t4501 = t4497 + t4498;
  t4502 = -0.02*t4501;
  t4503 = -1.*t335*t135*t4464;
  t4504 = -1.*t165*t319*t4464;
  t4505 = t4503 + t4504;
  t4506 = -0.16*t4505;
  t4508 = t4490 + t4494 + t4502 + t4506;
  t4972 = t25*t46;
  t4974 = 0. + t4972;
  t4994 = t132*t46*t126;
  t4996 = -1.*t560*t444;
  t4999 = 0. + t4994 + t4996;
  t4993 = -1.*t4974*t135;
  t5000 = -1.*t165*t4999;
  t5004 = t4993 + t5000;
  t5024 = t165*t4974;
  t5035 = -1.*t135*t4999;
  t5038 = t5024 + t5035;
  t5086 = -1.*t165*t4974;
  t5089 = t135*t4999;
  t5090 = t5086 + t5089;
  t4558 = -1.*t132*t126*t444;
  t5146 = -1.*t46*t560;
  t5151 = t5146 + t4558;
  t5144 = t25*t135*t444;
  t5155 = -1.*t165*t5151;
  t5160 = t5144 + t5155;
  t5172 = -1.*t165*t25*t444;
  t5174 = -1.*t135*t5151;
  t5176 = t5172 + t5174;
  t4557 = t46*t56;
  t4560 = t4557 + t4558;
  t4563 = 0.0329*t4560;
  t4570 = -0.2083*t165*t4569;
  t4573 = 0.1422*t135*t4569;
  t4576 = -1.*t335*t135*t4569;
  t4579 = t165*t370*t4569;
  t4602 = t4576 + t4579;
  t4604 = -0.02*t4602;
  t4606 = t165*t335*t4569;
  t4612 = -1.*t135*t319*t4569;
  t4613 = t4606 + t4612;
  t4614 = -0.16*t4613;
  t4615 = t4563 + t4570 + t4573 + t4604 + t4614;
  t4869 = -0.0329*t25*t56*t444;
  t4872 = -0.1944*t126*t444;
  t4880 = -0.1422*t4877;
  t4890 = -0.2083*t4886;
  t4893 = t319*t4877;
  t4905 = t335*t4886;
  t4917 = t4893 + t4905;
  t4928 = -0.16*t4917;
  t4937 = t335*t4877;
  t4952 = t370*t4886;
  t4954 = t4937 + t4952;
  t4956 = -0.02*t4954;
  t4961 = t4869 + t4872 + t4880 + t4890 + t4928 + t4956;
  t4808 = 0.1944*t25*t46;
  t5270 = t560*t444;
  t5271 = t4513 + t5270;
  t5274 = t165*t5271;
  t5280 = t4820 + t5274;
  t5285 = -1.*t135*t5271;
  t5286 = t4835 + t5285;
  t5170 = -0.1422*t5160;
  t5183 = -0.2083*t5176;
  t5184 = t319*t5160;
  t5190 = t335*t5176;
  t5194 = t5184 + t5190;
  t5198 = -0.16*t5194;
  t5199 = t335*t5160;
  t5204 = t370*t5176;
  t5207 = t5199 + t5204;
  t5209 = -0.02*t5207;
  t5212 = t5170 + t5183 + t5198 + t5209;
  t5323 = -1.*t25*t135*t444;
  t5329 = t165*t5151;
  t5332 = t5323 + t5329;
  t4645 = -1.*t315*t4633;
  t4660 = -1.*t328*t4656;
  t4661 = t4645 + t4660;
  t4671 = -0.02*t4661;
  t4674 = t328*t4633;
  t4686 = -1.*t315*t4656;
  t4689 = t4674 + t4686;
  t4690 = -0.16*t4689;
  t4696 = t4671 + t4690;
  t4465 = -1.*t328*t135*t4464;
  t4466 = -1.*t165*t315*t4464;
  t4468 = t4465 + t4466;
  t4469 = -0.16*t4468;
  t4471 = -1.*t165*t328*t4464;
  t4475 = t135*t315*t4464;
  t4476 = t4471 + t4475;
  t4483 = -0.02*t4476;
  t4486 = t4469 + t4483;
  t5017 = -1.*t315*t5004;
  t5039 = -1.*t328*t5038;
  t5043 = t5017 + t5039;
  t5046 = -0.02*t5043;
  t5047 = t328*t5004;
  t5050 = -1.*t315*t5038;
  t5058 = t5047 + t5050;
  t5066 = -0.16*t5058;
  t5067 = t5046 + t5066;
  t5383 = t4974*t135;
  t5385 = t165*t4999;
  t5391 = 0. + t5383 + t5385;
  t5395 = 0. + t5024 + t5035;
  t5335 = -1.*t315*t5332;
  t5338 = t328*t5176;
  t5341 = t5335 + t5338;
  t5343 = -0.16*t5341;
  t5344 = -1.*t328*t5332;
  t5347 = -1.*t315*t5176;
  t5348 = t5344 + t5347;
  t5351 = -0.02*t5348;
  t5352 = t5343 + t5351;
  t5478 = t370*t5391;
  t5479 = t335*t5395;
  t5483 = 0. + t5478 + t5479;
  t5512 = t335*t5391;
  t5514 = t319*t5395;
  t5515 = 0. + t5512 + t5514;
  t5486 = t370*t4656;
  t5489 = t4782 + t5486;
  t5496 = 2.*t5489*t5483;
  t5498 = t319*t4633;
  t5506 = t335*t4656;
  t5507 = t5498 + t5506;
  t5518 = 2.*t5507*t5515;
  t5520 = t5496 + t5518;
  t5521 = Power(t5483,2);
  t5525 = Power(t5515,2);
  t5529 = t5521 + t5525;
  t5530 = Power(t5529,-2);
  t5533 = t165*t370*t4464;
  t5535 = t4503 + t5533;
  t5461 = t165*t335*t4464;
  t5464 = -1.*t135*t319*t4464;
  t5471 = t5461 + t5464;
  t5574 = 1/t5529;
  t5548 = -1.*t335*t5391;
  t5554 = -1.*t319*t5395;
  t5558 = 0. + t5548 + t5554;
  t5407 = -1.*t328*t5391;
  t5409 = -1.*t315*t5395;
  t5410 = t5407 + t5409;
  t5606 = -1.*t315*t5391;
  t5613 = t328*t5395;
  t5624 = t5606 + t5613;
  t5561 = -1.*t319*t4633;
  t5565 = -1.*t335*t4656;
  t5568 = t5561 + t5565;
  t5127 = t335*t5004;
  t5673 = t319*t5004;
  t5676 = t335*t5038;
  t5689 = t5673 + t5676;
  t5692 = t370*t5038;
  t5698 = t5127 + t5692;
  t4845 = t335*t4829;
  t4846 = t319*t4838;
  t4847 = t4845 + t4846;
  t4840 = t370*t4829;
  t4842 = t335*t4838;
  t4843 = t4840 + t4842;
  t5789 = t370*t5332;
  t5791 = t5789 + t5190;
  t5795 = t335*t5332;
  t5797 = t319*t5176;
  t5798 = t5795 + t5797;
  t5833 = 2.*t5535*t5483;
  t5839 = 2.*t5471*t5515;
  t5841 = t5833 + t5839;
  t5597 = t4454*t5483*t5574;
  t5600 = t4447*t5558*t5574;
  t5850 = t135*t319*t4464;
  t5852 = t4497 + t5850;
  t4544 = t165*t335*t4524;
  t4546 = -1.*t135*t319*t4524;
  t4548 = t4544 + t4546;
  t4533 = -1.*t335*t135*t4524;
  t4534 = t165*t370*t4524;
  t4537 = t4533 + t4534;
  t6036 = 2.*t5698*t5483;
  t6037 = 2.*t5689*t5515;
  t6039 = t6036 + t6037;
  t5741 = t4789*t5483*t5574;
  t5744 = t4772*t5558*t5574;
  t6045 = -1.*t319*t5004;
  t6046 = -1.*t335*t5038;
  t6054 = t6045 + t6046;
  t5905 = t4505*t5483*t5574;
  t5908 = t4501*t5558*t5574;
  t5112 = t370*t5004;
  t5116 = t335*t5090;
  t5117 = t5112 + t5116;
  t5131 = t319*t5090;
  t5132 = t5127 + t5131;
  t6162 = 2.*t5483*t5410;
  t6165 = 2.*t5624*t5515;
  t6166 = t6162 + t6165;
  t5393 = t315*t5391;
  t5401 = -1.*t328*t5395;
  t5403 = t5393 + t5401;
  t5640 = t4689*t5483*t5574;
  t5644 = t4661*t5558*t5574;
  t5940 = t4468*t5483*t5574;
  t5948 = t4476*t5558*t5574;
  t6093 = t5058*t5483*t5574;
  t6106 = t5043*t5558*t5574;
  t5802 = t4917*t5483*t5574;
  t5812 = t4954*t5558*t5574;
  t6310 = 2.*t5483*t5791;
  t6311 = 2.*t5515*t5798;
  t6313 = t6310 + t6311;
  t6021 = t4613*t5483*t5574;
  t6022 = t4602*t5558*t5574;
  t6290 = -1.*t335*t5332;
  t6291 = -1.*t319*t5176;
  t6297 = t6290 + t6291;
  t6147 = t5483*t5194*t5574;
  t6152 = t5558*t5207*t5574;
  t6263 = t5483*t5341*t5574;
  t6266 = t5558*t5348*t5574;
  t5298 = t370*t5280;
  t5299 = t335*t5286;
  t5301 = t5298 + t5299;
  t5307 = t335*t5280;
  t5308 = t319*t5286;
  t5310 = t5307 + t5308;
  t5248 = t824*t444;
  t6396 = t46*t56*t126;
  t6406 = -1.*t824*t444;
  t6407 = 0. + t6396 + t6406;
  t6410 = 1/Sqrt(t5529);
  t6411 = 0. + t4462 + t5248;
  t6413 = Power(t6411,2);
  t6416 = t6413 + t5521 + t5525;
  t6418 = Power(t6416,-2);
  t6409 = Power(t6039,2);
  t6426 = Power(t5529,-1.5);
  t6427 = 1/t6416;
  t6488 = Sqrt(t5529);
  t6580 = t824*t46;
  t6581 = t6580 + t4566;
  t6639 = Power(t6166,2);
  t6432 = 2.*t5689*t5624;
  t6433 = 2.*t5043*t5483;
  t6434 = 2.*t5698*t5410;
  t6437 = 2.*t5058*t5515;
  t6438 = t6432 + t6433 + t6434 + t6437;
  t6847 = -2.*t25*t46*t56*t6411;
  t6849 = t6847 + t5496 + t5518;
  t6687 = 2.*t5507*t5624;
  t6688 = 2.*t4661*t5483;
  t6690 = 2.*t5489*t5410;
  t6692 = 2.*t4689*t5515;
  t6696 = t6687 + t6688 + t6690 + t6692;
  t6500 = 2.*t5507*t5689;
  t6501 = 2.*t5489*t5698;
  t6502 = 2.*t4772*t5483;
  t6503 = 2.*t4789*t5515;
  t6510 = t6500 + t6501 + t6502 + t6503;
  t7040 = 2.*t6411*t4524;
  t7042 = t7040 + t5833 + t5839;
  t6748 = 2.*t5471*t5624;
  t6753 = 2.*t4476*t5483;
  t6755 = 2.*t5535*t5410;
  t6759 = 2.*t4468*t5515;
  t6761 = t6748 + t6753 + t6755 + t6759;
  t6539 = 2.*t5471*t5689;
  t6551 = 2.*t5535*t5698;
  t6552 = 2.*t4501*t5483;
  t6557 = 2.*t4505*t5515;
  t6559 = t6539 + t6551 + t6552 + t6557;
  t7077 = t56*t444;
  t7079 = t4994 + t7077;
  t6907 = -0.25*t6407*t5520*t5841*t6426*t6427;
  t6909 = 2.*t5489*t5535;
  t6910 = 2.*t5507*t5471;
  t6911 = 2.*t4447*t5483;
  t6912 = 2.*t4454*t5515;
  t6914 = t6909 + t6910 + t6911 + t6912;
  t6921 = 0.5*t6407*t6914*t6410*t6427;
  t6926 = -1.*t132*t25*t46*t6488*t6427;
  t7229 = -1.*t824*t46;
  t7231 = -1.*t56*t126*t444;
  t7234 = t7229 + t7231;
  t6584 = 2.*t5515*t5194;
  t6585 = 2.*t5698*t5791;
  t6587 = 2.*t5483*t5207;
  t6589 = 2.*t5689*t5798;
  t6593 = t6584 + t6585 + t6587 + t6589;
  t6791 = 2.*t5515*t5341;
  t6799 = 2.*t5410*t5791;
  t6801 = 2.*t5483*t5348;
  t6805 = 2.*t5624*t5798;
  t6809 = t6791 + t6799 + t6801 + t6805;
  t7254 = 2.*t6411*t6581;
  t7255 = t7254 + t6310 + t6311;
  t6990 = t25*t56*t444*t6488*t6427;
  t6997 = 2.*t4954*t5483;
  t7000 = 2.*t4917*t5515;
  t7014 = 2.*t5489*t5791;
  t7015 = 2.*t5507*t5798;
  t7017 = t6997 + t7000 + t7014 + t7015;
  t7020 = 0.5*t6407*t6410*t6427*t7017;
  t7026 = -0.25*t6407*t5520*t6426*t6427*t6313;
  t7158 = -1.*t46*t56;
  t7159 = t132*t126*t444;
  t7166 = t7158 + t7159;
  t7167 = t7166*t6488*t6427;
  t7168 = 2.*t4602*t5483;
  t7169 = 2.*t4613*t5515;
  t7173 = 2.*t5535*t5791;
  t7174 = 2.*t5471*t5798;
  t7180 = t7168 + t7169 + t7173 + t7174;
  t7185 = 0.5*t6407*t6410*t6427*t7180;
  t7195 = -0.25*t6407*t5841*t6426*t6427*t6313;
  t7395 = t824*t46*t50;
  t7397 = t56*t1308;
  t7401 = 0. + t7395 + t7397;
  t7413 = t824*t46*t983;
  t7417 = t56*t2241;
  t7420 = 0. + t7413 + t7417;
  t7408 = 2.*t3886*t7401;
  t7409 = t46*t56*t126*t983;
  t7410 = -1.*t824*t444*t983;
  t7412 = t7409 + t7410;
  t7427 = 2.*t7412*t7420;
  t7428 = t7408 + t7427;
  t7430 = Power(t7401,2);
  t7431 = Power(t7420,2);
  t7433 = t7430 + t7431;
  t7440 = Power(t7433,-2);
  t7453 = 1/t7433;
  t7447 = 0. + t4077 + t3736;
  t7496 = -1.*t46*t56*t983;
  t7503 = t7496 + t4276;
  t4078 = -1.*t56*t126*t444*t983;
  t4080 = t4077 + t4078;
  t827 = -1.*t50*t56*t126*t444;
  t829 = t825 + t827;
  t4230 = t56*t1746;
  t4231 = t4077 + t4230;
  t7555 = t7395 + t7397;
  t7590 = 2.*t56*t1180*t7401;
  t7595 = 2.*t56*t3075*t7420;
  t7597 = t7590 + t7595;
  t7478 = t25*t46*t56*t983*t7401*t7453;
  t7488 = t25*t46*t50*t56*t7447*t7453;
  t7680 = 2.*t3609*t7401;
  t7687 = 2.*t7503*t7420;
  t7691 = t7680 + t7687;
  t7510 = t3530*t7401*t7453;
  t7513 = t484*t7447*t7453;
  t7628 = t132*t3075*t7401*t7453;
  t7634 = t132*t1180*t7447*t7453;
  t7763 = 2.*t7401*t4231;
  t7764 = 2.*t7555*t7420;
  t7765 = t7763 + t7764;
  t7561 = t3886*t7401*t7453;
  t7566 = t1000*t7447*t7453;
  t7775 = t825 + t1405;
  t7650 = t56*t1180*t7401*t7453;
  t7653 = t56*t2222*t7447*t7453;
  t2706 = t56*t1923;
  t2707 = t825 + t2706;
  t7754 = t3609*t7401*t7453;
  t7756 = t1758*t7447*t7453;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=var2[15]*(t1268*var2[3] + t530*var2[4] + t1892*var2[5] + (0.1422*t1315*t135 + 0.0329*t1408 - 0.2083*t1315*t165 - 0.16*(-1.*t1315*t135*t319 + t1315*t165*t335) - 0.02*(-1.*t1315*t135*t335 + t1315*t165*t370))*var2[15] + t1688*var2[16] + t1563*var2[17]) + var2[3]*((t1957 - 0.1422*t1973 - 0.2083*t2007 - 0.16*(t1973*t319 + t2007*t335) - 0.02*(t1973*t335 + t2007*t370) + 0.0329*t1923*t56)*var2[3] + t384*var2[4] + t2321*var2[5] + t1268*var2[15] + t2094*var2[16] + t2177*var2[17]) + var2[16]*(t2094*var2[3] + t708*var2[4] + t2670*var2[5] + t1688*var2[15] + (-0.2083*t2402 - 0.1422*t2493 - 0.16*(t2493*t319 + t2402*t335) - 0.02*(t2493*t335 + t2402*t370))*var2[16] + t2456*var2[17]) + var2[5]*(t2321*var2[3] + t1142*var2[4] + (t1957 + 0.0329*t2707 - 0.2083*t2719 - 0.1422*t2729 - 0.16*(t2729*t319 + t2719*t335) - 0.02*(t2729*t335 + t2719*t370) + t817)*var2[5] + t1892*var2[15] + t2670*var2[16] + t2857*var2[17]) + var2[17]*(t2177*var2[3] + t805*var2[4] + t2857*var2[5] + t1563*var2[15] + t2456*var2[16] + (-0.16*(-1.*t2929*t315 - 1.*t2927*t328) - 0.02*(t2927*t315 - 1.*t2929*t328))*var2[17]) + var2[4]*(t384*var2[3] + (0.1944*t25*t444*t50 + t817 + 0.0329*t829 - 0.2083*t859 - 0.1422*t872 - 0.16*(t335*t859 + t319*t872) - 0.02*(t370*t859 + t335*t872))*var2[4] + t1142*var2[5] + t530*var2[15] + t708*var2[16] + t805*var2[17]);
  p_output1[4]=var2[3]*((t3359 - 0.2083*t3376 - 0.1422*t3404 - 0.16*(t335*t3376 + t319*t3404) - 0.02*(t335*t3404 + t3376*t370) + 0.0329*t1746*t56)*var2[3] + t3061*var2[4] + t3190*var2[5] + t3145*var2[15] + t3271*var2[16] + t3356*var2[17]) + var2[15]*(t3145*var2[3] + t3581*var2[4] + t3692*var2[5] + (0.1422*t135*t3716 - 0.2083*t165*t3716 - 0.16*(-1.*t135*t319*t3716 + t165*t335*t3716) - 0.02*(-1.*t135*t335*t3716 + t165*t370*t3716) + 0.0329*t3737)*var2[15] + t3859*var2[16] + t3808*var2[17]) + var2[4]*(t3061*var2[3] + (t4072 + 0.0329*t4080 - 0.2083*t4086 - 0.1422*t4098 - 0.16*(t335*t4086 + t319*t4098) - 0.02*(t370*t4086 + t335*t4098) + 0.1944*t25*t444*t983)*var2[4] + t3943*var2[5] + t3581*var2[15] + t4038*var2[16] + t4066*var2[17]) + var2[5]*(t3190*var2[3] + t3943*var2[4] + (-0.1422*t2624 - 0.2083*t2804 - 0.16*(t2624*t319 + t2804*t335) + t3359 - 0.02*(t2646 + t2804*t370) + t4072 + 0.0329*t4231)*var2[5] + t3692*var2[15] + t4181*var2[16] + t4228*var2[17]) + var2[16]*(t3271*var2[3] + t4038*var2[4] + t4181*var2[5] + t3859*var2[15] + (-0.2083*t4283 - 0.1422*t4384 - 0.16*(t335*t4283 + t319*t4384) - 0.02*(t370*t4283 + t335*t4384))*var2[16] + t4312*var2[17]) + var2[17]*(t3356*var2[3] + t4066*var2[4] + t4228*var2[5] + t3808*var2[15] + t4312*var2[16] + (-0.16*(-1.*t328*t4332 - 1.*t315*t4335) - 0.02*(t315*t4332 - 1.*t328*t4335))*var2[17]);
  p_output1[5]=var2[15]*(t4457*var2[3] + t4615*var2[4] + (0.0329*t4464 + 0.1422*t135*t4524 - 0.2083*t165*t4524 - 0.02*t4537 - 0.16*t4548)*var2[15] + t4508*var2[16] + t4486*var2[17]) + var2[3]*((t4808 - 0.2083*t4829 - 0.1422*t4838 - 0.02*t4843 - 0.16*t4847 - 0.0329*t126*t46*t56)*var2[3] + t4961*var2[4] + t4457*var2[15] + t4796*var2[16] + t4696*var2[17]) + var2[16]*(t4796*var2[3] + t5212*var2[4] + t4508*var2[15] + (-0.2083*t5004 - 0.1422*t5090 - 0.02*t5117 - 0.16*t5132)*var2[16] + t5067*var2[17]) + var2[4]*(t4961*var2[3] + (0.0817*t444 + t4808 + 0.0329*(t4462 + t5248) - 0.2083*t5280 - 0.1422*t5286 - 0.02*t5301 - 0.16*t5310)*var2[4] + t4615*var2[15] + t5212*var2[16] + t5352*var2[17]) + var2[17]*(t4696*var2[3] + t5352*var2[4] + t4486*var2[15] + t5067*var2[16] + (-0.02*t5403 - 0.16*t5410)*var2[17]);
  p_output1[6]=var2[3]*((-1.*t5483*t5507*t5520*t5530 - 1.*t5489*t5520*t5530*t5558 + t4847*t5483*t5574 + t5489*t5507*t5574 + t4843*t5558*t5574 + t5489*t5568*t5574)*var2[3] + (-1.*t5520*t5530*t5558*t5791 + t5568*t5574*t5791 - 1.*t5483*t5520*t5530*t5798 + t5489*t5574*t5798 + t5802 + t5812)*var2[4] + (-1.*t5471*t5483*t5520*t5530 - 1.*t5520*t5530*t5535*t5558 + t5471*t5489*t5574 + t5535*t5568*t5574 + t5597 + t5600)*var2[15] + (-1.*t5483*t5520*t5530*t5689 + t5489*t5574*t5689 - 1.*t5520*t5530*t5558*t5698 + t5568*t5574*t5698 + t5741 + t5744)*var2[16] + (-1.*t5410*t5520*t5530*t5558 + t5410*t5568*t5574 - 1.*t5483*t5520*t5530*t5624 + t5489*t5574*t5624 + t5640 + t5644)*var2[17]) + var2[15]*((t5507*t5535*t5574 + t5597 + t5600 - 1.*t5483*t5507*t5530*t5841 - 1.*t5489*t5530*t5558*t5841 + t5489*t5574*t5852)*var2[3] + (t5535*t5574*t5798 - 1.*t5530*t5558*t5791*t5841 - 1.*t5483*t5530*t5798*t5841 + t5574*t5791*t5852 + t6021 + t6022)*var2[4] + (t4548*t5483*t5574 + t5471*t5535*t5574 + t4537*t5558*t5574 - 1.*t5471*t5483*t5530*t5841 - 1.*t5530*t5535*t5558*t5841 + t5535*t5574*t5852)*var2[15] + (t5535*t5574*t5689 - 1.*t5483*t5530*t5689*t5841 - 1.*t5530*t5558*t5698*t5841 + t5574*t5698*t5852 + t5905 + t5908)*var2[16] + (t5535*t5574*t5624 - 1.*t5410*t5530*t5558*t5841 - 1.*t5483*t5530*t5624*t5841 + t5410*t5574*t5852 + t5940 + t5948)*var2[17]) + var2[16]*((t5507*t5574*t5698 + t5741 + t5744 - 1.*t5483*t5507*t5530*t6039 - 1.*t5489*t5530*t5558*t6039 + t5489*t5574*t6054)*var2[3] + (t5574*t5698*t5798 - 1.*t5530*t5558*t5791*t6039 - 1.*t5483*t5530*t5798*t6039 + t5574*t5791*t6054 + t6147 + t6152)*var2[4] + (t5471*t5574*t5698 + t5905 + t5908 - 1.*t5471*t5483*t5530*t6039 - 1.*t5530*t5535*t5558*t6039 + t5535*t5574*t6054)*var2[15] + (t5132*t5483*t5574 + t5117*t5558*t5574 + t5574*t5689*t5698 - 1.*t5483*t5530*t5689*t6039 - 1.*t5530*t5558*t5698*t6039 + t5574*t5698*t6054)*var2[16] + (t5574*t5624*t5698 - 1.*t5410*t5530*t5558*t6039 - 1.*t5483*t5530*t5624*t6039 + t5410*t5574*t6054 + t6093 + t6106)*var2[17]) + var2[17]*((t5403*t5489*t5574 + t5410*t5507*t5574 + t5640 + t5644 - 1.*t5483*t5507*t5530*t6166 - 1.*t5489*t5530*t5558*t6166)*var2[3] + (t5403*t5574*t5791 + t5410*t5574*t5798 - 1.*t5530*t5558*t5791*t6166 - 1.*t5483*t5530*t5798*t6166 + t6263 + t6266)*var2[4] + (t5410*t5471*t5574 + t5403*t5535*t5574 + t5940 + t5948 - 1.*t5471*t5483*t5530*t6166 - 1.*t5530*t5535*t5558*t6166)*var2[15] + (t5410*t5574*t5689 + t5403*t5574*t5698 + t6093 + t6106 - 1.*t5483*t5530*t5689*t6166 - 1.*t5530*t5558*t5698*t6166)*var2[16] + (t5403*t5410*t5574 + t5410*t5483*t5574 + t5403*t5558*t5574 + t5410*t5574*t5624 - 1.*t5410*t5530*t5558*t6166 - 1.*t5483*t5530*t5624*t6166)*var2[17]) + var2[4]*((t5507*t5574*t5791 + t5802 + t5812 + t5489*t5574*t6297 - 1.*t5483*t5507*t5530*t6313 - 1.*t5489*t5530*t5558*t6313)*var2[3] + (t5310*t5483*t5574 + t5301*t5558*t5574 + t5574*t5791*t5798 + t5574*t5791*t6297 - 1.*t5530*t5558*t5791*t6313 - 1.*t5483*t5530*t5798*t6313)*var2[4] + (t5471*t5574*t5791 + t6021 + t6022 + t5535*t5574*t6297 - 1.*t5471*t5483*t5530*t6313 - 1.*t5530*t5535*t5558*t6313)*var2[15] + (t5574*t5689*t5791 + t6147 + t6152 + t5574*t5698*t6297 - 1.*t5483*t5530*t5689*t6313 - 1.*t5530*t5558*t5698*t6313)*var2[16] + (t5574*t5624*t5791 + t6263 + t6266 + t5410*t5574*t6297 - 1.*t5410*t5530*t5558*t6313 - 1.*t5483*t5530*t5624*t6313)*var2[17]);
  p_output1[7]=var2[16]*((-0.5*t5520*t6039*t6407*t6410*t6418 - 0.5*t25*t46*t56*t6039*t6410*t6427 - 0.25*t5520*t6039*t6407*t6426*t6427 + t25*t46*t56*t6039*t6418*t6488 + 0.5*t6407*t6410*t6427*t6510)*var2[3] + (-0.5*t6039*t6313*t6407*t6410*t6418 - 0.25*t6039*t6313*t6407*t6426*t6427 + 0.5*t6039*t6410*t6427*t6581 - 1.*t6039*t6418*t6488*t6581 + 0.5*t6407*t6410*t6427*t6593)*var2[4] + (-0.5*t5841*t6039*t6407*t6410*t6418 + 0.5*t4524*t6039*t6410*t6427 - 0.25*t5841*t6039*t6407*t6426*t6427 - 1.*t4524*t6039*t6418*t6488 + 0.5*t6407*t6410*t6427*t6559)*var2[15] - 0.5*t6407*t6409*t6410*t6418*var2[16] + 0.5*(2.*t5117*t5483 + 2.*t5132*t5515 + 2.*Power(t5689,2) + 2.*Power(t5698,2))*t6407*t6410*t6427*var2[16] - 0.25*t6407*t6409*t6426*t6427*var2[16] - 0.5*t6039*t6166*t6407*t6410*t6418*var2[17] - 0.25*t6039*t6166*t6407*t6426*t6427*var2[17] + 0.5*t6407*t6410*t6427*t6438*var2[17]) + var2[17]*((-0.5*t5520*t6166*t6407*t6410*t6418 - 0.5*t25*t46*t56*t6166*t6410*t6427 - 0.25*t5520*t6166*t6407*t6426*t6427 + t25*t46*t56*t6166*t6418*t6488 + 0.5*t6407*t6410*t6427*t6696)*var2[3] + (-0.5*t6166*t6313*t6407*t6410*t6418 - 0.25*t6166*t6313*t6407*t6426*t6427 + 0.5*t6166*t6410*t6427*t6581 - 1.*t6166*t6418*t6488*t6581 + 0.5*t6407*t6410*t6427*t6809)*var2[4] + (-0.5*t5841*t6166*t6407*t6410*t6418 + 0.5*t4524*t6166*t6410*t6427 - 0.25*t5841*t6166*t6407*t6426*t6427 - 1.*t4524*t6166*t6418*t6488 + 0.5*t6407*t6410*t6427*t6761)*var2[15] - 0.5*t6039*t6166*t6407*t6410*t6418*var2[16] - 0.25*t6039*t6166*t6407*t6426*t6427*var2[16] + 0.5*t6407*t6410*t6427*t6438*var2[16] + 0.5*(2.*Power(t5410,2) + 2.*t5403*t5483 + 2.*t5410*t5515 + 2.*Power(t5624,2))*t6407*t6410*t6427*var2[17] - 0.5*t6407*t6410*t6418*t6639*var2[17] - 0.25*t6407*t6426*t6427*t6639*var2[17]) + var2[3]*((0.5*(2.*t4843*t5483 + 2.*Power(t5489,2) + 2.*Power(t5507,2) + 2.*t4847*t5515)*t6407*t6410*t6427 - 0.25*Power(t5520,2)*t6407*t6426*t6427 + t126*t46*t56*t6427*t6488 - 0.5*t5520*t6407*t6410*t6418*t6849 + t25*t46*t56*t6418*t6488*t6849)*var2[3] + (0.5*t25*t46*t56*t6313*t6410*t6427 + 0.5*t5520*t6410*t6427*t6581 - 0.5*t6313*t6407*t6410*t6418*t6849 - 1.*t6418*t6488*t6581*t6849 + t6990 + t7020 + t7026)*var2[4] + (0.5*t4524*t5520*t6410*t6427 + 0.5*t25*t46*t56*t5841*t6410*t6427 - 0.5*t5841*t6407*t6410*t6418*t6849 - 1.*t4524*t6418*t6488*t6849 + t6907 + t6921 + t6926)*var2[15] + 0.5*t25*t46*t56*t6039*t6410*t6427*var2[16] - 0.25*t5520*t6039*t6407*t6426*t6427*var2[16] + 0.5*t6407*t6410*t6427*t6510*var2[16] - 0.5*t6039*t6407*t6410*t6418*t6849*var2[16] + 0.5*t25*t46*t56*t6166*t6410*t6427*var2[17] - 0.25*t5520*t6166*t6407*t6426*t6427*var2[17] + 0.5*t6407*t6410*t6427*t6696*var2[17] - 0.5*t6166*t6407*t6410*t6418*t6849*var2[17]) + var2[15]*((-0.5*t25*t46*t56*t5841*t6410*t6427 + t6907 + t6921 + t6926 - 0.5*t5520*t6407*t6410*t6418*t7042 + t25*t46*t56*t6418*t6488*t7042 + 0.5*t5520*t6410*t6427*t7079)*var2[3] + (0.5*t5841*t6410*t6427*t6581 - 0.5*t6313*t6407*t6410*t6418*t7042 - 1.*t6418*t6488*t6581*t7042 + 0.5*t6313*t6410*t6427*t7079 + t7167 + t7185 + t7195)*var2[4] + (0.5*t4524*t5841*t6410*t6427 + 0.5*(2.*Power(t5471,2) + 2.*t4537*t5483 + 2.*t4548*t5515 + 2.*Power(t5535,2))*t6407*t6410*t6427 - 0.25*Power(t5841,2)*t6407*t6426*t6427 + (-1.*t132*t444 + t6396)*t6427*t6488 - 0.5*t5841*t6407*t6410*t6418*t7042 - 1.*t4524*t6418*t6488*t7042 + 0.5*t5841*t6410*t6427*t7079)*var2[15] - 0.25*t5841*t6039*t6407*t6426*t6427*var2[16] + 0.5*t6407*t6410*t6427*t6559*var2[16] - 0.5*t6039*t6407*t6410*t6418*t7042*var2[16] + 0.5*t6039*t6410*t6427*t7079*var2[16] - 0.25*t5841*t6166*t6407*t6426*t6427*var2[17] + 0.5*t6407*t6410*t6427*t6761*var2[17] - 0.5*t6166*t6407*t6410*t6418*t7042*var2[17] + 0.5*t6166*t6410*t6427*t7079*var2[17]) + var2[4]*((-0.5*t25*t46*t56*t6313*t6410*t6427 + t6990 + t7020 + t7026 + 0.5*t5520*t6410*t6427*t7234 - 0.5*t5520*t6407*t6410*t6418*t7255 + t25*t46*t56*t6418*t6488*t7255)*var2[3] + (0.5*(2.*t5301*t5483 + 2.*t5310*t5515 + 2.*Power(t5791,2) + 2.*Power(t5798,2))*t6407*t6410*t6427 - 0.25*Power(t6313,2)*t6407*t6426*t6427 + (t6396 + t6406)*t6427*t6488 + 0.5*t6313*t6410*t6427*t6581 + 0.5*t6313*t6410*t6427*t7234 - 0.5*t6313*t6407*t6410*t6418*t7255 - 1.*t6418*t6488*t6581*t7255)*var2[4] + (0.5*t4524*t6313*t6410*t6427 + t7167 + t7185 + t7195 + 0.5*t5841*t6410*t6427*t7234 - 0.5*t5841*t6407*t6410*t6418*t7255 - 1.*t4524*t6418*t6488*t7255)*var2[15] - 0.25*t6039*t6313*t6407*t6426*t6427*var2[16] + 0.5*t6407*t6410*t6427*t6593*var2[16] + 0.5*t6039*t6410*t6427*t7234*var2[16] - 0.5*t6039*t6407*t6410*t6418*t7255*var2[16] - 0.25*t6166*t6313*t6407*t6426*t6427*var2[17] + 0.5*t6407*t6410*t6427*t6809*var2[17] + 0.5*t6166*t6410*t6427*t7234*var2[17] - 0.5*t6166*t6407*t6410*t6418*t7255*var2[17]);
  p_output1[8]=var2[4]*((-1.*t3075*t56*t7401*t7428*t7440 - 1.*t1180*t56*t7428*t7440*t7447 + t1000*t1180*t56*t7453 + t3075*t3886*t56*t7453 + t7478 + t7488)*var2[3] + (-1.*t7401*t7412*t7428*t7440 - 1.*t3886*t7428*t7440*t7447 + t1000*t3886*t7453 + t4080*t7401*t7453 + t3886*t7412*t7453 + t7447*t7453*t829)*var2[4] + (-1.*t4231*t7428*t7440*t7447 + t1000*t4231*t7453 - 1.*t7401*t7428*t7440*t7555 + t3886*t7453*t7555 + t7561 + t7566)*var2[5] + (-1.*t3609*t7428*t7440*t7447 + t1000*t3609*t7453 - 1.*t7401*t7428*t7440*t7503 + t3886*t7453*t7503 + t7510 + t7513)*var2[15]) + var2[3]*((t1746*t56*t7401*t7453 + t1923*t56*t7447*t7453 - 1.*t3075*t56*t7401*t7440*t7597 - 1.*t1180*t56*t7440*t7447*t7597)*var2[3] + (-1.*t3075*t3886*t56*t7453 + t1180*t56*t7412*t7453 + t7478 + t7488 - 1.*t7401*t7412*t7440*t7597 - 1.*t3886*t7440*t7447*t7597)*var2[4] + (-1.*t3075*t4231*t56*t7453 + t1180*t56*t7453*t7555 - 1.*t4231*t7440*t7447*t7597 - 1.*t7401*t7440*t7555*t7597 + t7650 + t7653)*var2[5] + (-1.*t3075*t3609*t56*t7453 + t1180*t56*t7453*t7503 - 1.*t3609*t7440*t7447*t7597 - 1.*t7401*t7440*t7503*t7597 + t7628 + t7634)*var2[15]) + var2[15]*((t3075*t3609*t56*t7453 + t1180*t3716*t56*t7453 + t7628 + t7634 - 1.*t3075*t56*t7401*t7440*t7691 - 1.*t1180*t56*t7440*t7447*t7691)*var2[3] + (t3716*t3886*t7453 + t3609*t7412*t7453 + t7510 + t7513 - 1.*t7401*t7412*t7440*t7691 - 1.*t3886*t7440*t7447*t7691)*var2[4] + (t3716*t4231*t7453 + t3609*t7453*t7555 - 1.*t4231*t7440*t7447*t7691 - 1.*t7401*t7440*t7555*t7691 + t7754 + t7756)*var2[5] + (t3609*t3716*t7453 + t3737*t7401*t7453 + t1408*t7447*t7453 + t3609*t7453*t7503 - 1.*t3609*t7440*t7447*t7691 - 1.*t7401*t7440*t7503*t7691)*var2[15]) + var2[5]*((t3075*t4231*t56*t7453 + t7650 + t7653 - 1.*t3075*t56*t7401*t7440*t7765 - 1.*t1180*t56*t7440*t7447*t7765 + t1180*t56*t7453*t7775)*var2[3] + (t4231*t7412*t7453 + t7561 + t7566 - 1.*t7401*t7412*t7440*t7765 - 1.*t3886*t7440*t7447*t7765 + t3886*t7453*t7775)*var2[4] + (t4231*t7401*t7453 + t2707*t7447*t7453 + t4231*t7453*t7555 - 1.*t4231*t7440*t7447*t7765 - 1.*t7401*t7440*t7555*t7765 + t4231*t7453*t7775)*var2[5] + (t4231*t7453*t7503 + t7754 + t7756 - 1.*t3609*t7440*t7447*t7765 - 1.*t7401*t7440*t7503*t7765 + t3609*t7453*t7775)*var2[15]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "jj_hc_4_func.hh"

namespace SymFunction
{

void jj_hc_4_func_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
