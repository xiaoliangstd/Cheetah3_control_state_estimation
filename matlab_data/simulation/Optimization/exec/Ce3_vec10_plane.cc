/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:53:56 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1136;
  double t567;
  double t753;
  double t1212;
  double t1889;
  double t1903;
  double t2229;
  double t2235;
  double t2236;
  double t2250;
  double t2290;
  double t2293;
  double t1901;
  double t1964;
  double t2121;
  double t1598;
  double t413;
  double t448;
  double t1602;
  double t1647;
  double t1681;
  double t2913;
  double t2927;
  double t2976;
  double t2977;
  double t3107;
  double t3618;
  double t3634;
  double t3650;
  double t3871;
  double t3892;
  double t3895;
  double t3902;
  double t2918;
  double t2929;
  double t2940;
  double t3931;
  double t3943;
  double t3958;
  double t3967;
  double t3973;
  double t3975;
  double t3976;
  double t3756;
  double t3912;
  double t3924;
  double t2755;
  double t2777;
  double t2797;
  double t2857;
  double t2884;
  double t2886;
  double t4374;
  double t4136;
  double t4151;
  double t4154;
  double t791;
  double t1383;
  double t1387;
  double t2223;
  double t2311;
  double t2507;
  double t2514;
  double t2535;
  double t2552;
  double t2641;
  double t2644;
  double t2650;
  double t3960;
  double t4008;
  double t4050;
  double t4131;
  double t4195;
  double t4202;
  double t4219;
  double t4225;
  double t4267;
  double t4832;
  double t4834;
  double t4836;
  double t4279;
  double t4299;
  double t4313;
  double t4378;
  double t4381;
  double t4383;
  double t4409;
  double t4418;
  double t4454;
  double t4488;
  double t4502;
  double t4508;
  double t4529;
  double t4531;
  double t4532;
  double t4533;
  double t4543;
  double t4548;
  double t4565;
  double t4574;
  double t4587;
  double t4605;
  double t4634;
  double t4662;
  double t4666;
  double t4670;
  double t4674;
  double t4679;
  double t4685;
  double t4690;
  double t4725;
  double t4726;
  double t4732;
  double t4742;
  double t4748;
  double t4767;
  double t4768;
  double t4782;
  double t4789;
  double t4929;
  double t4930;
  double t4931;
  double t4939;
  double t4953;
  double t4970;
  double t4980;
  double t4986;
  double t4989;
  double t5019;
  double t5029;
  double t5034;
  double t5121;
  double t5128;
  double t5130;
  double t5131;
  double t5146;
  double t5176;
  double t5177;
  double t5203;
  double t5120;
  double t5214;
  double t5217;
  double t5226;
  double t5229;
  double t5238;
  double t5302;
  double t5303;
  double t5304;
  double t5374;
  double t5379;
  double t5387;
  double t5392;
  double t5394;
  double t5395;
  double t5396;
  double t5400;
  double t5401;
  double t5417;
  double t5421;
  double t5423;
  double t5371;
  double t5411;
  double t5414;
  double t5731;
  double t5738;
  double t5771;
  double t5361;
  double t5364;
  double t5369;
  double t5442;
  double t5443;
  double t5476;
  double t6173;
  double t6188;
  double t6239;
  double t6893;
  double t6895;
  double t6905;
  double t6913;
  double t6916;
  double t6922;
  double t6927;
  double t6931;
  double t6938;
  double t6948;
  double t6949;
  double t7019;
  double t7048;
  double t7049;
  double t7056;
  double t6851;
  double t6880;
  double t6888;
  double t6889;
  double t6939;
  double t6946;
  double t7043;
  double t7044;
  double t7045;
  double t7112;
  double t7113;
  double t7125;
  double t7483;
  double t7484;
  double t7486;
  double t7381;
  double t7383;
  double t7384;
  double t7390;
  double t7403;
  double t7407;
  double t7427;
  double t7429;
  double t7430;
  double t7438;
  double t7440;
  double t7446;
  double t7451;
  double t7453;
  double t7464;
  double t4809;
  double t4814;
  double t4827;
  double t5506;
  double t7683;
  double t7685;
  double t7689;
  double t6078;
  double t6295;
  double t6473;
  double t6648;
  double t6683;
  double t7046;
  double t7086;
  double t7930;
  double t7938;
  double t7944;
  double t7181;
  double t7236;
  double t7273;
  double t7343;
  double t5298;
  double t5306;
  double t5309;
  double t8125;
  double t8127;
  double t8136;
  double t5313;
  double t5320;
  double t5331;
  double t7697;
  double t8121;
  double t8162;
  double t7700;
  double t5701;
  double t5784;
  double t5807;
  double t7675;
  double t7691;
  double t6110;
  double t6127;
  double t6146;
  double t7763;
  double t7776;
  double t6297;
  double t6308;
  double t6309;
  double t7793;
  double t7806;
  double t6482;
  double t6522;
  double t6527;
  double t7849;
  double t7862;
  double t6654;
  double t6658;
  double t6661;
  double t7882;
  double t7887;
  double t6685;
  double t6718;
  double t6748;
  double t7928;
  double t7950;
  double t7047;
  double t7058;
  double t7062;
  double t7976;
  double t7979;
  double t7088;
  double t7092;
  double t7095;
  double t8024;
  double t8025;
  double t7184;
  double t7198;
  double t7201;
  double t8044;
  double t8047;
  double t7237;
  double t7243;
  double t7249;
  double t8067;
  double t8071;
  double t7274;
  double t7275;
  double t7276;
  double t8096;
  double t8097;
  double t7344;
  double t7346;
  double t7347;
  double t8640;
  double t8645;
  double t8647;
  double t8667;
  double t8668;
  double t8769;
  double t8775;
  double t8778;
  double t8783;
  double t8785;
  double t7379;
  double t7380;
  double t7388;
  double t7416;
  double t7431;
  double t7449;
  double t7465;
  double t7470;
  double t7473;
  double t7491;
  double t7497;
  double t7498;
  double t7510;
  double t7513;
  double t7514;
  double t7516;
  double t7518;
  double t7523;
  double t7524;
  double t7527;
  double t7531;
  double t7532;
  double t7534;
  double t7537;
  double t7554;
  double t7562;
  double t7567;
  double t7574;
  double t7575;
  double t7577;
  double t7580;
  double t7582;
  double t7583;
  double t7588;
  double t7589;
  double t7592;
  double t7593;
  double t7595;
  double t7598;
  double t7601;
  double t7602;
  double t7603;
  double t7604;
  double t7606;
  double t7610;
  double t7611;
  double t7612;
  double t7616;
  double t7618;
  double t7619;
  double t7622;
  double t7627;
  double t7629;
  double t7634;
  double t7636;
  double t7641;
  double t7655;
  double t7663;
  double t7666;
  double t7667;
  double t7668;
  double t7677;
  double t8874;
  double t8875;
  double t8880;
  double t7696;
  double t8882;
  double t8886;
  double t8907;
  double t7735;
  double t7736;
  double t7738;
  double t7739;
  double t7751;
  double t7754;
  double t7758;
  double t7762;
  double t7805;
  double t7815;
  double t7817;
  double t7825;
  double t7836;
  double t7853;
  double t7870;
  double t7871;
  double t7872;
  double t7884;
  double t7890;
  double t7891;
  double t7907;
  double t7922;
  double t7924;
  double t7925;
  double t7927;
  double t7953;
  double t7955;
  double t7969;
  double t7973;
  double t9046;
  double t9048;
  double t9050;
  double t9038;
  double t9039;
  double t9042;
  double t7994;
  double t8008;
  double t8011;
  double t8014;
  double t8033;
  double t8038;
  double t8039;
  double t8040;
  double t8048;
  double t8058;
  double t8059;
  double t8062;
  double t8066;
  double t8087;
  double t8089;
  double t8091;
  double t8093;
  double t8099;
  double t8117;
  double t8176;
  double t9158;
  double t9160;
  double t8183;
  double t8187;
  double t8927;
  double t8227;
  double t8236;
  double t8244;
  double t8881;
  double t8257;
  double t8260;
  double t8266;
  double t8979;
  double t8298;
  double t8299;
  double t8304;
  double t8995;
  double t8317;
  double t8318;
  double t8330;
  double t9011;
  double t8346;
  double t8352;
  double t8358;
  double t9027;
  double t8359;
  double t8362;
  double t8380;
  double t9043;
  double t8388;
  double t8392;
  double t8403;
  double t9066;
  double t8404;
  double t8410;
  double t8426;
  double t9096;
  double t8435;
  double t8441;
  double t8463;
  double t9113;
  double t8481;
  double t8484;
  double t8512;
  double t9127;
  double t8531;
  double t8532;
  double t8547;
  double t9140;
  double t8549;
  double t8551;
  double t8575;
  double t9520;
  double t9526;
  double t9529;
  double t9535;
  double t9538;
  double t9539;
  double t9620;
  double t9621;
  double t9603;
  double t9604;
  double t9605;
  double t9612;
  double t9613;
  double t9614;
  double t9647;
  double t9657;
  double t9701;
  double t9703;
  double t9704;
  double t9732;
  double t9735;
  double t9736;
  double t9737;
  double t9716;
  double t9717;
  double t9719;
  double t9745;
  double t9747;
  double t9753;
  double t9731;
  double t9766;
  double t9770;
  double t9623;
  double t9624;
  double t9625;
  double t9626;
  double t9628;
  double t9629;
  double t9630;
  double t9634;
  double t9640;
  double t9801;
  double t9810;
  double t9812;
  double t9813;
  double t9814;
  double t9818;
  double t9819;
  double t9821;
  double t9823;
  double t9824;
  double t9830;
  double t9919;
  double t9930;
  double t9933;
  double t9873;
  double t9874;
  double t9876;
  double t9970;
  double t9972;
  double t9983;
  double t9893;
  double t9895;
  double t9899;
  double t4848;
  double t4850;
  double t4851;
  double t9958;
  double t9959;
  double t9961;
  double t4862;
  double t4863;
  double t4868;
  double t4873;
  double t4878;
  double t4879;
  double t10009;
  double t10010;
  double t10011;
  double t10014;
  double t10018;
  double t10019;
  double t10131;
  double t10132;
  double t10134;
  double t10139;
  double t10142;
  double t10147;
  double t9680;
  double t10307;
  double t10309;
  double t10313;
  double t10322;
  double t10324;
  double t10325;
  double t10157;
  double t10189;
  double t10499;
  double t10500;
  double t10505;
  double t10509;
  double t10511;
  double t10513;
  double t9880;
  double t9882;
  double t10215;
  double t10231;
  double t10237;
  double t10253;
  double t10267;
  double t10270;
  double t10326;
  double t10343;
  double t10638;
  double t10639;
  double t10643;
  double t10648;
  double t10649;
  double t10650;
  double t9891;
  double t9900;
  double t9903;
  double t10375;
  double t10385;
  double t10389;
  double t10419;
  double t10431;
  double t10436;
  double t9516;
  double t9542;
  double t9543;
  double t9544;
  double t9559;
  double t9562;
  double t9563;
  double t9564;
  double t9565;
  double t9566;
  double t9567;
  double t9568;
  double t10734;
  double t10738;
  double t10741;
  double t10727;
  double t10728;
  double t9571;
  double t9576;
  double t9693;
  double t9694;
  double t9695;
  double t9696;
  double t9714;
  double t9715;
  double t9721;
  double t9756;
  double t9727;
  double t9728;
  double t10782;
  double t10783;
  double t10784;
  double t10769;
  double t10774;
  double t10775;
  double t9773;
  double t9776;
  double t9784;
  double t9789;
  double t9800;
  double t10779;
  double t10802;
  double t9843;
  double t9852;
  double t10817;
  double t10819;
  double t10820;
  double t10825;
  double t10827;
  double t10836;
  double t10839;
  double t9885;
  double t9888;
  double t9890;
  double t9905;
  double t9988;
  double t9991;
  double t9992;
  double t9995;
  double t9999;
  double t10006;
  double t10013;
  double t10023;
  double t10025;
  double t10026;
  double t10060;
  double t10066;
  double t10067;
  double t10069;
  double t10074;
  double t10078;
  double t10082;
  double t10281;
  double t10285;
  double t10286;
  double t10289;
  double t10290;
  double t10293;
  double t10294;
  double t10297;
  double t10298;
  double t10301;
  double t10304;
  double t10306;
  double t10888;
  double t10891;
  double t10896;
  double t10898;
  double t10899;
  double t10900;
  double t10361;
  double t10382;
  double t10387;
  double t10414;
  double t10415;
  double t10433;
  double t10611;
  double t10614;
  double t10616;
  double t10618;
  double t10619;
  double t10622;
  double t10623;
  double t10629;
  double t10630;
  double t10631;
  double t10635;
  double t10637;
  double t10902;
  double t10919;
  double t11039;
  double t11041;
  double t11045;
  double t11050;
  double t11055;
  double t11057;
  double t10672;
  double t10939;
  double t10961;
  double t10685;
  double t10686;
  double t10695;
  double t10697;
  double t11008;
  double t11024;
  double t10711;
  double t10714;
  t1136 = Cos(var1[9]);
  t567 = Cos(var1[5]);
  t753 = Sin(var1[9]);
  t1212 = Sin(var1[5]);
  t1889 = Cos(var1[10]);
  t1903 = Sin(var1[10]);
  t2229 = -1.*t1889;
  t2235 = 1. + t2229;
  t2236 = 0.242889*t2235;
  t2250 = 0.202889*t1889;
  t2290 = -0.04*t1903;
  t2293 = t2236 + t2250 + t2290;
  t1901 = -0.04*t1889;
  t1964 = 0.04*t1903;
  t2121 = t1901 + t1964;
  t1598 = Sin(var1[3]);
  t413 = Cos(var1[3]);
  t448 = Sin(var1[4]);
  t1602 = t1136*t567;
  t1647 = -1.*t753*t1212;
  t1681 = t1602 + t1647;
  t2913 = Cos(var1[11]);
  t2927 = Sin(var1[11]);
  t2976 = -1.*t2913;
  t2977 = 1. + t2976;
  t3107 = 0.100689*t2977;
  t3618 = 0.080689*t2913;
  t3634 = -0.16*t2927;
  t3650 = t3107 + t3618 + t3634;
  t3871 = -0.20833*t2977;
  t3892 = -0.36833*t2913;
  t3895 = 0.02*t2927;
  t3902 = t3871 + t3892 + t3895;
  t2918 = t1889*t2913;
  t2929 = -1.*t1903*t2927;
  t2940 = t2918 + t2929;
  t3931 = t2913*t1903;
  t3943 = t1889*t2927;
  t3958 = t3931 + t3943;
  t3967 = 0.242889*t1903;
  t3973 = -1.*t1903*t3650;
  t3975 = t1889*t3902;
  t3976 = t3967 + t3973 + t3975;
  t3756 = t1889*t3650;
  t3912 = t1903*t3902;
  t3924 = t2236 + t3756 + t3912;
  t2755 = t567*t753;
  t2777 = t1136*t1212;
  t2797 = t2755 + t2777;
  t2857 = -1.*t1598*t2797;
  t2884 = t413*t448*t1681;
  t2886 = t2857 + t2884;
  t4374 = Cos(var1[4]);
  t4136 = -1.*t2913*t1903;
  t4151 = -1.*t1889*t2927;
  t4154 = t4136 + t4151;
  t791 = -1.*t567*t753;
  t1383 = -1.*t1136*t1212;
  t1387 = t791 + t1383;
  t2223 = -1.*t1889*t2121;
  t2311 = -1.*t2293*t1903;
  t2507 = t2223 + t2311;
  t2514 = t1889*t2507;
  t2535 = t1889*t2293;
  t2552 = -1.*t2121*t1903;
  t2641 = t2535 + t2552;
  t2644 = t1903*t2641;
  t2650 = t2514 + t2644;
  t3960 = -1.*t3924*t3958;
  t4008 = -1.*t3976*t2940;
  t4050 = t3960 + t4008;
  t4131 = t2940*t4050;
  t4195 = t3976*t4154;
  t4202 = t3924*t2940;
  t4219 = t4195 + t4202;
  t4225 = t3958*t4219;
  t4267 = t4131 + t4225;
  t4832 = t413*t2797;
  t4834 = t1598*t448*t1681;
  t4836 = t4832 + t4834;
  t4279 = t1136*t1889*t567;
  t4299 = -1.*t1889*t753*t1212;
  t4313 = t4279 + t4299;
  t4378 = t4374*t1903;
  t4381 = -1.*t1889*t567*t753;
  t4383 = -1.*t1136*t1889*t1212;
  t4409 = t4381 + t4383;
  t4418 = -1.*t448*t4409;
  t4454 = t4378 + t4418;
  t4488 = -1.*t1136*t567*t1903;
  t4502 = t753*t1903*t1212;
  t4508 = t4488 + t4502;
  t4529 = t1889*t4374;
  t4531 = t567*t753*t1903;
  t4532 = t1136*t1903*t1212;
  t4533 = t4531 + t4532;
  t4543 = -1.*t448*t4533;
  t4548 = t4529 + t4543;
  t4565 = -0.081715*t4154;
  t4574 = -0.11688*t3958;
  t4587 = t4565 + t4574;
  t4605 = t1136*t567*t4154;
  t4634 = -1.*t753*t4154*t1212;
  t4662 = t4605 + t4634;
  t4666 = t4374*t2940;
  t4670 = -1.*t567*t753*t4154;
  t4674 = -1.*t1136*t4154*t1212;
  t4679 = t4670 + t4674;
  t4685 = -1.*t448*t4679;
  t4690 = t4666 + t4685;
  t4725 = t1136*t567*t2940;
  t4726 = -1.*t753*t2940*t1212;
  t4732 = t4725 + t4726;
  t4742 = t4374*t3958;
  t4748 = -1.*t567*t753*t2940;
  t4767 = -1.*t1136*t2940*t1212;
  t4768 = t4748 + t4767;
  t4782 = -1.*t448*t4768;
  t4789 = t4742 + t4782;
  t4929 = -1.*t1903*t448;
  t4930 = -1.*t4374*t4409;
  t4931 = t4929 + t4930;
  t4939 = -1.*t1889*t448;
  t4953 = -1.*t4374*t4533;
  t4970 = t4939 + t4953;
  t4980 = -1.*t2940*t448;
  t4986 = -1.*t4374*t4679;
  t4989 = t4980 + t4986;
  t5019 = -1.*t3958*t448;
  t5029 = -1.*t4374*t4768;
  t5034 = t5019 + t5029;
  t5121 = -1.*t1136;
  t5128 = 1. + t5121;
  t5130 = 0.081715*t5128;
  t5131 = 0.061715*t1136;
  t5146 = t5130 + t5131;
  t5176 = t5146*t567;
  t5177 = 0.02*t753*t1212;
  t5203 = t5176 + t5177;
  t5120 = -0.242889*t448;
  t5214 = -1.*t4374*t5203;
  t5217 = t5120 + t5214;
  t5226 = 0.242889*t448;
  t5229 = t4374*t5203;
  t5238 = t5226 + t5229;
  t5302 = 0.242889*t4374;
  t5303 = -1.*t448*t5203;
  t5304 = t5302 + t5303;
  t5374 = 0.13757*t1136;
  t5379 = -1.*t753*t2121;
  t5387 = t5130 + t5374 + t5379;
  t5392 = t567*t5387;
  t5394 = 0.055855*t753;
  t5395 = t1136*t2121;
  t5396 = t5394 + t5395;
  t5400 = -1.*t5396*t1212;
  t5401 = t5392 + t5400;
  t5417 = t2293*t448;
  t5421 = t4374*t5401;
  t5423 = t5417 + t5421;
  t5371 = -1.*t2293*t448;
  t5411 = -1.*t4374*t5401;
  t5414 = t5371 + t5411;
  t5731 = t4374*t2293;
  t5738 = -1.*t448*t5401;
  t5771 = t5731 + t5738;
  t5361 = t1903*t448;
  t5364 = t4374*t4409;
  t5369 = t5361 + t5364;
  t5442 = t567*t5396;
  t5443 = t5387*t1212;
  t5476 = t5442 + t5443;
  t6173 = t1889*t448;
  t6188 = t4374*t4533;
  t6239 = t6173 + t6188;
  t6893 = 0.11688*t1136;
  t6895 = -1.*t753*t3976;
  t6905 = t5130 + t6893 + t6895;
  t6913 = t567*t6905;
  t6916 = 0.035165*t753;
  t6922 = t1136*t3976;
  t6927 = t6916 + t6922;
  t6931 = -1.*t6927*t1212;
  t6938 = t6913 + t6931;
  t6948 = t3924*t448;
  t6949 = t4374*t6938;
  t7019 = t6948 + t6949;
  t7048 = t4374*t3924;
  t7049 = -1.*t448*t6938;
  t7056 = t7048 + t7049;
  t6851 = t2940*t448;
  t6880 = t4374*t4679;
  t6888 = t6851 + t6880;
  t6889 = -1.*t3924*t448;
  t6939 = -1.*t4374*t6938;
  t6946 = t6889 + t6939;
  t7043 = t567*t6927;
  t7044 = t6905*t1212;
  t7045 = t7043 + t7044;
  t7112 = t3958*t448;
  t7113 = t4374*t4768;
  t7125 = t7112 + t7113;
  t7483 = -1.*t413*t448*t1387;
  t7484 = t1598*t1681;
  t7486 = t7483 + t7484;
  t7381 = -1.*t1136*t567;
  t7383 = t753*t1212;
  t7384 = t7381 + t7383;
  t7390 = -1.*t1136*t1889*t567;
  t7403 = t1889*t753*t1212;
  t7407 = t7390 + t7403;
  t7427 = t1136*t567*t1903;
  t7429 = -1.*t753*t1903*t1212;
  t7430 = t7427 + t7429;
  t7438 = -1.*t1136*t567*t4154;
  t7440 = t753*t4154*t1212;
  t7446 = t7438 + t7440;
  t7451 = -1.*t1136*t567*t2940;
  t7453 = t753*t2940*t1212;
  t7464 = t7451 + t7453;
  t4809 = t1598*t448*t1387;
  t4814 = t413*t1681;
  t4827 = t4809 + t4814;
  t5506 = -1.*t2797*t5476;
  t7683 = -1.*t567*t5396;
  t7685 = -1.*t5387*t1212;
  t7689 = t7683 + t7685;
  t6078 = t4313*t5476;
  t6295 = t2797*t5476;
  t6473 = -1.*t5476*t4508;
  t6648 = -1.*t4313*t5476;
  t6683 = t5476*t4508;
  t7046 = t2797*t7045;
  t7086 = -1.*t7045*t4662;
  t7930 = -1.*t567*t6927;
  t7938 = -1.*t6905*t1212;
  t7944 = t7930 + t7938;
  t7181 = t7045*t4662;
  t7236 = -1.*t7045*t4732;
  t7273 = -1.*t2797*t7045;
  t7343 = t7045*t4732;
  t5298 = -1.*t448*t5238;
  t5306 = -1.*t4374*t5304;
  t5309 = t5298 + t5306;
  t8125 = 0.02*t567*t753;
  t8127 = -1.*t5146*t1212;
  t8136 = t8125 + t8127;
  t5313 = -0.02*t567*t753;
  t5320 = t5146*t1212;
  t5331 = t5313 + t5320;
  t7697 = -1.*t2797*t5401;
  t8121 = Power(t4374,2);
  t8162 = Power(t448,2);
  t7700 = -1.*t1681*t5476;
  t5701 = -1.*t4374*t1681*t5423;
  t5784 = t448*t1681*t5771;
  t5807 = t5506 + t5701 + t5784;
  t7675 = t4313*t5401;
  t7691 = t4409*t5476;
  t6110 = t5369*t5423;
  t6127 = t4454*t5771;
  t6146 = t6078 + t6110 + t6127;
  t7763 = t2797*t5401;
  t7776 = t1681*t5476;
  t6297 = t4374*t1681*t5423;
  t6308 = -1.*t448*t1681*t5771;
  t6309 = t6295 + t6297 + t6308;
  t7793 = -1.*t5476*t4533;
  t7806 = -1.*t5401*t4508;
  t6482 = -1.*t5423*t6239;
  t6522 = -1.*t5771*t4548;
  t6527 = t6473 + t6482 + t6522;
  t7849 = -1.*t4313*t5401;
  t7862 = -1.*t4409*t5476;
  t6654 = -1.*t5369*t5423;
  t6658 = -1.*t4454*t5771;
  t6661 = t6648 + t6654 + t6658;
  t7882 = t5476*t4533;
  t7887 = t5401*t4508;
  t6685 = t5423*t6239;
  t6718 = t5771*t4548;
  t6748 = t6683 + t6685 + t6718;
  t7928 = t2797*t6938;
  t7950 = t1681*t7045;
  t7047 = t4374*t1681*t7019;
  t7058 = -1.*t448*t1681*t7056;
  t7062 = t7046 + t7047 + t7058;
  t7976 = -1.*t7045*t4679;
  t7979 = -1.*t6938*t4662;
  t7088 = -1.*t7019*t6888;
  t7092 = -1.*t7056*t4690;
  t7095 = t7086 + t7088 + t7092;
  t8024 = t7045*t4679;
  t8025 = t6938*t4662;
  t7184 = t7019*t6888;
  t7198 = t7056*t4690;
  t7201 = t7181 + t7184 + t7198;
  t8044 = -1.*t7045*t4768;
  t8047 = -1.*t6938*t4732;
  t7237 = -1.*t7019*t7125;
  t7243 = -1.*t7056*t4789;
  t7249 = t7236 + t7237 + t7243;
  t8067 = -1.*t2797*t6938;
  t8071 = -1.*t1681*t7045;
  t7274 = -1.*t4374*t1681*t7019;
  t7275 = t448*t1681*t7056;
  t7276 = t7273 + t7274 + t7275;
  t8096 = t7045*t4768;
  t8097 = t6938*t4732;
  t7344 = t7019*t7125;
  t7346 = t7056*t4789;
  t7347 = t7343 + t7344 + t7346;
  t8640 = -0.055855*t753;
  t8645 = -1.*t1136*t2121;
  t8647 = t8640 + t8645;
  t8667 = 0.055855*t1136;
  t8668 = t8667 + t5379;
  t8769 = -0.035165*t753;
  t8775 = -1.*t1136*t3976;
  t8778 = t8769 + t8775;
  t8783 = 0.035165*t1136;
  t8785 = t8783 + t6895;
  t7379 = -1.527*t4374*t2650*t1387;
  t7380 = -0.241*t4374*t4267*t1387;
  t7388 = 0.0219*t4374*t7384;
  t7416 = -0.085290585*t1889*t4374*t7407;
  t7431 = 0.085290585*t4374*t1903*t7430;
  t7449 = -0.241*t4374*t4587*t7446;
  t7465 = -0.008474765*t4374*t2940*t7464;
  t7470 = t7379 + t7380 + t7388 + t7416 + t7431 + t7449 + t7465;
  t7473 = -0.5*var2[0]*t7470;
  t7491 = -1.527*t2650*t7486;
  t7497 = -0.241*t4267*t7486;
  t7498 = t1598*t1387;
  t7510 = -1.*t413*t448*t7384;
  t7513 = t7498 + t7510;
  t7514 = 0.0219*t7513;
  t7516 = t1598*t4409;
  t7518 = -1.*t413*t448*t7407;
  t7523 = t7516 + t7518;
  t7524 = -0.085290585*t1889*t7523;
  t7527 = t1598*t4533;
  t7531 = -1.*t413*t448*t7430;
  t7532 = t7527 + t7531;
  t7534 = 0.085290585*t1903*t7532;
  t7537 = t1598*t4679;
  t7554 = -1.*t413*t448*t7446;
  t7562 = t7537 + t7554;
  t7567 = -0.241*t4587*t7562;
  t7574 = t1598*t4768;
  t7575 = -1.*t413*t448*t7464;
  t7577 = t7574 + t7575;
  t7580 = -0.008474765*t2940*t7577;
  t7582 = t7491 + t7497 + t7514 + t7524 + t7534 + t7567 + t7580;
  t7583 = -0.5*var2[2]*t7582;
  t7588 = -1.527*t2650*t4827;
  t7589 = -0.241*t4267*t4827;
  t7592 = t413*t1387;
  t7593 = t1598*t448*t7384;
  t7595 = t7592 + t7593;
  t7598 = 0.0219*t7595;
  t7601 = t413*t4409;
  t7602 = t1598*t448*t7407;
  t7603 = t7601 + t7602;
  t7604 = -0.085290585*t1889*t7603;
  t7606 = t413*t4533;
  t7610 = t1598*t448*t7430;
  t7611 = t7606 + t7610;
  t7612 = 0.085290585*t1903*t7611;
  t7616 = t413*t4679;
  t7618 = t1598*t448*t7446;
  t7619 = t7616 + t7618;
  t7622 = -0.241*t4587*t7619;
  t7627 = t413*t4768;
  t7629 = t1598*t448*t7464;
  t7634 = t7627 + t7629;
  t7636 = -0.008474765*t2940*t7634;
  t7641 = t7588 + t7589 + t7598 + t7604 + t7612 + t7622 + t7636;
  t7655 = -0.5*var2[1]*t7641;
  t7663 = -0.0053192691*t1681;
  t7666 = -1.*t1681*t5401;
  t7667 = t7666 + t5506;
  t7668 = t4409*t7667;
  t7677 = t7407*t5401;
  t8874 = t567*t8668;
  t8875 = t8647*t1212;
  t8880 = t8874 + t8875;
  t7696 = -1.*t1387*t5401;
  t8882 = t567*t8647;
  t8886 = -1.*t8668*t1212;
  t8907 = t8882 + t8886;
  t7735 = t2293*t1903;
  t7736 = t4409*t5401;
  t7738 = t7735 + t7736 + t6078;
  t7739 = t1681*t7738;
  t7751 = t1681*t5401;
  t7754 = t7751 + t6295;
  t7758 = t4533*t7754;
  t7762 = t1387*t5401;
  t7805 = -1.*t5401*t7430;
  t7815 = -1.*t1889*t2293;
  t7817 = -1.*t5401*t4533;
  t7825 = t7815 + t7817 + t6473;
  t7836 = t1681*t7825;
  t7853 = -1.*t7407*t5401;
  t7870 = -1.*t4409*t5401;
  t7871 = t2311 + t7870 + t6648;
  t7872 = t4533*t7871;
  t7884 = t5401*t7430;
  t7890 = t5401*t4533;
  t7891 = t2535 + t7890 + t6683;
  t7907 = t4409*t7891;
  t7922 = t1681*t6938;
  t7924 = t7922 + t7046;
  t7925 = t4679*t7924;
  t7927 = t1387*t6938;
  t7953 = -1.*t3924*t2940;
  t7955 = -1.*t6938*t4679;
  t7969 = t7953 + t7955 + t7086;
  t7973 = t1681*t7969;
  t9046 = t567*t8778;
  t9048 = -1.*t8785*t1212;
  t9050 = t9046 + t9048;
  t9038 = t567*t8785;
  t9039 = t8778*t1212;
  t9042 = t9038 + t9039;
  t7994 = -1.*t6938*t7446;
  t8008 = t6938*t4679;
  t8011 = t4202 + t8008 + t7181;
  t8014 = t4768*t8011;
  t8033 = t6938*t7446;
  t8038 = -1.*t6938*t4768;
  t8039 = t3960 + t8038 + t7236;
  t8040 = t4679*t8039;
  t8048 = -1.*t6938*t7464;
  t8058 = -1.*t1681*t6938;
  t8059 = t8058 + t7273;
  t8062 = t4768*t8059;
  t8066 = -1.*t1387*t6938;
  t8087 = t3924*t3958;
  t8089 = t6938*t4768;
  t8091 = t8087 + t8089 + t7343;
  t8093 = t1681*t8091;
  t8099 = t6938*t7464;
  t8117 = t4374*t1387*t5309;
  t8176 = t5331*t1681;
  t9158 = 0.02*t1136*t1212;
  t9160 = t8125 + t9158;
  t8183 = t4374*t1387*t5238;
  t8187 = -1.*t448*t1387*t5304;
  t8927 = -1.*t2797*t8880;
  t8227 = -1.*t4374*t1387*t5423;
  t8236 = t448*t1387*t5771;
  t8244 = t4374*t7407*t5807;
  t8881 = t4313*t8880;
  t8257 = t4374*t7407*t5423;
  t8260 = -1.*t448*t7407*t5771;
  t8266 = t4374*t1387*t6146;
  t8979 = t2797*t8880;
  t8298 = t4374*t1387*t5423;
  t8299 = -1.*t448*t1387*t5771;
  t8304 = t4374*t7430*t6309;
  t8995 = -1.*t8880*t4508;
  t8317 = -1.*t4374*t7430*t5423;
  t8318 = t448*t7430*t5771;
  t8330 = t4374*t1387*t6527;
  t9011 = -1.*t4313*t8880;
  t8346 = -1.*t4374*t7407*t5423;
  t8352 = t448*t7407*t5771;
  t8358 = t4374*t7430*t6661;
  t9027 = t8880*t4508;
  t8359 = t4374*t7430*t5423;
  t8362 = -1.*t448*t7430*t5771;
  t8380 = t4374*t7407*t6748;
  t9043 = t2797*t9042;
  t8388 = t4374*t1387*t7019;
  t8392 = -1.*t448*t1387*t7056;
  t8403 = t4374*t7446*t7062;
  t9066 = -1.*t9042*t4662;
  t8404 = -1.*t4374*t7446*t7019;
  t8410 = t448*t7446*t7056;
  t8426 = t4374*t1387*t7095;
  t9096 = t9042*t4662;
  t8435 = t4374*t7446*t7019;
  t8441 = -1.*t448*t7446*t7056;
  t8463 = t4374*t7464*t7201;
  t9113 = -1.*t9042*t4732;
  t8481 = -1.*t4374*t7464*t7019;
  t8484 = t448*t7464*t7056;
  t8512 = t4374*t7446*t7249;
  t9127 = -1.*t2797*t9042;
  t8531 = -1.*t4374*t1387*t7019;
  t8532 = t448*t1387*t7056;
  t8547 = t4374*t7464*t7276;
  t9140 = t9042*t4732;
  t8549 = t4374*t7464*t7019;
  t8551 = -1.*t448*t7464*t7056;
  t8575 = t4374*t1387*t7347;
  t9520 = -0.11688*t2940;
  t9526 = -1.*t1889*t2913;
  t9529 = t1903*t2927;
  t9535 = t9526 + t9529;
  t9538 = -0.081715*t9535;
  t9539 = t9520 + t9538;
  t9620 = 0.04*t1889;
  t9621 = t9620 + t1964;
  t9603 = -1.*t1136*t5396*t1903;
  t9604 = t753*t5387*t1903;
  t9605 = t2535 + t9603 + t9604;
  t9612 = -1.*t1136*t1889*t5396;
  t9613 = t1889*t753*t5387;
  t9614 = t9612 + t9613 + t2311;
  t9647 = Power(t1136,2);
  t9657 = Power(t753,2);
  t9701 = -1.*t753*t6927;
  t9703 = -1.*t1136*t6905;
  t9704 = t9701 + t9703;
  t9732 = 0.242889*t1889;
  t9735 = -1.*t1889*t3650;
  t9736 = -1.*t1903*t3902;
  t9737 = t9732 + t9735 + t9736;
  t9716 = -1.*t1136*t6927*t2940;
  t9717 = t753*t6905*t2940;
  t9719 = t3960 + t9716 + t9717;
  t9745 = t1136*t6927*t4154;
  t9747 = -1.*t753*t6905*t4154;
  t9753 = t9745 + t9747 + t4202;
  t9731 = -1.*t3976*t3958;
  t9766 = t3924*t4154;
  t9770 = t3976*t2940;
  t9623 = -1.*t1889*t9621;
  t9624 = t7815 + t9623;
  t9625 = t1889*t9624;
  t9626 = -1.*t1903*t2507;
  t9628 = t1889*t2641;
  t9629 = -1.*t9621*t1903;
  t9630 = t2311 + t9629;
  t9634 = t1903*t9630;
  t9640 = t9625 + t9626 + t9628 + t9634;
  t9801 = t4154*t4050;
  t9810 = -1.*t3976*t4154;
  t9812 = -1.*t9737*t2940;
  t9813 = t9810 + t9731 + t9812 + t7953;
  t9814 = t2940*t9813;
  t9818 = t2940*t4219;
  t9819 = t9737*t4154;
  t9821 = t3976*t9535;
  t9823 = t9819 + t9766 + t9770 + t9821;
  t9824 = t3958*t9823;
  t9830 = t9801 + t9814 + t9818 + t9824;
  t9919 = t1598*t2797;
  t9930 = -1.*t413*t448*t1681;
  t9933 = t9919 + t9930;
  t9873 = t1889*t567*t753;
  t9874 = t1136*t1889*t1212;
  t9876 = t9873 + t9874;
  t9970 = t1598*t4662;
  t9972 = t413*t4690;
  t9983 = t9970 + t9972;
  t9893 = -1.*t567*t753*t9535;
  t9895 = -1.*t1136*t9535*t1212;
  t9899 = t9893 + t9895;
  t4848 = t413*t4313;
  t4850 = -1.*t1598*t4454;
  t4851 = t4848 + t4850;
  t9958 = -1.*t4374*t1903;
  t9959 = -1.*t448*t9876;
  t9961 = t9958 + t9959;
  t4862 = t413*t4662;
  t4863 = -1.*t1598*t4690;
  t4868 = t4862 + t4863;
  t4873 = t413*t4732;
  t4878 = -1.*t1598*t4789;
  t4879 = t4873 + t4878;
  t10009 = t1136*t567*t9535;
  t10010 = -1.*t753*t9535*t1212;
  t10011 = t10009 + t10010;
  t10014 = t4374*t4154;
  t10018 = -1.*t448*t9899;
  t10019 = t10014 + t10018;
  t10131 = -1.*t567*t753*t9621;
  t10132 = -1.*t1136*t9621*t1212;
  t10134 = t10131 + t10132;
  t10139 = t1136*t567*t9621;
  t10142 = -1.*t753*t9621*t1212;
  t10147 = t10139 + t10142;
  t9680 = t1889*t2121;
  t10307 = -1.*t567*t753*t9737;
  t10309 = -1.*t1136*t9737*t1212;
  t10313 = t10307 + t10309;
  t10322 = t1136*t567*t9737;
  t10324 = -1.*t753*t9737*t1212;
  t10325 = t10322 + t10324;
  t10157 = -1.*t2797*t10147;
  t10189 = t4313*t10147;
  t10499 = t2121*t448;
  t10500 = t4374*t10134;
  t10505 = t10499 + t10500;
  t10509 = t4374*t2121;
  t10511 = -1.*t448*t10134;
  t10513 = t10509 + t10511;
  t9880 = t4374*t9876;
  t9882 = t4929 + t9880;
  t10215 = t2797*t10147;
  t10231 = -1.*t7407*t5476;
  t10237 = -1.*t10147*t4508;
  t10253 = -1.*t4313*t10147;
  t10267 = t7407*t5476;
  t10270 = t10147*t4508;
  t10326 = -1.*t2797*t10325;
  t10343 = t10325*t4732;
  t10638 = t3976*t448;
  t10639 = t4374*t10313;
  t10643 = t10638 + t10639;
  t10648 = t4374*t3976;
  t10649 = -1.*t448*t10313;
  t10650 = t10648 + t10649;
  t9891 = t4154*t448;
  t9900 = t4374*t9899;
  t9903 = t9891 + t9900;
  t10375 = t2797*t10325;
  t10385 = -1.*t10325*t4662;
  t10389 = -1.*t7045*t10011;
  t10419 = -1.*t10325*t4732;
  t10431 = t10325*t4662;
  t10436 = t7045*t10011;
  t9516 = -0.0001694953*t4154;
  t9542 = 0.03856*t9539;
  t9543 = t9516 + t9542;
  t9544 = -0.5*var2[11]*t9543;
  t9559 = 0.242889*t2913;
  t9562 = -1.*t2913*t3650;
  t9563 = t3902*t2927;
  t9564 = t9559 + t9562 + t9563;
  t9565 = -0.008474765*t4154*t9564;
  t9566 = t2913*t3902;
  t9567 = -0.242889*t2927;
  t9568 = t3650*t2927;
  t10734 = 0.02*t2913;
  t10738 = 0.16*t2927;
  t10741 = t10734 + t10738;
  t10727 = -0.16*t2913;
  t10728 = t10727 + t3895;
  t9571 = t9566 + t9567 + t9568;
  t9576 = -0.241*t9571*t9539;
  t9693 = t753*t6927;
  t9694 = t1136*t6905;
  t9695 = t9693 + t9694;
  t9696 = -0.01694953*t9695*t4154*t2940;
  t9714 = -0.241*t9704*t2940*t4587;
  t9715 = -0.241*t9704*t3958*t9539;
  t9721 = t4154*t9719;
  t9756 = t2940*t9753;
  t9727 = -1.*t1136*t6927*t4154;
  t9728 = t753*t6905*t4154;
  t10782 = -1.*t1903*t10728;
  t10783 = t1889*t10741;
  t10784 = t10782 + t10783;
  t10769 = t1889*t10728;
  t10774 = t1903*t10741;
  t10775 = t10769 + t10774;
  t9773 = t1136*t6927*t9535;
  t9776 = -1.*t753*t6905*t9535;
  t9784 = t2940*t9719;
  t9789 = t3958*t9753;
  t9800 = t9784 + t9789;
  t10779 = -1.*t10775*t3958;
  t10802 = t10775*t2940;
  t9843 = -0.00059603022245*t4154*t2940;
  t9852 = -0.482*t4587*t9539;
  t10817 = -1.*t10784*t2940;
  t10819 = t9810 + t10779 + t7953 + t10817;
  t10820 = t2940*t10819;
  t10825 = t10784*t4154;
  t10827 = t9766 + t10825 + t10802 + t9821;
  t10836 = t3958*t10827;
  t10839 = t9801 + t9818 + t10820 + t10836;
  t9885 = -0.008474765*t2940*t6888;
  t9888 = -0.241*t9539*t6888;
  t9890 = -0.008474765*t4154*t7125;
  t9905 = -0.241*t4587*t9903;
  t9988 = -0.008474765*t2940*t9983;
  t9991 = -0.241*t9539*t9983;
  t9992 = t1598*t4732;
  t9995 = t413*t4789;
  t9999 = t9992 + t9995;
  t10006 = -0.008474765*t4154*t9999;
  t10013 = t1598*t10011;
  t10023 = t413*t10019;
  t10025 = t10013 + t10023;
  t10026 = -0.241*t4587*t10025;
  t10060 = -0.008474765*t2940*t4868;
  t10066 = -0.241*t9539*t4868;
  t10067 = -0.008474765*t4154*t4879;
  t10069 = t413*t10011;
  t10074 = -1.*t1598*t10019;
  t10078 = t10069 + t10074;
  t10082 = -0.241*t4587*t10078;
  t10281 = t4662*t7924;
  t10285 = t2797*t7969;
  t10286 = t10281 + t10285;
  t10289 = -0.008474765*t4154*t10286;
  t10290 = t4732*t8011;
  t10293 = t4662*t8039;
  t10294 = t10290 + t10293;
  t10297 = t4732*t8059;
  t10298 = t2797*t8091;
  t10301 = t10297 + t10298;
  t10304 = -0.241*t9539*t10301;
  t10306 = t4662*t8059;
  t10888 = -1.*t567*t753*t10784;
  t10891 = -1.*t1136*t10784*t1212;
  t10896 = t10888 + t10891;
  t10898 = t1136*t567*t10784;
  t10899 = -1.*t753*t10784*t1212;
  t10900 = t10898 + t10899;
  t10361 = t10011*t7924;
  t10382 = -1.*t3924*t4154;
  t10387 = -1.*t6938*t9899;
  t10414 = t4662*t8011;
  t10415 = t10011*t8039;
  t10433 = t6938*t9899;
  t10611 = t6888*t7062;
  t10614 = t4374*t1681*t7095;
  t10616 = t10611 + t10614;
  t10618 = -0.008474765*t4154*t10616;
  t10619 = t7125*t7201;
  t10622 = t6888*t7249;
  t10623 = t10619 + t10622;
  t10629 = t7125*t7276;
  t10630 = t4374*t1681*t7347;
  t10631 = t10629 + t10630;
  t10635 = -0.241*t9539*t10631;
  t10637 = t6888*t7276;
  t10902 = -1.*t2797*t10900;
  t10919 = t10900*t4732;
  t11039 = t10775*t448;
  t11041 = t4374*t10896;
  t11045 = t11039 + t11041;
  t11050 = t4374*t10775;
  t11055 = -1.*t448*t10896;
  t11057 = t11050 + t11055;
  t10672 = t9903*t7062;
  t10939 = t2797*t10900;
  t10961 = -1.*t10900*t4662;
  t10685 = -1.*t7019*t9903;
  t10686 = -1.*t7056*t10019;
  t10695 = t6888*t7201;
  t10697 = t9903*t7249;
  t11008 = -1.*t10900*t4732;
  t11024 = t10900*t4662;
  t10711 = t7019*t9903;
  t10714 = t7056*t10019;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-1.527*t2650*t2886 - 0.241*t2886*t4267 - 0.085290585*t1889*(-1.*t1598*t4313 - 1.*t413*t4454) + 0.0219*(-1.*t1598*t1681 + t1387*t413*t448) + 0.085290585*t1903*(-1.*t1598*t4508 - 1.*t413*t4548) - 0.241*t4587*(-1.*t1598*t4662 - 1.*t413*t4690) - 0.008474765*t2940*(-1.*t1598*t4732 - 1.*t413*t4789))*var2[1] - 0.5*(0.085290585*t1903*(t413*t4508 - 1.*t1598*t4548) + 0.0219*t4827 - 1.527*t2650*t4836 - 0.241*t4267*t4836 - 0.085290585*t1889*t4851 - 0.241*t4587*t4868 - 0.008474765*t2940*t4879)*var2[2])*var2[9];
  p_output1[4]=(-0.5*(-0.085290585*t1889*t4454 - 0.0219*t1387*t448 + 1.527*t1681*t2650*t448 + 0.241*t1681*t4267*t448 + 0.085290585*t1903*t4548 - 0.241*t4587*t4690 - 0.008474765*t2940*t4789)*var2[0] - 0.5*(0.0219*t1387*t1598*t4374 - 1.527*t1598*t1681*t2650*t4374 - 0.241*t1598*t1681*t4267*t4374 + 0.085290585*t1598*t1889*t4931 - 0.085290585*t1598*t1903*t4970 + 0.241*t1598*t4587*t4989 + 0.008474765*t1598*t2940*t5034)*var2[1] - 0.5*(-0.0219*t1387*t413*t4374 + 1.527*t1681*t2650*t413*t4374 + 0.241*t1681*t413*t4267*t4374 - 0.085290585*t1889*t413*t4931 + 0.085290585*t1903*t413*t4970 - 0.241*t413*t4587*t4989 - 0.008474765*t2940*t413*t5034)*var2[2] - 0.5*(0.0219*(t1681*t4374*(-1.*t4374*t5217 - 1.*t4374*t5238) + t448*(-1.*t1681*t448*t5217 - 1.*t1681*t448*t5238) - 1.*t1681*t448*t5309 + t4374*(t1681*t4374*t5238 - 1.*t1681*t448*t5304 + t2797*t5331)) + 0.085290585*t1903*(t5369*(t1681*t448*t5414 + t1681*t448*t5423) + t1681*t4374*(t4454*t5414 + t4454*t5423 + t4931*t5771 + t5369*t5771) + t4454*t5807 - 1.*t1681*t448*t6146) - 0.085290585*t1889*((-1.*t1681*t448*t5414 - 1.*t1681*t448*t5423)*t6239 + t1681*t4374*(-1.*t4548*t5414 - 1.*t4548*t5423 - 1.*t4970*t5771 - 1.*t5771*t6239) + t4548*t6309 - 1.*t1681*t448*t6527) - 1.527*t2650*((-1.*t4454*t5414 - 1.*t4454*t5423 - 1.*t4931*t5771 - 1.*t5369*t5771)*t6239 + t5369*(t4548*t5414 + t4548*t5423 + t4970*t5771 + t5771*t6239) + t4548*t6661 + t4454*t6748) - 0.008474765*t2940*(t6888*(-1.*t1681*t448*t6946 - 1.*t1681*t448*t7019) + t1681*t4374*(-1.*t4690*t6946 - 1.*t4690*t7019 - 1.*t4989*t7056 - 1.*t6888*t7056) + t4690*t7062 - 1.*t1681*t448*t7095) - 0.241*t4267*((t4690*t6946 + t4690*t7019 + t4989*t7056 + t6888*t7056)*t7125 + t6888*(-1.*t4789*t6946 - 1.*t4789*t7019 - 1.*t5034*t7056 - 1.*t7056*t7125) + t4789*t7201 + t4690*t7249) - 0.241*t4587*((t1681*t448*t6946 + t1681*t448*t7019)*t7125 + t1681*t4374*(t4789*t6946 + t4789*t7019 + t5034*t7056 + t7056*t7125) + t4789*t7276 - 1.*t1681*t448*t7347))*var2[3])*var2[9];
  p_output1[5]=(t7473 + t7583 + t7655 - 0.5*(0.0219*(t8117 + t448*(t2797*t5203 + t1681*t8121*t8136 + t1681*t8136*t8162 + t8176 + t8183 + t8187)) + 0.085290585*t1903*(t5369*(t7697 + t7700 - 1.*t1681*t7689*t8121 - 1.*t1681*t7689*t8162 + t8227 + t8236) + t8244 + t1681*t4374*(t7675 - 1.*t4454*t448*t7689 + t4374*t5369*t7689 + t7691 + t8257 + t8260) + t8266) - 0.085290585*t1889*(t6239*(t7763 + t7776 + t1681*t7689*t8121 + t1681*t7689*t8162 + t8298 + t8299) + t8304 + t1681*t4374*(t448*t4548*t7689 - 1.*t4374*t6239*t7689 + t7793 + t7806 + t8317 + t8318) + t8330) - 1.527*t2650*(t6239*(t4454*t448*t7689 - 1.*t4374*t5369*t7689 + t7849 + t7862 + t8346 + t8352) + t8358 + t5369*(-1.*t448*t4548*t7689 + t4374*t6239*t7689 + t7882 + t7887 + t8359 + t8362) + t8380) - 0.008474765*t2940*(t6888*(t7928 + t7950 + t1681*t7944*t8121 + t1681*t7944*t8162 + t8388 + t8392) + t8403 + t1681*t4374*(t448*t4690*t7944 - 1.*t4374*t6888*t7944 + t7976 + t7979 + t8404 + t8410) + t8426) - 0.241*t4267*(t7125*(-1.*t448*t4690*t7944 + t4374*t6888*t7944 + t8024 + t8025 + t8435 + t8441) + t8463 + t6888*(t448*t4789*t7944 - 1.*t4374*t7125*t7944 + t8044 + t8047 + t8481 + t8484) + t8512) - 0.241*t4587*(t7125*(t8067 + t8071 - 1.*t1681*t7944*t8121 - 1.*t1681*t7944*t8162 + t8531 + t8532) + t8547 + t1681*t4374*(-1.*t448*t4789*t7944 + t4374*t7125*t7944 + t8096 + t8097 + t8549 + t8551) + t8575))*var2[3] - 0.5*(t7663 + 0.085290585*t1903*(t7668 + t2797*(t7675 + t7677 + t4409*t7689 + t7691) + t4313*(-1.*t1681*t7689 + t7696 + t7697 + t7700) + t7739) - 0.085290585*t1889*(t7758 + t4508*(t1681*t7689 + t7762 + t7763 + t7776) + t2797*(-1.*t4533*t7689 + t7793 + t7805 + t7806) + t7836) - 1.527*t2650*(t4508*(-1.*t4409*t7689 + t7849 + t7853 + t7862) + t7872 + t4313*(t4533*t7689 + t7882 + t7884 + t7887) + t7907) - 0.008474765*t2940*(t7925 + t4662*(t7927 + t7928 + t1681*t7944 + t7950) + t7973 + t2797*(-1.*t4679*t7944 + t7976 + t7979 + t7994)) - 0.241*t4267*(t8014 + t4732*(t4679*t7944 + t8024 + t8025 + t8033) + t8040 + t4662*(-1.*t4768*t7944 + t8044 + t8047 + t8048)) - 0.241*t4587*(t8062 + t4732*(-1.*t1681*t7944 + t8066 + t8067 + t8071) + t8093 + t2797*(t4768*t7944 + t8096 + t8097 + t8099)))*var2[4])*var2[9];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(t7473 + t7583 + t7655 - 0.5*(0.085290585*t1903*(t8244 + t8266 + t1681*t4374*(t7691 + t8257 + t8260 + t8881 - 1.*t4454*t448*t8907 + t4374*t5369*t8907) + t5369*(t7700 + t8227 + t8236 - 1.*t1681*t8121*t8907 - 1.*t1681*t8162*t8907 + t8927)) - 0.085290585*t1889*(t8304 + t8330 + t6239*(t7776 + t8298 + t8299 + t1681*t8121*t8907 + t1681*t8162*t8907 + t8979) + t1681*t4374*(t7793 + t8317 + t8318 + t448*t4548*t8907 - 1.*t4374*t6239*t8907 + t8995)) - 1.527*t2650*(t8358 + t8380 + t6239*(t7862 + t8346 + t8352 + t4454*t448*t8907 - 1.*t4374*t5369*t8907 + t9011) + t5369*(t7882 + t8359 + t8362 - 1.*t448*t4548*t8907 + t4374*t6239*t8907 + t9027)) - 0.008474765*t2940*(t8403 + t8426 + t6888*(t7950 + t8388 + t8392 + t9043 + t1681*t8121*t9050 + t1681*t8162*t9050) + t1681*t4374*(t7976 + t8404 + t8410 + t448*t4690*t9050 - 1.*t4374*t6888*t9050 + t9066)) - 0.241*t4267*(t8463 + t8512 + t7125*(t8024 + t8435 + t8441 - 1.*t448*t4690*t9050 + t4374*t6888*t9050 + t9096) + t6888*(t8044 + t8481 + t8484 + t448*t4789*t9050 - 1.*t4374*t7125*t9050 + t9113)) - 0.241*t4587*(t8547 + t8575 + t7125*(t8071 + t8531 + t8532 - 1.*t1681*t8121*t9050 - 1.*t1681*t8162*t9050 + t9127) + t1681*t4374*(t8096 + t8549 + t8551 - 1.*t448*t4789*t9050 + t4374*t7125*t9050 + t9140)) + 0.0219*(t8117 + t448*(t2797*(t5177 - 0.02*t1136*t567) + t8176 + t8183 + t8187 + t1681*t8121*t9160 + t1681*t8162*t9160)))*var2[3] - 0.5*(t7663 + 0.085290585*t1903*(t7668 + t7739 + t2797*(t7677 + t7691 + t8881 + t4409*t8907) + t4313*(t7696 + t7700 - 1.*t1681*t8907 + t8927)) - 0.085290585*t1889*(t7758 + t7836 + t4508*(t7762 + t7776 + t1681*t8907 + t8979) + t2797*(t7793 + t7805 - 1.*t4533*t8907 + t8995)) - 1.527*t2650*(t7872 + t7907 + t4508*(t7853 + t7862 - 1.*t4409*t8907 + t9011) + t4313*(t7882 + t7884 + t4533*t8907 + t9027)) - 0.008474765*t2940*(t7925 + t7973 + t4662*(t7927 + t7950 + t9043 + t1681*t9050) + t2797*(t7976 + t7994 - 1.*t4679*t9050 + t9066)) - 0.241*t4267*(t8014 + t8040 + t4732*(t8024 + t8033 + t4679*t9050 + t9096) + t4662*(t8044 + t8048 - 1.*t4768*t9050 + t9113)) - 0.241*t4587*(t8062 + t8093 + t4732*(t8066 + t8071 - 1.*t1681*t9050 + t9127) + t2797*(t8096 + t8099 + t4768*t9050 + t9140)))*var2[4] - 0.5*(0.0219*(-0.02*t1136*t753 - 1.*t5146*t753) + 0.085290585*Power(t1903,2)*(-1.*t1136*t5396 + t5387*t753 - 1.*t1136*t8647 - 1.*t753*t8668) - 0.085290585*Power(t1889,2)*(t1136*t5396 - 1.*t5387*t753 + t1136*t8647 + t753*t8668) - 1.527*t2650*(t1889*(t1136*t1889*t5387 + t1889*t5396*t753 + t1889*t753*t8647 - 1.*t1136*t1889*t8668) + t1903*(t1136*t1903*t5387 + t1903*t5396*t753 + t1903*t753*t8647 - 1.*t1136*t1903*t8668)) - 0.241*t3958*t4587*(-1.*t1136*t6927 + t6905*t753 - 1.*t1136*t8778 - 1.*t753*t8785) - 0.008474765*Power(t2940,2)*(t1136*t6927 - 1.*t6905*t753 + t1136*t8778 + t753*t8785) - 0.241*t4267*(t2940*(t1136*t2940*t6905 + t2940*t6927*t753 + t2940*t753*t8778 - 1.*t1136*t2940*t8785) + t3958*(-1.*t1136*t4154*t6905 - 1.*t4154*t6927*t753 - 1.*t4154*t753*t8778 + t1136*t4154*t8785)))*var2[5])*var2[9];
  p_output1[10]=var2[9]*(t9544 - 0.5*(0.085290585*t1903*t5369 - 1.527*t1681*t4374*t9640 - 0.241*t1681*t4374*t9830 + 0.085290585*t1903*t9882 + t9885 + t9888 + t9890 + t9905)*var2[0] - 0.5*(t10060 + t10066 + t10067 + t10082 + 0.085290585*t1903*t4851 - 1.527*t4836*t9640 - 0.241*t4836*t9830 + 0.085290585*t1903*(t413*t7407 - 1.*t1598*t9961))*var2[1] - 0.5*(t10006 + t10026 + 0.085290585*t1903*(t1598*t4313 + t413*t4454) - 1.527*t9640*t9933 - 0.241*t9830*t9933 + 0.085290585*t1903*(t1598*t7407 + t413*t9961) + t9988 + t9991)*var2[2] - 0.5*(t10618 + t10635 + 0.085290585*t1889*(t5369*t5807 + t1681*t4374*t6146) + 0.085290585*t1903*(t6239*t6309 + t1681*t4374*t6527) + 0.085290585*t1903*((t10157 - 1.*t10505*t1681*t4374 + t10513*t1681*t448)*t5369 + t5807*t6239 + t1681*t4374*(t10189 + t10513*t4454 + t10505*t5369 + t6683 + t6685 + t6718)) - 0.008474765*t2940*(t10672 + (t10375 + t10643*t1681*t4374 - 1.*t10650*t1681*t448)*t6888 + t1681*t4374*(t10385 + t10389 + t10685 + t10686 - 1.*t10650*t4690 - 1.*t10643*t6888)) - 0.241*t4267*(t10695 + t10697 + (t10431 + t10436 + t10711 + t10714 + t10650*t4690 + t10643*t6888)*t7125 + t6888*(t10419 - 1.*t10650*t4789 + t7086 + t7088 + t7092 - 1.*t10643*t7125)) - 0.241*t4587*(t10637 + (t10326 - 1.*t10643*t1681*t4374 + t10650*t1681*t448)*t7125 + t1681*t4374*(t10343 + t10650*t4789 + t10643*t7125 + t7181 + t7184 + t7198)) - 1.527*(t6239*t6661 + t5369*t6748)*t9640 - 0.241*t10623*t9830 - 0.085290585*t1889*((t10215 + t10505*t1681*t4374 - 1.*t10513*t1681*t448)*t6239 + t6309*t9882 + t1681*t4374*(t10231 + t10237 - 1.*t10513*t4548 - 1.*t10505*t6239 - 1.*t5423*t9882 - 1.*t5771*t9961)) - 1.527*t2650*(t6239*(t10253 - 1.*t10513*t4454 - 1.*t10505*t5369 + t6473 + t6482 + t6522) + t6239*t6748 + t6661*t9882 + t5369*(t10267 + t10270 + t10513*t4548 + t10505*t6239 + t5423*t9882 + t5771*t9961)))*var2[3] - 0.5*(t10289 + t10304 - 0.008474765*t2940*(t10361 + (t10375 + t10313*t1681)*t4662 + t2797*(t10382 + t10385 + t10387 + t10389 + t4008 - 1.*t10313*t4679)) + 0.085290585*t1889*(t4313*t7667 + t2797*t7738) + 0.085290585*t1903*(t4508*t7754 + t2797*t7825) + 0.085290585*t1903*((t10157 - 1.*t10134*t1681)*t4313 + t4508*t7667 + t2797*(t10189 + t1903*t2121 + t2535 + t10134*t4409 + t6683 + t7890)) - 0.241*t4587*(t10306 + (t10326 - 1.*t10313*t1681)*t4732 + t2797*(t10343 + t3958*t3976 + t4202 + t10313*t4768 + t7181 + t8008)) - 1.527*(t4508*t7871 + t4313*t7891)*t9640 - 0.241*t4267*(t10414 + t10415 + t4662*(t10419 - 1.*t10313*t4768 + t7086 + t7953 + t7955 + t9731) + t4732*(t10431 + t10433 + t10436 + t10313*t4679 + t9766 + t9770)) - 0.241*t10294*t9830 - 0.085290585*t1889*((t10215 + t10134*t1681)*t4508 + t7407*t7754 + t2797*(t10231 + t10237 + t2223 - 1.*t10134*t4533 + t7735 - 1.*t5401*t9876)) - 1.527*t2650*(t4508*(t10253 + t2552 - 1.*t10134*t4409 + t6473 + t7815 + t7817) + t7407*t7871 + t4508*t7891 + t4313*(t10267 + t10270 + t2311 + t10134*t4533 + t9680 + t5401*t9876)))*var2[4] - 0.5*(0.17058117*t1889*t1903*(-1.*t1136*t5387 - 1.*t5396*t753) + 0.17058117*t1889*t1903*(t1136*t5387 + t5396*t753) - 1.527*(t1903*t9605 + t1889*t9614)*t9640 - 1.527*t2650*(t1889*t9605 - 1.*t1903*t9614 + t1889*(t2552 + t1136*t1903*t5396 - 1.*t1903*t5387*t753 + t7815 - 1.*t1889*t9621*t9647 - 1.*t1889*t9621*t9657) + t1903*(t2311 + t9612 + t9613 - 1.*t1903*t9621*t9647 - 1.*t1903*t9621*t9657 + t9680)) + t9696 + t9714 + t9715 - 0.241*t4267*(t9721 + t2940*(t7953 + t9727 + t9728 + t9731 - 1.*t2940*t9647*t9737 - 1.*t2940*t9657*t9737) + t9756 + t3958*(t4154*t9647*t9737 + t4154*t9657*t9737 + t9766 + t9770 + t9773 + t9776)) - 0.241*t9800*t9830)*var2[5] - 0.5*(-3.054*t2650*t9640 - 0.482*t4267*t9830 + t9843 + t9852)*var2[9] - 0.5*(-0.0034116234*t1889 + 0.0034116234*t1903 + t9565 + t9576)*var2[10]);
  p_output1[11]=var2[9]*(t9544 - 0.5*(-0.241*t10839*t1681*t4374 + t9885 + t9888 + t9890 + t9905)*var2[0] - 0.5*(t10060 + t10066 + t10067 + t10082 - 0.241*t10839*t4836)*var2[1] - 0.5*(t10006 + t10026 - 0.241*t10839*t9933 + t9988 + t9991)*var2[2] - 0.5*(t10618 + t10635 - 0.241*t10623*t10839 - 0.008474765*t2940*(t10672 + (t10939 + t11045*t1681*t4374 - 1.*t11057*t1681*t448)*t6888 + t1681*t4374*(t10389 + t10685 + t10686 + t10961 - 1.*t11057*t4690 - 1.*t11045*t6888)) - 0.241*t4267*(t10695 + t10697 + (t10436 + t10711 + t10714 + t11024 + t11057*t4690 + t11045*t6888)*t7125 + t6888*(t11008 - 1.*t11057*t4789 + t7086 + t7088 + t7092 - 1.*t11045*t7125)) - 0.241*t4587*(t10637 + (t10902 - 1.*t11045*t1681*t4374 + t11057*t1681*t448)*t7125 + t1681*t4374*(t10919 + t11057*t4789 + t11045*t7125 + t7181 + t7184 + t7198)))*var2[3] - 0.5*(t10289 + t10304 - 0.241*t10294*t10839 - 0.008474765*t2940*(t10361 + (t10939 + t10896*t1681)*t4662 + t2797*(t10382 + t10387 + t10389 + t10961 - 1.*t10775*t2940 - 1.*t10896*t4679)) - 0.241*t4587*(t10306 + (t10902 - 1.*t10896*t1681)*t4732 + t2797*(t10919 + t10775*t3958 + t4202 + t10896*t4768 + t7181 + t8008)) - 0.241*t4267*(t10414 + t10415 + t4662*(t10779 + t11008 - 1.*t10896*t4768 + t7086 + t7953 + t7955) + t4732*(t10433 + t10436 + t10802 + t11024 + t10896*t4679 + t9766)))*var2[4] - 0.5*(t9696 + t9714 + t9715 - 0.241*t4267*(t9721 + t2940*(t10779 + t7953 - 1.*t10784*t2940*t9647 - 1.*t10784*t2940*t9657 + t9727 + t9728) + t9756 + t3958*(t10802 + t10784*t4154*t9647 + t10784*t4154*t9657 + t9766 + t9773 + t9776)) - 0.241*t10839*t9800)*var2[5] - 0.5*(-0.482*t10839*t4267 + t9843 + t9852)*var2[9] - 0.5*(-0.241*(-0.242889*t2913 + t10741*t2913 + t10728*t2927 + t2913*t3650 - 1.*t2927*t3902)*t4587 + t9565 - 0.008474765*t2940*(-1.*t10728*t2913 + t10741*t2927 + t9566 + t9567 + t9568) + t9576)*var2[10]);
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec10_plane.hh"

namespace SymFunction
{

void Ce3_vec10_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
