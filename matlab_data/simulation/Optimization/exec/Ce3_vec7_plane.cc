/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:53:45 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t182;
  double t94;
  double t168;
  double t184;
  double t223;
  double t301;
  double t22;
  double t66;
  double t267;
  double t268;
  double t279;
  double t397;
  double t564;
  double t566;
  double t573;
  double t583;
  double t590;
  double t592;
  double t547;
  double t552;
  double t557;
  double t377;
  double t498;
  double t505;
  double t507;
  double t508;
  double t530;
  double t542;
  double t774;
  double t794;
  double t814;
  double t818;
  double t823;
  double t830;
  double t836;
  double t839;
  double t857;
  double t865;
  double t876;
  double t883;
  double t793;
  double t800;
  double t809;
  double t895;
  double t899;
  double t902;
  double t920;
  double t940;
  double t963;
  double t971;
  double t848;
  double t887;
  double t892;
  double t1003;
  double t1005;
  double t1009;
  double t178;
  double t196;
  double t198;
  double t304;
  double t309;
  double t311;
  double t328;
  double t338;
  double t347;
  double t356;
  double t399;
  double t405;
  double t558;
  double t593;
  double t594;
  double t599;
  double t608;
  double t609;
  double t654;
  double t667;
  double t672;
  double t690;
  double t691;
  double t702;
  double t717;
  double t723;
  double t725;
  double t731;
  double t737;
  double t760;
  double t1442;
  double t1445;
  double t1448;
  double t908;
  double t981;
  double t998;
  double t999;
  double t1019;
  double t1029;
  double t1030;
  double t1044;
  double t1049;
  double t1067;
  double t1071;
  double t1073;
  double t1078;
  double t1089;
  double t1119;
  double t1133;
  double t1149;
  double t1150;
  double t1151;
  double t1155;
  double t1161;
  double t1200;
  double t1211;
  double t1214;
  double t1225;
  double t1226;
  double t1228;
  double t1239;
  double t1250;
  double t1253;
  double t1620;
  double t1626;
  double t1628;
  double t1639;
  double t1641;
  double t1646;
  double t1666;
  double t1667;
  double t1669;
  double t1674;
  double t1677;
  double t1688;
  double t1830;
  double t1832;
  double t1834;
  double t1838;
  double t1841;
  double t1852;
  double t1859;
  double t1864;
  double t1829;
  double t1866;
  double t1867;
  double t1870;
  double t1874;
  double t1875;
  double t1911;
  double t1913;
  double t1915;
  double t1973;
  double t1977;
  double t1981;
  double t1985;
  double t1986;
  double t1988;
  double t2018;
  double t2023;
  double t2036;
  double t2085;
  double t2113;
  double t2116;
  double t2143;
  double t2151;
  double t2161;
  double t2054;
  double t2063;
  double t2066;
  double t2193;
  double t2202;
  double t2204;
  double t1982;
  double t1995;
  double t1998;
  double t2300;
  double t2305;
  double t2312;
  double t2588;
  double t2592;
  double t2597;
  double t2598;
  double t2599;
  double t2601;
  double t2603;
  double t2606;
  double t2608;
  double t2628;
  double t2629;
  double t2632;
  double t2701;
  double t2710;
  double t2716;
  double t2669;
  double t2676;
  double t2677;
  double t2732;
  double t2734;
  double t2741;
  double t2613;
  double t2622;
  double t2624;
  double t2851;
  double t2853;
  double t2856;
  double t3148;
  double t3152;
  double t3153;
  double t3160;
  double t3166;
  double t3179;
  double t3184;
  double t3189;
  double t3191;
  double t1310;
  double t1352;
  double t1359;
  double t3212;
  double t3214;
  double t3224;
  double t3231;
  double t3236;
  double t3242;
  double t3468;
  double t3473;
  double t3482;
  double t2014;
  double t3641;
  double t3655;
  double t3659;
  double t2259;
  double t2336;
  double t2403;
  double t2498;
  double t2538;
  double t2724;
  double t4046;
  double t4052;
  double t4057;
  double t2757;
  double t2805;
  double t2887;
  double t3015;
  double t3045;
  double t1906;
  double t1922;
  double t1925;
  double t1934;
  double t1936;
  double t1942;
  double t4347;
  double t4349;
  double t4352;
  double t2070;
  double t2120;
  double t2130;
  double t3692;
  double t4335;
  double t4358;
  double t3703;
  double t3636;
  double t3667;
  double t2272;
  double t2273;
  double t2277;
  double t2349;
  double t2366;
  double t2368;
  double t3773;
  double t3790;
  double t3835;
  double t3848;
  double t2404;
  double t2414;
  double t2422;
  double t2501;
  double t2509;
  double t2515;
  double t3888;
  double t3896;
  double t3978;
  double t3984;
  double t2540;
  double t2543;
  double t2555;
  double t2742;
  double t2747;
  double t2751;
  double t4036;
  double t4069;
  double t4088;
  double t4097;
  double t2761;
  double t2770;
  double t2776;
  double t4149;
  double t4152;
  double t2808;
  double t2829;
  double t2832;
  double t4180;
  double t4191;
  double t2888;
  double t2897;
  double t2898;
  double t3016;
  double t3018;
  double t3021;
  double t4242;
  double t4271;
  double t4282;
  double t4294;
  double t3055;
  double t3063;
  double t3064;
  double t4900;
  double t4901;
  double t4914;
  double t4874;
  double t4875;
  double t4877;
  double t4883;
  double t4884;
  double t4888;
  double t4920;
  double t4921;
  double t4925;
  double t4946;
  double t4948;
  double t4951;
  double t5045;
  double t5046;
  double t5047;
  double t5082;
  double t5084;
  double t5085;
  double t5124;
  double t5126;
  double t5127;
  double t3614;
  double t3623;
  double t5178;
  double t5179;
  double t5180;
  double t5185;
  double t5186;
  double t3726;
  double t3730;
  double t3740;
  double t3763;
  double t3769;
  double t3801;
  double t3807;
  double t3811;
  double t3936;
  double t3938;
  double t3954;
  double t3962;
  double t4025;
  double t4028;
  double t5285;
  double t5287;
  double t5275;
  double t5278;
  double t5282;
  double t4113;
  double t4121;
  double t4126;
  double t4166;
  double t4167;
  double t4207;
  double t4208;
  double t4226;
  double t4233;
  double t4306;
  double t4308;
  double t4312;
  double t5405;
  double t5410;
  double t5193;
  double t5199;
  double t5181;
  double t5188;
  double t5219;
  double t5225;
  double t5231;
  double t5235;
  double t5253;
  double t5255;
  double t5263;
  double t5265;
  double t5284;
  double t5289;
  double t5292;
  double t5297;
  double t5305;
  double t5308;
  double t5316;
  double t5325;
  double t5341;
  double t5346;
  double t5352;
  double t5355;
  double t5830;
  double t5831;
  double t5834;
  double t5836;
  double t5837;
  double t5838;
  double t5909;
  double t5911;
  double t5982;
  double t5989;
  double t5991;
  double t5996;
  double t5912;
  double t5916;
  double t5923;
  double t5932;
  double t5934;
  double t5939;
  double t5940;
  double t5941;
  double t5942;
  double t6085;
  double t6086;
  double t6088;
  double t6094;
  double t6095;
  double t6096;
  double t6126;
  double t6142;
  double t6193;
  double t6194;
  double t6195;
  double t5979;
  double t6008;
  double t6012;
  double t6199;
  double t6205;
  double t6206;
  double t6240;
  double t6244;
  double t6249;
  double t5976;
  double t5978;
  double t5997;
  double t6002;
  double t6004;
  double t6006;
  double t6007;
  double t6013;
  double t6019;
  double t6020;
  double t6026;
  double t5001;
  double t5007;
  double t5009;
  double t6380;
  double t6381;
  double t6393;
  double t5962;
  double t5965;
  double t5966;
  double t6317;
  double t6321;
  double t6340;
  double t1399;
  double t1403;
  double t1410;
  double t1517;
  double t1542;
  double t1544;
  double t1561;
  double t1563;
  double t1577;
  double t6437;
  double t6438;
  double t6440;
  double t6443;
  double t6444;
  double t6445;
  double t6592;
  double t6595;
  double t6603;
  double t6614;
  double t6616;
  double t6620;
  double t6157;
  double t6811;
  double t6813;
  double t6814;
  double t6818;
  double t6823;
  double t6824;
  double t6621;
  double t6643;
  double t6985;
  double t6986;
  double t6987;
  double t6992;
  double t6997;
  double t7002;
  double t5894;
  double t5896;
  double t6660;
  double t6672;
  double t6675;
  double t6704;
  double t6714;
  double t6720;
  double t6825;
  double t6839;
  double t7126;
  double t7131;
  double t7133;
  double t7120;
  double t7122;
  double t7124;
  double t6849;
  double t5961;
  double t5968;
  double t5969;
  double t6869;
  double t6884;
  double t6912;
  double t6920;
  double t6923;
  double t5829;
  double t5840;
  double t5841;
  double t5842;
  double t5852;
  double t5866;
  double t5867;
  double t5868;
  double t5869;
  double t5870;
  double t5871;
  double t5873;
  double t7250;
  double t7251;
  double t7253;
  double t7246;
  double t7248;
  double t5880;
  double t5886;
  double t5955;
  double t5957;
  double t5959;
  double t5970;
  double t7293;
  double t7296;
  double t7297;
  double t7284;
  double t7286;
  double t7288;
  double t6182;
  double t6183;
  double t6184;
  double t6192;
  double t6196;
  double t6198;
  double t6215;
  double t6250;
  double t6224;
  double t6230;
  double t7291;
  double t7316;
  double t6265;
  double t6268;
  double t6282;
  double t6284;
  double t6285;
  double t7298;
  double t7301;
  double t7306;
  double t7312;
  double t7317;
  double t7319;
  double t7321;
  double t6299;
  double t6304;
  double t6400;
  double t6407;
  double t6415;
  double t6419;
  double t6425;
  double t6435;
  double t6442;
  double t6446;
  double t6447;
  double t6451;
  double t6492;
  double t6506;
  double t6509;
  double t6512;
  double t6513;
  double t6514;
  double t6523;
  double t6759;
  double t6763;
  double t6769;
  double t6772;
  double t6773;
  double t6775;
  double t6790;
  double t6796;
  double t6797;
  double t6807;
  double t6808;
  double t6810;
  double t7392;
  double t7395;
  double t7402;
  double t7408;
  double t7419;
  double t7422;
  double t6852;
  double t6855;
  double t6876;
  double t6902;
  double t6904;
  double t6921;
  double t7114;
  double t7116;
  double t7117;
  double t7118;
  double t7152;
  double t7153;
  double t7155;
  double t7158;
  double t7161;
  double t7162;
  double t7171;
  double t7119;
  double t7423;
  double t7436;
  double t7564;
  double t7565;
  double t7566;
  double t7548;
  double t7558;
  double t7560;
  double t7454;
  double t7180;
  double t7479;
  double t7187;
  double t7192;
  double t7199;
  double t7208;
  double t7505;
  double t7522;
  double t7213;
  double t7214;
  t182 = Cos(var1[5]);
  t94 = Cos(var1[6]);
  t168 = Sin(var1[5]);
  t184 = Sin(var1[6]);
  t223 = Sin(var1[3]);
  t301 = Cos(var1[7]);
  t22 = Cos(var1[3]);
  t66 = Sin(var1[4]);
  t267 = t182*t94;
  t268 = t168*t184;
  t279 = t267 + t268;
  t397 = Sin(var1[7]);
  t564 = -1.*t301;
  t566 = 1. + t564;
  t573 = 0.242889*t566;
  t583 = 0.202889*t301;
  t590 = -0.04*t397;
  t592 = t573 + t583 + t590;
  t547 = -0.04*t301;
  t552 = 0.04*t397;
  t557 = t547 + t552;
  t377 = Cos(var1[4]);
  t498 = t94*t168;
  t505 = -1.*t182*t184;
  t507 = t498 + t505;
  t508 = -1.*t223*t507;
  t530 = t22*t66*t279;
  t542 = t508 + t530;
  t774 = Cos(var1[8]);
  t794 = Sin(var1[8]);
  t814 = -1.*t774;
  t818 = 1. + t814;
  t823 = 0.100689*t818;
  t830 = 0.080689*t774;
  t836 = -0.16*t794;
  t839 = t823 + t830 + t836;
  t857 = -0.20833*t818;
  t865 = -0.36833*t774;
  t876 = 0.02*t794;
  t883 = t857 + t865 + t876;
  t793 = t301*t774;
  t800 = -1.*t397*t794;
  t809 = t793 + t800;
  t895 = t774*t397;
  t899 = t301*t794;
  t902 = t895 + t899;
  t920 = 0.242889*t397;
  t940 = -1.*t397*t839;
  t963 = t301*t883;
  t971 = t920 + t940 + t963;
  t848 = t301*t839;
  t887 = t397*t883;
  t892 = t573 + t848 + t887;
  t1003 = -1.*t774*t397;
  t1005 = -1.*t301*t794;
  t1009 = t1003 + t1005;
  t178 = -1.*t94*t168;
  t196 = t182*t184;
  t198 = t178 + t196;
  t304 = t182*t94*t301;
  t309 = t301*t168*t184;
  t311 = t304 + t309;
  t328 = -1.*t94*t301*t168;
  t338 = t182*t301*t184;
  t347 = t328 + t338;
  t356 = -1.*t66*t347;
  t399 = t377*t397;
  t405 = t356 + t399;
  t558 = -1.*t301*t557;
  t593 = -1.*t592*t397;
  t594 = t558 + t593;
  t599 = -1.*t301*t594;
  t608 = t301*t592;
  t609 = -1.*t557*t397;
  t654 = t608 + t609;
  t667 = -1.*t397*t654;
  t672 = t599 + t667;
  t690 = -1.*t182*t94*t397;
  t691 = -1.*t168*t184*t397;
  t702 = t690 + t691;
  t717 = t377*t301;
  t723 = t94*t168*t397;
  t725 = -1.*t182*t184*t397;
  t731 = t723 + t725;
  t737 = -1.*t66*t731;
  t760 = t717 + t737;
  t1442 = t22*t507;
  t1445 = t223*t66*t279;
  t1448 = t1442 + t1445;
  t908 = -1.*t892*t902;
  t981 = -1.*t971*t809;
  t998 = t908 + t981;
  t999 = -1.*t809*t998;
  t1019 = t971*t1009;
  t1029 = t892*t809;
  t1030 = t1019 + t1029;
  t1044 = -1.*t902*t1030;
  t1049 = t999 + t1044;
  t1067 = -0.081715*t1009;
  t1071 = -0.11459*t902;
  t1073 = t1067 + t1071;
  t1078 = t182*t94*t1009;
  t1089 = t168*t184*t1009;
  t1119 = t1078 + t1089;
  t1133 = t377*t809;
  t1149 = -1.*t94*t168*t1009;
  t1150 = t182*t184*t1009;
  t1151 = t1149 + t1150;
  t1155 = -1.*t66*t1151;
  t1161 = t1133 + t1155;
  t1200 = t182*t94*t809;
  t1211 = t168*t184*t809;
  t1214 = t1200 + t1211;
  t1225 = t377*t902;
  t1226 = -1.*t94*t168*t809;
  t1228 = t182*t184*t809;
  t1239 = t1226 + t1228;
  t1250 = -1.*t66*t1239;
  t1253 = t1225 + t1250;
  t1620 = -1.*t377*t347;
  t1626 = -1.*t66*t397;
  t1628 = t1620 + t1626;
  t1639 = -1.*t301*t66;
  t1641 = -1.*t377*t731;
  t1646 = t1639 + t1641;
  t1666 = -1.*t66*t809;
  t1667 = -1.*t377*t1151;
  t1669 = t1666 + t1667;
  t1674 = -1.*t66*t902;
  t1677 = -1.*t377*t1239;
  t1688 = t1674 + t1677;
  t1830 = -1.*t94;
  t1832 = 1. + t1830;
  t1834 = -0.081715*t1832;
  t1838 = -0.061715*t94;
  t1841 = t1834 + t1838;
  t1852 = t182*t1841;
  t1859 = 0.02*t168*t184;
  t1864 = t1852 + t1859;
  t1829 = -0.242889*t66;
  t1866 = -1.*t377*t1864;
  t1867 = t1829 + t1866;
  t1870 = 0.242889*t66;
  t1874 = t377*t1864;
  t1875 = t1870 + t1874;
  t1911 = 0.242889*t377;
  t1913 = -1.*t66*t1864;
  t1915 = t1911 + t1913;
  t1973 = 0.053565*t184;
  t1977 = t94*t557;
  t1981 = t1973 + t1977;
  t1985 = -0.13528*t94;
  t1986 = t184*t557;
  t1988 = t1834 + t1985 + t1986;
  t2018 = -1.*t168*t1981;
  t2023 = t182*t1988;
  t2036 = t2018 + t2023;
  t2085 = t377*t2036;
  t2113 = t66*t592;
  t2116 = t2085 + t2113;
  t2143 = -1.*t377*t2036;
  t2151 = -1.*t66*t592;
  t2161 = t2143 + t2151;
  t2054 = -1.*t66*t2036;
  t2063 = t377*t592;
  t2066 = t2054 + t2063;
  t2193 = t377*t347;
  t2202 = t66*t397;
  t2204 = t2193 + t2202;
  t1982 = t182*t1981;
  t1995 = t168*t1988;
  t1998 = t1982 + t1995;
  t2300 = t301*t66;
  t2305 = t377*t731;
  t2312 = t2300 + t2305;
  t2588 = 0.032875*t184;
  t2592 = t94*t971;
  t2597 = t2588 + t2592;
  t2598 = -1.*t168*t2597;
  t2599 = -0.11459*t94;
  t2601 = t184*t971;
  t2603 = t1834 + t2599 + t2601;
  t2606 = t182*t2603;
  t2608 = t2598 + t2606;
  t2628 = t377*t2608;
  t2629 = t66*t892;
  t2632 = t2628 + t2629;
  t2701 = t182*t2597;
  t2710 = t168*t2603;
  t2716 = t2701 + t2710;
  t2669 = t66*t809;
  t2676 = t377*t1151;
  t2677 = t2669 + t2676;
  t2732 = -1.*t66*t2608;
  t2734 = t377*t892;
  t2741 = t2732 + t2734;
  t2613 = -1.*t377*t2608;
  t2622 = -1.*t66*t892;
  t2624 = t2613 + t2622;
  t2851 = t66*t902;
  t2853 = t377*t1239;
  t2856 = t2851 + t2853;
  t3148 = -1.*t182*t94;
  t3152 = -1.*t168*t184;
  t3153 = t3148 + t3152;
  t3160 = -1.*t182*t94*t301;
  t3166 = -1.*t301*t168*t184;
  t3179 = t3160 + t3166;
  t3184 = t182*t94*t397;
  t3189 = t168*t184*t397;
  t3191 = t3184 + t3189;
  t1310 = t223*t66*t198;
  t1352 = t22*t279;
  t1359 = t1310 + t1352;
  t3212 = -1.*t182*t94*t1009;
  t3214 = -1.*t168*t184*t1009;
  t3224 = t3212 + t3214;
  t3231 = -1.*t182*t94*t809;
  t3236 = -1.*t168*t184*t809;
  t3242 = t3231 + t3236;
  t3468 = -1.*t22*t66*t198;
  t3473 = t223*t279;
  t3482 = t3468 + t3473;
  t2014 = -1.*t507*t1998;
  t3641 = -1.*t182*t1981;
  t3655 = -1.*t168*t1988;
  t3659 = t3641 + t3655;
  t2259 = t311*t1998;
  t2336 = t507*t1998;
  t2403 = -1.*t1998*t702;
  t2498 = -1.*t311*t1998;
  t2538 = t1998*t702;
  t2724 = t507*t2716;
  t4046 = -1.*t182*t2597;
  t4052 = -1.*t168*t2603;
  t4057 = t4046 + t4052;
  t2757 = -1.*t2716*t1119;
  t2805 = t2716*t1119;
  t2887 = -1.*t2716*t1214;
  t3015 = -1.*t507*t2716;
  t3045 = t2716*t1214;
  t1906 = -1.*t66*t1875;
  t1922 = -1.*t377*t1915;
  t1925 = t1906 + t1922;
  t1934 = t1841*t168;
  t1936 = -0.02*t182*t184;
  t1942 = t1934 + t1936;
  t4347 = -1.*t1841*t168;
  t4349 = 0.02*t182*t184;
  t4352 = t4347 + t4349;
  t2070 = t66*t279*t2066;
  t2120 = -1.*t377*t279*t2116;
  t2130 = t2014 + t2070 + t2120;
  t3692 = -1.*t507*t2036;
  t4335 = Power(t377,2);
  t4358 = Power(t66,2);
  t3703 = -1.*t279*t1998;
  t3636 = t311*t2036;
  t3667 = t347*t1998;
  t2272 = t2066*t405;
  t2273 = t2116*t2204;
  t2277 = t2259 + t2272 + t2273;
  t2349 = -1.*t66*t279*t2066;
  t2366 = t377*t279*t2116;
  t2368 = t2336 + t2349 + t2366;
  t3773 = t507*t2036;
  t3790 = t279*t1998;
  t3835 = -1.*t1998*t731;
  t3848 = -1.*t2036*t702;
  t2404 = -1.*t2116*t2312;
  t2414 = -1.*t2066*t760;
  t2422 = t2403 + t2404 + t2414;
  t2501 = -1.*t2066*t405;
  t2509 = -1.*t2116*t2204;
  t2515 = t2498 + t2501 + t2509;
  t3888 = -1.*t311*t2036;
  t3896 = -1.*t347*t1998;
  t3978 = t1998*t731;
  t3984 = t2036*t702;
  t2540 = t2116*t2312;
  t2543 = t2066*t760;
  t2555 = t2538 + t2540 + t2543;
  t2742 = -1.*t66*t279*t2741;
  t2747 = t377*t279*t2632;
  t2751 = t2724 + t2742 + t2747;
  t4036 = t507*t2608;
  t4069 = t279*t2716;
  t4088 = -1.*t2716*t1151;
  t4097 = -1.*t2608*t1119;
  t2761 = -1.*t2632*t2677;
  t2770 = -1.*t2741*t1161;
  t2776 = t2757 + t2761 + t2770;
  t4149 = t2716*t1151;
  t4152 = t2608*t1119;
  t2808 = t2632*t2677;
  t2829 = t2741*t1161;
  t2832 = t2805 + t2808 + t2829;
  t4180 = -1.*t2716*t1239;
  t4191 = -1.*t2608*t1214;
  t2888 = -1.*t2632*t2856;
  t2897 = -1.*t2741*t1253;
  t2898 = t2887 + t2888 + t2897;
  t3016 = t66*t279*t2741;
  t3018 = -1.*t377*t279*t2632;
  t3021 = t3015 + t3016 + t3018;
  t4242 = -1.*t507*t2608;
  t4271 = -1.*t279*t2716;
  t4282 = t2716*t1239;
  t4294 = t2608*t1214;
  t3055 = t2632*t2856;
  t3063 = t2741*t1253;
  t3064 = t3045 + t3055 + t3063;
  t4900 = t223*t66*t507;
  t4901 = t22*t3153;
  t4914 = t4900 + t4901;
  t4874 = t94*t301*t168;
  t4875 = -1.*t182*t301*t184;
  t4877 = t4874 + t4875;
  t4883 = -1.*t94*t168*t397;
  t4884 = t182*t184*t397;
  t4888 = t4883 + t4884;
  t4920 = t94*t168*t1009;
  t4921 = -1.*t182*t184*t1009;
  t4925 = t4920 + t4921;
  t4946 = t94*t168*t809;
  t4948 = -1.*t182*t184*t809;
  t4951 = t4946 + t4948;
  t5045 = -1.*t22*t66*t507;
  t5046 = t223*t3153;
  t5047 = t5045 + t5046;
  t5082 = 0.053565*t94;
  t5084 = -1.*t184*t557;
  t5085 = t5082 + t5084;
  t5124 = 0.032875*t94;
  t5126 = -1.*t184*t971;
  t5127 = t5124 + t5126;
  t3614 = -1.*t279*t2036;
  t3623 = t3614 + t2014;
  t5178 = t168*t1981;
  t5179 = t182*t5085;
  t5180 = t5178 + t5179;
  t5185 = -1.*t168*t5085;
  t5186 = t1982 + t5185;
  t3726 = t347*t2036;
  t3730 = t592*t397;
  t3740 = t3726 + t2259 + t3730;
  t3763 = t279*t2036;
  t3769 = t3763 + t2336;
  t3801 = -1.*t301*t592;
  t3807 = -1.*t2036*t731;
  t3811 = t3801 + t3807 + t2403;
  t3936 = -1.*t347*t2036;
  t3938 = t3936 + t2498 + t593;
  t3954 = t2036*t731;
  t3962 = t608 + t3954 + t2538;
  t4025 = t279*t2608;
  t4028 = t4025 + t2724;
  t5285 = -1.*t168*t5127;
  t5287 = t2701 + t5285;
  t5275 = t168*t2597;
  t5278 = t182*t5127;
  t5282 = t5275 + t5278;
  t4113 = -1.*t892*t809;
  t4121 = -1.*t2608*t1151;
  t4126 = t4113 + t4121 + t2757;
  t4166 = t2608*t1151;
  t4167 = t1029 + t4166 + t2805;
  t4207 = -1.*t2608*t1239;
  t4208 = t908 + t4207 + t2887;
  t4226 = -1.*t279*t2608;
  t4233 = t4226 + t3015;
  t4306 = t892*t902;
  t4308 = t2608*t1239;
  t4312 = t4306 + t4308 + t3045;
  t5405 = 0.02*t94*t168;
  t5410 = t5405 + t1936;
  t5193 = -1.*t507*t5180;
  t5199 = -1.*t3153*t1998;
  t5181 = t311*t5180;
  t5188 = t4877*t1998;
  t5219 = t507*t5180;
  t5225 = t3153*t1998;
  t5231 = -1.*t1998*t4888;
  t5235 = -1.*t5180*t702;
  t5253 = -1.*t311*t5180;
  t5255 = -1.*t4877*t1998;
  t5263 = t1998*t4888;
  t5265 = t5180*t702;
  t5284 = t507*t5282;
  t5289 = t3153*t2716;
  t5292 = -1.*t2716*t4925;
  t5297 = -1.*t5282*t1119;
  t5305 = t2716*t4925;
  t5308 = t5282*t1119;
  t5316 = -1.*t2716*t4951;
  t5325 = -1.*t5282*t1214;
  t5341 = -1.*t507*t5282;
  t5346 = -1.*t3153*t2716;
  t5352 = t2716*t4951;
  t5355 = t5282*t1214;
  t5830 = -0.11459*t809;
  t5831 = -1.*t301*t774;
  t5834 = t397*t794;
  t5836 = t5831 + t5834;
  t5837 = -0.081715*t5836;
  t5838 = t5830 + t5837;
  t5909 = 0.04*t301;
  t5911 = t5909 + t552;
  t5982 = 0.242889*t301;
  t5989 = -1.*t301*t839;
  t5991 = -1.*t397*t883;
  t5996 = t5982 + t5989 + t5991;
  t5912 = -1.*t301*t5911;
  t5916 = t3801 + t5912;
  t5923 = -1.*t301*t5916;
  t5932 = t397*t594;
  t5934 = -1.*t301*t654;
  t5939 = -1.*t5911*t397;
  t5940 = t593 + t5939;
  t5941 = -1.*t397*t5940;
  t5942 = t5923 + t5932 + t5934 + t5941;
  t6085 = -1.*t94*t1981*t397;
  t6086 = -1.*t184*t1988*t397;
  t6088 = t608 + t6085 + t6086;
  t6094 = -1.*t94*t301*t1981;
  t6095 = -1.*t301*t184*t1988;
  t6096 = t6094 + t6095 + t593;
  t6126 = Power(t94,2);
  t6142 = Power(t184,2);
  t6193 = t184*t2597;
  t6194 = -1.*t94*t2603;
  t6195 = t6193 + t6194;
  t5979 = -1.*t971*t902;
  t6008 = t892*t1009;
  t6012 = t971*t809;
  t6199 = -1.*t94*t2597*t809;
  t6205 = -1.*t184*t2603*t809;
  t6206 = t908 + t6199 + t6205;
  t6240 = t94*t2597*t1009;
  t6244 = t184*t2603*t1009;
  t6249 = t6240 + t6244 + t1029;
  t5976 = -1.*t1009*t998;
  t5978 = -1.*t971*t1009;
  t5997 = -1.*t5996*t809;
  t6002 = t5978 + t5979 + t5997 + t4113;
  t6004 = -1.*t809*t6002;
  t6006 = -1.*t809*t1030;
  t6007 = t5996*t1009;
  t6013 = t971*t5836;
  t6019 = t6007 + t6008 + t6012 + t6013;
  t6020 = -1.*t902*t6019;
  t6026 = t5976 + t6004 + t6006 + t6020;
  t5001 = t223*t507;
  t5007 = -1.*t22*t66*t279;
  t5009 = t5001 + t5007;
  t6380 = t223*t1119;
  t6381 = t22*t1161;
  t6393 = t6380 + t6381;
  t5962 = -1.*t94*t168*t5836;
  t5965 = t182*t184*t5836;
  t5966 = t5962 + t5965;
  t6317 = -1.*t66*t4877;
  t6321 = -1.*t377*t397;
  t6340 = t6317 + t6321;
  t1399 = t22*t311;
  t1403 = -1.*t223*t405;
  t1410 = t1399 + t1403;
  t1517 = t22*t1119;
  t1542 = -1.*t223*t1161;
  t1544 = t1517 + t1542;
  t1561 = t22*t1214;
  t1563 = -1.*t223*t1253;
  t1577 = t1561 + t1563;
  t6437 = t182*t94*t5836;
  t6438 = t168*t184*t5836;
  t6440 = t6437 + t6438;
  t6443 = t377*t1009;
  t6444 = -1.*t66*t5966;
  t6445 = t6443 + t6444;
  t6592 = -1.*t94*t168*t5911;
  t6595 = t182*t184*t5911;
  t6603 = t6592 + t6595;
  t6614 = t182*t94*t5911;
  t6616 = t168*t184*t5911;
  t6620 = t6614 + t6616;
  t6157 = t301*t557;
  t6811 = -1.*t94*t168*t5996;
  t6813 = t182*t184*t5996;
  t6814 = t6811 + t6813;
  t6818 = t182*t94*t5996;
  t6823 = t168*t184*t5996;
  t6824 = t6818 + t6823;
  t6621 = -1.*t507*t6620;
  t6643 = t311*t6620;
  t6985 = -1.*t66*t6603;
  t6986 = t377*t557;
  t6987 = t6985 + t6986;
  t6992 = t377*t6603;
  t6997 = t66*t557;
  t7002 = t6992 + t6997;
  t5894 = t377*t4877;
  t5896 = t5894 + t1626;
  t6660 = t507*t6620;
  t6672 = -1.*t3179*t1998;
  t6675 = -1.*t6620*t702;
  t6704 = -1.*t311*t6620;
  t6714 = t3179*t1998;
  t6720 = t6620*t702;
  t6825 = -1.*t507*t6824;
  t6839 = t6824*t1214;
  t7126 = t377*t6814;
  t7131 = t66*t971;
  t7133 = t7126 + t7131;
  t7120 = -1.*t66*t6814;
  t7122 = t377*t971;
  t7124 = t7120 + t7122;
  t6849 = t507*t6824;
  t5961 = t66*t1009;
  t5968 = t377*t5966;
  t5969 = t5961 + t5968;
  t6869 = -1.*t6824*t1119;
  t6884 = -1.*t2716*t6440;
  t6912 = -1.*t6824*t1214;
  t6920 = t6824*t1119;
  t6923 = t2716*t6440;
  t5829 = -0.0001584575*t1009;
  t5840 = 0.03856*t5838;
  t5841 = t5829 + t5840;
  t5842 = -0.5*var2[8]*t5841;
  t5852 = 0.242889*t774;
  t5866 = -1.*t774*t839;
  t5867 = t883*t794;
  t5868 = t5852 + t5866 + t5867;
  t5869 = -0.007922875*t1009*t5868;
  t5870 = t774*t883;
  t5871 = -0.242889*t794;
  t5873 = t839*t794;
  t7250 = 0.02*t774;
  t7251 = 0.16*t794;
  t7253 = t7250 + t7251;
  t7246 = -0.16*t774;
  t7248 = t7246 + t876;
  t5880 = t5870 + t5871 + t5873;
  t5886 = -0.241*t5880*t5838;
  t5955 = -0.007922875*t809*t2677;
  t5957 = -0.241*t5838*t2677;
  t5959 = -0.007922875*t1009*t2856;
  t5970 = -0.241*t1073*t5969;
  t7293 = -1.*t397*t7248;
  t7296 = t301*t7253;
  t7297 = t7293 + t7296;
  t7284 = t301*t7248;
  t7286 = t397*t7253;
  t7288 = t7284 + t7286;
  t6182 = -1.*t184*t2597;
  t6183 = t94*t2603;
  t6184 = t6182 + t6183;
  t6192 = -0.01584575*t6184*t1009*t809;
  t6196 = -0.241*t6195*t809*t1073;
  t6198 = -0.241*t6195*t902*t5838;
  t6215 = t1009*t6206;
  t6250 = t809*t6249;
  t6224 = -1.*t94*t2597*t1009;
  t6230 = -1.*t184*t2603*t1009;
  t7291 = -1.*t7288*t902;
  t7316 = t7288*t809;
  t6265 = t94*t2597*t5836;
  t6268 = t184*t2603*t5836;
  t6282 = t809*t6206;
  t6284 = t902*t6249;
  t6285 = t6282 + t6284;
  t7298 = -1.*t7297*t809;
  t7301 = t5978 + t7291 + t4113 + t7298;
  t7306 = -1.*t809*t7301;
  t7312 = t7297*t1009;
  t7317 = t6008 + t7312 + t7316 + t6013;
  t7319 = -1.*t902*t7317;
  t7321 = t5976 + t6006 + t7306 + t7319;
  t6299 = -0.00052092903125*t1009*t809;
  t6304 = -0.482*t1073*t5838;
  t6400 = -0.007922875*t809*t6393;
  t6407 = -0.241*t5838*t6393;
  t6415 = t223*t1214;
  t6419 = t22*t1253;
  t6425 = t6415 + t6419;
  t6435 = -0.007922875*t1009*t6425;
  t6442 = t223*t6440;
  t6446 = t22*t6445;
  t6447 = t6442 + t6446;
  t6451 = -0.241*t1073*t6447;
  t6492 = -0.007922875*t809*t1544;
  t6506 = -0.241*t5838*t1544;
  t6509 = -0.007922875*t1009*t1577;
  t6512 = t22*t6440;
  t6513 = -1.*t223*t6445;
  t6514 = t6512 + t6513;
  t6523 = -0.241*t1073*t6514;
  t6759 = t4028*t1119;
  t6763 = t507*t4126;
  t6769 = t6759 + t6763;
  t6772 = -0.007922875*t1009*t6769;
  t6773 = t1214*t4167;
  t6775 = t1119*t4208;
  t6790 = t6773 + t6775;
  t6796 = t4233*t1214;
  t6797 = t507*t4312;
  t6807 = t6796 + t6797;
  t6808 = -0.241*t5838*t6807;
  t6810 = t4233*t1119;
  t7392 = -1.*t94*t168*t7297;
  t7395 = t182*t184*t7297;
  t7402 = t7392 + t7395;
  t7408 = t182*t94*t7297;
  t7419 = t168*t184*t7297;
  t7422 = t7408 + t7419;
  t6852 = t4028*t6440;
  t6855 = -1.*t892*t1009;
  t6876 = -1.*t2608*t5966;
  t6902 = t1119*t4167;
  t6904 = t6440*t4208;
  t6921 = t2608*t5966;
  t7114 = t2751*t2677;
  t7116 = t377*t279*t2776;
  t7117 = t7114 + t7116;
  t7118 = -0.007922875*t1009*t7117;
  t7152 = t2856*t2832;
  t7153 = t2677*t2898;
  t7155 = t7152 + t7153;
  t7158 = t3021*t2856;
  t7161 = t377*t279*t3064;
  t7162 = t7158 + t7161;
  t7171 = -0.241*t5838*t7162;
  t7119 = t3021*t2677;
  t7423 = -1.*t507*t7422;
  t7436 = t7422*t1214;
  t7564 = t377*t7402;
  t7565 = t66*t7288;
  t7566 = t7564 + t7565;
  t7548 = -1.*t66*t7402;
  t7558 = t377*t7288;
  t7560 = t7548 + t7558;
  t7454 = t507*t7422;
  t7180 = t2751*t5969;
  t7479 = -1.*t7422*t1119;
  t7187 = -1.*t2632*t5969;
  t7192 = -1.*t2741*t6445;
  t7199 = t2677*t2832;
  t7208 = t5969*t2898;
  t7505 = -1.*t7422*t1214;
  t7522 = t7422*t1119;
  t7213 = t2632*t5969;
  t7214 = t2741*t6445;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.241*t1073*(-1.*t1161*t22 - 1.*t1119*t223) - 0.081793755*t301*(-1.*t223*t311 - 1.*t22*t405) - 0.241*t1049*t542 + 0.00482*(-1.*t223*t279 + t198*t22*t66) - 1.527*t542*t672 + 0.081793755*t397*(-1.*t223*t702 - 1.*t22*t760) - 0.007922875*(-1.*t1253*t22 - 1.*t1214*t223)*t809)*var2[1] - 0.5*(0.00482*t1359 - 0.241*t1049*t1448 - 0.241*t1073*t1544 - 0.081793755*t1410*t301 - 1.527*t1448*t672 + 0.081793755*t397*(t22*t702 - 1.*t223*t760) - 0.007922875*t1577*t809)*var2[2])*var2[6];
  p_output1[4]=(-0.5*(-0.241*t1073*t1161 - 0.081793755*t301*t405 - 0.00482*t198*t66 + 0.241*t1049*t279*t66 + 1.527*t279*t66*t672 + 0.081793755*t397*t760 - 0.007922875*t1253*t809)*var2[0] - 0.5*(0.241*t1073*t1669*t223 + 0.081793755*t1628*t223*t301 + 0.00482*t198*t223*t377 - 0.241*t1049*t223*t279*t377 - 0.081793755*t1646*t223*t397 - 1.527*t223*t279*t377*t672 + 0.007922875*t1688*t223*t809)*var2[1] - 0.5*(-0.241*t1073*t1669*t22 - 0.081793755*t1628*t22*t301 - 0.00482*t198*t22*t377 + 0.241*t1049*t22*t279*t377 + 0.081793755*t1646*t22*t397 + 1.527*t22*t279*t377*t672 - 0.007922875*t1688*t22*t809)*var2[2] - 0.5*(-0.241*t1049*(t1253*t2832 + (t1161*t2624 + t1161*t2632 + t1669*t2741 + t2677*t2741)*t2856 + t2677*(-1.*t1253*t2624 - 1.*t1253*t2632 - 1.*t1688*t2741 - 1.*t2741*t2856) + t1161*t2898) + 0.00482*(t279*t377*(-1.*t1867*t377 - 1.*t1875*t377) - 1.*t1925*t279*t66 + t66*(-1.*t1867*t279*t66 - 1.*t1875*t279*t66) + t377*(t1875*t279*t377 + t1942*t507 - 1.*t1915*t279*t66)) + 0.081793755*t397*(t2130*t405 + t279*t377*(t1628*t2066 + t2066*t2204 + t2116*t405 + t2161*t405) - 1.*t2277*t279*t66 + t2204*(t2116*t279*t66 + t2161*t279*t66)) - 0.241*t1073*(t1253*t3021 + t279*(t1253*t2624 + t1253*t2632 + t1688*t2741 + t2741*t2856)*t377 - 1.*t279*t3064*t66 + t2856*(t2624*t279*t66 + t2632*t279*t66)) - 0.081793755*t301*(-1.*t2422*t279*t66 + t2312*(-1.*t2116*t279*t66 - 1.*t2161*t279*t66) + t2368*t760 + t279*t377*(-1.*t1646*t2066 - 1.*t2066*t2312 - 1.*t2116*t760 - 1.*t2161*t760)) - 1.527*t672*(t2555*t405 + t2312*(-1.*t1628*t2066 - 1.*t2066*t2204 - 1.*t2116*t405 - 1.*t2161*t405) + t2515*t760 + t2204*(t1646*t2066 + t2066*t2312 + t2116*t760 + t2161*t760)) - 0.007922875*(t1161*t2751 + (-1.*t1161*t2624 - 1.*t1161*t2632 - 1.*t1669*t2741 - 1.*t2677*t2741)*t279*t377 - 1.*t2776*t279*t66 + t2677*(-1.*t2624*t279*t66 - 1.*t2632*t279*t66))*t809)*var2[3])*var2[6];
  p_output1[5]=(-0.5*(-0.241*t1049*t198*t377 + 0.00482*t3153*t377 - 0.081793755*t301*t3179*t377 - 0.241*t1073*t3224*t377 + 0.081793755*t3191*t377*t397 - 1.527*t198*t377*t672 - 0.007922875*t3242*t377*t809)*var2[0] - 0.5*(-0.241*t1049*t1359 + 0.00482*(t198*t22 + t223*t3153*t66) - 0.081793755*t301*(t22*t347 + t223*t3179*t66) - 0.241*t1073*(t1151*t22 + t223*t3224*t66) - 1.527*t1359*t672 + 0.081793755*t397*(t223*t3191*t66 + t22*t731) - 0.007922875*(t1239*t22 + t223*t3242*t66)*t809)*var2[1] - 0.5*(-0.241*t1049*t3482 + 0.00482*(t198*t223 - 1.*t22*t3153*t66) - 0.081793755*t301*(t223*t347 - 1.*t22*t3179*t66) - 0.241*t1073*(t1151*t223 - 1.*t22*t3224*t66) - 1.527*t3482*t672 + 0.081793755*t397*(-1.*t22*t3191*t66 + t223*t731) - 0.007922875*(t1239*t223 - 1.*t22*t3242*t66)*t809)*var2[2] - 0.5*(0.00482*(t1925*t198*t377 + t66*(t1942*t279 + t1875*t198*t377 + t279*t4335*t4352 + t279*t4352*t4358 + t1864*t507 - 1.*t1915*t198*t66)) + 0.081793755*t397*(t198*t2277*t377 + t2130*t3179*t377 + t2204*(t3692 + t3703 - 1.*t198*t2116*t377 - 1.*t279*t3659*t4335 - 1.*t279*t3659*t4358 + t198*t2066*t66) + t279*t377*(t3636 + t3667 + t2116*t3179*t377 + t2204*t3659*t377 - 1.*t2066*t3179*t66 - 1.*t3659*t405*t66)) - 0.241*t1073*(t198*t3064*t377 + t3021*t3242*t377 + t2856*(-1.*t198*t2632*t377 + t4242 + t4271 - 1.*t279*t4057*t4335 - 1.*t279*t4057*t4358 + t198*t2741*t66) + t279*t377*(t2632*t3242*t377 + t2856*t377*t4057 + t4282 + t4294 - 1.*t2741*t3242*t66 - 1.*t1253*t4057*t66)) - 0.241*t1049*(t2898*t3224*t377 + t2832*t3242*t377 + t2856*(t2632*t3224*t377 + t2677*t377*t4057 + t4149 + t4152 - 1.*t2741*t3224*t66 - 1.*t1161*t4057*t66) + t2677*(-1.*t2632*t3242*t377 - 1.*t2856*t377*t4057 + t4180 + t4191 + t2741*t3242*t66 + t1253*t4057*t66)) - 1.527*t672*(t2555*t3179*t377 + t2515*t3191*t377 + t2312*(-1.*t2116*t3179*t377 - 1.*t2204*t3659*t377 + t3888 + t3896 + t2066*t3179*t66 + t3659*t405*t66) + t2204*(t2116*t3191*t377 + t2312*t3659*t377 + t3978 + t3984 - 1.*t2066*t3191*t66 - 1.*t3659*t66*t760)) - 0.081793755*t301*(t198*t2422*t377 + t2368*t3191*t377 + t2312*(t198*t2116*t377 + t3773 + t3790 + t279*t3659*t4335 + t279*t3659*t4358 - 1.*t198*t2066*t66) + t279*t377*(-1.*t2116*t3191*t377 - 1.*t2312*t3659*t377 + t3835 + t3848 + t2066*t3191*t66 + t3659*t66*t760)) - 0.007922875*(t198*t2776*t377 + t2751*t3224*t377 + t2677*(t198*t2632*t377 + t4036 + t4069 + t279*t4057*t4335 + t279*t4057*t4358 - 1.*t198*t2741*t66) + t279*t377*(-1.*t2632*t3224*t377 - 1.*t2677*t377*t4057 + t4088 + t4097 + t2741*t3224*t66 + t1161*t4057*t66))*t809)*var2[3] - 0.5*(-0.00117072498*t279 - 0.241*t1049*(t1214*(t2608*t3224 + t1151*t4057 + t4149 + t4152) + t1239*t4167 + t1119*(-1.*t2608*t3242 - 1.*t1239*t4057 + t4180 + t4191) + t1151*t4208) + 0.081793755*t397*(t347*t3623 + t311*(-1.*t198*t2036 - 1.*t279*t3659 + t3692 + t3703) + t279*t3740 + (t2036*t3179 + t3636 + t347*t3659 + t3667)*t507) - 0.241*t1073*(t1239*t4233 + t1214*(-1.*t198*t2608 - 1.*t279*t4057 + t4242 + t4271) + t279*t4312 + (t2608*t3242 + t1239*t4057 + t4282 + t4294)*t507) - 0.081793755*t301*(t279*t3811 + (t198*t2036 + t279*t3659 + t3773 + t3790)*t702 + t3769*t731 + t507*(-1.*t2036*t3191 + t3835 + t3848 - 1.*t3659*t731)) - 1.527*t672*(t347*t3962 + (-1.*t2036*t3179 - 1.*t347*t3659 + t3888 + t3896)*t702 + t3938*t731 + t311*(t2036*t3191 + t3978 + t3984 + t3659*t731)) - 0.007922875*(t1151*t4028 + t1119*(t198*t2608 + t4036 + t279*t4057 + t4069) + t279*t4126 + (-1.*t2608*t3224 - 1.*t1151*t4057 + t4088 + t4097)*t507)*t809)*var2[4])*var2[6];
  p_output1[6]=(-0.5*(-0.241*t1073*t1119*t377 + 0.00482*t279*t377 - 0.081793755*t301*t311*t377 - 0.241*t1049*t377*t507 - 1.527*t377*t507*t672 + 0.081793755*t377*t397*t702 - 0.007922875*t1214*t377*t809)*var2[0] - 0.5*(0.00482*t1448 - 0.241*t1049*t4914 - 0.241*t1073*(t22*t4925 + t1119*t223*t66) - 0.081793755*t301*(t22*t4877 + t223*t311*t66) - 1.527*t4914*t672 + 0.081793755*t397*(t22*t4888 + t223*t66*t702) - 0.007922875*(t22*t4951 + t1214*t223*t66)*t809)*var2[1] - 0.5*(0.00482*t5009 - 0.241*t1049*t5047 - 0.241*t1073*(t223*t4925 - 1.*t1119*t22*t66) - 0.081793755*t301*(t223*t4877 - 1.*t22*t311*t66) - 1.527*t5047*t672 + 0.081793755*t397*(t223*t4888 - 1.*t22*t66*t702) - 0.007922875*(t223*t4951 - 1.*t1214*t22*t66)*t809)*var2[2] - 0.5*(0.081793755*t397*(t2130*t311*t377 + t2277*t377*t507 + t2204*(-1.*t2116*t377*t507 - 1.*t279*t4335*t5186 - 1.*t279*t4358*t5186 + t5193 + t5199 + t2066*t507*t66) + t279*t377*(t2116*t311*t377 + t5181 + t2204*t377*t5186 + t5188 - 1.*t2066*t311*t66 - 1.*t405*t5186*t66)) - 0.241*t1073*(t1214*t3021*t377 + t3064*t377*t507 + t2856*(-1.*t2632*t377*t507 - 1.*t279*t4335*t5287 - 1.*t279*t4358*t5287 + t5341 + t5346 + t2741*t507*t66) + t279*t377*(t1214*t2632*t377 + t2856*t377*t5287 + t5352 + t5355 - 1.*t1214*t2741*t66 - 1.*t1253*t5287*t66)) - 0.241*t1049*(t1214*t2832*t377 + t1119*t2898*t377 + t2856*(t1119*t2632*t377 + t2677*t377*t5287 + t5305 + t5308 - 1.*t1119*t2741*t66 - 1.*t1161*t5287*t66) + t2677*(-1.*t1214*t2632*t377 - 1.*t2856*t377*t5287 + t5316 + t5325 + t1214*t2741*t66 + t1253*t5287*t66)) - 1.527*t672*(t2555*t311*t377 + t2312*(-1.*t2116*t311*t377 - 1.*t2204*t377*t5186 + t5253 + t5255 + t2066*t311*t66 + t405*t5186*t66) + t2515*t377*t702 + t2204*(t2312*t377*t5186 + t5263 + t5265 + t2116*t377*t702 - 1.*t2066*t66*t702 - 1.*t5186*t66*t760)) - 0.081793755*t301*(t2422*t377*t507 + t2312*(t2116*t377*t507 + t279*t4335*t5186 + t279*t4358*t5186 + t5219 + t5225 - 1.*t2066*t507*t66) + t2368*t377*t702 + t279*t377*(-1.*t2312*t377*t5186 + t5231 + t5235 - 1.*t2116*t377*t702 + t2066*t66*t702 + t5186*t66*t760)) - 0.007922875*(t1119*t2751*t377 + t2776*t377*t507 + t2677*(t2632*t377*t507 + t5284 + t279*t4335*t5287 + t279*t4358*t5287 + t5289 - 1.*t2741*t507*t66) + t279*t377*(-1.*t1119*t2632*t377 - 1.*t2677*t377*t5287 + t5292 + t5297 + t1119*t2741*t66 + t1161*t5287*t66))*t809 + 0.00482*(t1925*t377*t507 + t66*(t1942*t3153 + t1875*t377*t507 + t279*t4335*t5410 + t279*t4358*t5410 - 1.*t1915*t507*t66 + t507*(-0.02*t168*t184 - 0.02*t182*t94))))*var2[3] - 0.5*(-0.00117072498*t3153 + 0.081793755*t397*(t3153*t3740 + t3623*t4877 + t507*(t3636 + t5181 + t347*t5186 + t5188) + t311*(t3692 - 1.*t279*t5186 + t5193 + t5199)) - 0.241*t1049*(t4208*t4925 + t4167*t4951 + t1214*(t4152 + t1151*t5287 + t5305 + t5308) + t1119*(t4191 - 1.*t1239*t5287 + t5316 + t5325)) - 0.241*t1073*(t3153*t4312 + t4233*t4951 + t1214*(t4242 - 1.*t279*t5287 + t5341 + t5346) + t507*(t4294 + t1239*t5287 + t5352 + t5355)) - 0.081793755*t301*(t3153*t3811 + t3769*t4888 + (t3773 + t279*t5186 + t5219 + t5225)*t702 + t507*(t3848 + t5231 + t5235 - 1.*t5186*t731)) - 1.527*t672*(t3962*t4877 + t3938*t4888 + (t3888 - 1.*t347*t5186 + t5253 + t5255)*t702 + t311*(t3984 + t5263 + t5265 + t5186*t731)) - 0.007922875*(t3153*t4126 + t4028*t4925 + t1119*(t4036 + t5284 + t279*t5287 + t5289) + t507*(t4097 - 1.*t1151*t5287 + t5292 + t5297))*t809)*var2[4] - 0.5*(-0.081793755*Power(t301,2)*(-1.*t184*t1988 - 1.*t184*t5085) + 0.081793755*Power(t397,2)*(t184*t1988 + t184*t5085) - 0.007922875*(-1.*t184*t2603 - 1.*t184*t5127)*Power(t809,2) - 0.241*t1073*(t184*t2603 + t184*t5127)*t902 + 0.00482*(-1.*t184*t1841 + 0.02*t184*t94) - 1.527*t672*(t301*(-1.*t1988*t301*t94 - 1.*t301*t5085*t94) + t397*(-1.*t1988*t397*t94 - 1.*t397*t5085*t94)) - 0.241*t1049*(t902*(t1009*t2603*t94 + t1009*t5127*t94) + t809*(-1.*t2603*t809*t94 - 1.*t5127*t809*t94)))*var2[5])*var2[6];
  p_output1[7]=var2[6]*(t5842 - 0.5*(0.081793755*t2204*t397 + 0.081793755*t397*t5896 - 1.527*t279*t377*t5942 + t5955 + t5957 + t5959 + t5970 - 0.241*t279*t377*t6026)*var2[0] - 0.5*(0.081793755*t1410*t397 - 1.527*t1448*t5942 - 0.241*t1448*t6026 + 0.081793755*t397*(t22*t3179 - 1.*t223*t6340) + t6492 + t6506 + t6509 + t6523)*var2[1] - 0.5*(0.081793755*t397*(t223*t311 + t22*t405) - 1.527*t5009*t5942 - 0.241*t5009*t6026 + 0.081793755*t397*(t223*t3179 + t22*t6340) + t6400 + t6407 + t6435 + t6451)*var2[2] - 0.5*(0.081793755*t301*(t2130*t2204 + t2277*t279*t377) + 0.081793755*(t2312*t2368 + t2422*t279*t377)*t397 - 1.527*(t2312*t2515 + t2204*t2555)*t5942 + 0.081793755*t397*(t2130*t2312 + t279*t377*(t2538 + t2540 + t2543 + t6643 + t405*t6987 + t2204*t7002) + t2204*(t6621 + t279*t66*t6987 - 1.*t279*t377*t7002)) + t7118 - 0.241*t1073*(t7119 + t279*t377*(t2805 + t2808 + t2829 + t6839 + t1253*t7124 + t2856*t7133) + t2856*(t6825 + t279*t66*t7124 - 1.*t279*t377*t7133)) - 0.241*t6026*t7155 + t7171 - 0.241*t1049*(t2677*(t2757 + t2761 + t2770 + t6912 - 1.*t1253*t7124 - 1.*t2856*t7133) + t7199 + t7208 + t2856*(t6920 + t6923 + t1161*t7124 + t2677*t7133 + t7213 + t7214)) - 0.081793755*t301*(t2368*t5896 + t2312*(t6660 - 1.*t279*t66*t6987 + t279*t377*t7002) + t279*t377*(-1.*t2116*t5896 - 1.*t2066*t6340 + t6672 + t6675 - 1.*t2312*t7002 - 1.*t6987*t760)) - 1.527*t672*(t2312*t2555 + t2515*t5896 + t2312*(t2403 + t2404 + t2414 + t6704 - 1.*t405*t6987 - 1.*t2204*t7002) + t2204*(t2116*t5896 + t2066*t6340 + t6714 + t6720 + t2312*t7002 + t6987*t760)) - 0.007922875*(t2677*(t6849 - 1.*t279*t66*t7124 + t279*t377*t7133) + t7180 + t279*t377*(t6869 + t6884 - 1.*t1161*t7124 - 1.*t2677*t7133 + t7187 + t7192))*t809)*var2[3] - 0.5*(0.081793755*t301*(t311*t3623 + t3740*t507) + t6772 - 0.241*t6026*t6790 + t6808 - 0.241*t1049*(t6902 + t6904 + t1119*(t2757 + t4113 + t4121 + t5979 - 1.*t1239*t6814 + t6912) + t1214*(t6008 + t6012 + t1151*t6814 + t6920 + t6921 + t6923)) + 0.081793755*t397*(t311*(-1.*t279*t6603 + t6621) + t507*(t2538 + t3954 + t397*t557 + t608 + t347*t6603 + t6643) + t3623*t702) + 0.081793755*t397*(t3811*t507 + t3769*t702) - 1.527*t5942*(t311*t3962 + t3938*t702) - 0.081793755*t301*(t3179*t3769 + (t279*t6603 + t6660)*t702 + t507*(t3730 - 1.*t2036*t4877 + t558 + t6672 + t6675 - 1.*t6603*t731)) - 1.527*t672*(t3179*t3938 + t3962*t702 + (t2403 + t3801 + t3807 + t609 - 1.*t347*t6603 + t6704)*t702 + t311*(t2036*t4877 + t593 + t6157 + t6714 + t6720 + t6603*t731)) - 0.241*t1073*(t6810 + t1214*(-1.*t279*t6814 + t6825) + t507*(t1029 + t2805 + t4166 + t1239*t6814 + t6839 + t902*t971)) - 0.007922875*t809*(t1119*(t279*t6814 + t6849) + t6852 + t507*(-1.*t1151*t6814 + t6855 + t6869 + t6876 + t6884 + t981)))*var2[4] - 0.5*(-1.527*t5942*(t397*t6088 + t301*t6096) + t6192 + t6196 + t6198 - 0.241*t6026*t6285 - 0.241*t1049*(t6215 + t6250 + t809*(t4113 + t5979 + t6224 + t6230 - 1.*t5996*t6126*t809 - 1.*t5996*t6142*t809) + (t6008 + t6012 + t1009*t5996*t6126 + t1009*t5996*t6142 + t6265 + t6268)*t902) + 0.16358751*t301*t397*(t184*t1981 - 1.*t1988*t94) + 0.16358751*t301*t397*(-1.*t184*t1981 + t1988*t94) - 1.527*t672*(t301*t6088 - 1.*t397*t6096 + t397*(t593 + t6094 + t6095 - 1.*t397*t5911*t6126 - 1.*t397*t5911*t6142 + t6157) + t301*(t3801 + t184*t1988*t397 + t609 - 1.*t301*t5911*t6126 - 1.*t301*t5911*t6142 + t1981*t397*t94)))*var2[5] - 0.5*(-0.482*t1049*t6026 + t6299 + t6304 - 3.054*t5942*t672)*var2[6] - 0.5*(-0.0032717502*t301 + 0.0032717502*t397 + t5869 + t5886)*var2[7]);
  p_output1[8]=var2[6]*(t5842 - 0.5*(t5955 + t5957 + t5959 + t5970 - 0.241*t279*t377*t7321)*var2[0] - 0.5*(t6492 + t6506 + t6509 + t6523 - 0.241*t1448*t7321)*var2[1] - 0.5*(t6400 + t6407 + t6435 + t6451 - 0.241*t5009*t7321)*var2[2] - 0.5*(t7118 + t7171 - 0.241*t7155*t7321 - 0.241*t1049*(t7199 + t7208 + t2856*(t6923 + t7213 + t7214 + t7522 + t1161*t7560 + t2677*t7566) + t2677*(t2757 + t2761 + t2770 + t7505 - 1.*t1253*t7560 - 1.*t2856*t7566)) - 0.241*t1073*(t7119 + t279*t377*(t2805 + t2808 + t2829 + t7436 + t1253*t7560 + t2856*t7566) + t2856*(t7423 + t279*t66*t7560 - 1.*t279*t377*t7566)) - 0.007922875*(t7180 + t279*t377*(t6884 + t7187 + t7192 + t7479 - 1.*t1161*t7560 - 1.*t2677*t7566) + t2677*(t7454 - 1.*t279*t66*t7560 + t279*t377*t7566))*t809)*var2[3] - 0.5*(t6772 + t6808 - 0.241*t6790*t7321 - 0.241*t1049*(t6902 + t6904 + t1119*(t2757 + t4113 + t4121 + t7291 - 1.*t1239*t7402 + t7505) + t1214*(t6008 + t6921 + t6923 + t7316 + t1151*t7402 + t7522)) - 0.007922875*t809*(t6852 + t1119*(t279*t7402 + t7454) + t507*(t6855 + t6876 + t6884 - 1.*t1151*t7402 + t7479 - 1.*t7288*t809)) - 0.241*t1073*(t6810 + t1214*(-1.*t279*t7402 + t7423) + t507*(t1029 + t2805 + t4166 + t1239*t7402 + t7436 + t7288*t902)))*var2[4] - 0.5*(t6192 + t6196 + t6198 - 0.241*t6285*t7321 - 0.241*t1049*(t6215 + t6250 + t809*(t4113 + t6224 + t6230 + t7291 - 1.*t6126*t7297*t809 - 1.*t6142*t7297*t809) + (t6008 + t6265 + t6268 + t1009*t6126*t7297 + t1009*t6142*t7297 + t7316)*t902))*var2[5] - 0.5*(t6299 + t6304 - 0.482*t1049*t7321)*var2[6] - 0.5*(t5869 + t5886 - 0.007922875*(t5870 + t5871 + t5873 - 1.*t7248*t774 + t7253*t794)*t809 - 0.241*t1073*(-0.242889*t774 + t7253*t774 + t7248*t794 + t774*t839 - 1.*t794*t883))*var2[7]);
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec7_plane.hh"

namespace SymFunction
{

void Ce3_vec7_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
