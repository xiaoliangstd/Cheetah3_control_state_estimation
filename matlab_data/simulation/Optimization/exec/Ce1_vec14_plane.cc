/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:50:19 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1226;
  double t975;
  double t1012;
  double t1396;
  double t1907;
  double t3032;
  double t2138;
  double t3256;
  double t4245;
  double t3392;
  double t3462;
  double t6705;
  double t6859;
  double t7125;
  double t5535;
  double t6220;
  double t6426;
  double t6528;
  double t3517;
  double t4029;
  double t4256;
  double t4343;
  double t7679;
  double t7684;
  double t7709;
  double t4378;
  double t4838;
  double t6534;
  double t6663;
  double t7571;
  double t7652;
  double t7660;
  double t7670;
  double t9743;
  double t10776;
  double t10859;
  double t10889;
  double t10900;
  double t10703;
  double t10764;
  double t10779;
  double t10791;
  double t10799;
  double t10800;
  double t10813;
  double t10852;
  double t10857;
  double t10930;
  double t10936;
  double t10977;
  double t10978;
  double t10986;
  double t10988;
  double t8926;
  double t8940;
  double t8893;
  double t8907;
  double t11071;
  double t11081;
  double t11022;
  double t11053;
  double t11054;
  double t9168;
  double t9175;
  double t9069;
  double t9122;
  double t10038;
  double t10047;
  double t10190;
  double t11251;
  double t11268;
  double t11278;
  double t11532;
  double t11544;
  double t11547;
  double t11562;
  double t11565;
  double t11574;
  double t9773;
  double t9774;
  double t9779;
  double t1705;
  double t2144;
  double t2641;
  double t11798;
  double t11806;
  double t3175;
  double t3219;
  double t3227;
  double t7240;
  double t7362;
  double t7397;
  double t7714;
  double t7716;
  double t7721;
  double t9745;
  double t11670;
  double t11677;
  double t11685;
  double t7840;
  double t7950;
  double t7976;
  double t8087;
  double t8387;
  double t8827;
  double t8923;
  double t9009;
  double t9019;
  double t9133;
  double t9204;
  double t9244;
  double t11719;
  double t11720;
  double t11721;
  double t11655;
  double t11710;
  double t11711;
  double t11732;
  double t11755;
  double t11768;
  double t11770;
  double t12187;
  double t12190;
  double t12192;
  double t12201;
  double t12205;
  double t12206;
  double t12207;
  double t12210;
  double t12211;
  double t12212;
  double t12216;
  double t12217;
  double t12222;
  double t12223;
  double t12226;
  double t12228;
  double t12233;
  double t12236;
  double t12237;
  double t12244;
  double t11013;
  double t11014;
  double t11056;
  double t11067;
  double t11083;
  double t11086;
  double t12263;
  double t12266;
  double t12271;
  double t12273;
  double t11495;
  double t11505;
  double t11508;
  double t12279;
  double t12284;
  double t12285;
  double t12306;
  double t11818;
  double t11820;
  double t11823;
  double t11870;
  double t11872;
  double t11876;
  double t11902;
  double t11907;
  double t11908;
  double t11957;
  double t11958;
  double t11963;
  double t11973;
  double t11980;
  double t11988;
  double t11989;
  double t11996;
  double t12003;
  double t12004;
  double t12006;
  double t12102;
  double t12109;
  double t12154;
  double t12157;
  double t12161;
  double t12515;
  double t12520;
  double t12523;
  double t12524;
  double t12526;
  double t12527;
  double t12528;
  double t12529;
  double t12178;
  double t12182;
  double t12183;
  double t12327;
  double t12343;
  double t12352;
  double t12379;
  double t12619;
  double t12620;
  double t12621;
  double t12633;
  double t12638;
  double t12646;
  double t12617;
  double t12629;
  double t12630;
  double t12654;
  double t12660;
  double t12661;
  double t12662;
  double t12665;
  double t12671;
  double t12598;
  double t12599;
  double t12610;
  double t12731;
  double t12732;
  double t12735;
  double t12736;
  double t12738;
  double t12744;
  double t12751;
  double t12752;
  double t12753;
  double t12760;
  double t12768;
  double t12770;
  double t12780;
  double t12785;
  double t12788;
  double t12746;
  double t12749;
  double t12774;
  double t12789;
  double t12794;
  double t12806;
  double t12810;
  double t12813;
  double t12632;
  double t12649;
  double t12650;
  double t12583;
  double t12593;
  double t12597;
  double t10025;
  double t10481;
  double t10519;
  double t12652;
  double t12699;
  double t12722;
  double t12723;
  double t12728;
  double t11243;
  double t11295;
  double t11357;
  double t13016;
  double t13017;
  double t13018;
  double t13043;
  double t13068;
  double t13073;
  double t13097;
  double t13120;
  double t13015;
  double t13049;
  double t13052;
  double t13001;
  double t12984;
  double t12985;
  double t13148;
  double t13149;
  double t13150;
  double t13155;
  double t13156;
  double t13128;
  double t13131;
  double t13132;
  double t13133;
  double t13182;
  double t13183;
  double t13186;
  double t13187;
  double t13195;
  double t13202;
  double t13204;
  double t12996;
  double t13005;
  double t13007;
  double t13134;
  double t13136;
  double t13160;
  double t13169;
  double t13188;
  double t13208;
  double t13209;
  double t13175;
  double t13179;
  double t13215;
  double t13221;
  double t13222;
  double t13067;
  double t13101;
  double t13104;
  double t11552;
  double t11584;
  double t11615;
  double t13111;
  double t13113;
  double t13347;
  double t13348;
  double t13349;
  double t13359;
  double t13361;
  double t13362;
  double t12823;
  double t12826;
  double t12833;
  double t12836;
  double t12852;
  double t12856;
  double t12858;
  double t12860;
  double t12901;
  double t12902;
  double t12903;
  double t12906;
  double t12947;
  double t12958;
  double t12965;
  double t12966;
  double t13464;
  double t13466;
  double t13468;
  double t13472;
  double t13476;
  double t13477;
  double t13243;
  double t13244;
  double t13246;
  double t13249;
  double t13457;
  double t13270;
  double t13272;
  double t13273;
  double t13275;
  double t13461;
  double t13305;
  double t13306;
  double t13307;
  double t13308;
  double t13332;
  double t13334;
  double t13335;
  double t13336;
  double t13557;
  double t13559;
  double t13563;
  double t11764;
  double t13629;
  double t13621;
  double t13624;
  double t13625;
  double t11771;
  double t13701;
  double t13703;
  double t13711;
  double t13713;
  double t13714;
  double t13704;
  double t13705;
  double t13706;
  double t13710;
  double t13715;
  double t13716;
  double t13718;
  double t13719;
  double t13720;
  double t9880;
  double t9999;
  double t13797;
  double t13799;
  double t13806;
  double t13810;
  double t13819;
  double t13823;
  double t13824;
  double t13826;
  double t13811;
  double t13813;
  double t13815;
  double t13821;
  double t13827;
  double t13828;
  double t13842;
  double t13843;
  double t13844;
  double t13795;
  double t13910;
  double t13911;
  double t13912;
  double t13918;
  double t13929;
  double t13930;
  double t13936;
  double t13946;
  double t13947;
  double t13848;
  double t13913;
  double t13914;
  double t13916;
  double t13852;
  double t13855;
  double t13934;
  double t13948;
  double t13949;
  double t13953;
  double t13956;
  double t13957;
  double t13866;
  double t13875;
  double t13877;
  double t13880;
  double t13377;
  double t13382;
  double t13345;
  double t13357;
  double t13413;
  double t13418;
  double t13437;
  double t13438;
  double t13458;
  double t13463;
  double t13489;
  double t13493;
  double t13520;
  double t13521;
  double t13539;
  double t13540;
  double t14019;
  double t14021;
  double t12841;
  double t12842;
  double t12651;
  double t12750;
  double t14039;
  double t14040;
  double t14041;
  double t14045;
  double t14046;
  double t12879;
  double t12886;
  double t12923;
  double t12924;
  double t14060;
  double t14061;
  double t14062;
  double t14076;
  double t14077;
  double t13106;
  double t13145;
  double t13253;
  double t13254;
  double t14093;
  double t14094;
  double t14095;
  double t14100;
  double t14101;
  double t13280;
  double t13282;
  double t13317;
  double t13318;
  double t14124;
  double t14125;
  double t14132;
  double t13708;
  double t13731;
  double t13732;
  double t13753;
  double t13763;
  double t13764;
  double t13816;
  double t13851;
  double t13867;
  double t13876;
  double t14274;
  double t13917;
  double t14284;
  double t14286;
  double t13967;
  double t14293;
  double t13991;
  double t14301;
  double t14302;
  double t13999;
  double t14397;
  double t14398;
  double t14400;
  double t14402;
  double t14410;
  double t14411;
  double t14416;
  double t14417;
  double t14469;
  double t14470;
  double t14471;
  double t14473;
  double t14474;
  t1226 = Cos(var1[13]);
  t975 = Cos(var1[4]);
  t1012 = Cos(var1[12]);
  t1396 = Cos(var1[5]);
  t1907 = Sin(var1[12]);
  t3032 = Sin(var1[13]);
  t2138 = Sin(var1[5]);
  t3256 = Cos(var1[14]);
  t4245 = Sin(var1[14]);
  t3392 = -1.*t3256;
  t3462 = 1. + t3392;
  t6705 = -1.*t3256*t3032;
  t6859 = -1.*t1226*t4245;
  t7125 = 0. + t6705 + t6859;
  t5535 = -0.336601*t3462;
  t6220 = -0.356601*t3256;
  t6426 = -0.16*t4245;
  t6528 = 0. + t5535 + t6220 + t6426;
  t3517 = -0.20833*t3462;
  t4029 = -0.36833*t3256;
  t4256 = 0.020000000000000018*t4245;
  t4343 = 0. + t3517 + t4029 + t4256;
  t7679 = t1226*t3256;
  t7684 = -1.*t3032*t4245;
  t7709 = 0. + t7679 + t7684;
  t4378 = t3256*t4343;
  t4838 = 0.194401*t4245;
  t6534 = t6528*t4245;
  t6663 = 0. + t4378 + t4838 + t6534;
  t7571 = -0.194401*t3256;
  t7652 = -1.*t3256*t6528;
  t7660 = t4343*t4245;
  t7670 = 0. + t7571 + t7652 + t7660;
  t9743 = Sin(var1[4]);
  t10776 = t6705 + t6859;
  t10859 = -1.*t1226*t3256;
  t10889 = t3032*t4245;
  t10900 = t10859 + t10889;
  t10703 = t7679 + t7684;
  t10764 = t10703*t9743;
  t10779 = t1396*t1907*t10776;
  t10791 = -1.*t1012*t10776*t2138;
  t10799 = t10779 + t10791;
  t10800 = t975*t10799;
  t10813 = t10764 + t10800;
  t10852 = 0.241*t7670*t10813;
  t10857 = t10776*t9743;
  t10930 = t1396*t1907*t10900;
  t10936 = -1.*t1012*t10900*t2138;
  t10977 = t10930 + t10936;
  t10978 = t975*t10977;
  t10986 = t10857 + t10978;
  t10988 = 0.241*t6663*t10986;
  t8926 = t1907*t7125;
  t8940 = 0. + t8926;
  t8893 = t1012*t7125;
  t8907 = 0. + t8893;
  t11071 = -0.16*t3256;
  t11081 = t11071 + t4256;
  t11022 = 0.020000000000000018*t3256;
  t11053 = 0.16*t4245;
  t11054 = t11022 + t11053;
  t9168 = t1907*t7709;
  t9175 = 0. + t9168;
  t9069 = t1012*t7709;
  t9122 = 0. + t9069;
  t10038 = -1.*t1396*t1907*t3032;
  t10047 = t1012*t3032*t2138;
  t10190 = t10038 + t10047;
  t11251 = t1396*t8940;
  t11268 = -1.*t8907*t2138;
  t11278 = 0. + t11251 + t11268;
  t11532 = t3256*t3032;
  t11544 = t1226*t4245;
  t11547 = 0. + t11532 + t11544;
  t11562 = t1396*t9175;
  t11565 = -1.*t9122*t2138;
  t11574 = 0. + t11562 + t11565;
  t9773 = -1.*t1226*t1396*t1907;
  t9774 = t1012*t1226*t2138;
  t9779 = t9773 + t9774;
  t1705 = t1012*t1226*t1396;
  t2144 = t1226*t1907*t2138;
  t2641 = t1705 + t2144;
  t11798 = Cos(var1[3]);
  t11806 = Sin(var1[3]);
  t3175 = -1.*t1012*t1396*t3032;
  t3219 = -1.*t1907*t3032*t2138;
  t3227 = t3175 + t3219;
  t7240 = t1012*t1396*t7125;
  t7362 = t1907*t7125*t2138;
  t7397 = t7240 + t7362;
  t7714 = t1012*t1396*t7709;
  t7716 = t1907*t7709*t2138;
  t7721 = t7714 + t7716;
  t9745 = -1.*t3032*t9743;
  t11670 = t1226*t1396*t1907;
  t11677 = -1.*t1012*t1226*t2138;
  t11685 = t11670 + t11677;
  t7840 = -1.*t1012*t1226*t1396;
  t7950 = -1.*t1226*t1907*t2138;
  t7976 = t7840 + t7950;
  t8087 = t1012*t1396*t3032;
  t8387 = t1907*t3032*t2138;
  t8827 = t8087 + t8387;
  t8923 = -1.*t1396*t8907;
  t9009 = -1.*t8940*t2138;
  t9019 = t8923 + t9009;
  t9133 = -1.*t1396*t9122;
  t9204 = -1.*t9175*t2138;
  t9244 = t9133 + t9204;
  t11719 = t1226*t975;
  t11720 = -1.*t9743*t10190;
  t11721 = t11719 + t11720;
  t11655 = t975*t3032;
  t11710 = -1.*t9743*t11685;
  t11711 = t11655 + t11710;
  t11732 = t975*t7709;
  t11755 = -1.*t9743*t11278;
  t11768 = t975*t11547;
  t11770 = -1.*t9743*t11574;
  t12187 = t1012*t1396*t10776;
  t12190 = t1907*t10776*t2138;
  t12192 = t12187 + t12190;
  t12201 = t11798*t12192;
  t12205 = t975*t10703;
  t12206 = -1.*t9743*t10799;
  t12207 = t12205 + t12206;
  t12210 = -1.*t11806*t12207;
  t12211 = t12201 + t12210;
  t12212 = 0.241*t7670*t12211;
  t12216 = t1012*t1396*t10900;
  t12217 = t1907*t10900*t2138;
  t12222 = t12216 + t12217;
  t12223 = t11798*t12222;
  t12226 = t975*t10776;
  t12228 = -1.*t9743*t10977;
  t12233 = t12226 + t12228;
  t12236 = -1.*t11806*t12233;
  t12237 = t12223 + t12236;
  t12244 = 0.241*t6663*t12237;
  t11013 = 0.194401*t3256;
  t11014 = t3256*t6528;
  t11056 = t3256*t11054;
  t11067 = -1.*t4343*t4245;
  t11083 = t11081*t4245;
  t11086 = t11013 + t11014 + t11056 + t11067 + t11083;
  t12263 = t1396*t8907;
  t12266 = t8940*t2138;
  t12271 = 0. + t12263 + t12266;
  t12273 = 0. + t11732 + t11755;
  t11495 = -1.*t3256*t11081;
  t11505 = t11054*t4245;
  t11508 = t4378 + t11495 + t4838 + t6534 + t11505;
  t12279 = t1396*t9122;
  t12284 = t9175*t2138;
  t12285 = 0. + t12279 + t12284;
  t12306 = 0. + t11768 + t11770;
  t11818 = t1396*t1907*t3032;
  t11820 = -1.*t1012*t3032*t2138;
  t11823 = t11818 + t11820;
  t11870 = -1.*t1396*t1907*t7125;
  t11872 = t1012*t7125*t2138;
  t11876 = t11870 + t11872;
  t11902 = -1.*t1396*t1907*t7709;
  t11907 = t1012*t7709*t2138;
  t11908 = t11902 + t11907;
  t11957 = -1.*t975*t11685;
  t11958 = t9745 + t11957;
  t11963 = -1.*t1226*t9743;
  t11973 = -1.*t975*t10190;
  t11980 = t11963 + t11973;
  t11988 = -1.*t7709*t9743;
  t11989 = -1.*t975*t11278;
  t11996 = t11988 + t11989;
  t12003 = -1.*t11547*t9743;
  t12004 = -1.*t975*t11574;
  t12006 = t12003 + t12004;
  t12102 = t11251 + t11268;
  t12109 = t11562 + t11565;
  t12154 = -1.*t975*t3032;
  t12157 = -1.*t9743*t9779;
  t12161 = t12154 + t12157;
  t12515 = t11806*t12192;
  t12520 = t11798*t12207;
  t12523 = t12515 + t12520;
  t12524 = 0.241*t7670*t12523;
  t12526 = t11806*t12222;
  t12527 = t11798*t12233;
  t12528 = t12526 + t12527;
  t12529 = 0.241*t6663*t12528;
  t12178 = t11798*t3227;
  t12182 = -1.*t11806*t11721;
  t12183 = t12178 + t12182;
  t12327 = t11798*t12271;
  t12343 = -1.*t11806*t12273;
  t12352 = t11798*t12285;
  t12379 = -1.*t11806*t12306;
  t12619 = -0.04*t1226;
  t12620 = 0.04*t3032;
  t12621 = t12619 + t12620;
  t12633 = 0.053565*t1907;
  t12638 = t1012*t12621;
  t12646 = t12633 + t12638;
  t12617 = 0.053565*t1012;
  t12629 = -1.*t1907*t12621;
  t12630 = t12617 + t12629;
  t12654 = t1012*t1396;
  t12660 = t1907*t2138;
  t12661 = t12654 + t12660;
  t12662 = t1396*t12646;
  t12665 = -1.*t12630*t2138;
  t12671 = t12662 + t12665;
  t12598 = -1.*t1396*t1907;
  t12599 = t1012*t2138;
  t12610 = t12598 + t12599;
  t12731 = -1.*t1012;
  t12732 = 1. + t12731;
  t12735 = -0.081715*t12732;
  t12736 = -0.13528*t1012;
  t12738 = t1907*t12621;
  t12744 = t12735 + t12736 + t12738;
  t12751 = -1.*t1226;
  t12752 = 1. + t12751;
  t12753 = -0.194401*t12752;
  t12760 = -0.234401*t1226;
  t12768 = -0.04*t3032;
  t12770 = t12753 + t12760 + t12768;
  t12780 = t1396*t12744;
  t12785 = -1.*t12646*t2138;
  t12788 = t12780 + t12785;
  t12746 = t12744*t2138;
  t12749 = t12662 + t12746;
  t12774 = t12770*t9743;
  t12789 = t975*t12788;
  t12794 = t12774 + t12789;
  t12806 = t975*t12770;
  t12810 = -1.*t9743*t12788;
  t12813 = t12806 + t12810;
  t12632 = t1396*t12630;
  t12649 = t12646*t2138;
  t12650 = t12632 + t12649;
  t12583 = t3032*t9743;
  t12593 = t975*t11685;
  t12597 = t12583 + t12593;
  t10025 = t1226*t9743;
  t10481 = t975*t10190;
  t10519 = t10025 + t10481;
  t12652 = Power(t975,2);
  t12699 = Power(t9743,2);
  t12722 = -1.*t1012*t1396;
  t12723 = -1.*t1907*t2138;
  t12728 = t12722 + t12723;
  t11243 = t7709*t9743;
  t11295 = t975*t11278;
  t11357 = 0. + t11243 + t11295;
  t13016 = -0.194401*t3032;
  t13017 = -1.*t3032*t6528;
  t13018 = t1226*t4343;
  t13043 = 0. + t13016 + t13017 + t13018;
  t13068 = 0.032875*t1907;
  t13073 = t1012*t13043;
  t13097 = t13068 + t13073;
  t13120 = t1396*t13097;
  t13015 = 0.032875*t1012;
  t13049 = -1.*t1907*t13043;
  t13052 = t13015 + t13049;
  t13001 = 0. + t1012;
  t12984 = -1.*t1907;
  t12985 = 0. + t12984;
  t13148 = -1.*t13052*t2138;
  t13149 = t13120 + t13148;
  t13150 = t13001*t1396;
  t13155 = -1.*t12985*t2138;
  t13156 = 0. + t13150 + t13155;
  t13128 = -0.081715*t12732;
  t13131 = -0.11459*t1012;
  t13132 = t1907*t13043;
  t13133 = t13128 + t13131 + t13132;
  t13182 = -0.194401*t12752;
  t13183 = t1226*t6528;
  t13186 = t3032*t4343;
  t13187 = 0. + t13182 + t13183 + t13186;
  t13195 = t1396*t13133;
  t13202 = -1.*t13097*t2138;
  t13204 = 0. + t13195 + t13202;
  t12996 = t1396*t12985;
  t13005 = t13001*t2138;
  t13007 = 0. + t12996 + t13005;
  t13134 = t13133*t2138;
  t13136 = 0. + t13120 + t13134;
  t13160 = t975*t13156;
  t13169 = 0. + t13160;
  t13188 = t13187*t9743;
  t13208 = t975*t13204;
  t13209 = 0. + t13188 + t13208;
  t13175 = -1.*t9743*t13156;
  t13179 = 0. + t13175;
  t13215 = t975*t13187;
  t13221 = -1.*t9743*t13204;
  t13222 = 0. + t13215 + t13221;
  t13067 = t1396*t13052;
  t13101 = t13097*t2138;
  t13104 = t13067 + t13101;
  t11552 = t11547*t9743;
  t11584 = t975*t11574;
  t11615 = 0. + t11552 + t11584;
  t13111 = -1.*t1012*t1396;
  t13113 = t13111 + t12723;
  t13347 = -1.*t1396*t12646;
  t13348 = -1.*t12744*t2138;
  t13349 = t13347 + t13348;
  t13359 = t1396*t1907;
  t13361 = -1.*t1012*t2138;
  t13362 = t13359 + t13361;
  t12823 = -1.*t12610*t12749;
  t12826 = -1.*t975*t12661*t12794;
  t12833 = t9743*t12661*t12813;
  t12836 = t12823 + t12826 + t12833;
  t12852 = t2641*t12749;
  t12856 = t12597*t12794;
  t12858 = t11711*t12813;
  t12860 = t12852 + t12856 + t12858;
  t12901 = t12610*t12749;
  t12902 = t975*t12661*t12794;
  t12903 = -1.*t9743*t12661*t12813;
  t12906 = t12901 + t12902 + t12903;
  t12947 = -1.*t12749*t3227;
  t12958 = -1.*t12794*t10519;
  t12965 = -1.*t12813*t11721;
  t12966 = t12947 + t12958 + t12965;
  t13464 = -1.*t1396*t13097;
  t13466 = -1.*t13133*t2138;
  t13468 = t13464 + t13466;
  t13472 = -1.*t1396*t12985;
  t13476 = -1.*t13001*t2138;
  t13477 = t13472 + t13476;
  t13243 = t13007*t13136;
  t13244 = t13169*t13209;
  t13246 = t13179*t13222;
  t13249 = t13243 + t13244 + t13246;
  t13457 = t13195 + t13202;
  t13270 = -1.*t13136*t12271;
  t13272 = -1.*t13209*t11357;
  t13273 = -1.*t13222*t12273;
  t13275 = t13270 + t13272 + t13273;
  t13461 = t13150 + t13155;
  t13305 = -1.*t13007*t13136;
  t13306 = -1.*t13169*t13209;
  t13307 = -1.*t13179*t13222;
  t13308 = t13305 + t13306 + t13307;
  t13332 = t13136*t12285;
  t13334 = t13209*t11615;
  t13335 = t13222*t12306;
  t13336 = t13332 + t13334 + t13335;
  t13557 = -1.*t12770*t9743;
  t13559 = -1.*t975*t12788;
  t13563 = t13557 + t13559;
  t11764 = t11732 + t11755;
  t13629 = t13215 + t13221;
  t13621 = -1.*t13187*t9743;
  t13624 = -1.*t975*t13204;
  t13625 = t13621 + t13624;
  t11771 = t11768 + t11770;
  t13701 = 0.04*t1226;
  t13703 = t13701 + t12620;
  t13711 = t1396*t1907*t13703;
  t13713 = -1.*t1012*t13703*t2138;
  t13714 = t13711 + t13713;
  t13704 = t1012*t1396*t13703;
  t13705 = t1907*t13703*t2138;
  t13706 = t13704 + t13705;
  t13710 = t12621*t9743;
  t13715 = t975*t13714;
  t13716 = t13710 + t13715;
  t13718 = t975*t12621;
  t13719 = -1.*t9743*t13714;
  t13720 = t13718 + t13719;
  t9880 = t975*t9779;
  t9999 = t9745 + t9880;
  t13797 = -0.194401*t1226;
  t13799 = -1.*t1226*t6528;
  t13806 = -1.*t3032*t4343;
  t13810 = t13797 + t13799 + t13806;
  t13819 = t13016 + t13017 + t13018;
  t13823 = t1396*t1907*t13810;
  t13824 = -1.*t1012*t13810*t2138;
  t13826 = t13823 + t13824;
  t13811 = t1012*t1396*t13810;
  t13813 = t1907*t13810*t2138;
  t13815 = t13811 + t13813;
  t13821 = t13819*t9743;
  t13827 = t975*t13826;
  t13828 = t13821 + t13827;
  t13842 = t975*t13819;
  t13843 = -1.*t9743*t13826;
  t13844 = t13842 + t13843;
  t13795 = t10986*t13249;
  t13910 = -1.*t3032*t11081;
  t13911 = t1226*t11054;
  t13912 = t13910 + t13911;
  t13918 = t1226*t11081;
  t13929 = t3032*t11054;
  t13930 = t13918 + t13929;
  t13936 = t1396*t1907*t13912;
  t13946 = -1.*t1012*t13912*t2138;
  t13947 = t13936 + t13946;
  t13848 = -1.*t13136*t12222;
  t13913 = t1012*t1396*t13912;
  t13914 = t1907*t13912*t2138;
  t13916 = t13913 + t13914;
  t13852 = -1.*t13209*t10986;
  t13855 = -1.*t13222*t12233;
  t13934 = t13930*t9743;
  t13948 = t975*t13947;
  t13949 = t13934 + t13948;
  t13953 = t975*t13930;
  t13956 = -1.*t9743*t13947;
  t13957 = t13953 + t13956;
  t13866 = t10813*t13308;
  t13875 = t13136*t12192;
  t13877 = t13209*t10813;
  t13880 = t13222*t12207;
  t13377 = t2641*t12788;
  t13382 = t11685*t12749;
  t13345 = -1.*t12610*t12788;
  t13357 = -1.*t12661*t12749;
  t13413 = t12610*t12788;
  t13418 = t12661*t12749;
  t13437 = -1.*t12749*t10190;
  t13438 = -1.*t12788*t3227;
  t13458 = t13007*t13457;
  t13463 = t13461*t13136;
  t13489 = -1.*t13136*t12102;
  t13493 = -1.*t13457*t12271;
  t13520 = -1.*t13007*t13457;
  t13521 = -1.*t13461*t13136;
  t13539 = t13136*t12109;
  t13540 = t13457*t12285;
  t14019 = -1.*t12661*t12788;
  t14021 = t14019 + t12823;
  t12841 = t2641*t12650;
  t12842 = t9779*t12749;
  t12651 = -1.*t12610*t12650;
  t12750 = -1.*t12728*t12749;
  t14039 = t12770*t3032;
  t14040 = t11685*t12788;
  t14041 = t14039 + t14040 + t12852;
  t14045 = t12661*t12788;
  t14046 = t14045 + t12901;
  t12879 = t12610*t12650;
  t12886 = t12728*t12749;
  t12923 = -1.*t12749*t11823;
  t12924 = -1.*t12650*t3227;
  t14060 = -1.*t1226*t12770;
  t14061 = -1.*t12788*t10190;
  t14062 = t14060 + t14061 + t12947;
  t14076 = t13156*t13204;
  t14077 = 0. + t14076 + t13243;
  t13106 = t13007*t13104;
  t13145 = t13113*t13136;
  t13253 = -1.*t13136*t11876;
  t13254 = -1.*t13104*t12271;
  t14093 = -1.*t13187*t7709;
  t14094 = -1.*t13204*t11278;
  t14095 = t14093 + t14094 + t13270;
  t14100 = -1.*t13156*t13204;
  t14101 = 0. + t14100 + t13305;
  t13280 = -1.*t13007*t13104;
  t13282 = -1.*t13113*t13136;
  t13317 = t13136*t11908;
  t13318 = t13104*t12285;
  t14124 = t13187*t11547;
  t14125 = t13204*t11574;
  t14132 = t14124 + t14125 + t13332;
  t13708 = -1.*t12610*t13706;
  t13731 = t2641*t13706;
  t13732 = t12749*t3227;
  t13753 = t12610*t13706;
  t13763 = -1.*t7976*t12749;
  t13764 = -1.*t13706*t3227;
  t13816 = t13007*t13815;
  t13851 = -1.*t13815*t12271;
  t13867 = -1.*t13007*t13815;
  t13876 = t13815*t12285;
  t14274 = t12222*t14077;
  t13917 = t13007*t13916;
  t14284 = -1.*t13187*t10776;
  t14286 = -1.*t13204*t10977;
  t13967 = -1.*t13916*t12271;
  t14293 = t12192*t14101;
  t13991 = -1.*t13007*t13916;
  t14301 = t13187*t10703;
  t14302 = t13204*t10799;
  t13999 = t13916*t12285;
  t14397 = -1.*t12985*t13097;
  t14398 = -1.*t13001*t13133;
  t14400 = 0. + t14397 + t14398;
  t14402 = t14400*t10703;
  t14410 = t12985*t13097;
  t14411 = t13001*t13133;
  t14416 = 0. + t14410 + t14411;
  t14417 = t14416*t10776;
  t14469 = 0.007922875*t10776*t7670;
  t14470 = -0.11459*t10703;
  t14471 = -0.081715*t10900;
  t14473 = t14470 + t14471;
  t14474 = 0.241*t6663*t14473;
  p_output1[0]=var2[13]*(-0.5*(0.06108*t11711 - 0.06108*t11721 + 0.241*t11764*t6663 + 0.241*t11771*t7670)*var2[4] - 0.5*(0.06108*t7976*t975 - 0.06108*t8827*t975 + 0.241*t6663*t9019*t975 + 0.241*t7670*t9244*t975)*var2[5] - 0.5*(0.06108*t2641*t975 - 0.06108*t3227*t975 + 0.241*t6663*t7397*t975 + 0.241*t7670*t7721*t975)*var2[12] - 0.5*(0.06108*t10519 + t10852 + t10988 - 0.06108*t9999)*var2[13] - 0.5*(t10852 + t10988 + 0.241*t11086*t11357 + 0.241*t11508*t11615)*var2[14]);
  p_output1[1]=var2[13]*(-0.5*(0.06108*(-1.*t11711*t11798 - 1.*t11806*t2641) - 0.06108*(-1.*t11721*t11798 - 1.*t11806*t3227) + 0.241*(-1.*t11806*t12271 - 1.*t11798*t12273)*t6663 + 0.241*(-1.*t11806*t12285 - 1.*t11798*t12306)*t7670)*var2[3] - 0.5*(-0.06108*t11806*t11958 + 0.06108*t11806*t11980 - 0.241*t11806*t11996*t6663 - 0.241*t11806*t12006*t7670)*var2[4] - 0.5*(0.06108*(t11685*t11798 + t11806*t7976*t9743) - 0.06108*(t10190*t11798 + t11806*t8827*t9743) + 0.241*t6663*(t11798*t12102 + t11806*t9019*t9743) + 0.241*t7670*(t11798*t12109 + t11806*t9244*t9743))*var2[5] - 0.5*(-0.06108*(t11798*t11823 + t11806*t3227*t9743) + 0.241*t6663*(t11798*t11876 + t11806*t7397*t9743) + 0.241*t7670*(t11798*t11908 + t11806*t7721*t9743) + 0.06108*(t11806*t2641*t9743 + t11798*t9779))*var2[12] - 0.5*(0.06108*t12183 + t12212 + t12244 - 0.06108*(-1.*t11806*t12161 + t11798*t7976))*var2[13] - 0.5*(t12212 + t12244 + 0.241*t11086*(0. + t12327 + t12343) + 0.241*t11508*(0. + t12352 + t12379))*var2[14]);
  p_output1[2]=var2[13]*(-0.5*(-0.06108*t12183 + 0.06108*(-1.*t11711*t11806 + t11798*t2641) + 0.241*(t12327 + t12343)*t6663 + 0.241*(t12352 + t12379)*t7670)*var2[3] - 0.5*(0.06108*t11798*t11958 - 0.06108*t11798*t11980 + 0.241*t11798*t11996*t6663 + 0.241*t11798*t12006*t7670)*var2[4] - 0.5*(0.06108*(t11685*t11806 - 1.*t11798*t7976*t9743) - 0.06108*(t10190*t11806 - 1.*t11798*t8827*t9743) + 0.241*t6663*(t11806*t12102 - 1.*t11798*t9019*t9743) + 0.241*t7670*(t11806*t12109 - 1.*t11798*t9244*t9743))*var2[5] - 0.5*(-0.06108*(t11806*t11823 - 1.*t11798*t3227*t9743) + 0.241*t6663*(t11806*t11876 - 1.*t11798*t7397*t9743) + 0.241*t7670*(t11806*t11908 - 1.*t11798*t7721*t9743) + 0.06108*(-1.*t11798*t2641*t9743 + t11806*t9779))*var2[12] - 0.5*(t12524 + t12529 + 0.06108*(t11721*t11798 + t11806*t3227) - 0.06108*(t11798*t12161 + t11806*t7976))*var2[13] - 0.5*(0.241*t11086*(0. + t11806*t12271 + t11798*t12273) + 0.241*t11508*(0. + t11806*t12285 + t11798*t12306) + t12524 + t12529)*var2[14]);
  p_output1[3]=var2[13]*(-0.5*(-0.06108*(t11711*t12836 - 1.*t12661*t12860*t9743 + t12597*(t12661*t12794*t9743 + t12661*t13563*t9743) + t12661*(t11711*t12794 + t11958*t12813 + t12597*t12813 + t11711*t13563)*t975) + 0.06108*(t11721*t12906 - 1.*t12661*t12966*t9743 + t10519*(-1.*t12661*t12794*t9743 - 1.*t12661*t13563*t9743) + t12661*(-1.*t11721*t12794 - 1.*t10519*t12813 - 1.*t11980*t12813 - 1.*t11721*t13563)*t975) + 0.241*t7670*(t11764*t13249 + t13169*(-1.*t11764*t13209 - 1.*t11996*t13222 - 1.*t12273*t13625 - 1.*t11357*t13629) - 1.*t13156*t13275*t9743 + t11357*(t13179*t13625 + t13169*t13629 - 1.*t13156*t13209*t9743 - 1.*t13156*t13222*t975)) + 0.241*t6663*(t11771*t13308 + t13169*(t11771*t13209 + t12006*t13222 + t12306*t13625 + t11615*t13629) - 1.*t13156*t13336*t9743 + t11615*(-1.*t13179*t13625 - 1.*t13169*t13629 + t13156*t13209*t9743 + t13156*t13222*t975)))*var2[4] - 0.5*(-0.06108*(t12860*t13362*t975 + t12836*t7976*t975 + t12597*(t13345 - 1.*t12652*t12661*t13349 - 1.*t12661*t12699*t13349 + t13357 + t12813*t13362*t9743 - 1.*t12794*t13362*t975) + t12661*t975*(t13377 + t13382 - 1.*t11711*t13349*t9743 - 1.*t12813*t7976*t9743 + t12597*t13349*t975 + t12794*t7976*t975)) + 0.06108*(t12966*t13362*t975 + t12906*t8827*t975 + t10519*(t12652*t12661*t13349 + t12661*t12699*t13349 + t13413 + t13418 - 1.*t12813*t13362*t9743 + t12794*t13362*t975) + t12661*t975*(t13437 + t13438 + t11721*t13349*t9743 + t12813*t8827*t9743 - 1.*t10519*t13349*t975 - 1.*t12794*t8827*t975)) + 0.241*t7670*(t13275*t13477*t975 + t13249*t9019*t975 + t11357*(t13458 + t13463 - 1.*t13179*t13468*t9743 - 1.*t13222*t13477*t9743 + t13169*t13468*t975 + t13209*t13477*t975) + t13169*(t13489 + t13493 + t12273*t13468*t9743 + t13222*t9019*t9743 - 1.*t11357*t13468*t975 - 1.*t13209*t9019*t975)) + 0.241*t6663*(t13336*t13477*t975 + t13308*t9244*t975 + t11615*(t13520 + t13521 + t13179*t13468*t9743 + t13222*t13477*t9743 - 1.*t13169*t13468*t975 - 1.*t13209*t13477*t975) + t13169*(t13539 + t13540 - 1.*t12306*t13468*t9743 - 1.*t13222*t9244*t9743 + t11615*t13468*t975 + t13209*t9244*t975)))*var2[5] - 0.5*(-0.06108*(t12610*t12860*t975 + t12836*t2641*t975 + t12597*(t12651 - 1.*t12652*t12661*t12671 - 1.*t12661*t12671*t12699 + t12750 + t12610*t12813*t9743 - 1.*t12610*t12794*t975) + t12661*t975*(t12841 + t12842 - 1.*t11711*t12671*t9743 - 1.*t12813*t2641*t9743 + t12597*t12671*t975 + t12794*t2641*t975)) + 0.06108*(t12610*t12966*t975 + t12906*t3227*t975 + t10519*(t12652*t12661*t12671 + t12661*t12671*t12699 + t12879 + t12886 - 1.*t12610*t12813*t9743 + t12610*t12794*t975) + t12661*t975*(t12923 + t12924 + t11721*t12671*t9743 + t12813*t3227*t9743 - 1.*t10519*t12671*t975 - 1.*t12794*t3227*t975)) + 0.241*t7670*(t12610*t13275*t975 + t13249*t7397*t975 + t11357*(t13106 + t13145 - 1.*t13149*t13179*t9743 - 1.*t12610*t13222*t9743 + t13149*t13169*t975 + t12610*t13209*t975) + t13169*(t13253 + t13254 + t12273*t13149*t9743 + t13222*t7397*t9743 - 1.*t11357*t13149*t975 - 1.*t13209*t7397*t975)) + 0.241*t6663*(t12610*t13336*t975 + t13308*t7721*t975 + t11615*(t13280 + t13282 + t13149*t13179*t9743 + t12610*t13222*t9743 - 1.*t13149*t13169*t975 - 1.*t12610*t13209*t975) + t13169*(t13317 + t13318 - 1.*t12306*t13149*t9743 - 1.*t13222*t7721*t9743 + t11615*t13149*t975 + t13209*t7721*t975)))*var2[12] - 0.5*(0.241*(t13866 + t11615*(-1.*t13169*t13828 - 1.*t13179*t13844 + t13867) + t13169*(t11615*t13828 + t12306*t13844 + t13875 + t13876 + t13877 + t13880))*t6663 + 0.241*(t13795 + t11357*(t13816 + t13169*t13828 + t13179*t13844) + t13169*(-1.*t11357*t13828 - 1.*t12273*t13844 + t13848 + t13851 + t13852 + t13855))*t7670 - 0.06108*(t10519*t12836 + t12661*(t10519*t12794 + t11721*t12813 + t12597*t13716 + t11711*t13720 + t13731 + t13732)*t975 + t12597*(t13708 + t12661*t13720*t9743 - 1.*t12661*t13716*t975)) + 0.06108*(t10519*(t13753 - 1.*t12661*t13720*t9743 + t12661*t13716*t975) + t12906*t9999 + t12661*t975*(-1.*t12161*t12813 - 1.*t10519*t13716 - 1.*t11721*t13720 + t13763 + t13764 - 1.*t12794*t9999)))*var2[13] - 0.5*(0.241*t11508*(t11357*t13249 + t13169*t13275) + 0.241*t11086*(t11615*t13308 + t13169*t13336) + 0.241*(t13866 + t11615*(-1.*t13169*t13949 - 1.*t13179*t13957 + t13991) + t13169*(t13875 + t13877 + t13880 + t11615*t13949 + t12306*t13957 + t13999))*t6663 + 0.241*(t13795 + t11357*(t13917 + t13169*t13949 + t13179*t13957) + t13169*(t13848 + t13852 + t13855 - 1.*t11357*t13949 - 1.*t12273*t13957 + t13967))*t7670)*var2[14]);
  p_output1[4]=var2[13]*(-0.5*(-0.06108*(t11685*t14021 + t12661*t14041 + (t13345 - 1.*t12661*t13349 + t13357 - 1.*t12788*t13362)*t2641 + t12610*(t11685*t13349 + t13377 + t13382 + t12788*t7976)) + 0.06108*(t10190*t14046 + t12661*t14062 + (t12661*t13349 + t12788*t13362 + t13413 + t13418)*t3227 + t12610*(-1.*t10190*t13349 + t13437 + t13438 - 1.*t12788*t8827)) + 0.241*t7670*(t12271*(t13458 + t13463 + t13156*t13468 + t13204*t13477) + t12102*t14077 + t13461*t14095 + t13007*(-1.*t11278*t13468 + t13489 + t13493 - 1.*t13204*t9019)) + 0.241*t6663*(t12285*(-1.*t13156*t13468 - 1.*t13204*t13477 + t13520 + t13521) + t12109*t14101 + t13461*t14132 + t13007*(t11574*t13468 + t13539 + t13540 + t13204*t9244)))*var2[5] - 0.5*(0.06108*(t12610*(-1.*t10190*t12671 + t12923 + t12924 + t13438) + t11823*t14046 + t12728*t14062 + (t12661*t12671 + t12879 + t12886 + t13413)*t3227) + 0.241*(t12271*(t13106 + t13145 + t13149*t13156 + t12610*t13204) + t11876*t14077 + t13113*t14095 + t13007*(-1.*t11278*t13149 + t13253 + t13254 - 1.*t13204*t7397))*t7670 + 0.241*t6663*(t12285*(-1.*t13149*t13156 - 1.*t12610*t13204 + t13280 + t13282) + t11908*t14101 + t13113*t14132 + t13007*(t11574*t13149 + t13317 + t13318 + t13204*t7721)) - 0.06108*(t12610*(t11685*t12671 + t12841 + t12842 + t13377) + t12728*t14041 + (t12651 - 1.*t12661*t12671 + t12750 + t13345)*t2641 + t14021*t9779))*var2[12] - 0.5*(-0.06108*((t13708 - 1.*t12661*t13714)*t2641 + t12610*(t1226*t12770 + t10190*t12788 + t11685*t13714 + t13731 + t13732 + t12621*t3032) + t14021*t3227) + 0.241*(t12285*(-1.*t13156*t13826 + t13867) + t14293 + t13007*(t11547*t13819 + t11574*t13826 + t13875 + t13876 + t14301 + t14302))*t6663 + 0.241*t7670*(t12271*(t13816 + t13156*t13826) + t14274 + t13007*(-1.*t11278*t13826 + t13848 + t13851 + t14284 + t14286 - 1.*t13819*t7709)) + 0.06108*((t12661*t13714 + t13753)*t3227 + t14046*t7976 + t12610*(-1.*t1226*t12621 - 1.*t10190*t13714 + t13763 + t13764 + t14039 - 1.*t12788*t9779)))*var2[13] - 0.5*(0.241*t11508*(t12271*t14077 + t13007*t14095) + 0.241*t11086*(t12285*t14101 + t13007*t14132) + 0.241*(t12285*(-1.*t13156*t13947 + t13991) + t14293 + t13007*(t13875 + t11547*t13930 + t11574*t13947 + t13999 + t14301 + t14302))*t6663 + 0.241*t7670*(t12271*(t13917 + t13156*t13947) + t14274 + t13007*(t13848 - 1.*t11278*t13947 + t13967 + t14284 + t14286 - 1.*t13930*t7709)))*var2[14]);
  p_output1[5]=var2[13]*(-0.5*(0.06108*t1226*(-1.*t12630*t1907 - 1.*t12744*t1907) - 0.06108*(t12630*t1907 + t12744*t1907)*t3032 + 0.241*t11547*(-1.*t12985*t13052 + t1012*t13097 - 1.*t13001*t13097 + t13133*t1907)*t6663 + 0.241*(t12985*t13052 - 1.*t1012*t13097 + t13001*t13097 - 1.*t13133*t1907)*t7670*t7709)*var2[12] - 0.5*(-0.06108*t1226*(-1.*t1012*t12744 + t12646*t1907) - 0.06108*(t1012*t12744 - 1.*t12646*t1907)*t3032 + 0.241*(t14402 + t11547*(-1.*t1012*t12985*t13810 - 1.*t13001*t13810*t1907))*t6663 + 0.241*t7670*(t14417 + (t1012*t12985*t13810 + t13001*t13810*t1907)*t7709))*var2[13] - 0.5*(t11086*(0. + 0.241*(0. + t11547*t14400)) + 0.241*(t14402 + t11547*(-1.*t1012*t12985*t13912 - 1.*t13001*t13912*t1907))*t6663 + 0.241*t7670*(t14417 + (t1012*t12985*t13912 + t13001*t13912*t1907)*t7709) + t11508*(0. + 0.241*(0. + t14416*t7709)))*var2[14]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=var2[13]*(-0.5*(0.0032717502*t1226 + t14469 + t14474 - 0.0032717502*t3032)*var2[13] - 0.5*(t14469 + t14474 + t11086*(0. + 0.241*(0. - 0.11459*t11547 - 0.081715*t7125)) + t11508*(0. + 0.241*(0. + 0.032875*t7709)))*var2[14]);
  p_output1[13]=-0.5*(t11086*(0. + 0.241*t6663) + 0.241*t11086*t6663 + t11508*(0. + 0.241*t7670) + 0.241*t11508*t7670)*var2[13]*var2[14];
  p_output1[14]=-0.5*(-0.03856*t11086 + 0.004820000000000004*t11508)*var2[13]*var2[14];
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec14_plane.hh"

namespace SymFunction
{

void Ce1_vec14_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
