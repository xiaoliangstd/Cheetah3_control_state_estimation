/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:54:06 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1682;
  double t942;
  double t945;
  double t1697;
  double t3137;
  double t3675;
  double t3791;
  double t3800;
  double t3854;
  double t4040;
  double t4079;
  double t4094;
  double t3346;
  double t3696;
  double t3701;
  double t2162;
  double t380;
  double t420;
  double t2195;
  double t2635;
  double t2855;
  double t6151;
  double t6166;
  double t7085;
  double t7128;
  double t7136;
  double t7185;
  double t7210;
  double t7217;
  double t7258;
  double t7335;
  double t7361;
  double t7371;
  double t6163;
  double t6279;
  double t6520;
  double t7393;
  double t7568;
  double t7713;
  double t7750;
  double t7753;
  double t7768;
  double t7771;
  double t7009;
  double t7234;
  double t7373;
  double t7377;
  double t8342;
  double t8303;
  double t8324;
  double t5016;
  double t8158;
  double t8208;
  double t8225;
  double t8678;
  double t8679;
  double t8658;
  double t8662;
  double t8782;
  double t8788;
  double t8768;
  double t8779;
  double t1248;
  double t2095;
  double t2111;
  double t3723;
  double t4129;
  double t4137;
  double t4141;
  double t4199;
  double t4212;
  double t4237;
  double t4273;
  double t4338;
  double t4630;
  double t4644;
  double t4649;
  double t4750;
  double t4757;
  double t4758;
  double t5365;
  double t5377;
  double t5461;
  double t5525;
  double t5757;
  double t5820;
  double t7740;
  double t7780;
  double t8149;
  double t8157;
  double t8228;
  double t8229;
  double t8237;
  double t8238;
  double t8265;
  double t8277;
  double t8278;
  double t8325;
  double t8347;
  double t8349;
  double t8367;
  double t8379;
  double t8386;
  double t8394;
  double t8418;
  double t8477;
  double t8490;
  double t8496;
  double t8513;
  double t8514;
  double t8559;
  double t8563;
  double t8565;
  double t8569;
  double t8594;
  double t8595;
  double t8602;
  double t8616;
  double t8620;
  double t8672;
  double t8682;
  double t8685;
  double t8688;
  double t8689;
  double t8691;
  double t8693;
  double t8728;
  double t8731;
  double t8749;
  double t8750;
  double t8754;
  double t8760;
  double t8781;
  double t8790;
  double t8792;
  double t8798;
  double t8799;
  double t8800;
  double t8825;
  double t8829;
  double t8835;
  double t9611;
  double t9616;
  double t9644;
  double t9652;
  double t9663;
  double t9665;
  double t9684;
  double t9702;
  double t9772;
  double t9834;
  double t9837;
  double t9840;
  double t10034;
  double t10040;
  double t10041;
  double t10045;
  double t10085;
  double t10096;
  double t10100;
  double t10120;
  double t10031;
  double t10121;
  double t10126;
  double t10192;
  double t10193;
  double t10224;
  double t10277;
  double t10280;
  double t10315;
  double t10424;
  double t10427;
  double t10439;
  double t10443;
  double t10444;
  double t10445;
  double t10447;
  double t10450;
  double t10452;
  double t10468;
  double t10469;
  double t10470;
  double t10420;
  double t10455;
  double t10460;
  double t10515;
  double t10516;
  double t10517;
  double t10406;
  double t10409;
  double t10416;
  double t10490;
  double t10492;
  double t10496;
  double t10555;
  double t10559;
  double t10561;
  double t10721;
  double t10724;
  double t10725;
  double t10729;
  double t10743;
  double t10746;
  double t10749;
  double t10750;
  double t10752;
  double t10754;
  double t10793;
  double t10794;
  double t9951;
  double t10787;
  double t10788;
  double t10762;
  double t10764;
  double t10765;
  double t10801;
  double t10795;
  double t10716;
  double t10717;
  double t10719;
  double t10720;
  double t10755;
  double t10758;
  double t10813;
  double t10841;
  double t10844;
  double t9965;
  double t10918;
  double t10921;
  double t10927;
  double t11106;
  double t11108;
  double t11109;
  double t11112;
  double t11113;
  double t11115;
  double t11119;
  double t11120;
  double t11122;
  double t11126;
  double t11127;
  double t11130;
  double t11140;
  double t11141;
  double t11144;
  double t11147;
  double t11148;
  double t11150;
  double t11163;
  double t8906;
  double t8913;
  double t8918;
  double t11210;
  double t11219;
  double t10497;
  double t11304;
  double t11305;
  double t11309;
  double t10538;
  double t10577;
  double t10610;
  double t10669;
  double t10699;
  double t10845;
  double t11400;
  double t11401;
  double t11402;
  double t11396;
  double t10875;
  double t10960;
  double t11022;
  double t11058;
  double t11079;
  double t10273;
  double t10317;
  double t10319;
  double t11539;
  double t11543;
  double t11546;
  double t10328;
  double t10330;
  double t10349;
  double t11316;
  double t11538;
  double t11550;
  double t11321;
  double t10508;
  double t10523;
  double t10525;
  double t11301;
  double t11311;
  double t10541;
  double t10542;
  double t10544;
  double t11343;
  double t11350;
  double t10579;
  double t10582;
  double t10584;
  double t11359;
  double t11360;
  double t10627;
  double t10641;
  double t10642;
  double t11370;
  double t11372;
  double t10674;
  double t10677;
  double t10679;
  double t11383;
  double t11384;
  double t10700;
  double t10701;
  double t10702;
  double t11398;
  double t11404;
  double t10847;
  double t10848;
  double t10849;
  double t11411;
  double t11414;
  double t10880;
  double t10881;
  double t10897;
  double t11424;
  double t11427;
  double t10964;
  double t10970;
  double t10973;
  double t11439;
  double t11444;
  double t11025;
  double t11028;
  double t11029;
  double t11470;
  double t11479;
  double t11059;
  double t11061;
  double t11063;
  double t11483;
  double t11493;
  double t11080;
  double t11081;
  double t11084;
  double t11818;
  double t11821;
  double t11823;
  double t11864;
  double t11865;
  double t11867;
  double t11973;
  double t11951;
  double t11952;
  double t11953;
  double t11956;
  double t11959;
  double t11962;
  double t12067;
  double t11982;
  double t11985;
  double t8948;
  double t8949;
  double t8965;
  double t11999;
  double t12000;
  double t12005;
  double t12013;
  double t12014;
  double t12020;
  double t12033;
  double t12034;
  double t12035;
  double t12046;
  double t12050;
  double t12052;
  double t11290;
  double t11298;
  double t12130;
  double t12135;
  double t12136;
  double t12153;
  double t12156;
  double t11327;
  double t11332;
  double t11333;
  double t11339;
  double t11340;
  double t11354;
  double t11355;
  double t11356;
  double t11375;
  double t11376;
  double t11379;
  double t11380;
  double t11392;
  double t11394;
  double t12287;
  double t12290;
  double t12277;
  double t12282;
  double t12283;
  double t11417;
  double t11419;
  double t11420;
  double t11432;
  double t11434;
  double t11449;
  double t11450;
  double t11461;
  double t11463;
  double t11500;
  double t11508;
  double t11515;
  double t12523;
  double t12524;
  double t12172;
  double t12185;
  double t12151;
  double t12163;
  double t12202;
  double t12208;
  double t12212;
  double t12222;
  double t12234;
  double t12237;
  double t12249;
  double t12255;
  double t12286;
  double t12296;
  double t12309;
  double t12320;
  double t12341;
  double t12350;
  double t12376;
  double t12383;
  double t12420;
  double t12427;
  double t12453;
  double t12462;
  double t12776;
  double t12783;
  double t12796;
  double t12797;
  double t12803;
  double t12804;
  double t12805;
  double t12806;
  double t12850;
  double t12852;
  double t12902;
  double t12904;
  double t12905;
  double t12906;
  double t12899;
  double t12891;
  double t12894;
  double t12900;
  double t12901;
  double t12912;
  double t12918;
  double t12919;
  double t12920;
  double t12921;
  double t12922;
  double t12923;
  double t12926;
  double t12929;
  double t12930;
  double t12931;
  double t12853;
  double t12855;
  double t12856;
  double t12864;
  double t12865;
  double t12866;
  double t12867;
  double t12872;
  double t12873;
  double t12963;
  double t12964;
  double t12968;
  double t12973;
  double t12976;
  double t12979;
  double t12996;
  double t13001;
  double t13038;
  double t13040;
  double t13041;
  double t13025;
  double t13027;
  double t13028;
  double t13071;
  double t13075;
  double t13079;
  double t13085;
  double t13087;
  double t13092;
  double t11992;
  double t11996;
  double t11997;
  double t13185;
  double t13191;
  double t13195;
  double t13217;
  double t13218;
  double t13221;
  double t8981;
  double t8982;
  double t8993;
  double t13261;
  double t13262;
  double t13265;
  double t9002;
  double t9006;
  double t13276;
  double t13280;
  double t13281;
  double t13283;
  double t13286;
  double t13287;
  double t13307;
  double t13310;
  double t13314;
  double t13320;
  double t13322;
  double t13324;
  double t9086;
  double t9232;
  double t9481;
  double t9485;
  double t13465;
  double t13467;
  double t13468;
  double t13471;
  double t13474;
  double t13476;
  double t13011;
  double t13590;
  double t13593;
  double t13595;
  double t13604;
  double t13606;
  double t13607;
  double t13477;
  double t13485;
  double t13821;
  double t13822;
  double t13823;
  double t13826;
  double t13828;
  double t13832;
  double t13175;
  double t13177;
  double t13515;
  double t13524;
  double t13527;
  double t13539;
  double t13550;
  double t13558;
  double t13214;
  double t13222;
  double t13224;
  double t13611;
  double t13628;
  double t13643;
  double t13958;
  double t13965;
  double t13969;
  double t13978;
  double t13988;
  double t13994;
  double t13182;
  double t13196;
  double t13207;
  double t13708;
  double t13716;
  double t13743;
  double t13750;
  double t13761;
  double t13775;
  double t13780;
  double t12777;
  double t12807;
  double t12813;
  double t12814;
  double t12825;
  double t12826;
  double t12829;
  double t12832;
  double t12834;
  double t12835;
  double t12836;
  double t12837;
  double t12839;
  double t12840;
  double t14214;
  double t14216;
  double t14190;
  double t14193;
  double t14202;
  double t12881;
  double t12882;
  double t12883;
  double t12886;
  double t14249;
  double t14262;
  double t14275;
  double t14241;
  double t14243;
  double t14246;
  double t14247;
  double t14277;
  double t14279;
  double t14283;
  double t14284;
  double t14287;
  double t14292;
  double t14302;
  double t14305;
  double t13032;
  double t13035;
  double t13036;
  double t13044;
  double t13045;
  double t13046;
  double t13053;
  double t13058;
  double t13080;
  double t13093;
  double t13095;
  double t13101;
  double t13102;
  double t13103;
  double t13118;
  double t13121;
  double t13127;
  double t13213;
  double t13227;
  double t13234;
  double t13238;
  double t13271;
  double t13273;
  double t13274;
  double t13282;
  double t13289;
  double t13300;
  double t13301;
  double t13315;
  double t13329;
  double t13334;
  double t13335;
  double t13336;
  double t13341;
  double t13342;
  double t13347;
  double t13348;
  double t13349;
  double t13354;
  double t13355;
  double t13372;
  double t13381;
  double t13382;
  double t13387;
  double t13388;
  double t13389;
  double t13390;
  double t13391;
  double t13394;
  double t13403;
  double t13404;
  double t13409;
  double t13412;
  double t13573;
  double t13578;
  double t13579;
  double t13583;
  double t13589;
  double t13619;
  double t13626;
  double t14411;
  double t14412;
  double t14418;
  double t14425;
  double t14427;
  double t14431;
  double t13674;
  double t13676;
  double t13678;
  double t13686;
  double t13691;
  double t13692;
  double t13696;
  double t13697;
  double t13705;
  double t13732;
  double t13737;
  double t13759;
  double t13771;
  double t13772;
  double t13937;
  double t13942;
  double t13944;
  double t13945;
  double t13957;
  double t14432;
  double t14444;
  double t14009;
  double t14012;
  double t14524;
  double t14525;
  double t14527;
  double t14529;
  double t14535;
  double t14537;
  double t14030;
  double t14034;
  double t14035;
  double t14039;
  double t14044;
  double t14050;
  double t14057;
  double t14059;
  double t14467;
  double t14061;
  double t14064;
  double t14083;
  double t14473;
  double t14094;
  double t14096;
  double t14110;
  double t14486;
  double t14495;
  double t14125;
  double t14127;
  t1682 = Cos(var1[12]);
  t942 = Cos(var1[5]);
  t945 = Sin(var1[12]);
  t1697 = Sin(var1[5]);
  t3137 = Cos(var1[13]);
  t3675 = Sin(var1[13]);
  t3791 = -1.*t3137;
  t3800 = 1. + t3791;
  t3854 = -0.194401*t3800;
  t4040 = -0.234401*t3137;
  t4079 = -0.04*t3675;
  t4094 = t3854 + t4040 + t4079;
  t3346 = -0.04*t3137;
  t3696 = 0.04*t3675;
  t3701 = t3346 + t3696;
  t2162 = Sin(var1[3]);
  t380 = Cos(var1[3]);
  t420 = Sin(var1[4]);
  t2195 = t1682*t942;
  t2635 = t945*t1697;
  t2855 = t2195 + t2635;
  t6151 = Cos(var1[14]);
  t6166 = Sin(var1[14]);
  t7085 = -1.*t6151;
  t7128 = 1. + t7085;
  t7136 = -0.336601*t7128;
  t7185 = -0.356601*t6151;
  t7210 = -0.16*t6166;
  t7217 = 0. + t7136 + t7185 + t7210;
  t7258 = -0.20833*t7128;
  t7335 = -0.36833*t6151;
  t7361 = 0.020000000000000018*t6166;
  t7371 = 0. + t7258 + t7335 + t7361;
  t6163 = t3137*t6151;
  t6279 = -1.*t3675*t6166;
  t6520 = 0. + t6163 + t6279;
  t7393 = t6151*t3675;
  t7568 = t3137*t6166;
  t7713 = 0. + t7393 + t7568;
  t7750 = -0.194401*t3675;
  t7753 = -1.*t3675*t7217;
  t7768 = t3137*t7371;
  t7771 = 0. + t7750 + t7753 + t7768;
  t7009 = -0.194401*t3800;
  t7234 = t3137*t7217;
  t7373 = t3675*t7371;
  t7377 = 0. + t7009 + t7234 + t7373;
  t8342 = 0. + t1682;
  t8303 = -1.*t945;
  t8324 = 0. + t8303;
  t5016 = Cos(var1[4]);
  t8158 = -1.*t6151*t3675;
  t8208 = -1.*t3137*t6166;
  t8225 = 0. + t8158 + t8208;
  t8678 = t945*t8225;
  t8679 = 0. + t8678;
  t8658 = t1682*t8225;
  t8662 = 0. + t8658;
  t8782 = t945*t6520;
  t8788 = 0. + t8782;
  t8768 = t1682*t6520;
  t8779 = 0. + t8768;
  t1248 = t942*t945;
  t2095 = -1.*t1682*t1697;
  t2111 = t1248 + t2095;
  t3723 = -1.*t3137*t3701;
  t4129 = -1.*t4094*t3675;
  t4137 = t3723 + t4129;
  t4141 = -1.*t3137*t4137;
  t4199 = t3137*t4094;
  t4212 = -1.*t3701*t3675;
  t4237 = t4199 + t4212;
  t4273 = -1.*t3675*t4237;
  t4338 = t4141 + t4273;
  t4630 = -1.*t942*t945;
  t4644 = t1682*t1697;
  t4649 = t4630 + t4644;
  t4750 = t1682*t3137*t942;
  t4757 = t3137*t945*t1697;
  t4758 = t4750 + t4757;
  t5365 = t5016*t3675;
  t5377 = t3137*t942*t945;
  t5461 = -1.*t1682*t3137*t1697;
  t5525 = t5377 + t5461;
  t5757 = -1.*t420*t5525;
  t5820 = t5365 + t5757;
  t7740 = -1.*t7377*t7713;
  t7780 = -1.*t7771*t6520;
  t8149 = 0. + t7740 + t7780;
  t8157 = -1.*t6520*t8149;
  t8228 = t7771*t8225;
  t8229 = t7377*t6520;
  t8237 = 0. + t8228 + t8229;
  t8238 = -1.*t7713*t8237;
  t8265 = 0. + t8157 + t8238;
  t8277 = 0.241*t8265;
  t8278 = 0. + t8277;
  t8325 = t942*t8324;
  t8347 = t8342*t1697;
  t8349 = 0. + t8325 + t8347;
  t8367 = t8342*t942;
  t8379 = -1.*t8324*t1697;
  t8386 = 0. + t8367 + t8379;
  t8394 = -1.*t420*t8386;
  t8418 = 0. + t8394;
  t8477 = -1.*t1682*t942*t3675;
  t8490 = -1.*t945*t3675*t1697;
  t8496 = t8477 + t8490;
  t8513 = t3137*t5016;
  t8514 = -1.*t942*t945*t3675;
  t8559 = t1682*t3675*t1697;
  t8563 = t8514 + t8559;
  t8565 = -1.*t420*t8563;
  t8569 = t8513 + t8565;
  t8594 = -0.081715*t8225;
  t8595 = -0.11459*t7713;
  t8602 = 0. + t8594 + t8595;
  t8616 = 0.241*t8602;
  t8620 = 0. + t8616;
  t8672 = t942*t8662;
  t8682 = t8679*t1697;
  t8685 = 0. + t8672 + t8682;
  t8688 = t5016*t6520;
  t8689 = t942*t8679;
  t8691 = -1.*t8662*t1697;
  t8693 = 0. + t8689 + t8691;
  t8728 = -1.*t420*t8693;
  t8731 = 0. + t8688 + t8728;
  t8749 = 0.032875*t6520;
  t8750 = 0. + t8749;
  t8754 = 0.241*t8750;
  t8760 = 0. + t8754;
  t8781 = t942*t8779;
  t8790 = t8788*t1697;
  t8792 = 0. + t8781 + t8790;
  t8798 = t5016*t7713;
  t8799 = t942*t8788;
  t8800 = -1.*t8779*t1697;
  t8825 = 0. + t8799 + t8800;
  t8829 = -1.*t420*t8825;
  t8835 = 0. + t8798 + t8829;
  t9611 = -1.*t3675*t420;
  t9616 = -1.*t5016*t5525;
  t9644 = t9611 + t9616;
  t9652 = -1.*t3137*t420;
  t9663 = -1.*t5016*t8563;
  t9665 = t9652 + t9663;
  t9684 = -1.*t6520*t420;
  t9702 = -1.*t5016*t8693;
  t9772 = t9684 + t9702;
  t9834 = -1.*t7713*t420;
  t9837 = -1.*t5016*t8825;
  t9840 = t9834 + t9837;
  t10034 = -1.*t1682;
  t10040 = 1. + t10034;
  t10041 = -0.081715*t10040;
  t10045 = -0.061715*t1682;
  t10085 = t10041 + t10045;
  t10096 = t10085*t942;
  t10100 = 0.02*t945*t1697;
  t10120 = t10096 + t10100;
  t10031 = 0.194401*t420;
  t10121 = -1.*t5016*t10120;
  t10126 = t10031 + t10121;
  t10192 = -0.194401*t420;
  t10193 = t5016*t10120;
  t10224 = t10192 + t10193;
  t10277 = -0.194401*t5016;
  t10280 = -1.*t420*t10120;
  t10315 = t10277 + t10280;
  t10424 = -0.13528*t1682;
  t10427 = t945*t3701;
  t10439 = t10041 + t10424 + t10427;
  t10443 = t942*t10439;
  t10444 = 0.053565*t945;
  t10445 = t1682*t3701;
  t10447 = t10444 + t10445;
  t10450 = -1.*t10447*t1697;
  t10452 = t10443 + t10450;
  t10468 = t4094*t420;
  t10469 = t5016*t10452;
  t10470 = t10468 + t10469;
  t10420 = -1.*t4094*t420;
  t10455 = -1.*t5016*t10452;
  t10460 = t10420 + t10455;
  t10515 = t5016*t4094;
  t10516 = -1.*t420*t10452;
  t10517 = t10515 + t10516;
  t10406 = t3675*t420;
  t10409 = t5016*t5525;
  t10416 = t10406 + t10409;
  t10490 = t942*t10447;
  t10492 = t10439*t1697;
  t10496 = t10490 + t10492;
  t10555 = t3137*t420;
  t10559 = t5016*t8563;
  t10561 = t10555 + t10559;
  t10721 = -0.081715*t10040;
  t10724 = -0.11459*t1682;
  t10725 = t945*t7771;
  t10729 = t10721 + t10724 + t10725;
  t10743 = t942*t10729;
  t10746 = 0.032875*t945;
  t10749 = t1682*t7771;
  t10750 = t10746 + t10749;
  t10752 = -1.*t10750*t1697;
  t10754 = 0. + t10743 + t10752;
  t10793 = t5016*t7377;
  t10794 = -1.*t420*t10754;
  t9951 = t8688 + t8728;
  t10787 = t5016*t8386;
  t10788 = 0. + t10787;
  t10762 = t7377*t420;
  t10764 = t5016*t10754;
  t10765 = 0. + t10762 + t10764;
  t10801 = 0. + t10793 + t10794;
  t10795 = t10793 + t10794;
  t10716 = t6520*t420;
  t10717 = t5016*t8693;
  t10719 = 0. + t10716 + t10717;
  t10720 = -1.*t7377*t420;
  t10755 = -1.*t5016*t10754;
  t10758 = t10720 + t10755;
  t10813 = t942*t10750;
  t10841 = t10729*t1697;
  t10844 = 0. + t10813 + t10841;
  t9965 = t8798 + t8829;
  t10918 = t7713*t420;
  t10921 = t5016*t8825;
  t10927 = 0. + t10918 + t10921;
  t11106 = -1.*t942*t8324;
  t11108 = -1.*t8342*t1697;
  t11109 = t11106 + t11108;
  t11112 = -1.*t1682*t942;
  t11113 = -1.*t945*t1697;
  t11115 = t11112 + t11113;
  t11119 = -1.*t1682*t3137*t942;
  t11120 = -1.*t3137*t945*t1697;
  t11122 = t11119 + t11120;
  t11126 = t1682*t942*t3675;
  t11127 = t945*t3675*t1697;
  t11130 = t11126 + t11127;
  t11140 = -1.*t942*t8662;
  t11141 = -1.*t8679*t1697;
  t11144 = t11140 + t11141;
  t11147 = -1.*t942*t8779;
  t11148 = -1.*t8788*t1697;
  t11150 = t11147 + t11148;
  t11163 = t8367 + t8379;
  t8906 = t2162*t420*t2111;
  t8913 = t380*t2855;
  t8918 = t8906 + t8913;
  t11210 = t8689 + t8691;
  t11219 = t8799 + t8800;
  t10497 = -1.*t4649*t10496;
  t11304 = -1.*t942*t10447;
  t11305 = -1.*t10439*t1697;
  t11309 = t11304 + t11305;
  t10538 = t4758*t10496;
  t10577 = t4649*t10496;
  t10610 = -1.*t10496*t8496;
  t10669 = -1.*t4758*t10496;
  t10699 = t10496*t8496;
  t10845 = t8349*t10844;
  t11400 = -1.*t942*t10750;
  t11401 = -1.*t10729*t1697;
  t11402 = t11400 + t11401;
  t11396 = t10743 + t10752;
  t10875 = -1.*t10844*t8685;
  t10960 = t10844*t8685;
  t11022 = -1.*t10844*t8792;
  t11058 = -1.*t8349*t10844;
  t11079 = t10844*t8792;
  t10273 = -1.*t420*t10224;
  t10317 = -1.*t5016*t10315;
  t10319 = t10273 + t10317;
  t11539 = 0.02*t942*t945;
  t11543 = -1.*t10085*t1697;
  t11546 = t11539 + t11543;
  t10328 = -0.02*t942*t945;
  t10330 = t10085*t1697;
  t10349 = t10328 + t10330;
  t11316 = -1.*t4649*t10452;
  t11538 = Power(t5016,2);
  t11550 = Power(t420,2);
  t11321 = -1.*t2855*t10496;
  t10508 = -1.*t5016*t2855*t10470;
  t10523 = t420*t2855*t10517;
  t10525 = t10497 + t10508 + t10523;
  t11301 = t4758*t10452;
  t11311 = t5525*t10496;
  t10541 = t10416*t10470;
  t10542 = t5820*t10517;
  t10544 = t10538 + t10541 + t10542;
  t11343 = t4649*t10452;
  t11350 = t2855*t10496;
  t10579 = t5016*t2855*t10470;
  t10582 = -1.*t420*t2855*t10517;
  t10584 = t10577 + t10579 + t10582;
  t11359 = -1.*t10496*t8563;
  t11360 = -1.*t10452*t8496;
  t10627 = -1.*t10470*t10561;
  t10641 = -1.*t10517*t8569;
  t10642 = t10610 + t10627 + t10641;
  t11370 = -1.*t4758*t10452;
  t11372 = -1.*t5525*t10496;
  t10674 = -1.*t10416*t10470;
  t10677 = -1.*t5820*t10517;
  t10679 = t10669 + t10674 + t10677;
  t11383 = t10496*t8563;
  t11384 = t10452*t8496;
  t10700 = t10470*t10561;
  t10701 = t10517*t8569;
  t10702 = t10699 + t10700 + t10701;
  t11398 = t8349*t11396;
  t11404 = t11163*t10844;
  t10847 = t10788*t10765;
  t10848 = t8418*t10801;
  t10849 = t10845 + t10847 + t10848;
  t11411 = -1.*t10844*t11210;
  t11414 = -1.*t11396*t8685;
  t10880 = -1.*t10765*t10719;
  t10881 = -1.*t10801*t8731;
  t10897 = t10875 + t10880 + t10881;
  t11424 = t10844*t11210;
  t11427 = t11396*t8685;
  t10964 = t10765*t10719;
  t10970 = t10801*t8731;
  t10973 = t10960 + t10964 + t10970;
  t11439 = -1.*t10844*t11219;
  t11444 = -1.*t11396*t8792;
  t11025 = -1.*t10765*t10927;
  t11028 = -1.*t10801*t8835;
  t11029 = t11022 + t11025 + t11028;
  t11470 = -1.*t8349*t11396;
  t11479 = -1.*t11163*t10844;
  t11059 = -1.*t10788*t10765;
  t11061 = -1.*t8418*t10801;
  t11063 = t11058 + t11059 + t11061;
  t11483 = t10844*t11219;
  t11493 = t11396*t8792;
  t11080 = t10765*t10927;
  t11081 = t10801*t8835;
  t11084 = t11079 + t11080 + t11081;
  t11818 = 0.053565*t1682;
  t11821 = -1.*t945*t3701;
  t11823 = t11818 + t11821;
  t11864 = 0.032875*t1682;
  t11865 = -1.*t945*t7771;
  t11867 = t11864 + t11865;
  t11973 = -1.*t380*t420*t4649;
  t11951 = t1682*t942*t8225;
  t11952 = t945*t8225*t1697;
  t11953 = t11951 + t11952;
  t11956 = t1682*t942*t6520;
  t11959 = t945*t6520*t1697;
  t11962 = t11956 + t11959;
  t12067 = t2162*t420*t4649;
  t11982 = -1.*t1682*t942;
  t11985 = t11982 + t11113;
  t8948 = t380*t4649;
  t8949 = t2162*t420*t2855;
  t8965 = t8948 + t8949;
  t11999 = -1.*t3137*t942*t945;
  t12000 = t1682*t3137*t1697;
  t12005 = t11999 + t12000;
  t12013 = t942*t945*t3675;
  t12014 = -1.*t1682*t3675*t1697;
  t12020 = t12013 + t12014;
  t12033 = -1.*t942*t945*t8225;
  t12034 = t1682*t8225*t1697;
  t12035 = t12033 + t12034;
  t12046 = -1.*t942*t945*t6520;
  t12050 = t1682*t6520*t1697;
  t12052 = t12046 + t12050;
  t11290 = -1.*t2855*t10452;
  t11298 = t11290 + t10497;
  t12130 = t942*t11823;
  t12135 = t10447*t1697;
  t12136 = t12130 + t12135;
  t12153 = -1.*t11823*t1697;
  t12156 = t10490 + t12153;
  t11327 = t4094*t3675;
  t11332 = t5525*t10452;
  t11333 = t11327 + t11332 + t10538;
  t11339 = t2855*t10452;
  t11340 = t11339 + t10577;
  t11354 = -1.*t3137*t4094;
  t11355 = -1.*t10452*t8563;
  t11356 = t11354 + t11355 + t10610;
  t11375 = -1.*t5525*t10452;
  t11376 = t4129 + t11375 + t10669;
  t11379 = t10452*t8563;
  t11380 = t4199 + t11379 + t10699;
  t11392 = t8386*t10754;
  t11394 = 0. + t11392 + t10845;
  t12287 = -1.*t11867*t1697;
  t12290 = t10813 + t12287;
  t12277 = t942*t11867;
  t12282 = t10750*t1697;
  t12283 = t12277 + t12282;
  t11417 = -1.*t7377*t6520;
  t11419 = -1.*t10754*t8693;
  t11420 = t11417 + t11419 + t10875;
  t11432 = t10754*t8693;
  t11434 = t8229 + t11432 + t10960;
  t11449 = -1.*t10754*t8825;
  t11450 = t7740 + t11449 + t11022;
  t11461 = -1.*t8386*t10754;
  t11463 = 0. + t11461 + t11058;
  t11500 = t7377*t7713;
  t11508 = t10754*t8825;
  t11515 = t11500 + t11508 + t11079;
  t12523 = 0.02*t1682*t1697;
  t12524 = t10328 + t12523;
  t12172 = -1.*t4649*t12136;
  t12185 = -1.*t11115*t10496;
  t12151 = t4758*t12136;
  t12163 = t12005*t10496;
  t12202 = t4649*t12136;
  t12208 = t11115*t10496;
  t12212 = -1.*t10496*t12020;
  t12222 = -1.*t12136*t8496;
  t12234 = -1.*t4758*t12136;
  t12237 = -1.*t12005*t10496;
  t12249 = t10496*t12020;
  t12255 = t12136*t8496;
  t12286 = t8349*t12283;
  t12296 = t11985*t10844;
  t12309 = -1.*t10844*t12035;
  t12320 = -1.*t12283*t8685;
  t12341 = t10844*t12035;
  t12350 = t12283*t8685;
  t12376 = -1.*t10844*t12052;
  t12383 = -1.*t12283*t8792;
  t12420 = -1.*t8349*t12283;
  t12427 = -1.*t11985*t10844;
  t12453 = t10844*t12052;
  t12462 = t12283*t8792;
  t12776 = t8158 + t8208;
  t12783 = t6163 + t6279;
  t12796 = -0.11459*t12783;
  t12797 = -1.*t3137*t6151;
  t12803 = t3675*t6166;
  t12804 = t12797 + t12803;
  t12805 = -0.081715*t12804;
  t12806 = t12796 + t12805;
  t12850 = 0.04*t3137;
  t12852 = t12850 + t3696;
  t12902 = -0.194401*t3137;
  t12904 = -1.*t3137*t7217;
  t12905 = -1.*t3675*t7371;
  t12906 = t12902 + t12904 + t12905;
  t12899 = t7750 + t7753 + t7768;
  t12891 = -1.*t12776*t8149;
  t12894 = -1.*t7771*t12776;
  t12900 = -1.*t12899*t7713;
  t12901 = -1.*t7377*t12783;
  t12912 = -1.*t12906*t6520;
  t12918 = t12894 + t12900 + t12901 + t12912;
  t12919 = -1.*t6520*t12918;
  t12920 = -1.*t12783*t8237;
  t12921 = t7377*t12776;
  t12922 = t12906*t8225;
  t12923 = t12899*t6520;
  t12926 = t7771*t12804;
  t12929 = t12921 + t12922 + t12923 + t12926;
  t12930 = -1.*t7713*t12929;
  t12931 = t12891 + t12919 + t12920 + t12930;
  t12853 = -1.*t3137*t12852;
  t12855 = t11354 + t12853;
  t12856 = -1.*t3137*t12855;
  t12864 = t3675*t4137;
  t12865 = -1.*t3137*t4237;
  t12866 = -1.*t12852*t3675;
  t12867 = t4129 + t12866;
  t12872 = -1.*t3675*t12867;
  t12873 = t12856 + t12864 + t12865 + t12872;
  t12963 = -1.*t1682*t10447*t3675;
  t12964 = -1.*t945*t10439*t3675;
  t12968 = t4199 + t12963 + t12964;
  t12973 = -1.*t1682*t3137*t10447;
  t12976 = -1.*t3137*t945*t10439;
  t12979 = t12973 + t12976 + t4129;
  t12996 = Power(t1682,2);
  t13001 = Power(t945,2);
  t13038 = -1.*t8324*t10750;
  t13040 = -1.*t8342*t10729;
  t13041 = 0. + t13038 + t13040;
  t13025 = t8324*t10750;
  t13027 = t8342*t10729;
  t13028 = 0. + t13025 + t13027;
  t13071 = t10750*t8662;
  t13075 = t10729*t8679;
  t13079 = t8229 + t13071 + t13075;
  t13085 = -1.*t10750*t8779;
  t13087 = -1.*t10729*t8788;
  t13092 = t7740 + t13085 + t13087;
  t11992 = t2162*t4649;
  t11996 = -1.*t380*t420*t2855;
  t11997 = t11992 + t11996;
  t13185 = t942*t945*t12776;
  t13191 = -1.*t1682*t12776*t1697;
  t13195 = t13185 + t13191;
  t13217 = t942*t945*t12804;
  t13218 = -1.*t1682*t12804*t1697;
  t13221 = t13217 + t13218;
  t8981 = t380*t4758;
  t8982 = -1.*t2162*t5820;
  t8993 = t8981 + t8982;
  t13261 = -1.*t5016*t3675;
  t13262 = -1.*t420*t12005;
  t13265 = t13261 + t13262;
  t9002 = t380*t8349;
  t9006 = -1.*t2162*t8418;
  t13276 = t1682*t942*t12776;
  t13280 = t945*t12776*t1697;
  t13281 = t13276 + t13280;
  t13283 = t5016*t12783;
  t13286 = -1.*t420*t13195;
  t13287 = t13283 + t13286;
  t13307 = t1682*t942*t12804;
  t13310 = t945*t12804*t1697;
  t13314 = t13307 + t13310;
  t13320 = t5016*t12776;
  t13322 = -1.*t420*t13221;
  t13324 = t13320 + t13322;
  t9086 = t380*t8685;
  t9232 = -1.*t2162*t8731;
  t9481 = t380*t8792;
  t9485 = -1.*t2162*t8835;
  t13465 = t942*t945*t12852;
  t13467 = -1.*t1682*t12852*t1697;
  t13468 = t13465 + t13467;
  t13471 = t1682*t942*t12852;
  t13474 = t945*t12852*t1697;
  t13476 = t13471 + t13474;
  t13011 = t3137*t3701;
  t13590 = t942*t945*t12906;
  t13593 = -1.*t1682*t12906*t1697;
  t13595 = t13590 + t13593;
  t13604 = t1682*t942*t12906;
  t13606 = t945*t12906*t1697;
  t13607 = t13604 + t13606;
  t13477 = -1.*t4649*t13476;
  t13485 = t4758*t13476;
  t13821 = t3701*t420;
  t13822 = t5016*t13468;
  t13823 = t13821 + t13822;
  t13826 = t5016*t3701;
  t13828 = -1.*t420*t13468;
  t13832 = t13826 + t13828;
  t13175 = t5016*t12005;
  t13177 = t9611 + t13175;
  t13515 = t4649*t13476;
  t13524 = -1.*t11122*t10496;
  t13527 = -1.*t13476*t8496;
  t13539 = -1.*t4758*t13476;
  t13550 = t11122*t10496;
  t13558 = t13476*t8496;
  t13214 = t12776*t420;
  t13222 = t5016*t13221;
  t13224 = t13214 + t13222;
  t13611 = t8349*t13607;
  t13628 = -1.*t10844*t13314;
  t13643 = -1.*t13607*t8685;
  t13958 = t12899*t420;
  t13965 = t5016*t13595;
  t13969 = t13958 + t13965;
  t13978 = t5016*t12899;
  t13988 = -1.*t420*t13595;
  t13994 = t13978 + t13988;
  t13182 = t12783*t420;
  t13196 = t5016*t13195;
  t13207 = t13182 + t13196;
  t13708 = t10844*t13314;
  t13716 = t13607*t8685;
  t13743 = -1.*t10844*t13281;
  t13750 = -1.*t13607*t8792;
  t13761 = -1.*t8349*t13607;
  t13775 = t10844*t13281;
  t13780 = t13607*t8792;
  t12777 = -0.00015845750000000012*t12776;
  t12807 = 0.03856*t12806;
  t12813 = t12777 + t12807;
  t12814 = -0.5*var2[14]*t12813;
  t12825 = -0.194401*t6151;
  t12826 = -1.*t6151*t7217;
  t12829 = t7371*t6166;
  t12832 = 0. + t12825 + t12826 + t12829;
  t12834 = -0.007922875*t12776*t12832;
  t12835 = t6151*t7371;
  t12836 = 0.194401*t6166;
  t12837 = t7217*t6166;
  t12839 = 0. + t12835 + t12836 + t12837;
  t12840 = -0.241*t12839*t12806;
  t14214 = -0.16*t6151;
  t14216 = t14214 + t7361;
  t14190 = 0.020000000000000018*t6151;
  t14193 = 0.16*t6166;
  t14202 = t14190 + t14193;
  t12881 = -0.007922875*t12776*t8750;
  t12882 = -0.241*t8602*t12806;
  t12883 = -1.*t12806*t8620;
  t12886 = -0.032875*t12776*t8760;
  t14249 = -1.*t3675*t14216;
  t14262 = t3137*t14202;
  t14275 = t14249 + t14262;
  t14241 = t3137*t14216;
  t14243 = t3675*t14202;
  t14246 = t14241 + t14243;
  t14247 = -1.*t14246*t7713;
  t14277 = -1.*t14275*t6520;
  t14279 = t12894 + t14247 + t12901 + t14277;
  t14283 = -1.*t6520*t14279;
  t14284 = t14275*t8225;
  t14287 = t14246*t6520;
  t14292 = t12921 + t14284 + t14287 + t12926;
  t14302 = -1.*t7713*t14292;
  t14305 = t12891 + t12920 + t14283 + t14302;
  t13032 = t13028*t6520;
  t13035 = 0. + t13032;
  t13036 = -0.007922875*t12776*t13035;
  t13044 = t13041*t7713;
  t13045 = 0. + t13044;
  t13046 = -0.241*t13045*t12806;
  t13053 = t13041*t12783;
  t13058 = t13028*t12776;
  t13080 = t7713*t13079;
  t13093 = t6520*t13092;
  t13095 = 0. + t13080 + t13093;
  t13101 = t12783*t13079;
  t13102 = t1682*t10750*t12804;
  t13103 = t945*t10729*t12804;
  t13118 = t12776*t13092;
  t13121 = -1.*t1682*t10750*t12776;
  t13127 = -1.*t945*t10729*t12776;
  t13213 = -1.*t8760*t13207;
  t13227 = -1.*t8620*t13224;
  t13234 = -0.241*t12806*t10719;
  t13238 = -0.007922875*t12776*t10927;
  t13271 = t2162*t8349;
  t13273 = t380*t8418;
  t13274 = 0. + t13271 + t13273;
  t13282 = t2162*t13281;
  t13289 = t380*t13287;
  t13300 = t13282 + t13289;
  t13301 = -1.*t8760*t13300;
  t13315 = t2162*t13314;
  t13329 = t380*t13324;
  t13334 = t13315 + t13329;
  t13335 = -1.*t8620*t13334;
  t13336 = t2162*t8685;
  t13341 = t380*t8731;
  t13342 = 0. + t13336 + t13341;
  t13347 = -0.241*t12806*t13342;
  t13348 = t2162*t8792;
  t13349 = t380*t8835;
  t13354 = 0. + t13348 + t13349;
  t13355 = -0.007922875*t12776*t13354;
  t13372 = 0. + t9002 + t9006;
  t13381 = t380*t13281;
  t13382 = -1.*t2162*t13287;
  t13387 = t13381 + t13382;
  t13388 = -1.*t8760*t13387;
  t13389 = t380*t13314;
  t13390 = -1.*t2162*t13324;
  t13391 = t13389 + t13390;
  t13394 = -1.*t8620*t13391;
  t13403 = 0. + t9086 + t9232;
  t13404 = -0.241*t12806*t13403;
  t13409 = 0. + t9481 + t9485;
  t13412 = -0.007922875*t12776*t13409;
  t13573 = t8685*t11394;
  t13578 = t8349*t11420;
  t13579 = t13573 + t13578;
  t13583 = -0.007922875*t12776*t13579;
  t13589 = t13314*t11394;
  t13619 = -1.*t7377*t12776;
  t13626 = -1.*t10754*t13221;
  t14411 = t942*t945*t14275;
  t14412 = -1.*t1682*t14275*t1697;
  t14418 = t14411 + t14412;
  t14425 = t1682*t942*t14275;
  t14427 = t945*t14275*t1697;
  t14431 = t14425 + t14427;
  t13674 = t8792*t11434;
  t13676 = t8685*t11450;
  t13678 = 0. + t13674 + t13676;
  t13686 = t8792*t11463;
  t13691 = t8349*t11515;
  t13692 = t13686 + t13691;
  t13696 = -0.241*t12806*t13692;
  t13697 = t13281*t11434;
  t13705 = t10754*t13221;
  t13732 = t13314*t11450;
  t13737 = -1.*t10754*t13195;
  t13759 = t13281*t11463;
  t13771 = t7377*t12783;
  t13772 = t10754*t13195;
  t13937 = t10719*t10849;
  t13942 = t10788*t10897;
  t13944 = t13937 + t13942;
  t13945 = -0.007922875*t12776*t13944;
  t13957 = t13224*t10849;
  t14432 = t8349*t14431;
  t14444 = -1.*t14431*t8685;
  t14009 = -1.*t10765*t13224;
  t14012 = -1.*t10801*t13324;
  t14524 = t14246*t420;
  t14525 = t5016*t14418;
  t14527 = t14524 + t14525;
  t14529 = t5016*t14246;
  t14535 = -1.*t420*t14418;
  t14537 = t14529 + t14535;
  t14030 = t10927*t10973;
  t14034 = t10719*t11029;
  t14035 = t14030 + t14034;
  t14039 = t10927*t11063;
  t14044 = t10788*t11084;
  t14050 = t14039 + t14044;
  t14057 = -0.241*t12806*t14050;
  t14059 = t13207*t10973;
  t14467 = t14431*t8685;
  t14061 = t10765*t13224;
  t14064 = t10801*t13324;
  t14083 = t13224*t11029;
  t14473 = -1.*t14431*t8792;
  t14094 = -1.*t10765*t13207;
  t14096 = -1.*t10801*t13287;
  t14110 = t13207*t11063;
  t14486 = -1.*t8349*t14431;
  t14495 = t14431*t8792;
  t14125 = t10765*t13207;
  t14127 = t10801*t13287;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(0.00482*(-1.*t2162*t2855 + t2111*t380*t420) - 1.527*t4338*(t2855*t380*t420 - 1.*t2162*t4649) - 0.081793755*t3137*(-1.*t2162*t4758 - 1.*t380*t5820) - 1.*t8278*(-1.*t2162*t8349 - 1.*t380*t8418) + 0.081793755*t3675*(-1.*t2162*t8496 - 1.*t380*t8569) - 1.*t8620*(-1.*t2162*t8685 - 1.*t380*t8731) - 1.*t8760*(-1.*t2162*t8792 - 1.*t380*t8835))*var2[1] - 0.5*(0.081793755*t3675*(t380*t8496 - 1.*t2162*t8569) + 0.00482*t8918 - 1.527*t4338*t8965 - 0.081793755*t3137*t8993 - 1.*t8278*(t9002 + t9006) - 1.*t8620*(t9086 + t9232) - 1.*t8760*(t9481 + t9485))*var2[2])*var2[12];
  p_output1[4]=(-0.5*(-0.00482*t2111*t420 + 1.527*t2855*t420*t4338 - 0.081793755*t3137*t5820 + t420*t8278*t8386 + 0.081793755*t3675*t8569 - 1.*t8620*t9951 - 1.*t8760*t9965)*var2[0] - 0.5*(0.00482*t2111*t2162*t5016 - 1.527*t2162*t2855*t4338*t5016 - 1.*t2162*t5016*t8278*t8386 + 0.081793755*t2162*t3137*t9644 - 0.081793755*t2162*t3675*t9665 + t2162*t8620*t9772 + t2162*t8760*t9840)*var2[1] - 0.5*(-0.00482*t2111*t380*t5016 + 1.527*t2855*t380*t4338*t5016 + t380*t5016*t8278*t8386 - 0.081793755*t3137*t380*t9644 + 0.081793755*t3675*t380*t9665 - 1.*t380*t8620*t9772 - 1.*t380*t8760*t9840)*var2[2] - 0.5*(0.00482*(-1.*t10319*t2855*t420 + t420*(-1.*t10126*t2855*t420 - 1.*t10224*t2855*t420) + t2855*t5016*(-1.*t10126*t5016 - 1.*t10224*t5016) + t5016*(-1.*t10315*t2855*t420 + t10349*t4649 + t10224*t2855*t5016)) + 0.081793755*t3675*(-1.*t10544*t2855*t420 + t10416*(t10460*t2855*t420 + t10470*t2855*t420) + t10525*t5820 + t2855*t5016*(t10416*t10517 + t10460*t5820 + t10470*t5820 + t10517*t9644)) - 0.081793755*t3137*(-1.*t10642*t2855*t420 + t10561*(-1.*t10460*t2855*t420 - 1.*t10470*t2855*t420) + t10584*t8569 + t2855*t5016*(-1.*t10517*t10561 - 1.*t10460*t8569 - 1.*t10470*t8569 - 1.*t10517*t9665)) - 1.527*t4338*(t10702*t5820 + t10679*t8569 + t10561*(-1.*t10416*t10517 - 1.*t10460*t5820 - 1.*t10470*t5820 - 1.*t10517*t9644) + t10416*(t10517*t10561 + t10460*t8569 + t10470*t8569 + t10517*t9665)) - 1.*t8760*(-1.*t10897*t420*t8386 + t10719*(t10788*t10795 - 1.*t10765*t420*t8386 - 1.*t10801*t5016*t8386 + t10758*t8418) + t10849*t9951 + t10788*(-1.*t10719*t10795 - 1.*t10758*t8731 - 1.*t10801*t9772 - 1.*t10765*t9951)) - 1.*t8278*(t11029*t9951 + t10927*(t10719*t10795 + t10758*t8731 + t10801*t9772 + t10765*t9951) + t10973*t9965 + t10719*(-1.*t10795*t10927 - 1.*t10758*t8835 - 1.*t10801*t9840 - 1.*t10765*t9965)) - 1.*t8620*(-1.*t11084*t420*t8386 + t10927*(-1.*t10788*t10795 + t10765*t420*t8386 + t10801*t5016*t8386 - 1.*t10758*t8418) + t11063*t9965 + t10788*(t10795*t10927 + t10758*t8835 + t10801*t9840 + t10765*t9965)))*var2[3])*var2[12];
  p_output1[5]=(-0.5*(0.00482*t11115*t5016 - 0.081793755*t11122*t3137*t5016 + 0.081793755*t11130*t3675*t5016 - 1.527*t2111*t4338*t5016 - 1.*t11109*t5016*t8278 - 1.*t11144*t5016*t8620 - 1.*t11150*t5016*t8760)*var2[0] - 0.5*(0.00482*(t2111*t380 + t11115*t2162*t420) - 0.081793755*t3137*(t11122*t2162*t420 + t380*t5525) - 1.*(t11163*t380 + t11109*t2162*t420)*t8278 + 0.081793755*t3675*(t11130*t2162*t420 + t380*t8563) - 1.*(t11210*t380 + t11144*t2162*t420)*t8620 - 1.*(t11219*t380 + t11150*t2162*t420)*t8760 - 1.527*t4338*t8918)*var2[1] - 0.5*(0.00482*(t2111*t2162 - 1.*t11115*t380*t420) - 1.527*(t2162*t2855 - 1.*t2111*t380*t420)*t4338 - 0.081793755*t3137*(-1.*t11122*t380*t420 + t2162*t5525) - 1.*(t11163*t2162 - 1.*t11109*t380*t420)*t8278 + 0.081793755*t3675*(-1.*t11130*t380*t420 + t2162*t8563) - 1.*(t11210*t2162 - 1.*t11144*t380*t420)*t8620 - 1.*(t11219*t2162 - 1.*t11150*t380*t420)*t8760)*var2[2] - 0.5*(0.00482*(t10319*t2111*t5016 + t420*(t10349*t2855 + t11538*t11546*t2855 + t11546*t11550*t2855 - 1.*t10315*t2111*t420 + t10120*t4649 + t10224*t2111*t5016)) + 0.081793755*t3675*(t10525*t11122*t5016 + t10544*t2111*t5016 + t10416*(t11316 + t11321 - 1.*t11309*t11538*t2855 - 1.*t11309*t11550*t2855 + t10517*t2111*t420 - 1.*t10470*t2111*t5016) + t2855*t5016*(t11301 + t11311 - 1.*t10517*t11122*t420 + t10470*t11122*t5016 + t10416*t11309*t5016 - 1.*t11309*t420*t5820)) - 1.527*t4338*(t10702*t11122*t5016 + t10679*t11130*t5016 + t10561*(t11370 + t11372 + t10517*t11122*t420 - 1.*t10470*t11122*t5016 - 1.*t10416*t11309*t5016 + t11309*t420*t5820) + t10416*(t11383 + t11384 - 1.*t10517*t11130*t420 + t10470*t11130*t5016 + t10561*t11309*t5016 - 1.*t11309*t420*t8569)) - 0.081793755*t3137*(t10584*t11130*t5016 + t10642*t2111*t5016 + t10561*(t11343 + t11350 + t11309*t11538*t2855 + t11309*t11550*t2855 - 1.*t10517*t2111*t420 + t10470*t2111*t5016) + t2855*t5016*(t11359 + t11360 + t10517*t11130*t420 - 1.*t10470*t11130*t5016 - 1.*t10561*t11309*t5016 + t11309*t420*t8569)) - 1.*(t10897*t11109*t5016 + t10849*t11144*t5016 + t10719*(t11398 + t11404 - 1.*t10801*t11109*t420 + t10765*t11109*t5016 + t10788*t11402*t5016 - 1.*t11402*t420*t8418) + t10788*(t11411 + t11414 + t10801*t11144*t420 - 1.*t10765*t11144*t5016 - 1.*t10719*t11402*t5016 + t11402*t420*t8731))*t8760 - 1.*t8620*(t11084*t11109*t5016 + t11063*t11150*t5016 + t10927*(t11470 + t11479 + t10801*t11109*t420 - 1.*t10765*t11109*t5016 - 1.*t10788*t11402*t5016 + t11402*t420*t8418) + t10788*(t11483 + t11493 - 1.*t10801*t11150*t420 + t10765*t11150*t5016 + t10927*t11402*t5016 - 1.*t11402*t420*t8835)) - 1.*t8278*(t11029*t11144*t5016 + t10973*t11150*t5016 + t10927*(t11424 + t11427 - 1.*t10801*t11144*t420 + t10765*t11144*t5016 + t10719*t11402*t5016 - 1.*t11402*t420*t8731) + t10719*(t11439 + t11444 + t10801*t11150*t420 - 1.*t10765*t11150*t5016 - 1.*t10927*t11402*t5016 + t11402*t420*t8835)))*var2[3] - 0.5*(0.00093701282*t2855 + 0.081793755*t3675*(t11333*t2855 + (t11316 + t11321 - 1.*t10452*t2111 - 1.*t11309*t2855)*t4758 + t11298*t5525 + t4649*(t10452*t11122 + t11301 + t11311 + t11309*t5525)) - 0.081793755*t3137*(t11356*t2855 + (t11343 + t11350 + t10452*t2111 + t11309*t2855)*t8496 + t11340*t8563 + t4649*(-1.*t10452*t11130 + t11359 + t11360 - 1.*t11309*t8563)) - 1.527*t4338*(t11380*t5525 + (-1.*t10452*t11122 + t11370 + t11372 - 1.*t11309*t5525)*t8496 + t11376*t8563 + t4758*(t10452*t11130 + t11383 + t11384 + t11309*t8563)) - 1.*(t11210*t11394 + t11163*t11420 + (t10754*t11109 + t11398 + t11404 + t11402*t8386)*t8685 + t8349*(-1.*t10754*t11144 + t11411 + t11414 - 1.*t11402*t8693))*t8760 - 1.*t8278*(t11219*t11434 + t11210*t11450 + (t10754*t11144 + t11424 + t11427 + t11402*t8693)*t8792 + t8685*(-1.*t10754*t11150 + t11439 + t11444 - 1.*t11402*t8825)) - 1.*t8620*(t11219*t11463 + t11163*t11515 + (-1.*t10754*t11109 + t11470 + t11479 - 1.*t11402*t8386)*t8792 + t8349*(t10754*t11150 + t11483 + t11493 + t11402*t8825)))*var2[4])*var2[12];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=(-0.5*(0.00482*t2855*t5016 - 1.527*t4338*t4649*t5016 - 0.081793755*t3137*t4758*t5016 - 1.*t4649*t5016*t8278 + 0.081793755*t3675*t5016*t8496 - 1.*t11953*t5016*t8620 - 1.*t11962*t5016*t8760)*var2[0] - 0.5*(-1.527*(t12067 + t11115*t380)*t4338 - 0.081793755*t3137*(t12005*t380 + t2162*t420*t4758) - 1.*(t12067 + t11985*t380)*t8278 + 0.081793755*t3675*(t12020*t380 + t2162*t420*t8496) - 1.*(t12035*t380 + t11953*t2162*t420)*t8620 - 1.*(t12052*t380 + t11962*t2162*t420)*t8760 + 0.00482*t8965)*var2[1] - 0.5*(0.00482*t11997 - 1.527*(t11973 + t11115*t2162)*t4338 - 0.081793755*t3137*(t12005*t2162 - 1.*t380*t420*t4758) - 1.*(t11973 + t11985*t2162)*t8278 + 0.081793755*t3675*(t12020*t2162 - 1.*t380*t420*t8496) - 1.*(t12035*t2162 - 1.*t11953*t380*t420)*t8620 - 1.*(t12052*t2162 - 1.*t11962*t380*t420)*t8760)*var2[2] - 0.5*(0.081793755*t3675*(t10544*t4649*t5016 + t10525*t4758*t5016 + t10416*(t12172 + t12185 - 1.*t11538*t12156*t2855 - 1.*t11550*t12156*t2855 + t10517*t420*t4649 - 1.*t10470*t4649*t5016) + t2855*t5016*(t12151 + t12163 - 1.*t10517*t420*t4758 + t10416*t12156*t5016 + t10470*t4758*t5016 - 1.*t12156*t420*t5820)) - 1.527*t4338*(t10702*t4758*t5016 + t10561*(t12234 + t12237 + t10517*t420*t4758 - 1.*t10416*t12156*t5016 - 1.*t10470*t4758*t5016 + t12156*t420*t5820) + t10679*t5016*t8496 + t10416*(t12249 + t12255 + t10561*t12156*t5016 - 1.*t10517*t420*t8496 + t10470*t5016*t8496 - 1.*t12156*t420*t8569)) - 0.081793755*t3137*(t10642*t4649*t5016 + t10561*(t12202 + t12208 + t11538*t12156*t2855 + t11550*t12156*t2855 - 1.*t10517*t420*t4649 + t10470*t4649*t5016) + t10584*t5016*t8496 + t2855*t5016*(t12212 + t12222 - 1.*t10561*t12156*t5016 + t10517*t420*t8496 - 1.*t10470*t5016*t8496 + t12156*t420*t8569)) - 1.*(t10849*t11953*t5016 + t10897*t4649*t5016 + t10719*(t12286 + t12296 - 1.*t10801*t420*t4649 + t10788*t12290*t5016 + t10765*t4649*t5016 - 1.*t12290*t420*t8418) + t10788*(t12309 + t12320 + t10801*t11953*t420 - 1.*t10765*t11953*t5016 - 1.*t10719*t12290*t5016 + t12290*t420*t8731))*t8760 - 1.*t8620*(t11063*t11962*t5016 + t11084*t4649*t5016 + t10927*(t12420 + t12427 + t10801*t420*t4649 - 1.*t10788*t12290*t5016 - 1.*t10765*t4649*t5016 + t12290*t420*t8418) + t10788*(t12453 + t12462 - 1.*t10801*t11962*t420 + t10765*t11962*t5016 + t10927*t12290*t5016 - 1.*t12290*t420*t8835)) - 1.*t8278*(t11029*t11953*t5016 + t10973*t11962*t5016 + t10927*(t12341 + t12350 - 1.*t10801*t11953*t420 + t10765*t11953*t5016 + t10719*t12290*t5016 - 1.*t12290*t420*t8731) + t10719*(t12376 + t12383 + t10801*t11962*t420 - 1.*t10765*t11962*t5016 - 1.*t10927*t12290*t5016 + t12290*t420*t8835)) + 0.00482*(t10319*t4649*t5016 + t420*(t10349*t11115 + t11538*t12524*t2855 + t11550*t12524*t2855 - 1.*t10315*t420*t4649 + t10224*t4649*t5016 + t4649*(-0.02*t1682*t942 - 0.02*t1697*t945))))*var2[3] - 0.5*(0.00093701282*t11115 + 0.081793755*t3675*(t11115*t11333 + t11298*t12005 + (t11316 + t12172 + t12185 - 1.*t12156*t2855)*t4758 + t4649*(t11301 + t12151 + t12163 + t12156*t5525)) - 0.081793755*t3137*(t11115*t11356 + t11340*t12020 + (t11343 + t12202 + t12208 + t12156*t2855)*t8496 + t4649*(t11360 + t12212 + t12222 - 1.*t12156*t8563)) - 1.527*t4338*(t11380*t12005 + t11376*t12020 + (t11370 + t12234 + t12237 - 1.*t12156*t5525)*t8496 + t4758*(t11384 + t12249 + t12255 + t12156*t8563)) - 1.*(t11420*t11985 + t11394*t12035 + (t12286 + t12296 + t10754*t4649 + t12290*t8386)*t8685 + t8349*(-1.*t10754*t11953 + t12309 + t12320 - 1.*t12290*t8693))*t8760 - 1.*t8278*(t11450*t12035 + t11434*t12052 + (t10754*t11953 + t12341 + t12350 + t12290*t8693)*t8792 + t8685*(-1.*t10754*t11962 + t12376 + t12383 - 1.*t12290*t8825)) - 1.*t8620*(t11515*t11985 + t11463*t12052 + (t12420 + t12427 - 1.*t10754*t4649 - 1.*t12290*t8386)*t8792 + t8349*(t10754*t11962 + t12453 + t12462 + t12290*t8825)))*var2[4] - 0.5*(-1.527*(t3137*(-1.*t10439*t1682*t3137 - 1.*t11823*t1682*t3137) + t3675*(-1.*t10439*t1682*t3675 - 1.*t11823*t1682*t3675))*t4338 - 1.*t6520*t8760*(-1.*t10750*t1682 + t11867*t8324 + t10750*t8342 - 1.*t10729*t945) - 1.*t7713*t8620*(t10750*t1682 - 1.*t11867*t8324 - 1.*t10750*t8342 + t10729*t945) - 0.081793755*Power(t3137,2)*(-1.*t10439*t945 - 1.*t11823*t945) + 0.081793755*Power(t3675,2)*(t10439*t945 + t11823*t945) + 0.00482*(-1.*t10085*t945 + 0.02*t1682*t945) - 1.*t8278*(t6520*(-1.*t10729*t1682*t6520 - 1.*t11867*t8779 - 1.*t10750*t8788 + t10750*t6520*t945) + t7713*(t10729*t1682*t8225 + t11867*t8662 + t10750*t8679 - 1.*t10750*t8225*t945)))*var2[5])*var2[12];
  p_output1[13]=var2[12]*(t12814 - 0.5*(-0.241*t10788*t12931 + t13213 + t13227 + t13234 + t13238 + 0.081793755*t10416*t3675 + 0.081793755*t13177*t3675 - 1.527*t12873*t2855*t5016)*var2[0] - 0.5*(-0.241*t12931*t13372 + t13388 + t13394 + t13404 + t13412 + 0.081793755*t3675*(-1.*t13265*t2162 + t11122*t380) - 1.527*t12873*t8965 + 0.081793755*t3675*t8993)*var2[1] - 0.5*(-1.527*t11997*t12873 - 0.241*t12931*t13274 + t13301 + t13335 + t13347 + t13355 + 0.081793755*t3675*(t11122*t2162 + t13265*t380) + 0.081793755*t3675*(t2162*t4758 + t380*t5820))*var2[2] - 0.5*(-1.527*(t10561*t10679 + t10416*t10702)*t12873 + t13945 - 0.241*t12931*t14035 + t14057 + 0.081793755*t3137*(t10416*t10525 + t10544*t2855*t5016) + 0.081793755*t3675*(t10561*t10584 + t10642*t2855*t5016) + 0.081793755*t3675*(t10525*t10561 + t10416*(t13477 + t13832*t2855*t420 - 1.*t13823*t2855*t5016) + t2855*t5016*(t10699 + t10700 + t10701 + t13485 + t10416*t13823 + t13832*t5820)) - 0.081793755*t3137*(t10584*t13177 + t10561*(t13515 - 1.*t13832*t2855*t420 + t13823*t2855*t5016) + t2855*t5016*(-1.*t10470*t13177 - 1.*t10517*t13265 + t13524 + t13527 - 1.*t10561*t13823 - 1.*t13832*t8569)) - 1.527*t4338*(t10561*t10702 + t10679*t13177 + t10561*(t10610 + t10627 + t10641 + t13539 - 1.*t10416*t13823 - 1.*t13832*t5820) + t10416*(t10470*t13177 + t10517*t13265 + t13550 + t13558 + t10561*t13823 + t13832*t8569)) - 1.*(t13957 + t10719*(t13611 + t10788*t13969 + t13994*t8418) + t10788*(t13628 + t13643 - 1.*t10719*t13969 + t14009 + t14012 - 1.*t13994*t8731))*t8760 - 1.*t8278*(t14059 + t14083 + t10927*(t13708 + t13716 + t10719*t13969 + t14061 + t14064 + t13994*t8731) + t10719*(t13743 + t13750 - 1.*t10927*t13969 + t14094 + t14096 - 1.*t13994*t8835)) - 1.*t8620*(t14110 + t10927*(t13761 - 1.*t10788*t13969 - 1.*t13994*t8418) + t10788*(t13775 + t13780 + t10927*t13969 + t14125 + t14127 + t13994*t8835)))*var2[3] - 0.5*(t13583 - 0.241*t12931*t13678 + t13696 + 0.081793755*t3137*(t11333*t4649 + t11298*t4758) + 0.081793755*t3675*((t13477 - 1.*t13468*t2855)*t4758 + t4649*(t10699 + t11379 + t13485 + t3675*t3701 + t4199 + t13468*t5525) + t11298*t8496) + 0.081793755*t3675*(t11356*t4649 + t11340*t8496) - 1.527*t12873*(t11380*t4758 + t11376*t8496) - 0.081793755*t3137*(t11122*t11340 + (t13515 + t13468*t2855)*t8496 + t4649*(t11327 - 1.*t10452*t12005 + t13524 + t13527 + t3723 - 1.*t13468*t8563)) - 1.527*t4338*(t11122*t11376 + t11380*t8496 + (t10610 + t11354 + t11355 + t13539 + t4212 - 1.*t13468*t5525)*t8496 + t4758*(t10452*t12005 + t13011 + t13550 + t13558 + t4129 + t13468*t8563)) - 1.*(t13589 + (t13611 + t13595*t8386)*t8685 + t8349*(t13619 + t13626 + t13628 + t13643 - 1.*t12899*t6520 - 1.*t13595*t8693))*t8760 - 1.*t8278*(t13697 + t13732 + (t12921 + t12923 + t13705 + t13708 + t13716 + t13595*t8693)*t8792 + t8685*(t12900 + t12901 + t13737 + t13743 + t13750 - 1.*t13595*t8825)) - 1.*t8620*(t13759 + (t13761 - 1.*t13595*t8386)*t8792 + t8349*(t13771 + t13772 + t13775 + t13780 + t12899*t7713 + t13595*t8825)))*var2[4] - 0.5*(t13036 + t13046 - 0.241*t12931*t13095 - 1.527*t12873*(t12979*t3137 + t12968*t3675) + 0.16358751*t3137*t3675*(t10439*t1682 - 1.*t10447*t945) + 0.16358751*t3137*t3675*(-1.*t10439*t1682 + t10447*t945) - 1.527*t4338*(t12968*t3137 - 1.*t12979*t3675 + t3675*(t12973 + t12976 + t13011 - 1.*t12852*t12996*t3675 - 1.*t12852*t13001*t3675 + t4129) + t3137*(t11354 - 1.*t12852*t12996*t3137 - 1.*t12852*t13001*t3137 + t10447*t1682*t3675 + t4212 + t10439*t3675*t945)) - 1.*t8620*(t13053 + t7713*(-1.*t12906*t1682*t8324 - 1.*t12906*t8342*t945)) - 1.*t8760*(t13058 + t6520*(t12906*t1682*t8324 + t12906*t8342*t945)) - 1.*t8278*(t13101 + t13118 + t7713*(t12921 + t12923 + t13102 + t13103 + t12906*t1682*t8662 + t12906*t8679*t945) + t6520*(t12900 + t12901 + t13121 + t13127 - 1.*t12906*t1682*t8779 - 1.*t12906*t8788*t945)))*var2[5] - 0.5*(t12881 + t12882 + t12883 + t12886 - 3.054*t12873*t4338 - 0.241*t12931*t8265 - 1.*t12931*t8278)*var2[12] - 0.5*(t12834 + t12840 - 0.0032717502*t3137 + 0.0032717502*t3675)*var2[13]);
  p_output1[14]=var2[12]*(t12814 - 0.5*(t13213 + t13227 + t13234 + t13238 - 0.241*t10788*t14305)*var2[0] - 0.5*(t13388 + t13394 + t13404 + t13412 - 0.241*t13372*t14305)*var2[1] - 0.5*(t13301 + t13335 + t13347 + t13355 - 0.241*t13274*t14305)*var2[2] - 0.5*(t13945 + t14057 - 0.241*t14035*t14305 - 1.*(t13957 + t10719*(t14432 + t10788*t14527 + t14537*t8418) + t10788*(t13628 + t14009 + t14012 + t14444 - 1.*t10719*t14527 - 1.*t14537*t8731))*t8760 - 1.*t8278*(t14059 + t14083 + t10927*(t13708 + t14061 + t14064 + t14467 + t10719*t14527 + t14537*t8731) + t10719*(t13743 + t14094 + t14096 + t14473 - 1.*t10927*t14527 - 1.*t14537*t8835)) - 1.*t8620*(t14110 + t10927*(t14486 - 1.*t10788*t14527 - 1.*t14537*t8418) + t10788*(t13775 + t14125 + t14127 + t14495 + t10927*t14527 + t14537*t8835)))*var2[3] - 0.5*(t13583 + t13696 - 0.241*t13678*t14305 - 1.*(t13589 + (t14432 + t14418*t8386)*t8685 + t8349*(t13619 + t13626 + t13628 + t14444 - 1.*t14246*t6520 - 1.*t14418*t8693))*t8760 - 1.*t8278*(t13697 + t13732 + (t12921 + t13705 + t13708 + t14287 + t14467 + t14418*t8693)*t8792 + t8685*(t12901 + t13737 + t13743 + t14247 + t14473 - 1.*t14418*t8825)) - 1.*t8620*(t13759 + (t14486 - 1.*t14418*t8386)*t8792 + t8349*(t13771 + t13772 + t13775 + t14495 + t14246*t7713 + t14418*t8825)))*var2[4] - 0.5*(t13036 + t13046 - 0.241*t13095*t14305 - 1.*t8620*(t13053 + t7713*(-1.*t14275*t1682*t8324 - 1.*t14275*t8342*t945)) - 1.*t8760*(t13058 + t6520*(t14275*t1682*t8324 + t14275*t8342*t945)) - 1.*t8278*(t13101 + t13118 + t7713*(t12921 + t13102 + t13103 + t14287 + t14275*t1682*t8662 + t14275*t8679*t945) + t6520*(t12901 + t13121 + t13127 + t14247 - 1.*t14275*t1682*t8779 - 1.*t14275*t8788*t945)))*var2[5] - 0.5*(t12881 + t12882 + t12883 + t12886 - 0.241*t14305*t8265 - 1.*t14305*t8278)*var2[12] - 0.5*(t12834 + t12840 - 1.*(0.194401*t6151 + t14202*t6151 + t14216*t6166 + t6151*t7217 - 1.*t6166*t7371)*t8620 - 1.*(t12835 + t12836 + t12837 - 1.*t14216*t6151 + t14202*t6166)*t8760)*var2[13]);
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec13_plane.hh"

namespace SymFunction
{

void Ce3_vec13_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
