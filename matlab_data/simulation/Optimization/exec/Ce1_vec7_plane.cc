/*
 * Automatically Generated from Mathematica.
 * Sun 28 Jul 2019 02:49:53 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t10;
  double t34;
  double t49;
  double t130;
  double t77;
  double t96;
  double t195;
  double t306;
  double t322;
  double t340;
  double t343;
  double t348;
  double t350;
  double t267;
  double t277;
  double t284;
  double t397;
  double t399;
  double t401;
  double t407;
  double t423;
  double t652;
  double t658;
  double t662;
  double t233;
  double t259;
  double t261;
  double t685;
  double t695;
  double t542;
  double t553;
  double t592;
  double t697;
  double t699;
  double t723;
  double t747;
  double t749;
  double t751;
  double t756;
  double t770;
  double t797;
  double t800;
  double t803;
  double t815;
  double t748;
  double t772;
  double t785;
  double t298;
  double t362;
  double t364;
  double t368;
  double t376;
  double t377;
  double t382;
  double t384;
  double t387;
  double t534;
  double t606;
  double t628;
  double t981;
  double t982;
  double t992;
  double t790;
  double t824;
  double t833;
  double t836;
  double t846;
  double t869;
  double t872;
  double t883;
  double t892;
  double t1078;
  double t67;
  double t119;
  double t125;
  double t1086;
  double t1099;
  double t1105;
  double t1469;
  double t1480;
  double t1189;
  double t1201;
  double t1205;
  double t1540;
  double t1550;
  double t1554;
  double t1266;
  double t1267;
  double t1285;
  double t1561;
  double t1573;
  double t1576;
  double t1664;
  double t1687;
  double t1692;
  double t1700;
  double t1555;
  double t1556;
  double t1581;
  double t1588;
  double t1594;
  double t1596;
  double t1602;
  double t1604;
  double t1607;
  double t1609;
  double t1613;
  double t1621;
  double t1622;
  double t1632;
  double t1638;
  double t1642;
  double t1648;
  double t1721;
  double t1657;
  double t1712;
  double t1800;
  double t1810;
  double t1820;
  double t1837;
  double t1847;
  double t1739;
  double t1870;
  double t1879;
  double t1880;
  double t1813;
  double t1848;
  double t1862;
  double t1747;
  double t1953;
  double t1384;
  double t1129;
  double t1132;
  double t1133;
  double t2100;
  double t1348;
  double t1360;
  double t1378;
  double t133;
  double t137;
  double t162;
  double t197;
  double t203;
  double t218;
  double t917;
  double t919;
  double t923;
  double t447;
  double t452;
  double t476;
  double t664;
  double t670;
  double t673;
  double t2186;
  double t2199;
  double t2203;
  double t932;
  double t933;
  double t938;
  double t957;
  double t965;
  double t969;
  double t1011;
  double t1022;
  double t1023;
  double t1038;
  double t1043;
  double t1044;
  double t2409;
  double t2414;
  double t2426;
  double t1107;
  double t1109;
  double t1117;
  double t1122;
  double t1146;
  double t1149;
  double t2577;
  double t2583;
  double t2590;
  double t1185;
  double t1229;
  double t1233;
  double t1243;
  double t1288;
  double t1300;
  double t2101;
  double t2104;
  double t2108;
  double t1461;
  double t1481;
  double t1485;
  double t1488;
  double t1493;
  double t1505;
  double t1508;
  double t1522;
  double t1523;
  double t1532;
  double t1660;
  double t1708;
  double t1714;
  double t1717;
  double t1728;
  double t1745;
  double t1757;
  double t1759;
  double t1774;
  double t2786;
  double t2799;
  double t2800;
  double t1869;
  double t1884;
  double t1889;
  double t1895;
  double t1897;
  double t1912;
  double t1921;
  double t1922;
  double t1926;
  double t2801;
  double t2803;
  double t2807;
  double t2808;
  double t2825;
  double t2831;
  double t2835;
  double t2836;
  double t2838;
  double t2847;
  double t2848;
  double t2849;
  double t2850;
  double t2864;
  double t2869;
  double t2883;
  double t1959;
  double t1964;
  double t1972;
  double t1973;
  double t1982;
  double t1992;
  double t1999;
  double t2004;
  double t2008;
  double t2017;
  double t2052;
  double t2158;
  double t2159;
  double t2163;
  double t2209;
  double t2220;
  double t2231;
  double t2260;
  double t2263;
  double t2267;
  double t3008;
  double t3013;
  double t3015;
  double t3125;
  double t3126;
  double t3133;
  double t2732;
  double t2750;
  double t2762;
  double t2694;
  double t2696;
  double t2701;
  double t2942;
  double t2944;
  double t2947;
  double t3409;
  double t3424;
  double t3429;
  double t3430;
  double t3431;
  double t3433;
  double t3439;
  double t3443;
  double t3452;
  double t3457;
  double t3459;
  double t3469;
  double t3470;
  double t3539;
  double t3540;
  double t3541;
  double t3544;
  double t3545;
  double t3552;
  double t3559;
  double t3560;
  double t3622;
  double t3710;
  double t3714;
  double t3538;
  double t3563;
  double t3568;
  double t3573;
  double t3582;
  double t3583;
  double t3770;
  double t3779;
  double t3782;
  double t3815;
  double t3820;
  double t3827;
  double t3868;
  double t3883;
  double t3895;
  double t3681;
  double t3788;
  double t3964;
  double t3975;
  double t3976;
  double t3724;
  double t3990;
  double t3996;
  double t3828;
  double t3853;
  double t3906;
  double t3923;
  double t3924;
  double t3933;
  double t3936;
  double t3941;
  double t1415;
  double t1425;
  double t1430;
  double t3961;
  double t3983;
  double t3985;
  double t4222;
  double t4224;
  double t4238;
  double t4505;
  double t4508;
  double t4512;
  double t4524;
  double t4526;
  double t4536;
  double t4542;
  double t4544;
  double t4545;
  double t4522;
  double t4638;
  double t4650;
  double t4651;
  double t4670;
  double t4677;
  double t4537;
  double t4540;
  double t4553;
  double t4555;
  double t4556;
  double t4565;
  double t4571;
  double t4573;
  double t4633;
  double t4656;
  double t4659;
  double t3570;
  double t3592;
  double t3610;
  double t3620;
  double t3623;
  double t5177;
  double t5179;
  double t5187;
  double t3863;
  double t3932;
  double t3948;
  double t3952;
  double t5243;
  double t5245;
  double t5249;
  double t4105;
  double t4112;
  double t4123;
  double t4127;
  double t4142;
  double t4149;
  double t4155;
  double t4156;
  double t4278;
  double t4290;
  double t4291;
  double t4293;
  double t4333;
  double t4350;
  double t4353;
  double t4355;
  double t4471;
  double t4473;
  double t4475;
  double t4479;
  double t4541;
  double t4557;
  double t4585;
  double t4592;
  double t5884;
  double t5893;
  double t5901;
  double t4752;
  double t4755;
  double t4772;
  double t4775;
  double t4826;
  double t4827;
  double t4840;
  double t4845;
  double t4909;
  double t4919;
  double t4925;
  double t4932;
  double t4959;
  double t4964;
  double t4967;
  double t4975;
  double t5091;
  double t5101;
  double t5118;
  double t5137;
  double t6365;
  double t6373;
  double t6374;
  double t6458;
  double t6464;
  double t6465;
  double t6680;
  double t6688;
  double t6690;
  double t7007;
  double t7024;
  double t7025;
  double t7093;
  double t7102;
  double t7103;
  double t7040;
  double t7042;
  double t7051;
  double t7061;
  double t7071;
  double t7077;
  double t1380;
  double t1393;
  double t7391;
  double t7392;
  double t7394;
  double t7469;
  double t7495;
  double t7497;
  double t7433;
  double t7436;
  double t7439;
  double t7396;
  double t7406;
  double t7416;
  double t7363;
  double t7364;
  double t7366;
  double t7373;
  double t7534;
  double t7535;
  double t7541;
  double t7551;
  double t7553;
  double t7557;
  double t7559;
  double t7388;
  double t7787;
  double t7790;
  double t7792;
  double t7766;
  double t7773;
  double t7781;
  double t7820;
  double t7827;
  double t7828;
  double t7796;
  double t7798;
  double t7799;
  double t7618;
  double t7636;
  double t7653;
  double t7659;
  double t7680;
  double t7700;
  double t7713;
  double t7732;
  double t7740;
  double t4050;
  double t5372;
  double t4054;
  double t3987;
  double t5242;
  double t4021;
  double t4176;
  double t5479;
  double t4189;
  double t4258;
  double t4260;
  double t5521;
  double t4365;
  double t5676;
  double t4391;
  double t4437;
  double t4440;
  double t5754;
  double t4665;
  double t5864;
  double t4692;
  double t4711;
  double t4718;
  double t5979;
  double t4788;
  double t4793;
  double t6029;
  double t4862;
  double t4873;
  double t6195;
  double t4981;
  double t6257;
  double t5008;
  double t5037;
  double t5057;
  double t6317;
  double t8091;
  double t8093;
  double t5385;
  double t5284;
  double t8124;
  double t8125;
  double t8134;
  double t8149;
  double t8151;
  double t5490;
  double t8177;
  double t8179;
  double t5515;
  double t5699;
  double t8197;
  double t8205;
  double t8243;
  double t8246;
  double t5750;
  double t8264;
  double t8267;
  double t5919;
  double t5962;
  double t8312;
  double t8317;
  double t6020;
  double t8341;
  double t8343;
  double t6151;
  double t8358;
  double t8363;
  double t8408;
  double t8409;
  double t6274;
  double t6303;
  double t8489;
  double t8493;
  double t8494;
  double t7116;
  double t7150;
  double t7231;
  double t7247;
  double t7252;
  double t7276;
  double t7305;
  double t7314;
  double t7501;
  double t7505;
  double t7577;
  double t7626;
  double t7683;
  double t7708;
  double t9038;
  double t9039;
  double t9040;
  double t9043;
  double t9047;
  double t9048;
  double t9049;
  double t9051;
  double t9055;
  double t9057;
  double t9058;
  double t9059;
  double t7786;
  double t7873;
  double t7938;
  double t9085;
  double t9087;
  double t7953;
  double t9089;
  double t9110;
  double t9113;
  double t8001;
  double t8027;
  double t9136;
  double t9436;
  double t9438;
  double t9440;
  double t9447;
  double t9451;
  double t9452;
  double t9010;
  double t9466;
  double t9472;
  double t9502;
  double t9503;
  double t9504;
  double t9513;
  double t9515;
  double t9516;
  double t9536;
  double t9537;
  double t9541;
  double t9492;
  double t9495;
  double t9497;
  double t9499;
  double t9505;
  double t9509;
  double t9519;
  double t9542;
  double t9522;
  double t9527;
  double t9551;
  double t9552;
  double t9564;
  double t9567;
  double t9569;
  double t9606;
  double t9607;
  double t9637;
  double t9638;
  double t9639;
  double t9642;
  double t9643;
  double t9645;
  double t9646;
  double t9647;
  double t9648;
  double t9652;
  double t9690;
  double t9692;
  double t9693;
  t10 = Cos(var1[4]);
  t34 = Cos(var1[5]);
  t49 = Cos(var1[6]);
  t130 = Cos(var1[7]);
  t77 = Sin(var1[5]);
  t96 = Sin(var1[6]);
  t195 = Sin(var1[7]);
  t306 = -1.*t130;
  t322 = 1. + t306;
  t340 = 0.242889*t322;
  t343 = 0.202889*t130;
  t348 = -0.04*t195;
  t350 = t340 + t343 + t348;
  t267 = -0.04*t130;
  t277 = 0.04*t195;
  t284 = t267 + t277;
  t397 = Cos(var1[8]);
  t399 = -1.*t397*t195;
  t401 = Sin(var1[8]);
  t407 = -1.*t130*t401;
  t423 = t399 + t407;
  t652 = t130*t397;
  t658 = -1.*t195*t401;
  t662 = t652 + t658;
  t233 = t49*t77;
  t259 = -1.*t34*t96;
  t261 = t233 + t259;
  t685 = -1.*t397;
  t695 = 1. + t685;
  t542 = t397*t195;
  t553 = t130*t401;
  t592 = t542 + t553;
  t697 = 0.100689*t695;
  t699 = 0.080689*t397;
  t723 = -0.16*t401;
  t747 = t697 + t699 + t723;
  t749 = -0.20833*t695;
  t751 = -0.36833*t397;
  t756 = 0.02*t401;
  t770 = t749 + t751 + t756;
  t797 = 0.242889*t195;
  t800 = -1.*t195*t747;
  t803 = t130*t770;
  t815 = t797 + t800 + t803;
  t748 = t130*t747;
  t772 = t195*t770;
  t785 = t340 + t748 + t772;
  t298 = -1.*t130*t284;
  t362 = -1.*t350*t195;
  t364 = t298 + t362;
  t368 = -1.*t130*t364;
  t376 = t130*t350;
  t377 = -1.*t284*t195;
  t382 = t376 + t377;
  t384 = -1.*t195*t382;
  t387 = t368 + t384;
  t534 = -0.081715*t423;
  t606 = -0.11459*t592;
  t628 = t534 + t606;
  t981 = -1.*t49*t77;
  t982 = t34*t96;
  t992 = t981 + t982;
  t790 = -1.*t785*t592;
  t824 = -1.*t815*t662;
  t833 = t790 + t824;
  t836 = -1.*t662*t833;
  t846 = t815*t423;
  t869 = t785*t662;
  t872 = t846 + t869;
  t883 = -1.*t592*t872;
  t892 = t836 + t883;
  t1078 = Sin(var1[4]);
  t67 = t34*t49;
  t119 = t77*t96;
  t125 = t67 + t119;
  t1086 = -1.*t49*t130*t77;
  t1099 = t34*t130*t96;
  t1105 = t1086 + t1099;
  t1469 = 0.04*t130;
  t1480 = t1469 + t277;
  t1189 = -1.*t49*t77*t423;
  t1201 = t34*t96*t423;
  t1205 = t1189 + t1201;
  t1540 = t1078*t662;
  t1550 = t10*t1205;
  t1554 = t1540 + t1550;
  t1266 = -1.*t49*t77*t662;
  t1267 = t34*t96*t662;
  t1285 = t1266 + t1267;
  t1561 = -1.*t130*t397;
  t1573 = t195*t401;
  t1576 = t1561 + t1573;
  t1664 = 0.242889*t130;
  t1687 = -1.*t130*t747;
  t1692 = -1.*t195*t770;
  t1700 = t1664 + t1687 + t1692;
  t1555 = 0.007922875*t662*t1554;
  t1556 = -0.11459*t662;
  t1581 = -0.081715*t1576;
  t1588 = t1556 + t1581;
  t1594 = 0.241*t1588*t1554;
  t1596 = t1078*t592;
  t1602 = t10*t1285;
  t1604 = t1596 + t1602;
  t1607 = 0.007922875*t423*t1604;
  t1609 = t1078*t423;
  t1613 = -1.*t49*t77*t1576;
  t1621 = t34*t96*t1576;
  t1622 = t1613 + t1621;
  t1632 = t10*t1622;
  t1638 = t1609 + t1632;
  t1642 = 0.241*t628*t1638;
  t1648 = -1.*t423*t833;
  t1721 = -1.*t662*t872;
  t1657 = -1.*t815*t423;
  t1712 = -1.*t785*t662;
  t1800 = -0.16*t397;
  t1810 = t1800 + t756;
  t1820 = 0.02*t397;
  t1837 = 0.16*t401;
  t1847 = t1820 + t1837;
  t1739 = t785*t423;
  t1870 = -1.*t195*t1810;
  t1879 = t130*t1847;
  t1880 = t1870 + t1879;
  t1813 = t130*t1810;
  t1848 = t195*t1847;
  t1862 = t1813 + t1848;
  t1747 = t815*t1576;
  t1953 = Sin(var1[3]);
  t1384 = -1.*t1078*t195;
  t1129 = t49*t77*t195;
  t1132 = -1.*t34*t96*t195;
  t1133 = t1129 + t1132;
  t2100 = Cos(var1[3]);
  t1348 = t49*t130*t77;
  t1360 = -1.*t34*t130*t96;
  t1378 = t1348 + t1360;
  t133 = t34*t49*t130;
  t137 = t130*t77*t96;
  t162 = t133 + t137;
  t197 = -1.*t34*t49*t195;
  t203 = -1.*t77*t96*t195;
  t218 = t197 + t203;
  t917 = -1.*t34*t49;
  t919 = -1.*t77*t96;
  t923 = t917 + t919;
  t447 = t34*t49*t423;
  t452 = t77*t96*t423;
  t476 = t447 + t452;
  t664 = t34*t49*t662;
  t670 = t77*t96*t662;
  t673 = t664 + t670;
  t2186 = t1953*t1078*t261;
  t2199 = t2100*t923;
  t2203 = t2186 + t2199;
  t932 = -1.*t34*t49*t130;
  t933 = -1.*t130*t77*t96;
  t938 = t932 + t933;
  t957 = t34*t49*t195;
  t965 = t77*t96*t195;
  t969 = t957 + t965;
  t1011 = -1.*t34*t49*t423;
  t1022 = -1.*t77*t96*t423;
  t1023 = t1011 + t1022;
  t1038 = -1.*t34*t49*t662;
  t1043 = -1.*t77*t96*t662;
  t1044 = t1038 + t1043;
  t2409 = t1953*t1078*t992;
  t2414 = t2100*t125;
  t2426 = t2409 + t2414;
  t1107 = -1.*t1078*t1105;
  t1109 = t10*t195;
  t1117 = t1107 + t1109;
  t1122 = t10*t130;
  t1146 = -1.*t1078*t1133;
  t1149 = t1122 + t1146;
  t2577 = -1.*t1953*t261;
  t2583 = t2100*t1078*t125;
  t2590 = t2577 + t2583;
  t1185 = t10*t662;
  t1229 = -1.*t1078*t1205;
  t1233 = t1185 + t1229;
  t1243 = t10*t592;
  t1288 = -1.*t1078*t1285;
  t1300 = t1243 + t1288;
  t2101 = t2100*t261;
  t2104 = t1953*t1078*t125;
  t2108 = t2101 + t2104;
  t1461 = -1.*t130*t350;
  t1481 = -1.*t130*t1480;
  t1485 = t1461 + t1481;
  t1488 = -1.*t130*t1485;
  t1493 = t195*t364;
  t1505 = -1.*t130*t382;
  t1508 = -1.*t1480*t195;
  t1522 = t362 + t1508;
  t1523 = -1.*t195*t1522;
  t1532 = t1488 + t1493 + t1505 + t1523;
  t1660 = -1.*t815*t592;
  t1708 = -1.*t1700*t662;
  t1714 = t1657 + t1660 + t1708 + t1712;
  t1717 = -1.*t662*t1714;
  t1728 = t1700*t423;
  t1745 = t815*t662;
  t1757 = t1728 + t1739 + t1745 + t1747;
  t1759 = -1.*t592*t1757;
  t1774 = t1648 + t1717 + t1721 + t1759;
  t2786 = t2100*t476;
  t2799 = -1.*t1953*t1233;
  t2800 = t2786 + t2799;
  t1869 = -1.*t1862*t592;
  t1884 = -1.*t1880*t662;
  t1889 = t1657 + t1869 + t1712 + t1884;
  t1895 = -1.*t662*t1889;
  t1897 = t1880*t423;
  t1912 = t1862*t662;
  t1921 = t1739 + t1897 + t1912 + t1747;
  t1922 = -1.*t592*t1921;
  t1926 = t1648 + t1721 + t1895 + t1922;
  t2801 = 0.007922875*t662*t2800;
  t2803 = 0.241*t1588*t2800;
  t2807 = t2100*t673;
  t2808 = -1.*t1953*t1300;
  t2825 = t2807 + t2808;
  t2831 = 0.007922875*t423*t2825;
  t2835 = t34*t49*t1576;
  t2836 = t77*t96*t1576;
  t2838 = t2835 + t2836;
  t2847 = t2100*t2838;
  t2848 = t10*t423;
  t2849 = -1.*t1078*t1622;
  t2850 = t2848 + t2849;
  t2864 = -1.*t1953*t2850;
  t2869 = t2847 + t2864;
  t2883 = 0.241*t628*t2869;
  t1959 = -1.*t10*t1105;
  t1964 = t1959 + t1384;
  t1972 = -1.*t130*t1078;
  t1973 = -1.*t10*t1133;
  t1982 = t1972 + t1973;
  t1992 = -1.*t1078*t662;
  t1999 = -1.*t10*t1205;
  t2004 = t1992 + t1999;
  t2008 = -1.*t1078*t592;
  t2017 = -1.*t10*t1285;
  t2052 = t2008 + t2017;
  t2158 = -1.*t49*t77*t195;
  t2159 = t34*t96*t195;
  t2163 = t2158 + t2159;
  t2209 = t49*t77*t423;
  t2220 = -1.*t34*t96*t423;
  t2231 = t2209 + t2220;
  t2260 = t49*t77*t662;
  t2263 = -1.*t34*t96*t662;
  t2267 = t2260 + t2263;
  t3008 = -1.*t2100*t1078*t261;
  t3013 = t1953*t923;
  t3015 = t3008 + t3013;
  t3125 = -1.*t2100*t1078*t992;
  t3126 = t1953*t125;
  t3133 = t3125 + t3126;
  t2732 = t2100*t162;
  t2750 = -1.*t1953*t1117;
  t2762 = t2732 + t2750;
  t2694 = -1.*t1078*t1378;
  t2696 = -1.*t10*t195;
  t2701 = t2694 + t2696;
  t2942 = t1953*t261;
  t2944 = -1.*t2100*t1078*t125;
  t2947 = t2942 + t2944;
  t3409 = t1953*t476;
  t3424 = t2100*t1233;
  t3429 = t3409 + t3424;
  t3430 = 0.007922875*t662*t3429;
  t3431 = 0.241*t1588*t3429;
  t3433 = t1953*t673;
  t3439 = t2100*t1300;
  t3443 = t3433 + t3439;
  t3452 = 0.007922875*t423*t3443;
  t3457 = t1953*t2838;
  t3459 = t2100*t2850;
  t3469 = t3457 + t3459;
  t3470 = 0.241*t628*t3469;
  t3539 = -1.*t49;
  t3540 = 1. + t3539;
  t3541 = -0.081715*t3540;
  t3544 = -0.061715*t49;
  t3545 = t3541 + t3544;
  t3552 = t34*t3545;
  t3559 = 0.02*t77*t96;
  t3560 = t3552 + t3559;
  t3622 = -0.02*t34*t96;
  t3710 = 0.02*t49*t77;
  t3714 = t3710 + t3622;
  t3538 = 0.242889*t1078;
  t3563 = t10*t3560;
  t3568 = t3538 + t3563;
  t3573 = 0.242889*t10;
  t3582 = -1.*t1078*t3560;
  t3583 = t3573 + t3582;
  t3770 = 0.053565*t96;
  t3779 = t49*t284;
  t3782 = t3770 + t3779;
  t3815 = -0.13528*t49;
  t3820 = t96*t284;
  t3827 = t3541 + t3815 + t3820;
  t3868 = -1.*t77*t3782;
  t3883 = t34*t3827;
  t3895 = t3868 + t3883;
  t3681 = Power(t10,2);
  t3788 = t34*t3782;
  t3964 = 0.053565*t49;
  t3975 = -1.*t96*t284;
  t3976 = t3964 + t3975;
  t3724 = Power(t1078,2);
  t3990 = -1.*t77*t3976;
  t3996 = t3788 + t3990;
  t3828 = t77*t3827;
  t3853 = t3788 + t3828;
  t3906 = -1.*t1078*t3895;
  t3923 = t10*t350;
  t3924 = t3906 + t3923;
  t3933 = t10*t3895;
  t3936 = t1078*t350;
  t3941 = t3933 + t3936;
  t1415 = t10*t1105;
  t1425 = t1078*t195;
  t1430 = t1415 + t1425;
  t3961 = t77*t3782;
  t3983 = t34*t3976;
  t3985 = t3961 + t3983;
  t4222 = t130*t1078;
  t4224 = t10*t1133;
  t4238 = t4222 + t4224;
  t4505 = 0.032875*t96;
  t4508 = t49*t815;
  t4512 = t4505 + t4508;
  t4524 = -0.11459*t49;
  t4526 = t96*t815;
  t4536 = t3541 + t4524 + t4526;
  t4542 = -1.*t77*t4512;
  t4544 = t34*t4536;
  t4545 = t4542 + t4544;
  t4522 = t34*t4512;
  t4638 = 0.032875*t49;
  t4650 = -1.*t96*t815;
  t4651 = t4638 + t4650;
  t4670 = -1.*t77*t4651;
  t4677 = t4522 + t4670;
  t4537 = t77*t4536;
  t4540 = t4522 + t4537;
  t4553 = -1.*t1078*t4545;
  t4555 = t10*t785;
  t4556 = t4553 + t4555;
  t4565 = t10*t4545;
  t4571 = t1078*t785;
  t4573 = t4565 + t4571;
  t4633 = t77*t4512;
  t4656 = t34*t4651;
  t4659 = t4633 + t4656;
  t3570 = -1.*t1078*t3568;
  t3592 = -1.*t10*t3583;
  t3610 = t3570 + t3592;
  t3620 = t3545*t77;
  t3623 = t3620 + t3622;
  t5177 = -1.*t3545*t77;
  t5179 = 0.02*t34*t96;
  t5187 = t5177 + t5179;
  t3863 = -1.*t261*t3853;
  t3932 = t1078*t125*t3924;
  t3948 = -1.*t10*t125*t3941;
  t3952 = t3863 + t3932 + t3948;
  t5243 = -1.*t34*t3782;
  t5245 = -1.*t77*t3827;
  t5249 = t5243 + t5245;
  t4105 = t162*t3853;
  t4112 = t3924*t1117;
  t4123 = t3941*t1430;
  t4127 = t4105 + t4112 + t4123;
  t4142 = t261*t3853;
  t4149 = -1.*t1078*t125*t3924;
  t4155 = t10*t125*t3941;
  t4156 = t4142 + t4149 + t4155;
  t4278 = -1.*t3853*t218;
  t4290 = -1.*t3941*t4238;
  t4291 = -1.*t3924*t1149;
  t4293 = t4278 + t4290 + t4291;
  t4333 = -1.*t162*t3853;
  t4350 = -1.*t3924*t1117;
  t4353 = -1.*t3941*t1430;
  t4355 = t4333 + t4350 + t4353;
  t4471 = t3853*t218;
  t4473 = t3941*t4238;
  t4475 = t3924*t1149;
  t4479 = t4471 + t4473 + t4475;
  t4541 = t261*t4540;
  t4557 = -1.*t1078*t125*t4556;
  t4585 = t10*t125*t4573;
  t4592 = t4541 + t4557 + t4585;
  t5884 = -1.*t34*t4512;
  t5893 = -1.*t77*t4536;
  t5901 = t5884 + t5893;
  t4752 = -1.*t4540*t476;
  t4755 = -1.*t4573*t1554;
  t4772 = -1.*t4556*t1233;
  t4775 = t4752 + t4755 + t4772;
  t4826 = t4540*t476;
  t4827 = t4573*t1554;
  t4840 = t4556*t1233;
  t4845 = t4826 + t4827 + t4840;
  t4909 = -1.*t4540*t673;
  t4919 = -1.*t4573*t1604;
  t4925 = -1.*t4556*t1300;
  t4932 = t4909 + t4919 + t4925;
  t4959 = -1.*t261*t4540;
  t4964 = t1078*t125*t4556;
  t4967 = -1.*t10*t125*t4573;
  t4975 = t4959 + t4964 + t4967;
  t5091 = t4540*t673;
  t5101 = t4573*t1604;
  t5118 = t4556*t1300;
  t5137 = t5091 + t5101 + t5118;
  t6365 = -0.242889*t1078;
  t6373 = -1.*t10*t3560;
  t6374 = t6365 + t6373;
  t6458 = -1.*t10*t3895;
  t6464 = -1.*t1078*t350;
  t6465 = t6458 + t6464;
  t6680 = -1.*t10*t4545;
  t6688 = -1.*t1078*t785;
  t6690 = t6680 + t6688;
  t7007 = -1.*t49*t77*t1480;
  t7024 = t34*t96*t1480;
  t7025 = t7007 + t7024;
  t7093 = t34*t49*t1480;
  t7102 = t77*t96*t1480;
  t7103 = t7093 + t7102;
  t7040 = -1.*t1078*t7025;
  t7042 = t10*t284;
  t7051 = t7040 + t7042;
  t7061 = t10*t7025;
  t7071 = t1078*t284;
  t7077 = t7061 + t7071;
  t1380 = t10*t1378;
  t1393 = t1380 + t1384;
  t7391 = -1.*t49*t77*t1700;
  t7392 = t34*t96*t1700;
  t7394 = t7391 + t7392;
  t7469 = t34*t49*t1700;
  t7495 = t77*t96*t1700;
  t7497 = t7469 + t7495;
  t7433 = t10*t7394;
  t7436 = t1078*t815;
  t7439 = t7433 + t7436;
  t7396 = -1.*t1078*t7394;
  t7406 = t10*t815;
  t7416 = t7396 + t7406;
  t7363 = t4592*t1554;
  t7364 = t10*t125*t4775;
  t7366 = t7363 + t7364;
  t7373 = 0.007922875*t423*t7366;
  t7534 = t1604*t4845;
  t7535 = t1554*t4932;
  t7541 = t7534 + t7535;
  t7551 = t4975*t1604;
  t7553 = t10*t125*t5137;
  t7557 = t7551 + t7553;
  t7559 = 0.241*t1588*t7557;
  t7388 = t4975*t1554;
  t7787 = -1.*t49*t77*t1880;
  t7790 = t34*t96*t1880;
  t7792 = t7787 + t7790;
  t7766 = t34*t49*t1880;
  t7773 = t77*t96*t1880;
  t7781 = t7766 + t7773;
  t7820 = t10*t7792;
  t7827 = t1078*t1862;
  t7828 = t7820 + t7827;
  t7796 = -1.*t1078*t7792;
  t7798 = t10*t1862;
  t7799 = t7796 + t7798;
  t7618 = t4592*t1638;
  t7636 = -1.*t4540*t2838;
  t7653 = -1.*t4573*t1638;
  t7659 = -1.*t4556*t2850;
  t7680 = t1554*t4845;
  t7700 = t1638*t4932;
  t7713 = t4540*t2838;
  t7732 = t4573*t1638;
  t7740 = t4556*t2850;
  t4050 = t162*t3985;
  t5372 = t162*t3895;
  t4054 = t1378*t3853;
  t3987 = -1.*t261*t3985;
  t5242 = -1.*t261*t3895;
  t4021 = -1.*t923*t3853;
  t4176 = t261*t3985;
  t5479 = t261*t3895;
  t4189 = t923*t3853;
  t4258 = -1.*t3853*t2163;
  t4260 = -1.*t3985*t218;
  t5521 = -1.*t3895*t218;
  t4365 = -1.*t162*t3985;
  t5676 = -1.*t162*t3895;
  t4391 = -1.*t1378*t3853;
  t4437 = t3853*t2163;
  t4440 = t3985*t218;
  t5754 = t3895*t218;
  t4665 = t261*t4659;
  t5864 = t261*t4545;
  t4692 = t923*t4540;
  t4711 = -1.*t4540*t2231;
  t4718 = -1.*t4659*t476;
  t5979 = -1.*t4545*t476;
  t4788 = t4540*t2231;
  t4793 = t4659*t476;
  t6029 = t4545*t476;
  t4862 = -1.*t4540*t2267;
  t4873 = -1.*t4659*t673;
  t6195 = -1.*t4545*t673;
  t4981 = -1.*t261*t4659;
  t6257 = -1.*t261*t4545;
  t5008 = -1.*t923*t4540;
  t5037 = t4540*t2267;
  t5057 = t4659*t673;
  t6317 = t4545*t673;
  t8091 = -1.*t125*t3895;
  t8093 = t8091 + t3863;
  t5385 = t1105*t3853;
  t5284 = -1.*t125*t3853;
  t8124 = t1105*t3895;
  t8125 = t350*t195;
  t8134 = t8124 + t4105 + t8125;
  t8149 = t125*t3895;
  t8151 = t8149 + t4142;
  t5490 = t125*t3853;
  t8177 = -1.*t3895*t1133;
  t8179 = t1461 + t8177 + t4278;
  t5515 = -1.*t3853*t1133;
  t5699 = -1.*t1105*t3853;
  t8197 = -1.*t1105*t3895;
  t8205 = t8197 + t4333 + t362;
  t8243 = t3895*t1133;
  t8246 = t376 + t8243 + t4471;
  t5750 = t3853*t1133;
  t8264 = t125*t4545;
  t8267 = t8264 + t4541;
  t5919 = t125*t4540;
  t5962 = -1.*t4540*t1205;
  t8312 = -1.*t4545*t1205;
  t8317 = t1712 + t8312 + t4752;
  t6020 = t4540*t1205;
  t8341 = t4545*t1205;
  t8343 = t869 + t8341 + t4826;
  t6151 = -1.*t4540*t1285;
  t8358 = -1.*t4545*t1285;
  t8363 = t790 + t8358 + t4909;
  t8408 = -1.*t125*t4545;
  t8409 = t8408 + t4959;
  t6274 = -1.*t125*t4540;
  t6303 = t4540*t1285;
  t8489 = t785*t592;
  t8493 = t4545*t1285;
  t8494 = t8489 + t8493 + t5091;
  t7116 = -1.*t261*t7103;
  t7150 = t162*t7103;
  t7231 = t261*t7103;
  t7247 = -1.*t938*t3853;
  t7252 = -1.*t7103*t218;
  t7276 = -1.*t162*t7103;
  t7305 = t938*t3853;
  t7314 = t7103*t218;
  t7501 = -1.*t261*t7497;
  t7505 = t7497*t673;
  t7577 = t261*t7497;
  t7626 = -1.*t7497*t476;
  t7683 = -1.*t7497*t673;
  t7708 = t7497*t476;
  t9038 = t8267*t476;
  t9039 = t261*t8317;
  t9040 = t9038 + t9039;
  t9043 = 0.007922875*t423*t9040;
  t9047 = t673*t8343;
  t9048 = t476*t8363;
  t9049 = t9047 + t9048;
  t9051 = t8409*t673;
  t9055 = t261*t8494;
  t9057 = t9051 + t9055;
  t9058 = 0.241*t1588*t9057;
  t9059 = t8409*t476;
  t7786 = -1.*t261*t7781;
  t7873 = t7781*t673;
  t7938 = t261*t7781;
  t9085 = t8267*t2838;
  t9087 = -1.*t785*t423;
  t7953 = -1.*t7781*t476;
  t9089 = -1.*t4545*t1622;
  t9110 = t476*t8343;
  t9113 = t2838*t8363;
  t8001 = -1.*t7781*t673;
  t8027 = t7781*t476;
  t9136 = t4545*t1622;
  t9436 = -1.*t49*t3782*t195;
  t9438 = -1.*t96*t3827*t195;
  t9440 = t376 + t9436 + t9438;
  t9447 = -1.*t49*t130*t3782;
  t9451 = -1.*t130*t96*t3827;
  t9452 = t9447 + t9451 + t362;
  t9010 = t130*t284;
  t9466 = Power(t49,2);
  t9472 = Power(t96,2);
  t9502 = t96*t4512;
  t9503 = -1.*t49*t4536;
  t9504 = t9502 + t9503;
  t9513 = -1.*t49*t4512*t662;
  t9515 = -1.*t96*t4536*t662;
  t9516 = t790 + t9513 + t9515;
  t9536 = t49*t4512*t423;
  t9537 = t96*t4536*t423;
  t9541 = t9536 + t9537 + t869;
  t9492 = -1.*t96*t4512;
  t9495 = t49*t4536;
  t9497 = t9492 + t9495;
  t9499 = 0.01584575*t9497*t423*t662;
  t9505 = 0.241*t9504*t662*t628;
  t9509 = 0.241*t9504*t592*t1588;
  t9519 = t423*t9516;
  t9542 = t662*t9541;
  t9522 = -1.*t49*t4512*t423;
  t9527 = -1.*t96*t4536*t423;
  t9551 = t49*t4512*t1576;
  t9552 = t96*t4536*t1576;
  t9564 = t662*t9516;
  t9567 = t592*t9541;
  t9569 = t9564 + t9567;
  t9606 = 0.00052092903125*t423*t662;
  t9607 = 0.482*t628*t1588;
  t9637 = 0.242889*t397;
  t9638 = -1.*t397*t747;
  t9639 = t770*t401;
  t9642 = t9637 + t9638 + t9639;
  t9643 = 0.007922875*t423*t9642;
  t9645 = t397*t770;
  t9646 = -0.242889*t401;
  t9647 = t747*t401;
  t9648 = t9645 + t9646 + t9647;
  t9652 = 0.241*t9648*t1588;
  t9690 = 0.0001584575*t423;
  t9692 = -0.03856*t1588;
  t9693 = t9690 + t9692;
  p_output1[0]=var2[6]*(-0.5*(0.081793755*t1117*t130 - 0.081793755*t1149*t195 - 1.527*t1078*t125*t387 + 0.241*t1233*t628 + 0.007922875*t1300*t662 - 0.241*t1078*t125*t892 + 0.00482*t1078*t992)*var2[4] - 0.5*(0.241*t10*t1023*t628 + 0.007922875*t10*t1044*t662 - 0.00482*t10*t923 + 0.081793755*t10*t130*t938 - 0.081793755*t10*t195*t969 + 1.527*t10*t387*t992 + 0.241*t10*t892*t992)*var2[5] - 0.5*(-0.00482*t10*t125 + 0.081793755*t10*t130*t162 - 0.081793755*t10*t195*t218 + 1.527*t10*t261*t387 + 0.241*t10*t476*t628 + 0.007922875*t10*t662*t673 + 0.241*t10*t261*t892)*var2[6] - 0.5*(1.527*t10*t125*t1532 + t1555 + t1594 + t1607 + t1642 + 0.241*t10*t125*t1774 - 0.081793755*t1393*t195 - 0.081793755*t1430*t195)*var2[7] - 0.5*(t1555 + t1594 + t1607 + t1642 + 0.241*t10*t125*t1926)*var2[8]);
  p_output1[1]=var2[6]*(-0.5*(0.081793755*t130*(-1.*t162*t1953 - 1.*t1117*t2100) - 0.081793755*t195*(-1.*t1149*t2100 - 1.*t1953*t218) + 1.527*t2590*t387 + 0.241*(-1.*t1233*t2100 - 1.*t1953*t476)*t628 + 0.007922875*t662*(-1.*t1300*t2100 - 1.*t1953*t673) + 0.241*t2590*t892 - 0.00482*(-1.*t125*t1953 + t1078*t2100*t992))*var2[3] - 0.5*(-0.081793755*t130*t1953*t1964 + 0.081793755*t195*t1953*t1982 + 1.527*t10*t125*t1953*t387 - 0.241*t1953*t2004*t628 - 0.007922875*t1953*t2052*t662 + 0.241*t10*t125*t1953*t892 - 0.00482*t10*t1953*t992)*var2[4] - 0.5*(1.527*t2426*t387 + 0.241*(t1023*t1078*t1953 + t1205*t2100)*t628 + 0.007922875*(t1044*t1078*t1953 + t1285*t2100)*t662 + 0.241*t2426*t892 + 0.081793755*t130*(t1105*t2100 + t1078*t1953*t938) - 0.081793755*t195*(t1133*t2100 + t1078*t1953*t969) - 0.00482*(t1078*t1953*t923 + t2100*t992))*var2[5] - 0.5*(0.081793755*t130*(t1078*t162*t1953 + t1378*t2100) - 0.00482*t2108 - 0.081793755*t195*(t2100*t2163 + t1078*t1953*t218) + 1.527*t2203*t387 + 0.241*(t2100*t2231 + t1078*t1953*t476)*t628 + 0.007922875*t662*(t2100*t2267 + t1078*t1953*t673) + 0.241*t2203*t892)*var2[6] - 0.5*(1.527*t1532*t2108 + 0.241*t1774*t2108 - 0.081793755*t195*t2762 + t2801 + t2803 + t2831 + t2883 - 0.081793755*t195*(-1.*t1953*t2701 + t2100*t938))*var2[7] - 0.5*(0.241*t1926*t2108 + t2801 + t2803 + t2831 + t2883)*var2[8]);
  p_output1[2]=var2[6]*(-0.5*(-0.081793755*t195*(-1.*t1149*t1953 + t2100*t218) - 0.00482*t2426 + 0.081793755*t130*t2762 + 1.527*t2108*t387 + 0.241*t2800*t628 + 0.007922875*t2825*t662 + 0.241*t2108*t892)*var2[3] - 0.5*(0.081793755*t130*t1964*t2100 - 0.081793755*t195*t1982*t2100 - 1.527*t10*t125*t2100*t387 + 0.241*t2004*t2100*t628 + 0.007922875*t2052*t2100*t662 - 0.241*t10*t125*t2100*t892 + 0.00482*t10*t2100*t992)*var2[4] - 0.5*(1.527*t3133*t387 + 0.241*(t1205*t1953 - 1.*t1023*t1078*t2100)*t628 + 0.007922875*(t1285*t1953 - 1.*t1044*t1078*t2100)*t662 + 0.241*t3133*t892 + 0.081793755*t130*(t1105*t1953 - 1.*t1078*t2100*t938) - 0.081793755*t195*(t1133*t1953 - 1.*t1078*t2100*t969) - 0.00482*(-1.*t1078*t2100*t923 + t1953*t992))*var2[5] - 0.5*(0.081793755*t130*(t1378*t1953 - 1.*t1078*t162*t2100) - 0.081793755*t195*(t1953*t2163 - 1.*t1078*t2100*t218) - 0.00482*t2947 + 1.527*t3015*t387 + 0.241*(t1953*t2231 - 1.*t1078*t2100*t476)*t628 + 0.007922875*t662*(t1953*t2267 - 1.*t1078*t2100*t673) + 0.241*t3015*t892)*var2[6] - 0.5*(-0.081793755*t195*(t162*t1953 + t1117*t2100) + 1.527*t1532*t2947 + 0.241*t1774*t2947 + t3430 + t3431 + t3452 + t3470 - 0.081793755*t195*(t2100*t2701 + t1953*t938))*var2[7] - 0.5*(0.241*t1926*t2947 + t3430 + t3431 + t3452 + t3470)*var2[8]);
  p_output1[3]=var2[6]*(-0.5*(-0.00482*(-1.*t1078*t125*t3610 + t10*(t10*t125*t3568 - 1.*t1078*t125*t3583 + t261*t3623) + t10*t125*(-1.*t10*t3568 - 1.*t10*t6374) + t1078*(-1.*t1078*t125*t3568 - 1.*t1078*t125*t6374)) + 1.527*t387*(t1149*t4355 + t1117*t4479 + t4238*(-1.*t1430*t3924 - 1.*t1964*t3924 - 1.*t1117*t3941 - 1.*t1117*t6465) + t1430*(t1982*t3924 + t1149*t3941 + t3924*t4238 + t1149*t6465)) + 0.081793755*t130*(t1149*t4156 - 1.*t1078*t125*t4293 + t10*t125*(-1.*t1982*t3924 - 1.*t1149*t3941 - 1.*t3924*t4238 - 1.*t1149*t6465) + t4238*(-1.*t1078*t125*t3941 - 1.*t1078*t125*t6465)) - 0.081793755*t195*(t1117*t3952 - 1.*t1078*t125*t4127 + t10*t125*(t1430*t3924 + t1964*t3924 + t1117*t3941 + t1117*t6465) + t1430*(t1078*t125*t3941 + t1078*t125*t6465)) + 0.007922875*t662*(t1233*t4592 - 1.*t1078*t125*t4775 + t10*t125*(-1.*t1554*t4556 - 1.*t2004*t4556 - 1.*t1233*t4573 - 1.*t1233*t6690) + t1554*(-1.*t1078*t125*t4573 - 1.*t1078*t125*t6690)) + 0.241*t628*(t1300*t4975 - 1.*t1078*t125*t5137 + t1604*(t1078*t125*t4573 + t1078*t125*t6690) + t10*t125*(t1604*t4556 + t2052*t4556 + t1300*t4573 + t1300*t6690)) + 0.241*(t1300*t4845 + t1233*t4932 + t1604*(t1554*t4556 + t2004*t4556 + t1233*t4573 + t1233*t6690) + t1554*(-1.*t1604*t4556 - 1.*t2052*t4556 - 1.*t1300*t4573 - 1.*t1300*t6690))*t892)*var2[4] - 0.5*(0.241*(t10*t1044*t4845 + t10*t1023*t4932 + t1604*(-1.*t1023*t1078*t4556 + t10*t1023*t4573 - 1.*t1078*t1233*t5901 + t10*t1554*t5901 + t6020 + t6029) + t1554*(t1044*t1078*t4556 - 1.*t10*t1044*t4573 + t1078*t1300*t5901 - 1.*t10*t1604*t5901 + t6151 + t6195))*t892 + 1.527*t387*(t10*t4479*t938 + t4238*(t1078*t1117*t5249 - 1.*t10*t1430*t5249 + t5676 + t5699 + t1078*t3924*t938 - 1.*t10*t3941*t938) + t10*t4355*t969 + t1430*(-1.*t1078*t1149*t5249 + t10*t4238*t5249 + t5750 + t5754 - 1.*t1078*t3924*t969 + t10*t3941*t969)) - 0.00482*(t10*t3610*t992 + t1078*(t261*t3560 + t125*t3623 + t125*t3681*t5187 + t125*t3724*t5187 + t10*t3568*t992 - 1.*t1078*t3583*t992)) - 0.081793755*t195*(t10*t3952*t938 + t10*t125*(-1.*t1078*t1117*t5249 + t10*t1430*t5249 + t5372 + t5385 - 1.*t1078*t3924*t938 + t10*t3941*t938) + t10*t4127*t992 + t1430*(t5242 - 1.*t125*t3681*t5249 - 1.*t125*t3724*t5249 + t5284 + t1078*t3924*t992 - 1.*t10*t3941*t992)) + 0.081793755*t130*(t10*t4156*t969 + t10*t125*(t1078*t1149*t5249 - 1.*t10*t4238*t5249 + t5515 + t5521 + t1078*t3924*t969 - 1.*t10*t3941*t969) + t10*t4293*t992 + t4238*(t125*t3681*t5249 + t125*t3724*t5249 + t5479 + t5490 - 1.*t1078*t3924*t992 + t10*t3941*t992)) + 0.241*t628*(t10*t1044*t4975 + t10*t125*(-1.*t1044*t1078*t4556 + t10*t1044*t4573 - 1.*t1078*t1300*t5901 + t10*t1604*t5901 + t6303 + t6317) + t10*t5137*t992 + t1604*(-1.*t125*t3681*t5901 - 1.*t125*t3724*t5901 + t6257 + t6274 + t1078*t4556*t992 - 1.*t10*t4573*t992)) + 0.007922875*t662*(t10*t1023*t4592 + t10*t125*(t1023*t1078*t4556 - 1.*t10*t1023*t4573 + t1078*t1233*t5901 - 1.*t10*t1554*t5901 + t5962 + t5979) + t10*t4775*t992 + t1554*(t5864 + t125*t3681*t5901 + t125*t3724*t5901 + t5919 - 1.*t1078*t4556*t992 + t10*t4573*t992)))*var2[5] - 0.5*(-0.081793755*t195*(t10*t162*t3952 + t1430*(t1078*t261*t3924 - 1.*t10*t261*t3941 + t3987 - 1.*t125*t3681*t3996 - 1.*t125*t3724*t3996 + t4021) + t10*t125*(-1.*t1078*t162*t3924 + t10*t162*t3941 - 1.*t1078*t1117*t3996 + t10*t1430*t3996 + t4050 + t4054) + t10*t261*t4127) + 0.081793755*t130*(t10*t218*t4156 + (-1.*t1078*t261*t3924 + t10*t261*t3941 + t125*t3681*t3996 + t125*t3724*t3996 + t4176 + t4189)*t4238 + t10*t125*(t1078*t218*t3924 - 1.*t10*t218*t3941 + t1078*t1149*t3996 - 1.*t10*t3996*t4238 + t4258 + t4260) + t10*t261*t4293) + 1.527*t387*(t10*t218*t4355 + t4238*(t1078*t162*t3924 - 1.*t10*t162*t3941 + t1078*t1117*t3996 - 1.*t10*t1430*t3996 + t4365 + t4391) + t1430*(-1.*t1078*t218*t3924 + t10*t218*t3941 - 1.*t1078*t1149*t3996 + t10*t3996*t4238 + t4437 + t4440) + t10*t162*t4479) + 0.007922875*(t1554*(-1.*t1078*t261*t4556 + t10*t261*t4573 + t4665 + t125*t3681*t4677 + t125*t3724*t4677 + t4692) + t10*t4592*t476 + t10*t125*(t1078*t1233*t4677 - 1.*t10*t1554*t4677 + t4711 + t4718 + t1078*t4556*t476 - 1.*t10*t4573*t476) + t10*t261*t4775)*t662 + 0.241*t628*(t1604*(t1078*t261*t4556 - 1.*t10*t261*t4573 - 1.*t125*t3681*t4677 - 1.*t125*t3724*t4677 + t4981 + t5008) + t10*t261*t5137 + t10*t4975*t673 + t10*t125*(-1.*t1078*t1300*t4677 + t10*t1604*t4677 + t5037 + t5057 - 1.*t1078*t4556*t673 + t10*t4573*t673)) + 0.241*(t1604*(-1.*t1078*t1233*t4677 + t10*t1554*t4677 - 1.*t1078*t4556*t476 + t10*t4573*t476 + t4788 + t4793) + t10*t476*t4932 + t10*t4845*t673 + t1554*(t1078*t1300*t4677 - 1.*t10*t1604*t4677 + t4862 + t4873 + t1078*t4556*t673 - 1.*t10*t4573*t673))*t892 - 0.00482*(t10*t261*t3610 + t1078*(t10*t261*t3568 - 1.*t1078*t261*t3583 + t125*t3681*t3714 + t125*t3714*t3724 + t3623*t923 + t261*(-0.02*t34*t49 - 0.02*t77*t96))))*var2[6] - 0.5*(-0.081793755*t130*(t1430*t3952 + t10*t125*t4127) - 0.081793755*t195*(t4156*t4238 + t10*t125*t4293) + 1.527*t1532*(t4238*t4355 + t1430*t4479) - 0.081793755*t195*(t3952*t4238 + t1430*(t1078*t125*t7051 - 1.*t10*t125*t7077 + t7116) + t10*t125*(t4471 + t4473 + t4475 + t1117*t7051 + t1430*t7077 + t7150)) + 0.081793755*t130*(t1393*t4156 + t4238*(-1.*t1078*t125*t7051 + t10*t125*t7077 + t7231) + t10*t125*(-1.*t2701*t3924 - 1.*t1393*t3941 - 1.*t1149*t7051 - 1.*t4238*t7077 + t7247 + t7252)) + 1.527*t387*(t1393*t4355 + t4238*t4479 + t4238*(t4278 + t4290 + t4291 - 1.*t1117*t7051 - 1.*t1430*t7077 + t7276) + t1430*(t2701*t3924 + t1393*t3941 + t1149*t7051 + t4238*t7077 + t7305 + t7314)) + t7373 + 0.241*t628*(t7388 + t1604*(t1078*t125*t7416 - 1.*t10*t125*t7439 + t7501) + t10*t125*(t4826 + t4827 + t4840 + t1300*t7416 + t1604*t7439 + t7505)) + 0.241*t1774*t7541 + t7559 + 0.007922875*t662*(t1554*(-1.*t1078*t125*t7416 + t10*t125*t7439 + t7577) + t7618 + t10*t125*(-1.*t1233*t7416 - 1.*t1554*t7439 + t7626 + t7636 + t7653 + t7659)) + 0.241*(t7680 + t1554*(t4752 + t4755 + t4772 - 1.*t1300*t7416 - 1.*t1604*t7439 + t7683) + t7700 + t1604*(t1233*t7416 + t1554*t7439 + t7708 + t7713 + t7732 + t7740))*t892)*var2[7] - 0.5*(t7373 + 0.241*t1926*t7541 + t7559 + 0.241*t628*(t7388 + t1604*(t7786 + t1078*t125*t7799 - 1.*t10*t125*t7828) + t10*t125*(t4826 + t4827 + t4840 + t1300*t7799 + t1604*t7828 + t7873)) + 0.007922875*t662*(t7618 + t1554*(-1.*t1078*t125*t7799 + t10*t125*t7828 + t7938) + t10*t125*(t7636 + t7653 + t7659 - 1.*t1233*t7799 - 1.*t1554*t7828 + t7953)) + 0.241*(t7680 + t7700 + t1554*(t4752 + t4755 + t4772 - 1.*t1300*t7799 - 1.*t1604*t7828 + t8001) + t1604*(t7713 + t7732 + t7740 + t1233*t7799 + t1554*t7828 + t8027))*t892)*var2[8]);
  p_output1[4]=var2[6]*(-0.5*(0.00117072498*t125 + 0.241*(t476*(-1.*t1044*t4545 - 1.*t1285*t5901 + t6151 + t6195) + (t1023*t4545 + t1205*t5901 + t6020 + t6029)*t673 + t1285*t8343 + t1205*t8363)*t892 + 1.527*t387*(t1133*t8205 + t1105*t8246 + t218*(-1.*t1105*t5249 + t5676 + t5699 - 1.*t3895*t938) + t162*(t1133*t5249 + t5750 + t5754 + t3895*t969)) - 0.081793755*t195*(t1105*t8093 + t125*t8134 + t261*(t1105*t5249 + t5372 + t5385 + t3895*t938) + t162*(t5242 - 1.*t125*t5249 + t5284 - 1.*t3895*t992)) + 0.081793755*t130*(t1133*t8151 + t125*t8179 + t261*(-1.*t1133*t5249 + t5515 + t5521 - 1.*t3895*t969) + t218*(t125*t5249 + t5479 + t5490 + t3895*t992)) + 0.241*t628*(t261*(t1044*t4545 + t1285*t5901 + t6303 + t6317) + t1285*t8409 + t125*t8494 + t673*(-1.*t125*t5901 + t6257 + t6274 - 1.*t4545*t992)) + 0.007922875*t662*(t261*(-1.*t1023*t4545 - 1.*t1205*t5901 + t5962 + t5979) + t1205*t8267 + t125*t8317 + t476*(t5864 + t125*t5901 + t5919 + t4545*t992)))*var2[5] - 0.5*(1.527*t387*(t218*(-1.*t1105*t3996 + t4365 + t4391 + t5676) + t162*(t1133*t3996 + t4437 + t4440 + t5754) + t2163*t8205 + t1378*t8246) + 0.241*(t476*(-1.*t1285*t4677 + t4862 + t4873 + t6195) + (t1205*t4677 + t4788 + t4793 + t6029)*t673 + t2267*t8343 + t2231*t8363)*t892 + 0.00117072498*t923 - 0.081793755*t195*(t162*(t3987 - 1.*t125*t3996 + t4021 + t5242) + t261*(t1105*t3996 + t4050 + t4054 + t5372) + t1378*t8093 + t8134*t923) + 0.081793755*t130*(t218*(t125*t3996 + t4176 + t4189 + t5479) + t261*(-1.*t1133*t3996 + t4258 + t4260 + t5521) + t2163*t8151 + t8179*t923) + 0.007922875*t662*(t476*(t4665 + t125*t4677 + t4692 + t5864) + t261*(-1.*t1205*t4677 + t4711 + t4718 + t5979) + t2231*t8267 + t8317*t923) + 0.241*t628*(t261*(t1285*t4677 + t5037 + t5057 + t6317) + (-1.*t125*t4677 + t4981 + t5008 + t6257)*t673 + t2267*t8409 + t8494*t923))*var2[6] - 0.5*(-0.081793755*t130*(t162*t8093 + t261*t8134) - 0.081793755*t195*(t218*t8151 + t261*t8179) - 0.081793755*t195*(t162*(-1.*t125*t7025 + t7116) + t218*t8093 + t261*(t195*t284 + t376 + t4471 + t1105*t7025 + t7150 + t8243)) + 1.527*t1532*(t218*t8205 + t162*t8246) + t9043 + 0.241*t1774*t9049 + t9058 + 0.241*t628*(t673*(-1.*t125*t7394 + t7501) + t261*(t4826 + t1285*t7394 + t7505 + t592*t815 + t8341 + t869) + t9059) + 0.007922875*t662*(t476*(t125*t7394 + t7577) + t9085 + t261*(-1.*t1205*t7394 + t7626 + t7636 + t824 + t9087 + t9089)) + 0.241*t892*(t476*(t1660 + t1712 + t4752 - 1.*t1285*t7394 + t7683 + t8312) + t9110 + t9113 + t673*(t1739 + t1745 + t1205*t7394 + t7708 + t7713 + t9136)) + 0.081793755*t130*(t218*(t125*t7025 + t7231) + t261*(t298 - 1.*t1378*t3895 - 1.*t1133*t7025 + t7247 + t7252 + t8125) + t8151*t938) + 1.527*t387*(t218*(t1461 + t377 + t4278 - 1.*t1105*t7025 + t7276 + t8177) + t218*t8246 + t162*(t362 + t1378*t3895 + t1133*t7025 + t7305 + t7314 + t9010) + t8205*t938))*var2[7] - 0.5*(t9043 + 0.241*t1926*t9049 + t9058 + 0.241*t628*(t673*(t7786 - 1.*t125*t7792) + t261*(t4826 + t1862*t592 + t1285*t7792 + t7873 + t8341 + t869) + t9059) + 0.007922875*t662*(t476*(t125*t7792 + t7938) + t9085 + t261*(-1.*t1862*t662 + t7636 - 1.*t1205*t7792 + t7953 + t9087 + t9089)) + 0.241*t892*(t476*(t1712 + t1869 + t4752 - 1.*t1285*t7792 + t8001 + t8312) + t9110 + t9113 + t673*(t1739 + t1912 + t7713 + t1205*t7792 + t8027 + t9136)))*var2[8]);
  p_output1[5]=var2[6]*(-0.5*(1.527*t387*(t130*(-1.*t130*t3827*t49 - 1.*t130*t3976*t49) + t195*(-1.*t195*t3827*t49 - 1.*t195*t3976*t49)) + 0.241*((t423*t4536*t49 + t423*t4651*t49)*t592 + t662*(-1.*t4536*t49*t662 - 1.*t4651*t49*t662))*t892 + 0.081793755*Power(t130,2)*(-1.*t3827*t96 - 1.*t3976*t96) - 0.081793755*Power(t195,2)*(t3827*t96 + t3976*t96) + 0.007922875*Power(t662,2)*(-1.*t4536*t96 - 1.*t4651*t96) + 0.241*t592*t628*(t4536*t96 + t4651*t96) - 0.00482*(-1.*t3545*t96 + 0.02*t49*t96))*var2[6] - 0.5*(1.527*t1532*(t195*t9440 + t130*t9452) + t9499 + t9505 + t9509 + 0.241*t892*(t9519 + t662*(t1660 + t1712 - 1.*t1700*t662*t9466 - 1.*t1700*t662*t9472 + t9522 + t9527) + t9542 + t592*(t1739 + t1745 + t1700*t423*t9466 + t1700*t423*t9472 + t9551 + t9552)) + 0.241*t1774*t9569 - 0.16358751*t130*t195*(t3827*t49 - 1.*t3782*t96) - 0.16358751*t130*t195*(-1.*t3827*t49 + t3782*t96) + 1.527*t387*(t130*t9440 - 1.*t195*t9452 + t195*(t362 + t9010 + t9447 + t9451 - 1.*t1480*t195*t9466 - 1.*t1480*t195*t9472) + t130*(t1461 + t377 + t195*t3782*t49 - 1.*t130*t1480*t9466 - 1.*t130*t1480*t9472 + t195*t3827*t96)))*var2[7] - 0.5*(t9499 + t9505 + t9509 + 0.241*t892*(t9519 + t662*(t1712 + t1869 - 1.*t1880*t662*t9466 - 1.*t1880*t662*t9472 + t9522 + t9527) + t9542 + t592*(t1739 + t1912 + t1880*t423*t9466 + t1880*t423*t9472 + t9551 + t9552)) + 0.241*t1926*t9569)*var2[8]);
  p_output1[6]=var2[6]*(-0.5*(3.054*t1532*t387 + 0.482*t1774*t892 + t9606 + t9607)*var2[7] - 0.5*(0.482*t1926*t892 + t9606 + t9607)*var2[8]);
  p_output1[7]=var2[6]*(-0.5*(0.0032717502*t130 - 0.0032717502*t195 + t9643 + t9652)*var2[7] - 0.5*(0.241*t628*(-0.242889*t397 + t1847*t397 + t1810*t401 + t397*t747 - 1.*t401*t770) + t9643 + 0.007922875*t662*(-1.*t1810*t397 + t1847*t401 + t9645 + t9646 + t9647) + t9652)*var2[8]);
  p_output1[8]=var2[6]*(-0.5*t9693*var2[7] - 0.5*t9693*var2[8]);
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec7_plane.hh"

namespace SymFunction
{

void Ce1_vec7_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
