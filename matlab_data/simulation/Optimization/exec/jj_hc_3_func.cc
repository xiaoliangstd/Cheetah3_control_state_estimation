/*
 * Automatically Generated from Mathematica.
 * Mon 29 Jul 2019 15:09:06 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t88;
  double t78;
  double t102;
  double t132;
  double t153;
  double t160;
  double t177;
  double t180;
  double t210;
  double t211;
  double t240;
  double t263;
  double t273;
  double t277;
  double t297;
  double t42;
  double t284;
  double t298;
  double t466;
  double t478;
  double t506;
  double t424;
  double t448;
  double t457;
  double t529;
  double t530;
  double t555;
  double t463;
  double t517;
  double t520;
  double t671;
  double t672;
  double t682;
  double t684;
  double t644;
  double t716;
  double t720;
  double t723;
  double t669;
  double t688;
  double t706;
  double t817;
  double t820;
  double t823;
  double t794;
  double t872;
  double t879;
  double t884;
  double t910;
  double t946;
  double t963;
  double t870;
  double t890;
  double t905;
  double t1047;
  double t1049;
  double t1062;
  double t1091;
  double t1101;
  double t1111;
  double t1037;
  double t1039;
  double t1040;
  double t1130;
  double t1131;
  double t1149;
  double t1045;
  double t1116;
  double t1122;
  double t293;
  double t339;
  double t342;
  double t351;
  double t356;
  double t368;
  double t370;
  double t373;
  double t375;
  double t1322;
  double t1348;
  double t1365;
  double t1458;
  double t1597;
  double t1610;
  double t1623;
  double t1817;
  double t1819;
  double t1827;
  double t1974;
  double t1977;
  double t1981;
  double t525;
  double t561;
  double t564;
  double t586;
  double t599;
  double t614;
  double t621;
  double t634;
  double t637;
  double t1521;
  double t1524;
  double t1532;
  double t1533;
  double t1534;
  double t1544;
  double t1546;
  double t1550;
  double t1551;
  double t1557;
  double t1563;
  double t1566;
  double t2068;
  double t2079;
  double t2083;
  double t2094;
  double t2095;
  double t2114;
  double t2204;
  double t2217;
  double t2234;
  double t2311;
  double t2313;
  double t2315;
  double t2331;
  double t2332;
  double t2344;
  double t2368;
  double t2381;
  double t2384;
  double t2457;
  double t2473;
  double t2475;
  double t2493;
  double t2505;
  double t2510;
  double t2542;
  double t2553;
  double t2566;
  double t707;
  double t725;
  double t726;
  double t732;
  double t734;
  double t760;
  double t774;
  double t782;
  double t785;
  double t1268;
  double t1308;
  double t1325;
  double t1426;
  double t1428;
  double t1432;
  double t1434;
  double t1462;
  double t1477;
  double t1481;
  double t1507;
  double t2673;
  double t2675;
  double t2684;
  double t2235;
  double t2241;
  double t2246;
  double t2269;
  double t2282;
  double t2286;
  double t2288;
  double t2289;
  double t2300;
  double t2301;
  double t2309;
  double t2765;
  double t2769;
  double t2774;
  double t2841;
  double t2843;
  double t2857;
  double t1129;
  double t1154;
  double t1168;
  double t1174;
  double t1178;
  double t1179;
  double t1180;
  double t1197;
  double t1200;
  double t1939;
  double t1941;
  double t1958;
  double t1973;
  double t2007;
  double t2009;
  double t2011;
  double t2012;
  double t2017;
  double t2018;
  double t2028;
  double t2029;
  double t2037;
  double t2038;
  double t2041;
  double t2782;
  double t2784;
  double t2787;
  double t2788;
  double t2798;
  double t2800;
  double t2802;
  double t2804;
  double t2816;
  double t2820;
  double t2827;
  double t2482;
  double t2490;
  double t2526;
  double t2572;
  double t2574;
  double t2575;
  double t2577;
  double t2582;
  double t2588;
  double t2595;
  double t2597;
  double t2602;
  double t2629;
  double t2319;
  double t2988;
  double t3010;
  double t3014;
  double t3022;
  double t3027;
  double t3019;
  double t3020;
  double t2964;
  double t3085;
  double t3086;
  double t3088;
  double t3101;
  double t3117;
  double t3128;
  double t3089;
  double t3090;
  double t3093;
  double t907;
  double t970;
  double t983;
  double t988;
  double t992;
  double t994;
  double t995;
  double t1000;
  double t1004;
  double t1842;
  double t1846;
  double t1848;
  double t1849;
  double t1855;
  double t1861;
  double t1877;
  double t1892;
  double t1897;
  double t1905;
  double t1909;
  double t1913;
  double t1919;
  double t1920;
  double t1929;
  double t2686;
  double t2695;
  double t2698;
  double t2699;
  double t2707;
  double t2708;
  double t2712;
  double t2713;
  double t2716;
  double t2719;
  double t2729;
  double t2064;
  double t2065;
  double t2089;
  double t2116;
  double t2119;
  double t2120;
  double t2126;
  double t2136;
  double t2149;
  double t2161;
  double t2177;
  double t2184;
  double t2188;
  double t2962;
  double t2969;
  double t3225;
  double t3227;
  double t3241;
  double t3245;
  double t3246;
  double t3229;
  double t3230;
  double t3233;
  double t3061;
  double t3066;
  double t3067;
  double t3075;
  double t3078;
  double t3080;
  double t3094;
  double t3130;
  double t3145;
  double t3150;
  double t3155;
  double t3159;
  double t3168;
  double t3170;
  double t3179;
  double t3183;
  double t3185;
  double t3376;
  double t3378;
  double t3380;
  double t3440;
  double t3441;
  double t3442;
  double t3465;
  double t3483;
  double t3490;
  double t3443;
  double t3445;
  double t3448;
  double t3558;
  double t3567;
  double t3574;
  double t3576;
  double t3548;
  double t3562;
  double t3563;
  double t3627;
  double t3637;
  double t3641;
  double t3613;
  double t3652;
  double t3655;
  double t3663;
  double t3616;
  double t3645;
  double t3647;
  double t3717;
  double t3718;
  double t3728;
  double t3695;
  double t3767;
  double t3774;
  double t3775;
  double t3788;
  double t3789;
  double t3790;
  double t3765;
  double t3779;
  double t3784;
  double t3383;
  double t3387;
  double t3398;
  double t3401;
  double t3402;
  double t3404;
  double t3410;
  double t3417;
  double t3431;
  double t3915;
  double t3927;
  double t3929;
  double t3993;
  double t3995;
  double t3997;
  double t3453;
  double t3493;
  double t3503;
  double t3505;
  double t3520;
  double t3529;
  double t3530;
  double t3543;
  double t3545;
  double t3866;
  double t3868;
  double t3870;
  double t3871;
  double t3874;
  double t3878;
  double t3882;
  double t3884;
  double t3886;
  double t3889;
  double t3891;
  double t3897;
  double t4089;
  double t4093;
  double t4109;
  double t4116;
  double t4119;
  double t4124;
  double t4189;
  double t4197;
  double t4210;
  double t4240;
  double t4241;
  double t4234;
  double t4236;
  double t3786;
  double t3795;
  double t3798;
  double t3800;
  double t3801;
  double t3803;
  double t3804;
  double t3805;
  double t3808;
  double t4003;
  double t4006;
  double t4015;
  double t4018;
  double t4019;
  double t4026;
  double t4027;
  double t4033;
  double t4039;
  double t4040;
  double t4042;
  double t4044;
  double t4046;
  double t4047;
  double t4281;
  double t4283;
  double t4087;
  double t4088;
  double t4111;
  double t4131;
  double t4137;
  double t4138;
  double t4139;
  double t4141;
  double t4143;
  double t4145;
  double t4146;
  double t4151;
  double t4154;
  double t4361;
  double t4362;
  double t4376;
  double t4377;
  double t4380;
  double t4365;
  double t4368;
  double t4370;
  double t3566;
  double t3577;
  double t3579;
  double t3581;
  double t3586;
  double t3587;
  double t3589;
  double t3595;
  double t3597;
  double t4056;
  double t4059;
  double t4062;
  double t4065;
  double t4066;
  double t4071;
  double t4072;
  double t4073;
  double t4077;
  double t4078;
  double t4080;
  double t4441;
  double t4446;
  double t4447;
  double t4156;
  double t4157;
  double t4159;
  double t4160;
  double t4161;
  double t4162;
  double t4163;
  double t4165;
  double t4167;
  double t4168;
  double t4170;
  double t4173;
  double t4322;
  double t4323;
  double t4324;
  double t4326;
  double t4333;
  double t4335;
  double t4336;
  double t4339;
  double t4340;
  double t4341;
  double t4342;
  double t4343;
  double t4344;
  double t4345;
  double t4346;
  double t4350;
  double t4231;
  double t4352;
  double t3650;
  double t3665;
  double t3667;
  double t3668;
  double t3669;
  double t3674;
  double t3687;
  double t3692;
  double t3693;
  double t3831;
  double t3833;
  double t3834;
  double t3838;
  double t3839;
  double t3841;
  double t3843;
  double t3844;
  double t3849;
  double t3851;
  double t3855;
  double t4286;
  double t4287;
  double t4290;
  double t4295;
  double t4296;
  double t4303;
  double t4306;
  double t4308;
  double t4309;
  double t4310;
  double t4311;
  double t4448;
  double t4450;
  double t4451;
  double t4457;
  double t4459;
  double t4463;
  double t4464;
  double t4465;
  double t4468;
  double t4469;
  double t4471;
  double t4179;
  double t4211;
  double t4212;
  double t4216;
  double t4217;
  double t4218;
  double t4221;
  double t4224;
  double t4225;
  double t4227;
  double t4228;
  double t4541;
  double t4544;
  double t4548;
  double t4589;
  double t4590;
  double t4591;
  double t4629;
  double t4630;
  double t4639;
  double t4621;
  double t4623;
  double t4624;
  double t4670;
  double t4671;
  double t4672;
  double t4689;
  double t4691;
  double t4693;
  double t4666;
  double t4680;
  double t4682;
  double t4735;
  double t4743;
  double t4744;
  double t4718;
  double t4724;
  double t4755;
  double t4763;
  double t4764;
  double t4726;
  double t4745;
  double t4750;
  double t4802;
  double t4808;
  double t4812;
  double t4798;
  double t4599;
  double t4601;
  double t4603;
  double t4604;
  double t4605;
  double t4606;
  double t4607;
  double t4612;
  double t4613;
  double t4973;
  double t4974;
  double t4988;
  double t5057;
  double t5058;
  double t5064;
  double t4625;
  double t4641;
  double t4644;
  double t4645;
  double t4646;
  double t4653;
  double t4654;
  double t4656;
  double t4660;
  double t4880;
  double t4885;
  double t4886;
  double t4893;
  double t4895;
  double t4898;
  double t4905;
  double t4907;
  double t4937;
  double t4951;
  double t4952;
  double t4954;
  double t5153;
  double t5155;
  double t5160;
  double t5238;
  double t5244;
  double t5247;
  double t5216;
  double t5228;
  double t5236;
  double t5299;
  double t5301;
  double t5303;
  double t5309;
  double t5310;
  double t5314;
  double t4754;
  double t4767;
  double t4780;
  double t4782;
  double t4783;
  double t4784;
  double t4785;
  double t4789;
  double t4795;
  double t4845;
  double t4846;
  double t4848;
  double t4851;
  double t4855;
  double t4856;
  double t4858;
  double t4864;
  double t4868;
  double t4873;
  double t4875;
  double t5151;
  double t5170;
  double t5172;
  double t5176;
  double t5182;
  double t5183;
  double t5184;
  double t5190;
  double t5191;
  double t5199;
  double t5204;
  double t5353;
  double t5358;
  double t5359;
  double t5408;
  double t5411;
  double t5412;
  double t4686;
  double t4694;
  double t4695;
  double t4696;
  double t4698;
  double t4708;
  double t4709;
  double t4711;
  double t4715;
  double t5043;
  double t5046;
  double t5047;
  double t5050;
  double t5066;
  double t5067;
  double t5068;
  double t5078;
  double t5085;
  double t5089;
  double t5090;
  double t5108;
  double t5110;
  double t5116;
  double t5117;
  double t5367;
  double t5371;
  double t5383;
  double t5385;
  double t5387;
  double t5391;
  double t5393;
  double t5395;
  double t5399;
  double t5401;
  double t5403;
  double t5289;
  double t5298;
  double t5308;
  double t5317;
  double t5318;
  double t5319;
  double t5322;
  double t5323;
  double t5329;
  double t5332;
  double t5334;
  double t5335;
  double t5338;
  double t5209;
  double t4965;
  double t5535;
  double t5545;
  double t5559;
  double t5560;
  double t5548;
  double t5554;
  double t5631;
  double t5638;
  double t5639;
  double t5673;
  double t5676;
  double t5677;
  double t5648;
  double t5661;
  double t5664;
  double t5665;
  double t5668;
  double t5669;
  double t5685;
  double t5687;
  double t5689;
  double t5690;
  double t5692;
  double t5694;
  double t5702;
  double t5705;
  double t5735;
  double t5640;
  double t5644;
  double t5647;
  double t5717;
  double t5722;
  double t5723;
  double t5741;
  double t5742;
  double t5024;
  double t5027;
  double t5028;
  double t5003;
  double t5004;
  double t5016;
  double t5818;
  double t5826;
  double t5799;
  double t5802;
  double t5806;
  double t5460;
  double t5855;
  double t5856;
  double t5849;
  double t5850;
  double t5851;
  double t4823;
  double t4828;
  double t4830;
  double t5905;
  double t5906;
  double t5921;
  double t5961;
  double t5967;
  double t5978;
  double t5740;
  double t5778;
  double t5989;
  double t5997;
  double t6006;
  double t5271;
  double t5274;
  double t5279;
  double t5249;
  double t5253;
  double t5262;
  double t6095;
  double t6101;
  double t6104;
  double t5925;
  double t4800;
  double t4816;
  double t4818;
  double t5939;
  double t6082;
  double t6086;
  double t6202;
  double t6205;
  double t6209;
  double t5860;
  double t5879;
  double t6231;
  double t6235;
  double t6239;
  double t6048;
  double t6052;
  double t6136;
  double t6139;
  double t5425;
  double t5429;
  double t5446;
  double t5461;
  double t5462;
  double t6327;
  double t6329;
  double t6330;
  double t5840;
  double t5844;
  double t6063;
  double t6356;
  double t6363;
  double t6365;
  double t6068;
  double t6272;
  double t6275;
  double t6178;
  double t6183;
  double t5565;
  double t5574;
  double t5577;
  double t5597;
  double t5600;
  double t5601;
  double t5525;
  double t6444;
  double t6451;
  double t6455;
  double t6461;
  double t6462;
  double t6464;
  double t6465;
  double t6454;
  double t6469;
  double t6472;
  double t6532;
  double t6533;
  double t6537;
  double t6587;
  double t6588;
  double t6601;
  double t6648;
  double t6484;
  double t6487;
  double t6490;
  double t6494;
  double t6496;
  double t6813;
  double t6817;
  double t6567;
  double t6573;
  double t6574;
  double t6575;
  double t6578;
  double t6749;
  double t6750;
  double t6751;
  double t6752;
  double t6754;
  double t7001;
  double t7006;
  double t6540;
  double t6543;
  double t6544;
  double t6546;
  double t6550;
  double t6697;
  double t6700;
  double t6709;
  double t6712;
  double t6714;
  double t6852;
  double t6853;
  double t6863;
  double t6875;
  double t6879;
  double t6882;
  double t6883;
  double t6891;
  double t7160;
  double t7161;
  double t6613;
  double t6618;
  double t6620;
  double t6626;
  double t6629;
  double t7170;
  double t7171;
  double t6776;
  double t6784;
  double t6787;
  double t6789;
  double t6790;
  double t6951;
  double t6954;
  double t6957;
  double t6958;
  double t6975;
  double t6979;
  double t6981;
  double t6985;
  double t7081;
  double t7086;
  double t7088;
  double t7089;
  double t7091;
  double t7094;
  double t7095;
  double t7104;
  double t7105;
  double t7106;
  double t7289;
  double t7291;
  double t7299;
  double t7304;
  double t3937;
  double t7298;
  double t7309;
  double t7314;
  double t7315;
  double t7318;
  double t7320;
  double t7323;
  double t7341;
  double t7338;
  double t7387;
  double t7388;
  double t4484;
  double t7429;
  double t7460;
  double t7461;
  double t7477;
  double t7403;
  double t7404;
  double t4356;
  double t4357;
  double t3206;
  double t3215;
  double t7579;
  double t7581;
  double t7589;
  double t7353;
  double t7355;
  double t7601;
  double t7528;
  double t7531;
  double t3938;
  double t1651;
  double t1656;
  double t1668;
  double t7669;
  double t7676;
  double t7677;
  double t7434;
  double t7445;
  double t7625;
  double t7683;
  double t7627;
  double t7562;
  double t7565;
  double t2972;
  double t2976;
  t88 = Cos(var1[5]);
  t78 = Cos(var1[4]);
  t102 = Cos(var1[6]);
  t132 = t78*t88*t102;
  t153 = Sin(var1[3]);
  t160 = Sin(var1[4]);
  t177 = t88*t153*t160;
  t180 = Cos(var1[3]);
  t210 = Sin(var1[5]);
  t211 = -1.*t180*t210;
  t240 = t177 + t211;
  t263 = Sin(var1[6]);
  t273 = -1.*t240*t263;
  t277 = t132 + t273;
  t297 = Cos(var1[7]);
  t42 = Cos(var1[8]);
  t284 = Sin(var1[7]);
  t298 = Sin(var1[8]);
  t466 = t180*t88*t160;
  t478 = t153*t210;
  t506 = t466 + t478;
  t424 = -1.*t88*t153*t160;
  t448 = t180*t210;
  t457 = t424 + t448;
  t529 = t102*t297*t506;
  t530 = t457*t284;
  t555 = t529 + t530;
  t463 = t297*t457;
  t517 = -1.*t102*t506*t284;
  t520 = t463 + t517;
  t671 = t102*t240;
  t672 = 0. + t263;
  t682 = t78*t88*t672;
  t684 = 0. + t671 + t682;
  t644 = 0. + t466 + t478;
  t716 = -1.*t297*t684;
  t720 = -1.*t644*t284;
  t723 = t716 + t720;
  t669 = t297*t644;
  t688 = -1.*t684*t284;
  t706 = t669 + t688;
  t817 = t297*t684;
  t820 = t644*t284;
  t823 = 0. + t817 + t820;
  t794 = 0. + t669 + t688;
  t872 = t78*t88*t102*t153;
  t879 = -1.*t88*t160*t672;
  t884 = t872 + t879;
  t910 = t297*t884;
  t946 = t180*t78*t88*t284;
  t963 = t910 + t946;
  t870 = t180*t78*t88*t297;
  t890 = -1.*t884*t284;
  t905 = t870 + t890;
  t1047 = -1.*t180*t88;
  t1049 = -1.*t153*t160*t210;
  t1062 = t1047 + t1049;
  t1091 = t102*t1062;
  t1101 = -1.*t78*t210*t672;
  t1111 = t1091 + t1101;
  t1037 = t88*t153;
  t1039 = -1.*t180*t160*t210;
  t1040 = t1037 + t1039;
  t1130 = t297*t1111;
  t1131 = t1040*t284;
  t1149 = t1130 + t1131;
  t1045 = t297*t1040;
  t1116 = -1.*t1111*t284;
  t1122 = t1045 + t1116;
  t293 = -1.*t42*t277*t284;
  t339 = -1.*t297*t277*t298;
  t342 = t293 + t339;
  t351 = -0.16*t342;
  t356 = -1.*t297*t42*t277;
  t368 = t277*t284*t298;
  t370 = t356 + t368;
  t373 = -0.02*t370;
  t375 = t351 + t373;
  t1322 = 0. + t42;
  t1348 = -1.*t298;
  t1365 = 0. + t1348;
  t1458 = 0. + t298;
  t1597 = -1.*t102*t240;
  t1610 = -1.*t78*t88*t263;
  t1623 = t1597 + t1610;
  t1817 = -1.*t88*t102*t160;
  t1819 = -1.*t78*t88*t153*t263;
  t1827 = t1817 + t1819;
  t1974 = -1.*t78*t102*t210;
  t1977 = -1.*t1062*t263;
  t1981 = t1974 + t1977;
  t525 = t42*t520;
  t561 = -1.*t555*t298;
  t564 = t525 + t561;
  t586 = -0.16*t564;
  t599 = -1.*t42*t555;
  t614 = -1.*t520*t298;
  t621 = t599 + t614;
  t634 = -0.02*t621;
  t637 = t586 + t634;
  t1521 = 0.0329*t102*t506;
  t1524 = 0.2083*t297*t506*t263;
  t1532 = -0.1422*t506*t263*t284;
  t1533 = t1322*t506*t263*t284;
  t1534 = -1.*t297*t506*t263*t1365;
  t1544 = t1533 + t1534;
  t1546 = -0.02*t1544;
  t1550 = -1.*t297*t1322*t506*t263;
  t1551 = t506*t263*t284*t1458;
  t1557 = t1550 + t1551;
  t1563 = -0.16*t1557;
  t1566 = t1521 + t1524 + t1532 + t1546 + t1563;
  t2068 = -1.*t78*t88*t297*t153;
  t2079 = -1.*t180*t78*t88*t102*t284;
  t2083 = t2068 + t2079;
  t2094 = t180*t78*t88*t102*t297;
  t2095 = -1.*t78*t88*t153*t284;
  t2114 = t2094 + t2095;
  t2204 = -1.*t102*t297*t506;
  t2217 = -1.*t457*t284;
  t2234 = t2204 + t2217;
  t2311 = -1.*t180*t88*t160;
  t2313 = -1.*t153*t210;
  t2315 = t2311 + t2313;
  t2331 = t297*t2315;
  t2332 = -1.*t102*t457*t284;
  t2344 = t2331 + t2332;
  t2368 = t102*t297*t457;
  t2381 = t2315*t284;
  t2384 = t2368 + t2381;
  t2457 = t180*t88;
  t2473 = t153*t160*t210;
  t2475 = t2457 + t2473;
  t2493 = t297*t2475;
  t2505 = -1.*t102*t1040*t284;
  t2510 = t2493 + t2505;
  t2542 = t102*t297*t1040;
  t2553 = t2475*t284;
  t2566 = t2542 + t2553;
  t707 = -1.*t42*t706;
  t725 = -1.*t723*t298;
  t726 = t707 + t725;
  t732 = -0.02*t726;
  t734 = t42*t723;
  t760 = -1.*t706*t298;
  t774 = t734 + t760;
  t782 = -0.16*t774;
  t785 = t732 + t782;
  t1268 = 0.1422*t297*t277;
  t1308 = 0.2083*t277*t284;
  t1325 = -1.*t297*t1322*t277;
  t1426 = -1.*t277*t284*t1365;
  t1428 = t1325 + t1426;
  t1432 = -0.02*t1428;
  t1434 = -1.*t1322*t277*t284;
  t1462 = -1.*t297*t277*t1458;
  t1477 = t1434 + t1462;
  t1481 = -0.16*t1477;
  t1507 = t1268 + t1308 + t1432 + t1481;
  t2673 = -1.*t297*t884;
  t2675 = -1.*t180*t78*t88*t284;
  t2684 = t2673 + t2675;
  t2235 = -0.1422*t2234;
  t2241 = -0.2083*t520;
  t2246 = t1322*t2234;
  t2269 = t520*t1365;
  t2282 = t2246 + t2269;
  t2286 = -0.02*t2282;
  t2288 = t1322*t520;
  t2289 = t2234*t1458;
  t2300 = t2288 + t2289;
  t2301 = -0.16*t2300;
  t2309 = t2235 + t2241 + t2286 + t2301;
  t2765 = -1.*t297*t1111;
  t2769 = -1.*t1040*t284;
  t2774 = t2765 + t2769;
  t2841 = -1.*t297*t644;
  t2843 = t684*t284;
  t2857 = t2841 + t2843;
  t1129 = t42*t1122;
  t1154 = -1.*t1149*t298;
  t1168 = t1129 + t1154;
  t1174 = -0.16*t1168;
  t1178 = -1.*t42*t1149;
  t1179 = -1.*t1122*t298;
  t1180 = t1178 + t1179;
  t1197 = -0.02*t1180;
  t1200 = t1174 + t1197;
  t1939 = -1.*t102*t1062;
  t1941 = t78*t210*t263;
  t1958 = t1939 + t1941;
  t1973 = -0.0329*t1958;
  t2007 = -0.2083*t297*t1981;
  t2009 = 0.1422*t1981*t284;
  t2011 = -1.*t1322*t1981*t284;
  t2012 = t297*t1981*t1365;
  t2017 = t2011 + t2012;
  t2018 = -0.02*t2017;
  t2028 = t297*t1322*t1981;
  t2029 = -1.*t1981*t284*t1458;
  t2037 = t2028 + t2029;
  t2038 = -0.16*t2037;
  t2041 = t1973 + t2007 + t2009 + t2018 + t2038;
  t2782 = -0.1422*t2774;
  t2784 = -0.2083*t1122;
  t2787 = t1322*t2774;
  t2788 = t1122*t1365;
  t2798 = t2787 + t2788;
  t2800 = -0.02*t2798;
  t2802 = t1322*t1122;
  t2804 = t2774*t1458;
  t2816 = t2802 + t2804;
  t2820 = -0.16*t2816;
  t2827 = t2782 + t2784 + t2800 + t2820;
  t2482 = 0.2429*t2475;
  t2490 = 0.0329*t1040*t263;
  t2526 = -0.1422*t2510;
  t2572 = -0.2083*t2566;
  t2574 = t1322*t2510;
  t2575 = t2566*t1365;
  t2577 = t2574 + t2575;
  t2582 = -0.02*t2577;
  t2588 = t1322*t2566;
  t2595 = t2510*t1458;
  t2597 = t2588 + t2595;
  t2602 = -0.16*t2597;
  t2629 = t2482 + t2490 + t2526 + t2572 + t2582 + t2602;
  t2319 = 0.2429*t2315;
  t2988 = t102*t457;
  t3010 = -1.*t78*t88*t672;
  t3014 = t2988 + t3010;
  t3022 = -1.*t3014*t284;
  t3027 = t2331 + t3022;
  t3019 = t297*t3014;
  t3020 = t3019 + t2381;
  t2964 = 0. + t102;
  t3085 = -1.*t78*t102*t153*t210;
  t3086 = t160*t210*t672;
  t3088 = t3085 + t3086;
  t3101 = -1.*t180*t78*t297*t210;
  t3117 = -1.*t3088*t284;
  t3128 = t3101 + t3117;
  t3089 = t297*t3088;
  t3090 = -1.*t180*t78*t210*t284;
  t3093 = t3089 + t3090;
  t907 = t42*t905;
  t970 = -1.*t963*t298;
  t983 = t907 + t970;
  t988 = -0.16*t983;
  t992 = -1.*t42*t963;
  t994 = -1.*t905*t298;
  t995 = t992 + t994;
  t1000 = -0.02*t995;
  t1004 = t988 + t1000;
  t1842 = -0.2083*t297*t1827;
  t1846 = -1.*t78*t88*t102*t153;
  t1848 = t88*t160*t263;
  t1849 = t1846 + t1848;
  t1855 = -0.0329*t1849;
  t1861 = 0.1422*t1827*t284;
  t1877 = -1.*t1322*t1827*t284;
  t1892 = t297*t1827*t1365;
  t1897 = t1877 + t1892;
  t1905 = -0.02*t1897;
  t1909 = t297*t1322*t1827;
  t1913 = -1.*t1827*t284*t1458;
  t1919 = t1909 + t1913;
  t1920 = -0.16*t1919;
  t1929 = t1842 + t1855 + t1861 + t1905 + t1920;
  t2686 = -0.1422*t2684;
  t2695 = -0.2083*t905;
  t2698 = t1322*t2684;
  t2699 = t905*t1365;
  t2707 = t2698 + t2699;
  t2708 = -0.02*t2707;
  t2712 = t1322*t905;
  t2713 = t2684*t1458;
  t2716 = t2712 + t2713;
  t2719 = -0.16*t2716;
  t2729 = t2686 + t2695 + t2708 + t2719;
  t2064 = -0.2429*t78*t88*t153;
  t2065 = 0.0329*t180*t78*t88*t263;
  t2089 = -0.1422*t2083;
  t2116 = -0.2083*t2114;
  t2119 = t1322*t2083;
  t2120 = t2114*t1365;
  t2126 = t2119 + t2120;
  t2136 = -0.02*t2126;
  t2149 = t1322*t2114;
  t2161 = t2083*t1458;
  t2177 = t2149 + t2161;
  t2184 = -0.16*t2177;
  t2188 = t2064 + t2065 + t2089 + t2116 + t2136 + t2184;
  t2962 = 0.0817*t78*t88;
  t2969 = -1.*t78*t88*t2964;
  t3225 = -1.*t88*t102*t153*t160;
  t3227 = t3225 + t3010;
  t3241 = -1.*t180*t88*t297*t160;
  t3245 = -1.*t3227*t284;
  t3246 = t3241 + t3245;
  t3229 = t297*t3227;
  t3230 = -1.*t180*t88*t160*t284;
  t3233 = t3229 + t3230;
  t3061 = -0.2429*t180*t78*t210;
  t3066 = -0.0817*t160*t210;
  t3067 = t2964*t160*t210;
  t3075 = t78*t153*t210*t263;
  t3078 = t3067 + t3075;
  t3080 = -0.0329*t3078;
  t3094 = -0.2083*t3093;
  t3130 = -0.1422*t3128;
  t3145 = t1322*t3128;
  t3150 = t3093*t1365;
  t3155 = t3145 + t3150;
  t3159 = -0.02*t3155;
  t3168 = t1322*t3093;
  t3170 = t3128*t1458;
  t3179 = t3168 + t3170;
  t3183 = -0.16*t3179;
  t3185 = t3061 + t3066 + t3080 + t3094 + t3130 + t3159 + t3183;
  t3376 = t78*t102*t210;
  t3378 = -1.*t2475*t263;
  t3380 = t3376 + t3378;
  t3440 = -1.*t88*t153;
  t3441 = t180*t160*t210;
  t3442 = t3440 + t3441;
  t3465 = t297*t1062;
  t3483 = -1.*t102*t3442*t284;
  t3490 = t3465 + t3483;
  t3443 = t102*t297*t3442;
  t3445 = t1062*t284;
  t3448 = t3443 + t3445;
  t3558 = t671 + t682;
  t3567 = t297*t3558;
  t3574 = t506*t284;
  t3576 = t3567 + t3574;
  t3548 = t297*t506;
  t3562 = -1.*t3558*t284;
  t3563 = t3548 + t3562;
  t3627 = t102*t2475;
  t3637 = t78*t210*t672;
  t3641 = 0. + t3627 + t3637;
  t3613 = 0. + t3440 + t3441;
  t3652 = -1.*t297*t3641;
  t3655 = -1.*t3613*t284;
  t3663 = t3652 + t3655;
  t3616 = t297*t3613;
  t3645 = -1.*t3641*t284;
  t3647 = t3616 + t3645;
  t3717 = t297*t3641;
  t3718 = t3613*t284;
  t3728 = 0. + t3717 + t3718;
  t3695 = 0. + t3616 + t3645;
  t3767 = t78*t102*t153*t210;
  t3774 = -1.*t160*t210*t672;
  t3775 = t3767 + t3774;
  t3788 = t297*t3775;
  t3789 = t180*t78*t210*t284;
  t3790 = t3788 + t3789;
  t3765 = t180*t78*t297*t210;
  t3779 = -1.*t3775*t284;
  t3784 = t3765 + t3779;
  t3383 = -1.*t42*t3380*t284;
  t3387 = -1.*t297*t3380*t298;
  t3398 = t3383 + t3387;
  t3401 = -0.16*t3398;
  t3402 = -1.*t297*t42*t3380;
  t3404 = t3380*t284*t298;
  t3410 = t3402 + t3404;
  t3417 = -0.02*t3410;
  t3431 = t3401 + t3417;
  t3915 = -1.*t102*t2475;
  t3927 = -1.*t78*t210*t263;
  t3929 = t3915 + t3927;
  t3993 = -1.*t102*t160*t210;
  t3995 = -1.*t78*t153*t210*t263;
  t3997 = t3993 + t3995;
  t3453 = -1.*t42*t3448;
  t3493 = -1.*t3490*t298;
  t3503 = t3453 + t3493;
  t3505 = -0.02*t3503;
  t3520 = t42*t3490;
  t3529 = -1.*t3448*t298;
  t3530 = t3520 + t3529;
  t3543 = -0.16*t3530;
  t3545 = t3505 + t3543;
  t3866 = 0.0329*t102*t3442;
  t3868 = 0.2083*t297*t3442*t263;
  t3870 = -0.1422*t3442*t263*t284;
  t3871 = t1322*t3442*t263*t284;
  t3874 = -1.*t297*t3442*t263*t1365;
  t3878 = t3871 + t3874;
  t3882 = -0.02*t3878;
  t3884 = -1.*t297*t1322*t3442*t263;
  t3886 = t3442*t263*t284*t1458;
  t3889 = t3884 + t3886;
  t3891 = -0.16*t3889;
  t3897 = t3866 + t3868 + t3870 + t3882 + t3891;
  t4089 = -1.*t78*t297*t153*t210;
  t4093 = -1.*t180*t78*t102*t210*t284;
  t4109 = t4089 + t4093;
  t4116 = t180*t78*t102*t297*t210;
  t4119 = -1.*t78*t153*t210*t284;
  t4124 = t4116 + t4119;
  t4189 = -1.*t102*t297*t3442;
  t4197 = -1.*t1062*t284;
  t4210 = t4189 + t4197;
  t4240 = -1.*t102*t1062*t284;
  t4241 = t1045 + t4240;
  t4234 = t102*t297*t1062;
  t4236 = t4234 + t1131;
  t3786 = t42*t3784;
  t3795 = -1.*t3790*t298;
  t3798 = t3786 + t3795;
  t3800 = -0.16*t3798;
  t3801 = -1.*t42*t3790;
  t3803 = -1.*t3784*t298;
  t3804 = t3801 + t3803;
  t3805 = -0.02*t3804;
  t3808 = t3800 + t3805;
  t4003 = -0.2083*t297*t3997;
  t4006 = t160*t210*t263;
  t4015 = t3085 + t4006;
  t4018 = -0.0329*t4015;
  t4019 = 0.1422*t3997*t284;
  t4026 = -1.*t1322*t3997*t284;
  t4027 = t297*t3997*t1365;
  t4033 = t4026 + t4027;
  t4039 = -0.02*t4033;
  t4040 = t297*t1322*t3997;
  t4042 = -1.*t3997*t284*t1458;
  t4044 = t4040 + t4042;
  t4046 = -0.16*t4044;
  t4047 = t4003 + t4018 + t4019 + t4039 + t4046;
  t4281 = -1.*t297*t3775;
  t4283 = t4281 + t3090;
  t4087 = -0.2429*t78*t153*t210;
  t4088 = 0.0329*t180*t78*t210*t263;
  t4111 = -0.1422*t4109;
  t4131 = -0.2083*t4124;
  t4137 = t1322*t4109;
  t4138 = t4124*t1365;
  t4139 = t4137 + t4138;
  t4141 = -0.02*t4139;
  t4143 = t1322*t4124;
  t4145 = t4109*t1458;
  t4146 = t4143 + t4145;
  t4151 = -0.16*t4146;
  t4154 = t4087 + t4088 + t4111 + t4131 + t4141 + t4151;
  t4361 = -1.*t102*t153*t160*t210;
  t4362 = t4361 + t1101;
  t4376 = -1.*t180*t297*t160*t210;
  t4377 = -1.*t4362*t284;
  t4380 = t4376 + t4377;
  t4365 = t297*t4362;
  t4368 = -1.*t180*t160*t210*t284;
  t4370 = t4365 + t4368;
  t3566 = t42*t3563;
  t3577 = -1.*t3576*t298;
  t3579 = t3566 + t3577;
  t3581 = -0.16*t3579;
  t3586 = -1.*t42*t3576;
  t3587 = -1.*t3563*t298;
  t3589 = t3586 + t3587;
  t3595 = -0.02*t3589;
  t3597 = t3581 + t3595;
  t4056 = -0.0329*t1623;
  t4059 = -0.2083*t297*t277;
  t4062 = 0.1422*t277*t284;
  t4065 = t297*t277*t1365;
  t4066 = t1434 + t4065;
  t4071 = -0.02*t4066;
  t4072 = t297*t1322*t277;
  t4073 = -1.*t277*t284*t1458;
  t4077 = t4072 + t4073;
  t4078 = -0.16*t4077;
  t4080 = t4056 + t4059 + t4062 + t4071 + t4078;
  t4441 = -1.*t297*t3558;
  t4446 = -1.*t506*t284;
  t4447 = t4441 + t4446;
  t4156 = 0.2429*t457;
  t4157 = 0.0329*t506*t263;
  t4159 = -0.2083*t555;
  t4160 = -0.1422*t520;
  t4161 = t555*t1365;
  t4162 = t2288 + t4161;
  t4163 = -0.02*t4162;
  t4165 = t1322*t555;
  t4167 = t520*t1458;
  t4168 = t4165 + t4167;
  t4170 = -0.16*t4168;
  t4173 = t4156 + t4157 + t4159 + t4160 + t4163 + t4170;
  t4322 = 0.2429*t180*t78*t88;
  t4323 = 0.0817*t88*t160;
  t4324 = -1.*t88*t2964*t160;
  t4326 = t4324 + t1819;
  t4333 = -0.0329*t4326;
  t4335 = -0.2083*t963;
  t4336 = -0.1422*t905;
  t4339 = t963*t1365;
  t4340 = t2712 + t4339;
  t4341 = -0.02*t4340;
  t4342 = t1322*t963;
  t4343 = t905*t1458;
  t4344 = t4342 + t4343;
  t4345 = -0.16*t4344;
  t4346 = t4322 + t4323 + t4333 + t4335 + t4336 + t4341 + t4345;
  t4350 = 0.0817*t78*t210;
  t4231 = 0.2429*t1040;
  t4352 = -1.*t78*t2964*t210;
  t3650 = -1.*t42*t3647;
  t3665 = -1.*t3663*t298;
  t3667 = t3650 + t3665;
  t3668 = -0.02*t3667;
  t3669 = t42*t3663;
  t3674 = -1.*t3647*t298;
  t3687 = t3669 + t3674;
  t3692 = -0.16*t3687;
  t3693 = t3668 + t3692;
  t3831 = 0.1422*t297*t3380;
  t3833 = 0.2083*t3380*t284;
  t3834 = -1.*t297*t1322*t3380;
  t3838 = -1.*t3380*t284*t1365;
  t3839 = t3834 + t3838;
  t3841 = -0.02*t3839;
  t3843 = -1.*t1322*t3380*t284;
  t3844 = -1.*t297*t3380*t1458;
  t3849 = t3843 + t3844;
  t3851 = -0.16*t3849;
  t3855 = t3831 + t3833 + t3841 + t3851;
  t4286 = -0.1422*t4283;
  t4287 = -0.2083*t3784;
  t4290 = t1322*t4283;
  t4295 = t3784*t1365;
  t4296 = t4290 + t4295;
  t4303 = -0.02*t4296;
  t4306 = t1322*t3784;
  t4308 = t4283*t1458;
  t4309 = t4306 + t4308;
  t4310 = -0.16*t4309;
  t4311 = t4286 + t4287 + t4303 + t4310;
  t4448 = -0.1422*t4447;
  t4450 = -0.2083*t3563;
  t4451 = t1322*t4447;
  t4457 = t3563*t1365;
  t4459 = t4451 + t4457;
  t4463 = -0.02*t4459;
  t4464 = t1322*t3563;
  t4465 = t4447*t1458;
  t4468 = t4464 + t4465;
  t4469 = -0.16*t4468;
  t4471 = t4448 + t4450 + t4463 + t4469;
  t4179 = -0.2083*t3490;
  t4211 = -0.1422*t4210;
  t4212 = t1322*t4210;
  t4216 = t3490*t1365;
  t4217 = t4212 + t4216;
  t4218 = -0.02*t4217;
  t4221 = t1322*t3490;
  t4224 = t4210*t1458;
  t4225 = t4221 + t4224;
  t4227 = -0.16*t4225;
  t4228 = t4179 + t4211 + t4218 + t4227;
  t4541 = -1.*t297*t3613;
  t4544 = t3641*t284;
  t4548 = t4541 + t4544;
  t4589 = -1.*t102*t160;
  t4590 = -1.*t78*t153*t263;
  t4591 = t4589 + t4590;
  t4629 = -1.*t78*t297*t153;
  t4630 = -1.*t180*t78*t102*t284;
  t4639 = t4629 + t4630;
  t4621 = t180*t78*t102*t297;
  t4623 = -1.*t78*t153*t284;
  t4624 = t4621 + t4623;
  t4670 = -1.*t102*t153*t160;
  t4671 = -1.*t78*t672;
  t4672 = t4670 + t4671;
  t4689 = t297*t4672;
  t4691 = -1.*t180*t160*t284;
  t4693 = t4689 + t4691;
  t4666 = -1.*t180*t297*t160;
  t4680 = -1.*t4672*t284;
  t4682 = t4666 + t4680;
  t4735 = t78*t102*t153;
  t4743 = -1.*t160*t672;
  t4744 = 0. + t4735 + t4743;
  t4718 = t180*t78;
  t4724 = 0. + t4718;
  t4755 = -1.*t297*t4744;
  t4763 = -1.*t4724*t284;
  t4764 = t4755 + t4763;
  t4726 = t4724*t297;
  t4745 = -1.*t4744*t284;
  t4750 = t4726 + t4745;
  t4802 = t297*t4744;
  t4808 = t4724*t284;
  t4812 = 0. + t4802 + t4808;
  t4798 = 0. + t4726 + t4745;
  t4599 = -1.*t42*t4591*t284;
  t4601 = -1.*t297*t4591*t298;
  t4603 = t4599 + t4601;
  t4604 = -0.16*t4603;
  t4605 = -1.*t297*t42*t4591;
  t4606 = t4591*t284*t298;
  t4607 = t4605 + t4606;
  t4612 = -0.02*t4607;
  t4613 = t4604 + t4612;
  t4973 = -1.*t78*t102*t153;
  t4974 = t160*t263;
  t4988 = t4973 + t4974;
  t5057 = -1.*t78*t102;
  t5058 = t153*t160*t263;
  t5064 = t5057 + t5058;
  t4625 = -1.*t42*t4624;
  t4641 = -1.*t4639*t298;
  t4644 = t4625 + t4641;
  t4645 = -0.02*t4644;
  t4646 = t42*t4639;
  t4653 = -1.*t4624*t298;
  t4654 = t4646 + t4653;
  t4656 = -0.16*t4654;
  t4660 = t4645 + t4656;
  t4880 = 0.0329*t180*t78*t102;
  t4885 = 0.2083*t180*t78*t297*t263;
  t4886 = -0.1422*t180*t78*t263*t284;
  t4893 = t180*t78*t1322*t263*t284;
  t4895 = -1.*t180*t78*t297*t263*t1365;
  t4898 = t4893 + t4895;
  t4905 = -0.02*t4898;
  t4907 = -1.*t180*t78*t297*t1322*t263;
  t4937 = t180*t78*t263*t284*t1458;
  t4951 = t4907 + t4937;
  t4952 = -0.16*t4951;
  t4954 = t4880 + t4885 + t4886 + t4905 + t4952;
  t5153 = -1.*t180*t78*t102*t297;
  t5155 = t78*t153*t284;
  t5160 = t5153 + t5155;
  t5238 = -1.*t180*t78*t297;
  t5244 = t78*t102*t153*t284;
  t5247 = t5238 + t5244;
  t5216 = -1.*t78*t102*t297*t153;
  t5228 = -1.*t180*t78*t284;
  t5236 = t5216 + t5228;
  t5299 = t297*t153*t160;
  t5301 = t180*t102*t160*t284;
  t5303 = t5299 + t5301;
  t5309 = -1.*t180*t102*t297*t160;
  t5310 = t153*t160*t284;
  t5314 = t5309 + t5310;
  t4754 = -1.*t42*t4750;
  t4767 = -1.*t4764*t298;
  t4780 = t4754 + t4767;
  t4782 = -0.02*t4780;
  t4783 = t42*t4764;
  t4784 = -1.*t4750*t298;
  t4785 = t4783 + t4784;
  t4789 = -0.16*t4785;
  t4795 = t4782 + t4789;
  t4845 = 0.1422*t297*t4591;
  t4846 = 0.2083*t4591*t284;
  t4848 = -1.*t297*t1322*t4591;
  t4851 = -1.*t4591*t284*t1365;
  t4855 = t4848 + t4851;
  t4856 = -0.02*t4855;
  t4858 = -1.*t1322*t4591*t284;
  t4864 = -1.*t297*t4591*t1458;
  t4868 = t4858 + t4864;
  t4873 = -0.16*t4868;
  t4875 = t4845 + t4846 + t4856 + t4873;
  t5151 = -0.2083*t4639;
  t5170 = -0.1422*t5160;
  t5172 = t1322*t5160;
  t5176 = t4639*t1365;
  t5182 = t5172 + t5176;
  t5183 = -0.02*t5182;
  t5184 = t1322*t4639;
  t5190 = t5160*t1458;
  t5191 = t5184 + t5190;
  t5199 = -0.16*t5191;
  t5204 = t5151 + t5170 + t5183 + t5199;
  t5353 = -1.*t297*t4672;
  t5358 = t180*t160*t284;
  t5359 = t5353 + t5358;
  t5408 = -1.*t4724*t297;
  t5411 = t4744*t284;
  t5412 = t5408 + t5411;
  t4686 = t42*t4682;
  t4694 = -1.*t4693*t298;
  t4695 = t4686 + t4694;
  t4696 = -0.16*t4695;
  t4698 = -1.*t42*t4693;
  t4708 = -1.*t4682*t298;
  t4709 = t4698 + t4708;
  t4711 = -0.02*t4709;
  t4715 = t4696 + t4711;
  t5043 = t102*t153*t160;
  t5046 = t78*t263;
  t5047 = t5043 + t5046;
  t5050 = -0.0329*t5047;
  t5066 = -0.2083*t297*t5064;
  t5067 = 0.1422*t5064*t284;
  t5068 = -1.*t1322*t5064*t284;
  t5078 = t297*t5064*t1365;
  t5085 = t5068 + t5078;
  t5089 = -0.02*t5085;
  t5090 = t297*t1322*t5064;
  t5108 = -1.*t5064*t284*t1458;
  t5110 = t5090 + t5108;
  t5116 = -0.16*t5110;
  t5117 = t5050 + t5066 + t5067 + t5089 + t5116;
  t5367 = -0.1422*t5359;
  t5371 = -0.2083*t4682;
  t5383 = t1322*t5359;
  t5385 = t4682*t1365;
  t5387 = t5383 + t5385;
  t5391 = -0.02*t5387;
  t5393 = t1322*t4682;
  t5395 = t5359*t1458;
  t5399 = t5393 + t5395;
  t5401 = -0.16*t5399;
  t5403 = t5367 + t5371 + t5391 + t5401;
  t5289 = 0.2429*t153*t160;
  t5298 = -0.0329*t180*t160*t263;
  t5308 = -0.1422*t5303;
  t5317 = -0.2083*t5314;
  t5318 = t1322*t5303;
  t5319 = t5314*t1365;
  t5322 = t5318 + t5319;
  t5323 = -0.02*t5322;
  t5329 = t1322*t5314;
  t5332 = t5303*t1458;
  t5334 = t5329 + t5332;
  t5335 = -0.16*t5334;
  t5338 = t5289 + t5298 + t5308 + t5317 + t5323 + t5335;
  t5209 = -0.2429*t180*t78;
  t4965 = t78*t153*t263;
  t5535 = t160*t672;
  t5545 = t4973 + t5535;
  t5559 = -1.*t5545*t284;
  t5560 = t5238 + t5559;
  t5548 = t297*t5545;
  t5554 = t5548 + t5228;
  t5631 = t1322*t4798;
  t5638 = t4812*t1365;
  t5639 = 0. + t5631 + t5638;
  t5673 = t1322*t4812;
  t5676 = t4798*t1458;
  t5677 = 0. + t5673 + t5676;
  t5648 = t297*t4591*t1365;
  t5661 = t4858 + t5648;
  t5664 = 2.*t5661*t5639;
  t5665 = t297*t1322*t4591;
  t5668 = -1.*t4591*t284*t1458;
  t5669 = t5665 + t5668;
  t5685 = 2.*t5669*t5677;
  t5687 = t5664 + t5685;
  t5689 = Power(t5639,2);
  t5690 = Power(t5677,2);
  t5692 = t5689 + t5690;
  t5694 = Power(t5692,-2);
  t5702 = t4624*t1365;
  t5705 = t5184 + t5702;
  t5735 = 1/t5692;
  t5640 = t1322*t4624;
  t5644 = t4639*t1458;
  t5647 = t5640 + t5644;
  t5717 = -1.*t1322*t4812;
  t5722 = -1.*t4798*t1458;
  t5723 = 0. + t5717 + t5722;
  t5741 = t4591*t284*t1458;
  t5742 = t4848 + t5741;
  t5024 = t297*t1322*t4988;
  t5027 = -1.*t4988*t284*t1458;
  t5028 = t5024 + t5027;
  t5003 = -1.*t1322*t4988*t284;
  t5004 = t297*t4988*t1365;
  t5016 = t5003 + t5004;
  t5818 = t4693*t1365;
  t5826 = t5393 + t5818;
  t5799 = t1322*t4693;
  t5802 = t4682*t1458;
  t5806 = t5799 + t5802;
  t5460 = t1322*t4764;
  t5855 = t4750*t1365;
  t5856 = t5460 + t5855;
  t5849 = t1322*t4750;
  t5850 = t4764*t1458;
  t5851 = t5849 + t5850;
  t4823 = -1.*t42*t4812;
  t4828 = -1.*t4798*t298;
  t4830 = t4823 + t4828;
  t5905 = t42*t4798;
  t5906 = -1.*t4812*t298;
  t5921 = t5905 + t5906;
  t5961 = 2.*t5639*t5705;
  t5967 = 2.*t5647*t5677;
  t5978 = t5961 + t5967;
  t5740 = t5639*t4951*t5735;
  t5778 = t4898*t5723*t5735;
  t5989 = -1.*t1322*t4624;
  t5997 = -1.*t4639*t1458;
  t6006 = t5989 + t5997;
  t5271 = t1322*t5236;
  t5274 = t5247*t1458;
  t5279 = t5271 + t5274;
  t5249 = t1322*t5247;
  t5253 = t5236*t1365;
  t5262 = t5249 + t5253;
  t6095 = 2.*t5639*t4830;
  t6101 = 2.*t5921*t5677;
  t6104 = t6095 + t6101;
  t5925 = t5639*t4603*t5735;
  t4800 = -1.*t42*t4798;
  t4816 = t4812*t298;
  t4818 = t4800 + t4816;
  t5939 = t4607*t5723*t5735;
  t6082 = t5639*t4654*t5735;
  t6086 = t4644*t5723*t5735;
  t6202 = 2.*t5639*t5856;
  t6205 = 2.*t5851*t5677;
  t6209 = t6202 + t6205;
  t5860 = t5639*t4868*t5735;
  t5879 = t4855*t5723*t5735;
  t6231 = -1.*t1322*t4750;
  t6235 = -1.*t4764*t1458;
  t6239 = t6231 + t6235;
  t6048 = t5639*t5191*t5735;
  t6052 = t5182*t5723*t5735;
  t6136 = t5639*t4785*t5735;
  t6139 = t4780*t5723*t5735;
  t5425 = t1322*t5412;
  t5429 = t4764*t1365;
  t5446 = t5425 + t5429;
  t5461 = t5412*t1458;
  t5462 = t5460 + t5461;
  t6327 = 2.*t5639*t5826;
  t6329 = 2.*t5806*t5677;
  t6330 = t6327 + t6329;
  t5840 = t5639*t5110*t5735;
  t5844 = t5085*t5723*t5735;
  t6063 = t5639*t5334*t5735;
  t6356 = -1.*t1322*t4693;
  t6363 = -1.*t4682*t1458;
  t6365 = t6356 + t6363;
  t6068 = t5322*t5723*t5735;
  t6272 = t5639*t5399*t5735;
  t6275 = t5387*t5723*t5735;
  t6178 = t5639*t4695*t5735;
  t6183 = t4709*t5723*t5735;
  t5565 = t1322*t5560;
  t5574 = t5554*t1365;
  t5577 = t5565 + t5574;
  t5597 = t1322*t5554;
  t5600 = t5560*t1458;
  t5601 = t5597 + t5600;
  t5525 = t2964*t160;
  t6444 = -1.*t2964*t160;
  t6451 = 0. + t6444 + t4590;
  t6455 = 1/Sqrt(t5692);
  t6461 = 0. + t5525 + t4965;
  t6462 = Power(t6461,2);
  t6464 = t6462 + t5689 + t5690;
  t6465 = Power(t6464,-2);
  t6454 = Power(t6104,2);
  t6469 = Power(t5692,-1.5);
  t6472 = 1/t6464;
  t6532 = -1.*t160*t263;
  t6533 = t4735 + t6532;
  t6537 = Sqrt(t5692);
  t6587 = t78*t2964;
  t6588 = -1.*t153*t160*t263;
  t6601 = t6587 + t6588;
  t6648 = Power(t6209,2);
  t6484 = 2.*t5639*t4780;
  t6487 = 2.*t5856*t4830;
  t6490 = 2.*t5921*t5851;
  t6494 = 2.*t4785*t5677;
  t6496 = t6484 + t6487 + t6490 + t6494;
  t6813 = 2.*t180*t78*t263*t6461;
  t6817 = t6813 + t5961 + t5967;
  t6567 = 2.*t5639*t4644;
  t6573 = 2.*t5705*t4830;
  t6574 = 2.*t5921*t5647;
  t6575 = 2.*t4654*t5677;
  t6578 = t6567 + t6573 + t6574 + t6575;
  t6749 = 2.*t5639*t5182;
  t6750 = 2.*t5705*t5856;
  t6751 = 2.*t5851*t5647;
  t6752 = 2.*t5191*t5677;
  t6754 = t6749 + t6750 + t6751 + t6752;
  t7001 = 2.*t6461*t6533;
  t7006 = t7001 + t5664 + t5685;
  t6540 = 2.*t5639*t4607;
  t6543 = 2.*t5661*t4830;
  t6544 = 2.*t5921*t5669;
  t6546 = 2.*t4603*t5677;
  t6550 = t6540 + t6543 + t6544 + t6546;
  t6697 = 2.*t4855*t5639;
  t6700 = 2.*t5661*t5856;
  t6709 = 2.*t5669*t5851;
  t6712 = 2.*t4868*t5677;
  t6714 = t6697 + t6700 + t6709 + t6712;
  t6852 = -0.25*t6451*t5687*t5978*t6469*t6472;
  t6853 = 2.*t4898*t5639;
  t6863 = 2.*t5661*t5705;
  t6875 = 2.*t5669*t5647;
  t6879 = 2.*t4951*t5677;
  t6882 = t6853 + t6863 + t6875 + t6879;
  t6883 = 0.5*t6451*t6882*t6455*t6472;
  t6891 = t180*t78*t102*t6537*t6472;
  t7160 = 2.*t6461*t6601;
  t7161 = t7160 + t6327 + t6329;
  t6613 = 2.*t5639*t4709;
  t6618 = 2.*t5826*t4830;
  t6620 = 2.*t5921*t5806;
  t6626 = 2.*t4695*t5677;
  t6629 = t6613 + t6618 + t6620 + t6626;
  t7170 = -1.*t78*t2964;
  t7171 = t7170 + t5058;
  t6776 = 2.*t5639*t5387;
  t6784 = 2.*t5826*t5856;
  t6787 = 2.*t5851*t5806;
  t6789 = 2.*t5399*t5677;
  t6790 = t6776 + t6784 + t6787 + t6789;
  t6951 = -0.25*t6451*t5978*t6330*t6469*t6472;
  t6954 = 2.*t5705*t5826;
  t6957 = 2.*t5639*t5322;
  t6958 = 2.*t5647*t5806;
  t6975 = 2.*t5334*t5677;
  t6979 = t6954 + t6957 + t6958 + t6975;
  t6981 = 0.5*t6451*t6979*t6455*t6472;
  t6985 = -1.*t180*t160*t263*t6537*t6472;
  t7081 = -0.25*t6451*t5687*t6330*t6469*t6472;
  t7086 = 2.*t5085*t5639;
  t7088 = 2.*t5661*t5826;
  t7089 = 2.*t5669*t5806;
  t7091 = 2.*t5110*t5677;
  t7094 = t7086 + t7088 + t7089 + t7091;
  t7095 = 0.5*t6451*t7094*t6455*t6472;
  t7104 = -1.*t78*t263;
  t7105 = t4670 + t7104;
  t7106 = t7105*t6537*t6472;
  t7289 = t78*t88*t2964;
  t7291 = 0. + t7289 + t273;
  t7299 = t78*t2964*t210;
  t7304 = 0. + t7299 + t3378;
  t3937 = t2475*t263;
  t7298 = -2.*t506*t263*t7291;
  t7309 = -2.*t3442*t263*t7304;
  t7314 = t7298 + t7309;
  t7315 = Power(t7291,2);
  t7318 = Power(t7304,2);
  t7320 = t7315 + t7318;
  t7323 = Power(t7320,-2);
  t7341 = 1/t7320;
  t7338 = 0. + t4352 + t3937;
  t7387 = -1.*t2964*t160*t210;
  t7388 = t7387 + t3995;
  t4484 = t4352 + t1977;
  t7429 = t7289 + t273;
  t7460 = 2.*t4326*t7291;
  t7461 = 2.*t7388*t7304;
  t7477 = t7460 + t7461;
  t7403 = -1.*t180*t78*t210*t263*t7291*t7341;
  t7404 = -1.*t180*t78*t88*t263*t7338*t7341;
  t4356 = t153*t160*t210*t263;
  t4357 = t4352 + t4356;
  t3206 = t88*t153*t160*t263;
  t3215 = t2969 + t3206;
  t7579 = 2.*t1623*t7291;
  t7581 = 2.*t3929*t7304;
  t7589 = t7579 + t7581;
  t7353 = -1.*t102*t3442*t7291*t7341;
  t7355 = -1.*t102*t506*t7338*t7341;
  t7601 = t3627 + t1941;
  t7528 = t4015*t7291*t7341;
  t7531 = t1849*t7338*t7341;
  t3938 = t1974 + t3937;
  t1651 = -1.*t78*t88*t102;
  t1656 = t240*t263;
  t1668 = t1651 + t1656;
  t7669 = 2.*t7291*t4484;
  t7676 = 2.*t7429*t7304;
  t7677 = t7669 + t7676;
  t7434 = -1.*t506*t263*t7291*t7341;
  t7445 = -1.*t1040*t263*t7338*t7341;
  t7625 = t1623*t7291*t7341;
  t7683 = t2969 + t1656;
  t7627 = t1958*t7338*t7341;
  t7562 = t4326*t7291*t7341;
  t7565 = t3078*t7338*t7341;
  t2972 = -1.*t457*t263;
  t2976 = t2969 + t2972;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=var2[4]*(t2188*var2[3] + (t2962 - 0.0329*t3215 - 0.2083*t3233 - 0.1422*t3246 - 0.02*(t1365*t3233 + t1322*t3246) - 0.16*(t1322*t3233 + t1458*t3246) - 0.2429*t160*t180*t88)*var2[4] + t3185*var2[5] + t1929*var2[6] + t2729*var2[7] + t1004*var2[8]) + var2[5]*(t2629*var2[3] + t3185*var2[4] + (t2319 + t2962 - 0.0329*t2976 - 0.2083*t3020 - 0.1422*t3027 - 0.02*(t1365*t3020 + t1322*t3027) - 0.16*(t1322*t3020 + t1458*t3027))*var2[5] + t2041*var2[6] + t2827*var2[7] + t1200*var2[8]) + var2[6]*(t1566*var2[3] + t1929*var2[4] + t2041*var2[5] + (-0.0329*t1668 + 0.1422*t1623*t284 - 0.2083*t1623*t297 - 0.16*(-1.*t1458*t1623*t284 + t1322*t1623*t297) - 0.02*(-1.*t1322*t1623*t284 + t1365*t1623*t297))*var2[6] + t1507*var2[7] + t375*var2[8]) + var2[3]*((t2319 - 0.1422*t2344 - 0.2083*t2384 - 0.16*(t1458*t2344 + t1322*t2384) - 0.02*(t1322*t2344 + t1365*t2384) + 0.0329*t263*t457)*var2[3] + t2188*var2[4] + t2629*var2[5] + t1566*var2[6] + t2309*var2[7] + t637*var2[8]) + var2[7]*(t2309*var2[3] + t2729*var2[4] + t2827*var2[5] + t1507*var2[6] + (-0.1422*t2857 - 0.2083*t723 - 0.16*(t1458*t2857 + t1322*t723) - 0.02*(t1322*t2857 + t1365*t723))*var2[7] + t785*var2[8]) + var2[8]*(t637*var2[3] + t1004*var2[4] + t1200*var2[5] + t375*var2[6] + t785*var2[7] + (-0.02*(-1.*t42*t794 + t298*t823) - 0.16*(-1.*t298*t794 - 1.*t42*t823))*var2[8]);
  p_output1[4]=var2[6]*(t3897*var2[3] + t4047*var2[4] + t4080*var2[5] + (0.1422*t284*t3929 - 0.2083*t297*t3929 - 0.16*(-1.*t1458*t284*t3929 + t1322*t297*t3929) - 0.02*(-1.*t1322*t284*t3929 + t1365*t297*t3929) - 0.0329*t3938)*var2[6] + t3855*var2[7] + t3431*var2[8]) + var2[3]*((0.0329*t1062*t263 + t4231 - 0.2083*t4236 - 0.1422*t4241 - 0.02*(t1365*t4236 + t1322*t4241) - 0.16*(t1322*t4236 + t1458*t4241))*var2[3] + t4154*var2[4] + t4173*var2[5] + t3897*var2[6] + t4228*var2[7] + t3545*var2[8]) + var2[5]*(t4173*var2[3] + t4346*var2[4] + (-0.1422*t1122 - 0.2083*t1149 - 0.16*(t1149*t1322 + t1122*t1458) - 0.02*(t1149*t1365 + t2802) + t4231 + t4350 - 0.0329*t4484)*var2[5] + t4080*var2[6] + t4471*var2[7] + t3597*var2[8]) + var2[7]*(t4228*var2[3] + t4311*var2[4] + t4471*var2[5] + t3855*var2[6] + (-0.2083*t3663 - 0.1422*t4548 - 0.02*(t1365*t3663 + t1322*t4548) - 0.16*(t1322*t3663 + t1458*t4548))*var2[7] + t3693*var2[8]) + var2[4]*(t4154*var2[3] + (-0.2429*t160*t180*t210 + t4350 - 0.0329*t4357 - 0.2083*t4370 - 0.1422*t4380 - 0.02*(t1365*t4370 + t1322*t4380) - 0.16*(t1322*t4370 + t1458*t4380))*var2[4] + t4346*var2[5] + t4047*var2[6] + t4311*var2[7] + t3808*var2[8]) + var2[8]*(t3545*var2[3] + t3808*var2[4] + t3597*var2[5] + t3431*var2[6] + t3693*var2[7] + (-0.02*(t298*t3728 - 1.*t3695*t42) - 0.16*(-1.*t298*t3695 - 1.*t3728*t42))*var2[8]);
  p_output1[5]=var2[6]*(t4954*var2[3] + t5117*var2[4] + (-0.0329*(t102*t160 + t4965) + 0.1422*t284*t4988 - 0.2083*t297*t4988 - 0.02*t5016 - 0.16*t5028)*var2[6] + t4875*var2[7] + t4613*var2[8]) + var2[3]*((t5209 - 0.2083*t5236 - 0.1422*t5247 - 0.02*t5262 - 0.16*t5279 - 0.0329*t153*t263*t78)*var2[3] + t5338*var2[4] + t4954*var2[6] + t5204*var2[7] + t4660*var2[8]) + var2[4]*(t5338*var2[3] + (-0.0817*t160 + t5209 - 0.0329*(t4965 + t5525) - 0.2083*t5554 - 0.1422*t5560 - 0.02*t5577 - 0.16*t5601)*var2[4] + t5117*var2[6] + t5403*var2[7] + t4715*var2[8]) + var2[7]*(t5204*var2[3] + t5403*var2[4] + t4875*var2[6] + (-0.2083*t4764 - 0.1422*t5412 - 0.02*t5446 - 0.16*t5462)*var2[7] + t4795*var2[8]) + var2[8]*(t4660*var2[3] + t4715*var2[4] + t4613*var2[6] + t4795*var2[7] + (-0.02*t4818 - 0.16*t4830)*var2[8]);
  p_output1[6]=var2[6]*((-1.*t5639*t5647*t5687*t5694 - 1.*t5687*t5694*t5705*t5723 + t5647*t5661*t5735 + t5740 + t5705*t5735*t5742 + t5778)*var2[3] + (-1.*t5639*t5687*t5694*t5806 + t5661*t5735*t5806 - 1.*t5687*t5694*t5723*t5826 + t5735*t5742*t5826 + t5840 + t5844)*var2[4] + (-1.*t5639*t5669*t5687*t5694 - 1.*t5661*t5687*t5694*t5723 + t5028*t5639*t5735 + t5661*t5669*t5735 + t5016*t5723*t5735 + t5661*t5735*t5742)*var2[6] + (-1.*t5639*t5687*t5694*t5851 + t5661*t5735*t5851 - 1.*t5687*t5694*t5723*t5856 + t5735*t5742*t5856 + t5860 + t5879)*var2[7] + (-1.*t4830*t5687*t5694*t5723 + t4830*t5735*t5742 - 1.*t5639*t5687*t5694*t5921 + t5661*t5735*t5921 + t5925 + t5939)*var2[8]) + var2[3]*((t5279*t5639*t5735 + t5647*t5705*t5735 + t5262*t5723*t5735 - 1.*t5639*t5647*t5694*t5978 - 1.*t5694*t5705*t5723*t5978 + t5705*t5735*t6006)*var2[3] + (t5705*t5735*t5806 - 1.*t5639*t5694*t5806*t5978 - 1.*t5694*t5723*t5826*t5978 + t5735*t5826*t6006 + t6063 + t6068)*var2[4] + (t5669*t5705*t5735 + t5740 + t5778 - 1.*t5639*t5669*t5694*t5978 - 1.*t5661*t5694*t5723*t5978 + t5661*t5735*t6006)*var2[6] + (t5705*t5735*t5851 - 1.*t5639*t5694*t5851*t5978 - 1.*t5694*t5723*t5856*t5978 + t5735*t5856*t6006 + t6048 + t6052)*var2[7] + (t5705*t5735*t5921 - 1.*t4830*t5694*t5723*t5978 - 1.*t5639*t5694*t5921*t5978 + t4830*t5735*t6006 + t6082 + t6086)*var2[8]) + var2[8]*((t4830*t5647*t5735 + t4818*t5705*t5735 + t6082 + t6086 - 1.*t5639*t5647*t5694*t6104 - 1.*t5694*t5705*t5723*t6104)*var2[3] + (t4830*t5735*t5806 + t4818*t5735*t5826 - 1.*t5639*t5694*t5806*t6104 - 1.*t5694*t5723*t5826*t6104 + t6178 + t6183)*var2[4] + (t4818*t5661*t5735 + t4830*t5669*t5735 + t5925 + t5939 - 1.*t5639*t5669*t5694*t6104 - 1.*t5661*t5694*t5723*t6104)*var2[6] + (t4830*t5735*t5851 + t4818*t5735*t5856 - 1.*t5639*t5694*t5851*t6104 - 1.*t5694*t5723*t5856*t6104 + t6136 + t6139)*var2[7] + (t4818*t4830*t5735 + t4830*t5639*t5735 + t4818*t5723*t5735 + t4830*t5735*t5921 - 1.*t4830*t5694*t5723*t6104 - 1.*t5639*t5694*t5921*t6104)*var2[8]) + var2[7]*((t5647*t5735*t5856 + t6048 + t6052 - 1.*t5639*t5647*t5694*t6209 - 1.*t5694*t5705*t5723*t6209 + t5705*t5735*t6239)*var2[3] + (t5735*t5806*t5856 - 1.*t5639*t5694*t5806*t6209 - 1.*t5694*t5723*t5826*t6209 + t5735*t5826*t6239 + t6272 + t6275)*var2[4] + (t5669*t5735*t5856 + t5860 + t5879 - 1.*t5639*t5669*t5694*t6209 - 1.*t5661*t5694*t5723*t6209 + t5661*t5735*t6239)*var2[6] + (t5462*t5639*t5735 + t5446*t5723*t5735 + t5735*t5851*t5856 - 1.*t5639*t5694*t5851*t6209 - 1.*t5694*t5723*t5856*t6209 + t5735*t5856*t6239)*var2[7] + (t5735*t5856*t5921 + t6136 + t6139 - 1.*t4830*t5694*t5723*t6209 - 1.*t5639*t5694*t5921*t6209 + t4830*t5735*t6239)*var2[8]) + var2[4]*((t5647*t5735*t5826 + t6063 + t6068 - 1.*t5639*t5647*t5694*t6330 - 1.*t5694*t5705*t5723*t6330 + t5705*t5735*t6365)*var2[3] + (t5601*t5639*t5735 + t5577*t5723*t5735 + t5735*t5806*t5826 - 1.*t5639*t5694*t5806*t6330 - 1.*t5694*t5723*t5826*t6330 + t5735*t5826*t6365)*var2[4] + (t5669*t5735*t5826 + t5840 + t5844 - 1.*t5639*t5669*t5694*t6330 - 1.*t5661*t5694*t5723*t6330 + t5661*t5735*t6365)*var2[6] + (t5735*t5826*t5851 + t6272 + t6275 - 1.*t5639*t5694*t5851*t6330 - 1.*t5694*t5723*t5856*t6330 + t5735*t5856*t6365)*var2[7] + (t5735*t5826*t5921 + t6178 + t6183 - 1.*t4830*t5694*t5723*t6330 - 1.*t5639*t5694*t5921*t6330 + t4830*t5735*t6365)*var2[8]);
  p_output1[7]=var2[8]*((-0.5*t5978*t6104*t6451*t6455*t6465 - 0.25*t5978*t6104*t6451*t6469*t6472 + 0.5*t6451*t6455*t6472*t6578 + 0.5*t180*t263*t6104*t6455*t6472*t78 - 1.*t180*t263*t6104*t6465*t6537*t78)*var2[3] + (-0.5*t6104*t6330*t6451*t6455*t6465 - 0.25*t6104*t6330*t6451*t6469*t6472 + 0.5*t6104*t6455*t6472*t6601 - 1.*t6104*t6465*t6537*t6601 + 0.5*t6451*t6455*t6472*t6629)*var2[4] + (-0.5*t5687*t6104*t6451*t6455*t6465 - 0.25*t5687*t6104*t6451*t6469*t6472 + 0.5*t6104*t6455*t6472*t6533 - 1.*t6104*t6465*t6533*t6537 + 0.5*t6451*t6455*t6472*t6550)*var2[6] - 0.5*t6104*t6209*t6451*t6455*t6465*var2[7] - 0.25*t6104*t6209*t6451*t6469*t6472*var2[7] + 0.5*t6451*t6455*t6472*t6496*var2[7] - 0.5*t6451*t6454*t6455*t6465*var2[8] + 0.5*(2.*Power(t4830,2) + 2.*t4818*t5639 + 2.*t4830*t5677 + 2.*Power(t5921,2))*t6451*t6455*t6472*var2[8] - 0.25*t6451*t6454*t6469*t6472*var2[8]) + var2[7]*((-0.5*t5978*t6209*t6451*t6455*t6465 - 0.25*t5978*t6209*t6451*t6469*t6472 + 0.5*t6451*t6455*t6472*t6754 + 0.5*t180*t263*t6209*t6455*t6472*t78 - 1.*t180*t263*t6209*t6465*t6537*t78)*var2[3] + (-0.5*t6209*t6330*t6451*t6455*t6465 - 0.25*t6209*t6330*t6451*t6469*t6472 + 0.5*t6209*t6455*t6472*t6601 - 1.*t6209*t6465*t6537*t6601 + 0.5*t6451*t6455*t6472*t6790)*var2[4] + (-0.5*t5687*t6209*t6451*t6455*t6465 - 0.25*t5687*t6209*t6451*t6469*t6472 + 0.5*t6209*t6455*t6472*t6533 - 1.*t6209*t6465*t6533*t6537 + 0.5*t6451*t6455*t6472*t6714)*var2[6] + 0.5*(2.*t5446*t5639 + 2.*t5462*t5677 + 2.*Power(t5851,2) + 2.*Power(t5856,2))*t6451*t6455*t6472*var2[7] - 0.5*t6451*t6455*t6465*t6648*var2[7] - 0.25*t6451*t6469*t6472*t6648*var2[7] - 0.5*t6104*t6209*t6451*t6455*t6465*var2[8] - 0.25*t6104*t6209*t6451*t6469*t6472*var2[8] + 0.5*t6451*t6455*t6472*t6496*var2[8]) + var2[6]*((0.5*t4988*t5978*t6455*t6472 + t6852 + t6883 + t6891 - 0.5*t5978*t6451*t6455*t6465*t7006 + 0.5*t180*t263*t5687*t6455*t6472*t78 - 1.*t180*t263*t6465*t6537*t7006*t78)*var2[3] + (0.5*t4988*t6330*t6455*t6472 + 0.5*t5687*t6455*t6472*t6601 - 0.5*t6330*t6451*t6455*t6465*t7006 - 1.*t6465*t6537*t6601*t7006 + t7081 + t7095 + t7106)*var2[4] + (0.5*t4988*t5687*t6455*t6472 + 0.5*(2.*t5016*t5639 + 2.*Power(t5661,2) + 2.*Power(t5669,2) + 2.*t5028*t5677)*t6451*t6455*t6472 - 0.25*Power(t5687,2)*t6451*t6469*t6472 + 0.5*t5687*t6455*t6472*t6533 + t4591*t6472*t6537 - 0.5*t5687*t6451*t6455*t6465*t7006 - 1.*t6465*t6533*t6537*t7006)*var2[6] + 0.5*t4988*t6209*t6455*t6472*var2[7] - 0.25*t5687*t6209*t6451*t6469*t6472*var2[7] + 0.5*t6451*t6455*t6472*t6714*var2[7] - 0.5*t6209*t6451*t6455*t6465*t7006*var2[7] + 0.5*t4988*t6104*t6455*t6472*var2[8] - 0.25*t5687*t6104*t6451*t6469*t6472*var2[8] + 0.5*t6451*t6455*t6472*t6550*var2[8] - 0.5*t6104*t6451*t6455*t6465*t7006*var2[8]) + var2[4]*((t6951 + t6981 + t6985 - 0.5*t5978*t6451*t6455*t6465*t7161 + 0.5*t5978*t6455*t6472*t7171 + 0.5*t180*t263*t6330*t6455*t6472*t78 - 1.*t180*t263*t6465*t6537*t7161*t78)*var2[3] + (0.5*(2.*t5577*t5639 + 2.*t5601*t5677 + 2.*Power(t5806,2) + 2.*Power(t5826,2))*t6451*t6455*t6472 - 0.25*Power(t6330,2)*t6451*t6469*t6472 + (t4590 + t6444)*t6472*t6537 + 0.5*t6330*t6455*t6472*t6601 - 0.5*t6330*t6451*t6455*t6465*t7161 - 1.*t6465*t6537*t6601*t7161 + 0.5*t6330*t6455*t6472*t7171)*var2[4] + (0.5*t6330*t6455*t6472*t6533 + t7081 + t7095 + t7106 - 0.5*t5687*t6451*t6455*t6465*t7161 - 1.*t6465*t6533*t6537*t7161 + 0.5*t5687*t6455*t6472*t7171)*var2[6] - 0.25*t6209*t6330*t6451*t6469*t6472*var2[7] + 0.5*t6451*t6455*t6472*t6790*var2[7] - 0.5*t6209*t6451*t6455*t6465*t7161*var2[7] + 0.5*t6209*t6455*t6472*t7171*var2[7] - 0.25*t6104*t6330*t6451*t6469*t6472*var2[8] + 0.5*t6451*t6455*t6472*t6629*var2[8] - 0.5*t6104*t6451*t6455*t6465*t7161*var2[8] + 0.5*t6104*t6455*t6472*t7171*var2[8]) + var2[3]*((0.5*(2.*t5262*t5639 + 2.*Power(t5647,2) + 2.*t5279*t5677 + 2.*Power(t5705,2))*t6451*t6455*t6472 - 0.25*Power(t5978,2)*t6451*t6469*t6472 - 0.5*t5978*t6451*t6455*t6465*t6817 - 1.*t153*t263*t6472*t6537*t78 - 1.*t180*t263*t6465*t6537*t6817*t78)*var2[3] + (0.5*t5978*t6455*t6472*t6601 - 0.5*t6330*t6451*t6455*t6465*t6817 - 1.*t6465*t6537*t6601*t6817 + t6951 + t6981 + t6985 - 0.5*t180*t263*t6330*t6455*t6472*t78)*var2[4] + (0.5*t5978*t6455*t6472*t6533 - 0.5*t5687*t6451*t6455*t6465*t6817 - 1.*t6465*t6533*t6537*t6817 + t6852 + t6883 + t6891 - 0.5*t180*t263*t5687*t6455*t6472*t78)*var2[6] - 0.25*t5978*t6209*t6451*t6469*t6472*var2[7] + 0.5*t6451*t6455*t6472*t6754*var2[7] - 0.5*t6209*t6451*t6455*t6465*t6817*var2[7] - 0.5*t180*t263*t6209*t6455*t6472*t78*var2[7] - 0.25*t5978*t6104*t6451*t6469*t6472*var2[8] + 0.5*t6451*t6455*t6472*t6578*var2[8] - 0.5*t6104*t6451*t6455*t6465*t6817*var2[8] - 0.5*t180*t263*t6104*t6455*t6472*t78*var2[8]);
  p_output1[8]=var2[3]*((t263*t3442*t7291*t7314*t7323 + t263*t506*t7314*t7323*t7338 - 1.*t1062*t263*t7291*t7341 - 1.*t263*t457*t7338*t7341)*var2[3] + (-1.*t4326*t7314*t7323*t7338 + t263*t3442*t4326*t7341 - 1.*t7291*t7314*t7323*t7388 - 1.*t263*t506*t7341*t7388 + t7403 + t7404)*var2[4] + (-1.*t4484*t7314*t7323*t7338 + t263*t3442*t4484*t7341 - 1.*t7291*t7314*t7323*t7429 - 1.*t263*t506*t7341*t7429 + t7434 + t7445)*var2[5] + (-1.*t3929*t7291*t7314*t7323 - 1.*t1623*t7314*t7323*t7338 + t1623*t263*t3442*t7341 - 1.*t263*t3929*t506*t7341 + t7353 + t7355)*var2[6]) + var2[4]*((-1.*t263*t3442*t4326*t7341 - 1.*t263*t3078*t506*t7341 + t7403 + t7404 + t263*t3442*t7291*t7323*t7477 + t263*t506*t7323*t7338*t7477)*var2[3] + (t3078*t4326*t7341 + t4357*t7291*t7341 + t3215*t7338*t7341 + t4326*t7341*t7388 - 1.*t4326*t7323*t7338*t7477 - 1.*t7291*t7323*t7388*t7477)*var2[4] + (t3078*t4484*t7341 + t4326*t7341*t7429 - 1.*t4484*t7323*t7338*t7477 - 1.*t7291*t7323*t7429*t7477 + t7562 + t7565)*var2[5] + (t1623*t3078*t7341 + t3929*t4326*t7341 - 1.*t3929*t7291*t7323*t7477 - 1.*t1623*t7323*t7338*t7477 + t7528 + t7531)*var2[6]) + var2[6]*((-1.*t1623*t263*t3442*t7341 + t7353 + t7355 + t263*t3442*t7291*t7323*t7589 + t263*t506*t7323*t7338*t7589 - 1.*t263*t506*t7341*t7601)*var2[3] + (t1623*t7341*t7388 + t7528 + t7531 - 1.*t4326*t7323*t7338*t7589 - 1.*t7291*t7323*t7388*t7589 + t4326*t7341*t7601)*var2[4] + (t1623*t7341*t7429 - 1.*t4484*t7323*t7338*t7589 - 1.*t7291*t7323*t7429*t7589 + t4484*t7341*t7601 + t7625 + t7627)*var2[5] + (t1623*t3929*t7341 + t3938*t7291*t7341 + t1668*t7338*t7341 - 1.*t3929*t7291*t7323*t7589 - 1.*t1623*t7323*t7338*t7589 + t1623*t7341*t7601)*var2[6]) + var2[5]*((-1.*t263*t3442*t4484*t7341 + t7434 + t7445 + t263*t3442*t7291*t7323*t7677 + t263*t506*t7323*t7338*t7677 - 1.*t263*t506*t7341*t7683)*var2[3] + (t4484*t7341*t7388 + t7562 + t7565 - 1.*t4326*t7323*t7338*t7677 - 1.*t7291*t7323*t7388*t7677 + t4326*t7341*t7683)*var2[4] + (t4484*t7291*t7341 + t2976*t7338*t7341 + t4484*t7341*t7429 - 1.*t4484*t7323*t7338*t7677 - 1.*t7291*t7323*t7429*t7677 + t4484*t7341*t7683)*var2[5] + (t3929*t4484*t7341 + t7625 + t7627 - 1.*t3929*t7291*t7323*t7677 - 1.*t1623*t7323*t7338*t7677 + t1623*t7341*t7683)*var2[6]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "jj_hc_3_func.hh"

namespace SymFunction
{

void jj_hc_3_func_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
