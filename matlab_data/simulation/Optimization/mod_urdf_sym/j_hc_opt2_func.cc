/*
 * Automatically Generated from Mathematica.
 * Thu 12 Dec 2019 13:01:26 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t93;
  double t153;
  double t111;
  double t90;
  double t179;
  double t130;
  double t212;
  double t242;
  double t512;
  double t446;
  double t458;
  double t476;
  double t312;
  double t765;
  double t769;
  double t781;
  double t793;
  double t799;
  double t853;
  double t1229;
  double t1270;
  double t1283;
  double t534;
  double t1340;
  double t1350;
  double t1378;
  double t926;
  double t947;
  double t1321;
  double t1391;
  double t1474;
  double t1056;
  double t1076;
  double t1669;
  double t1700;
  double t1709;
  double t1715;
  double t1938;
  double t1897;
  double t2048;
  double t2073;
  double t2076;
  double t2087;
  double t2089;
  double t2100;
  double t1962;
  double t2173;
  double t2198;
  double t2331;
  double t2332;
  double t2339;
  double t2231;
  double t2243;
  double t2494;
  double t2517;
  double t2535;
  double t287;
  double t2757;
  double t2774;
  double t2732;
  double t2770;
  double t2783;
  double t2801;
  double t2819;
  double t2830;
  double t1304;
  double t2867;
  double t2963;
  double t2972;
  double t3039;
  double t3048;
  double t3055;
  double t2989;
  double t2999;
  double t1679;
  double t3174;
  double t3214;
  double t3238;
  double t1887;
  double t3433;
  double t3402;
  double t3500;
  double t3508;
  double t3516;
  double t3528;
  double t3565;
  double t3575;
  double t2303;
  double t3440;
  double t3616;
  double t3625;
  double t3703;
  double t3715;
  double t3732;
  double t3654;
  double t3655;
  double t2486;
  double t3840;
  double t3854;
  double t3866;
  double t3999;
  double t4004;
  double t4012;
  double t4017;
  double t4024;
  double t4025;
  double t4171;
  double t4183;
  double t4196;
  double t4205;
  double t4206;
  double t4208;
  double t4356;
  double t4358;
  double t4359;
  double t4374;
  double t4376;
  double t4377;
  double t4545;
  double t4580;
  double t4594;
  double t4600;
  double t4606;
  double t4609;
  double t4729;
  double t4731;
  double t4734;
  double t4751;
  double t4757;
  double t4789;
  double t4933;
  double t4941;
  double t4946;
  double t4948;
  double t4951;
  double t4952;
  double t3938;
  double t4519;
  double t5046;
  double t5050;
  double t5055;
  double t5060;
  double t5064;
  double t5066;
  double t4121;
  double t4694;
  double t5151;
  double t5152;
  double t5154;
  double t5155;
  double t5163;
  double t5166;
  double t4905;
  double t4324;
  double t5270;
  double t5278;
  double t5290;
  double t5292;
  double t5296;
  double t5300;
  double t4475;
  double t3991;
  double t5392;
  double t5401;
  double t5406;
  double t5410;
  double t5419;
  double t5421;
  double t4688;
  double t4132;
  double t5527;
  double t5528;
  double t5530;
  double t5538;
  double t5539;
  double t5540;
  double t4323;
  double t4911;
  double t5665;
  double t5668;
  double t5674;
  double t5678;
  double t5687;
  double t5688;
  double t5823;
  double t5833;
  double t5850;
  double t5889;
  double t5890;
  double t5891;
  double t5893;
  double t5898;
  double t5911;
  double t6015;
  double t6016;
  double t6019;
  double t6042;
  double t6043;
  double t6048;
  double t6057;
  double t6065;
  double t6066;
  double t6123;
  double t6124;
  double t6125;
  double t6127;
  double t6128;
  double t6135;
  double t6192;
  double t6202;
  double t6210;
  double t6223;
  double t6225;
  double t6237;
  double t6105;
  double t5822;
  double t6294;
  double t6298;
  double t6299;
  double t6305;
  double t6312;
  double t6320;
  double t6165;
  double t6020;
  double t6379;
  double t6388;
  double t6396;
  double t6397;
  double t6399;
  double t6406;
  double t5804;
  double t6106;
  double t6452;
  double t6453;
  double t6457;
  double t6458;
  double t6472;
  double t6480;
  double t6002;
  double t6173;
  double t6523;
  double t6540;
  double t6548;
  double t6553;
  double t6555;
  double t6556;
  double t6643;
  double t6644;
  double t6647;
  double t6712;
  double t6720;
  double t6723;
  double t6725;
  double t6726;
  double t6730;
  double t3250;
  double t6795;
  double t6797;
  double t6819;
  double t6821;
  double t6822;
  double t6823;
  double t6824;
  double t6826;
  double t6752;
  double t6875;
  double t6879;
  double t6881;
  double t6883;
  double t6884;
  double t6890;
  double t6893;
  double t6799;
  double t6941;
  double t6951;
  double t6961;
  double t6963;
  double t6965;
  double t6966;
  double t6967;
  double t7068;
  double t7071;
  double t7075;
  double t7091;
  double t7092;
  double t7093;
  double t2581;
  double t7123;
  double t7133;
  double t7186;
  double t7182;
  double t7187;
  double t7191;
  double t7098;
  double t7225;
  double t7234;
  double t7222;
  double t7235;
  double t7237;
  double t7136;
  double t7272;
  double t7274;
  double t7275;
  double t7279;
  double t7280;
  double t7389;
  double t7393;
  double t7395;
  double t7417;
  double t7423;
  double t7424;
  double t1779;
  double t7472;
  double t7474;
  double t7519;
  double t7517;
  double t7520;
  double t7525;
  double t7439;
  double t7557;
  double t7558;
  double t7554;
  double t7559;
  double t7560;
  double t7478;
  double t7587;
  double t7589;
  double t7590;
  double t7592;
  double t7593;
  double t7671;
  double t7682;
  double t7684;
  double t7694;
  double t7703;
  double t7707;
  double t3878;
  double t7745;
  double t7752;
  double t7785;
  double t7780;
  double t7788;
  double t7789;
  double t7714;
  double t7823;
  double t7824;
  double t7819;
  double t7831;
  double t7832;
  double t7756;
  double t7852;
  double t7854;
  double t7859;
  double t7862;
  double t7866;
  t93 = Cos(var1[5]);
  t153 = Sin(var1[3]);
  t111 = Sin(var1[4]);
  t90 = Cos(var1[3]);
  t179 = Sin(var1[5]);
  t130 = t90*t93*t111;
  t212 = t153*t179;
  t242 = t130 + t212;
  t512 = Cos(var1[12]);
  t446 = -1.*t93*t153*t111;
  t458 = t90*t179;
  t476 = t446 + t458;
  t312 = Sin(var1[12]);
  t765 = Cos(var1[13]);
  t769 = t512*t476;
  t781 = -1.*t312;
  t793 = 0. + t781;
  t799 = t793*t242;
  t853 = t769 + t799;
  t1229 = -1.*t93*t153;
  t1270 = t90*t111*t179;
  t1283 = t1229 + t1270;
  t534 = 0. + t512;
  t1340 = -1.*t90*t93;
  t1350 = -1.*t153*t111*t179;
  t1378 = t1340 + t1350;
  t926 = Cos(var1[14]);
  t947 = 0. + t926;
  t1321 = t793*t1283;
  t1391 = t512*t1378;
  t1474 = t1321 + t1391;
  t1056 = Sin(var1[13]);
  t1076 = Sin(var1[14]);
  t1669 = Cos(var1[4]);
  t1700 = t90*t1669*t793;
  t1709 = -1.*t512*t1669*t153;
  t1715 = t1700 + t1709;
  t1938 = Cos(var1[9]);
  t1897 = Sin(var1[9]);
  t2048 = Cos(var1[10]);
  t2073 = t1938*t476;
  t2076 = -1.*t1897;
  t2087 = 0. + t2076;
  t2089 = t2087*t242;
  t2100 = t2073 + t2089;
  t1962 = 0. + t1938;
  t2173 = Cos(var1[11]);
  t2198 = 0. + t2173;
  t2331 = t2087*t1283;
  t2332 = t1938*t1378;
  t2339 = t2331 + t2332;
  t2231 = Sin(var1[10]);
  t2243 = Sin(var1[11]);
  t2494 = t90*t1669*t2087;
  t2517 = -1.*t1938*t1669*t153;
  t2535 = t2494 + t2517;
  t287 = -0.0875*t242;
  t2757 = Cos(var1[6]);
  t2774 = Sin(var1[6]);
  t2732 = Cos(var1[7]);
  t2770 = t2757*t476;
  t2783 = -1.*t2774;
  t2801 = 0. + t2783;
  t2819 = t242*t2801;
  t2830 = t2770 + t2819;
  t1304 = -0.0875*t1283;
  t2867 = 0. + t2757;
  t2963 = Cos(var1[8]);
  t2972 = 0. + t2963;
  t3039 = t2757*t1378;
  t3048 = t1283*t2801;
  t3055 = t3039 + t3048;
  t2989 = Sin(var1[7]);
  t2999 = Sin(var1[8]);
  t1679 = -0.0875*t90*t1669;
  t3174 = -1.*t1669*t2757*t153;
  t3214 = t90*t1669*t2801;
  t3238 = t3174 + t3214;
  t1887 = 0.0875*t242;
  t3433 = Cos(var1[15]);
  t3402 = Sin(var1[15]);
  t3500 = Cos(var1[16]);
  t3508 = t3433*t476;
  t3516 = -1.*t3402;
  t3528 = 0. + t3516;
  t3565 = t3528*t242;
  t3575 = t3508 + t3565;
  t2303 = 0.0875*t1283;
  t3440 = 0. + t3433;
  t3616 = Cos(var1[17]);
  t3625 = 0. + t3616;
  t3703 = t3528*t1283;
  t3715 = t3433*t1378;
  t3732 = t3703 + t3715;
  t3654 = Sin(var1[16]);
  t3655 = Sin(var1[17]);
  t2486 = 0.0875*t90*t1669;
  t3840 = t90*t1669*t3528;
  t3854 = -1.*t3433*t1669*t153;
  t3866 = t3840 + t3854;
  t3999 = t512*t90*t1669*t93;
  t4004 = t1669*t93*t793*t153;
  t4012 = t3999 + t4004;
  t4017 = t765*t4012;
  t4024 = -1.*t93*t1056*t111;
  t4025 = t4017 + t4024;
  t4171 = -1.*t1056*t111*t179;
  t4183 = t512*t90*t1669*t179;
  t4196 = t1669*t793*t153*t179;
  t4205 = t4183 + t4196;
  t4206 = t765*t4205;
  t4208 = t4171 + t4206;
  t4356 = -1.*t1669*t1056;
  t4358 = -1.*t512*t90*t111;
  t4359 = -1.*t793*t153*t111;
  t4374 = t4358 + t4359;
  t4376 = t765*t4374;
  t4377 = t4356 + t4376;
  t4545 = t1938*t90*t1669*t93;
  t4580 = t1669*t93*t2087*t153;
  t4594 = t4545 + t4580;
  t4600 = t2048*t4594;
  t4606 = -1.*t93*t2231*t111;
  t4609 = t4600 + t4606;
  t4729 = -1.*t2231*t111*t179;
  t4731 = t1938*t90*t1669*t179;
  t4734 = t1669*t2087*t153*t179;
  t4751 = t4731 + t4734;
  t4757 = t2048*t4751;
  t4789 = t4729 + t4757;
  t4933 = -1.*t1669*t2231;
  t4941 = -1.*t1938*t90*t111;
  t4946 = -1.*t2087*t153*t111;
  t4948 = t4941 + t4946;
  t4951 = t2048*t4948;
  t4952 = t4933 + t4951;
  t3938 = -0.0875*t1669*t93*t153;
  t4519 = -0.21935*t93*t111;
  t5046 = t90*t1669*t93*t2757;
  t5050 = t1669*t93*t153*t2801;
  t5055 = t5046 + t5050;
  t5060 = t2732*t5055;
  t5064 = -1.*t93*t111*t2989;
  t5066 = t5060 + t5064;
  t4121 = -0.0875*t1669*t153*t179;
  t4694 = -0.21935*t111*t179;
  t5151 = t90*t1669*t2757*t179;
  t5152 = t1669*t153*t179*t2801;
  t5154 = t5151 + t5152;
  t5155 = t2732*t5154;
  t5163 = -1.*t111*t179*t2989;
  t5166 = t5155 + t5163;
  t4905 = -0.21935*t1669;
  t4324 = 0.0875*t153*t111;
  t5270 = -1.*t90*t2757*t111;
  t5278 = -1.*t153*t111*t2801;
  t5290 = t5270 + t5278;
  t5292 = t2732*t5290;
  t5296 = -1.*t1669*t2989;
  t5300 = t5292 + t5296;
  t4475 = 0.0875*t1669*t93*t153;
  t3991 = 0.21935*t93*t111;
  t5392 = t3433*t90*t1669*t93;
  t5401 = t1669*t93*t3528*t153;
  t5406 = t5392 + t5401;
  t5410 = t3500*t5406;
  t5419 = -1.*t93*t3654*t111;
  t5421 = t5410 + t5419;
  t4688 = 0.0875*t1669*t153*t179;
  t4132 = 0.21935*t111*t179;
  t5527 = -1.*t3654*t111*t179;
  t5528 = t3433*t90*t1669*t179;
  t5530 = t1669*t3528*t153*t179;
  t5538 = t5528 + t5530;
  t5539 = t3500*t5538;
  t5540 = t5527 + t5539;
  t4323 = 0.21935*t1669;
  t4911 = -0.0875*t153*t111;
  t5665 = -1.*t1669*t3654;
  t5668 = -1.*t3433*t90*t111;
  t5674 = -1.*t3528*t153*t111;
  t5678 = t5668 + t5674;
  t5687 = t3500*t5678;
  t5688 = t5665 + t5687;
  t5823 = t93*t153;
  t5833 = -1.*t90*t111*t179;
  t5850 = t5823 + t5833;
  t5889 = -1.*t1669*t1056*t179;
  t5890 = t512*t5850;
  t5891 = t793*t1378;
  t5893 = t5890 + t5891;
  t5898 = t765*t5893;
  t5911 = t5889 + t5898;
  t6015 = t93*t153*t111;
  t6016 = -1.*t90*t179;
  t6019 = t6015 + t6016;
  t6042 = t1669*t93*t1056;
  t6043 = t793*t6019;
  t6048 = t512*t242;
  t6057 = t6043 + t6048;
  t6065 = t765*t6057;
  t6066 = t6042 + t6065;
  t6123 = -1.*t1669*t2231*t179;
  t6124 = t1938*t5850;
  t6125 = t2087*t1378;
  t6127 = t6124 + t6125;
  t6128 = t2048*t6127;
  t6135 = t6123 + t6128;
  t6192 = t1669*t93*t2231;
  t6202 = t2087*t6019;
  t6210 = t1938*t242;
  t6223 = t6202 + t6210;
  t6225 = t2048*t6223;
  t6237 = t6192 + t6225;
  t6105 = -0.21935*t1669*t179;
  t5822 = -0.0875*t1378;
  t6294 = t2757*t5850;
  t6298 = t1378*t2801;
  t6299 = t6294 + t6298;
  t6305 = t2732*t6299;
  t6312 = -1.*t1669*t179*t2989;
  t6320 = t6305 + t6312;
  t6165 = 0.21935*t1669*t93;
  t6020 = -0.0875*t6019;
  t6379 = t2757*t242;
  t6388 = t6019*t2801;
  t6396 = t6379 + t6388;
  t6397 = t2732*t6396;
  t6399 = t1669*t93*t2989;
  t6406 = t6397 + t6399;
  t5804 = 0.21935*t1669*t179;
  t6106 = 0.0875*t1378;
  t6452 = -1.*t1669*t3654*t179;
  t6453 = t3433*t5850;
  t6457 = t3528*t1378;
  t6458 = t6453 + t6457;
  t6472 = t3500*t6458;
  t6480 = t6452 + t6472;
  t6002 = -0.21935*t1669*t93;
  t6173 = 0.0875*t6019;
  t6523 = t1669*t93*t3654;
  t6540 = t3528*t6019;
  t6548 = t3433*t242;
  t6553 = t6540 + t6548;
  t6555 = t3500*t6553;
  t6556 = t6523 + t6555;
  t6643 = -1.*t2757*t6019;
  t6644 = -1.*t242*t2774;
  t6647 = t6643 + t6644;
  t6712 = t90*t93;
  t6720 = t153*t111*t179;
  t6723 = t6712 + t6720;
  t6725 = -1.*t2757*t6723;
  t6726 = -1.*t1283*t2774;
  t6730 = t6725 + t6726;
  t3250 = -1.*t1669*t153*t2774;
  t6795 = -1.*t90*t1669*t2774;
  t6797 = t3174 + t6795;
  t6819 = t1669*t93;
  t6821 = 0. + t6819;
  t6822 = t6821*t2732;
  t6823 = 0. + t6379 + t6388;
  t6824 = -1.*t6823*t2989;
  t6826 = t6822 + t6824;
  t6752 = t2757*t1283;
  t6875 = t1669*t179;
  t6879 = 0. + t6875;
  t6881 = t2732*t6879;
  t6883 = t6723*t2801;
  t6884 = 0. + t6752 + t6883;
  t6890 = -1.*t6884*t2989;
  t6893 = t6881 + t6890;
  t6799 = t90*t1669*t2757;
  t6941 = -1.*t111;
  t6951 = 0. + t6941;
  t6961 = t2732*t6951;
  t6963 = t1669*t153*t2801;
  t6965 = 0. + t6799 + t6963;
  t6966 = -1.*t6965*t2989;
  t6967 = t6961 + t6966;
  t7068 = -1.*t1938*t6019;
  t7071 = -1.*t1897*t242;
  t7075 = t7068 + t7071;
  t7091 = -1.*t1897*t1283;
  t7092 = -1.*t1938*t6723;
  t7093 = t7091 + t7092;
  t2581 = -1.*t1669*t1897*t153;
  t7123 = -1.*t90*t1669*t1897;
  t7133 = t7123 + t2517;
  t7186 = 0. + t6202 + t6210;
  t7182 = t2048*t6821;
  t7187 = -1.*t2231*t7186;
  t7191 = t7182 + t7187;
  t7098 = t1938*t1283;
  t7225 = t2087*t6723;
  t7234 = 0. + t7098 + t7225;
  t7222 = t2048*t6879;
  t7235 = -1.*t2231*t7234;
  t7237 = t7222 + t7235;
  t7136 = t1938*t90*t1669;
  t7272 = t1669*t2087*t153;
  t7274 = 0. + t7136 + t7272;
  t7275 = -1.*t2231*t7274;
  t7279 = t2048*t6951;
  t7280 = t7275 + t7279;
  t7389 = -1.*t512*t6019;
  t7393 = -1.*t312*t242;
  t7395 = t7389 + t7393;
  t7417 = -1.*t312*t1283;
  t7423 = -1.*t512*t6723;
  t7424 = t7417 + t7423;
  t1779 = -1.*t1669*t312*t153;
  t7472 = -1.*t90*t1669*t312;
  t7474 = t7472 + t1709;
  t7519 = 0. + t6043 + t6048;
  t7517 = t765*t6821;
  t7520 = -1.*t1056*t7519;
  t7525 = t7517 + t7520;
  t7439 = t512*t1283;
  t7557 = t793*t6723;
  t7558 = 0. + t7439 + t7557;
  t7554 = t765*t6879;
  t7559 = -1.*t1056*t7558;
  t7560 = t7554 + t7559;
  t7478 = t512*t90*t1669;
  t7587 = t1669*t793*t153;
  t7589 = 0. + t7478 + t7587;
  t7590 = -1.*t1056*t7589;
  t7592 = t765*t6951;
  t7593 = t7590 + t7592;
  t7671 = -1.*t3433*t6019;
  t7682 = -1.*t3402*t242;
  t7684 = t7671 + t7682;
  t7694 = -1.*t3402*t1283;
  t7703 = -1.*t3433*t6723;
  t7707 = t7694 + t7703;
  t3878 = -1.*t1669*t3402*t153;
  t7745 = -1.*t90*t1669*t3402;
  t7752 = t7745 + t3854;
  t7785 = 0. + t6540 + t6548;
  t7780 = t3500*t6821;
  t7788 = -1.*t3654*t7785;
  t7789 = t7780 + t7788;
  t7714 = t3433*t1283;
  t7823 = t3528*t6723;
  t7824 = 0. + t7714 + t7823;
  t7819 = t3500*t6879;
  t7831 = -1.*t3654*t7824;
  t7832 = t7819 + t7831;
  t7756 = t3433*t90*t1669;
  t7852 = t1669*t3528*t153;
  t7854 = 0. + t7756 + t7852;
  t7859 = -1.*t3654*t7854;
  t7862 = t3500*t6951;
  t7866 = t7859 + t7862;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=1.;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=1.;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=1.;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=1.;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=1.;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=1.;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=1.;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=1.;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=1.;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=1.;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=1.;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=1.;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=1.;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=1.;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=t287 - 0.037*(t312*t476 + t242*t534) - 0.25*t765*t853 - 0.27*(-1.*t1056*t1076*t853 + t765*t853*t947);
  p_output1[61]=t1304 - 0.037*(t1378*t312 + t1283*t534) - 0.25*t1474*t765 - 0.27*(-1.*t1056*t1076*t1474 + t1474*t765*t947);
  p_output1[62]=t1679 - 0.25*t1715*t765 - 0.037*(t1779 + t1669*t534*t90) - 0.27*(-1.*t1056*t1076*t1715 + t1715*t765*t947);
  p_output1[63]=t1887 - 0.25*t2048*t2100 - 0.27*(t2048*t2100*t2198 - 1.*t2100*t2231*t2243) + 0.037*(t1962*t242 + t1897*t476);
  p_output1[64]=0.037*(t1378*t1897 + t1283*t1962) + t2303 - 0.25*t2048*t2339 - 0.27*(t2048*t2198*t2339 - 1.*t2231*t2243*t2339);
  p_output1[65]=t2486 - 0.25*t2048*t2535 - 0.27*(t2048*t2198*t2535 - 1.*t2231*t2243*t2535) + 0.037*(t2581 + t1669*t1962*t90);
  p_output1[66]=-0.25*t2732*t2830 + t287 - 0.27*(t2732*t2830*t2972 - 1.*t2830*t2989*t2999) - 0.037*(t242*t2867 + t2774*t476);
  p_output1[67]=t1304 - 0.037*(t1378*t2774 + t1283*t2867) - 0.25*t2732*t3055 - 0.27*(t2732*t2972*t3055 - 1.*t2989*t2999*t3055);
  p_output1[68]=t1679 - 0.25*t2732*t3238 - 0.27*(t2732*t2972*t3238 - 1.*t2989*t2999*t3238) - 0.037*(t3250 + t1669*t2867*t90);
  p_output1[69]=t1887 - 0.25*t3500*t3575 - 0.27*(t3500*t3575*t3625 - 1.*t3575*t3654*t3655) + 0.037*(t242*t3440 + t3402*t476);
  p_output1[70]=t2303 + 0.037*(t1378*t3402 + t1283*t3440) - 0.25*t3500*t3732 - 0.27*(t3500*t3625*t3732 - 1.*t3654*t3655*t3732);
  p_output1[71]=t2486 - 0.25*t3500*t3866 - 0.27*(t3500*t3625*t3866 - 1.*t3654*t3655*t3866) + 0.037*(t3878 + t1669*t3440*t90);
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=1.;
  p_output1[77]=0;
  p_output1[78]=t3938 + t3991 - 0.25*t4025 - 0.037*(t153*t1669*t534*t93 + t1669*t312*t90*t93) - 0.27*(t1076*(-1.*t1056*t4012 - 1.*t111*t765*t93) + t4025*t947);
  p_output1[79]=t4121 + t4132 - 0.25*t4208 - 0.037*(t153*t1669*t179*t534 + t1669*t179*t312*t90) - 0.27*(t1076*(-1.*t1056*t4205 - 1.*t111*t179*t765) + t4208*t947);
  p_output1[80]=t4323 + t4324 - 0.25*t4377 - 0.037*(-1.*t111*t153*t534 - 1.*t111*t312*t90) - 0.27*(t1076*(-1.*t1056*t4374 - 1.*t1669*t765) + t4377*t947);
  p_output1[81]=t4475 + t4519 - 0.25*t4609 + 0.037*(t153*t1669*t1962*t93 + t1669*t1897*t90*t93) - 0.27*(t2198*t4609 + t2243*(-1.*t2231*t4594 - 1.*t111*t2048*t93));
  p_output1[82]=t4688 + t4694 - 0.25*t4789 - 0.27*(t2243*(-1.*t111*t179*t2048 - 1.*t2231*t4751) + t2198*t4789) + 0.037*(t153*t1669*t179*t1962 + t1669*t179*t1897*t90);
  p_output1[83]=t4905 + t4911 - 0.25*t4952 - 0.27*(t2243*(-1.*t1669*t2048 - 1.*t2231*t4948) + t2198*t4952) + 0.037*(-1.*t111*t153*t1962 - 1.*t111*t1897*t90);
  p_output1[84]=t3938 + t4519 - 0.25*t5066 - 0.037*(t153*t1669*t2867*t93 + t1669*t2774*t90*t93) - 0.27*(t2972*t5066 + t2999*(-1.*t2989*t5055 - 1.*t111*t2732*t93));
  p_output1[85]=t4121 + t4694 - 0.25*t5166 - 0.27*(t2999*(-1.*t111*t179*t2732 - 1.*t2989*t5154) + t2972*t5166) - 0.037*(t153*t1669*t179*t2867 + t1669*t179*t2774*t90);
  p_output1[86]=t4324 + t4905 - 0.25*t5300 - 0.27*(t2999*(-1.*t1669*t2732 - 1.*t2989*t5290) + t2972*t5300) - 0.037*(-1.*t111*t153*t2867 - 1.*t111*t2774*t90);
  p_output1[87]=t3991 + t4475 - 0.25*t5421 + 0.037*(t153*t1669*t3440*t93 + t1669*t3402*t90*t93) - 0.27*(t3625*t5421 + t3655*(-1.*t3654*t5406 - 1.*t111*t3500*t93));
  p_output1[88]=t4132 + t4688 - 0.25*t5540 - 0.27*(t3655*(-1.*t111*t179*t3500 - 1.*t3654*t5538) + t3625*t5540) + 0.037*(t153*t1669*t179*t3440 + t1669*t179*t3402*t90);
  p_output1[89]=t4323 + t4911 - 0.25*t5688 - 0.27*(t3655*(-1.*t1669*t3500 - 1.*t3654*t5678) + t3625*t5688) + 0.037*(-1.*t111*t153*t3440 - 1.*t111*t3402*t90);
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=1.;
  p_output1[96]=t5804 + t5822 - 0.037*(t1378*t534 + t312*t5850) - 0.25*t5911 - 0.27*(t1076*(-1.*t1056*t5893 - 1.*t1669*t179*t765) + t5911*t947);
  p_output1[97]=t6002 - 0.037*(t242*t312 + t534*t6019) + t6020 - 0.25*t6066 - 0.27*(t1076*(-1.*t1056*t6057 + t1669*t765*t93) + t6066*t947);
  p_output1[98]=0;
  p_output1[99]=0.037*(t1378*t1962 + t1897*t5850) + t6105 + t6106 - 0.25*t6135 - 0.27*(t2243*(-1.*t1669*t179*t2048 - 1.*t2231*t6127) + t2198*t6135);
  p_output1[100]=0.037*(t1897*t242 + t1962*t6019) + t6165 + t6173 - 0.25*t6237 - 0.27*(t2198*t6237 + t2243*(-1.*t2231*t6223 + t1669*t2048*t93));
  p_output1[101]=0;
  p_output1[102]=t5822 - 0.037*(t1378*t2867 + t2774*t5850) + t6105 - 0.25*t6320 - 0.27*(t2999*(-1.*t1669*t179*t2732 - 1.*t2989*t6299) + t2972*t6320);
  p_output1[103]=-0.037*(t242*t2774 + t2867*t6019) + t6020 + t6165 - 0.25*t6406 - 0.27*(t2972*t6406 + t2999*(-1.*t2989*t6396 + t1669*t2732*t93));
  p_output1[104]=0;
  p_output1[105]=t5804 + 0.037*(t1378*t3440 + t3402*t5850) + t6106 - 0.25*t6480 - 0.27*(t3655*(-1.*t1669*t179*t3500 - 1.*t3654*t6458) + t3625*t6480);
  p_output1[106]=t6002 + 0.037*(t242*t3402 + t3440*t6019) + t6173 - 0.25*t6556 - 0.27*(t3625*t6556 + t3655*(-1.*t3654*t6553 + t1669*t3500*t93));
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=-0.037*(-1.*t2774*t6019 + t6379) - 0.25*t2732*t6647 - 0.27*(t2732*t2972*t6647 - 1.*t2989*t2999*t6647);
  p_output1[121]=-0.25*t2732*t6730 - 0.27*(t2732*t2972*t6730 - 1.*t2989*t2999*t6730) - 0.037*(-1.*t2774*t6723 + t6752);
  p_output1[122]=-0.25*t2732*t6797 - 0.27*(t2732*t2972*t6797 - 1.*t2989*t2999*t6797) - 0.037*(t3250 + t6799);
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=-0.25*t6826 - 0.27*(t2999*(-1.*t2989*t6821 - 1.*t2732*t6823) + t2972*t6826);
  p_output1[139]=-0.25*t6893 - 0.27*(t2999*(-1.*t2989*t6879 - 1.*t2732*t6884) + t2972*t6893);
  p_output1[140]=-0.25*t6967 - 0.27*(t2999*(-1.*t2989*t6951 - 1.*t2732*t6965) + t2972*t6967);
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=-0.27*(-1.*t2999*(0. + t2989*t6821 + t2732*t6823) + t2963*(0. + t6822 + t6824));
  p_output1[157]=-0.27*(-1.*t2999*(0. + t2989*t6879 + t2732*t6884) + t2963*(0. + t6881 + t6890));
  p_output1[158]=-0.27*(-1.*t2999*(0. + t2989*t6951 + t2732*t6965) + t2963*(0. + t6961 + t6966));
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0.037*(-1.*t1897*t6019 + t6210) - 0.25*t2048*t7075 - 0.27*(t2048*t2198*t7075 - 1.*t2231*t2243*t7075);
  p_output1[172]=-0.25*t2048*t7093 - 0.27*(t2048*t2198*t7093 - 1.*t2231*t2243*t7093) + 0.037*(-1.*t1897*t6723 + t7098);
  p_output1[173]=-0.25*t2048*t7133 - 0.27*(t2048*t2198*t7133 - 1.*t2231*t2243*t7133) + 0.037*(t2581 + t7136);
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=0;
  p_output1[187]=0;
  p_output1[188]=0;
  p_output1[189]=-0.25*t7191 - 0.27*(t2243*(-1.*t2231*t6821 - 1.*t2048*t7186) + t2198*t7191);
  p_output1[190]=-0.25*t7237 - 0.27*(t2243*(-1.*t2231*t6879 - 1.*t2048*t7234) + t2198*t7237);
  p_output1[191]=-0.25*t7280 - 0.27*(t2243*(-1.*t2231*t6951 - 1.*t2048*t7274) + t2198*t7280);
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=-0.27*(-1.*t2243*(0. + t2231*t6821 + t2048*t7186) + t2173*(0. + t7182 + t7187));
  p_output1[208]=-0.27*(-1.*t2243*(0. + t2231*t6879 + t2048*t7234) + t2173*(0. + t7222 + t7235));
  p_output1[209]=-0.27*(-1.*t2243*(0. + t2231*t6951 + t2048*t7274) + t2173*(0. + t7275 + t7279));
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=-0.037*(-1.*t312*t6019 + t6048) - 0.25*t7395*t765 - 0.27*(-1.*t1056*t1076*t7395 + t7395*t765*t947);
  p_output1[223]=-0.037*(-1.*t312*t6723 + t7439) - 0.25*t7424*t765 - 0.27*(-1.*t1056*t1076*t7424 + t7424*t765*t947);
  p_output1[224]=-0.037*(t1779 + t7478) - 0.25*t7474*t765 - 0.27*(-1.*t1056*t1076*t7474 + t7474*t765*t947);
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=0;
  p_output1[232]=0;
  p_output1[233]=0;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=-0.25*t7525 - 0.27*(t1076*(-1.*t1056*t6821 - 1.*t7519*t765) + t7525*t947);
  p_output1[241]=-0.25*t7560 - 0.27*(t1076*(-1.*t1056*t6879 - 1.*t7558*t765) + t7560*t947);
  p_output1[242]=-0.25*t7593 - 0.27*(t1076*(-1.*t1056*t6951 - 1.*t7589*t765) + t7593*t947);
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=0;
  p_output1[250]=0;
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=-0.27*(-1.*t1076*(0. + t1056*t6821 + t7519*t765) + (0. + t7517 + t7520)*t926);
  p_output1[259]=-0.27*(-1.*t1076*(0. + t1056*t6879 + t7558*t765) + (0. + t7554 + t7559)*t926);
  p_output1[260]=-0.27*(-1.*t1076*(0. + t1056*t6951 + t7589*t765) + (0. + t7590 + t7592)*t926);
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=0;
  p_output1[268]=0;
  p_output1[269]=0;
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0.037*(-1.*t3402*t6019 + t6548) - 0.25*t3500*t7684 - 0.27*(t3500*t3625*t7684 - 1.*t3654*t3655*t7684);
  p_output1[286]=-0.25*t3500*t7707 - 0.27*(t3500*t3625*t7707 - 1.*t3654*t3655*t7707) + 0.037*(-1.*t3402*t6723 + t7714);
  p_output1[287]=-0.25*t3500*t7752 - 0.27*(t3500*t3625*t7752 - 1.*t3654*t3655*t7752) + 0.037*(t3878 + t7756);
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=-0.25*t7789 - 0.27*(t3655*(-1.*t3654*t6821 - 1.*t3500*t7785) + t3625*t7789);
  p_output1[304]=-0.25*t7832 - 0.27*(t3655*(-1.*t3654*t6879 - 1.*t3500*t7824) + t3625*t7832);
  p_output1[305]=-0.25*t7866 - 0.27*(t3655*(-1.*t3654*t6951 - 1.*t3500*t7854) + t3625*t7866);
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=-0.27*(-1.*t3655*(0. + t3654*t6821 + t3500*t7785) + t3616*(0. + t7780 + t7788));
  p_output1[322]=-0.27*(-1.*t3655*(0. + t3654*t6879 + t3500*t7824) + t3616*(0. + t7819 + t7831));
  p_output1[323]=-0.27*(-1.*t3655*(0. + t3654*t6951 + t3500*t7854) + t3616*(0. + t7859 + t7862));
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_hc_opt2_func.hh"

namespace SymFunction
{

void j_hc_opt2_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
