/*
 * Automatically Generated from Mathematica.
 * Tue 10 Dec 2019 16:02:02 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t213;
  double t139;
  double t158;
  double t214;
  double t180;
  double t234;
  double t362;
  double t124;
  double t387;
  double t424;
  double t477;
  double t676;
  double t997;
  double t1023;
  double t1025;
  double t684;
  double t413;
  double t483;
  double t608;
  double t627;
  double t638;
  double t739;
  double t803;
  double t874;
  double t902;
  double t1569;
  double t1589;
  double t1591;
  double t1603;
  double t1630;
  double t1461;
  double t1471;
  double t1474;
  double t1486;
  double t1505;
  double t1520;
  double t1026;
  double t1039;
  double t1041;
  double t1068;
  double t1096;
  double t1115;
  double t1775;
  double t1825;
  double t1838;
  double t1840;
  double t1858;
  double t1874;
  double t2094;
  double t2100;
  double t2110;
  double t2235;
  double t1887;
  double t1965;
  double t1991;
  double t2742;
  double t2788;
  double t2794;
  double t2810;
  double t2710;
  double t2712;
  double t2716;
  double t2643;
  double t2645;
  double t2708;
  double t2881;
  double t2891;
  double t2895;
  double t2901;
  double t2446;
  double t2519;
  double t2593;
  double t1193;
  double t1204;
  double t1221;
  double t1223;
  double t1224;
  double t1263;
  double t2273;
  double t3705;
  double t3760;
  double t3770;
  double t3786;
  double t3822;
  double t3860;
  double t3871;
  double t3902;
  double t3910;
  double t1882;
  double t2344;
  double t4009;
  double t4015;
  double t4047;
  double t4062;
  double t2737;
  double t4159;
  double t4160;
  double t4169;
  double t4226;
  double t4227;
  double t4242;
  double t2876;
  double t2928;
  double t2992;
  double t3156;
  double t3177;
  double t4870;
  double t4911;
  double t2158;
  double t4956;
  double t3335;
  double t3356;
  double t3419;
  double t3427;
  double t3458;
  double t3459;
  double t5144;
  double t5157;
  double t5202;
  double t4083;
  double t4089;
  double t1291;
  double t1299;
  double t1310;
  double t1311;
  double t1380;
  double t1398;
  double t4712;
  double t4863;
  double t4864;
  double t3785;
  double t3944;
  double t4386;
  double t4387;
  double t4451;
  double t4478;
  double t6032;
  double t6046;
  double t6051;
  double t2811;
  double t3560;
  double t3576;
  double t3585;
  double t3624;
  double t3632;
  double t3640;
  double t6173;
  double t6197;
  double t6209;
  double t6898;
  double t7088;
  double t7958;
  double t7962;
  double t7968;
  double t7978;
  double t8056;
  double t8070;
  double t8072;
  double t8137;
  double t8304;
  double t8381;
  double t8396;
  double t8400;
  double t8443;
  double t8444;
  double t8450;
  double t8455;
  double t8472;
  double t8491;
  double t6925;
  double t6964;
  double t7014;
  double t7091;
  double t7223;
  double t7270;
  double t7415;
  double t7495;
  double t7506;
  double t7610;
  double t7736;
  double t7813;
  double t9097;
  double t9217;
  double t9218;
  double t9331;
  double t9369;
  double t9372;
  double t8557;
  double t8569;
  double t8575;
  double t8629;
  double t8630;
  double t8673;
  double t8703;
  double t8710;
  double t8718;
  double t8727;
  double t8834;
  double t8890;
  double t9607;
  double t9616;
  double t9624;
  double t9638;
  double t9647;
  double t9650;
  double t9636;
  double t9672;
  double t9679;
  double t5879;
  double t9883;
  double t9884;
  double t9888;
  double t9833;
  double t9850;
  double t9866;
  double t9719;
  double t9729;
  double t9733;
  double t5366;
  double t4061;
  double t9741;
  double t9750;
  double t9926;
  double t9997;
  double t4139;
  double t10265;
  double t10270;
  double t10272;
  double t10274;
  double t10276;
  double t10278;
  double t6651;
  double t10507;
  double t10508;
  double t10515;
  double t6269;
  double t10682;
  double t10697;
  double t10705;
  double t10781;
  double t10827;
  double t10853;
  double t10273;
  double t10279;
  double t10302;
  double t6365;
  double t6426;
  double t11312;
  double t11409;
  double t4170;
  double t4389;
  double t10391;
  double t10428;
  double t4560;
  double t4583;
  double t9695;
  double t16342;
  double t16348;
  double t16355;
  double t16376;
  double t16377;
  double t16413;
  double t16365;
  double t16372;
  double t16373;
  double t16364;
  double t16416;
  double t16418;
  double t9882;
  double t9990;
  double t16572;
  double t16582;
  double t16584;
  double t16605;
  double t16639;
  double t16640;
  double t16497;
  double t16500;
  double t16507;
  double t10037;
  double t10043;
  double t10173;
  double t10186;
  double t10199;
  double t16519;
  double t16539;
  double t16745;
  double t16747;
  double t10229;
  double t10230;
  double t17078;
  double t17085;
  double t17086;
  double t17100;
  double t17103;
  double t17106;
  double t10535;
  double t17205;
  double t17221;
  double t17222;
  double t10764;
  double t11385;
  double t17292;
  double t17302;
  double t17304;
  double t17311;
  double t17316;
  double t17371;
  double t17097;
  double t17109;
  double t17146;
  double t12511;
  double t13628;
  double t13795;
  double t17444;
  double t17454;
  double t14862;
  double t16089;
  double t17154;
  double t17164;
  double t16289;
  double t16305;
  double t9508;
  double t9509;
  double t9517;
  double t8974;
  double t8979;
  double t9014;
  double t1452;
  double t1542;
  double t1640;
  double t1662;
  double t1684;
  double t1704;
  double t1709;
  double t1712;
  double t2036;
  double t2065;
  double t2076;
  double t2242;
  double t2262;
  double t2346;
  double t2348;
  double t2349;
  double t2356;
  double t2404;
  double t2411;
  double t2815;
  double t2857;
  double t2862;
  double t2907;
  double t2953;
  double t2957;
  double t2971;
  double t3037;
  double t3060;
  double t3120;
  double t3236;
  double t3243;
  double t3255;
  double t3264;
  double t17846;
  double t17847;
  double t17853;
  double t9027;
  double t9045;
  double t9084;
  double t3496;
  double t3530;
  double t3540;
  double t9391;
  double t9397;
  double t9466;
  double t3654;
  double t3664;
  double t3677;
  double t3964;
  double t4007;
  double t4021;
  double t4022;
  double t4067;
  double t4120;
  double t4123;
  double t4137;
  double t4141;
  double t4142;
  double t4148;
  double t4153;
  double t4243;
  double t4303;
  double t4330;
  double t4410;
  double t4419;
  double t4420;
  double t4505;
  double t4538;
  double t4580;
  double t4601;
  double t4666;
  double t4675;
  double t4683;
  double t4867;
  double t5006;
  double t5016;
  double t5038;
  double t5337;
  double t5494;
  double t5553;
  double t5627;
  double t5698;
  double t5762;
  double t5787;
  double t5809;
  double t5856;
  double t5868;
  double t5938;
  double t5961;
  double t5974;
  double t5980;
  double t5995;
  double t6110;
  double t6113;
  double t6116;
  double t6129;
  double t6218;
  double t6231;
  double t6271;
  double t6283;
  double t6297;
  double t6341;
  double t6363;
  double t6415;
  double t6421;
  double t6429;
  double t6487;
  double t6513;
  double t6540;
  double t6561;
  double t6600;
  double t6652;
  double t6707;
  double t6719;
  double t6752;
  double t9021;
  double t9095;
  double t9219;
  double t9243;
  double t9378;
  double t9386;
  double t9505;
  double t9551;
  double t9577;
  double t7053;
  double t7285;
  double t7354;
  double t7535;
  double t7929;
  double t7954;
  double t8589;
  double t8674;
  double t8676;
  double t8725;
  double t8893;
  double t8917;
  double t9690;
  double t9692;
  double t9696;
  double t9703;
  double t9710;
  double t9738;
  double t9755;
  double t9764;
  double t9767;
  double t9787;
  double t9799;
  double t9890;
  double t9924;
  double t9925;
  double t9960;
  double t10021;
  double t10026;
  double t10027;
  double t10033;
  double t10034;
  double t10039;
  double t10040;
  double t10041;
  double t10042;
  double t10175;
  double t10176;
  double t10177;
  double t10181;
  double t10185;
  double t10187;
  double t10192;
  double t10193;
  double t10200;
  double t10209;
  double t10212;
  double t10219;
  double t10225;
  double t10246;
  double t10255;
  double t10256;
  double t10257;
  double t10322;
  double t10449;
  double t10461;
  double t10471;
  double t10650;
  double t10873;
  double t10927;
  double t10991;
  double t11173;
  double t11507;
  double t11612;
  double t11825;
  double t11837;
  double t10525;
  double t10552;
  double t10617;
  double t10626;
  double t10627;
  double t12279;
  double t12560;
  double t12637;
  double t12646;
  double t12762;
  double t13794;
  double t14092;
  double t14162;
  double t14184;
  double t14307;
  double t14342;
  double t14605;
  double t15569;
  double t15665;
  double t15904;
  double t16177;
  double t16219;
  double t16242;
  double t16294;
  double t16308;
  double t16311;
  double t16321;
  double t16325;
  double t16441;
  double t16443;
  double t16444;
  double t16447;
  double t16478;
  double t16484;
  double t16508;
  double t16540;
  double t16549;
  double t16554;
  double t16565;
  double t16596;
  double t16644;
  double t16645;
  double t16719;
  double t16734;
  double t16736;
  double t16758;
  double t16783;
  double t16899;
  double t16906;
  double t16908;
  double t16923;
  double t16926;
  double t16928;
  double t16934;
  double t16937;
  double t16940;
  double t16944;
  double t16947;
  double t16949;
  double t16950;
  double t16952;
  double t16954;
  double t16955;
  double t16956;
  double t16961;
  double t16970;
  double t16971;
  double t16980;
  double t16981;
  double t16984;
  double t16985;
  double t17021;
  double t17024;
  double t17028;
  double t17051;
  double t17053;
  double t17054;
  double t17147;
  double t17167;
  double t17170;
  double t17172;
  double t17230;
  double t17231;
  double t17261;
  double t17266;
  double t17276;
  double t17280;
  double t17287;
  double t17310;
  double t17408;
  double t17429;
  double t17435;
  double t17458;
  double t17461;
  double t17465;
  double t17466;
  double t17467;
  double t17491;
  double t17496;
  double t17500;
  double t17508;
  double t17511;
  double t17513;
  double t17514;
  double t17543;
  double t17546;
  double t17548;
  double t17559;
  double t17569;
  double t17573;
  double t17574;
  double t17575;
  double t17577;
  double t17599;
  double t17604;
  double t17610;
  double t17614;
  double t17630;
  double t17635;
  double t17637;
  double t17638;
  double t17642;
  double t17670;
  double t17671;
  double t17682;
  double t17693;
  double t18497;
  double t18508;
  double t18530;
  double t7361;
  double t7957;
  double t8376;
  double t8379;
  double t8511;
  double t8521;
  double t8683;
  double t8949;
  double t8969;
  double t18072;
  double t18088;
  double t18090;
  double t18094;
  double t18096;
  double t18100;
  double t18104;
  double t18108;
  double t18111;
  double t19736;
  double t19878;
  double t19881;
  double t20066;
  double t20261;
  double t20054;
  double t20105;
  double t20144;
  double t20171;
  double t20182;
  double t20191;
  double t20193;
  double t20194;
  double t20196;
  double t20197;
  double t20205;
  double t20217;
  double t20234;
  double t20240;
  double t20241;
  double t20257;
  double t20274;
  double t20278;
  double t20298;
  double t20299;
  double t20300;
  double t20302;
  double t20303;
  double t20320;
  double t20323;
  double t20329;
  double t20372;
  double t20377;
  double t20379;
  double t16485;
  double t16557;
  double t16903;
  double t16951;
  double t17057;
  double t17199;
  double t17282;
  double t17480;
  double t17571;
  double t17697;
  double t17700;
  double t19271;
  double t19277;
  double t19341;
  double t19365;
  double t19392;
  double t19526;
  double t19538;
  double t19539;
  double t19555;
  double t19581;
  double t19612;
  double t18232;
  double t18234;
  double t18254;
  double t18259;
  double t18272;
  double t18278;
  double t18281;
  double t18285;
  double t18291;
  double t18300;
  double t18331;
  double t20010;
  double t20682;
  double t20693;
  double t20694;
  double t20712;
  double t20727;
  double t20579;
  double t20580;
  double t20590;
  double t20348;
  double t20352;
  double t20353;
  double t20603;
  double t20606;
  double t20607;
  double t20390;
  double t20394;
  double t20396;
  double t20707;
  double t20708;
  double t20710;
  double t20713;
  double t20714;
  double t20716;
  double t20717;
  double t20718;
  double t20719;
  double t20721;
  double t20722;
  double t20723;
  double t20725;
  double t20728;
  double t20731;
  double t20732;
  double t20736;
  double t20746;
  double t20747;
  double t20755;
  double t20761;
  double t20762;
  double t20769;
  double t20478;
  double t20485;
  double t20486;
  double t20517;
  double t20523;
  double t20526;
  double t9712;
  double t9777;
  double t10030;
  double t10183;
  double t10262;
  double t10481;
  double t10643;
  double t11867;
  double t14308;
  double t16335;
  double t16338;
  double t19059;
  double t19063;
  double t19068;
  double t19073;
  double t19076;
  double t19103;
  double t19139;
  double t19148;
  double t19215;
  double t19240;
  double t19250;
  double t18179;
  double t18180;
  double t18181;
  double t18182;
  double t18183;
  double t18198;
  double t18205;
  double t18206;
  double t18210;
  double t18219;
  double t18226;
  double t20703;
  double t20567;
  double t20568;
  double t20569;
  double t20570;
  double t20575;
  double t20591;
  double t20593;
  double t20594;
  double t20595;
  double t20598;
  double t20601;
  double t20609;
  double t20913;
  double t20967;
  double t20931;
  double t20932;
  double t20987;
  double t20954;
  double t20955;
  double t20956;
  double t20957;
  double t20959;
  double t20960;
  double t20961;
  double t20965;
  double t20968;
  double t20970;
  double t20972;
  double t20973;
  double t20982;
  double t20983;
  double t20984;
  double t20986;
  double t20989;
  double t20990;
  double t20994;
  double t20996;
  double t20997;
  double t21000;
  double t21001;
  double t4154;
  double t4690;
  double t5122;
  double t5733;
  double t5864;
  double t6027;
  double t6131;
  double t6346;
  double t6554;
  double t6763;
  double t6764;
  double t18747;
  double t18795;
  double t18821;
  double t18860;
  double t18899;
  double t18901;
  double t18925;
  double t18941;
  double t18946;
  double t18948;
  double t18965;
  double t17969;
  double t17976;
  double t17993;
  double t17994;
  double t17997;
  double t18003;
  double t18046;
  double t18049;
  double t18050;
  double t18057;
  double t18064;
  double t20975;
  double t20777;
  double t20779;
  double t20780;
  double t20781;
  double t20782;
  double t20785;
  double t20787;
  double t20789;
  double t20790;
  double t20792;
  double t20794;
  double t20797;
  double t20305;
  double t20307;
  double t20331;
  double t20339;
  double t20346;
  double t20355;
  double t20361;
  double t20380;
  double t20383;
  double t20384;
  double t20386;
  double t20399;
  double t21069;
  double t21095;
  double t21013;
  double t21014;
  double t21016;
  double t21017;
  double t21018;
  double t21020;
  double t21104;
  double t21026;
  double t21028;
  double t21029;
  double t21030;
  double t21031;
  double t21032;
  double t21096;
  double t21097;
  double t21099;
  double t21100;
  double t21080;
  double t21082;
  double t21083;
  double t21091;
  double t21092;
  double t21093;
  double t21103;
  double t21106;
  double t21108;
  double t21111;
  double t21115;
  double t21116;
  double t21119;
  double t21121;
  double t21122;
  double t21124;
  double t2638;
  double t3299;
  double t3319;
  double t3467;
  double t3484;
  double t3543;
  double t3653;
  double t3684;
  double t3685;
  double t18534;
  double t18535;
  double t18540;
  double t18580;
  double t18587;
  double t18656;
  double t18672;
  double t18718;
  double t18735;
  double t17868;
  double t17917;
  double t17931;
  double t17945;
  double t17947;
  double t17948;
  double t17955;
  double t17960;
  double t17966;
  double t21086;
  double t21087;
  double t21088;
  double t20815;
  double t20816;
  double t20817;
  double t20818;
  double t20821;
  double t20829;
  double t20830;
  double t20831;
  double t20833;
  double t20840;
  double t20845;
  double t20846;
  double t20470;
  double t20471;
  double t20472;
  double t20473;
  double t20477;
  double t20487;
  double t20488;
  double t20496;
  double t20500;
  double t20504;
  double t20508;
  double t20531;
  double t21073;
  double t21074;
  double t21075;
  double t21077;
  double t21078;
  double t20934;
  double t20938;
  double t20943;
  double t20948;
  double t20952;
  double t1280;
  double t1437;
  double t1669;
  double t1728;
  double t1761;
  double t18427;
  double t18430;
  double t18446;
  double t18457;
  double t18464;
  double t17775;
  double t17819;
  double t17826;
  double t17828;
  double t17839;
  double t20695;
  double t20696;
  double t20697;
  double t20698;
  double t20699;
  double t19882;
  double t19889;
  double t19914;
  double t19915;
  double t19918;
  double t21068;
  double t21070;
  double t21071;
  double t20917;
  double t20921;
  double t20922;
  double t961;
  double t1119;
  double t1136;
  double t18397;
  double t18401;
  double t18413;
  double t17750;
  double t17751;
  double t17757;
  double t20683;
  double t20690;
  double t20691;
  double t19756;
  double t19762;
  double t19766;
  t213 = Cos(var1[10]);
  t139 = Cos(var1[11]);
  t158 = Sin(var1[10]);
  t214 = Sin(var1[11]);
  t180 = -1.*t139*t158;
  t234 = -1.*t213*t214;
  t362 = t180 + t234;
  t124 = Cos(var1[9]);
  t387 = Sin(var1[4]);
  t424 = Cos(var1[4]);
  t477 = Cos(var1[5]);
  t676 = Sin(var1[9]);
  t997 = -1.*t213*t139;
  t1023 = t158*t214;
  t1025 = t997 + t1023;
  t684 = Sin(var1[5]);
  t413 = t124*t362*t387;
  t483 = t213*t139;
  t608 = -1.*t158*t214;
  t627 = t483 + t608;
  t638 = t477*t627;
  t739 = t676*t362*t684;
  t803 = t638 + t739;
  t874 = t424*t803;
  t902 = t413 + t874;
  t1569 = -1. + t139;
  t1589 = 0.25*t1569;
  t1591 = -0.37338*t139;
  t1603 = 0.002196*t214;
  t1630 = t1589 + t1591 + t1603;
  t1461 = -1.*t139;
  t1471 = 1. + t1461;
  t1474 = 0.21935*t1471;
  t1486 = 0.217154*t139;
  t1505 = -0.12338*t214;
  t1520 = t1474 + t1486 + t1505;
  t1026 = t124*t1025*t387;
  t1039 = t477*t362;
  t1041 = t676*t1025*t684;
  t1068 = t1039 + t1041;
  t1096 = t424*t1068;
  t1115 = t1026 + t1096;
  t1775 = -1.*t213;
  t1825 = 1. + t1775;
  t1838 = 0.21935*t1825;
  t1840 = 0.218868*t213;
  t1858 = -0.031996*t158;
  t1874 = t1838 + t1840 + t1858;
  t2094 = -0.031996*t213;
  t2100 = 0.000482*t158;
  t2110 = t2094 + t2100;
  t2235 = -1.*t1874*t158;
  t1887 = 0.000482*t213;
  t1965 = 0.031996*t158;
  t1991 = t1887 + t1965;
  t2742 = 0.21935*t158;
  t2788 = -1.*t158*t1520;
  t2794 = t213*t1630;
  t2810 = t2742 + t2788 + t2794;
  t2710 = t139*t158;
  t2712 = t213*t214;
  t2716 = t2710 + t2712;
  t2643 = t213*t1520;
  t2645 = t158*t1630;
  t2708 = t1838 + t2643 + t2645;
  t2881 = 0.21935*t213;
  t2891 = -1.*t213*t1520;
  t2895 = -1.*t158*t1630;
  t2901 = t2881 + t2891 + t2895;
  t2446 = t676*t387;
  t2519 = -1.*t124*t424*t684;
  t2593 = t2446 + t2519;
  t1193 = -1.*t124*t213*t387;
  t1204 = -1.*t477*t158;
  t1221 = -1.*t213*t676*t684;
  t1223 = t1204 + t1221;
  t1224 = t424*t1223;
  t1263 = t1193 + t1224;
  t2273 = t213*t1874;
  t3705 = 0.05701*t676;
  t3760 = t124*t2110;
  t3770 = t3705 + t3760;
  t3786 = -1.*t124;
  t3822 = 1. + t3786;
  t3860 = 0.0875*t3822;
  t3871 = 0.14451*t124;
  t3902 = -1.*t676*t2110;
  t3910 = t3860 + t3871 + t3902;
  t1882 = -1.*t213*t1874;
  t2344 = -1.*t2110*t158;
  t4009 = -1.*t124*t213*t3770;
  t4015 = t213*t676*t3910;
  t4047 = Power(t124,2);
  t4062 = Power(t676,2);
  t2737 = -1.*t2708*t2716;
  t4159 = 0.036619*t676;
  t4160 = t124*t2810;
  t4169 = t4159 + t4160;
  t4226 = 0.124119*t124;
  t4227 = -1.*t676*t2810;
  t4242 = t3860 + t4226 + t4227;
  t2876 = -1.*t2810*t2716;
  t2928 = -1.*t2708*t627;
  t2992 = t2708*t627;
  t3156 = t2708*t362;
  t3177 = t2810*t627;
  t4870 = t124*t213*t3770;
  t4911 = -1.*t213*t676*t3910;
  t2158 = -1.*t213*t2110;
  t4956 = t1874*t158;
  t3335 = t124*t213*t387;
  t3356 = t477*t158;
  t3419 = t213*t676*t684;
  t3427 = t3356 + t3419;
  t3458 = t424*t3427;
  t3459 = t3335 + t3458;
  t5144 = t676*t3770;
  t5157 = t124*t3910;
  t5202 = t5144 + t5157;
  t4083 = t124*t3770*t158;
  t4089 = -1.*t676*t3910*t158;
  t1291 = -1.*t124*t158*t387;
  t1299 = t213*t477;
  t1310 = -1.*t676*t158*t684;
  t1311 = t1299 + t1310;
  t1380 = t424*t1311;
  t1398 = t1291 + t1380;
  t4712 = -1.*t676*t3770;
  t4863 = -1.*t124*t3910;
  t4864 = t4712 + t4863;
  t3785 = -1.*t124*t3770*t158;
  t3944 = t676*t3910*t158;
  t4386 = -1.*t124*t4169*t362;
  t4387 = t676*t4242*t362;
  t4451 = t124*t4169*t362;
  t4478 = -1.*t676*t4242*t362;
  t6032 = t676*t4169;
  t6046 = t124*t4242;
  t6051 = t6032 + t6046;
  t2811 = -1.*t2810*t627;
  t3560 = t124*t627*t387;
  t3576 = t477*t2716;
  t3585 = t676*t627*t684;
  t3624 = t3576 + t3585;
  t3632 = t424*t3624;
  t3640 = t3560 + t3632;
  t6173 = -1.*t676*t4169;
  t6197 = -1.*t124*t4242;
  t6209 = t6173 + t6197;
  t6898 = Sin(var1[3]);
  t7088 = Cos(var1[3]);
  t7958 = t477*t676*t158;
  t7962 = t213*t684;
  t7968 = t7958 + t7962;
  t7978 = t6898*t7968;
  t8056 = -1.*t124*t424*t158;
  t8070 = -1.*t387*t1311;
  t8072 = t8056 + t8070;
  t8137 = t7088*t8072;
  t8304 = t7978 + t8137;
  t8381 = -1.*t477*t676*t362;
  t8396 = t627*t684;
  t8400 = t8381 + t8396;
  t8443 = t6898*t8400;
  t8444 = t124*t424*t362;
  t8450 = -1.*t387*t803;
  t8455 = t8444 + t8450;
  t8472 = t7088*t8455;
  t8491 = t8443 + t8472;
  t6925 = t213*t477*t676;
  t6964 = -1.*t158*t684;
  t7014 = t6925 + t6964;
  t7091 = -1.*t124*t213*t424;
  t7223 = -1.*t387*t1223;
  t7270 = t7091 + t7223;
  t7415 = -1.*t213*t477*t676;
  t7495 = t158*t684;
  t7506 = t7415 + t7495;
  t7610 = t124*t213*t424;
  t7736 = -1.*t387*t3427;
  t7813 = t7610 + t7736;
  t9097 = t7088*t7968;
  t9217 = -1.*t6898*t8072;
  t9218 = t9097 + t9217;
  t9331 = t7088*t8400;
  t9369 = -1.*t6898*t8455;
  t9372 = t9331 + t9369;
  t8557 = -1.*t477*t676*t627;
  t8569 = t2716*t684;
  t8575 = t8557 + t8569;
  t8629 = t124*t424*t627;
  t8630 = -1.*t387*t3624;
  t8673 = t8629 + t8630;
  t8703 = -1.*t477*t676*t1025;
  t8710 = t362*t684;
  t8718 = t8703 + t8710;
  t8727 = t124*t424*t1025;
  t8834 = -1.*t387*t1068;
  t8890 = t8727 + t8834;
  t9607 = t477*t1874;
  t9616 = -1.*t3910*t684;
  t9624 = t9607 + t9616;
  t9638 = t477*t3910;
  t9647 = t1874*t684;
  t9650 = t9638 + t9647;
  t9636 = t124*t684*t9624;
  t9672 = -1.*t124*t477*t9650;
  t9679 = t4712 + t9636 + t9672;
  t5879 = t4047*t213*t1991;
  t9883 = t477*t2110;
  t9884 = t676*t1991*t684;
  t9888 = t9883 + t9884;
  t9833 = -1.*t477*t676*t1991;
  t9850 = t2110*t684;
  t9866 = t9833 + t9850;
  t9719 = -1.*t124*t684*t9624;
  t9729 = t124*t477*t9650;
  t9733 = t5144 + t9719 + t9729;
  t5366 = t4047*t1991*t158;
  t4061 = -1.*t4047*t213*t1991;
  t9741 = -1.*t7968*t9650;
  t9750 = -1.*t9624*t1311;
  t9926 = t7968*t9650;
  t9997 = t9624*t1311;
  t4139 = -1.*t4047*t1991*t158;
  t10265 = t477*t2708;
  t10270 = -1.*t4242*t684;
  t10272 = t10265 + t10270;
  t10274 = t477*t4242;
  t10276 = t2708*t684;
  t10278 = t10274 + t10276;
  t6651 = t124*t4169*t627;
  t10507 = t124*t684*t10272;
  t10508 = -1.*t124*t477*t10278;
  t10515 = t6173 + t10507 + t10508;
  t6269 = t4047*t2901*t627;
  t10682 = -1.*t477*t676*t2901;
  t10697 = t2810*t684;
  t10705 = t10682 + t10697;
  t10781 = t477*t2810;
  t10827 = t676*t2901*t684;
  t10853 = t10781 + t10827;
  t10273 = -1.*t124*t684*t10272;
  t10279 = t124*t477*t10278;
  t10302 = t6032 + t10273 + t10279;
  t6365 = -1.*t4047*t2901*t362;
  t6426 = -1.*t124*t4169*t1025;
  t11312 = t10272*t803;
  t11409 = t10278*t8400;
  t4170 = -1.*t124*t4169*t627;
  t4389 = -1.*t4047*t2901*t627;
  t10391 = -1.*t10272*t803;
  t10428 = -1.*t10278*t8400;
  t4560 = t4047*t2901*t362;
  t4583 = t124*t4169*t1025;
  t9695 = t9650*t7506;
  t16342 = t3770*t387;
  t16348 = t424*t9624;
  t16355 = t16342 + t16348;
  t16376 = t424*t3770;
  t16377 = -1.*t387*t9624;
  t16413 = t16376 + t16377;
  t16365 = t424*t676;
  t16372 = t124*t387*t684;
  t16373 = t16365 + t16372;
  t16364 = -1.*t2593*t16355;
  t16416 = -1.*t16373*t16413;
  t16418 = t9672 + t16364 + t16416;
  t9882 = -1.*t124*t477*t9866;
  t9990 = t9866*t7506;
  t16572 = t124*t1991*t387;
  t16582 = t424*t9888;
  t16584 = t16572 + t16582;
  t16605 = t124*t424*t1991;
  t16639 = -1.*t387*t9888;
  t16640 = t16605 + t16639;
  t16497 = t2593*t16355;
  t16500 = t16373*t16413;
  t16507 = t9729 + t16497 + t16500;
  t10037 = t124*t477*t9866;
  t10043 = -1.*t7968*t9866;
  t10173 = -1.*t9650*t7014;
  t10186 = -1.*t9650*t7506;
  t10199 = -1.*t9866*t7506;
  t16519 = -1.*t16355*t1398;
  t16539 = -1.*t16413*t8072;
  t16745 = t16355*t1398;
  t16747 = t16413*t8072;
  t10229 = t7968*t9866;
  t10230 = t9650*t7014;
  t17078 = t4169*t387;
  t17085 = t424*t10272;
  t17086 = t17078 + t17085;
  t17100 = t424*t4169;
  t17103 = -1.*t387*t10272;
  t17106 = t17100 + t17103;
  t10535 = t10278*t8575;
  t17205 = -1.*t2593*t17086;
  t17221 = -1.*t16373*t17106;
  t17222 = t10508 + t17205 + t17221;
  t10764 = -1.*t124*t477*t10705;
  t11385 = t10705*t8575;
  t17292 = t124*t2901*t387;
  t17302 = t424*t10853;
  t17304 = t17292 + t17302;
  t17311 = t124*t424*t2901;
  t17316 = -1.*t387*t10853;
  t17371 = t17311 + t17316;
  t17097 = t2593*t17086;
  t17109 = t16373*t17106;
  t17146 = t10279 + t17097 + t17109;
  t12511 = t124*t477*t10705;
  t13628 = -1.*t10278*t8718;
  t13795 = -1.*t10705*t8400;
  t17444 = t17086*t902;
  t17454 = t17106*t8455;
  t14862 = -1.*t10278*t8575;
  t16089 = -1.*t10705*t8575;
  t17154 = -1.*t17086*t902;
  t17164 = -1.*t17106*t8455;
  t16289 = t10278*t8718;
  t16305 = t10705*t8400;
  t9508 = t7088*t8718;
  t9509 = -1.*t6898*t8890;
  t9517 = t9508 + t9509;
  t8974 = t7088*t7014;
  t8979 = -1.*t6898*t7270;
  t9014 = t8974 + t8979;
  t1452 = 0.21935*t139;
  t1542 = -1.*t139*t1520;
  t1640 = t1630*t214;
  t1662 = t1452 + t1542 + t1640;
  t1684 = t139*t1630;
  t1704 = -0.21935*t214;
  t1709 = t1520*t214;
  t1712 = t1684 + t1704 + t1709;
  t2036 = -1.*t213*t1991;
  t2065 = t1882 + t2036;
  t2076 = t213*t2065;
  t2242 = t2158 + t2235;
  t2262 = -1.*t158*t2242;
  t2346 = t2273 + t2344;
  t2348 = t213*t2346;
  t2349 = -1.*t1991*t158;
  t2356 = t2235 + t2349;
  t2404 = t158*t2356;
  t2411 = t2076 + t2262 + t2348 + t2404;
  t2815 = t2737 + t2811;
  t2857 = t362*t2815;
  t2862 = -1.*t2810*t362;
  t2907 = -1.*t2901*t627;
  t2953 = t2862 + t2876 + t2907 + t2928;
  t2957 = t627*t2953;
  t2971 = t2810*t362;
  t3037 = t2971 + t2992;
  t3060 = t627*t3037;
  t3120 = t2901*t362;
  t3236 = t2810*t1025;
  t3243 = t3120 + t3156 + t3177 + t3236;
  t3255 = t2716*t3243;
  t3264 = t2857 + t2957 + t3060 + t3255;
  t17846 = t124*t7088*t477;
  t17847 = -1.*t6898*t16373;
  t17853 = t17846 + t17847;
  t9027 = t7088*t7506;
  t9045 = -1.*t6898*t7813;
  t9084 = t9027 + t9045;
  t3496 = -0.124119*t627;
  t3530 = -0.0875*t1025;
  t3540 = t3496 + t3530;
  t9391 = t7088*t8575;
  t9397 = -1.*t6898*t8673;
  t9466 = t9391 + t9397;
  t3654 = -0.0875*t362;
  t3664 = -0.124119*t2716;
  t3677 = t3654 + t3664;
  t3964 = t2273 + t3785 + t3944;
  t4007 = -1.*t124*t158*t3964;
  t4021 = t4009 + t4015 + t2235;
  t4022 = -1.*t124*t213*t4021;
  t4067 = -1.*t213*t4062*t1991;
  t4120 = t1882 + t4061 + t4067 + t4083 + t4089 + t2344;
  t4123 = -1.*t124*t158*t4120;
  t4137 = t213*t2110;
  t4141 = -1.*t4062*t1991*t158;
  t4142 = t4009 + t4015 + t4137 + t2235 + t4139 + t4141;
  t4148 = t124*t213*t4142;
  t4153 = t4007 + t4022 + t4123 + t4148;
  t4243 = t676*t4242*t627;
  t4303 = t2737 + t4170 + t4243;
  t4330 = t124*t1025*t4303;
  t4410 = -1.*t4062*t2901*t627;
  t4419 = t4386 + t4387 + t2876 + t4389 + t4410 + t2928;
  t4420 = t124*t362*t4419;
  t4505 = t4451 + t4478 + t2992;
  t4538 = t124*t362*t4505;
  t4580 = t4062*t2901*t362;
  t4601 = -1.*t676*t4242*t1025;
  t4666 = t4560 + t4580 + t3156 + t3177 + t4583 + t4601;
  t4675 = t124*t627*t4666;
  t4683 = t4330 + t4420 + t4538 + t4675;
  t4867 = t124*t213*t4864;
  t5006 = t4870 + t4911 + t4956;
  t5016 = t676*t5006;
  t5038 = t4867 + t5016;
  t5337 = -1.*t124*t213*t5202;
  t5494 = t4062*t1991*t158;
  t5553 = t4870 + t4911 + t2158 + t4956 + t5366 + t5494;
  t5627 = t676*t5553;
  t5698 = t5337 + t5627;
  t5762 = -1.*t124*t5202*t158;
  t5787 = t1882 + t4083 + t4089;
  t5809 = t676*t5787;
  t5856 = t5762 + t5809;
  t5868 = -1.*t124*t4864*t158;
  t5938 = t213*t4062*t1991;
  t5961 = t2110*t158;
  t5974 = t2273 + t5879 + t5938 + t3785 + t3944 + t5961;
  t5980 = t676*t5974;
  t5995 = t5868 + t5980;
  t6110 = t124*t6051*t362;
  t6113 = t4386 + t4387 + t2928;
  t6116 = t676*t6113;
  t6129 = t6110 + t6116;
  t6218 = t124*t6209*t362;
  t6231 = t2810*t2716;
  t6271 = t4062*t2901*t627;
  t6283 = t4451 + t4478 + t6231 + t6269 + t6271 + t2992;
  t6297 = t676*t6283;
  t6341 = t6218 + t6297;
  t6363 = t124*t6051*t1025;
  t6415 = -1.*t4062*t2901*t362;
  t6421 = -1.*t2708*t362;
  t6429 = t676*t4242*t1025;
  t6487 = t6365 + t6415 + t6421 + t2811 + t6426 + t6429;
  t6513 = t676*t6487;
  t6540 = t6363 + t6513;
  t6561 = t124*t6209*t627;
  t6600 = t2708*t2716;
  t6652 = -1.*t676*t4242*t627;
  t6707 = t6600 + t6651 + t6652;
  t6719 = t676*t6707;
  t6752 = t6561 + t6719;
  t9021 = 1.528*t1398*t9014;
  t9095 = 1.528*t1398*t9084;
  t9219 = 1.528*t1263*t9218;
  t9243 = 1.528*t3459*t9218;
  t9378 = 0.241*t3640*t9372;
  t9386 = 0.241*t1115*t9372;
  t9505 = 0.241*t902*t9466;
  t9551 = 0.241*t902*t9517;
  t9577 = t9021 + t9095 + t9219 + t9243 + t9378 + t9386 + t9505 + t9551;
  t7053 = t6898*t7014;
  t7285 = t7088*t7270;
  t7354 = t7053 + t7285;
  t7535 = t6898*t7506;
  t7929 = t7088*t7813;
  t7954 = t7535 + t7929;
  t8589 = t6898*t8575;
  t8674 = t7088*t8673;
  t8676 = t8589 + t8674;
  t8725 = t6898*t8718;
  t8893 = t7088*t8890;
  t8917 = t8725 + t8893;
  t9690 = t7506*t9679;
  t9692 = t3427*t9624;
  t9696 = t4870 + t9692 + t9695;
  t9703 = t124*t477*t9696;
  t9710 = t9690 + t9703;
  t9738 = t7968*t9733;
  t9755 = t4083 + t9741 + t9750;
  t9764 = t124*t477*t9755;
  t9767 = t9738 + t9764;
  t9787 = t7968*t9679;
  t9799 = -1.*t124*t676*t1991;
  t9890 = t124*t684*t9888;
  t9924 = t9799 + t9882 + t9890;
  t9925 = t7506*t9924;
  t9960 = t3427*t9888;
  t10021 = t5879 + t3785 + t9926 + t9960 + t9990 + t9997;
  t10026 = t124*t477*t10021;
  t10027 = t9787 + t9925 + t10026;
  t10033 = t7014*t9733;
  t10034 = t124*t676*t1991;
  t10039 = -1.*t124*t684*t9888;
  t10040 = t10034 + t10037 + t10039;
  t10041 = t7968*t10040;
  t10042 = -1.*t1223*t9624;
  t10175 = -1.*t9888*t1311;
  t10176 = t4870 + t5366 + t10042 + t10043 + t10173 + t10175;
  t10177 = t124*t477*t10176;
  t10181 = t10033 + t10041 + t10177;
  t10185 = -1.*t3427*t9624;
  t10187 = t4009 + t10185 + t10186;
  t10192 = t7014*t10187;
  t10193 = -1.*t3427*t9888;
  t10200 = t4061 + t4083 + t9741 + t10193 + t10199 + t9750;
  t10209 = t7968*t10200;
  t10212 = t3785 + t9926 + t9997;
  t10219 = t7968*t10212;
  t10225 = t1223*t9624;
  t10246 = t9888*t1311;
  t10255 = t4009 + t4139 + t10225 + t10229 + t10230 + t10246;
  t10256 = t7506*t10255;
  t10257 = t10192 + t10209 + t10219 + t10256;
  t10322 = t8400*t10302;
  t10449 = t4386 + t10391 + t10428;
  t10461 = t124*t477*t10449;
  t10471 = t10322 + t10461;
  t10650 = -1.*t124*t676*t2901;
  t10873 = t124*t684*t10853;
  t10927 = t10650 + t10764 + t10873;
  t10991 = t8575*t10927;
  t11173 = t8400*t10515;
  t11507 = t10853*t3624;
  t11612 = t4451 + t6269 + t11312 + t11385 + t11409 + t11507;
  t11825 = t124*t477*t11612;
  t11837 = t10991 + t11173 + t11825;
  t10525 = t8575*t10515;
  t10552 = t10272*t3624;
  t10617 = t6651 + t10535 + t10552;
  t10626 = t124*t477*t10617;
  t10627 = t10525 + t10626;
  t12279 = t124*t676*t2901;
  t12560 = -1.*t124*t684*t10853;
  t12637 = t12279 + t12511 + t12560;
  t12646 = t8400*t12637;
  t12762 = t8718*t10302;
  t13794 = -1.*t10853*t803;
  t14092 = -1.*t10272*t1068;
  t14162 = t6365 + t6426 + t13628 + t13794 + t13795 + t14092;
  t14184 = t124*t477*t14162;
  t14307 = t12646 + t12762 + t14184;
  t14342 = t4451 + t11312 + t11409;
  t14605 = t8400*t14342;
  t15569 = -1.*t10272*t3624;
  t15665 = t4170 + t14862 + t15569;
  t15904 = t8718*t15665;
  t16177 = -1.*t10853*t3624;
  t16219 = t4386 + t4389 + t10391 + t16089 + t10428 + t16177;
  t16242 = t8400*t16219;
  t16294 = t10853*t803;
  t16308 = t10272*t1068;
  t16311 = t4560 + t4583 + t16289 + t16294 + t16305 + t16308;
  t16321 = t8575*t16311;
  t16325 = t14605 + t15904 + t16242 + t16321;
  t16441 = t3459*t16418;
  t16443 = t3459*t16355;
  t16444 = t7813*t16413;
  t16447 = t9695 + t16443 + t16444;
  t16478 = t2593*t16447;
  t16484 = t16441 + t16478;
  t16508 = t1398*t16507;
  t16540 = t9741 + t16519 + t16539;
  t16549 = t2593*t16540;
  t16554 = t16508 + t16549;
  t16565 = t1398*t16418;
  t16596 = -1.*t2593*t16584;
  t16644 = -1.*t16373*t16640;
  t16645 = t9882 + t16596 + t16644;
  t16719 = t3459*t16645;
  t16734 = t3459*t16584;
  t16736 = t7813*t16640;
  t16758 = t9926 + t9990 + t16734 + t16736 + t16745 + t16747;
  t16783 = t2593*t16758;
  t16899 = t16565 + t16719 + t16783;
  t16906 = t1263*t16507;
  t16908 = t2593*t16584;
  t16923 = t16373*t16640;
  t16926 = t10037 + t16908 + t16923;
  t16928 = t1398*t16926;
  t16934 = -1.*t1263*t16355;
  t16937 = -1.*t7270*t16413;
  t16940 = -1.*t16584*t1398;
  t16944 = -1.*t16640*t8072;
  t16947 = t10043 + t10173 + t16934 + t16937 + t16940 + t16944;
  t16949 = t2593*t16947;
  t16950 = t16906 + t16928 + t16949;
  t16952 = -1.*t3459*t16355;
  t16954 = -1.*t7813*t16413;
  t16955 = t10186 + t16952 + t16954;
  t16956 = t1263*t16955;
  t16961 = -1.*t3459*t16584;
  t16970 = -1.*t7813*t16640;
  t16971 = t9741 + t10199 + t16961 + t16970 + t16519 + t16539;
  t16980 = t1398*t16971;
  t16981 = t9926 + t16745 + t16747;
  t16984 = t1398*t16981;
  t16985 = t1263*t16355;
  t17021 = t7270*t16413;
  t17024 = t16584*t1398;
  t17028 = t16640*t8072;
  t17051 = t10229 + t10230 + t16985 + t17021 + t17024 + t17028;
  t17053 = t3459*t17051;
  t17054 = t16956 + t16980 + t16984 + t17053;
  t17147 = t902*t17146;
  t17167 = t10428 + t17154 + t17164;
  t17170 = t2593*t17167;
  t17172 = t17147 + t17170;
  t17230 = t3640*t17222;
  t17231 = t17086*t3640;
  t17261 = t17106*t8673;
  t17266 = t10535 + t17231 + t17261;
  t17276 = t2593*t17266;
  t17280 = t17230 + t17276;
  t17287 = t902*t17222;
  t17310 = -1.*t2593*t17304;
  t17408 = -1.*t16373*t17371;
  t17429 = t10764 + t17310 + t17408;
  t17435 = t3640*t17429;
  t17458 = t17304*t3640;
  t17461 = t17371*t8673;
  t17465 = t11385 + t11409 + t17444 + t17454 + t17458 + t17461;
  t17466 = t2593*t17465;
  t17467 = t17287 + t17435 + t17466;
  t17491 = t1115*t17146;
  t17496 = t2593*t17304;
  t17500 = t16373*t17371;
  t17508 = t12511 + t17496 + t17500;
  t17511 = t902*t17508;
  t17513 = -1.*t17304*t902;
  t17514 = -1.*t17371*t8455;
  t17543 = -1.*t17086*t1115;
  t17546 = -1.*t17106*t8890;
  t17548 = t13628 + t13795 + t17513 + t17514 + t17543 + t17546;
  t17559 = t2593*t17548;
  t17569 = t17491 + t17511 + t17559;
  t17573 = t11409 + t17444 + t17454;
  t17574 = t902*t17573;
  t17575 = -1.*t17086*t3640;
  t17577 = -1.*t17106*t8673;
  t17599 = t14862 + t17575 + t17577;
  t17604 = t1115*t17599;
  t17610 = -1.*t17304*t3640;
  t17614 = -1.*t17371*t8673;
  t17630 = t16089 + t10428 + t17154 + t17164 + t17610 + t17614;
  t17635 = t902*t17630;
  t17637 = t17304*t902;
  t17638 = t17371*t8455;
  t17642 = t17086*t1115;
  t17670 = t17106*t8890;
  t17671 = t16289 + t16305 + t17637 + t17638 + t17642 + t17670;
  t17682 = t3640*t17671;
  t17693 = t17574 + t17604 + t17635 + t17682;
  t18497 = t124*t477*t6898;
  t18508 = t7088*t16373;
  t18530 = t18497 + t18508;
  t7361 = 1.528*t1398*t7354;
  t7957 = 1.528*t1398*t7954;
  t8376 = 1.528*t1263*t8304;
  t8379 = 1.528*t3459*t8304;
  t8511 = 0.241*t3640*t8491;
  t8521 = 0.241*t1115*t8491;
  t8683 = 0.241*t902*t8676;
  t8949 = 0.241*t902*t8917;
  t8969 = t7361 + t7957 + t8376 + t8379 + t8511 + t8521 + t8683 + t8949;
  t18072 = 1.528*t9014*t8304;
  t18088 = 1.528*t9084*t8304;
  t18090 = 1.528*t7354*t9218;
  t18094 = 1.528*t7954*t9218;
  t18096 = 0.241*t9372*t8676;
  t18100 = 0.241*t8491*t9466;
  t18104 = 0.241*t9372*t8917;
  t18108 = 0.241*t8491*t9517;
  t18111 = t18072 + t18088 + t18090 + t18094 + t18096 + t18100 + t18104 + t18108;
  t19736 = 5.e-6*t902;
  t19878 = 1.e-5*t1263;
  t19881 = -0.000085*t1398;
  t20066 = 0.00025*t1398;
  t20261 = -3.e-6*t902;
  t20054 = 0.009916*t1263;
  t20105 = t20054 + t20066;
  t20144 = -0.000085*t2593;
  t20171 = 0.001783*t3459;
  t20182 = t20144 + t20171 + t20066;
  t20191 = 0.00025*t1263;
  t20193 = 0.001783*t1398;
  t20194 = t20191 + t20193;
  t20196 = 1.e-5*t2593;
  t20197 = 0.00025*t3459;
  t20205 = 0.009916*t1398;
  t20217 = t20196 + t20197 + t20205;
  t20234 = 0.006182*t902;
  t20240 = -3.e-6*t3640;
  t20241 = t20234 + t20240;
  t20257 = 5.e-6*t2593;
  t20274 = 0.000035*t3640;
  t20278 = t20257 + t20261 + t20274;
  t20298 = 0.000035*t902;
  t20299 = -3.e-6*t1115;
  t20300 = t20298 + t20299;
  t20302 = 0.006182*t1115;
  t20303 = t20261 + t20302;
  t20320 = t1398*t16955;
  t20323 = t3459*t16981;
  t20329 = t20320 + t20323;
  t20372 = t3640*t17573;
  t20377 = t902*t17599;
  t20379 = t20372 + t20377;
  t16485 = 1.528*t1263*t16484;
  t16557 = 1.528*t1398*t16554;
  t16903 = 1.528*t1398*t16899;
  t16951 = 1.528*t3459*t16950;
  t17057 = 1.528*t2593*t17054;
  t17199 = 0.241*t902*t17172;
  t17282 = 0.241*t1115*t17280;
  t17480 = 0.241*t902*t17467;
  t17571 = 0.241*t3640*t17569;
  t17697 = 0.241*t2593*t17693;
  t17700 = t16485 + t16557 + t16903 + t16951 + t17057 + t17199 + t17282 + t17480 + t17571 + t17697;
  t19271 = 1.528*t7354*t16484;
  t19277 = 1.528*t8304*t16554;
  t19341 = 1.528*t8304*t16899;
  t19365 = 1.528*t7954*t16950;
  t19392 = 1.528*t18530*t17054;
  t19526 = 0.241*t8491*t17172;
  t19538 = 0.241*t8917*t17280;
  t19539 = 0.241*t8491*t17467;
  t19555 = 0.241*t8676*t17569;
  t19581 = 0.241*t18530*t17693;
  t19612 = t19271 + t19277 + t19341 + t19365 + t19392 + t19526 + t19538 + t19539 + t19555 + t19581;
  t18232 = 1.528*t9014*t16484;
  t18234 = 1.528*t9218*t16554;
  t18254 = 1.528*t9218*t16899;
  t18259 = 1.528*t9084*t16950;
  t18272 = 1.528*t17853*t17054;
  t18278 = 0.241*t9372*t17172;
  t18281 = 0.241*t9517*t17280;
  t18285 = 0.241*t9372*t17467;
  t18291 = 0.241*t9466*t17569;
  t18300 = 0.241*t17853*t17693;
  t18331 = t18232 + t18234 + t18254 + t18259 + t18272 + t18278 + t18281 + t18285 + t18291 + t18300;
  t20010 = t19878 + t19881;
  t20682 = 5.e-6*t8400;
  t20693 = -0.000085*t7968;
  t20694 = 1.e-5*t7014;
  t20712 = 0.00025*t7968;
  t20727 = -3.e-6*t8400;
  t20579 = t7968*t10187;
  t20580 = t7506*t10212;
  t20590 = t20579 + t20580;
  t20348 = t124*t213*t3964;
  t20352 = -1.*t124*t158*t4021;
  t20353 = t20348 + t20352;
  t20603 = t8575*t14342;
  t20606 = t8400*t15665;
  t20607 = t20603 + t20606;
  t20390 = t124*t362*t4303;
  t20394 = t124*t627*t4505;
  t20396 = t20390 + t20394;
  t20707 = 0.001783*t7968;
  t20708 = 0.00025*t7014;
  t20710 = t20707 + t20708;
  t20713 = 0.009916*t7014;
  t20714 = t20712 + t20713;
  t20716 = 1.e-5*t124*t477;
  t20717 = 0.009916*t7968;
  t20718 = 0.00025*t7506;
  t20719 = t20716 + t20717 + t20718;
  t20721 = -0.000085*t124*t477;
  t20722 = 0.001783*t7506;
  t20723 = t20721 + t20712 + t20722;
  t20725 = 0.006182*t8718;
  t20728 = t20725 + t20727;
  t20731 = 5.e-6*t124*t477;
  t20732 = 0.000035*t8575;
  t20736 = t20731 + t20732 + t20727;
  t20746 = -3.e-6*t8718;
  t20747 = 0.000035*t8400;
  t20755 = t20746 + t20747;
  t20761 = -3.e-6*t8575;
  t20762 = 0.006182*t8400;
  t20769 = t20761 + t20762;
  t20478 = t213*t2242;
  t20485 = t158*t2346;
  t20486 = t20478 + t20485;
  t20517 = t627*t2815;
  t20523 = t2716*t3037;
  t20526 = t20517 + t20523;
  t9712 = 1.528*t1263*t9710;
  t9777 = 1.528*t1398*t9767;
  t10030 = 1.528*t1398*t10027;
  t10183 = 1.528*t3459*t10181;
  t10262 = 1.528*t2593*t10257;
  t10481 = 0.241*t902*t10471;
  t10643 = 0.241*t1115*t10627;
  t11867 = 0.241*t902*t11837;
  t14308 = 0.241*t3640*t14307;
  t16335 = 0.241*t2593*t16325;
  t16338 = t9712 + t9777 + t10030 + t10183 + t10262 + t10481 + t10643 + t11867 + t14308 + t16335;
  t19059 = 1.528*t7354*t9710;
  t19063 = 1.528*t8304*t9767;
  t19068 = 1.528*t8304*t10027;
  t19073 = 1.528*t7954*t10181;
  t19076 = 1.528*t18530*t10257;
  t19103 = 0.241*t8491*t10471;
  t19139 = 0.241*t8491*t11837;
  t19148 = 0.241*t10627*t8917;
  t19215 = 0.241*t8676*t14307;
  t19240 = 0.241*t18530*t16325;
  t19250 = t19059 + t19063 + t19068 + t19073 + t19076 + t19103 + t19139 + t19148 + t19215 + t19240;
  t18179 = 1.528*t9014*t9710;
  t18180 = 1.528*t9218*t9767;
  t18181 = 1.528*t9218*t10027;
  t18182 = 1.528*t9084*t10181;
  t18183 = 1.528*t17853*t10257;
  t18198 = 0.241*t9372*t10471;
  t18205 = 0.241*t9372*t11837;
  t18206 = 0.241*t10627*t9517;
  t18210 = 0.241*t9466*t14307;
  t18219 = 0.241*t17853*t16325;
  t18226 = t18179 + t18180 + t18181 + t18182 + t18183 + t18198 + t18205 + t18206 + t18210 + t18219;
  t20703 = t20693 + t20694;
  t20567 = 1.528*t10027*t16484;
  t20568 = 1.528*t10181*t16554;
  t20569 = 1.528*t10257*t20329;
  t20570 = 1.528*t9710*t16899;
  t20575 = 1.528*t9767*t16950;
  t20591 = 1.528*t20590*t17054;
  t20593 = 0.241*t14307*t17172;
  t20594 = 0.241*t16325*t20379;
  t20595 = 0.241*t11837*t17280;
  t20598 = 0.241*t10627*t17467;
  t20601 = 0.241*t10471*t17569;
  t20609 = 0.241*t20607*t17693;
  t20913 = 5.e-6*t124*t362;
  t20967 = -0.00025*t124*t158;
  t20931 = -1.e-5*t124*t213;
  t20932 = 0.000085*t124*t158;
  t20987 = -3.e-6*t124*t362;
  t20954 = 0.00025*t124*t213;
  t20955 = 1.e-5*t676;
  t20956 = -0.009916*t124*t158;
  t20957 = t20954 + t20955 + t20956;
  t20959 = -0.00025*t124*t213;
  t20960 = -0.001783*t124*t158;
  t20961 = t20959 + t20960;
  t20965 = -0.009916*t124*t213;
  t20968 = t20965 + t20967;
  t20970 = 0.001783*t124*t213;
  t20972 = -0.000085*t676;
  t20973 = t20970 + t20972 + t20967;
  t20982 = 0.006182*t124*t362;
  t20983 = -3.e-6*t124*t627;
  t20984 = t20982 + t20983;
  t20986 = 5.e-6*t676;
  t20989 = 0.000035*t124*t627;
  t20990 = t20986 + t20987 + t20989;
  t20994 = 0.000035*t124*t362;
  t20996 = -3.e-6*t124*t1025;
  t20997 = t20994 + t20996;
  t21000 = 0.006182*t124*t1025;
  t21001 = t20987 + t21000;
  t4154 = 1.528*t4153*t2593;
  t4690 = 0.241*t4683*t2593;
  t5122 = 1.528*t5038*t1263;
  t5733 = 1.528*t5698*t3459;
  t5864 = 1.528*t5856*t1398;
  t6027 = 1.528*t5995*t1398;
  t6131 = 0.241*t6129*t902;
  t6346 = 0.241*t6341*t902;
  t6554 = 0.241*t6540*t3640;
  t6763 = 0.241*t6752*t1115;
  t6764 = t4154 + t4690 + t5122 + t5733 + t5864 + t6027 + t6131 + t6346 + t6554 + t6763;
  t18747 = 1.528*t4153*t18530;
  t18795 = 0.241*t4683*t18530;
  t18821 = 1.528*t5038*t7354;
  t18860 = 1.528*t5698*t7954;
  t18899 = 1.528*t5856*t8304;
  t18901 = 1.528*t5995*t8304;
  t18925 = 0.241*t6129*t8491;
  t18941 = 0.241*t6341*t8491;
  t18946 = 0.241*t6540*t8676;
  t18948 = 0.241*t6752*t8917;
  t18965 = t18747 + t18795 + t18821 + t18860 + t18899 + t18901 + t18925 + t18941 + t18946 + t18948;
  t17969 = 1.528*t4153*t17853;
  t17976 = 0.241*t4683*t17853;
  t17993 = 1.528*t5038*t9014;
  t17994 = 1.528*t5698*t9084;
  t17997 = 1.528*t5856*t9218;
  t18003 = 1.528*t5995*t9218;
  t18046 = 0.241*t6129*t9372;
  t18049 = 0.241*t6341*t9372;
  t18050 = 0.241*t6540*t9466;
  t18057 = 0.241*t6752*t9517;
  t18064 = t17969 + t17976 + t17993 + t17994 + t17997 + t18003 + t18046 + t18049 + t18050 + t18057;
  t20975 = t20931 + t20932;
  t20777 = 1.528*t5995*t9710;
  t20779 = 1.528*t5698*t9767;
  t20780 = 1.528*t4153*t20590;
  t20781 = 1.528*t5038*t10027;
  t20782 = 1.528*t5856*t10181;
  t20785 = 1.528*t20353*t10257;
  t20787 = 0.241*t6540*t10471;
  t20789 = 0.241*t4683*t20607;
  t20790 = 0.241*t6341*t10627;
  t20792 = 0.241*t6752*t11837;
  t20794 = 0.241*t6129*t14307;
  t20797 = 0.241*t20396*t16325;
  t20305 = 1.528*t5995*t16484;
  t20307 = 1.528*t5698*t16554;
  t20331 = 1.528*t4153*t20329;
  t20339 = 1.528*t5038*t16899;
  t20346 = 1.528*t5856*t16950;
  t20355 = 1.528*t20353*t17054;
  t20361 = 0.241*t6540*t17172;
  t20380 = 0.241*t4683*t20379;
  t20383 = 0.241*t6341*t17280;
  t20384 = 0.241*t6752*t17467;
  t20386 = 0.241*t6129*t17569;
  t20399 = 0.241*t20396*t17693;
  t21069 = 5.e-6*t627;
  t21095 = 0.00025*t213;
  t21013 = -0.08711128*t158*t5856;
  t21014 = -0.08711128*t213*t5038;
  t21016 = -0.08711128*t158*t5995;
  t21017 = 1.528*t20353*t2411;
  t21018 = 1.528*t20486*t4153;
  t21020 = 0.08711128*t213*t5698;
  t21104 = -3.e-6*t627;
  t21026 = 0.241*t3540*t6752;
  t21028 = 0.008825179*t362*t6129;
  t21029 = 0.241*t3677*t6341;
  t21030 = 0.241*t20526*t4683;
  t21031 = 0.008825179*t627*t6540;
  t21032 = 0.241*t20396*t3264;
  t21096 = -0.009916*t158;
  t21097 = t21095 + t21096;
  t21099 = 0.001783*t158;
  t21100 = t21095 + t21099;
  t21080 = 0.001783*t213;
  t21082 = -0.00025*t158;
  t21083 = t21080 + t21082;
  t21091 = 0.009916*t213;
  t21092 = 0.00025*t158;
  t21093 = t21091 + t21092;
  t21103 = 0.006182*t362;
  t21106 = t21103 + t21104;
  t21108 = 0.000035*t2716;
  t21111 = t21108 + t21104;
  t21115 = -3.e-6*t362;
  t21116 = 0.000035*t627;
  t21119 = t21115 + t21116;
  t21121 = -3.e-6*t2716;
  t21122 = 0.006182*t627;
  t21124 = t21121 + t21122;
  t2638 = 1.528*t2411*t2593;
  t3299 = 0.241*t3264*t2593;
  t3319 = -0.08711128*t158*t1263;
  t3467 = -0.08711128*t158*t3459;
  t3484 = 0.008825179*t627*t902;
  t3543 = 0.241*t3540*t902;
  t3653 = 0.008825179*t362*t3640;
  t3684 = 0.241*t3677*t1115;
  t3685 = t2638 + t3299 + t3319 + t3467 + t3484 + t3543 + t3653 + t3684;
  t18534 = 1.528*t2411*t18530;
  t18535 = 0.241*t3264*t18530;
  t18540 = -0.08711128*t158*t7354;
  t18580 = -0.08711128*t158*t7954;
  t18587 = 0.008825179*t627*t8491;
  t18656 = 0.241*t3540*t8491;
  t18672 = 0.008825179*t362*t8676;
  t18718 = 0.241*t3677*t8917;
  t18735 = t18534 + t18535 + t18540 + t18580 + t18587 + t18656 + t18672 + t18718;
  t17868 = 1.528*t2411*t17853;
  t17917 = 0.241*t3264*t17853;
  t17931 = -0.08711128*t158*t9014;
  t17945 = -0.08711128*t158*t9084;
  t17947 = 0.008825179*t627*t9372;
  t17948 = 0.241*t3540*t9372;
  t17955 = 0.008825179*t362*t9466;
  t17960 = 0.241*t3677*t9517;
  t17966 = t17868 + t17917 + t17931 + t17945 + t17947 + t17948 + t17955 + t17960;
  t21086 = -0.000085*t213;
  t21087 = -1.e-5*t158;
  t21088 = t21086 + t21087;
  t20815 = -0.08711128*t213*t9710;
  t20816 = -0.08711128*t158*t9767;
  t20817 = 1.528*t2411*t20590;
  t20818 = -0.08711128*t158*t10027;
  t20821 = 0.08711128*t213*t10181;
  t20829 = 1.528*t20486*t10257;
  t20830 = 0.008825179*t362*t10471;
  t20831 = 0.241*t3264*t20607;
  t20833 = 0.241*t3540*t10627;
  t20840 = 0.241*t3677*t11837;
  t20845 = 0.008825179*t627*t14307;
  t20846 = 0.241*t20526*t16325;
  t20470 = -0.08711128*t213*t16484;
  t20471 = -0.08711128*t158*t16554;
  t20472 = 1.528*t2411*t20329;
  t20473 = -0.08711128*t158*t16899;
  t20477 = 0.08711128*t213*t16950;
  t20487 = 1.528*t20486*t17054;
  t20488 = 0.008825179*t362*t17172;
  t20496 = 0.241*t3264*t20379;
  t20500 = 0.241*t3540*t17280;
  t20504 = 0.241*t3677*t17467;
  t20508 = 0.008825179*t627*t17569;
  t20531 = 0.241*t20526*t17693;
  t21073 = 0.00270221251488*t213;
  t21074 = -0.00005198763696*t158;
  t21075 = 0.008825179*t362*t1662;
  t21077 = 0.241*t1712*t3540;
  t21078 = t21073 + t21074 + t21069 + t21075 + t21077;
  t20934 = -0.048889888*t5995;
  t20938 = 0.000736496*t5698;
  t20943 = 0.241*t1712*t6341;
  t20948 = 0.241*t1662*t6540;
  t20952 = t20931 + t20932 + t20934 + t20938 + t20913 + t20943 + t20948;
  t1280 = -0.048889888*t1263;
  t1437 = 0.000736496*t1398;
  t1669 = 0.241*t1662*t902;
  t1728 = 0.241*t1712*t1115;
  t1761 = t1280 + t1437 + t1669 + t1728;
  t18427 = -0.048889888*t7354;
  t18430 = 0.000736496*t8304;
  t18446 = 0.241*t1662*t8491;
  t18457 = 0.241*t1712*t8917;
  t18464 = t18427 + t18430 + t18446 + t18457;
  t17775 = -0.048889888*t9014;
  t17819 = 0.000736496*t9218;
  t17826 = 0.241*t1662*t9372;
  t17828 = 0.241*t1712*t9517;
  t17839 = t17775 + t17819 + t17826 + t17828;
  t20695 = -0.048889888*t10027;
  t20696 = 0.000736496*t10181;
  t20697 = 0.241*t1712*t11837;
  t20698 = 0.241*t1662*t14307;
  t20699 = t20693 + t20694 + t20682 + t20695 + t20696 + t20697 + t20698;
  t19882 = -0.048889888*t16899;
  t19889 = 0.000736496*t16950;
  t19914 = 0.241*t1712*t17467;
  t19915 = 0.241*t1662*t17569;
  t19918 = t19878 + t19881 + t19736 + t19882 + t19889 + t19914 + t19915;
  t21068 = 0.000019380093084*t362;
  t21070 = -0.02973458*t3540;
  t21071 = t21068 + t21069 + t21070;
  t20917 = -0.02973458*t6341;
  t20921 = 0.000529236*t6540;
  t20922 = t20913 + t20917 + t20921;
  t961 = 0.000529236*t902;
  t1119 = -0.02973458*t1115;
  t1136 = t961 + t1119;
  t18397 = 0.000529236*t8491;
  t18401 = -0.02973458*t8917;
  t18413 = t18397 + t18401;
  t17750 = 0.000529236*t9372;
  t17751 = -0.02973458*t9517;
  t17757 = t17750 + t17751;
  t20683 = -0.02973458*t11837;
  t20690 = 0.000529236*t14307;
  t20691 = t20682 + t20683 + t20690;
  t19756 = -0.02973458*t17467;
  t19762 = 0.000529236*t17569;
  t19766 = t19736 + t19756 + t19762;
  p_output1[0]=var2[10]*(-0.5*(3.056*t1263*t1398 + 3.056*t1398*t3459 + 0.482*t1115*t902 + 0.482*t3640*t902)*var2[0] - 0.5*t9577*var2[1] - 0.5*t8969*var2[2] - 0.5*t17700*var2[3] - 0.5*t16338*var2[4] - 0.5*t6764*var2[5] - 0.5*t3685*var2[9] - 0.5*t1761*var2[10] - 0.5*t1136*var2[11]);
  p_output1[1]=var2[10]*(-0.5*t9577*var2[0] - 0.5*(3.056*t9014*t9218 + 3.056*t9084*t9218 + 0.482*t9372*t9466 + 0.482*t9372*t9517)*var2[1] - 0.5*t18111*var2[2] - 0.5*t18331*var2[3] - 0.5*t18226*var2[4] - 0.5*t18064*var2[5] - 0.5*t17966*var2[9] - 0.5*t17839*var2[10] - 0.5*t17757*var2[11]);
  p_output1[2]=var2[10]*(-0.5*t8969*var2[0] - 0.5*t18111*var2[1] - 0.5*(3.056*t7354*t8304 + 3.056*t7954*t8304 + 0.482*t8491*t8676 + 0.482*t8491*t8917)*var2[2] - 0.5*t19612*var2[3] - 0.5*t19250*var2[4] - 0.5*t18965*var2[5] - 0.5*t18735*var2[9] - 0.5*t18464*var2[10] - 0.5*t18413*var2[11]);
  p_output1[3]=var2[10]*(-0.5*t17700*var2[0] - 0.5*t18331*var2[1] - 0.5*t19612*var2[2] - 0.5*(3.056*t16484*t16899 + 3.056*t16554*t16950 + 0.482*t17280*t17467 + 0.482*t17172*t17569 + t1398*t20105 + t1398*t20182 + t1263*t20217 + t1115*t20241 + 3.056*t17054*t20329 + 0.482*t17693*t20379 + t20010*t2593 + t20194*t3459 + t20300*t3640 + t20278*t902 + t20303*t902 + 5.e-6*t2593*t902)*var2[3] - 0.5*(t20567 + t20568 + t20569 + t20570 + t20575 + t20591 + t20593 + t20594 + t20595 + t20598 + t20601 + t20609 + t124*t20010*t477 + t20217*t7014 + t20194*t7506 + t20105*t7968 + t20182*t7968 + t20278*t8400 + t20303*t8400 + t20300*t8575 + t20241*t8718 + 5.e-6*t124*t477*t902)*var2[4] - 0.5*(-1.*t124*t158*t20105 - 1.*t124*t158*t20182 + t1025*t124*t20241 + t20305 + t20307 + t20331 + t20339 + t20346 + t20355 + t20361 + t20380 + t20383 + t20384 + t20386 + t20399 + t124*t20194*t213 - 1.*t124*t20217*t213 + t124*t20278*t362 + t124*t20303*t362 + t124*t20300*t627 + t20010*t676 + 5.e-6*t676*t902)*var2[5] - 0.5*(t158*t20194 - 1.*t158*t20217 + t20470 + t20471 + t20472 + t20473 + t20477 + t20487 + t20488 + t20496 + t20500 + t20504 + t20508 + t20531 + t20105*t213 + t20182*t213 + t20300*t2716 + t20241*t362 + t20278*t627 + t20303*t627)*var2[9] - 0.5*t19918*var2[10] - 0.5*t19766*var2[11]);
  p_output1[4]=var2[10]*(-0.5*t16338*var2[0] - 0.5*t18226*var2[1] - 0.5*t19250*var2[2] - 0.5*(t20567 + t20568 + t20569 + t20570 + t20575 + t20591 + t20593 + t20594 + t20595 + t20598 + t20601 + t20609 + t1398*t20714 + t1263*t20719 + t1398*t20723 + t1115*t20769 + t20703*t2593 + t20710*t3459 + t20755*t3640 + 5.e-6*t2593*t8400 + t20728*t902 + t20736*t902)*var2[3] - 0.5*(0.482*t10627*t11837 + 0.482*t10471*t14307 + 3.056*t10257*t20590 + 0.482*t16325*t20607 + t124*t20703*t477 + t20719*t7014 + t20710*t7506 + t20714*t7968 + t20723*t7968 + t20728*t8400 + t20736*t8400 + 5.e-6*t124*t477*t8400 + t20755*t8575 + t20769*t8718 + 3.056*t10027*t9710 + 3.056*t10181*t9767)*var2[4] - 0.5*(-1.*t124*t158*t20714 - 1.*t124*t158*t20723 + t1025*t124*t20769 + t20777 + t20779 + t20780 + t20781 + t20782 + t20785 + t20787 + t20789 + t20790 + t20792 + t20794 + t20797 + t124*t20710*t213 - 1.*t124*t20719*t213 + t124*t20728*t362 + t124*t20736*t362 + t124*t20755*t627 + t20703*t676 + 5.e-6*t676*t8400)*var2[5] - 0.5*(t158*t20710 - 1.*t158*t20719 + t20815 + t20816 + t20817 + t20818 + t20821 + t20829 + t20830 + t20831 + t20833 + t20840 + t20845 + t20846 + t20714*t213 + t20723*t213 + t20755*t2716 + t20769*t362 + t20728*t627 + t20736*t627)*var2[9] - 0.5*t20699*var2[10] - 0.5*t20691*var2[11]);
  p_output1[5]=var2[10]*(-0.5*t6764*var2[0] - 0.5*t18064*var2[1] - 0.5*t18965*var2[2] - 0.5*(t20305 + t20307 + t20331 + t20339 + t20346 + t20355 + t20361 + t20380 + t20383 + t20384 + t20386 + t20399 + t1263*t20957 + t1398*t20968 + t1398*t20973 + t1115*t20984 + t20975*t2593 + t20961*t3459 + 5.e-6*t124*t2593*t362 + t20997*t3640 + t20990*t902 + t21001*t902)*var2[3] - 0.5*(t20777 + t20779 + t20780 + t20781 + t20782 + t20785 + t20787 + t20789 + t20790 + t20792 + t20794 + t20797 + t124*t20975*t477 + 5.e-6*t362*t4047*t477 + t20957*t7014 + t20961*t7506 + t20968*t7968 + t20973*t7968 + t20990*t8400 + t21001*t8400 + t20997*t8575 + t20984*t8718)*var2[4] - 0.5*(-1.*t124*t158*t20968 - 1.*t124*t158*t20973 + t1025*t124*t20984 - 1.*t124*t20957*t213 + t124*t20961*t213 + t124*t20990*t362 + t124*t21001*t362 + 3.056*t20353*t4153 + 0.482*t20396*t4683 + 3.056*t5698*t5856 + 3.056*t5038*t5995 + t124*t20997*t627 + 0.482*t6129*t6540 + 0.482*t6341*t6752 + t20975*t676 + 5.e-6*t124*t362*t676)*var2[5] - 0.5*(-1.*t158*t20957 + t158*t20961 + t21013 + t21014 + t21016 + t21017 + t21018 + t21020 + t21026 + t21028 + t21029 + t21030 + t21031 + t21032 + t20968*t213 + t20973*t213 + t20997*t2716 + t20984*t362 + t20990*t627 + t21001*t627)*var2[9] - 0.5*t20952*var2[10] - 0.5*t20922*var2[11]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=var2[10]*(-0.5*t3685*var2[0] - 0.5*t17966*var2[1] - 0.5*t18735*var2[2] - 0.5*(t20470 + t20471 + t20472 + t20473 + t20477 + t20487 + t20488 + t20496 + t20500 + t20504 + t20508 + t20531 + t1263*t21093 + t1398*t21097 + t1398*t21100 + t1115*t21124 + t21088*t2593 + t21083*t3459 + t21119*t3640 + 5.e-6*t2593*t627 + t21106*t902 + t21111*t902)*var2[3] - 0.5*(t20815 + t20816 + t20817 + t20818 + t20821 + t20829 + t20830 + t20831 + t20833 + t20840 + t20845 + t20846 + t124*t21088*t477 + 5.e-6*t124*t477*t627 + t21093*t7014 + t21083*t7506 + t21097*t7968 + t21100*t7968 + t21106*t8400 + t21111*t8400 + t21119*t8575 + t21124*t8718)*var2[4] - 0.5*(t21013 + t21014 + t21016 + t21017 + t21018 + t21020 + t21026 + t21028 + t21029 + t21030 + t21031 + t21032 - 1.*t124*t158*t21097 - 1.*t124*t158*t21100 + t1025*t124*t21124 + t124*t21083*t213 - 1.*t124*t21093*t213 + t124*t21106*t362 + t124*t21111*t362 + t124*t21119*t627 + t21088*t676 + 5.e-6*t627*t676)*var2[5] - 0.5*(t158*t21083 - 1.*t158*t21093 + t21097*t213 + t21100*t213 + 3.056*t20486*t2411 + t21119*t2716 + 0.482*t20526*t3264 + t21124*t362 + 0.482*t3540*t3677 + t21106*t627 + t21111*t627 + 0.000646338459602*t362*t627)*var2[9] - 0.5*t21078*var2[10] - 0.5*t21071*var2[11]);
  p_output1[10]=(-0.5*t1761*var2[0] - 0.5*t17839*var2[1] - 0.5*t18464*var2[2] - 0.5*t19918*var2[3] - 0.5*t20699*var2[4] - 0.5*t20952*var2[5] - 0.5*t21078*var2[9])*var2[10];
  p_output1[11]=(-0.5*t1136*var2[0] - 0.5*t17757*var2[1] - 0.5*t18413*var2[2] - 0.5*t19766*var2[3] - 0.5*t20691*var2[4] - 0.5*t20922*var2[5] - 0.5*t21071*var2[9])*var2[10];
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec11_laikago_description.hh"

namespace SymFunction
{

void Ce2_vec11_laikago_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
