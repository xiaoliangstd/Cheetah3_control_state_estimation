/*
 * Automatically Generated from Mathematica.
 * Tue 10 Dec 2019 16:01:55 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t102;
  double t117;
  double t131;
  double t241;
  double t263;
  double t312;
  double t463;
  double t15;
  double t37;
  double t511;
  double t718;
  double t556;
  double t593;
  double t1044;
  double t1077;
  double t1116;
  double t496;
  double t702;
  double t725;
  double t730;
  double t731;
  double t757;
  double t911;
  double t938;
  double t963;
  double t2237;
  double t2238;
  double t2311;
  double t2321;
  double t2326;
  double t1870;
  double t1993;
  double t2105;
  double t2128;
  double t2135;
  double t2137;
  double t1142;
  double t1189;
  double t1215;
  double t1234;
  double t1246;
  double t1270;
  double t1318;
  double t1345;
  double t1379;
  double t1390;
  double t1403;
  double t1416;
  double t1489;
  double t1573;
  double t1580;
  double t1581;
  double t1710;
  double t1719;
  double t3518;
  double t3521;
  double t3522;
  double t3415;
  double t3620;
  double t3631;
  double t3641;
  double t3642;
  double t3765;
  double t3805;
  double t3844;
  double t3863;
  double t4188;
  double t4209;
  double t4260;
  double t4272;
  double t4293;
  double t4584;
  double t5269;
  double t5419;
  double t5643;
  double t5945;
  double t5950;
  double t5955;
  double t5913;
  double t6079;
  double t6091;
  double t4649;
  double t5943;
  double t5991;
  double t4717;
  double t4828;
  double t6724;
  double t6734;
  double t6811;
  double t2936;
  double t2939;
  double t2955;
  double t2970;
  double t2993;
  double t3029;
  double t3634;
  double t3880;
  double t3952;
  double t5717;
  double t5769;
  double t5773;
  double t7851;
  double t7916;
  double t7924;
  double t7930;
  double t7819;
  double t7953;
  double t7982;
  double t8051;
  double t8071;
  double t8135;
  double t3111;
  double t3131;
  double t3135;
  double t8738;
  double t8761;
  double t8799;
  double t8866;
  double t8302;
  double t8360;
  double t8399;
  double t8550;
  double t8576;
  double t8580;
  double t6482;
  double t6486;
  double t6503;
  double t8231;
  double t8299;
  double t8410;
  double t8600;
  double t8648;
  double t8922;
  double t3109;
  double t3185;
  double t3198;
  double t3249;
  double t3280;
  double t3283;
  double t8036;
  double t8182;
  double t8215;
  double t7630;
  double t7279;
  double t9453;
  double t16861;
  double t10646;
  double t12252;
  double t12369;
  double t18597;
  double t18606;
  double t18762;
  double t18772;
  double t18784;
  double t18799;
  double t18807;
  double t18809;
  double t18812;
  double t18813;
  double t18814;
  double t18823;
  double t18827;
  double t18828;
  double t18832;
  double t18843;
  double t18855;
  double t18863;
  double t18867;
  double t18875;
  double t18598;
  double t18600;
  double t18603;
  double t18608;
  double t18618;
  double t18621;
  double t18669;
  double t18673;
  double t18677;
  double t18710;
  double t18714;
  double t18752;
  double t19079;
  double t19082;
  double t19084;
  double t19095;
  double t19101;
  double t19104;
  double t18887;
  double t18895;
  double t18909;
  double t18911;
  double t18914;
  double t18942;
  double t18970;
  double t18974;
  double t18975;
  double t18997;
  double t19003;
  double t19011;
  double t19141;
  double t19146;
  double t19149;
  double t19153;
  double t19156;
  double t19167;
  double t19151;
  double t19172;
  double t19176;
  double t5957;
  double t19282;
  double t19286;
  double t19287;
  double t19257;
  double t19263;
  double t19264;
  double t19217;
  double t19223;
  double t19230;
  double t7648;
  double t7082;
  double t19246;
  double t19247;
  double t19309;
  double t19310;
  double t7509;
  double t19382;
  double t19383;
  double t19398;
  double t19403;
  double t19408;
  double t19412;
  double t8883;
  double t19478;
  double t19481;
  double t19491;
  double t19503;
  double t19509;
  double t19514;
  double t19470;
  double t19471;
  double t19473;
  double t8994;
  double t19401;
  double t19417;
  double t19425;
  double t14149;
  double t17043;
  double t19546;
  double t19547;
  double t10807;
  double t19437;
  double t19445;
  double t10224;
  double t11789;
  double t12555;
  double t19195;
  double t19693;
  double t19694;
  double t19696;
  double t19684;
  double t19689;
  double t19690;
  double t19681;
  double t19682;
  double t19683;
  double t19265;
  double t19691;
  double t19697;
  double t19700;
  double t19303;
  double t19761;
  double t19783;
  double t19784;
  double t19743;
  double t19744;
  double t19750;
  double t19718;
  double t19719;
  double t19720;
  double t19332;
  double t19342;
  double t19345;
  double t19355;
  double t19361;
  double t19723;
  double t19725;
  double t19810;
  double t19817;
  double t19369;
  double t19372;
  double t19952;
  double t19955;
  double t19959;
  double t19961;
  double t19962;
  double t19963;
  double t19574;
  double t19974;
  double t19975;
  double t19977;
  double t19496;
  double t19549;
  double t20009;
  double t20011;
  double t20013;
  double t20000;
  double t20005;
  double t20006;
  double t19606;
  double t19960;
  double t19964;
  double t19965;
  double t19628;
  double t19629;
  double t20020;
  double t20021;
  double t19655;
  double t19647;
  double t19967;
  double t19968;
  double t19664;
  double t19665;
  double t19131;
  double t19132;
  double t19134;
  double t19049;
  double t19057;
  double t19058;
  double t1746;
  double t2166;
  double t2369;
  double t2472;
  double t2489;
  double t2499;
  double t2550;
  double t2555;
  double t17588;
  double t17606;
  double t17766;
  double t17767;
  double t17822;
  double t18069;
  double t18078;
  double t18214;
  double t18287;
  double t18295;
  double t18312;
  double t19070;
  double t19071;
  double t19074;
  double t20123;
  double t20124;
  double t20125;
  double t18507;
  double t18509;
  double t18511;
  double t18518;
  double t18529;
  double t18548;
  double t18559;
  double t18561;
  double t18562;
  double t18565;
  double t18566;
  double t18577;
  double t18583;
  double t18588;
  double t18384;
  double t18394;
  double t18403;
  double t19122;
  double t19125;
  double t19126;
  double t18475;
  double t18491;
  double t18501;
  double t19065;
  double t19078;
  double t19086;
  double t19090;
  double t19106;
  double t19115;
  double t19130;
  double t19135;
  double t19137;
  double t6568;
  double t6595;
  double t6974;
  double t7062;
  double t7151;
  double t7359;
  double t7375;
  double t7507;
  double t7512;
  double t7513;
  double t7595;
  double t7598;
  double t5693;
  double t5802;
  double t5821;
  double t5852;
  double t7621;
  double t7666;
  double t7737;
  double t7774;
  double t7797;
  double t4070;
  double t4873;
  double t5046;
  double t5080;
  double t5887;
  double t6024;
  double t6096;
  double t6118;
  double t6154;
  double t6253;
  double t10228;
  double t10345;
  double t10495;
  double t10831;
  double t10849;
  double t10883;
  double t10981;
  double t11602;
  double t12074;
  double t12612;
  double t13021;
  double t13029;
  double t13409;
  double t8221;
  double t8413;
  double t8414;
  double t8456;
  double t8581;
  double t8719;
  double t8912;
  double t8928;
  double t8929;
  double t8930;
  double t13907;
  double t14154;
  double t14790;
  double t17090;
  double t17271;
  double t17289;
  double t17329;
  double t8968;
  double t8983;
  double t9000;
  double t9011;
  double t9023;
  double t9050;
  double t18604;
  double t18661;
  double t18663;
  double t18678;
  double t18753;
  double t18754;
  double t18910;
  double t18962;
  double t18963;
  double t18983;
  double t19030;
  double t19037;
  double t19186;
  double t19190;
  double t19205;
  double t19209;
  double t19210;
  double t19237;
  double t19248;
  double t19251;
  double t19252;
  double t19289;
  double t19290;
  double t19291;
  double t19292;
  double t19297;
  double t19298;
  double t19312;
  double t19316;
  double t19317;
  double t19321;
  double t19333;
  double t19336;
  double t19338;
  double t19339;
  double t19340;
  double t19346;
  double t19350;
  double t19351;
  double t19352;
  double t19354;
  double t19358;
  double t19359;
  double t19360;
  double t19362;
  double t19364;
  double t19366;
  double t19367;
  double t19368;
  double t19377;
  double t19378;
  double t19379;
  double t19380;
  double t19429;
  double t19450;
  double t19453;
  double t19464;
  double t19475;
  double t19516;
  double t19517;
  double t19523;
  double t19533;
  double t19557;
  double t19559;
  double t19562;
  double t19564;
  double t19573;
  double t19583;
  double t19585;
  double t19588;
  double t19594;
  double t19608;
  double t19616;
  double t19620;
  double t19625;
  double t19626;
  double t19627;
  double t19631;
  double t19638;
  double t19640;
  double t19642;
  double t19645;
  double t19646;
  double t19649;
  double t19650;
  double t19654;
  double t19656;
  double t19657;
  double t19661;
  double t19663;
  double t19666;
  double t19668;
  double t19669;
  double t19671;
  double t19703;
  double t19704;
  double t19709;
  double t19711;
  double t19713;
  double t19714;
  double t19721;
  double t19727;
  double t19730;
  double t19731;
  double t19760;
  double t19785;
  double t19789;
  double t19794;
  double t19795;
  double t19799;
  double t19807;
  double t19820;
  double t19831;
  double t19836;
  double t19848;
  double t19862;
  double t19865;
  double t19867;
  double t19868;
  double t19873;
  double t19874;
  double t19877;
  double t19884;
  double t19886;
  double t19893;
  double t19894;
  double t19901;
  double t19907;
  double t19908;
  double t19909;
  double t19910;
  double t19912;
  double t19916;
  double t19919;
  double t19920;
  double t19927;
  double t19929;
  double t19931;
  double t19941;
  double t19942;
  double t19948;
  double t19949;
  double t19950;
  double t19966;
  double t19969;
  double t19971;
  double t19972;
  double t19980;
  double t19988;
  double t19989;
  double t19990;
  double t19993;
  double t19994;
  double t19998;
  double t20007;
  double t20014;
  double t20016;
  double t20017;
  double t20022;
  double t20023;
  double t20024;
  double t20025;
  double t20026;
  double t20032;
  double t20033;
  double t20034;
  double t20037;
  double t20038;
  double t20039;
  double t20041;
  double t20043;
  double t20044;
  double t20049;
  double t20050;
  double t20051;
  double t20060;
  double t20065;
  double t20067;
  double t20068;
  double t20074;
  double t20077;
  double t20079;
  double t20082;
  double t20083;
  double t20085;
  double t20087;
  double t20089;
  double t20091;
  double t20093;
  double t20099;
  double t20100;
  double t20101;
  double t20262;
  double t20264;
  double t20265;
  double t18667;
  double t18760;
  double t18818;
  double t18822;
  double t18876;
  double t18879;
  double t18966;
  double t19043;
  double t19045;
  double t20172;
  double t20175;
  double t20178;
  double t20179;
  double t20180;
  double t20183;
  double t20184;
  double t20186;
  double t20187;
  double t20356;
  double t19717;
  double t19742;
  double t19840;
  double t19899;
  double t19951;
  double t19973;
  double t19995;
  double t20027;
  double t20056;
  double t20102;
  double t20104;
  double t20325;
  double t20326;
  double t20330;
  double t20334;
  double t20335;
  double t20336;
  double t20340;
  double t20341;
  double t20344;
  double t20345;
  double t20351;
  double t20222;
  double t20224;
  double t20225;
  double t20226;
  double t20228;
  double t20232;
  double t20233;
  double t20235;
  double t20236;
  double t20237;
  double t20238;
  double t20362;
  double t20363;
  double t20364;
  double t20365;
  double t20387;
  double t20433;
  double t20385;
  double t20389;
  double t20391;
  double t20392;
  double t20393;
  double t20395;
  double t20397;
  double t20398;
  double t20400;
  double t20401;
  double t20402;
  double t20403;
  double t20404;
  double t20406;
  double t20407;
  double t20412;
  double t20414;
  double t20415;
  double t20427;
  double t20429;
  double t20430;
  double t20432;
  double t20435;
  double t20440;
  double t20443;
  double t20444;
  double t20446;
  double t20448;
  double t20449;
  double t20452;
  double t20453;
  double t20454;
  double t20381;
  double t20571;
  double t19216;
  double t19253;
  double t19320;
  double t19353;
  double t19381;
  double t19467;
  double t19570;
  double t19603;
  double t19644;
  double t19676;
  double t19677;
  double t20308;
  double t20309;
  double t20311;
  double t20312;
  double t20313;
  double t20314;
  double t20315;
  double t20316;
  double t20318;
  double t20319;
  double t20322;
  double t20198;
  double t20199;
  double t20207;
  double t20208;
  double t20210;
  double t20211;
  double t20213;
  double t20214;
  double t20216;
  double t20218;
  double t20219;
  double t20576;
  double t20577;
  double t20600;
  double t20519;
  double t20520;
  double t20522;
  double t20422;
  double t20423;
  double t20424;
  double t20639;
  double t20538;
  double t20540;
  double t20541;
  double t20459;
  double t20460;
  double t20461;
  double t20599;
  double t20602;
  double t20604;
  double t20605;
  double t20608;
  double t20610;
  double t20611;
  double t20616;
  double t20619;
  double t20620;
  double t20621;
  double t20623;
  double t20481;
  double t20482;
  double t20483;
  double t20632;
  double t20634;
  double t20635;
  double t20638;
  double t20640;
  double t20643;
  double t20646;
  double t20648;
  double t20649;
  double t20651;
  double t20652;
  double t20497;
  double t20498;
  double t20501;
  double t20597;
  double t20513;
  double t20514;
  double t20515;
  double t20516;
  double t20518;
  double t20524;
  double t20532;
  double t20533;
  double t20534;
  double t20535;
  double t20536;
  double t20542;
  double t20733;
  double t5160;
  double t5883;
  double t6312;
  double t7603;
  double t7804;
  double t8540;
  double t8948;
  double t9384;
  double t13830;
  double t17330;
  double t17484;
  double t20766;
  double t20739;
  double t20740;
  double t20795;
  double t20748;
  double t20749;
  double t20750;
  double t20752;
  double t20756;
  double t20759;
  double t20760;
  double t20763;
  double t20768;
  double t20770;
  double t20772;
  double t20774;
  double t20784;
  double t20786;
  double t20788;
  double t20793;
  double t20796;
  double t20798;
  double t20802;
  double t20803;
  double t20804;
  double t20806;
  double t20807;
  double t20285;
  double t20286;
  double t20287;
  double t20288;
  double t20289;
  double t20290;
  double t20291;
  double t20293;
  double t20294;
  double t20295;
  double t20296;
  double t20146;
  double t20147;
  double t20148;
  double t20152;
  double t20153;
  double t20156;
  double t20158;
  double t20161;
  double t20163;
  double t20167;
  double t20168;
  double t20776;
  double t20625;
  double t20626;
  double t20627;
  double t20628;
  double t20629;
  double t20630;
  double t20654;
  double t20655;
  double t20656;
  double t20657;
  double t20658;
  double t20659;
  double t20410;
  double t20411;
  double t20417;
  double t20418;
  double t20421;
  double t20425;
  double t20451;
  double t20455;
  double t20456;
  double t20457;
  double t20458;
  double t20462;
  double t20891;
  double t17570;
  double t17587;
  double t18344;
  double t18351;
  double t18412;
  double t18415;
  double t18506;
  double t18592;
  double t18593;
  double t20923;
  double t20823;
  double t20824;
  double t20825;
  double t20826;
  double t20827;
  double t20828;
  double t20936;
  double t20834;
  double t20835;
  double t20836;
  double t20837;
  double t20838;
  double t20839;
  double t20924;
  double t20925;
  double t20927;
  double t20928;
  double t20909;
  double t20910;
  double t20912;
  double t20918;
  double t20919;
  double t20920;
  double t20935;
  double t20937;
  double t20939;
  double t20942;
  double t20945;
  double t20946;
  double t20947;
  double t20949;
  double t20950;
  double t20951;
  double t20266;
  double t20268;
  double t20270;
  double t20271;
  double t20272;
  double t20273;
  double t20275;
  double t20276;
  double t20277;
  double t20126;
  double t20127;
  double t20128;
  double t20129;
  double t20130;
  double t20134;
  double t20136;
  double t20138;
  double t20140;
  double t20914;
  double t20915;
  double t20916;
  double t20669;
  double t20670;
  double t20672;
  double t20673;
  double t20674;
  double t20676;
  double t20684;
  double t20685;
  double t20686;
  double t20687;
  double t20688;
  double t20689;
  double t20474;
  double t20475;
  double t20476;
  double t20479;
  double t20480;
  double t20484;
  double t20489;
  double t20490;
  double t20492;
  double t20493;
  double t20494;
  double t20502;
  double t20896;
  double t20897;
  double t20898;
  double t20899;
  double t20902;
  double t1425;
  double t1733;
  double t2475;
  double t2594;
  double t2602;
  double t20741;
  double t20742;
  double t20743;
  double t20744;
  double t20745;
  double t20250;
  double t20251;
  double t20252;
  double t20253;
  double t20256;
  double t20114;
  double t20115;
  double t20118;
  double t20120;
  double t20121;
  double t20578;
  double t20583;
  double t20584;
  double t20586;
  double t20589;
  double t20366;
  double t20367;
  double t20368;
  double t20370;
  double t20371;
  double t20890;
  double t20892;
  double t20893;
  double t1002;
  double t1276;
  double t1283;
  double t20734;
  double t20735;
  double t20737;
  double t20243;
  double t20244;
  double t20245;
  double t20109;
  double t20110;
  double t20112;
  double t20572;
  double t20573;
  double t20574;
  double t20357;
  double t20358;
  double t20360;
  t102 = Cos(var1[8]);
  t117 = Sin(var1[7]);
  t131 = -1.*t102*t117;
  t241 = Cos(var1[7]);
  t263 = Sin(var1[8]);
  t312 = -1.*t241*t263;
  t463 = t131 + t312;
  t15 = Cos(var1[6]);
  t37 = Sin(var1[4]);
  t511 = Cos(var1[4]);
  t718 = Cos(var1[5]);
  t556 = Sin(var1[5]);
  t593 = Sin(var1[6]);
  t1044 = -1.*t241*t102;
  t1077 = t117*t263;
  t1116 = t1044 + t1077;
  t496 = t15*t37*t463;
  t702 = t556*t593*t463;
  t725 = t241*t102;
  t730 = -1.*t117*t263;
  t731 = t725 + t730;
  t757 = t718*t731;
  t911 = t702 + t757;
  t938 = t511*t911;
  t963 = t496 + t938;
  t2237 = -1. + t102;
  t2238 = 0.25*t2237;
  t2311 = -0.37338*t102;
  t2321 = 0.002196*t263;
  t2326 = t2238 + t2311 + t2321;
  t1870 = -1.*t102;
  t1993 = 1. + t1870;
  t2105 = 0.21935*t1993;
  t2128 = 0.217154*t102;
  t2135 = -0.12338*t263;
  t2137 = t2105 + t2128 + t2135;
  t1142 = t15*t37*t1116;
  t1189 = t718*t463;
  t1215 = t556*t593*t1116;
  t1234 = t1189 + t1215;
  t1246 = t511*t1234;
  t1270 = t1142 + t1246;
  t1318 = -1.*t15*t241*t37;
  t1345 = -1.*t241*t556*t593;
  t1379 = -1.*t718*t117;
  t1390 = t1345 + t1379;
  t1403 = t511*t1390;
  t1416 = t1318 + t1403;
  t1489 = -1.*t15*t37*t117;
  t1573 = t718*t241;
  t1580 = -1.*t556*t593*t117;
  t1581 = t1573 + t1580;
  t1710 = t511*t1581;
  t1719 = t1489 + t1710;
  t3518 = -0.031996*t241;
  t3521 = 0.000482*t117;
  t3522 = t3518 + t3521;
  t3415 = -0.05701*t593;
  t3620 = t15*t3522;
  t3631 = t3415 + t3620;
  t3641 = -1.*t15;
  t3642 = 1. + t3641;
  t3765 = -0.0875*t3642;
  t3805 = -0.14451*t15;
  t3844 = -1.*t593*t3522;
  t3863 = t3765 + t3805 + t3844;
  t4188 = -1.*t241;
  t4209 = 1. + t4188;
  t4260 = 0.21935*t4209;
  t4272 = 0.218868*t241;
  t4293 = -0.031996*t117;
  t4584 = t4260 + t4272 + t4293;
  t5269 = -1.*t593*t3631;
  t5419 = -1.*t15*t3863;
  t5643 = t5269 + t5419;
  t5945 = 0.000482*t241;
  t5950 = 0.031996*t117;
  t5955 = t5945 + t5950;
  t5913 = t241*t4584;
  t6079 = -1.*t15*t3631*t117;
  t6091 = t593*t3863*t117;
  t4649 = -1.*t241*t4584;
  t5943 = Power(t15,2);
  t5991 = Power(t593,2);
  t4717 = t15*t3631*t117;
  t4828 = -1.*t593*t3863*t117;
  t6724 = -1.*t15*t241*t3631;
  t6734 = t241*t593*t3863;
  t6811 = -1.*t4584*t117;
  t2936 = t15*t241*t37;
  t2939 = t241*t556*t593;
  t2955 = t718*t117;
  t2970 = t2939 + t2955;
  t2993 = t511*t2970;
  t3029 = t2936 + t2993;
  t3634 = t593*t3631;
  t3880 = t15*t3863;
  t3952 = t3634 + t3880;
  t5717 = t15*t241*t3631;
  t5769 = -1.*t241*t593*t3863;
  t5773 = t4584*t117;
  t7851 = 0.21935*t117;
  t7916 = -1.*t117*t2137;
  t7924 = t241*t2326;
  t7930 = t7851 + t7916 + t7924;
  t7819 = -0.037381*t593;
  t7953 = t15*t7930;
  t7982 = t7819 + t7953;
  t8051 = -0.124881*t15;
  t8071 = -1.*t593*t7930;
  t8135 = t3765 + t8051 + t8071;
  t3111 = t102*t117;
  t3131 = t241*t263;
  t3135 = t3111 + t3131;
  t8738 = 0.21935*t241;
  t8761 = -1.*t241*t2137;
  t8799 = -1.*t117*t2326;
  t8866 = t8738 + t8761 + t8799;
  t8302 = t241*t2137;
  t8360 = t117*t2326;
  t8399 = t4260 + t8302 + t8360;
  t8550 = -1.*t593*t7982;
  t8576 = -1.*t15*t8135;
  t8580 = t8550 + t8576;
  t6482 = -1.*t511*t15*t556;
  t6486 = t37*t593;
  t6503 = t6482 + t6486;
  t8231 = -1.*t15*t7982*t463;
  t8299 = t593*t8135*t463;
  t8410 = -1.*t8399*t731;
  t8600 = t15*t7982*t463;
  t8648 = -1.*t593*t8135*t463;
  t8922 = t8399*t731;
  t3109 = t15*t37*t731;
  t3185 = t718*t3135;
  t3198 = t556*t593*t731;
  t3249 = t3185 + t3198;
  t3280 = t511*t3249;
  t3283 = t3109 + t3280;
  t8036 = t593*t7982;
  t8182 = t15*t8135;
  t8215 = t8036 + t8182;
  t7630 = -1.*t241*t3522;
  t7279 = -1.*t3522*t117;
  t9453 = -1.*t8399*t3135;
  t16861 = -1.*t7930*t731;
  t10646 = -1.*t7930*t3135;
  t12252 = t8399*t463;
  t12369 = t7930*t731;
  t18597 = Sin(var1[3]);
  t18606 = Cos(var1[3]);
  t18762 = t241*t556;
  t18772 = t718*t593*t117;
  t18784 = t18762 + t18772;
  t18799 = t18597*t18784;
  t18807 = -1.*t511*t15*t117;
  t18809 = -1.*t37*t1581;
  t18812 = t18807 + t18809;
  t18813 = t18606*t18812;
  t18814 = t18799 + t18813;
  t18823 = -1.*t718*t593*t463;
  t18827 = t556*t731;
  t18828 = t18823 + t18827;
  t18832 = t18597*t18828;
  t18843 = t511*t15*t463;
  t18855 = -1.*t37*t911;
  t18863 = t18843 + t18855;
  t18867 = t18606*t18863;
  t18875 = t18832 + t18867;
  t18598 = t718*t241*t593;
  t18600 = -1.*t556*t117;
  t18603 = t18598 + t18600;
  t18608 = -1.*t511*t15*t241;
  t18618 = -1.*t37*t1390;
  t18621 = t18608 + t18618;
  t18669 = -1.*t718*t241*t593;
  t18673 = t556*t117;
  t18677 = t18669 + t18673;
  t18710 = t511*t15*t241;
  t18714 = -1.*t37*t2970;
  t18752 = t18710 + t18714;
  t19079 = t18606*t18784;
  t19082 = -1.*t18597*t18812;
  t19084 = t19079 + t19082;
  t19095 = t18606*t18828;
  t19101 = -1.*t18597*t18863;
  t19104 = t19095 + t19101;
  t18887 = t556*t3135;
  t18895 = -1.*t718*t593*t731;
  t18909 = t18887 + t18895;
  t18911 = t511*t15*t731;
  t18914 = -1.*t37*t3249;
  t18942 = t18911 + t18914;
  t18970 = t556*t463;
  t18974 = -1.*t718*t593*t1116;
  t18975 = t18970 + t18974;
  t18997 = t511*t15*t1116;
  t19003 = -1.*t37*t1234;
  t19011 = t18997 + t19003;
  t19141 = -1.*t556*t3863;
  t19146 = t718*t4584;
  t19149 = t19141 + t19146;
  t19153 = t718*t3863;
  t19156 = t556*t4584;
  t19167 = t19153 + t19156;
  t19151 = t15*t556*t19149;
  t19172 = -1.*t718*t15*t19167;
  t19176 = t19151 + t19172 + t5269;
  t5957 = t5943*t241*t5955;
  t19282 = t718*t3522;
  t19286 = t556*t593*t5955;
  t19287 = t19282 + t19286;
  t19257 = t556*t3522;
  t19263 = -1.*t718*t593*t5955;
  t19264 = t19257 + t19263;
  t19217 = -1.*t15*t556*t19149;
  t19223 = t718*t15*t19167;
  t19230 = t19217 + t19223 + t3634;
  t7648 = t5943*t5955*t117;
  t7082 = -1.*t5943*t241*t5955;
  t19246 = -1.*t19167*t18784;
  t19247 = -1.*t19149*t1581;
  t19309 = t19167*t18784;
  t19310 = t19149*t1581;
  t7509 = -1.*t5943*t5955*t117;
  t19382 = -1.*t556*t8135;
  t19383 = t718*t8399;
  t19398 = t19382 + t19383;
  t19403 = t718*t8135;
  t19408 = t556*t8399;
  t19412 = t19403 + t19408;
  t8883 = t5943*t8866*t731;
  t19478 = t556*t7930;
  t19481 = -1.*t718*t593*t8866;
  t19491 = t19478 + t19481;
  t19503 = t718*t7930;
  t19509 = t556*t593*t8866;
  t19514 = t19503 + t19509;
  t19470 = t15*t556*t19398;
  t19471 = -1.*t718*t15*t19412;
  t19473 = t8550 + t19470 + t19471;
  t8994 = t15*t7982*t731;
  t19401 = -1.*t15*t556*t19398;
  t19417 = t718*t15*t19412;
  t19425 = t8036 + t19401 + t19417;
  t14149 = -1.*t5943*t8866*t463;
  t17043 = -1.*t15*t7982*t1116;
  t19546 = t19398*t911;
  t19547 = t19412*t18828;
  t10807 = -1.*t5943*t8866*t731;
  t19437 = -1.*t19398*t911;
  t19445 = -1.*t19412*t18828;
  t10224 = -1.*t15*t7982*t731;
  t11789 = t5943*t8866*t463;
  t12555 = t15*t7982*t1116;
  t19195 = t19167*t18677;
  t19693 = t511*t19149;
  t19694 = t37*t3631;
  t19696 = t19693 + t19694;
  t19684 = -1.*t37*t19149;
  t19689 = t511*t3631;
  t19690 = t19684 + t19689;
  t19681 = t15*t37*t556;
  t19682 = t511*t593;
  t19683 = t19681 + t19682;
  t19265 = -1.*t718*t15*t19264;
  t19691 = -1.*t19683*t19690;
  t19697 = -1.*t6503*t19696;
  t19700 = t19691 + t19697 + t19172;
  t19303 = t19264*t18677;
  t19761 = t511*t19287;
  t19783 = t15*t37*t5955;
  t19784 = t19761 + t19783;
  t19743 = -1.*t37*t19287;
  t19744 = t511*t15*t5955;
  t19750 = t19743 + t19744;
  t19718 = t19683*t19690;
  t19719 = t6503*t19696;
  t19720 = t19718 + t19719 + t19223;
  t19332 = t718*t15*t19264;
  t19342 = -1.*t19167*t18603;
  t19345 = -1.*t19264*t18784;
  t19355 = -1.*t19167*t18677;
  t19361 = -1.*t19264*t18677;
  t19723 = -1.*t19696*t1719;
  t19725 = -1.*t19690*t18812;
  t19810 = t19696*t1719;
  t19817 = t19690*t18812;
  t19369 = t19167*t18603;
  t19372 = t19264*t18784;
  t19952 = t37*t7982;
  t19955 = t511*t19398;
  t19959 = t19952 + t19955;
  t19961 = t511*t7982;
  t19962 = -1.*t37*t19398;
  t19963 = t19961 + t19962;
  t19574 = t19412*t18909;
  t19974 = -1.*t6503*t19959;
  t19975 = -1.*t19683*t19963;
  t19977 = t19974 + t19975 + t19471;
  t19496 = -1.*t718*t15*t19491;
  t19549 = t19491*t18909;
  t20009 = t511*t19514;
  t20011 = t15*t37*t8866;
  t20013 = t20009 + t20011;
  t20000 = -1.*t37*t19514;
  t20005 = t511*t15*t8866;
  t20006 = t20000 + t20005;
  t19606 = t718*t15*t19491;
  t19960 = t6503*t19959;
  t19964 = t19683*t19963;
  t19965 = t19960 + t19964 + t19417;
  t19628 = -1.*t19491*t18828;
  t19629 = -1.*t19412*t18975;
  t20020 = t19959*t963;
  t20021 = t19963*t18863;
  t19655 = -1.*t19412*t18909;
  t19647 = -1.*t19491*t18909;
  t19967 = -1.*t19959*t963;
  t19968 = -1.*t19963*t18863;
  t19664 = t19491*t18828;
  t19665 = t19412*t18975;
  t19131 = t18606*t18975;
  t19132 = -1.*t18597*t19011;
  t19134 = t19131 + t19132;
  t19049 = t18606*t18603;
  t19057 = -1.*t18597*t18621;
  t19058 = t19049 + t19057;
  t1746 = 0.21935*t102;
  t2166 = -1.*t102*t2137;
  t2369 = t2326*t263;
  t2472 = t1746 + t2166 + t2369;
  t2489 = t102*t2326;
  t2499 = -0.21935*t263;
  t2550 = t2137*t263;
  t2555 = t2489 + t2499 + t2550;
  t17588 = -1.*t241*t5955;
  t17606 = t4649 + t17588;
  t17766 = t241*t17606;
  t17767 = t7630 + t6811;
  t17822 = -1.*t117*t17767;
  t18069 = t5913 + t7279;
  t18078 = t241*t18069;
  t18214 = -1.*t5955*t117;
  t18287 = t6811 + t18214;
  t18295 = t117*t18287;
  t18312 = t17766 + t17822 + t18078 + t18295;
  t19070 = t18606*t18677;
  t19071 = -1.*t18597*t18752;
  t19074 = t19070 + t19071;
  t20123 = t18606*t718*t15;
  t20124 = -1.*t18597*t19683;
  t20125 = t20123 + t20124;
  t18507 = t9453 + t16861;
  t18509 = t463*t18507;
  t18511 = -1.*t7930*t463;
  t18518 = -1.*t8866*t731;
  t18529 = t18511 + t10646 + t18518 + t8410;
  t18548 = t731*t18529;
  t18559 = t7930*t463;
  t18561 = t18559 + t8922;
  t18562 = t731*t18561;
  t18565 = t8866*t463;
  t18566 = t7930*t1116;
  t18577 = t18565 + t12252 + t12369 + t18566;
  t18583 = t3135*t18577;
  t18588 = t18509 + t18548 + t18562 + t18583;
  t18384 = 0.124881*t731;
  t18394 = 0.0875*t1116;
  t18403 = t18384 + t18394;
  t19122 = t18606*t18909;
  t19125 = -1.*t18597*t18942;
  t19126 = t19122 + t19125;
  t18475 = 0.0875*t463;
  t18491 = 0.124881*t3135;
  t18501 = t18475 + t18491;
  t19065 = 1.528*t1719*t19058;
  t19078 = 1.528*t1719*t19074;
  t19086 = 1.528*t1416*t19084;
  t19090 = 1.528*t3029*t19084;
  t19106 = 0.241*t3283*t19104;
  t19115 = 0.241*t1270*t19104;
  t19130 = 0.241*t963*t19126;
  t19135 = 0.241*t963*t19134;
  t19137 = t19065 + t19078 + t19086 + t19090 + t19106 + t19115 + t19130 + t19135;
  t6568 = t5913 + t6079 + t6091;
  t6595 = -1.*t15*t117*t6568;
  t6974 = t6724 + t6734 + t6811;
  t7062 = -1.*t15*t241*t6974;
  t7151 = -1.*t241*t5991*t5955;
  t7359 = t4649 + t7082 + t7151 + t4717 + t4828 + t7279;
  t7375 = -1.*t15*t117*t7359;
  t7507 = t241*t3522;
  t7512 = -1.*t5991*t5955*t117;
  t7513 = t6724 + t6734 + t7507 + t6811 + t7509 + t7512;
  t7595 = t15*t241*t7513;
  t7598 = t6595 + t7062 + t7375 + t7595;
  t5693 = t15*t241*t5643;
  t5802 = t5717 + t5769 + t5773;
  t5821 = t593*t5802;
  t5852 = t5693 + t5821;
  t7621 = -1.*t15*t241*t3952;
  t7666 = t5991*t5955*t117;
  t7737 = t5717 + t5769 + t7630 + t5773 + t7648 + t7666;
  t7774 = t593*t7737;
  t7797 = t7621 + t7774;
  t4070 = -1.*t15*t3952*t117;
  t4873 = t4649 + t4717 + t4828;
  t5046 = t593*t4873;
  t5080 = t4070 + t5046;
  t5887 = -1.*t15*t5643*t117;
  t6024 = t241*t5991*t5955;
  t6096 = t3522*t117;
  t6118 = t5913 + t5957 + t6024 + t6079 + t6091 + t6096;
  t6154 = t593*t6118;
  t6253 = t5887 + t6154;
  t10228 = t593*t8135*t731;
  t10345 = t9453 + t10224 + t10228;
  t10495 = t15*t1116*t10345;
  t10831 = -1.*t5991*t8866*t731;
  t10849 = t8231 + t8299 + t10646 + t10807 + t10831 + t8410;
  t10883 = t15*t463*t10849;
  t10981 = t8600 + t8648 + t8922;
  t11602 = t15*t463*t10981;
  t12074 = t5991*t8866*t463;
  t12612 = -1.*t593*t8135*t1116;
  t13021 = t11789 + t12074 + t12252 + t12369 + t12555 + t12612;
  t13029 = t15*t731*t13021;
  t13409 = t10495 + t10883 + t11602 + t13029;
  t8221 = t15*t8215*t463;
  t8413 = t8231 + t8299 + t8410;
  t8414 = t593*t8413;
  t8456 = t8221 + t8414;
  t8581 = t15*t8580*t463;
  t8719 = t7930*t3135;
  t8912 = t5991*t8866*t731;
  t8928 = t8600 + t8648 + t8719 + t8883 + t8912 + t8922;
  t8929 = t593*t8928;
  t8930 = t8581 + t8929;
  t13907 = t15*t8215*t1116;
  t14154 = -1.*t5991*t8866*t463;
  t14790 = -1.*t8399*t463;
  t17090 = t593*t8135*t1116;
  t17271 = t14149 + t14154 + t14790 + t16861 + t17043 + t17090;
  t17289 = t593*t17271;
  t17329 = t13907 + t17289;
  t8968 = t15*t8580*t731;
  t8983 = t8399*t3135;
  t9000 = -1.*t593*t8135*t731;
  t9011 = t8983 + t8994 + t9000;
  t9023 = t593*t9011;
  t9050 = t8968 + t9023;
  t18604 = t18597*t18603;
  t18661 = t18606*t18621;
  t18663 = t18604 + t18661;
  t18678 = t18597*t18677;
  t18753 = t18606*t18752;
  t18754 = t18678 + t18753;
  t18910 = t18597*t18909;
  t18962 = t18606*t18942;
  t18963 = t18910 + t18962;
  t18983 = t18597*t18975;
  t19030 = t18606*t19011;
  t19037 = t18983 + t19030;
  t19186 = t19176*t18677;
  t19190 = t19149*t2970;
  t19205 = t5717 + t19190 + t19195;
  t19209 = t718*t15*t19205;
  t19210 = t19186 + t19209;
  t19237 = t19230*t18784;
  t19248 = t4717 + t19246 + t19247;
  t19251 = t718*t15*t19248;
  t19252 = t19237 + t19251;
  t19289 = t15*t556*t19287;
  t19290 = -1.*t15*t593*t5955;
  t19291 = t19265 + t19289 + t19290;
  t19292 = t19291*t18677;
  t19297 = t19176*t18784;
  t19298 = t19287*t2970;
  t19312 = t5957 + t6079 + t19298 + t19303 + t19309 + t19310;
  t19316 = t718*t15*t19312;
  t19317 = t19292 + t19297 + t19316;
  t19321 = t19230*t18603;
  t19333 = -1.*t15*t556*t19287;
  t19336 = t15*t593*t5955;
  t19338 = t19332 + t19333 + t19336;
  t19339 = t19338*t18784;
  t19340 = -1.*t19149*t1390;
  t19346 = -1.*t19287*t1581;
  t19350 = t5717 + t7648 + t19340 + t19342 + t19345 + t19346;
  t19351 = t718*t15*t19350;
  t19352 = t19321 + t19339 + t19351;
  t19354 = -1.*t19149*t2970;
  t19358 = t6724 + t19354 + t19355;
  t19359 = t18603*t19358;
  t19360 = -1.*t19287*t2970;
  t19362 = t7082 + t4717 + t19360 + t19361 + t19246 + t19247;
  t19364 = t18784*t19362;
  t19366 = t6079 + t19309 + t19310;
  t19367 = t18784*t19366;
  t19368 = t19149*t1390;
  t19377 = t19287*t1581;
  t19378 = t6724 + t7509 + t19368 + t19369 + t19372 + t19377;
  t19379 = t18677*t19378;
  t19380 = t19359 + t19364 + t19367 + t19379;
  t19429 = t19425*t18828;
  t19450 = t8231 + t19437 + t19445;
  t19453 = t718*t15*t19450;
  t19464 = t19429 + t19453;
  t19475 = t19473*t18828;
  t19516 = t15*t556*t19514;
  t19517 = -1.*t15*t593*t8866;
  t19523 = t19496 + t19516 + t19517;
  t19533 = t19523*t18909;
  t19557 = t19514*t3249;
  t19559 = t8600 + t8883 + t19546 + t19547 + t19549 + t19557;
  t19562 = t718*t15*t19559;
  t19564 = t19475 + t19533 + t19562;
  t19573 = t19473*t18909;
  t19583 = t19398*t3249;
  t19585 = t8994 + t19574 + t19583;
  t19588 = t718*t15*t19585;
  t19594 = t19573 + t19588;
  t19608 = -1.*t15*t556*t19514;
  t19616 = t15*t593*t8866;
  t19620 = t19606 + t19608 + t19616;
  t19625 = t19620*t18828;
  t19626 = t19425*t18975;
  t19627 = -1.*t19514*t911;
  t19631 = -1.*t19398*t1234;
  t19638 = t14149 + t17043 + t19627 + t19628 + t19629 + t19631;
  t19640 = t718*t15*t19638;
  t19642 = t19625 + t19626 + t19640;
  t19645 = t8600 + t19546 + t19547;
  t19646 = t18828*t19645;
  t19649 = -1.*t19514*t3249;
  t19650 = t8231 + t10807 + t19437 + t19445 + t19647 + t19649;
  t19654 = t18828*t19650;
  t19656 = -1.*t19398*t3249;
  t19657 = t10224 + t19655 + t19656;
  t19661 = t18975*t19657;
  t19663 = t19514*t911;
  t19666 = t19398*t1234;
  t19668 = t11789 + t12555 + t19663 + t19664 + t19665 + t19666;
  t19669 = t18909*t19668;
  t19671 = t19646 + t19654 + t19661 + t19669;
  t19703 = t19700*t3029;
  t19704 = t19696*t3029;
  t19709 = t19690*t18752;
  t19711 = t19195 + t19704 + t19709;
  t19713 = t6503*t19711;
  t19714 = t19703 + t19713;
  t19721 = t19720*t1719;
  t19727 = t19246 + t19723 + t19725;
  t19730 = t6503*t19727;
  t19731 = t19721 + t19730;
  t19760 = -1.*t19683*t19750;
  t19785 = -1.*t6503*t19784;
  t19789 = t19760 + t19785 + t19265;
  t19794 = t19789*t3029;
  t19795 = t19700*t1719;
  t19799 = t19784*t3029;
  t19807 = t19750*t18752;
  t19820 = t19303 + t19309 + t19799 + t19807 + t19810 + t19817;
  t19831 = t6503*t19820;
  t19836 = t19794 + t19795 + t19831;
  t19848 = t19720*t1416;
  t19862 = t19683*t19750;
  t19865 = t6503*t19784;
  t19867 = t19862 + t19865 + t19332;
  t19868 = t19867*t1719;
  t19873 = -1.*t19696*t1416;
  t19874 = -1.*t19690*t18621;
  t19877 = -1.*t19784*t1719;
  t19884 = -1.*t19750*t18812;
  t19886 = t19342 + t19345 + t19873 + t19874 + t19877 + t19884;
  t19893 = t6503*t19886;
  t19894 = t19848 + t19868 + t19893;
  t19901 = -1.*t19696*t3029;
  t19907 = -1.*t19690*t18752;
  t19908 = t19355 + t19901 + t19907;
  t19909 = t1416*t19908;
  t19910 = -1.*t19784*t3029;
  t19912 = -1.*t19750*t18752;
  t19916 = t19361 + t19246 + t19910 + t19912 + t19723 + t19725;
  t19919 = t1719*t19916;
  t19920 = t19309 + t19810 + t19817;
  t19927 = t1719*t19920;
  t19929 = t19696*t1416;
  t19931 = t19690*t18621;
  t19941 = t19784*t1719;
  t19942 = t19750*t18812;
  t19948 = t19369 + t19372 + t19929 + t19931 + t19941 + t19942;
  t19949 = t3029*t19948;
  t19950 = t19909 + t19919 + t19927 + t19949;
  t19966 = t19965*t963;
  t19969 = t19445 + t19967 + t19968;
  t19971 = t6503*t19969;
  t19972 = t19966 + t19971;
  t19980 = t19977*t3283;
  t19988 = t19959*t3283;
  t19989 = t19963*t18942;
  t19990 = t19574 + t19988 + t19989;
  t19993 = t6503*t19990;
  t19994 = t19980 + t19993;
  t19998 = t19977*t963;
  t20007 = -1.*t19683*t20006;
  t20014 = -1.*t6503*t20013;
  t20016 = t20007 + t20014 + t19496;
  t20017 = t20016*t3283;
  t20022 = t20013*t3283;
  t20023 = t20006*t18942;
  t20024 = t19547 + t19549 + t20020 + t20021 + t20022 + t20023;
  t20025 = t6503*t20024;
  t20026 = t19998 + t20017 + t20025;
  t20032 = t19683*t20006;
  t20033 = t6503*t20013;
  t20034 = t20032 + t20033 + t19606;
  t20037 = t20034*t963;
  t20038 = t19965*t1270;
  t20039 = -1.*t20013*t963;
  t20041 = -1.*t20006*t18863;
  t20043 = -1.*t19959*t1270;
  t20044 = -1.*t19963*t19011;
  t20049 = t19628 + t19629 + t20039 + t20041 + t20043 + t20044;
  t20050 = t6503*t20049;
  t20051 = t20037 + t20038 + t20050;
  t20060 = t19547 + t20020 + t20021;
  t20065 = t963*t20060;
  t20067 = -1.*t19959*t3283;
  t20068 = -1.*t19963*t18942;
  t20074 = t19655 + t20067 + t20068;
  t20077 = t1270*t20074;
  t20079 = -1.*t20013*t3283;
  t20082 = -1.*t20006*t18942;
  t20083 = t19445 + t19647 + t19967 + t19968 + t20079 + t20082;
  t20085 = t963*t20083;
  t20087 = t20013*t963;
  t20089 = t20006*t18863;
  t20091 = t19959*t1270;
  t20093 = t19963*t19011;
  t20099 = t19664 + t19665 + t20087 + t20089 + t20091 + t20093;
  t20100 = t3283*t20099;
  t20101 = t20065 + t20077 + t20085 + t20100;
  t20262 = t718*t15*t18597;
  t20264 = t18606*t19683;
  t20265 = t20262 + t20264;
  t18667 = 1.528*t1719*t18663;
  t18760 = 1.528*t1719*t18754;
  t18818 = 1.528*t1416*t18814;
  t18822 = 1.528*t3029*t18814;
  t18876 = 0.241*t3283*t18875;
  t18879 = 0.241*t1270*t18875;
  t18966 = 0.241*t963*t18963;
  t19043 = 0.241*t963*t19037;
  t19045 = t18667 + t18760 + t18818 + t18822 + t18876 + t18879 + t18966 + t19043;
  t20172 = 1.528*t19058*t18814;
  t20175 = 1.528*t19074*t18814;
  t20178 = 1.528*t18663*t19084;
  t20179 = 1.528*t18754*t19084;
  t20180 = 0.241*t19104*t18963;
  t20183 = 0.241*t18875*t19126;
  t20184 = 0.241*t19104*t19037;
  t20186 = 0.241*t18875*t19134;
  t20187 = t20172 + t20175 + t20178 + t20179 + t20180 + t20183 + t20184 + t20186;
  t20356 = 5.e-6*t963;
  t19717 = 1.528*t1416*t19714;
  t19742 = 1.528*t1719*t19731;
  t19840 = 1.528*t1719*t19836;
  t19899 = 1.528*t3029*t19894;
  t19951 = 1.528*t6503*t19950;
  t19973 = 0.241*t963*t19972;
  t19995 = 0.241*t1270*t19994;
  t20027 = 0.241*t963*t20026;
  t20056 = 0.241*t3283*t20051;
  t20102 = 0.241*t6503*t20101;
  t20104 = t19717 + t19742 + t19840 + t19899 + t19951 + t19973 + t19995 + t20027 + t20056 + t20102;
  t20325 = 1.528*t18663*t19714;
  t20326 = 1.528*t18814*t19731;
  t20330 = 1.528*t18814*t19836;
  t20334 = 1.528*t18754*t19894;
  t20335 = 1.528*t20265*t19950;
  t20336 = 0.241*t18875*t19972;
  t20340 = 0.241*t19037*t19994;
  t20341 = 0.241*t18875*t20026;
  t20344 = 0.241*t18963*t20051;
  t20345 = 0.241*t20265*t20101;
  t20351 = t20325 + t20326 + t20330 + t20334 + t20335 + t20336 + t20340 + t20341 + t20344 + t20345;
  t20222 = 1.528*t19058*t19714;
  t20224 = 1.528*t19084*t19731;
  t20225 = 1.528*t19084*t19836;
  t20226 = 1.528*t19074*t19894;
  t20228 = 1.528*t20125*t19950;
  t20232 = 0.241*t19104*t19972;
  t20233 = 0.241*t19134*t19994;
  t20235 = 0.241*t19104*t20026;
  t20236 = 0.241*t19126*t20051;
  t20237 = 0.241*t20125*t20101;
  t20238 = t20222 + t20224 + t20225 + t20226 + t20228 + t20232 + t20233 + t20235 + t20236 + t20237;
  t20362 = -1.*t511*t1390;
  t20363 = t2936 + t20362;
  t20364 = 1.e-5*t20363;
  t20365 = 0.000085*t1719;
  t20387 = 0.00025*t1719;
  t20433 = -3.e-6*t963;
  t20385 = 0.009916*t1416;
  t20389 = t20385 + t20387;
  t20391 = 0.000085*t6503;
  t20392 = 0.001783*t3029;
  t20393 = t20391 + t20392 + t20387;
  t20395 = 0.00025*t1416;
  t20397 = 0.001783*t1719;
  t20398 = t20395 + t20397;
  t20400 = t511*t15*t556;
  t20401 = -1.*t37*t593;
  t20402 = t20400 + t20401;
  t20403 = 1.e-5*t20402;
  t20404 = 0.00025*t3029;
  t20406 = 0.009916*t1719;
  t20407 = t20403 + t20404 + t20406;
  t20412 = t1719*t19908;
  t20414 = t3029*t19920;
  t20415 = t20412 + t20414;
  t20427 = 0.006182*t963;
  t20429 = -3.e-6*t3283;
  t20430 = t20427 + t20429;
  t20432 = 5.e-6*t6503;
  t20435 = 0.000035*t3283;
  t20440 = t20432 + t20433 + t20435;
  t20443 = 0.000035*t963;
  t20444 = -3.e-6*t1270;
  t20446 = t20443 + t20444;
  t20448 = 0.006182*t1270;
  t20449 = t20433 + t20448;
  t20452 = t3283*t20060;
  t20453 = t963*t20074;
  t20454 = t20452 + t20453;
  t20381 = t20364 + t20365;
  t20571 = 5.e-6*t18828;
  t19216 = 1.528*t1416*t19210;
  t19253 = 1.528*t1719*t19252;
  t19320 = 1.528*t1719*t19317;
  t19353 = 1.528*t3029*t19352;
  t19381 = 1.528*t6503*t19380;
  t19467 = 0.241*t963*t19464;
  t19570 = 0.241*t963*t19564;
  t19603 = 0.241*t1270*t19594;
  t19644 = 0.241*t3283*t19642;
  t19676 = 0.241*t6503*t19671;
  t19677 = t19216 + t19253 + t19320 + t19353 + t19381 + t19467 + t19570 + t19603 + t19644 + t19676;
  t20308 = 1.528*t18663*t19210;
  t20309 = 1.528*t18814*t19252;
  t20311 = 1.528*t18814*t19317;
  t20312 = 1.528*t18754*t19352;
  t20313 = 1.528*t20265*t19380;
  t20314 = 0.241*t18875*t19464;
  t20315 = 0.241*t18875*t19564;
  t20316 = 0.241*t19594*t19037;
  t20318 = 0.241*t18963*t19642;
  t20319 = 0.241*t20265*t19671;
  t20322 = t20308 + t20309 + t20311 + t20312 + t20313 + t20314 + t20315 + t20316 + t20318 + t20319;
  t20198 = 1.528*t19058*t19210;
  t20199 = 1.528*t19084*t19252;
  t20207 = 1.528*t19084*t19317;
  t20208 = 1.528*t19074*t19352;
  t20210 = 1.528*t20125*t19380;
  t20211 = 0.241*t19104*t19464;
  t20213 = 0.241*t19104*t19564;
  t20214 = 0.241*t19594*t19134;
  t20216 = 0.241*t19126*t19642;
  t20218 = 0.241*t20125*t19671;
  t20219 = t20198 + t20199 + t20207 + t20208 + t20210 + t20211 + t20213 + t20214 + t20216 + t20218;
  t20576 = 1.e-5*t18677;
  t20577 = 0.000085*t18784;
  t20600 = 0.00025*t18784;
  t20519 = t18784*t19358;
  t20520 = t18677*t19366;
  t20522 = t20519 + t20520;
  t20422 = t15*t241*t6568;
  t20423 = -1.*t15*t117*t6974;
  t20424 = t20422 + t20423;
  t20639 = -3.e-6*t18828;
  t20538 = t18909*t19645;
  t20540 = t18828*t19657;
  t20541 = t20538 + t20540;
  t20459 = t15*t463*t10345;
  t20460 = t15*t731*t10981;
  t20461 = t20459 + t20460;
  t20599 = 0.009916*t18603;
  t20602 = t20599 + t20600;
  t20604 = 0.000085*t718*t15;
  t20605 = 0.001783*t18677;
  t20608 = t20604 + t20605 + t20600;
  t20610 = 0.00025*t18603;
  t20611 = 0.001783*t18784;
  t20616 = t20610 + t20611;
  t20619 = -1.e-5*t718*t15;
  t20620 = 0.00025*t18677;
  t20621 = 0.009916*t18784;
  t20623 = t20619 + t20620 + t20621;
  t20481 = t241*t17767;
  t20482 = t117*t18069;
  t20483 = t20481 + t20482;
  t20632 = 0.006182*t18828;
  t20634 = -3.e-6*t18909;
  t20635 = t20632 + t20634;
  t20638 = 5.e-6*t718*t15;
  t20640 = 0.000035*t18909;
  t20643 = t20638 + t20639 + t20640;
  t20646 = 0.000035*t18828;
  t20648 = -3.e-6*t18975;
  t20649 = t20646 + t20648;
  t20651 = 0.006182*t18975;
  t20652 = t20639 + t20651;
  t20497 = t731*t18507;
  t20498 = t3135*t18561;
  t20501 = t20497 + t20498;
  t20597 = t20576 + t20577;
  t20513 = 1.528*t19317*t19714;
  t20514 = 1.528*t19352*t19731;
  t20515 = 1.528*t19380*t20415;
  t20516 = 1.528*t19210*t19836;
  t20518 = 1.528*t19252*t19894;
  t20524 = 1.528*t20522*t19950;
  t20532 = 0.241*t19642*t19972;
  t20533 = 0.241*t19671*t20454;
  t20534 = 0.241*t19564*t19994;
  t20535 = 0.241*t19594*t20026;
  t20536 = 0.241*t19464*t20051;
  t20542 = 0.241*t20541*t20101;
  t20733 = 5.e-6*t15*t463;
  t5160 = 1.528*t1719*t5080;
  t5883 = 1.528*t1416*t5852;
  t6312 = 1.528*t1719*t6253;
  t7603 = 1.528*t6503*t7598;
  t7804 = 1.528*t3029*t7797;
  t8540 = 0.241*t963*t8456;
  t8948 = 0.241*t963*t8930;
  t9384 = 0.241*t9050*t1270;
  t13830 = 0.241*t6503*t13409;
  t17330 = 0.241*t3283*t17329;
  t17484 = t5160 + t5883 + t6312 + t7603 + t7804 + t8540 + t8948 + t9384 + t13830 + t17330;
  t20766 = -0.00025*t15*t117;
  t20739 = 1.e-5*t15*t241;
  t20740 = -0.000085*t15*t117;
  t20795 = -3.e-6*t15*t463;
  t20748 = 0.00025*t15*t241;
  t20749 = -1.e-5*t593;
  t20750 = -0.009916*t15*t117;
  t20752 = t20748 + t20749 + t20750;
  t20756 = -0.00025*t15*t241;
  t20759 = -0.001783*t15*t117;
  t20760 = t20756 + t20759;
  t20763 = -0.009916*t15*t241;
  t20768 = t20763 + t20766;
  t20770 = 0.001783*t15*t241;
  t20772 = 0.000085*t593;
  t20774 = t20770 + t20772 + t20766;
  t20784 = 0.006182*t15*t463;
  t20786 = -3.e-6*t15*t731;
  t20788 = t20784 + t20786;
  t20793 = 5.e-6*t593;
  t20796 = 0.000035*t15*t731;
  t20798 = t20793 + t20795 + t20796;
  t20802 = 0.000035*t15*t463;
  t20803 = -3.e-6*t15*t1116;
  t20804 = t20802 + t20803;
  t20806 = 0.006182*t15*t1116;
  t20807 = t20795 + t20806;
  t20285 = 1.528*t20265*t7598;
  t20286 = 1.528*t5852*t18663;
  t20287 = 1.528*t7797*t18754;
  t20288 = 1.528*t5080*t18814;
  t20289 = 1.528*t6253*t18814;
  t20290 = 0.241*t20265*t13409;
  t20291 = 0.241*t8456*t18875;
  t20293 = 0.241*t8930*t18875;
  t20294 = 0.241*t17329*t18963;
  t20295 = 0.241*t9050*t19037;
  t20296 = t20285 + t20286 + t20287 + t20288 + t20289 + t20290 + t20291 + t20293 + t20294 + t20295;
  t20146 = 1.528*t20125*t7598;
  t20147 = 1.528*t5852*t19058;
  t20148 = 1.528*t7797*t19074;
  t20152 = 1.528*t5080*t19084;
  t20153 = 1.528*t6253*t19084;
  t20156 = 0.241*t20125*t13409;
  t20158 = 0.241*t8456*t19104;
  t20161 = 0.241*t8930*t19104;
  t20163 = 0.241*t17329*t19126;
  t20167 = 0.241*t9050*t19134;
  t20168 = t20146 + t20147 + t20148 + t20152 + t20153 + t20156 + t20158 + t20161 + t20163 + t20167;
  t20776 = t20739 + t20740;
  t20625 = 1.528*t6253*t19210;
  t20626 = 1.528*t7797*t19252;
  t20627 = 1.528*t7598*t20522;
  t20628 = 1.528*t5852*t19317;
  t20629 = 1.528*t5080*t19352;
  t20630 = 1.528*t20424*t19380;
  t20654 = 0.241*t17329*t19464;
  t20655 = 0.241*t9050*t19564;
  t20656 = 0.241*t13409*t20541;
  t20657 = 0.241*t8930*t19594;
  t20658 = 0.241*t8456*t19642;
  t20659 = 0.241*t20461*t19671;
  t20410 = 1.528*t6253*t19714;
  t20411 = 1.528*t7797*t19731;
  t20417 = 1.528*t7598*t20415;
  t20418 = 1.528*t5852*t19836;
  t20421 = 1.528*t5080*t19894;
  t20425 = 1.528*t20424*t19950;
  t20451 = 0.241*t17329*t19972;
  t20455 = 0.241*t13409*t20454;
  t20456 = 0.241*t8930*t19994;
  t20457 = 0.241*t9050*t20026;
  t20458 = 0.241*t8456*t20051;
  t20462 = 0.241*t20461*t20101;
  t20891 = 5.e-6*t731;
  t17570 = 0.08711128*t117*t1416;
  t17587 = 0.08711128*t117*t3029;
  t18344 = 1.528*t6503*t18312;
  t18351 = -0.009008821*t731*t963;
  t18412 = 0.241*t18403*t963;
  t18415 = -0.009008821*t463*t3283;
  t18506 = 0.241*t18501*t1270;
  t18592 = 0.241*t6503*t18588;
  t18593 = t17570 + t17587 + t18344 + t18351 + t18412 + t18415 + t18506 + t18592;
  t20923 = 0.00025*t241;
  t20823 = 0.08711128*t117*t5080;
  t20824 = 0.08711128*t241*t5852;
  t20825 = 0.08711128*t117*t6253;
  t20826 = 1.528*t20424*t18312;
  t20827 = 1.528*t20483*t7598;
  t20828 = -0.08711128*t241*t7797;
  t20936 = -3.e-6*t731;
  t20834 = 0.241*t18403*t9050;
  t20835 = -0.009008821*t463*t8456;
  t20836 = 0.241*t18501*t8930;
  t20837 = 0.241*t20501*t13409;
  t20838 = -0.009008821*t731*t17329;
  t20839 = 0.241*t20461*t18588;
  t20924 = -0.009916*t117;
  t20925 = t20923 + t20924;
  t20927 = 0.001783*t117;
  t20928 = t20923 + t20927;
  t20909 = 0.001783*t241;
  t20910 = -0.00025*t117;
  t20912 = t20909 + t20910;
  t20918 = 0.009916*t241;
  t20919 = 0.00025*t117;
  t20920 = t20918 + t20919;
  t20935 = 0.006182*t463;
  t20937 = t20935 + t20936;
  t20939 = 0.000035*t3135;
  t20942 = t20939 + t20936;
  t20945 = -3.e-6*t463;
  t20946 = 0.000035*t731;
  t20947 = t20945 + t20946;
  t20949 = -3.e-6*t3135;
  t20950 = 0.006182*t731;
  t20951 = t20949 + t20950;
  t20266 = 1.528*t20265*t18312;
  t20268 = 0.08711128*t117*t18663;
  t20270 = 0.08711128*t117*t18754;
  t20271 = 0.241*t20265*t18588;
  t20272 = -0.009008821*t731*t18875;
  t20273 = 0.241*t18403*t18875;
  t20275 = -0.009008821*t463*t18963;
  t20276 = 0.241*t18501*t19037;
  t20277 = t20266 + t20268 + t20270 + t20271 + t20272 + t20273 + t20275 + t20276;
  t20126 = 1.528*t20125*t18312;
  t20127 = 0.08711128*t117*t19058;
  t20128 = 0.08711128*t117*t19074;
  t20129 = 0.241*t20125*t18588;
  t20130 = -0.009008821*t731*t19104;
  t20134 = 0.241*t18403*t19104;
  t20136 = -0.009008821*t463*t19126;
  t20138 = 0.241*t18501*t19134;
  t20140 = t20126 + t20127 + t20128 + t20129 + t20130 + t20134 + t20136 + t20138;
  t20914 = 0.000085*t241;
  t20915 = 1.e-5*t117;
  t20916 = t20914 + t20915;
  t20669 = 0.08711128*t241*t19210;
  t20670 = 0.08711128*t117*t19252;
  t20672 = 1.528*t18312*t20522;
  t20673 = 0.08711128*t117*t19317;
  t20674 = -0.08711128*t241*t19352;
  t20676 = 1.528*t20483*t19380;
  t20684 = -0.009008821*t463*t19464;
  t20685 = 0.241*t18501*t19564;
  t20686 = 0.241*t18588*t20541;
  t20687 = 0.241*t18403*t19594;
  t20688 = -0.009008821*t731*t19642;
  t20689 = 0.241*t20501*t19671;
  t20474 = 0.08711128*t241*t19714;
  t20475 = 0.08711128*t117*t19731;
  t20476 = 1.528*t18312*t20415;
  t20479 = 0.08711128*t117*t19836;
  t20480 = -0.08711128*t241*t19894;
  t20484 = 1.528*t20483*t19950;
  t20489 = -0.009008821*t463*t19972;
  t20490 = 0.241*t18588*t20454;
  t20492 = 0.241*t18403*t19994;
  t20493 = 0.241*t18501*t20026;
  t20494 = -0.009008821*t731*t20051;
  t20502 = 0.241*t20501*t20101;
  t20896 = -0.00270221251488*t241;
  t20897 = 0.00005198763696*t117;
  t20898 = -0.009008821*t463*t2472;
  t20899 = 0.241*t2555*t18403;
  t20902 = t20896 + t20897 + t20891 + t20898 + t20899;
  t1425 = -0.048889888*t1416;
  t1733 = 0.000736496*t1719;
  t2475 = 0.241*t2472*t963;
  t2594 = 0.241*t2555*t1270;
  t2602 = t1425 + t1733 + t2475 + t2594;
  t20741 = -0.048889888*t6253;
  t20742 = 0.000736496*t7797;
  t20743 = 0.241*t2555*t8930;
  t20744 = 0.241*t2472*t17329;
  t20745 = t20739 + t20740 + t20741 + t20742 + t20733 + t20743 + t20744;
  t20250 = -0.048889888*t18663;
  t20251 = 0.000736496*t18814;
  t20252 = 0.241*t2472*t18875;
  t20253 = 0.241*t2555*t19037;
  t20256 = t20250 + t20251 + t20252 + t20253;
  t20114 = -0.048889888*t19058;
  t20115 = 0.000736496*t19084;
  t20118 = 0.241*t2472*t19104;
  t20120 = 0.241*t2555*t19134;
  t20121 = t20114 + t20115 + t20118 + t20120;
  t20578 = -0.048889888*t19317;
  t20583 = 0.000736496*t19352;
  t20584 = 0.241*t2555*t19564;
  t20586 = 0.241*t2472*t19642;
  t20589 = t20576 + t20577 + t20578 + t20583 + t20571 + t20584 + t20586;
  t20366 = -0.048889888*t19836;
  t20367 = 0.000736496*t19894;
  t20368 = 0.241*t2555*t20026;
  t20370 = 0.241*t2472*t20051;
  t20371 = t20364 + t20365 + t20366 + t20367 + t20356 + t20368 + t20370;
  t20890 = -0.000019783370916*t463;
  t20892 = -0.02973458*t18403;
  t20893 = t20890 + t20891 + t20892;
  t1002 = 0.000529236*t963;
  t1276 = -0.02973458*t1270;
  t1283 = t1002 + t1276;
  t20734 = -0.02973458*t8930;
  t20735 = 0.000529236*t17329;
  t20737 = t20733 + t20734 + t20735;
  t20243 = 0.000529236*t18875;
  t20244 = -0.02973458*t19037;
  t20245 = t20243 + t20244;
  t20109 = 0.000529236*t19104;
  t20110 = -0.02973458*t19134;
  t20112 = t20109 + t20110;
  t20572 = -0.02973458*t19564;
  t20573 = 0.000529236*t19642;
  t20574 = t20571 + t20572 + t20573;
  t20357 = -0.02973458*t20026;
  t20358 = 0.000529236*t20051;
  t20360 = t20356 + t20357 + t20358;
  p_output1[0]=var2[7]*(-0.5*(3.056*t1416*t1719 + 3.056*t1719*t3029 + 0.482*t1270*t963 + 0.482*t3283*t963)*var2[0] - 0.5*t19137*var2[1] - 0.5*t19045*var2[2] - 0.5*t20104*var2[3] - 0.5*t19677*var2[4] - 0.5*t17484*var2[5] - 0.5*t18593*var2[6] - 0.5*t2602*var2[7] - 0.5*t1283*var2[8]);
  p_output1[1]=var2[7]*(-0.5*t19137*var2[0] - 0.5*(3.056*t19058*t19084 + 3.056*t19074*t19084 + 0.482*t19104*t19126 + 0.482*t19104*t19134)*var2[1] - 0.5*t20187*var2[2] - 0.5*t20238*var2[3] - 0.5*t20219*var2[4] - 0.5*t20168*var2[5] - 0.5*t20140*var2[6] - 0.5*t20121*var2[7] - 0.5*t20112*var2[8]);
  p_output1[2]=var2[7]*(-0.5*t19045*var2[0] - 0.5*t20187*var2[1] - 0.5*(3.056*t18663*t18814 + 3.056*t18754*t18814 + 0.482*t18875*t18963 + 0.482*t18875*t19037)*var2[2] - 0.5*t20351*var2[3] - 0.5*t20322*var2[4] - 0.5*t20296*var2[5] - 0.5*t20277*var2[6] - 0.5*t20256*var2[7] - 0.5*t20245*var2[8]);
  p_output1[3]=var2[7]*(-0.5*t20104*var2[0] - 0.5*t20238*var2[1] - 0.5*t20351*var2[2] - 0.5*(3.056*t19714*t19836 + 3.056*t19731*t19894 + 0.482*t19994*t20026 + 0.482*t19972*t20051 + t1719*t20389 + t1719*t20393 + t1416*t20407 + 3.056*t19950*t20415 + t1270*t20430 + 0.482*t20101*t20454 + t20398*t3029 + t20446*t3283 + t20381*t6503 + t20440*t963 + t20449*t963 + 5.e-6*t6503*t963)*var2[3] - 0.5*(t18784*t20389 + t18784*t20393 + t18677*t20398 + t18603*t20407 + t18975*t20430 + t18828*t20440 + t18909*t20446 + t18828*t20449 + t20513 + t20514 + t20515 + t20516 + t20518 + t20524 + t20532 + t20533 + t20534 + t20535 + t20536 + t20542 + t15*t20381*t718 + 5.e-6*t15*t718*t963)*var2[4] - 0.5*(-1.*t117*t15*t20389 - 1.*t117*t15*t20393 + t20410 + t20411 + t20417 + t20418 + t20421 + t20425 + t1116*t15*t20430 + t20451 + t20455 + t20456 + t20457 + t20458 + t20462 + t15*t20398*t241 - 1.*t15*t20407*t241 + t15*t20440*t463 + t15*t20449*t463 + t20381*t593 + t15*t20446*t731 + 5.e-6*t593*t963)*var2[5] - 0.5*(t117*t20398 - 1.*t117*t20407 + t20474 + t20475 + t20476 + t20479 + t20480 + t20484 + t20489 + t20490 + t20492 + t20493 + t20494 + t20502 + t20389*t241 + t20393*t241 + t20446*t3135 + t20430*t463 + t20440*t731 + t20449*t731)*var2[6] - 0.5*t20371*var2[7] - 0.5*t20360*var2[8]);
  p_output1[4]=var2[7]*(-0.5*t19677*var2[0] - 0.5*t20219*var2[1] - 0.5*t20322*var2[2] - 0.5*(t20513 + t20514 + t20515 + t20516 + t20518 + t20524 + t20532 + t20533 + t20534 + t20535 + t20536 + t20542 + t1719*t20602 + t1719*t20608 + t1416*t20623 + t1270*t20635 + t20616*t3029 + t20649*t3283 + 5.e-6*t18828*t6503 + t20597*t6503 + t20643*t963 + t20652*t963)*var2[3] - 0.5*(3.056*t19210*t19317 + 3.056*t19252*t19352 + 0.482*t19564*t19594 + 0.482*t19464*t19642 + 3.056*t19380*t20522 + 0.482*t19671*t20541 + t18784*t20602 + t18784*t20608 + t18677*t20616 + t18603*t20623 + t18975*t20635 + t18828*t20643 + t18909*t20649 + t18828*t20652 + 5.e-6*t15*t18828*t718 + t15*t20597*t718)*var2[4] - 0.5*(-1.*t117*t15*t20602 - 1.*t117*t15*t20608 + t20625 + t20626 + t20627 + t20628 + t20629 + t20630 + t1116*t15*t20635 + t20654 + t20655 + t20656 + t20657 + t20658 + t20659 + t15*t20616*t241 - 1.*t15*t20623*t241 + t15*t20643*t463 + t15*t20652*t463 + 5.e-6*t18828*t593 + t20597*t593 + t15*t20649*t731)*var2[5] - 0.5*(t117*t20616 - 1.*t117*t20623 + t20669 + t20670 + t20672 + t20673 + t20674 + t20676 + t20684 + t20685 + t20686 + t20687 + t20688 + t20689 + t20602*t241 + t20608*t241 + t20649*t3135 + t20635*t463 + t20643*t731 + t20652*t731)*var2[6] - 0.5*t20589*var2[7] - 0.5*t20574*var2[8]);
  p_output1[5]=var2[7]*(-0.5*t17484*var2[0] - 0.5*t20168*var2[1] - 0.5*t20296*var2[2] - 0.5*(t20410 + t20411 + t20417 + t20418 + t20421 + t20425 + t20451 + t20455 + t20456 + t20457 + t20458 + t20462 + t1416*t20752 + t1719*t20768 + t1719*t20774 + t1270*t20788 + t20760*t3029 + t20804*t3283 + t20776*t6503 + 5.e-6*t15*t463*t6503 + t20798*t963 + t20807*t963)*var2[3] - 0.5*(t20625 + t20626 + t20627 + t20628 + t20629 + t20630 + t20654 + t20655 + t20656 + t20657 + t20658 + t20659 + t18603*t20752 + t18677*t20760 + t18784*t20768 + t18784*t20774 + t18975*t20788 + t18828*t20798 + t18909*t20804 + t18828*t20807 + t15*t20776*t718 + 5.e-6*t463*t5943*t718)*var2[4] - 0.5*(0.482*t13409*t20461 - 1.*t117*t15*t20768 - 1.*t117*t15*t20774 + t1116*t15*t20788 - 1.*t15*t20752*t241 + t15*t20760*t241 + t15*t20798*t463 + t15*t20807*t463 + t20776*t593 + 5.e-6*t15*t463*t593 + 3.056*t5852*t6253 + t15*t20804*t731 + 3.056*t20424*t7598 + 3.056*t5080*t7797 + 0.482*t17329*t8456 + 0.482*t8930*t9050)*var2[5] - 0.5*(-1.*t117*t20752 + t117*t20760 + t20823 + t20824 + t20825 + t20826 + t20827 + t20828 + t20834 + t20835 + t20836 + t20837 + t20838 + t20839 + t20768*t241 + t20774*t241 + t20804*t3135 + t20788*t463 + t20798*t731 + t20807*t731)*var2[6] - 0.5*t20745*var2[7] - 0.5*t20737*var2[8]);
  p_output1[6]=var2[7]*(-0.5*t18593*var2[0] - 0.5*t20140*var2[1] - 0.5*t20277*var2[2] - 0.5*(t20474 + t20475 + t20476 + t20479 + t20480 + t20484 + t20489 + t20490 + t20492 + t20493 + t20494 + t20502 + t1416*t20920 + t1719*t20925 + t1719*t20928 + t1270*t20951 + t20912*t3029 + t20947*t3283 + t20916*t6503 + 5.e-6*t6503*t731 + t20937*t963 + t20942*t963)*var2[3] - 0.5*(t20669 + t20670 + t20672 + t20673 + t20674 + t20676 + t20684 + t20685 + t20686 + t20687 + t20688 + t20689 + t18677*t20912 + t18603*t20920 + t18784*t20925 + t18784*t20928 + t18828*t20937 + t18828*t20942 + t18909*t20947 + t18975*t20951 + t15*t20916*t718 + 5.e-6*t15*t718*t731)*var2[4] - 0.5*(t20823 + t20824 + t20825 + t20826 + t20827 + t20828 + t20834 + t20835 + t20836 + t20837 + t20838 + t20839 - 1.*t117*t15*t20925 - 1.*t117*t15*t20928 + t1116*t15*t20951 + t15*t20912*t241 - 1.*t15*t20920*t241 + t15*t20937*t463 + t15*t20942*t463 + t20916*t593 + t15*t20947*t731 + 5.e-6*t593*t731)*var2[5] - 0.5*(0.482*t18403*t18501 + 3.056*t18312*t20483 + 0.482*t18588*t20501 + t117*t20912 - 1.*t117*t20920 + t20925*t241 + t20928*t241 + t20947*t3135 + t20951*t463 + t20937*t731 + t20942*t731 + 0.000673517475602*t463*t731)*var2[6] - 0.5*t20902*var2[7] - 0.5*t20893*var2[8]);
  p_output1[7]=(-0.5*t2602*var2[0] - 0.5*t20121*var2[1] - 0.5*t20256*var2[2] - 0.5*t20371*var2[3] - 0.5*t20589*var2[4] - 0.5*t20745*var2[5] - 0.5*t20902*var2[6])*var2[7];
  p_output1[8]=(-0.5*t1283*var2[0] - 0.5*t20112*var2[1] - 0.5*t20245*var2[2] - 0.5*t20360*var2[3] - 0.5*t20574*var2[4] - 0.5*t20737*var2[5] - 0.5*t20893*var2[6])*var2[7];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec8_laikago_description.hh"

namespace SymFunction
{

void Ce2_vec8_laikago_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
