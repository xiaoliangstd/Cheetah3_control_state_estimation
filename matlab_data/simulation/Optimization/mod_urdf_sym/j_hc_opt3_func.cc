/*
 * Automatically Generated from Mathematica.
 * Thu 12 Dec 2019 13:01:28 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t40;
  double t114;
  double t48;
  double t24;
  double t126;
  double t96;
  double t130;
  double t157;
  double t210;
  double t212;
  double t217;
  double t240;
  double t281;
  double t198;
  double t275;
  double t287;
  double t313;
  double t316;
  double t321;
  double t630;
  double t637;
  double t655;
  double t333;
  double t710;
  double t732;
  double t755;
  double t411;
  double t431;
  double t766;
  double t769;
  double t799;
  double t476;
  double t487;
  double t1050;
  double t1106;
  double t1107;
  double t1128;
  double t1513;
  double t1391;
  double t1579;
  double t1580;
  double t1594;
  double t1600;
  double t1618;
  double t1623;
  double t1523;
  double t1667;
  double t1678;
  double t1834;
  double t1839;
  double t1849;
  double t1700;
  double t1721;
  double t1993;
  double t2005;
  double t2019;
  double t1386;
  double t2275;
  double t2264;
  double t2331;
  double t2332;
  double t2337;
  double t2338;
  double t2343;
  double t2347;
  double t1809;
  double t2277;
  double t2375;
  double t2376;
  double t2471;
  double t2472;
  double t2478;
  double t2401;
  double t2403;
  double t1983;
  double t2624;
  double t2661;
  double t2685;
  double t159;
  double t2854;
  double t2819;
  double t2961;
  double t2963;
  double t2973;
  double t2990;
  double t3001;
  double t3008;
  double t678;
  double t2871;
  double t3028;
  double t3031;
  double t3101;
  double t3105;
  double t3106;
  double t3048;
  double t3070;
  double t1098;
  double t3255;
  double t3274;
  double t3284;
  double t3614;
  double t3616;
  double t3630;
  double t3646;
  double t3651;
  double t3667;
  double t3777;
  double t3801;
  double t3802;
  double t3808;
  double t3819;
  double t3826;
  double t3933;
  double t3938;
  double t3946;
  double t3947;
  double t3957;
  double t3968;
  double t3483;
  double t4105;
  double t4114;
  double t4121;
  double t4123;
  double t4124;
  double t4132;
  double t3738;
  double t4214;
  double t4217;
  double t4237;
  double t4240;
  double t4246;
  double t4254;
  double t3900;
  double t4376;
  double t4377;
  double t4402;
  double t4405;
  double t4424;
  double t4436;
  double t4040;
  double t4568;
  double t4580;
  double t4600;
  double t4636;
  double t4640;
  double t4651;
  double t4196;
  double t4706;
  double t4711;
  double t4719;
  double t4728;
  double t4731;
  double t4734;
  double t4335;
  double t4883;
  double t4889;
  double t4892;
  double t4896;
  double t4898;
  double t4905;
  double t3467;
  double t4545;
  double t4970;
  double t4972;
  double t4975;
  double t4977;
  double t4979;
  double t4980;
  double t3719;
  double t4688;
  double t5095;
  double t5100;
  double t5102;
  double t5105;
  double t5112;
  double t5113;
  double t4862;
  double t3903;
  double t5206;
  double t5211;
  double t5215;
  double t5221;
  double t5222;
  double t5223;
  double t5303;
  double t5309;
  double t5310;
  double t5320;
  double t5321;
  double t5324;
  double t5331;
  double t5342;
  double t5357;
  double t5430;
  double t5434;
  double t5438;
  double t5468;
  double t5501;
  double t5511;
  double t5522;
  double t5528;
  double t5530;
  double t5292;
  double t5661;
  double t5665;
  double t5679;
  double t5687;
  double t5688;
  double t5692;
  double t5427;
  double t5850;
  double t5860;
  double t5878;
  double t5883;
  double t5884;
  double t5890;
  double t5633;
  double t6020;
  double t6022;
  double t6030;
  double t6032;
  double t6033;
  double t6041;
  double t5789;
  double t6107;
  double t6109;
  double t6113;
  double t6121;
  double t6124;
  double t6125;
  double t5987;
  double t5296;
  double t6177;
  double t6181;
  double t6182;
  double t6185;
  double t6192;
  double t6198;
  double t6096;
  double t5439;
  double t6261;
  double t6262;
  double t6265;
  double t6276;
  double t6280;
  double t6282;
  double t6339;
  double t6340;
  double t6341;
  double t6361;
  double t6362;
  double t6365;
  double t6367;
  double t6372;
  double t6388;
  double t1194;
  double t6425;
  double t6427;
  double t6467;
  double t6472;
  double t6481;
  double t6482;
  double t6499;
  double t6500;
  double t6397;
  double t6523;
  double t6540;
  double t6555;
  double t6573;
  double t6576;
  double t6583;
  double t6584;
  double t6432;
  double t6660;
  double t6666;
  double t6676;
  double t6689;
  double t6691;
  double t6696;
  double t6697;
  double t6865;
  double t6873;
  double t6875;
  double t6910;
  double t6914;
  double t6918;
  double t2047;
  double t6975;
  double t6977;
  double t7012;
  double t7010;
  double t7013;
  double t7014;
  double t6929;
  double t7044;
  double t7047;
  double t7043;
  double t7049;
  double t7054;
  double t6984;
  double t7084;
  double t7086;
  double t7088;
  double t7090;
  double t7095;
  double t7240;
  double t7242;
  double t7243;
  double t7273;
  double t7279;
  double t7281;
  double t3326;
  double t7323;
  double t7326;
  double t7349;
  double t7348;
  double t7350;
  double t7352;
  double t7290;
  double t7385;
  double t7386;
  double t7383;
  double t7387;
  double t7388;
  double t7330;
  double t7448;
  double t7452;
  double t7457;
  double t7458;
  double t7459;
  double t7586;
  double t7587;
  double t7592;
  double t7605;
  double t7607;
  double t7608;
  double t2709;
  double t7633;
  double t7634;
  double t7658;
  double t7656;
  double t7662;
  double t7664;
  double t7619;
  double t7718;
  double t7720;
  double t7716;
  double t7721;
  double t7725;
  double t7638;
  double t7763;
  double t7765;
  double t7767;
  double t7776;
  double t7780;
  t40 = Cos(var1[5]);
  t114 = Sin(var1[3]);
  t48 = Sin(var1[4]);
  t24 = Cos(var1[3]);
  t126 = Sin(var1[5]);
  t96 = t24*t40*t48;
  t130 = t114*t126;
  t157 = t96 + t130;
  t210 = Cos(var1[6]);
  t212 = -1.*t40*t114*t48;
  t217 = t24*t126;
  t240 = t212 + t217;
  t281 = Sin(var1[6]);
  t198 = Cos(var1[7]);
  t275 = t210*t240;
  t287 = -1.*t281;
  t313 = 0. + t287;
  t316 = t157*t313;
  t321 = t275 + t316;
  t630 = -1.*t40*t114;
  t637 = t24*t48*t126;
  t655 = t630 + t637;
  t333 = 0. + t210;
  t710 = -1.*t24*t40;
  t732 = -1.*t114*t48*t126;
  t755 = t710 + t732;
  t411 = Cos(var1[8]);
  t431 = 0. + t411;
  t766 = t210*t755;
  t769 = t655*t313;
  t799 = t766 + t769;
  t476 = Sin(var1[7]);
  t487 = Sin(var1[8]);
  t1050 = Cos(var1[4]);
  t1106 = -1.*t1050*t210*t114;
  t1107 = t24*t1050*t313;
  t1128 = t1106 + t1107;
  t1513 = Cos(var1[9]);
  t1391 = Sin(var1[9]);
  t1579 = Cos(var1[10]);
  t1580 = t1513*t240;
  t1594 = -1.*t1391;
  t1600 = 0. + t1594;
  t1618 = t1600*t157;
  t1623 = t1580 + t1618;
  t1523 = 0. + t1513;
  t1667 = Cos(var1[11]);
  t1678 = 0. + t1667;
  t1834 = t1600*t655;
  t1839 = t1513*t755;
  t1849 = t1834 + t1839;
  t1700 = Sin(var1[10]);
  t1721 = Sin(var1[11]);
  t1993 = t24*t1050*t1600;
  t2005 = -1.*t1513*t1050*t114;
  t2019 = t1993 + t2005;
  t1386 = 0.0875*t157;
  t2275 = Cos(var1[15]);
  t2264 = Sin(var1[15]);
  t2331 = Cos(var1[16]);
  t2332 = t2275*t240;
  t2337 = -1.*t2264;
  t2338 = 0. + t2337;
  t2343 = t2338*t157;
  t2347 = t2332 + t2343;
  t1809 = 0.0875*t655;
  t2277 = 0. + t2275;
  t2375 = Cos(var1[17]);
  t2376 = 0. + t2375;
  t2471 = t2338*t655;
  t2472 = t2275*t755;
  t2478 = t2471 + t2472;
  t2401 = Sin(var1[16]);
  t2403 = Sin(var1[17]);
  t1983 = 0.0875*t24*t1050;
  t2624 = t24*t1050*t2338;
  t2661 = -1.*t2275*t1050*t114;
  t2685 = t2624 + t2661;
  t159 = -0.0875*t157;
  t2854 = Cos(var1[12]);
  t2819 = Sin(var1[12]);
  t2961 = Cos(var1[13]);
  t2963 = t2854*t240;
  t2973 = -1.*t2819;
  t2990 = 0. + t2973;
  t3001 = t2990*t157;
  t3008 = t2963 + t3001;
  t678 = -0.0875*t655;
  t2871 = 0. + t2854;
  t3028 = Cos(var1[14]);
  t3031 = 0. + t3028;
  t3101 = t2990*t655;
  t3105 = t2854*t755;
  t3106 = t3101 + t3105;
  t3048 = Sin(var1[13]);
  t3070 = Sin(var1[14]);
  t1098 = -0.0875*t24*t1050;
  t3255 = t24*t1050*t2990;
  t3274 = -1.*t2854*t1050*t114;
  t3284 = t3255 + t3274;
  t3614 = t24*t1050*t40*t210;
  t3616 = t1050*t40*t114*t313;
  t3630 = t3614 + t3616;
  t3646 = t198*t3630;
  t3651 = -1.*t40*t48*t476;
  t3667 = t3646 + t3651;
  t3777 = t24*t1050*t210*t126;
  t3801 = t1050*t114*t126*t313;
  t3802 = t3777 + t3801;
  t3808 = t198*t3802;
  t3819 = -1.*t48*t126*t476;
  t3826 = t3808 + t3819;
  t3933 = -1.*t24*t210*t48;
  t3938 = -1.*t114*t48*t313;
  t3946 = t3933 + t3938;
  t3947 = t198*t3946;
  t3957 = -1.*t1050*t476;
  t3968 = t3947 + t3957;
  t3483 = -0.21935*t40*t48;
  t4105 = t1513*t24*t1050*t40;
  t4114 = t1050*t40*t1600*t114;
  t4121 = t4105 + t4114;
  t4123 = t1579*t4121;
  t4124 = -1.*t40*t1700*t48;
  t4132 = t4123 + t4124;
  t3738 = -0.21935*t48*t126;
  t4214 = -1.*t1700*t48*t126;
  t4217 = t1513*t24*t1050*t126;
  t4237 = t1050*t1600*t114*t126;
  t4240 = t4217 + t4237;
  t4246 = t1579*t4240;
  t4254 = t4214 + t4246;
  t3900 = -0.21935*t1050;
  t4376 = -1.*t1050*t1700;
  t4377 = -1.*t1513*t24*t48;
  t4402 = -1.*t1600*t114*t48;
  t4405 = t4377 + t4402;
  t4424 = t1579*t4405;
  t4436 = t4376 + t4424;
  t4040 = 0.0875*t1050*t40*t114;
  t4568 = t2275*t24*t1050*t40;
  t4580 = t1050*t40*t2338*t114;
  t4600 = t4568 + t4580;
  t4636 = t2331*t4600;
  t4640 = -1.*t40*t2401*t48;
  t4651 = t4636 + t4640;
  t4196 = 0.0875*t1050*t114*t126;
  t4706 = -1.*t2401*t48*t126;
  t4711 = t2275*t24*t1050*t126;
  t4719 = t1050*t2338*t114*t126;
  t4728 = t4711 + t4719;
  t4731 = t2331*t4728;
  t4734 = t4706 + t4731;
  t4335 = -0.0875*t114*t48;
  t4883 = -1.*t1050*t2401;
  t4889 = -1.*t2275*t24*t48;
  t4892 = -1.*t2338*t114*t48;
  t4896 = t4889 + t4892;
  t4898 = t2331*t4896;
  t4905 = t4883 + t4898;
  t3467 = -0.0875*t1050*t40*t114;
  t4545 = 0.21935*t40*t48;
  t4970 = t2854*t24*t1050*t40;
  t4972 = t1050*t40*t2990*t114;
  t4975 = t4970 + t4972;
  t4977 = t2961*t4975;
  t4979 = -1.*t40*t3048*t48;
  t4980 = t4977 + t4979;
  t3719 = -0.0875*t1050*t114*t126;
  t4688 = 0.21935*t48*t126;
  t5095 = -1.*t3048*t48*t126;
  t5100 = t2854*t24*t1050*t126;
  t5102 = t1050*t2990*t114*t126;
  t5105 = t5100 + t5102;
  t5112 = t2961*t5105;
  t5113 = t5095 + t5112;
  t4862 = 0.21935*t1050;
  t3903 = 0.0875*t114*t48;
  t5206 = -1.*t1050*t3048;
  t5211 = -1.*t2854*t24*t48;
  t5215 = -1.*t2990*t114*t48;
  t5221 = t5211 + t5215;
  t5222 = t2961*t5221;
  t5223 = t5206 + t5222;
  t5303 = t40*t114;
  t5309 = -1.*t24*t48*t126;
  t5310 = t5303 + t5309;
  t5320 = t210*t5310;
  t5321 = t755*t313;
  t5324 = t5320 + t5321;
  t5331 = t198*t5324;
  t5342 = -1.*t1050*t126*t476;
  t5357 = t5331 + t5342;
  t5430 = t40*t114*t48;
  t5434 = -1.*t24*t126;
  t5438 = t5430 + t5434;
  t5468 = t210*t157;
  t5501 = t5438*t313;
  t5511 = t5468 + t5501;
  t5522 = t198*t5511;
  t5528 = t1050*t40*t476;
  t5530 = t5522 + t5528;
  t5292 = -0.21935*t1050*t126;
  t5661 = -1.*t1050*t1700*t126;
  t5665 = t1513*t5310;
  t5679 = t1600*t755;
  t5687 = t5665 + t5679;
  t5688 = t1579*t5687;
  t5692 = t5661 + t5688;
  t5427 = 0.21935*t1050*t40;
  t5850 = t1050*t40*t1700;
  t5860 = t1600*t5438;
  t5878 = t1513*t157;
  t5883 = t5860 + t5878;
  t5884 = t1579*t5883;
  t5890 = t5850 + t5884;
  t5633 = 0.0875*t755;
  t6020 = -1.*t1050*t2401*t126;
  t6022 = t2275*t5310;
  t6030 = t2338*t755;
  t6032 = t6022 + t6030;
  t6033 = t2331*t6032;
  t6041 = t6020 + t6033;
  t5789 = 0.0875*t5438;
  t6107 = t1050*t40*t2401;
  t6109 = t2338*t5438;
  t6113 = t2275*t157;
  t6121 = t6109 + t6113;
  t6124 = t2331*t6121;
  t6125 = t6107 + t6124;
  t5987 = 0.21935*t1050*t126;
  t5296 = -0.0875*t755;
  t6177 = -1.*t1050*t3048*t126;
  t6181 = t2854*t5310;
  t6182 = t2990*t755;
  t6185 = t6181 + t6182;
  t6192 = t2961*t6185;
  t6198 = t6177 + t6192;
  t6096 = -0.21935*t1050*t40;
  t5439 = -0.0875*t5438;
  t6261 = t1050*t40*t3048;
  t6262 = t2990*t5438;
  t6265 = t2854*t157;
  t6276 = t6262 + t6265;
  t6280 = t2961*t6276;
  t6282 = t6261 + t6280;
  t6339 = -1.*t210*t5438;
  t6340 = -1.*t157*t281;
  t6341 = t6339 + t6340;
  t6361 = t24*t40;
  t6362 = t114*t48*t126;
  t6365 = t6361 + t6362;
  t6367 = -1.*t210*t6365;
  t6372 = -1.*t655*t281;
  t6388 = t6367 + t6372;
  t1194 = -1.*t1050*t114*t281;
  t6425 = -1.*t24*t1050*t281;
  t6427 = t1106 + t6425;
  t6467 = t1050*t40;
  t6472 = 0. + t6467;
  t6481 = t6472*t198;
  t6482 = 0. + t5468 + t5501;
  t6499 = -1.*t6482*t476;
  t6500 = t6481 + t6499;
  t6397 = t210*t655;
  t6523 = t1050*t126;
  t6540 = 0. + t6523;
  t6555 = t198*t6540;
  t6573 = t6365*t313;
  t6576 = 0. + t6397 + t6573;
  t6583 = -1.*t6576*t476;
  t6584 = t6555 + t6583;
  t6432 = t24*t1050*t210;
  t6660 = -1.*t48;
  t6666 = 0. + t6660;
  t6676 = t198*t6666;
  t6689 = t1050*t114*t313;
  t6691 = 0. + t6432 + t6689;
  t6696 = -1.*t6691*t476;
  t6697 = t6676 + t6696;
  t6865 = -1.*t1513*t5438;
  t6873 = -1.*t1391*t157;
  t6875 = t6865 + t6873;
  t6910 = -1.*t1391*t655;
  t6914 = -1.*t1513*t6365;
  t6918 = t6910 + t6914;
  t2047 = -1.*t1050*t1391*t114;
  t6975 = -1.*t24*t1050*t1391;
  t6977 = t6975 + t2005;
  t7012 = 0. + t5860 + t5878;
  t7010 = t1579*t6472;
  t7013 = -1.*t1700*t7012;
  t7014 = t7010 + t7013;
  t6929 = t1513*t655;
  t7044 = t1600*t6365;
  t7047 = 0. + t6929 + t7044;
  t7043 = t1579*t6540;
  t7049 = -1.*t1700*t7047;
  t7054 = t7043 + t7049;
  t6984 = t1513*t24*t1050;
  t7084 = t1050*t1600*t114;
  t7086 = 0. + t6984 + t7084;
  t7088 = -1.*t1700*t7086;
  t7090 = t1579*t6666;
  t7095 = t7088 + t7090;
  t7240 = -1.*t2854*t5438;
  t7242 = -1.*t2819*t157;
  t7243 = t7240 + t7242;
  t7273 = -1.*t2819*t655;
  t7279 = -1.*t2854*t6365;
  t7281 = t7273 + t7279;
  t3326 = -1.*t1050*t2819*t114;
  t7323 = -1.*t24*t1050*t2819;
  t7326 = t7323 + t3274;
  t7349 = 0. + t6262 + t6265;
  t7348 = t2961*t6472;
  t7350 = -1.*t3048*t7349;
  t7352 = t7348 + t7350;
  t7290 = t2854*t655;
  t7385 = t2990*t6365;
  t7386 = 0. + t7290 + t7385;
  t7383 = t2961*t6540;
  t7387 = -1.*t3048*t7386;
  t7388 = t7383 + t7387;
  t7330 = t2854*t24*t1050;
  t7448 = t1050*t2990*t114;
  t7452 = 0. + t7330 + t7448;
  t7457 = -1.*t3048*t7452;
  t7458 = t2961*t6666;
  t7459 = t7457 + t7458;
  t7586 = -1.*t2275*t5438;
  t7587 = -1.*t2264*t157;
  t7592 = t7586 + t7587;
  t7605 = -1.*t2264*t655;
  t7607 = -1.*t2275*t6365;
  t7608 = t7605 + t7607;
  t2709 = -1.*t1050*t2264*t114;
  t7633 = -1.*t24*t1050*t2264;
  t7634 = t7633 + t2661;
  t7658 = 0. + t6109 + t6113;
  t7656 = t2331*t6472;
  t7662 = -1.*t2401*t7658;
  t7664 = t7656 + t7662;
  t7619 = t2275*t655;
  t7718 = t2338*t6365;
  t7720 = 0. + t7619 + t7718;
  t7716 = t2331*t6540;
  t7721 = -1.*t2401*t7720;
  t7725 = t7716 + t7721;
  t7638 = t2275*t24*t1050;
  t7763 = t1050*t2338*t114;
  t7765 = 0. + t7638 + t7763;
  t7767 = -1.*t2401*t7765;
  t7776 = t2331*t6666;
  t7780 = t7767 + t7776;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=1.;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=1.;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=1.;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=1.;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=1.;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=1.;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=1.;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=1.;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=1.;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=1.;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=1.;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=1.;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=1.;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=1.;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=t159 - 0.25*t198*t321 - 0.037*(t240*t281 + t157*t333) - 0.27*(t198*t321*t431 - 1.*t321*t476*t487);
  p_output1[61]=t678 - 0.037*(t333*t655 + t281*t755) - 0.25*t198*t799 - 0.27*(t198*t431*t799 - 1.*t476*t487*t799);
  p_output1[62]=t1098 - 0.25*t1128*t198 - 0.037*(t1194 + t1050*t24*t333) - 0.27*(t1128*t198*t431 - 1.*t1128*t476*t487);
  p_output1[63]=t1386 - 0.25*t1579*t1623 - 0.27*(t1579*t1623*t1678 - 1.*t1623*t1700*t1721) + 0.037*(t1523*t157 + t1391*t240);
  p_output1[64]=t1809 - 0.25*t1579*t1849 - 0.27*(t1579*t1678*t1849 - 1.*t1700*t1721*t1849) + 0.037*(t1523*t655 + t1391*t755);
  p_output1[65]=t1983 - 0.25*t1579*t2019 - 0.27*(t1579*t1678*t2019 - 1.*t1700*t1721*t2019) + 0.037*(t2047 + t1050*t1523*t24);
  p_output1[66]=t1386 - 0.25*t2331*t2347 + 0.037*(t157*t2277 + t2264*t240) - 0.27*(t2331*t2347*t2376 - 1.*t2347*t2401*t2403);
  p_output1[67]=t1809 - 0.25*t2331*t2478 - 0.27*(t2331*t2376*t2478 - 1.*t2401*t2403*t2478) + 0.037*(t2277*t655 + t2264*t755);
  p_output1[68]=t1983 - 0.25*t2331*t2685 - 0.27*(t2331*t2376*t2685 - 1.*t2401*t2403*t2685) + 0.037*(t1050*t2277*t24 + t2709);
  p_output1[69]=t159 - 0.037*(t240*t2819 + t157*t2871) - 0.25*t2961*t3008 - 0.27*(t2961*t3008*t3031 - 1.*t3008*t3048*t3070);
  p_output1[70]=-0.25*t2961*t3106 - 0.27*(t2961*t3031*t3106 - 1.*t3048*t3070*t3106) + t678 - 0.037*(t2871*t655 + t2819*t755);
  p_output1[71]=t1098 - 0.25*t2961*t3284 - 0.27*(t2961*t3031*t3284 - 1.*t3048*t3070*t3284) - 0.037*(t1050*t24*t2871 + t3326);
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=1.;
  p_output1[77]=0;
  p_output1[78]=t3467 + t3483 - 0.25*t3667 - 0.037*(t1050*t24*t281*t40 + t1050*t114*t333*t40) - 0.27*(t3667*t431 + (-1.*t3630*t476 - 1.*t198*t40*t48)*t487);
  p_output1[79]=-0.037*(t1050*t126*t24*t281 + t1050*t114*t126*t333) + t3719 + t3738 - 0.25*t3826 - 0.27*(t3826*t431 + (-1.*t3802*t476 - 1.*t126*t198*t48)*t487);
  p_output1[80]=t3900 + t3903 - 0.25*t3968 - 0.037*(-1.*t24*t281*t48 - 1.*t114*t333*t48) - 0.27*(t3968*t431 + (-1.*t1050*t198 - 1.*t3946*t476)*t487);
  p_output1[81]=t3483 + 0.037*(t1050*t114*t1523*t40 + t1050*t1391*t24*t40) + t4040 - 0.25*t4132 - 0.27*(t1678*t4132 + t1721*(-1.*t1700*t4121 - 1.*t1579*t40*t48));
  p_output1[82]=0.037*(t1050*t114*t126*t1523 + t1050*t126*t1391*t24) + t3738 + t4196 - 0.25*t4254 - 0.27*(t1678*t4254 + t1721*(-1.*t1700*t4240 - 1.*t126*t1579*t48));
  p_output1[83]=t3900 + t4335 - 0.25*t4436 - 0.27*(t1721*(-1.*t1050*t1579 - 1.*t1700*t4405) + t1678*t4436) + 0.037*(-1.*t114*t1523*t48 - 1.*t1391*t24*t48);
  p_output1[84]=0.037*(t1050*t114*t2277*t40 + t1050*t2264*t24*t40) + t4040 + t4545 - 0.25*t4651 - 0.27*(t2376*t4651 + t2403*(-1.*t2401*t4600 - 1.*t2331*t40*t48));
  p_output1[85]=0.037*(t1050*t114*t126*t2277 + t1050*t126*t2264*t24) + t4196 + t4688 - 0.25*t4734 - 0.27*(t2376*t4734 + t2403*(-1.*t2401*t4728 - 1.*t126*t2331*t48));
  p_output1[86]=t4335 + 0.037*(-1.*t114*t2277*t48 - 1.*t2264*t24*t48) + t4862 - 0.25*t4905 - 0.27*(t2403*(-1.*t1050*t2331 - 1.*t2401*t4896) + t2376*t4905);
  p_output1[87]=t3467 - 0.037*(t1050*t24*t2819*t40 + t1050*t114*t2871*t40) + t4545 - 0.25*t4980 - 0.27*(t3070*(-1.*t2961*t40*t48 - 1.*t3048*t4975) + t3031*t4980);
  p_output1[88]=-0.037*(t1050*t126*t24*t2819 + t1050*t114*t126*t2871) + t3719 + t4688 - 0.25*t5113 - 0.27*(t3070*(-1.*t126*t2961*t48 - 1.*t3048*t5105) + t3031*t5113);
  p_output1[89]=t3903 - 0.037*(-1.*t24*t2819*t48 - 1.*t114*t2871*t48) + t4862 - 0.25*t5223 - 0.27*(t3070*(-1.*t1050*t2961 - 1.*t3048*t5221) + t3031*t5223);
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=1.;
  p_output1[96]=t5292 + t5296 - 0.25*t5357 - 0.27*(t487*(-1.*t1050*t126*t198 - 1.*t476*t5324) + t431*t5357) - 0.037*(t281*t5310 + t333*t755);
  p_output1[97]=t5427 - 0.037*(t157*t281 + t333*t5438) + t5439 - 0.25*t5530 - 0.27*(t487*(t1050*t198*t40 - 1.*t476*t5511) + t431*t5530);
  p_output1[98]=0;
  p_output1[99]=t5292 + t5633 - 0.25*t5692 - 0.27*(t1721*(-1.*t1050*t126*t1579 - 1.*t1700*t5687) + t1678*t5692) + 0.037*(t1391*t5310 + t1523*t755);
  p_output1[100]=t5427 + 0.037*(t1391*t157 + t1523*t5438) + t5789 - 0.25*t5890 - 0.27*(t1721*(t1050*t1579*t40 - 1.*t1700*t5883) + t1678*t5890);
  p_output1[101]=0;
  p_output1[102]=t5633 + t5987 - 0.25*t6041 - 0.27*(t2403*(-1.*t1050*t126*t2331 - 1.*t2401*t6032) + t2376*t6041) + 0.037*(t2264*t5310 + t2277*t755);
  p_output1[103]=0.037*(t157*t2264 + t2277*t5438) + t5789 + t6096 - 0.25*t6125 - 0.27*(t2403*(t1050*t2331*t40 - 1.*t2401*t6121) + t2376*t6125);
  p_output1[104]=0;
  p_output1[105]=t5296 + t5987 - 0.25*t6198 - 0.27*(t3070*(-1.*t1050*t126*t2961 - 1.*t3048*t6185) + t3031*t6198) - 0.037*(t2819*t5310 + t2871*t755);
  p_output1[106]=-0.037*(t157*t2819 + t2871*t5438) + t5439 + t6096 - 0.25*t6282 - 0.27*(t3070*(t1050*t2961*t40 - 1.*t3048*t6276) + t3031*t6282);
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=-0.037*(-1.*t281*t5438 + t5468) - 0.25*t198*t6341 - 0.27*(t198*t431*t6341 - 1.*t476*t487*t6341);
  p_output1[115]=-0.25*t198*t6388 - 0.27*(t198*t431*t6388 - 1.*t476*t487*t6388) - 0.037*(-1.*t281*t6365 + t6397);
  p_output1[116]=-0.25*t198*t6427 - 0.27*(t198*t431*t6427 - 1.*t476*t487*t6427) - 0.037*(t1194 + t6432);
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=-0.25*t6500 - 0.27*(t487*(-1.*t476*t6472 - 1.*t198*t6482) + t431*t6500);
  p_output1[133]=-0.25*t6584 - 0.27*(t487*(-1.*t476*t6540 - 1.*t198*t6576) + t431*t6584);
  p_output1[134]=-0.25*t6697 - 0.27*(t487*(-1.*t476*t6666 - 1.*t198*t6691) + t431*t6697);
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=-0.27*(-1.*t487*(0. + t476*t6472 + t198*t6482) + t411*(0. + t6481 + t6499));
  p_output1[151]=-0.27*(-1.*t487*(0. + t476*t6540 + t198*t6576) + t411*(0. + t6555 + t6583));
  p_output1[152]=-0.27*(-1.*t487*(0. + t476*t6666 + t198*t6691) + t411*(0. + t6676 + t6696));
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0.037*(-1.*t1391*t5438 + t5878) - 0.25*t1579*t6875 - 0.27*(t1579*t1678*t6875 - 1.*t1700*t1721*t6875);
  p_output1[172]=-0.25*t1579*t6918 - 0.27*(t1579*t1678*t6918 - 1.*t1700*t1721*t6918) + 0.037*(-1.*t1391*t6365 + t6929);
  p_output1[173]=-0.25*t1579*t6977 - 0.27*(t1579*t1678*t6977 - 1.*t1700*t1721*t6977) + 0.037*(t2047 + t6984);
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=0;
  p_output1[187]=0;
  p_output1[188]=0;
  p_output1[189]=-0.25*t7014 - 0.27*(t1721*(-1.*t1700*t6472 - 1.*t1579*t7012) + t1678*t7014);
  p_output1[190]=-0.25*t7054 - 0.27*(t1721*(-1.*t1700*t6540 - 1.*t1579*t7047) + t1678*t7054);
  p_output1[191]=-0.25*t7095 - 0.27*(t1721*(-1.*t1700*t6666 - 1.*t1579*t7086) + t1678*t7095);
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=-0.27*(-1.*t1721*(0. + t1700*t6472 + t1579*t7012) + t1667*(0. + t7010 + t7013));
  p_output1[208]=-0.27*(-1.*t1721*(0. + t1700*t6540 + t1579*t7047) + t1667*(0. + t7043 + t7049));
  p_output1[209]=-0.27*(-1.*t1721*(0. + t1700*t6666 + t1579*t7086) + t1667*(0. + t7088 + t7090));
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=-0.037*(-1.*t2819*t5438 + t6265) - 0.25*t2961*t7243 - 0.27*(t2961*t3031*t7243 - 1.*t3048*t3070*t7243);
  p_output1[232]=-0.25*t2961*t7281 - 0.27*(t2961*t3031*t7281 - 1.*t3048*t3070*t7281) - 0.037*(-1.*t2819*t6365 + t7290);
  p_output1[233]=-0.25*t2961*t7326 - 0.27*(t2961*t3031*t7326 - 1.*t3048*t3070*t7326) - 0.037*(t3326 + t7330);
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=-0.25*t7352 - 0.27*(t3070*(-1.*t3048*t6472 - 1.*t2961*t7349) + t3031*t7352);
  p_output1[250]=-0.25*t7388 - 0.27*(t3070*(-1.*t3048*t6540 - 1.*t2961*t7386) + t3031*t7388);
  p_output1[251]=-0.25*t7459 - 0.27*(t3070*(-1.*t3048*t6666 - 1.*t2961*t7452) + t3031*t7459);
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=-0.27*(-1.*t3070*(0. + t3048*t6472 + t2961*t7349) + t3028*(0. + t7348 + t7350));
  p_output1[268]=-0.27*(-1.*t3070*(0. + t3048*t6540 + t2961*t7386) + t3028*(0. + t7383 + t7387));
  p_output1[269]=-0.27*(-1.*t3070*(0. + t3048*t6666 + t2961*t7452) + t3028*(0. + t7457 + t7458));
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0.037*(-1.*t2264*t5438 + t6113) - 0.25*t2331*t7592 - 0.27*(t2331*t2376*t7592 - 1.*t2401*t2403*t7592);
  p_output1[283]=-0.25*t2331*t7608 - 0.27*(t2331*t2376*t7608 - 1.*t2401*t2403*t7608) + 0.037*(-1.*t2264*t6365 + t7619);
  p_output1[284]=-0.25*t2331*t7634 - 0.27*(t2331*t2376*t7634 - 1.*t2401*t2403*t7634) + 0.037*(t2709 + t7638);
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=-0.25*t7664 - 0.27*(t2403*(-1.*t2401*t6472 - 1.*t2331*t7658) + t2376*t7664);
  p_output1[301]=-0.25*t7725 - 0.27*(t2403*(-1.*t2401*t6540 - 1.*t2331*t7720) + t2376*t7725);
  p_output1[302]=-0.25*t7780 - 0.27*(t2403*(-1.*t2401*t6666 - 1.*t2331*t7765) + t2376*t7780);
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=-0.27*(-1.*t2403*(0. + t2401*t6472 + t2331*t7658) + t2375*(0. + t7656 + t7662));
  p_output1[319]=-0.27*(-1.*t2403*(0. + t2401*t6540 + t2331*t7720) + t2375*(0. + t7716 + t7721));
  p_output1[320]=-0.27*(-1.*t2403*(0. + t2401*t6666 + t2331*t7765) + t2375*(0. + t7767 + t7776));
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_hc_opt3_func.hh"

namespace SymFunction
{

void j_hc_opt3_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
