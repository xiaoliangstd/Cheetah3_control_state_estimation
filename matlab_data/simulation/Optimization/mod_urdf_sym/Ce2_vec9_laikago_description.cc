/*
 * Automatically Generated from Mathematica.
 * Tue 10 Dec 2019 16:01:58 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t30;
  double t49;
  double t75;
  double t76;
  double t81;
  double t83;
  double t85;
  double t17;
  double t22;
  double t88;
  double t97;
  double t89;
  double t91;
  double t125;
  double t140;
  double t146;
  double t87;
  double t93;
  double t99;
  double t101;
  double t103;
  double t104;
  double t105;
  double t109;
  double t112;
  double t200;
  double t205;
  double t212;
  double t216;
  double t231;
  double t233;
  double t242;
  double t244;
  double t257;
  double t258;
  double t275;
  double t322;
  double t326;
  double t302;
  double t310;
  double t314;
  double t350;
  double t367;
  double t373;
  double t153;
  double t159;
  double t160;
  double t161;
  double t165;
  double t166;
  double t391;
  double t403;
  double t408;
  double t412;
  double t416;
  double t420;
  double t427;
  double t443;
  double t449;
  double t516;
  double t518;
  double t519;
  double t526;
  double t507;
  double t527;
  double t532;
  double t545;
  double t547;
  double t557;
  double t559;
  double t563;
  double t567;
  double t603;
  double t610;
  double t616;
  double t617;
  double t618;
  double t624;
  double t703;
  double t714;
  double t721;
  double t654;
  double t659;
  double t664;
  double t675;
  double t681;
  double t693;
  double t594;
  double t595;
  double t686;
  double t687;
  double t688;
  double t628;
  double t695;
  double t729;
  double t537;
  double t568;
  double t580;
  double t777;
  double t781;
  double t782;
  double t790;
  double t842;
  double t866;
  double t882;
  double t1156;
  double t1157;
  double t1159;
  double t1164;
  double t1169;
  double t1171;
  double t1172;
  double t1173;
  double t1174;
  double t1178;
  double t1183;
  double t1279;
  double t1285;
  double t1288;
  double t1199;
  double t1203;
  double t1207;
  double t1212;
  double t1214;
  double t1218;
  double t1233;
  double t1235;
  double t1236;
  double t1249;
  double t1260;
  double t1261;
  double t1330;
  double t1331;
  double t1339;
  double t1341;
  double t1344;
  double t1347;
  double t764;
  double t1373;
  double t1383;
  double t1384;
  double t724;
  double t1417;
  double t1423;
  double t1424;
  double t1412;
  double t1413;
  double t1414;
  double t1340;
  double t1348;
  double t1354;
  double t985;
  double t1028;
  double t1447;
  double t1450;
  double t795;
  double t843;
  double t1358;
  double t1363;
  double t870;
  double t887;
  double t1590;
  double t1592;
  double t1593;
  double t1605;
  double t1606;
  double t1608;
  double t1597;
  double t1598;
  double t1604;
  double t1391;
  double t1622;
  double t1631;
  double t1634;
  double t1429;
  double t1453;
  double t1673;
  double t1679;
  double t1680;
  double t1664;
  double t1666;
  double t1670;
  double t1507;
  double t1594;
  double t1609;
  double t1610;
  double t1525;
  double t1527;
  double t1692;
  double t1695;
  double t1553;
  double t1559;
  double t1615;
  double t1616;
  double t1571;
  double t1575;
  double t1315;
  double t1324;
  double t1325;
  double t196;
  double t239;
  double t280;
  double t290;
  double t298;
  double t299;
  double t318;
  double t321;
  double t330;
  double t334;
  double t360;
  double t378;
  double t382;
  double t1300;
  double t1308;
  double t1312;
  double t453;
  double t1087;
  double t1088;
  double t1090;
  double t1091;
  double t1092;
  double t1101;
  double t1105;
  double t1106;
  double t1107;
  double t1108;
  double t1111;
  double t1121;
  double t1128;
  double t1131;
  double t1138;
  double t1064;
  double t1067;
  double t1070;
  double t1076;
  double t1080;
  double t1083;
  double t1289;
  double t1298;
  double t1314;
  double t1326;
  double t1327;
  double t1890;
  double t1902;
  double t1903;
  double t796;
  double t797;
  double t805;
  double t812;
  double t837;
  double t848;
  double t851;
  double t862;
  double t881;
  double t924;
  double t936;
  double t943;
  double t970;
  double t587;
  double t630;
  double t633;
  double t640;
  double t669;
  double t691;
  double t732;
  double t735;
  double t736;
  double t747;
  double t982;
  double t983;
  double t1012;
  double t1022;
  double t1029;
  double t1031;
  double t1051;
  double t1054;
  double t759;
  double t761;
  double t769;
  double t770;
  double t772;
  double t773;
  double t1208;
  double t1222;
  double t1225;
  double t1241;
  double t1262;
  double t1265;
  double t1357;
  double t1364;
  double t1366;
  double t1367;
  double t1411;
  double t1415;
  double t1430;
  double t1435;
  double t1444;
  double t1454;
  double t1455;
  double t1472;
  double t1476;
  double t1387;
  double t1393;
  double t1394;
  double t1397;
  double t1399;
  double t1504;
  double t1509;
  double t1518;
  double t1519;
  double t1521;
  double t1524;
  double t1532;
  double t1537;
  double t1544;
  double t1545;
  double t1547;
  double t1552;
  double t1554;
  double t1555;
  double t1557;
  double t1561;
  double t1563;
  double t1564;
  double t1567;
  double t1576;
  double t1579;
  double t1582;
  double t1584;
  double t1611;
  double t1617;
  double t1618;
  double t1619;
  double t1635;
  double t1637;
  double t1643;
  double t1644;
  double t1649;
  double t1650;
  double t1660;
  double t1672;
  double t1682;
  double t1685;
  double t1686;
  double t1696;
  double t1698;
  double t1701;
  double t1702;
  double t1703;
  double t1708;
  double t1724;
  double t1725;
  double t1727;
  double t1731;
  double t1737;
  double t1741;
  double t1760;
  double t1764;
  double t1767;
  double t1771;
  double t1772;
  double t1777;
  double t1779;
  double t1783;
  double t1797;
  double t1801;
  double t1811;
  double t1815;
  double t1828;
  double t1830;
  double t1831;
  double t1841;
  double t1843;
  double t1847;
  double t1849;
  double t1850;
  double t1852;
  double t1854;
  double t1191;
  double t1195;
  double t1229;
  double t1269;
  double t1275;
  double t2259;
  double t2263;
  double t2272;
  double t2013;
  double t2021;
  double t2022;
  double t2023;
  double t2039;
  double t2431;
  double t1621;
  double t1651;
  double t1706;
  double t1776;
  double t1855;
  double t1857;
  double t2406;
  double t2408;
  double t2412;
  double t2416;
  double t2417;
  double t2419;
  double t2155;
  double t2157;
  double t2159;
  double t2172;
  double t2173;
  double t2176;
  double t2494;
  double t2480;
  double t2481;
  double t2484;
  double t2493;
  double t2500;
  double t2503;
  double t2506;
  double t2508;
  double t2509;
  double t2518;
  double t2521;
  double t2528;
  double t2529;
  double t2530;
  double t2778;
  double t1369;
  double t1408;
  double t1488;
  double t1546;
  double t1586;
  double t1587;
  double t2380;
  double t2389;
  double t2393;
  double t2396;
  double t2397;
  double t2399;
  double t2077;
  double t2097;
  double t2098;
  double t2099;
  double t2120;
  double t2121;
  double t2870;
  double t2652;
  double t2660;
  double t2664;
  double t2536;
  double t2538;
  double t2547;
  double t2814;
  double t2837;
  double t2844;
  double t2865;
  double t2871;
  double t2872;
  double t2880;
  double t2882;
  double t2886;
  double t2899;
  double t2903;
  double t2573;
  double t2576;
  double t2578;
  double t2604;
  double t2606;
  double t2619;
  double t2620;
  double t2651;
  double t2673;
  double t3105;
  double t646;
  double t750;
  double t776;
  double t978;
  double t1055;
  double t1058;
  double t3225;
  double t3208;
  double t3212;
  double t3221;
  double t3223;
  double t3226;
  double t3227;
  double t3235;
  double t3238;
  double t3240;
  double t3242;
  double t3245;
  double t2313;
  double t2331;
  double t2338;
  double t2339;
  double t2340;
  double t2345;
  double t1998;
  double t1999;
  double t2003;
  double t2006;
  double t2007;
  double t2010;
  double t2915;
  double t2918;
  double t2923;
  double t2924;
  double t2925;
  double t2930;
  double t2527;
  double t2531;
  double t2533;
  double t2534;
  double t2535;
  double t2549;
  double t3347;
  double t1062;
  double t1071;
  double t1075;
  double t1086;
  double t1148;
  double t1150;
  double t3383;
  double t3260;
  double t3261;
  double t3263;
  double t3265;
  double t3266;
  double t3267;
  double t3380;
  double t3388;
  double t3403;
  double t3406;
  double t3409;
  double t3416;
  double t3423;
  double t3426;
  double t3429;
  double t3431;
  double t2275;
  double t2276;
  double t2279;
  double t2289;
  double t2291;
  double t2297;
  double t1906;
  double t1913;
  double t1915;
  double t1932;
  double t1933;
  double t1936;
  double t2984;
  double t2990;
  double t2995;
  double t3000;
  double t3001;
  double t3002;
  double t2566;
  double t2567;
  double t2568;
  double t2571;
  double t2572;
  double t2587;
  double t3360;
  double t3363;
  double t3371;
  double t3374;
  double t3376;
  double t294;
  double t347;
  double t451;
  double t466;
  double t470;
  double t3180;
  double t3181;
  double t3182;
  double t3188;
  double t3194;
  double t2247;
  double t2250;
  double t2252;
  double t2255;
  double t2256;
  double t1877;
  double t1878;
  double t1880;
  double t1881;
  double t1883;
  double t2792;
  double t2796;
  double t2797;
  double t2799;
  double t2801;
  double t2453;
  double t2456;
  double t2457;
  double t2458;
  double t2459;
  double t3509;
  double t3513;
  double t3531;
  double t3345;
  double t3353;
  double t3355;
  double t114;
  double t176;
  double t178;
  double t3123;
  double t3145;
  double t3146;
  double t2207;
  double t2213;
  double t2216;
  double t1867;
  double t1869;
  double t1872;
  double t2779;
  double t2780;
  double t2782;
  double t2432;
  double t2450;
  double t2451;
  t30 = Cos(var1[8]);
  t49 = Sin(var1[7]);
  t75 = -1.*t30*t49;
  t76 = Cos(var1[7]);
  t81 = Sin(var1[8]);
  t83 = -1.*t76*t81;
  t85 = t75 + t83;
  t17 = Cos(var1[6]);
  t22 = Sin(var1[4]);
  t88 = Cos(var1[4]);
  t97 = Cos(var1[5]);
  t89 = Sin(var1[5]);
  t91 = Sin(var1[6]);
  t125 = -1.*t76*t30;
  t140 = t49*t81;
  t146 = t125 + t140;
  t87 = t17*t22*t85;
  t93 = t89*t91*t85;
  t99 = t76*t30;
  t101 = -1.*t49*t81;
  t103 = t99 + t101;
  t104 = t97*t103;
  t105 = t93 + t104;
  t109 = t88*t105;
  t112 = t87 + t109;
  t200 = -1.*t30;
  t205 = 1. + t200;
  t212 = 0.21935*t205;
  t216 = 0.217154*t30;
  t231 = -0.12338*t81;
  t233 = t212 + t216 + t231;
  t242 = -1. + t30;
  t244 = 0.25*t242;
  t257 = -0.37338*t30;
  t258 = 0.002196*t81;
  t275 = t244 + t257 + t258;
  t322 = -0.12338*t30;
  t326 = t322 + t258;
  t302 = 0.002196*t30;
  t310 = 0.12338*t81;
  t314 = t302 + t310;
  t350 = t30*t275;
  t367 = -0.21935*t81;
  t373 = t233*t81;
  t153 = t17*t22*t146;
  t159 = t97*t85;
  t160 = t89*t91*t146;
  t161 = t159 + t160;
  t165 = t88*t161;
  t166 = t153 + t165;
  t391 = t17*t22*t103;
  t403 = t30*t49;
  t408 = t76*t81;
  t412 = t403 + t408;
  t416 = t97*t412;
  t420 = t89*t91*t103;
  t427 = t416 + t420;
  t443 = t88*t427;
  t449 = t391 + t443;
  t516 = 0.21935*t49;
  t518 = -1.*t49*t233;
  t519 = t76*t275;
  t526 = t516 + t518 + t519;
  t507 = -0.037381*t91;
  t527 = t17*t526;
  t532 = t507 + t527;
  t545 = -1.*t17;
  t547 = 1. + t545;
  t557 = -0.0875*t547;
  t559 = -0.124881*t17;
  t563 = -1.*t91*t526;
  t567 = t557 + t559 + t563;
  t603 = -1.*t76;
  t610 = 1. + t603;
  t616 = 0.21935*t610;
  t617 = t76*t233;
  t618 = t49*t275;
  t624 = t616 + t617 + t618;
  t703 = -1.*t49*t326;
  t714 = t76*t314;
  t721 = t703 + t714;
  t654 = -1.*t91*t532;
  t659 = -1.*t17*t567;
  t664 = t654 + t659;
  t675 = t17*t532*t85;
  t681 = -1.*t91*t567*t85;
  t693 = t624*t103;
  t594 = -1.*t17*t532*t85;
  t595 = t91*t567*t85;
  t686 = t76*t326;
  t687 = t49*t314;
  t688 = t686 + t687;
  t628 = -1.*t624*t103;
  t695 = Power(t17,2);
  t729 = Power(t91,2);
  t537 = t91*t532;
  t568 = t17*t567;
  t580 = t537 + t568;
  t777 = -1.*t88*t17*t89;
  t781 = t22*t91;
  t782 = t777 + t781;
  t790 = -1.*t624*t412;
  t842 = -1.*t688*t412;
  t866 = t624*t85;
  t882 = t688*t103;
  t1156 = Sin(var1[3]);
  t1157 = -1.*t97*t91*t85;
  t1159 = t89*t103;
  t1164 = t1157 + t1159;
  t1169 = t1156*t1164;
  t1171 = Cos(var1[3]);
  t1172 = t88*t17*t85;
  t1173 = -1.*t22*t105;
  t1174 = t1172 + t1173;
  t1178 = t1171*t1174;
  t1183 = t1169 + t1178;
  t1279 = t1171*t1164;
  t1285 = -1.*t1156*t1174;
  t1288 = t1279 + t1285;
  t1199 = t89*t412;
  t1203 = -1.*t97*t91*t103;
  t1207 = t1199 + t1203;
  t1212 = t88*t17*t103;
  t1214 = -1.*t22*t427;
  t1218 = t1212 + t1214;
  t1233 = t89*t85;
  t1235 = -1.*t97*t91*t146;
  t1236 = t1233 + t1235;
  t1249 = t88*t17*t146;
  t1260 = -1.*t22*t161;
  t1261 = t1249 + t1260;
  t1330 = -1.*t89*t567;
  t1331 = t97*t624;
  t1339 = t1330 + t1331;
  t1341 = t97*t567;
  t1344 = t89*t624;
  t1347 = t1341 + t1344;
  t764 = t17*t532*t103;
  t1373 = t17*t89*t1339;
  t1383 = -1.*t97*t17*t1347;
  t1384 = t654 + t1373 + t1383;
  t724 = t695*t721*t103;
  t1417 = -1.*t97*t91*t721;
  t1423 = t89*t688;
  t1424 = t1417 + t1423;
  t1412 = t89*t91*t721;
  t1413 = t97*t688;
  t1414 = t1412 + t1413;
  t1340 = -1.*t17*t89*t1339;
  t1348 = t97*t17*t1347;
  t1354 = t537 + t1340 + t1348;
  t985 = -1.*t695*t721*t85;
  t1028 = -1.*t17*t532*t146;
  t1447 = t1339*t105;
  t1450 = t1347*t1164;
  t795 = -1.*t17*t532*t103;
  t843 = -1.*t695*t721*t103;
  t1358 = -1.*t1339*t105;
  t1363 = -1.*t1347*t1164;
  t870 = t695*t721*t85;
  t887 = t17*t532*t146;
  t1590 = t22*t532;
  t1592 = t88*t1339;
  t1593 = t1590 + t1592;
  t1605 = t88*t532;
  t1606 = -1.*t22*t1339;
  t1608 = t1605 + t1606;
  t1597 = t17*t22*t89;
  t1598 = t88*t91;
  t1604 = t1597 + t1598;
  t1391 = t1347*t1207;
  t1622 = -1.*t782*t1593;
  t1631 = -1.*t1604*t1608;
  t1634 = t1622 + t1631 + t1383;
  t1429 = -1.*t97*t17*t1424;
  t1453 = t1424*t1207;
  t1673 = t88*t1414;
  t1679 = t17*t22*t721;
  t1680 = t1673 + t1679;
  t1664 = -1.*t22*t1414;
  t1666 = t88*t17*t721;
  t1670 = t1664 + t1666;
  t1507 = t97*t17*t1424;
  t1594 = t782*t1593;
  t1609 = t1604*t1608;
  t1610 = t1594 + t1609 + t1348;
  t1525 = -1.*t1424*t1164;
  t1527 = -1.*t1347*t1236;
  t1692 = t1593*t112;
  t1695 = t1608*t1174;
  t1553 = -1.*t1347*t1207;
  t1559 = -1.*t1424*t1207;
  t1615 = -1.*t1593*t112;
  t1616 = -1.*t1608*t1174;
  t1571 = t1424*t1164;
  t1575 = t1347*t1236;
  t1315 = t1171*t1236;
  t1324 = -1.*t1156*t1261;
  t1325 = t1315 + t1324;
  t196 = 0.21935*t30;
  t239 = -1.*t30*t233;
  t280 = t275*t81;
  t290 = t196 + t239 + t280;
  t298 = -0.21935*t30;
  t299 = t30*t233;
  t318 = t30*t314;
  t321 = -1.*t275*t81;
  t330 = t326*t81;
  t334 = t298 + t299 + t318 + t321 + t330;
  t360 = -1.*t30*t326;
  t378 = t314*t81;
  t382 = t350 + t360 + t367 + t373 + t378;
  t1300 = t1171*t1207;
  t1308 = -1.*t1156*t1218;
  t1312 = t1300 + t1308;
  t453 = t350 + t367 + t373;
  t1087 = -1.*t526*t103;
  t1088 = t790 + t1087;
  t1090 = t85*t1088;
  t1091 = t526*t85;
  t1092 = t1091 + t693;
  t1101 = t103*t1092;
  t1105 = -1.*t526*t85;
  t1106 = -1.*t721*t103;
  t1107 = t1105 + t842 + t628 + t1106;
  t1108 = t103*t1107;
  t1111 = t721*t85;
  t1121 = t526*t146;
  t1128 = t866 + t1111 + t882 + t1121;
  t1131 = t412*t1128;
  t1138 = t1090 + t1101 + t1108 + t1131;
  t1064 = 0.124881*t103;
  t1067 = 0.0875*t146;
  t1070 = t1064 + t1067;
  t1076 = 0.0875*t85;
  t1080 = 0.124881*t412;
  t1083 = t1076 + t1080;
  t1289 = 0.241*t449*t1288;
  t1298 = 0.241*t166*t1288;
  t1314 = 0.241*t112*t1312;
  t1326 = 0.241*t112*t1325;
  t1327 = t1289 + t1298 + t1314 + t1326;
  t1890 = t1171*t97*t17;
  t1902 = -1.*t1156*t1604;
  t1903 = t1890 + t1902;
  t796 = t91*t567*t103;
  t797 = t790 + t795 + t796;
  t805 = t17*t146*t797;
  t812 = t675 + t681 + t693;
  t837 = t17*t85*t812;
  t848 = -1.*t729*t721*t103;
  t851 = t594 + t595 + t842 + t628 + t843 + t848;
  t862 = t17*t85*t851;
  t881 = t729*t721*t85;
  t924 = -1.*t91*t567*t146;
  t936 = t866 + t870 + t881 + t882 + t887 + t924;
  t943 = t17*t103*t936;
  t970 = t805 + t837 + t862 + t943;
  t587 = t17*t580*t85;
  t630 = t594 + t595 + t628;
  t633 = t91*t630;
  t640 = t587 + t633;
  t669 = t17*t664*t85;
  t691 = t688*t412;
  t732 = t729*t721*t103;
  t735 = t675 + t681 + t691 + t693 + t724 + t732;
  t736 = t91*t735;
  t747 = t669 + t736;
  t982 = t17*t580*t146;
  t983 = -1.*t624*t85;
  t1012 = -1.*t729*t721*t85;
  t1022 = -1.*t688*t103;
  t1029 = t91*t567*t146;
  t1031 = t983 + t985 + t1012 + t1022 + t1028 + t1029;
  t1051 = t91*t1031;
  t1054 = t982 + t1051;
  t759 = t17*t664*t103;
  t761 = t624*t412;
  t769 = -1.*t91*t567*t103;
  t770 = t761 + t764 + t769;
  t772 = t91*t770;
  t773 = t759 + t772;
  t1208 = t1156*t1207;
  t1222 = t1171*t1218;
  t1225 = t1208 + t1222;
  t1241 = t1156*t1236;
  t1262 = t1171*t1261;
  t1265 = t1241 + t1262;
  t1357 = t1354*t1164;
  t1364 = t594 + t1358 + t1363;
  t1366 = t97*t17*t1364;
  t1367 = t1357 + t1366;
  t1411 = t1384*t1164;
  t1415 = t17*t89*t1414;
  t1430 = -1.*t17*t91*t721;
  t1435 = t1415 + t1429 + t1430;
  t1444 = t1435*t1207;
  t1454 = t1414*t427;
  t1455 = t675 + t724 + t1447 + t1450 + t1453 + t1454;
  t1472 = t97*t17*t1455;
  t1476 = t1411 + t1444 + t1472;
  t1387 = t1384*t1207;
  t1393 = t1339*t427;
  t1394 = t764 + t1391 + t1393;
  t1397 = t97*t17*t1394;
  t1399 = t1387 + t1397;
  t1504 = -1.*t17*t89*t1414;
  t1509 = t17*t91*t721;
  t1518 = t1504 + t1507 + t1509;
  t1519 = t1518*t1164;
  t1521 = t1354*t1236;
  t1524 = -1.*t1414*t105;
  t1532 = -1.*t1339*t161;
  t1537 = t985 + t1028 + t1524 + t1525 + t1527 + t1532;
  t1544 = t97*t17*t1537;
  t1545 = t1519 + t1521 + t1544;
  t1547 = t675 + t1447 + t1450;
  t1552 = t1164*t1547;
  t1554 = -1.*t1339*t427;
  t1555 = t795 + t1553 + t1554;
  t1557 = t1236*t1555;
  t1561 = -1.*t1414*t427;
  t1563 = t594 + t843 + t1358 + t1363 + t1559 + t1561;
  t1564 = t1164*t1563;
  t1567 = t1414*t105;
  t1576 = t1339*t161;
  t1579 = t870 + t887 + t1567 + t1571 + t1575 + t1576;
  t1582 = t1207*t1579;
  t1584 = t1552 + t1557 + t1564 + t1582;
  t1611 = t1610*t112;
  t1617 = t1363 + t1615 + t1616;
  t1618 = t782*t1617;
  t1619 = t1611 + t1618;
  t1635 = t1634*t449;
  t1637 = t1593*t449;
  t1643 = t1608*t1218;
  t1644 = t1391 + t1637 + t1643;
  t1649 = t782*t1644;
  t1650 = t1635 + t1649;
  t1660 = t1634*t112;
  t1672 = -1.*t1604*t1670;
  t1682 = -1.*t782*t1680;
  t1685 = t1672 + t1682 + t1429;
  t1686 = t1685*t449;
  t1696 = t1680*t449;
  t1698 = t1670*t1218;
  t1701 = t1450 + t1453 + t1692 + t1695 + t1696 + t1698;
  t1702 = t782*t1701;
  t1703 = t1660 + t1686 + t1702;
  t1708 = t1604*t1670;
  t1724 = t782*t1680;
  t1725 = t1708 + t1724 + t1507;
  t1727 = t1725*t112;
  t1731 = t1610*t166;
  t1737 = -1.*t1680*t112;
  t1741 = -1.*t1670*t1174;
  t1760 = -1.*t1593*t166;
  t1764 = -1.*t1608*t1261;
  t1767 = t1525 + t1527 + t1737 + t1741 + t1760 + t1764;
  t1771 = t782*t1767;
  t1772 = t1727 + t1731 + t1771;
  t1777 = t1450 + t1692 + t1695;
  t1779 = t112*t1777;
  t1783 = -1.*t1593*t449;
  t1797 = -1.*t1608*t1218;
  t1801 = t1553 + t1783 + t1797;
  t1811 = t166*t1801;
  t1815 = -1.*t1680*t449;
  t1828 = -1.*t1670*t1218;
  t1830 = t1363 + t1559 + t1615 + t1616 + t1815 + t1828;
  t1831 = t112*t1830;
  t1841 = t1680*t112;
  t1843 = t1670*t1174;
  t1847 = t1593*t166;
  t1849 = t1608*t1261;
  t1850 = t1571 + t1575 + t1841 + t1843 + t1847 + t1849;
  t1852 = t449*t1850;
  t1854 = t1779 + t1811 + t1831 + t1852;
  t1191 = 0.241*t449*t1183;
  t1195 = 0.241*t166*t1183;
  t1229 = 0.241*t112*t1225;
  t1269 = 0.241*t112*t1265;
  t1275 = t1191 + t1195 + t1229 + t1269;
  t2259 = t97*t17*t1156;
  t2263 = t1171*t1604;
  t2272 = t2259 + t2263;
  t2013 = 0.241*t1288*t1225;
  t2021 = 0.241*t1183*t1312;
  t2022 = 0.241*t1288*t1265;
  t2023 = 0.241*t1183*t1325;
  t2039 = t2013 + t2021 + t2022 + t2023;
  t2431 = 5.e-6*t112;
  t1621 = 0.241*t112*t1619;
  t1651 = 0.241*t166*t1650;
  t1706 = 0.241*t112*t1703;
  t1776 = 0.241*t449*t1772;
  t1855 = 0.241*t782*t1854;
  t1857 = t1621 + t1651 + t1706 + t1776 + t1855;
  t2406 = 0.241*t1183*t1619;
  t2408 = 0.241*t1265*t1650;
  t2412 = 0.241*t1183*t1703;
  t2416 = 0.241*t1225*t1772;
  t2417 = 0.241*t2272*t1854;
  t2419 = t2406 + t2408 + t2412 + t2416 + t2417;
  t2155 = 0.241*t1288*t1619;
  t2157 = 0.241*t1325*t1650;
  t2159 = 0.241*t1288*t1703;
  t2172 = 0.241*t1312*t1772;
  t2173 = 0.241*t1903*t1854;
  t2176 = t2155 + t2157 + t2159 + t2172 + t2173;
  t2494 = -3.e-6*t112;
  t2480 = 0.006182*t112;
  t2481 = -3.e-6*t449;
  t2484 = t2480 + t2481;
  t2493 = 5.e-6*t782;
  t2500 = 0.000035*t449;
  t2503 = t2493 + t2494 + t2500;
  t2506 = 0.000035*t112;
  t2508 = -3.e-6*t166;
  t2509 = t2506 + t2508;
  t2518 = 0.006182*t166;
  t2521 = t2494 + t2518;
  t2528 = t449*t1777;
  t2529 = t112*t1801;
  t2530 = t2528 + t2529;
  t2778 = 5.e-6*t1164;
  t1369 = 0.241*t112*t1367;
  t1408 = 0.241*t166*t1399;
  t1488 = 0.241*t112*t1476;
  t1546 = 0.241*t449*t1545;
  t1586 = 0.241*t782*t1584;
  t1587 = t1369 + t1408 + t1488 + t1546 + t1586;
  t2380 = 0.241*t1183*t1367;
  t2389 = 0.241*t1183*t1476;
  t2393 = 0.241*t1399*t1265;
  t2396 = 0.241*t1225*t1545;
  t2397 = 0.241*t2272*t1584;
  t2399 = t2380 + t2389 + t2393 + t2396 + t2397;
  t2077 = 0.241*t1288*t1367;
  t2097 = 0.241*t1288*t1476;
  t2098 = 0.241*t1399*t1325;
  t2099 = 0.241*t1312*t1545;
  t2120 = 0.241*t1903*t1584;
  t2121 = t2077 + t2097 + t2098 + t2099 + t2120;
  t2870 = -3.e-6*t1164;
  t2652 = t1207*t1547;
  t2660 = t1164*t1555;
  t2664 = t2652 + t2660;
  t2536 = t17*t85*t797;
  t2538 = t17*t103*t812;
  t2547 = t2536 + t2538;
  t2814 = 0.006182*t1164;
  t2837 = -3.e-6*t1207;
  t2844 = t2814 + t2837;
  t2865 = 5.e-6*t97*t17;
  t2871 = 0.000035*t1207;
  t2872 = t2865 + t2870 + t2871;
  t2880 = 0.000035*t1164;
  t2882 = -3.e-6*t1236;
  t2886 = t2880 + t2882;
  t2899 = 0.006182*t1236;
  t2903 = t2870 + t2899;
  t2573 = t103*t1088;
  t2576 = t412*t1092;
  t2578 = t2573 + t2576;
  t2604 = 0.241*t1545*t1619;
  t2606 = 0.241*t1584*t2530;
  t2619 = 0.241*t1476*t1650;
  t2620 = 0.241*t1399*t1703;
  t2651 = 0.241*t1367*t1772;
  t2673 = 0.241*t2664*t1854;
  t3105 = 5.e-6*t17*t85;
  t646 = 0.241*t112*t640;
  t750 = 0.241*t112*t747;
  t776 = 0.241*t773*t166;
  t978 = 0.241*t782*t970;
  t1055 = 0.241*t449*t1054;
  t1058 = t646 + t750 + t776 + t978 + t1055;
  t3225 = -3.e-6*t17*t85;
  t3208 = 0.006182*t17*t85;
  t3212 = -3.e-6*t17*t103;
  t3221 = t3208 + t3212;
  t3223 = 5.e-6*t91;
  t3226 = 0.000035*t17*t103;
  t3227 = t3223 + t3225 + t3226;
  t3235 = 0.000035*t17*t85;
  t3238 = -3.e-6*t17*t146;
  t3240 = t3235 + t3238;
  t3242 = 0.006182*t17*t146;
  t3245 = t3225 + t3242;
  t2313 = 0.241*t2272*t970;
  t2331 = 0.241*t640*t1183;
  t2338 = 0.241*t747*t1183;
  t2339 = 0.241*t1054*t1225;
  t2340 = 0.241*t773*t1265;
  t2345 = t2313 + t2331 + t2338 + t2339 + t2340;
  t1998 = 0.241*t1903*t970;
  t1999 = 0.241*t640*t1288;
  t2003 = 0.241*t747*t1288;
  t2006 = 0.241*t1054*t1312;
  t2007 = 0.241*t773*t1325;
  t2010 = t1998 + t1999 + t2003 + t2006 + t2007;
  t2915 = 0.241*t1054*t1367;
  t2918 = 0.241*t970*t2664;
  t2923 = 0.241*t747*t1399;
  t2924 = 0.241*t773*t1476;
  t2925 = 0.241*t640*t1545;
  t2930 = 0.241*t2547*t1584;
  t2527 = 0.241*t1054*t1619;
  t2531 = 0.241*t970*t2530;
  t2533 = 0.241*t747*t1650;
  t2534 = 0.241*t773*t1703;
  t2535 = 0.241*t640*t1772;
  t2549 = 0.241*t2547*t1854;
  t3347 = 5.e-6*t103;
  t1062 = -0.009008821*t103*t112;
  t1071 = 0.241*t1070*t112;
  t1075 = -0.009008821*t85*t449;
  t1086 = 0.241*t1083*t166;
  t1148 = 0.241*t782*t1138;
  t1150 = t1062 + t1071 + t1075 + t1086 + t1148;
  t3383 = -3.e-6*t103;
  t3260 = 0.241*t1070*t773;
  t3261 = -0.009008821*t85*t640;
  t3263 = 0.241*t1083*t747;
  t3265 = 0.241*t2578*t970;
  t3266 = -0.009008821*t103*t1054;
  t3267 = 0.241*t2547*t1138;
  t3380 = 0.006182*t85;
  t3388 = t3380 + t3383;
  t3403 = 0.000035*t412;
  t3406 = t3403 + t3383;
  t3409 = -3.e-6*t85;
  t3416 = 0.000035*t103;
  t3423 = t3409 + t3416;
  t3426 = -3.e-6*t412;
  t3429 = 0.006182*t103;
  t3431 = t3426 + t3429;
  t2275 = 0.241*t2272*t1138;
  t2276 = -0.009008821*t103*t1183;
  t2279 = 0.241*t1070*t1183;
  t2289 = -0.009008821*t85*t1225;
  t2291 = 0.241*t1083*t1265;
  t2297 = t2275 + t2276 + t2279 + t2289 + t2291;
  t1906 = 0.241*t1903*t1138;
  t1913 = -0.009008821*t103*t1288;
  t1915 = 0.241*t1070*t1288;
  t1932 = -0.009008821*t85*t1312;
  t1933 = 0.241*t1083*t1325;
  t1936 = t1906 + t1913 + t1915 + t1932 + t1933;
  t2984 = -0.009008821*t85*t1367;
  t2990 = 0.241*t1138*t2664;
  t2995 = 0.241*t1070*t1399;
  t3000 = 0.241*t1083*t1476;
  t3001 = -0.009008821*t103*t1545;
  t3002 = 0.241*t2578*t1584;
  t2566 = -0.009008821*t85*t1619;
  t2567 = 0.241*t1138*t2530;
  t2568 = 0.241*t1070*t1650;
  t2571 = 0.241*t1083*t1703;
  t2572 = -0.009008821*t103*t1772;
  t2587 = 0.241*t2578*t1854;
  t3360 = -0.009008821*t85*t290;
  t3363 = -0.009008821*t103*t382;
  t3371 = 0.241*t334*t1083;
  t3374 = 0.241*t453*t1070;
  t3376 = t3347 + t3360 + t3363 + t3371 + t3374;
  t294 = 0.241*t290*t112;
  t347 = 0.241*t334*t112;
  t451 = 0.241*t382*t449;
  t466 = 0.241*t453*t166;
  t470 = t294 + t347 + t451 + t466;
  t3180 = 0.241*t334*t773;
  t3181 = 0.241*t382*t640;
  t3182 = 0.241*t453*t747;
  t3188 = 0.241*t290*t1054;
  t3194 = t3105 + t3180 + t3181 + t3182 + t3188;
  t2247 = 0.241*t290*t1183;
  t2250 = 0.241*t334*t1183;
  t2252 = 0.241*t382*t1225;
  t2255 = 0.241*t453*t1265;
  t2256 = t2247 + t2250 + t2252 + t2255;
  t1877 = 0.241*t290*t1288;
  t1878 = 0.241*t334*t1288;
  t1880 = 0.241*t382*t1312;
  t1881 = 0.241*t453*t1325;
  t1883 = t1877 + t1878 + t1880 + t1881;
  t2792 = 0.241*t382*t1367;
  t2796 = 0.241*t334*t1399;
  t2797 = 0.241*t453*t1476;
  t2799 = 0.241*t290*t1545;
  t2801 = t2778 + t2792 + t2796 + t2797 + t2799;
  t2453 = 0.241*t382*t1619;
  t2456 = 0.241*t334*t1650;
  t2457 = 0.241*t453*t1703;
  t2458 = 0.241*t290*t1772;
  t2459 = t2431 + t2453 + t2456 + t2457 + t2458;
  t3509 = -0.02973458*t334;
  t3513 = 0.000529236*t382;
  t3531 = t3509 + t3513;
  t3345 = -0.000019783370916*t85;
  t3353 = -0.02973458*t1070;
  t3355 = t3345 + t3347 + t3353;
  t114 = 0.000529236*t112;
  t176 = -0.02973458*t166;
  t178 = t114 + t176;
  t3123 = -0.02973458*t747;
  t3145 = 0.000529236*t1054;
  t3146 = t3105 + t3123 + t3145;
  t2207 = 0.000529236*t1183;
  t2213 = -0.02973458*t1265;
  t2216 = t2207 + t2213;
  t1867 = 0.000529236*t1288;
  t1869 = -0.02973458*t1325;
  t1872 = t1867 + t1869;
  t2779 = -0.02973458*t1476;
  t2780 = 0.000529236*t1545;
  t2782 = t2778 + t2779 + t2780;
  t2432 = -0.02973458*t1703;
  t2450 = 0.000529236*t1772;
  t2451 = t2431 + t2432 + t2450;
  p_output1[0]=var2[8]*(-0.5*(0.482*t112*t166 + 0.482*t112*t449)*var2[0] - 0.5*t1327*var2[1] - 0.5*t1275*var2[2] - 0.5*t1857*var2[3] - 0.5*t1587*var2[4] - 0.5*t1058*var2[5] - 0.5*t1150*var2[6] - 0.5*t470*var2[7] - 0.5*t178*var2[8]);
  p_output1[1]=var2[8]*(-0.5*t1327*var2[0] - 0.5*(0.482*t1288*t1312 + 0.482*t1288*t1325)*var2[1] - 0.5*t2039*var2[2] - 0.5*t2176*var2[3] - 0.5*t2121*var2[4] - 0.5*t2010*var2[5] - 0.5*t1936*var2[6] - 0.5*t1883*var2[7] - 0.5*t1872*var2[8]);
  p_output1[2]=var2[8]*(-0.5*t1275*var2[0] - 0.5*t2039*var2[1] - 0.5*(0.482*t1183*t1225 + 0.482*t1183*t1265)*var2[2] - 0.5*t2419*var2[3] - 0.5*t2399*var2[4] - 0.5*t2345*var2[5] - 0.5*t2297*var2[6] - 0.5*t2256*var2[7] - 0.5*t2216*var2[8]);
  p_output1[3]=var2[8]*(-0.5*t1857*var2[0] - 0.5*t2176*var2[1] - 0.5*t2419*var2[2] - 0.5*(0.482*t1650*t1703 + 0.482*t1619*t1772 + t166*t2484 + t112*t2503 + t112*t2521 + 0.482*t1854*t2530 + t2509*t449 + 5.e-6*t112*t782)*var2[3] - 0.5*(t1236*t2484 + t1164*t2503 + t1207*t2509 + t1164*t2521 + t2604 + t2606 + t2619 + t2620 + t2651 + t2673 + 5.e-6*t112*t17*t97)*var2[4] - 0.5*(t146*t17*t2484 + t103*t17*t2509 + t2527 + t2531 + t2533 + t2534 + t2535 + t2549 + t17*t2503*t85 + t17*t2521*t85 + 5.e-6*t112*t91)*var2[5] - 0.5*(t103*t2503 + t103*t2521 + t2566 + t2567 + t2568 + t2571 + t2572 + t2587 + t2509*t412 + t2484*t85)*var2[6] - 0.5*t2459*var2[7] - 0.5*t2451*var2[8]);
  p_output1[4]=var2[8]*(-0.5*t1587*var2[0] - 0.5*t2121*var2[1] - 0.5*t2399*var2[2] - 0.5*(t2604 + t2606 + t2619 + t2620 + t2651 + t2673 + t166*t2844 + t112*t2872 + t112*t2903 + t2886*t449 + 5.e-6*t1164*t782)*var2[3] - 0.5*(0.482*t1399*t1476 + 0.482*t1367*t1545 + 0.482*t1584*t2664 + t1236*t2844 + t1164*t2872 + t1207*t2886 + t1164*t2903 + 5.e-6*t1164*t17*t97)*var2[4] - 0.5*(t146*t17*t2844 + t103*t17*t2886 + t2915 + t2918 + t2923 + t2924 + t2925 + t2930 + t17*t2872*t85 + t17*t2903*t85 + 5.e-6*t1164*t91)*var2[5] - 0.5*(t103*t2872 + t103*t2903 + t2984 + t2990 + t2995 + t3000 + t3001 + t3002 + t2886*t412 + t2844*t85)*var2[6] - 0.5*t2801*var2[7] - 0.5*t2782*var2[8]);
  p_output1[5]=var2[8]*(-0.5*t1058*var2[0] - 0.5*t2010*var2[1] - 0.5*t2345*var2[2] - 0.5*(t2527 + t2531 + t2533 + t2534 + t2535 + t2549 + t166*t3221 + t112*t3227 + t112*t3245 + t3240*t449 + 5.e-6*t17*t782*t85)*var2[3] - 0.5*(t2915 + t2918 + t2923 + t2924 + t2925 + t2930 + t1236*t3221 + t1164*t3227 + t1207*t3240 + t1164*t3245 + 5.e-6*t695*t85*t97)*var2[4] - 0.5*(t146*t17*t3221 + t103*t17*t3240 + 0.482*t1054*t640 + 0.482*t747*t773 + t17*t3227*t85 + t17*t3245*t85 + 5.e-6*t17*t85*t91 + 0.482*t2547*t970)*var2[5] - 0.5*(t103*t3227 + t103*t3245 + t3260 + t3261 + t3263 + t3265 + t3266 + t3267 + t3240*t412 + t3221*t85)*var2[6] - 0.5*t3194*var2[7] - 0.5*t3146*var2[8]);
  p_output1[6]=var2[8]*(-0.5*t1150*var2[0] - 0.5*t1936*var2[1] - 0.5*t2297*var2[2] - 0.5*(t2566 + t2567 + t2568 + t2571 + t2572 + t2587 + t112*t3388 + t112*t3406 + t166*t3431 + t3423*t449 + 5.e-6*t103*t782)*var2[3] - 0.5*(t2984 + t2990 + t2995 + t3000 + t3001 + t3002 + t1164*t3388 + t1164*t3406 + t1207*t3423 + t1236*t3431 + 5.e-6*t103*t17*t97)*var2[4] - 0.5*(t3260 + t3261 + t3263 + t3265 + t3266 + t3267 + t103*t17*t3423 + t146*t17*t3431 + t17*t3388*t85 + t17*t3406*t85 + 5.e-6*t103*t91)*var2[5] - 0.5*(0.482*t1070*t1083 + 0.482*t1138*t2578 + t103*t3388 + t103*t3406 + t3423*t412 + 0.000673517475602*t103*t85 + t3431*t85)*var2[6] - 0.5*t3376*var2[7] - 0.5*t3355*var2[8]);
  p_output1[7]=var2[8]*(-0.5*t470*var2[0] - 0.5*t1883*var2[1] - 0.5*t2256*var2[2] - 0.5*t2459*var2[3] - 0.5*t2801*var2[4] - 0.5*t3194*var2[5] - 0.5*t3376*var2[6] - 0.5*(0.482*t290*t382 + 0.482*t334*t453)*var2[7] - 0.5*t3531*var2[8]);
  p_output1[8]=(-0.5*t178*var2[0] - 0.5*t1872*var2[1] - 0.5*t2216*var2[2] - 0.5*t2451*var2[3] - 0.5*t2782*var2[4] - 0.5*t3146*var2[5] - 0.5*t3355*var2[6] - 0.5*t3531*var2[7])*var2[8];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec9_laikago_description.hh"

namespace SymFunction
{

void Ce2_vec9_laikago_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
