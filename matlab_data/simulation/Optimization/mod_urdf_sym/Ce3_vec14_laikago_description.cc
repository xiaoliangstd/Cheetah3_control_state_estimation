/*
 * Automatically Generated from Mathematica.
 * Tue 10 Dec 2019 16:02:51 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t738;
  double t994;
  double t1794;
  double t1572;
  double t1817;
  double t737;
  double t1864;
  double t1925;
  double t1956;
  double t1985;
  double t2300;
  double t2353;
  double t2526;
  double t2548;
  double t2566;
  double t2589;
  double t2591;
  double t2601;
  double t2407;
  double t2413;
  double t2415;
  double t2419;
  double t2451;
  double t2473;
  double t2326;
  double t2350;
  double t2351;
  double t2354;
  double t2355;
  double t2827;
  double t2828;
  double t2829;
  double t1648;
  double t1845;
  double t1861;
  double t1984;
  double t1989;
  double t2012;
  double t2015;
  double t2016;
  double t2032;
  double t2113;
  double t2127;
  double t2194;
  double t2205;
  double t2217;
  double t2238;
  double t2252;
  double t2257;
  double t2261;
  double t2378;
  double t2405;
  double t2474;
  double t2516;
  double t2588;
  double t2607;
  double t2619;
  double t2648;
  double t2651;
  double t2653;
  double t2673;
  double t2699;
  double t2703;
  double t2752;
  double t2771;
  double t2786;
  double t2812;
  double t2824;
  double t2838;
  double t2839;
  double t2851;
  double t2859;
  double t2892;
  double t2893;
  double t2936;
  double t2969;
  double t3461;
  double t3474;
  double t3543;
  double t3694;
  double t3908;
  double t3923;
  double t3959;
  double t3971;
  double t3975;
  double t4026;
  double t4028;
  double t4030;
  double t4181;
  double t4185;
  double t4187;
  double t4269;
  double t4276;
  double t4278;
  double t4268;
  double t4282;
  double t4283;
  double t4291;
  double t4293;
  double t4364;
  double t4368;
  double t4371;
  double t4415;
  double t4438;
  double t4453;
  double t4458;
  double t4459;
  double t4461;
  double t4494;
  double t4496;
  double t4502;
  double t4503;
  double t4541;
  double t4542;
  double t4564;
  double t4534;
  double t4535;
  double t4536;
  double t4524;
  double t4525;
  double t4526;
  double t4285;
  double t4509;
  double t4510;
  double t4261;
  double t4264;
  double t4266;
  double t4597;
  double t4598;
  double t4602;
  double t4571;
  double t4573;
  double t4577;
  double t4684;
  double t4686;
  double t4687;
  double t4793;
  double t4796;
  double t4797;
  double t4806;
  double t4792;
  double t4807;
  double t4816;
  double t4818;
  double t4823;
  double t4826;
  double t4828;
  double t4839;
  double t4840;
  double t4841;
  double t4842;
  double t4846;
  double t4877;
  double t4879;
  double t4881;
  double t4872;
  double t4873;
  double t4875;
  double t4786;
  double t4787;
  double t4788;
  double t4817;
  double t4850;
  double t4851;
  double t4894;
  double t4899;
  double t4900;
  double t5071;
  double t5072;
  double t5074;
  double t5333;
  double t5336;
  double t5340;
  double t5322;
  double t5323;
  double t5325;
  double t5376;
  double t5378;
  double t5379;
  double t5353;
  double t5358;
  double t5371;
  double t4604;
  double t5581;
  double t5582;
  double t5583;
  double t4655;
  double t4727;
  double t4771;
  double t4901;
  double t5695;
  double t5697;
  double t5702;
  double t4988;
  double t5126;
  double t5245;
  double t5587;
  double t5592;
  double t5596;
  double t4616;
  double t4619;
  double t4623;
  double t4670;
  double t4671;
  double t4678;
  double t5643;
  double t4730;
  double t4742;
  double t4744;
  double t5667;
  double t5672;
  double t4772;
  double t4773;
  double t4775;
  double t5705;
  double t4902;
  double t4907;
  double t4912;
  double t5715;
  double t5718;
  double t5003;
  double t5014;
  double t5021;
  double t5769;
  double t5127;
  double t5142;
  double t5167;
  double t5815;
  double t5820;
  double t5252;
  double t5261;
  double t5273;
  double t5631;
  double t5648;
  double t6085;
  double t6087;
  double t6088;
  double t6141;
  double t6142;
  double t5576;
  double t5605;
  double t5750;
  double t5775;
  double t6491;
  double t6492;
  double t6493;
  double t6529;
  double t6530;
  double t5684;
  double t5724;
  double t6968;
  double t6970;
  double t6971;
  double t7046;
  double t7076;
  double t7077;
  double t7085;
  double t7087;
  double t7094;
  double t7102;
  double t7104;
  double t7114;
  double t5577;
  double t5579;
  double t6380;
  double t6387;
  double t6364;
  double t6374;
  double t5606;
  double t5611;
  double t5632;
  double t5637;
  double t7536;
  double t6118;
  double t6169;
  double t7569;
  double t6290;
  double t6301;
  double t5656;
  double t5657;
  double t5690;
  double t5691;
  double t6759;
  double t6789;
  double t6847;
  double t6874;
  double t5726;
  double t5735;
  double t5751;
  double t5757;
  double t6498;
  double t6532;
  double t6669;
  double t6688;
  double t5776;
  double t5800;
  double t6922;
  double t6923;
  double t6924;
  double t6928;
  double t6931;
  double t6932;
  double t7643;
  double t7648;
  double t7561;
  double t8426;
  double t8427;
  double t8433;
  double t7595;
  double t8451;
  double t8457;
  double t8461;
  double t8351;
  double t8360;
  double t8379;
  double t7732;
  double t7774;
  double t8503;
  double t8505;
  double t8506;
  double t7825;
  double t7827;
  double t6934;
  double t6935;
  double t6936;
  double t7930;
  double t7975;
  double t8023;
  double t8051;
  double t8607;
  double t8615;
  double t8617;
  double t8622;
  double t8627;
  double t8628;
  double t6938;
  double t6940;
  double t6942;
  double t8177;
  double t8193;
  double t8302;
  double t8304;
  double t8904;
  double t8907;
  double t8910;
  double t6348;
  double t6350;
  double t8957;
  double t8959;
  double t8960;
  double t6075;
  double t6077;
  double t6391;
  double t6414;
  double t8948;
  double t9024;
  double t6484;
  double t6485;
  double t9451;
  double t9452;
  double t9453;
  double t9454;
  double t6724;
  double t6734;
  double t9609;
  double t9625;
  double t9626;
  double t9649;
  double t9675;
  double t9676;
  double t9739;
  double t9774;
  double t9778;
  double t3268;
  double t3269;
  double t3270;
  double t3282;
  double t3286;
  double t3310;
  double t9858;
  double t9865;
  double t10085;
  double t10125;
  double t10148;
  double t10154;
  double t9023;
  double t9093;
  double t10532;
  double t10534;
  double t10541;
  double t10497;
  double t10517;
  double t10519;
  double t9193;
  double t9440;
  double t9455;
  double t10940;
  double t10946;
  double t10981;
  double t10994;
  double t10996;
  double t10997;
  double t9497;
  double t9504;
  double t9627;
  double t9628;
  double t10524;
  double t10650;
  double t10684;
  double t17569;
  double t17570;
  double t17587;
  double t17592;
  double t17604;
  double t17606;
  double t10820;
  double t10849;
  double t10855;
  double t10993;
  double t11839;
  double t12555;
  double t18351;
  double t18384;
  double t18394;
  double t18412;
  double t18415;
  double t18475;
  double t9643;
  double t9677;
  double t9680;
  double t13907;
  double t15904;
  double t16418;
  double t18772;
  double t18777;
  double t18752;
  double t18754;
  double t18760;
  double t18737;
  double t18740;
  double t18762;
  double t18765;
  double t18787;
  double t18791;
  double t18799;
  double t18809;
  double t18810;
  double t8911;
  double t8912;
  double t8913;
  double t8918;
  double t8919;
  double t8920;
  double t9397;
  double t6593;
  double t6595;
  double t6604;
  double t6911;
  double t6912;
  double t6913;
  double t9400;
  double t9446;
  double t9478;
  double t18974;
  double t18983;
  double t18997;
  double t9495;
  double t9500;
  double t18914;
  double t18925;
  double t18942;
  double t9510;
  double t9642;
  double t9714;
  double t9824;
  double t9825;
  double t9827;
  double t9829;
  double t10086;
  double t10165;
  double t10168;
  double t10171;
  double t10416;
  double t3317;
  double t3318;
  double t3437;
  double t10428;
  double t10429;
  double t10433;
  double t10447;
  double t10490;
  double t11312;
  double t18999;
  double t11385;
  double t19217;
  double t19220;
  double t19228;
  double t19204;
  double t19205;
  double t19209;
  double t14790;
  double t19062;
  double t16507;
  double t17543;
  double t18344;
  double t19232;
  double t19238;
  double t18509;
  double t18511;
  double t19342;
  double t19345;
  double t19347;
  double t19351;
  double t19353;
  double t19354;
  double t18565;
  double t19256;
  double t19287;
  double t18598;
  double t18600;
  t738 = Cos(var1[13]);
  t994 = Cos(var1[5]);
  t1794 = Sin(var1[13]);
  t1572 = Sin(var1[12]);
  t1817 = Sin(var1[5]);
  t737 = Sin(var1[3]);
  t1864 = Cos(var1[3]);
  t1925 = Cos(var1[12]);
  t1956 = Cos(var1[4]);
  t1985 = Sin(var1[4]);
  t2300 = Cos(var1[14]);
  t2353 = Sin(var1[14]);
  t2526 = -1.*t2300*t1794;
  t2548 = -1.*t738*t2353;
  t2566 = t2526 + t2548;
  t2589 = t738*t2300;
  t2591 = -1.*t1794*t2353;
  t2601 = t2589 + t2591;
  t2407 = -1.*t2300;
  t2413 = 1. + t2407;
  t2415 = -0.21935*t2413;
  t2419 = -0.221546*t2300;
  t2451 = -0.12338*t2353;
  t2473 = t2415 + t2419 + t2451;
  t2326 = -1. + t2300;
  t2350 = 0.25*t2326;
  t2351 = -0.37338*t2300;
  t2354 = 0.002196*t2353;
  t2355 = t2350 + t2351 + t2354;
  t2827 = t2300*t1794;
  t2828 = t738*t2353;
  t2829 = t2827 + t2828;
  t1648 = -1.*t738*t994*t1572;
  t1845 = t1794*t1817;
  t1861 = t1648 + t1845;
  t1984 = t1925*t738*t1956;
  t1989 = t994*t1794;
  t2012 = t738*t1572*t1817;
  t2015 = t1989 + t2012;
  t2016 = -1.*t1985*t2015;
  t2032 = t1984 + t2016;
  t2113 = t994*t1572*t1794;
  t2127 = t738*t1817;
  t2194 = t2113 + t2127;
  t2205 = -1.*t1925*t1956*t1794;
  t2217 = t738*t994;
  t2238 = -1.*t1572*t1794*t1817;
  t2252 = t2217 + t2238;
  t2257 = -1.*t1985*t2252;
  t2261 = t2205 + t2257;
  t2378 = t2300*t2355;
  t2405 = 0.21935*t2353;
  t2474 = t2473*t2353;
  t2516 = t2378 + t2405 + t2474;
  t2588 = -1.*t994*t1572*t2566;
  t2607 = t2601*t1817;
  t2619 = t2588 + t2607;
  t2648 = t1925*t1956*t2566;
  t2651 = t994*t2601;
  t2653 = t1572*t2566*t1817;
  t2673 = t2651 + t2653;
  t2699 = -1.*t1985*t2673;
  t2703 = t2648 + t2699;
  t2752 = -0.21935*t2300;
  t2771 = -1.*t2300*t2473;
  t2786 = t2355*t2353;
  t2812 = t2752 + t2771 + t2786;
  t2824 = -1.*t994*t1572*t2601;
  t2838 = t2829*t1817;
  t2839 = t2824 + t2838;
  t2851 = t1925*t1956*t2601;
  t2859 = t994*t2829;
  t2892 = t1572*t2601*t1817;
  t2893 = t2859 + t2892;
  t2936 = -1.*t1985*t2893;
  t2969 = t2851 + t2936;
  t3461 = -1.*t1925*t738*t1985;
  t3474 = -1.*t1956*t2015;
  t3543 = t3461 + t3474;
  t3694 = t1925*t1794*t1985;
  t3908 = -1.*t1956*t2252;
  t3923 = t3694 + t3908;
  t3959 = -1.*t1925*t2566*t1985;
  t3971 = -1.*t1956*t2673;
  t3975 = t3959 + t3971;
  t4026 = -1.*t1925*t2601*t1985;
  t4028 = -1.*t1956*t2893;
  t4030 = t4026 + t4028;
  t4181 = t1956*t1572;
  t4185 = t1925*t1985*t1817;
  t4187 = t4181 + t4185;
  t4269 = -0.031996*t738;
  t4276 = 0.000482*t1794;
  t4278 = t4269 + t4276;
  t4268 = -0.05701*t1572;
  t4282 = t1925*t4278;
  t4283 = t4268 + t4282;
  t4291 = -1.*t738;
  t4293 = 1. + t4291;
  t4364 = -0.21935*t4293;
  t4368 = -0.219832*t738;
  t4371 = -0.031996*t1794;
  t4415 = t4364 + t4368 + t4371;
  t4438 = t994*t4415;
  t4453 = -1.*t1925;
  t4458 = 1. + t4453;
  t4459 = -0.0875*t4458;
  t4461 = -0.14451*t1925;
  t4494 = -1.*t1572*t4278;
  t4496 = t4459 + t4461 + t4494;
  t4502 = -1.*t4496*t1817;
  t4503 = t4438 + t4502;
  t4541 = t1956*t4283;
  t4542 = -1.*t1985*t4503;
  t4564 = t4541 + t4542;
  t4534 = t1572*t1985;
  t4535 = -1.*t1925*t1956*t1817;
  t4536 = t4534 + t4535;
  t4524 = t4283*t1985;
  t4525 = t1956*t4503;
  t4526 = t4524 + t4525;
  t4285 = -1.*t4283*t1985;
  t4509 = -1.*t1956*t4503;
  t4510 = t4285 + t4509;
  t4261 = t1925*t738*t1985;
  t4264 = t1956*t2015;
  t4266 = t4261 + t4264;
  t4597 = t994*t4496;
  t4598 = t4415*t1817;
  t4602 = t4597 + t4598;
  t4571 = -1.*t1572*t1985;
  t4573 = t1925*t1956*t1817;
  t4577 = t4571 + t4573;
  t4684 = -1.*t1925*t1794*t1985;
  t4686 = t1956*t2252;
  t4687 = t4684 + t4686;
  t4793 = -0.21935*t1794;
  t4796 = -1.*t1794*t2473;
  t4797 = t738*t2355;
  t4806 = t4793 + t4796 + t4797;
  t4792 = -0.037381*t1572;
  t4807 = t1925*t4806;
  t4816 = t4792 + t4807;
  t4818 = t738*t2473;
  t4823 = t1794*t2355;
  t4826 = t4364 + t4818 + t4823;
  t4828 = t994*t4826;
  t4839 = -0.124881*t1925;
  t4840 = -1.*t1572*t4806;
  t4841 = t4459 + t4839 + t4840;
  t4842 = -1.*t4841*t1817;
  t4846 = t4828 + t4842;
  t4877 = t1956*t4816;
  t4879 = -1.*t1985*t4846;
  t4881 = t4877 + t4879;
  t4872 = t4816*t1985;
  t4873 = t1956*t4846;
  t4875 = t4872 + t4873;
  t4786 = t1925*t2566*t1985;
  t4787 = t1956*t2673;
  t4788 = t4786 + t4787;
  t4817 = -1.*t4816*t1985;
  t4850 = -1.*t1956*t4846;
  t4851 = t4817 + t4850;
  t4894 = t994*t4841;
  t4899 = t4826*t1817;
  t4900 = t4894 + t4899;
  t5071 = t1925*t2601*t1985;
  t5072 = t1956*t2893;
  t5074 = t5071 + t5072;
  t5333 = t738*t994*t1572;
  t5336 = -1.*t1794*t1817;
  t5340 = t5333 + t5336;
  t5322 = -1.*t994*t1572*t1794;
  t5323 = -1.*t738*t1817;
  t5325 = t5322 + t5323;
  t5376 = t994*t1572*t2566;
  t5378 = -1.*t2601*t1817;
  t5379 = t5376 + t5378;
  t5353 = t994*t1572*t2601;
  t5358 = -1.*t2829*t1817;
  t5371 = t5353 + t5358;
  t4604 = -1.*t1925*t994*t4602;
  t5581 = -1.*t994*t4496;
  t5582 = -1.*t4415*t1817;
  t5583 = t5581 + t5582;
  t4655 = t4602*t1861;
  t4727 = t1925*t994*t4602;
  t4771 = -1.*t2194*t4602;
  t4901 = t1925*t994*t4900;
  t5695 = -1.*t994*t4841;
  t5697 = -1.*t4826*t1817;
  t5702 = t5695 + t5697;
  t4988 = -1.*t4900*t2619;
  t5126 = -1.*t1925*t994*t4900;
  t5245 = t4900*t2839;
  t5587 = t1925*t1817*t4602;
  t5592 = t2015*t4602;
  t5596 = t4503*t1861;
  t4616 = -1.*t4536*t4526;
  t4619 = -1.*t4187*t4564;
  t4623 = t4604 + t4616 + t4619;
  t4670 = t4266*t4526;
  t4671 = t2032*t4564;
  t4678 = t4655 + t4670 + t4671;
  t5643 = -1.*t1925*t1817*t4602;
  t4730 = t4536*t4526;
  t4742 = t4187*t4564;
  t4744 = t4727 + t4730 + t4742;
  t5667 = -1.*t2194*t4503;
  t5672 = -1.*t4602*t2252;
  t4772 = -1.*t4526*t4687;
  t4773 = -1.*t4564*t2261;
  t4775 = t4771 + t4772 + t4773;
  t5705 = -1.*t1925*t1817*t4900;
  t4902 = t4536*t4875;
  t4907 = t4187*t4881;
  t4912 = t4901 + t4902 + t4907;
  t5715 = -1.*t4900*t2673;
  t5718 = -1.*t4846*t2619;
  t5003 = -1.*t4875*t4788;
  t5014 = -1.*t4881*t2703;
  t5021 = t4988 + t5003 + t5014;
  t5769 = t1925*t1817*t4900;
  t5127 = -1.*t4536*t4875;
  t5142 = -1.*t4187*t4881;
  t5167 = t5126 + t5127 + t5142;
  t5815 = t4846*t2839;
  t5820 = t4900*t2893;
  t5252 = t4875*t5074;
  t5261 = t4881*t2969;
  t5273 = t5245 + t5252 + t5261;
  t5631 = t1572*t4283;
  t5648 = t1925*t4283*t1794;
  t6085 = 0.05701*t1572;
  t6087 = -1.*t1925*t4278;
  t6088 = t6085 + t6087;
  t6141 = -0.05701*t1925;
  t6142 = t6141 + t4494;
  t5576 = -1.*t1572*t4283;
  t5605 = t1925*t738*t4283;
  t5750 = -1.*t1572*t4816;
  t5775 = t1925*t4816*t2601;
  t6491 = 0.037381*t1572;
  t6492 = -1.*t1925*t4806;
  t6493 = t6491 + t6492;
  t6529 = -0.037381*t1925;
  t6530 = t6529 + t4840;
  t5684 = t1572*t4816;
  t5724 = -1.*t1925*t4816*t2566;
  t6968 = -1.*t738*t1956*t1572;
  t6970 = -1.*t1925*t738*t1985*t1817;
  t6971 = t6968 + t6970;
  t7046 = t1956*t1572*t1794;
  t7076 = t1925*t1794*t1985*t1817;
  t7077 = t7046 + t7076;
  t7085 = -1.*t1956*t1572*t2566;
  t7087 = -1.*t1925*t2566*t1985*t1817;
  t7094 = t7085 + t7087;
  t7102 = -1.*t1956*t1572*t2601;
  t7104 = -1.*t1925*t2601*t1985*t1817;
  t7114 = t7102 + t7104;
  t5577 = t1925*t1817*t4503;
  t5579 = t5576 + t5577 + t4604;
  t6380 = -1.*t1925*t4283;
  t6387 = -1.*t1572*t6142;
  t6364 = -1.*t738*t1572*t4283;
  t6374 = t1925*t738*t6142;
  t5606 = t2015*t4503;
  t5611 = t5605 + t5606 + t4655;
  t5632 = -1.*t1925*t1817*t4503;
  t5637 = t5631 + t5632 + t4727;
  t7536 = Power(t994,2);
  t6118 = t1925*t4283;
  t6169 = t1572*t6142;
  t7569 = Power(t1817,2);
  t6290 = -1.*t1572*t4283*t1794;
  t6301 = t1925*t6142*t1794;
  t5656 = -1.*t4503*t2252;
  t5657 = t5648 + t4771 + t5656;
  t5690 = -1.*t1925*t1817*t4846;
  t5691 = t5684 + t5690 + t4901;
  t6759 = t1925*t4816;
  t6789 = t1572*t6530;
  t6847 = t1572*t4816*t2566;
  t6874 = -1.*t1925*t6530*t2566;
  t5726 = -1.*t4846*t2673;
  t5735 = t5724 + t5726 + t4988;
  t5751 = t1925*t1817*t4846;
  t5757 = t5750 + t5751 + t5126;
  t6498 = -1.*t1925*t4816;
  t6532 = -1.*t1572*t6530;
  t6669 = -1.*t1572*t4816*t2601;
  t6688 = t1925*t6530*t2601;
  t5776 = t4846*t2893;
  t5800 = t5775 + t5245 + t5776;
  t6922 = -1.*t738*t1572*t1985;
  t6923 = t1925*t738*t1956*t1817;
  t6924 = t6922 + t6923;
  t6928 = t1572*t1794*t1985;
  t6931 = -1.*t1925*t1956*t1794*t1817;
  t6932 = t6928 + t6931;
  t7643 = -1.*t1925*t738*t994*t4602;
  t7648 = t994*t6088*t1861;
  t7561 = -1.*t1925*t7536*t6088;
  t8426 = t6142*t1985;
  t8427 = -1.*t1956*t6088*t1817;
  t8433 = t8426 + t8427;
  t7595 = t994*t1572*t4602;
  t8451 = t1956*t6142;
  t8457 = t6088*t1985*t1817;
  t8461 = t8451 + t8457;
  t8351 = t1925*t1985;
  t8360 = t1956*t1572*t1817;
  t8379 = t8351 + t8360;
  t7732 = t1925*t7536*t6088;
  t7774 = -1.*t994*t1572*t4602;
  t8503 = t1925*t1956;
  t8505 = -1.*t1572*t1985*t1817;
  t8506 = t8503 + t8505;
  t7825 = -1.*t994*t6088*t2194;
  t7827 = -1.*t1925*t994*t1794*t4602;
  t6934 = -1.*t1572*t2566*t1985;
  t6935 = t1925*t1956*t2566*t1817;
  t6936 = t6934 + t6935;
  t7930 = t1925*t7536*t6493;
  t7975 = -1.*t994*t1572*t4900;
  t8023 = t1925*t994*t2566*t4900;
  t8051 = -1.*t994*t6493*t2619;
  t8607 = t6530*t1985;
  t8615 = -1.*t1956*t6493*t1817;
  t8617 = t8607 + t8615;
  t8622 = t1956*t6530;
  t8627 = t6493*t1985*t1817;
  t8628 = t8622 + t8627;
  t6938 = -1.*t1572*t2601*t1985;
  t6940 = t1925*t1956*t2601*t1817;
  t6942 = t6938 + t6940;
  t8177 = -1.*t1925*t7536*t6493;
  t8193 = t994*t1572*t4900;
  t8302 = -1.*t1925*t994*t2601*t4900;
  t8304 = t994*t6493*t2839;
  t8904 = -1.*t738*t2300;
  t8907 = t1794*t2353;
  t8910 = t8904 + t8907;
  t6348 = -1.*t1925*t4496;
  t6350 = t5576 + t6348;
  t8957 = 0.000482*t738;
  t8959 = 0.031996*t1794;
  t8960 = t8957 + t8959;
  t6075 = t1925*t4496;
  t6077 = t5631 + t6075;
  t6391 = -1.*t738*t1572*t4496;
  t6414 = t4415*t1794;
  t8948 = Power(t1925,2);
  t9024 = Power(t1572,2);
  t6484 = -1.*t1925*t4841;
  t6485 = t5750 + t6484;
  t9451 = -0.21935*t738;
  t9452 = -1.*t738*t2473;
  t9453 = -1.*t1794*t2355;
  t9454 = t9451 + t9452 + t9453;
  t6724 = t1925*t4841;
  t6734 = t5684 + t6724;
  t9609 = -1.*t994*t1794;
  t9625 = -1.*t738*t1572*t1817;
  t9626 = t9609 + t9625;
  t9649 = t994*t2566;
  t9675 = t1572*t8910*t1817;
  t9676 = t9649 + t9675;
  t9739 = -1.*t1925*t738*t1956;
  t9774 = -1.*t1985*t9626;
  t9778 = t9739 + t9774;
  t3268 = t1864*t2194;
  t3269 = -1.*t737*t2261;
  t3270 = t3268 + t3269;
  t3282 = t1864*t2619;
  t3286 = -1.*t737*t2703;
  t3310 = t3282 + t3286;
  t9858 = -1.*t994*t1572*t8910;
  t9865 = t2566*t1817;
  t10085 = t9858 + t9865;
  t10125 = t1925*t1956*t8910;
  t10148 = -1.*t1985*t9676;
  t10154 = t10125 + t10148;
  t9023 = t8948*t738*t8960;
  t9093 = -1.*t1925*t4283*t1794;
  t10532 = t994*t4278;
  t10534 = t1572*t8960*t1817;
  t10541 = t10532 + t10534;
  t10497 = -1.*t994*t1572*t8960;
  t10517 = t4278*t1817;
  t10519 = t10497 + t10517;
  t9193 = t8948*t8960*t1794;
  t9440 = t1925*t4816*t2566;
  t9455 = t8948*t9454*t2601;
  t10940 = -1.*t994*t1572*t9454;
  t10946 = t4806*t1817;
  t10981 = t10940 + t10946;
  t10994 = t994*t4806;
  t10996 = t1572*t9454*t1817;
  t10997 = t10994 + t10996;
  t9497 = -1.*t8948*t9454*t2566;
  t9504 = -1.*t1925*t4816*t8910;
  t9627 = t1956*t9626;
  t9628 = t3461 + t9627;
  t10524 = -1.*t1925*t994*t10519;
  t10650 = t2194*t4602;
  t10684 = t10519*t1861;
  t17569 = t1925*t8960*t1985;
  t17570 = t1956*t10541;
  t17587 = t17569 + t17570;
  t17592 = t1925*t1956*t8960;
  t17604 = -1.*t1985*t10541;
  t17606 = t17592 + t17604;
  t10820 = t1925*t994*t10519;
  t10849 = -1.*t2194*t10519;
  t10855 = -1.*t4602*t5340;
  t10993 = -1.*t1925*t994*t10981;
  t11839 = t10981*t2839;
  t12555 = t4900*t2619;
  t18351 = t1925*t9454*t1985;
  t18384 = t1956*t10997;
  t18394 = t18351 + t18384;
  t18412 = t1925*t1956*t9454;
  t18415 = -1.*t1985*t10997;
  t18475 = t18412 + t18415;
  t9643 = t1925*t8910*t1985;
  t9677 = t1956*t9676;
  t9680 = t9643 + t9677;
  t13907 = t1925*t994*t10981;
  t15904 = -1.*t4900*t10085;
  t16418 = -1.*t10981*t2619;
  t18772 = -0.12338*t2300;
  t18777 = t18772 + t2354;
  t18752 = 0.002196*t2300;
  t18754 = 0.12338*t2353;
  t18760 = t18752 + t18754;
  t18737 = 0.21935*t2300;
  t18740 = t2300*t2473;
  t18762 = t2300*t18760;
  t18765 = -1.*t2355*t2353;
  t18787 = t18777*t2353;
  t18791 = t18737 + t18740 + t18762 + t18765 + t18787;
  t18799 = -1.*t2300*t18777;
  t18809 = t18760*t2353;
  t18810 = t2378 + t18799 + t2405 + t2474 + t18809;
  t8911 = 5.e-6*t8910;
  t8912 = 0.009008821*t2566*t2812;
  t8913 = 0.124881*t2601;
  t8918 = 0.0875*t8910;
  t8919 = t8913 + t8918;
  t8920 = -0.241*t2516*t8919;
  t9397 = -5.e-6*t1925*t2566;
  t6593 = t4826*t2829;
  t6595 = -1.*t1572*t4841*t2601;
  t6604 = t6593 + t5775 + t6595;
  t6911 = t1572*t4841*t2566;
  t6912 = -1.*t4826*t2601;
  t6913 = t5724 + t6911 + t6912;
  t9400 = t1925*t6485*t2566;
  t9446 = -1.*t1572*t4841*t2566;
  t9478 = t4826*t2601;
  t18974 = -1.*t1794*t18777;
  t18983 = t738*t18760;
  t18997 = t18974 + t18983;
  t9495 = t1925*t6734*t8910;
  t9500 = -1.*t4826*t2566;
  t18914 = t738*t18777;
  t18925 = t1794*t18760;
  t18942 = t18914 + t18925;
  t9510 = t1572*t4841*t8910;
  t9642 = -0.241*t2812*t4788;
  t9714 = -0.241*t2516*t9680;
  t9824 = t737*t2619;
  t9825 = t1864*t2703;
  t9827 = t9824 + t9825;
  t9829 = -0.241*t2812*t9827;
  t10086 = t737*t10085;
  t10165 = t1864*t10154;
  t10168 = t10086 + t10165;
  t10171 = -0.241*t2516*t10168;
  t10416 = -0.241*t2812*t3310;
  t3317 = t1864*t2839;
  t3318 = -1.*t737*t2969;
  t3437 = t3317 + t3318;
  t10428 = t1864*t10085;
  t10429 = -1.*t737*t10154;
  t10433 = t10428 + t10429;
  t10447 = -0.241*t2516*t10433;
  t10490 = 5.e-6*t5379;
  t11312 = t2619*t5757;
  t18999 = t8948*t18997*t2601;
  t11385 = t4846*t2673;
  t19217 = -1.*t994*t1572*t18997;
  t19220 = t18942*t1817;
  t19228 = t19217 + t19220;
  t19204 = t994*t18942;
  t19205 = t1572*t18997*t1817;
  t19209 = t19204 + t19205;
  t14790 = t10085*t5691;
  t19062 = -1.*t8948*t18997*t2566;
  t16507 = -1.*t4846*t9676;
  t17543 = 5.e-6*t3975;
  t18344 = t4788*t5167;
  t19232 = -1.*t1925*t994*t19228;
  t19238 = t19228*t2839;
  t18509 = t4875*t4788;
  t18511 = t4881*t2703;
  t19342 = t1925*t18997*t1985;
  t19345 = t1956*t19209;
  t19347 = t19342 + t19345;
  t19351 = t1925*t1956*t18997;
  t19353 = -1.*t1985*t19209;
  t19354 = t19351 + t19353;
  t18565 = t9680*t4912;
  t19256 = t1925*t994*t19228;
  t19287 = -1.*t19228*t2619;
  t18598 = -1.*t4875*t9680;
  t18600 = -1.*t4881*t10154;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.000736496*(-1.*t1864*t2032 - 1.*t1861*t737) + 0.048889888*(-1.*t1864*t2261 - 1.*t2194*t737) - 0.241*t2516*(-1.*t1864*t2703 - 1.*t2619*t737) - 0.241*t2812*(-1.*t1864*t2969 - 1.*t2839*t737))*var2[1] - 0.5*(0.048889888*t3270 - 0.241*t2516*t3310 - 0.241*t2812*t3437 - 0.000736496*(t1861*t1864 - 1.*t2032*t737))*var2[2])*var2[13];
  p_output1[4]=(-0.5*(-0.000736496*t2032 + 0.048889888*t2261 - 0.241*t2516*t2703 - 0.241*t2812*t2969)*var2[0] - 0.5*(0.000736496*t3543*t737 - 0.048889888*t3923*t737 + 0.241*t2516*t3975*t737 + 0.241*t2812*t4030*t737)*var2[1] - 0.5*(-0.000736496*t1864*t3543 + 0.048889888*t1864*t3923 - 0.241*t1864*t2516*t3975 - 0.241*t1864*t2812*t4030)*var2[2] - 0.5*(-0.000085*t2032 + 1.e-5*t2261 + 5.e-6*(-1.*t1925*t1956*t2601 + t1985*t2893) - 0.015477*t4187 + 0.048889888*(t4536*(t2032*t4510 + t2032*t4526 + t3543*t4564 + t4266*t4564) + t4266*(-1.*t4187*t4510 - 1.*t4187*t4526 - 1.*t4536*t4564 - 1.*t4564*t4577) + t2032*t4623 + t4187*t4678) - 0.000736496*((t4187*t4510 + t4187*t4526 + t4536*t4564 + t4564*t4577)*t4687 + t4536*(-1.*t2261*t4510 - 1.*t2261*t4526 - 1.*t3923*t4564 - 1.*t4564*t4687) + t2261*t4744 + t4187*t4775) - 0.241*t2812*(t4788*(t4187*t4851 + t4187*t4875 + t4536*t4881 + t4577*t4881) + t4536*(-1.*t2703*t4851 - 1.*t2703*t4875 - 1.*t3975*t4881 - 1.*t4788*t4881) + t2703*t4912 + t4187*t5021) - 0.241*t2516*((-1.*t4187*t4851 - 1.*t4187*t4875 - 1.*t4536*t4881 - 1.*t4577*t4881)*t5074 + t4536*(t2969*t4851 + t2969*t4875 + t4030*t4881 + t4881*t5074) + t2969*t5167 + t4187*t5273))*var2[3])*var2[13];
  p_output1[5]=(-0.5*(0.048889888*t1956*t5325 - 0.000736496*t1956*t5340 - 0.241*t1956*t2812*t5371 - 0.241*t1956*t2516*t5379)*var2[0] - 0.5*(0.048889888*(t1864*t2252 + t1985*t5325*t737) - 0.000736496*(t1864*t2015 + t1985*t5340*t737) - 0.241*t2812*(t1864*t2893 + t1985*t5371*t737) - 0.241*t2516*(t1864*t2673 + t1985*t5379*t737))*var2[1] - 0.5*(-0.000736496*(-1.*t1864*t1985*t5340 + t2015*t737) + 0.048889888*(-1.*t1864*t1985*t5325 + t2252*t737) - 0.241*t2516*(-1.*t1864*t1985*t5379 + t2673*t737) - 0.241*t2812*(-1.*t1864*t1985*t5371 + t2893*t737))*var2[2] - 0.5*(1.e-5*t1956*t5325 - 0.000085*t1956*t5340 - 5.e-6*t1956*t5371 + 0.015477*t1925*t1956*t994 + 0.048889888*(t1956*t4623*t5340 + t4536*(t1956*t4526*t5340 - 1.*t1985*t4564*t5340 - 1.*t1985*t2032*t5583 + t1956*t4266*t5583 + t5592 + t5596) - 1.*t1925*t1956*t4678*t994 + t4266*(t1985*t4187*t5583 - 1.*t1956*t4536*t5583 + t5587 - 1.*t1925*t4503*t994 + t1925*t1956*t4526*t994 - 1.*t1925*t1985*t4564*t994)) - 0.000736496*(t1956*t4744*t5325 + t4536*(-1.*t1956*t4526*t5325 + t1985*t4564*t5325 + t1985*t2261*t5583 - 1.*t1956*t4687*t5583 + t5667 + t5672) - 1.*t1925*t1956*t4775*t994 + t4687*(-1.*t1985*t4187*t5583 + t1956*t4536*t5583 + t5643 + t1925*t4503*t994 - 1.*t1925*t1956*t4526*t994 + t1925*t1985*t4564*t994)) - 0.241*t2516*(t1956*t5167*t5371 + t4536*(t1956*t4875*t5371 - 1.*t1985*t4881*t5371 - 1.*t1985*t2969*t5702 + t1956*t5074*t5702 + t5815 + t5820) - 1.*t1925*t1956*t5273*t994 + t5074*(t1985*t4187*t5702 - 1.*t1956*t4536*t5702 + t5769 - 1.*t1925*t4846*t994 + t1925*t1956*t4875*t994 - 1.*t1925*t1985*t4881*t994)) - 0.241*t2812*(t1956*t4912*t5379 + t4536*(-1.*t1956*t4875*t5379 + t1985*t4881*t5379 + t1985*t2703*t5702 - 1.*t1956*t4788*t5702 + t5715 + t5718) - 1.*t1925*t1956*t5021*t994 + t4788*(-1.*t1985*t4187*t5702 + t1956*t4536*t5702 + t5705 + t1925*t4846*t994 - 1.*t1925*t1956*t4875*t994 + t1925*t1985*t4881*t994)))*var2[3] - 0.5*(0.015477*t1817*t1925 - 0.000085*t2015 + 1.e-5*t2252 + 5.e-6*(-1.*t1572*t1817*t2601 - 1.*t2829*t994) + 0.048889888*(t2015*t5579 + t1861*(t1817*t1925*t5583 + t5587) - 1.*t1817*t1925*t5611 + t1925*(t4503*t5340 + t2015*t5583 + t5592 + t5596)*t994) - 0.000736496*(t2252*t5637 + t2194*(-1.*t1817*t1925*t5583 + t5643) - 1.*t1817*t1925*t5657 + t1925*(-1.*t4503*t5325 - 1.*t2252*t5583 + t5667 + t5672)*t994) - 0.241*t2812*(t2673*t5691 + t2619*(-1.*t1817*t1925*t5702 + t5705) - 1.*t1817*t1925*t5735 + t1925*(-1.*t4846*t5379 - 1.*t2673*t5702 + t5715 + t5718)*t994) - 0.241*t2516*(t2893*t5757 + t2839*(t1817*t1925*t5702 + t5769) - 1.*t1817*t1925*t5800 + t1925*(t4846*t5371 + t2893*t5702 + t5815 + t5820)*t994))*var2[4])*var2[13];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=(-0.5*(-0.000736496*t6924 + 0.048889888*t6932 - 0.241*t2516*t6936 - 0.241*t2812*t6942)*var2[0] - 0.5*(0.048889888*(-1.*t7077*t737 + t1794*t1864*t1925*t994) - 0.241*t2516*(-1.*t7094*t737 - 1.*t1864*t1925*t2566*t994) - 0.241*t2812*(-1.*t7114*t737 - 1.*t1864*t1925*t2601*t994) - 0.000736496*(-1.*t6971*t737 - 1.*t1864*t1925*t738*t994))*var2[1] - 0.5*(0.048889888*(t1864*t7077 + t1794*t1925*t737*t994) - 0.241*t2516*(t1864*t7094 - 1.*t1925*t2566*t737*t994) - 0.241*t2812*(t1864*t7114 - 1.*t1925*t2601*t737*t994) - 0.000736496*(t1864*t6971 - 1.*t1925*t737*t738*t994))*var2[2] - 0.5*(5.e-6*(-1.*t1817*t1925*t1956*t2601 + t1572*t1985*t2601) - 0.000085*t6924 + 1.e-5*t6932 - 0.015477*t8379 + 0.048889888*(t4623*t6924 + t4678*t8379 + t4536*(t4526*t6924 + t4564*t6971 + t7643 + t7648 + t4266*t8433 + t2032*t8461) + t4266*(t7561 + t7595 - 1.*t4526*t8379 - 1.*t4536*t8433 - 1.*t4187*t8461 - 1.*t4564*t8506)) - 0.000736496*(t4744*t6932 + t4775*t8379 + t4536*(-1.*t4526*t6932 - 1.*t4564*t7077 + t7825 + t7827 - 1.*t4687*t8433 - 1.*t2261*t8461) + t4687*(t7732 + t7774 + t4526*t8379 + t4536*t8433 + t4187*t8461 + t4564*t8506)) - 0.241*t2516*(t5167*t6942 + t5273*t8379 + t4536*(t4875*t6942 + t4881*t7114 + t8302 + t8304 + t5074*t8617 + t2969*t8628) + t5074*(t8177 + t8193 - 1.*t4875*t8379 - 1.*t4881*t8506 - 1.*t4536*t8617 - 1.*t4187*t8628)) - 0.241*t2812*(t4912*t6936 + t5021*t8379 + t4536*(-1.*t4875*t6936 - 1.*t4881*t7094 + t8023 + t8051 - 1.*t4788*t8617 - 1.*t2703*t8628) + t4788*(t7930 + t7975 + t4875*t8379 + t4881*t8506 + t4536*t8617 + t4187*t8628)))*var2[3] - 0.5*(0.015477*t1572*t994 + 1.e-5*t1794*t1925*t994 + 5.e-6*t1925*t2601*t994 + 0.000085*t1925*t738*t994 + 0.048889888*(t1861*(-1.*t1572*t1817*t4503 + t6380 + t6387 + t7561 - 1.*t1925*t6088*t7569 + t7595) - 1.*t1572*t5611*t994 - 1.*t1925*t5579*t738*t994 + t1925*(-1.*t1817*t2015*t6088 + t6364 + t6374 + t1817*t1925*t4503*t738 + t7643 + t7648)*t994) - 0.000736496*(t2194*(t1572*t1817*t4503 + t6118 + t6169 + t1925*t6088*t7569 + t7732 + t7774) + t1794*t1925*t5637*t994 - 1.*t1572*t5657*t994 + t1925*(t1794*t1817*t1925*t4503 + t1817*t2252*t6088 + t6290 + t6301 + t7825 + t7827)*t994) - 0.241*t2812*(t2619*(t1572*t1817*t4846 + t6759 + t6789 + t1925*t6493*t7569 + t7930 + t7975) - 1.*t1925*t2566*t5691*t994 - 1.*t1572*t5735*t994 + t1925*(-1.*t1817*t1925*t2566*t4846 + t1817*t2673*t6493 + t6847 + t6874 + t8023 + t8051)*t994) - 0.241*t2516*(t2839*(-1.*t1572*t1817*t4846 + t6498 + t6532 - 1.*t1925*t6493*t7569 + t8177 + t8193) - 1.*t1925*t2601*t5757*t994 - 1.*t1572*t5800*t994 + t1925*(t1817*t1925*t2601*t4846 - 1.*t1817*t2893*t6493 + t6669 + t6688 + t8302 + t8304)*t994))*var2[4] - 0.5*(1.e-5*t1572*t1794 - 0.015477*t1925 + 5.e-6*t1572*t2601 - 0.241*t2516*(-1.*t1572*t2601*t6485 + t1925*t2601*(t1572*t4841 - 1.*t1925*t6493 + t6498 + t6532) + t1925*t6604 + t1572*(-1.*t1925*t2601*t4841 - 1.*t1572*t2601*t6493 + t6669 + t6688)) - 0.241*t2812*(-1.*t1572*t2566*t6734 + t1925*t2566*(-1.*t1572*t4841 + t1925*t6493 + t6759 + t6789) + t1572*(t1925*t2566*t4841 + t1572*t2566*t6493 + t6847 + t6874) + t1925*t6913) + 0.000085*t1572*t738 - 0.000736496*(t1572*t1794*t6077 - 1.*t1794*t1925*(-1.*t1572*t4496 + t1925*t6088 + t6118 + t6169) + t1572*(-1.*t1794*t1925*t4496 - 1.*t1572*t1794*t6088 + t6290 + t6301) + t1925*(-1.*t1572*t1794*t4496 + t5648 - 1.*t4415*t738)) + 0.048889888*(t1925*(t5605 + t6391 + t6414) - 1.*t1572*t6350*t738 + t1925*(t1572*t4496 - 1.*t1925*t6088 + t6380 + t6387)*t738 + t1572*(t6364 + t6374 - 1.*t1925*t4496*t738 - 1.*t1572*t6088*t738)))*var2[5])*var2[13];
  p_output1[13]=(-0.5*(-0.000736496*t4687 + 0.048889888*t9628 + t9642 + t9714)*var2[0] - 0.5*(t10416 + t10447 - 0.000736496*t3270 + 0.048889888*(t1864*t5340 - 1.*t737*t9778))*var2[1] - 0.5*(t10171 - 0.000736496*(t1864*t2261 + t2194*t737) + 0.048889888*(t5340*t737 + t1864*t9778) + t9829)*var2[2] - 0.5*(t17543 - 0.000085*t4687 + 0.048889888*(t4266*(t10524 - 1.*t17606*t4187 - 1.*t17587*t4536) + t4623*t4687 + t4536*(t10650 + t10684 + t17606*t2032 + t17587*t4266 + t2261*t4564 + t4526*t4687)) - 0.241*t2812*(t18565 + (t13907 + t18475*t4187 + t18394*t4536)*t4788 + t4536*(t15904 + t16418 + t18598 + t18600 - 1.*t18475*t2703 - 1.*t18394*t4788)) - 0.241*t2516*(t18344 + (t10993 - 1.*t18475*t4187 - 1.*t18394*t4536)*t5074 + t4536*(t11839 + t12555 + t18509 + t18511 + t18475*t2969 + t18394*t5074)) + 1.e-5*t9628 - 0.000736496*((t10820 + t17606*t4187 + t17587*t4536)*t4687 + t4744*t9628 + t4536*(t10849 + t10855 - 1.*t17606*t2261 - 1.*t17587*t4687 - 1.*t4526*t9628 - 1.*t4564*t9778)))*var2[3] - 0.5*(t10490 - 0.000085*t2194 + 1.e-5*t5340 + 0.048889888*(t2194*t5579 + t1861*(t10524 + t10541*t1817*t1925 - 1.*t1572*t1925*t8960) + t1925*(t10650 + t10684 + t10541*t2015 + t2252*t4503 + t9023 + t9093)*t994) - 0.241*t2516*(t11312 + t2839*(t10993 + t10997*t1817*t1925 - 1.*t1572*t1925*t9454) + t1925*(t11385 + t11839 + t12555 + t10997*t2893 + t9440 + t9455)*t994) - 0.241*t2812*(t14790 + t2619*(t13907 - 1.*t10997*t1817*t1925 + t1572*t1925*t9454) + t1925*(t15904 + t16418 + t16507 - 1.*t10997*t2673 + t9497 + t9504)*t994) - 0.000736496*(t5340*t5637 + t2194*(t10820 - 1.*t10541*t1817*t1925 + t1572*t1925*t8960) + t1925*(t10849 + t10855 - 1.*t10541*t2252 + t5605 + t9193 - 1.*t4503*t9626)*t994))*var2[4] - 0.5*(0.000085*t1794*t1925 - 1.e-5*t1925*t738 + 0.048889888*(-1.*t1794*t1925*t6350 + t1572*(t1794*t4278 + t1572*t1794*t4496 + t4415*t738 + t9023 + t738*t8960*t9024 + t9093)) - 0.000736496*(-1.*t1925*t6077*t738 + t1572*(t5605 + t6391 + t6414 - 1.*t4278*t738 + t1794*t8960*t9024 + t9193)) + t9397 - 0.241*t2516*(t9400 + t1572*(t2829*t4806 + t9440 + t9446 + t2601*t9024*t9454 + t9455 + t9478)) - 0.241*t2812*(t9495 + t1572*(-1.*t2601*t4806 - 1.*t2566*t9024*t9454 + t9497 + t9500 + t9504 + t9510)))*var2[5] - 0.5*(-0.00005198763696*t1794 + 0.00270221251488*t738 + t8911 + t8912 + t8920)*var2[12])*var2[13];
  p_output1[14]=var2[13]*(-0.5*(-0.241*t18791*t4788 - 0.241*t18810*t5074 + t9642 + t9714)*var2[0] - 0.5*(t10416 + t10447 - 0.241*t18791*t3310 - 0.241*t18810*t3437)*var2[1] - 0.5*(t10171 - 0.241*t18810*(t1864*t2969 + t2839*t737) - 0.241*t18791*t9827 + t9829)*var2[2] - 0.5*(t17543 - 0.241*t2812*(t18565 + (t19256 + t19354*t4187 + t19347*t4536)*t4788 + t4536*(t15904 + t18598 + t18600 + t19287 - 1.*t19354*t2703 - 1.*t19347*t4788)) - 0.241*t18810*(t4788*t4912 + t4536*t5021) - 0.241*t2516*(t18344 + (t19232 - 1.*t19354*t4187 - 1.*t19347*t4536)*t5074 + t4536*(t12555 + t18509 + t18511 + t19238 + t19354*t2969 + t19347*t5074)) - 0.241*t18791*(t5074*t5167 + t4536*t5273))*var2[3] - 0.5*(t10490 - 0.241*t18810*(t2619*t5691 + t1925*t5735*t994) - 0.241*t18791*(t2839*t5757 + t1925*t5800*t994) - 0.241*t2516*(t11312 + (t19232 - 1.*t1572*t18997*t1925 + t1817*t19209*t1925)*t2839 + t1925*(t11385 + t12555 + t18999 + t19238 + t19209*t2893 + t9440)*t994) - 0.241*t2812*(t14790 + (t1572*t18997*t1925 - 1.*t1817*t19209*t1925 + t19256)*t2619 + t1925*(t15904 + t16507 + t19062 + t19287 - 1.*t19209*t2673 + t9504)*t994))*var2[4] - 0.5*(-0.241*t18791*(t1925*t2601*t6485 + t1572*t6604) - 0.241*t18810*(t1925*t2566*t6734 + t1572*t6913) + t9397 - 0.241*t2516*(t9400 + t1572*(t18999 + t18942*t2829 + t18997*t2601*t9024 + t9440 + t9446 + t9478)) - 0.241*t2812*(t9495 + t1572*(t19062 - 1.*t18942*t2601 - 1.*t18997*t2566*t9024 + t9500 + t9504 + t9510)))*var2[5] - 0.5*(0.009008821*t18810*t2601 - 0.241*t18791*(0.0875*t2566 + 0.124881*t2829) + t8911 + t8912 + t8920)*var2[12] - 0.5*(-0.482*t18791*t2516 - 0.482*t18810*t2812)*var2[13] - 0.5*(0.02973458*t18791 - 0.000529236*t18810)*var2[14]);
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec14_laikago_description.hh"

namespace SymFunction
{

void Ce3_vec14_laikago_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
