/*
 * Automatically Generated from Mathematica.
 * Tue 10 Dec 2019 16:02:43 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1188;
  double t3888;
  double t3962;
  double t4154;
  double t4191;
  double t4248;
  double t4251;
  double t4298;
  double t4357;
  double t3904;
  double t4019;
  double t4047;
  double t1451;
  double t1662;
  double t2357;
  double t2788;
  double t2819;
  double t2900;
  double t3229;
  double t3319;
  double t3330;
  double t3337;
  double t3391;
  double t3530;
  double t3599;
  double t5268;
  double t5279;
  double t5487;
  double t5506;
  double t5519;
  double t5536;
  double t5539;
  double t5597;
  double t7371;
  double t7738;
  double t8214;
  double t8287;
  double t8400;
  double t5278;
  double t5327;
  double t5398;
  double t8979;
  double t9014;
  double t9084;
  double t9218;
  double t9378;
  double t9385;
  double t9386;
  double t6072;
  double t8414;
  double t8570;
  double t9650;
  double t9692;
  double t9703;
  double t4061;
  double t4358;
  double t4363;
  double t4369;
  double t4419;
  double t5006;
  double t5016;
  double t5085;
  double t5177;
  double t17573;
  double t17575;
  double t17578;
  double t9177;
  double t9509;
  double t9517;
  double t9607;
  double t9729;
  double t9733;
  double t9799;
  double t9883;
  double t9884;
  double t9990;
  double t9997;
  double t10021;
  double t10193;
  double t10200;
  double t10209;
  double t10225;
  double t10262;
  double t10338;
  double t10642;
  double t10827;
  double t10927;
  double t11292;
  double t11409;
  double t11507;
  double t11742;
  double t11905;
  double t12511;
  double t12674;
  double t13085;
  double t13628;
  double t14257;
  double t14308;
  double t14605;
  double t14660;
  double t14844;
  double t14862;
  double t16335;
  double t16364;
  double t16444;
  double t16485;
  double t16549;
  double t16908;
  double t17146;
  double t17170;
  double t17221;
  double t17287;
  double t17292;
  double t17302;
  double t17304;
  double t17408;
  double t17429;
  double t18050;
  double t18057;
  double t18066;
  double t18108;
  double t18111;
  double t18158;
  double t18181;
  double t18182;
  double t18183;
  double t18205;
  double t18206;
  double t18232;
  double t18281;
  double t18285;
  double t18291;
  double t18413;
  double t18464;
  double t18520;
  double t19724;
  double t19737;
  double t19741;
  double t19848;
  double t19884;
  double t19894;
  double t19927;
  double t19950;
  double t19971;
  double t19976;
  double t20036;
  double t20092;
  double t20161;
  double t20167;
  double t20171;
  double t19781;
  double t20101;
  double t20127;
  double t19677;
  double t19684;
  double t19719;
  double t20300;
  double t20305;
  double t20323;
  double t20219;
  double t20222;
  double t20253;
  double t20607;
  double t20609;
  double t20611;
  double t20957;
  double t20984;
  double t21014;
  double t21025;
  double t21026;
  double t21028;
  double t21038;
  double t21060;
  double t21084;
  double t21502;
  double t21505;
  double t21519;
  double t21097;
  double t21098;
  double t21106;
  double t21022;
  double t21093;
  double t21095;
  double t20790;
  double t20792;
  double t20872;
  double t21801;
  double t21817;
  double t21937;
  double t24704;
  double t24712;
  double t24721;
  double t26438;
  double t26442;
  double t26444;
  double t26453;
  double t26464;
  double t26586;
  double t26600;
  double t26602;
  double t26603;
  double t26804;
  double t26826;
  double t26834;
  double t26662;
  double t26677;
  double t26684;
  double t26410;
  double t26422;
  double t26430;
  double t26445;
  double t26629;
  double t26646;
  double t26905;
  double t26910;
  double t26913;
  double t27159;
  double t27160;
  double t27165;
  double t27780;
  double t27783;
  double t27787;
  double t27716;
  double t27718;
  double t27722;
  double t27702;
  double t27710;
  double t27712;
  double t27747;
  double t27751;
  double t27754;
  double t27728;
  double t27736;
  double t27741;
  double t27903;
  double t27906;
  double t27910;
  double t19163;
  double t19176;
  double t19199;
  double t19244;
  double t19259;
  double t19271;
  double t19349;
  double t19381;
  double t19432;
  double t19459;
  double t19509;
  double t19539;
  double t19596;
  double t19631;
  double t19632;
  double t28172;
  double t28178;
  double t28184;
  double t20256;
  double t20504;
  double t20682;
  double t20746;
  double t22718;
  double t28442;
  double t28449;
  double t28452;
  double t24502;
  double t24884;
  double t24992;
  double t25108;
  double t26261;
  double t26944;
  double t28677;
  double t28678;
  double t28679;
  double t27124;
  double t27235;
  double t27332;
  double t27518;
  double t27578;
  double t20295;
  double t20329;
  double t20331;
  double t28212;
  double t28205;
  double t20526;
  double t20572;
  double t20590;
  double t20688;
  double t20690;
  double t20693;
  double t28286;
  double t28843;
  double t28846;
  double t28274;
  double t20758;
  double t20762;
  double t20769;
  double t28470;
  double t28488;
  double t28500;
  double t22842;
  double t22849;
  double t22890;
  double t24552;
  double t24619;
  double t24648;
  double t28551;
  double t24898;
  double t24899;
  double t24910;
  double t28593;
  double t28597;
  double t24996;
  double t25022;
  double t25032;
  double t28621;
  double t28625;
  double t25116;
  double t25118;
  double t25846;
  double t28648;
  double t28652;
  double t26263;
  double t26267;
  double t26307;
  double t28681;
  double t26946;
  double t26958;
  double t26960;
  double t28687;
  double t28691;
  double t27127;
  double t27130;
  double t27133;
  double t28713;
  double t28715;
  double t27246;
  double t27248;
  double t27250;
  double t28741;
  double t28746;
  double t27349;
  double t27357;
  double t27358;
  double t28769;
  double t27522;
  double t27530;
  double t27533;
  double t28783;
  double t28786;
  double t27584;
  double t27596;
  double t27602;
  double t28522;
  double t29136;
  double t29139;
  double t29141;
  double t29151;
  double t29153;
  double t28555;
  double t28417;
  double t28506;
  double t28638;
  double t28630;
  double t28757;
  double t29327;
  double t29336;
  double t29339;
  double t29363;
  double t29374;
  double t28776;
  double t28666;
  double t28696;
  double t28725;
  double t28718;
  double t29712;
  double t29714;
  double t29716;
  double t29672;
  double t29674;
  double t29675;
  double t29686;
  double t29692;
  double t29695;
  double t17610;
  double t17614;
  double t17630;
  double t29732;
  double t29733;
  double t29734;
  double t29747;
  double t29760;
  double t29761;
  double t29792;
  double t29800;
  double t29801;
  double t28329;
  double t28372;
  double t28263;
  double t29995;
  double t29996;
  double t30000;
  double t28264;
  double t28229;
  double t28259;
  double t29992;
  double t29978;
  double t29984;
  double t30004;
  double t28424;
  double t28426;
  double t29210;
  double t29215;
  double t29198;
  double t29200;
  double t28509;
  double t28512;
  double t28523;
  double t28533;
  double t29149;
  double t29154;
  double t29165;
  double t29168;
  double t28564;
  double t28587;
  double t29244;
  double t29249;
  double t28631;
  double t28634;
  double t29262;
  double t29274;
  double t28639;
  double t28642;
  double t28671;
  double t28673;
  double t29432;
  double t29435;
  double t29459;
  double t29469;
  double t28700;
  double t28701;
  double t29527;
  double t29531;
  double t28719;
  double t28720;
  double t29558;
  double t29561;
  double t28727;
  double t28732;
  double t28760;
  double t28761;
  double t29356;
  double t29375;
  double t29387;
  double t29390;
  double t28777;
  double t28778;
  double t29601;
  double t29608;
  double t29611;
  double t29627;
  double t29632;
  double t29635;
  double t29639;
  double t29641;
  double t29653;
  double t29657;
  double t29659;
  double t29665;
  double t30003;
  double t30471;
  double t30472;
  double t30477;
  double t30479;
  double t30482;
  double t30484;
  double t30032;
  double t30039;
  double t30103;
  double t30106;
  double t30072;
  double t30547;
  double t30550;
  double t30554;
  double t30086;
  double t30557;
  double t30559;
  double t30562;
  double t30141;
  double t30157;
  double t30167;
  double t30178;
  double t30217;
  double t30221;
  double t30234;
  double t30240;
  double t30269;
  double t30278;
  double t30297;
  double t30301;
  double t30687;
  double t30690;
  double t30692;
  double t30694;
  double t30696;
  double t30697;
  double t30327;
  double t30340;
  double t30351;
  double t30355;
  double t30393;
  double t30397;
  double t30411;
  double t30416;
  double t30803;
  double t30806;
  double t30807;
  double t30808;
  double t30812;
  double t30813;
  double t30815;
  double t29129;
  double t29131;
  double t29179;
  double t29180;
  double t29182;
  double t29190;
  double t29193;
  double t29230;
  double t29231;
  double t29233;
  double t30932;
  double t30933;
  double t30935;
  double t29283;
  double t29285;
  double t29290;
  double t29291;
  double t30931;
  double t30939;
  double t29318;
  double t29320;
  double t29396;
  double t29399;
  double t29404;
  double t29425;
  double t29426;
  double t29487;
  double t29490;
  double t29493;
  double t29584;
  double t31124;
  double t31126;
  double t31131;
  double t31132;
  double t29577;
  double t29580;
  double t29586;
  double t31161;
  double t31192;
  double t31196;
  double t30892;
  double t30897;
  double t30859;
  double t30861;
  double t30866;
  double t30967;
  double t30971;
  double t30974;
  double t30978;
  double t30980;
  double t30981;
  double t30983;
  double t30984;
  double t30985;
  double t31058;
  double t31062;
  double t31071;
  double t31081;
  double t31084;
  double t31243;
  double t31245;
  double t31251;
  double t31252;
  double t31254;
  double t31257;
  double t31258;
  double t31259;
  double t31260;
  double t31266;
  double t31267;
  double t31344;
  double t31345;
  double t31346;
  double t31320;
  double t31321;
  double t31322;
  double t31369;
  double t31370;
  double t31372;
  double t31336;
  double t31337;
  double t31338;
  double t31352;
  double t31353;
  double t31356;
  double t17642;
  double t17682;
  double t17723;
  double t17846;
  double t17847;
  double t17853;
  double t17960;
  double t17966;
  double t17976;
  double t31380;
  double t31381;
  double t31382;
  double t31386;
  double t31389;
  double t31390;
  double t30871;
  double t30872;
  double t30874;
  double t30936;
  double t31480;
  double t31481;
  double t31483;
  double t31475;
  double t31476;
  double t31477;
  double t31038;
  double t30993;
  double t31010;
  double t31137;
  double t31563;
  double t31565;
  double t31566;
  double t31568;
  double t31569;
  double t31571;
  double t31211;
  double t31218;
  double t31164;
  double t31186;
  double t31199;
  double t31323;
  double t31324;
  double t31332;
  double t31339;
  double t31340;
  double t31479;
  double t31493;
  double t31705;
  double t31708;
  double t31709;
  double t31716;
  double t31717;
  double t31720;
  double t31507;
  double t31514;
  double t31516;
  double t31527;
  double t31536;
  double t31537;
  double t31567;
  double t31579;
  double t31816;
  double t31818;
  double t31819;
  double t31821;
  double t31822;
  double t31824;
  double t31593;
  double t31606;
  double t31612;
  double t31622;
  double t31636;
  double t31639;
  double t30802;
  double t30818;
  double t30819;
  double t30821;
  double t30826;
  double t30827;
  double t30828;
  double t30834;
  double t30839;
  double t30840;
  double t30842;
  double t30845;
  double t31912;
  double t31913;
  double t31916;
  double t31904;
  double t31905;
  double t30848;
  double t30850;
  double t31057;
  double t31065;
  double t31069;
  double t31086;
  double t31093;
  double t31102;
  double t31104;
  double t31106;
  double t31108;
  double t31111;
  double t31112;
  double t31116;
  double t31118;
  double t31121;
  double t31942;
  double t31946;
  double t31949;
  double t31158;
  double t31184;
  double t31935;
  double t31936;
  double t31939;
  double t31202;
  double t31210;
  double t31216;
  double t31222;
  double t31234;
  double t31241;
  double t31242;
  double t31962;
  double t31973;
  double t31288;
  double t31293;
  double t31302;
  double t31303;
  double t31304;
  double t31308;
  double t31997;
  double t31999;
  double t32001;
  double t32003;
  double t32004;
  double t32010;
  double t32011;
  double t31328;
  double t31330;
  double t31331;
  double t31341;
  double t31373;
  double t31374;
  double t31375;
  double t31376;
  double t31377;
  double t31378;
  double t31384;
  double t31391;
  double t31394;
  double t31395;
  double t31409;
  double t31413;
  double t31417;
  double t31418;
  double t31419;
  double t31420;
  double t31423;
  double t31431;
  double t31439;
  double t31442;
  double t31443;
  double t31444;
  double t31545;
  double t31547;
  double t31549;
  double t31550;
  double t31551;
  double t31552;
  double t31553;
  double t31558;
  double t31559;
  double t31560;
  double t31561;
  double t31578;
  double t31950;
  double t32052;
  double t32053;
  double t32058;
  double t32048;
  double t32049;
  double t32050;
  double t31601;
  double t31987;
  double t31614;
  double t31620;
  double t31621;
  double t31965;
  double t31971;
  double t31644;
  double t31663;
  double t31671;
  double t31672;
  double t31673;
  double t31674;
  double t31790;
  double t31793;
  double t31796;
  double t31799;
  double t31803;
  double t31804;
  double t31805;
  double t31807;
  double t31809;
  double t31810;
  double t31812;
  double t31813;
  double t32059;
  double t32063;
  double t32130;
  double t32132;
  double t32133;
  double t32137;
  double t32138;
  double t32140;
  double t31845;
  double t32078;
  double t32091;
  double t31856;
  double t31859;
  double t31870;
  double t31871;
  double t32099;
  double t32109;
  double t31886;
  double t31887;
  t1188 = Cos(var1[9]);
  t3888 = Cos(var1[10]);
  t3962 = Sin(var1[10]);
  t4154 = -1.*t3888;
  t4191 = 1. + t4154;
  t4248 = 0.21935*t4191;
  t4251 = 0.218868*t3888;
  t4298 = -0.031996*t3962;
  t4357 = t4248 + t4251 + t4298;
  t3904 = -0.031996*t3888;
  t4019 = 0.000482*t3962;
  t4047 = t3904 + t4019;
  t1451 = Cos(var1[5]);
  t1662 = Sin(var1[3]);
  t2357 = -1.*t1188*t1451*t1662;
  t2788 = Cos(var1[3]);
  t2819 = Cos(var1[4]);
  t2900 = Sin(var1[9]);
  t3229 = t2819*t2900;
  t3319 = Sin(var1[4]);
  t3330 = Sin(var1[5]);
  t3337 = t1188*t3319*t3330;
  t3391 = t3229 + t3337;
  t3530 = -1.*t2788*t3391;
  t3599 = t2357 + t3530;
  t5268 = Cos(var1[11]);
  t5279 = Sin(var1[11]);
  t5487 = -1.*t5268;
  t5506 = 1. + t5487;
  t5519 = 0.21935*t5506;
  t5536 = 0.217154*t5268;
  t5539 = -0.12338*t5279;
  t5597 = t5519 + t5536 + t5539;
  t7371 = -1. + t5268;
  t7738 = 0.25*t7371;
  t8214 = -0.37338*t5268;
  t8287 = 0.002196*t5279;
  t8400 = t7738 + t8214 + t8287;
  t5278 = t3888*t5268;
  t5327 = -1.*t3962*t5279;
  t5398 = t5278 + t5327;
  t8979 = t5268*t3962;
  t9014 = t3888*t5279;
  t9084 = t8979 + t9014;
  t9218 = 0.21935*t3962;
  t9378 = -1.*t3962*t5597;
  t9385 = t3888*t8400;
  t9386 = t9218 + t9378 + t9385;
  t6072 = t3888*t5597;
  t8414 = t3962*t8400;
  t8570 = t4248 + t6072 + t8414;
  t9650 = -1.*t5268*t3962;
  t9692 = -1.*t3888*t5279;
  t9703 = t9650 + t9692;
  t4061 = -1.*t3888*t4047;
  t4358 = -1.*t4357*t3962;
  t4363 = t4061 + t4358;
  t4369 = t3888*t4363;
  t4419 = t3888*t4357;
  t5006 = -1.*t4047*t3962;
  t5016 = t4419 + t5006;
  t5085 = t3962*t5016;
  t5177 = t4369 + t5085;
  t17573 = t1188*t2788*t1451;
  t17575 = -1.*t1662*t3391;
  t17578 = t17573 + t17575;
  t9177 = -1.*t8570*t9084;
  t9509 = -1.*t9386*t5398;
  t9517 = t9177 + t9509;
  t9607 = t5398*t9517;
  t9729 = t9386*t9703;
  t9733 = t8570*t5398;
  t9799 = t9729 + t9733;
  t9883 = t9084*t9799;
  t9884 = t9607 + t9883;
  t9990 = t1188*t2819;
  t9997 = -1.*t2900*t3319*t3330;
  t10021 = t9990 + t9997;
  t10193 = -1.*t3888*t1451*t2900;
  t10200 = t3962*t3330;
  t10209 = t10193 + t10200;
  t10225 = t1188*t3888*t2819;
  t10262 = t1451*t3962;
  t10338 = t3888*t2900*t3330;
  t10642 = t10262 + t10338;
  t10827 = -1.*t3319*t10642;
  t10927 = t10225 + t10827;
  t11292 = t1451*t2900*t3962;
  t11409 = t3888*t3330;
  t11507 = t11292 + t11409;
  t11742 = -1.*t1188*t2819*t3962;
  t11905 = t3888*t1451;
  t12511 = -1.*t2900*t3962*t3330;
  t12674 = t11905 + t12511;
  t13085 = -1.*t3319*t12674;
  t13628 = t11742 + t13085;
  t14257 = -0.0875*t9703;
  t14308 = -0.124119*t9084;
  t14605 = t14257 + t14308;
  t14660 = -1.*t1451*t2900*t9703;
  t14844 = t5398*t3330;
  t14862 = t14660 + t14844;
  t16335 = t1188*t2819*t9703;
  t16364 = t1451*t5398;
  t16444 = t2900*t9703*t3330;
  t16485 = t16364 + t16444;
  t16549 = -1.*t3319*t16485;
  t16908 = t16335 + t16549;
  t17146 = -1.*t1451*t2900*t5398;
  t17170 = t9084*t3330;
  t17221 = t17146 + t17170;
  t17287 = t1188*t2819*t5398;
  t17292 = t1451*t9084;
  t17302 = t2900*t5398*t3330;
  t17304 = t17292 + t17302;
  t17408 = -1.*t3319*t17304;
  t17429 = t17287 + t17408;
  t18050 = -1.*t2900*t3319;
  t18057 = t1188*t2819*t3330;
  t18066 = t18050 + t18057;
  t18108 = -1.*t1188*t3319;
  t18111 = -1.*t2819*t2900*t3330;
  t18158 = t18108 + t18111;
  t18181 = -1.*t1188*t3888*t3319;
  t18182 = -1.*t2819*t10642;
  t18183 = t18181 + t18182;
  t18205 = t1188*t3962*t3319;
  t18206 = -1.*t2819*t12674;
  t18232 = t18205 + t18206;
  t18281 = -1.*t1188*t9703*t3319;
  t18285 = -1.*t2819*t16485;
  t18291 = t18281 + t18285;
  t18413 = -1.*t1188*t5398*t3319;
  t18464 = -1.*t2819*t17304;
  t18520 = t18413 + t18464;
  t19724 = 0.000864*t1188;
  t19737 = -0.008134*t2900;
  t19741 = t19724 + t19737;
  t19848 = 0.217782*t1451;
  t19884 = -1.*t1188;
  t19894 = 1. + t19884;
  t19927 = 0.0875*t19894;
  t19950 = 0.079366*t1188;
  t19971 = -0.000864*t2900;
  t19976 = t19927 + t19950 + t19971;
  t20036 = -1.*t19976*t3330;
  t20092 = t19848 + t20036;
  t20161 = t19741*t3319;
  t20167 = t2819*t20092;
  t20171 = t20161 + t20167;
  t19781 = -1.*t19741*t3319;
  t20101 = -1.*t2819*t20092;
  t20127 = t19781 + t20101;
  t19677 = t2900*t3319;
  t19684 = -1.*t1188*t2819*t3330;
  t19719 = t19677 + t19684;
  t20300 = t2819*t19741;
  t20305 = -1.*t3319*t20092;
  t20323 = t20300 + t20305;
  t20219 = t1451*t19976;
  t20222 = 0.217782*t3330;
  t20253 = t20219 + t20222;
  t20607 = t1188*t3319;
  t20609 = t2819*t2900*t3330;
  t20611 = t20607 + t20609;
  t20957 = 0.05701*t2900;
  t20984 = t1188*t4047;
  t21014 = t20957 + t20984;
  t21025 = t1451*t4357;
  t21026 = 0.14451*t1188;
  t21028 = -1.*t2900*t4047;
  t21038 = t19927 + t21026 + t21028;
  t21060 = -1.*t21038*t3330;
  t21084 = t21025 + t21060;
  t21502 = t2819*t21014;
  t21505 = -1.*t3319*t21084;
  t21519 = t21502 + t21505;
  t21097 = t21014*t3319;
  t21098 = t2819*t21084;
  t21106 = t21097 + t21098;
  t21022 = -1.*t21014*t3319;
  t21093 = -1.*t2819*t21084;
  t21095 = t21022 + t21093;
  t20790 = t1188*t3888*t3319;
  t20792 = t2819*t10642;
  t20872 = t20790 + t20792;
  t21801 = t1451*t21038;
  t21817 = t4357*t3330;
  t21937 = t21801 + t21817;
  t24704 = -1.*t1188*t3962*t3319;
  t24712 = t2819*t12674;
  t24721 = t24704 + t24712;
  t26438 = 0.036619*t2900;
  t26442 = t1188*t9386;
  t26444 = t26438 + t26442;
  t26453 = t1451*t8570;
  t26464 = 0.124119*t1188;
  t26586 = -1.*t2900*t9386;
  t26600 = t19927 + t26464 + t26586;
  t26602 = -1.*t26600*t3330;
  t26603 = t26453 + t26602;
  t26804 = t2819*t26444;
  t26826 = -1.*t3319*t26603;
  t26834 = t26804 + t26826;
  t26662 = t26444*t3319;
  t26677 = t2819*t26603;
  t26684 = t26662 + t26677;
  t26410 = t1188*t9703*t3319;
  t26422 = t2819*t16485;
  t26430 = t26410 + t26422;
  t26445 = -1.*t26444*t3319;
  t26629 = -1.*t2819*t26603;
  t26646 = t26445 + t26629;
  t26905 = t1451*t26600;
  t26910 = t8570*t3330;
  t26913 = t26905 + t26910;
  t27159 = t1188*t5398*t3319;
  t27160 = t2819*t17304;
  t27165 = t27159 + t27160;
  t27780 = -1.*t1188*t1451*t1662*t3319;
  t27783 = -1.*t1188*t2788*t3330;
  t27787 = t27780 + t27783;
  t27716 = t3888*t1451*t2900;
  t27718 = -1.*t3962*t3330;
  t27722 = t27716 + t27718;
  t27702 = -1.*t1451*t2900*t3962;
  t27710 = -1.*t3888*t3330;
  t27712 = t27702 + t27710;
  t27747 = t1451*t2900*t9703;
  t27751 = -1.*t5398*t3330;
  t27754 = t27747 + t27751;
  t27728 = t1451*t2900*t5398;
  t27736 = -1.*t9084*t3330;
  t27741 = t27728 + t27736;
  t27903 = t1188*t2788*t1451*t3319;
  t27906 = -1.*t1188*t1662*t3330;
  t27910 = t27903 + t27906;
  t19163 = 1.e-5*t3888;
  t19176 = -0.000085*t3962;
  t19199 = t19163 + t19176;
  t19244 = 0.00025*t3888;
  t19259 = 0.001783*t3962;
  t19271 = t19244 + t19259;
  t19349 = 0.009916*t3888;
  t19381 = 0.00025*t3962;
  t19432 = t19349 + t19381;
  t19459 = -3.e-6*t9084;
  t19509 = 0.006182*t5398;
  t19539 = t19459 + t19509;
  t19596 = 0.000035*t9084;
  t19631 = -3.e-6*t5398;
  t19632 = t19596 + t19631;
  t28172 = -1.*t1451*t19976;
  t28178 = -0.217782*t3330;
  t28184 = t28172 + t28178;
  t20256 = -1.*t20253*t3330;
  t20504 = t1188*t1451*t20253;
  t20682 = t20253*t3330;
  t20746 = t1451*t2900*t20253;
  t22718 = -1.*t1188*t1451*t21937;
  t28442 = -1.*t1451*t21038;
  t28449 = -1.*t4357*t3330;
  t28452 = t28442 + t28449;
  t24502 = t21937*t10209;
  t24884 = t1188*t1451*t21937;
  t24992 = -1.*t11507*t21937;
  t25108 = -1.*t21937*t10209;
  t26261 = t11507*t21937;
  t26944 = t1188*t1451*t26913;
  t28677 = -1.*t1451*t26600;
  t28678 = -1.*t8570*t3330;
  t28679 = t28677 + t28678;
  t27124 = -1.*t26913*t14862;
  t27235 = t26913*t14862;
  t27332 = -1.*t26913*t17221;
  t27518 = -1.*t1188*t1451*t26913;
  t27578 = t26913*t17221;
  t20295 = -1.*t2819*t1451*t20171;
  t20329 = t1451*t3319*t20323;
  t20331 = t20256 + t20295 + t20329;
  t28212 = -1.*t1188*t20253*t3330;
  t28205 = -1.*t1451*t20253;
  t20526 = t19719*t20171;
  t20572 = t3391*t20323;
  t20590 = t20504 + t20526 + t20572;
  t20688 = t2819*t1451*t20171;
  t20690 = -1.*t1451*t3319*t20323;
  t20693 = t20682 + t20688 + t20690;
  t28286 = -1.*t2900*t20253*t3330;
  t28843 = Power(t2819,2);
  t28846 = Power(t3319,2);
  t28274 = t1451*t20253;
  t20758 = -1.*t20611*t20171;
  t20762 = -1.*t10021*t20323;
  t20769 = t20746 + t20758 + t20762;
  t28470 = t1188*t3330*t21937;
  t28488 = t10642*t21937;
  t28500 = t21084*t10209;
  t22842 = -1.*t19719*t21106;
  t22849 = -1.*t3391*t21519;
  t22890 = t22718 + t22842 + t22849;
  t24552 = t20872*t21106;
  t24619 = t10927*t21519;
  t24648 = t24502 + t24552 + t24619;
  t28551 = -1.*t1188*t3330*t21937;
  t24898 = t19719*t21106;
  t24899 = t3391*t21519;
  t24910 = t24884 + t24898 + t24899;
  t28593 = -1.*t11507*t21084;
  t28597 = -1.*t21937*t12674;
  t24996 = -1.*t21106*t24721;
  t25022 = -1.*t21519*t13628;
  t25032 = t24992 + t24996 + t25022;
  t28621 = -1.*t10642*t21937;
  t28625 = -1.*t21084*t10209;
  t25116 = -1.*t20872*t21106;
  t25118 = -1.*t10927*t21519;
  t25846 = t25108 + t25116 + t25118;
  t28648 = t11507*t21084;
  t28652 = t21937*t12674;
  t26263 = t21106*t24721;
  t26267 = t21519*t13628;
  t26307 = t26261 + t26263 + t26267;
  t28681 = -1.*t1188*t3330*t26913;
  t26946 = t19719*t26684;
  t26958 = t3391*t26834;
  t26960 = t26944 + t26946 + t26958;
  t28687 = -1.*t26913*t16485;
  t28691 = -1.*t26603*t14862;
  t27127 = -1.*t26684*t26430;
  t27130 = -1.*t26834*t16908;
  t27133 = t27124 + t27127 + t27130;
  t28713 = t26913*t16485;
  t28715 = t26603*t14862;
  t27246 = t26684*t26430;
  t27248 = t26834*t16908;
  t27250 = t27235 + t27246 + t27248;
  t28741 = -1.*t26603*t17221;
  t28746 = -1.*t26913*t17304;
  t27349 = -1.*t26684*t27165;
  t27357 = -1.*t26834*t17429;
  t27358 = t27332 + t27349 + t27357;
  t28769 = t1188*t3330*t26913;
  t27522 = -1.*t19719*t26684;
  t27530 = -1.*t3391*t26834;
  t27533 = t27518 + t27522 + t27530;
  t28783 = t26603*t17221;
  t28786 = t26913*t17304;
  t27584 = t26684*t27165;
  t27596 = t26834*t17429;
  t27602 = t27578 + t27584 + t27596;
  t28522 = t2900*t21014;
  t29136 = -0.05701*t2900;
  t29139 = -1.*t1188*t4047;
  t29141 = t29136 + t29139;
  t29151 = 0.05701*t1188;
  t29153 = t29151 + t21028;
  t28555 = t1188*t21014*t3962;
  t28417 = -1.*t2900*t21014;
  t28506 = t1188*t3888*t21014;
  t28638 = -1.*t1188*t21014*t3962;
  t28630 = -1.*t1188*t3888*t21014;
  t28757 = -1.*t2900*t26444;
  t29327 = -0.036619*t2900;
  t29336 = -1.*t1188*t9386;
  t29339 = t29327 + t29336;
  t29363 = 0.036619*t1188;
  t29374 = t29363 + t26586;
  t28776 = t1188*t26444*t5398;
  t28666 = t2900*t26444;
  t28696 = -1.*t1188*t26444*t9703;
  t28725 = -1.*t1188*t26444*t5398;
  t28718 = t1188*t26444*t9703;
  t29712 = -1.*t1451*t2900*t1662;
  t29714 = t2788*t10021;
  t29716 = t29712 + t29714;
  t29672 = -1.*t2819*t2900;
  t29674 = -1.*t1188*t3319*t3330;
  t29675 = t29672 + t29674;
  t29686 = -1.*t3888*t2819*t2900;
  t29692 = -1.*t1188*t3888*t3319*t3330;
  t29695 = t29686 + t29692;
  t17610 = -1.*t2788*t1451*t2900;
  t17614 = -1.*t1662*t10021;
  t17630 = t17610 + t17614;
  t29732 = t2819*t2900*t3962;
  t29733 = t1188*t3962*t3319*t3330;
  t29734 = t29732 + t29733;
  t29747 = -1.*t2819*t2900*t9703;
  t29760 = -1.*t1188*t9703*t3319*t3330;
  t29761 = t29747 + t29760;
  t29792 = -1.*t2819*t2900*t5398;
  t29800 = -1.*t1188*t5398*t3319*t3330;
  t29801 = t29792 + t29800;
  t28329 = t1451*t20092;
  t28372 = t20682 + t28329;
  t28263 = t19741*t2900;
  t29995 = -0.000864*t1188;
  t29996 = 0.008134*t2900;
  t30000 = t29995 + t29996;
  t28264 = -1.*t1188*t3330*t20092;
  t28229 = -1.*t1451*t20092;
  t28259 = t20256 + t28229;
  t29992 = Power(t1451,2);
  t29978 = -0.008134*t1188;
  t29984 = t29978 + t19971;
  t30004 = Power(t3330,2);
  t28424 = t1188*t3330*t21084;
  t28426 = t28417 + t28424 + t22718;
  t29210 = -1.*t1188*t21014;
  t29215 = -1.*t2900*t29153;
  t29198 = -1.*t3888*t2900*t21014;
  t29200 = t1188*t3888*t29153;
  t28509 = t10642*t21084;
  t28512 = t28506 + t28509 + t24502;
  t28523 = -1.*t1188*t3330*t21084;
  t28533 = t28522 + t28523 + t24884;
  t29149 = t1188*t21014;
  t29154 = t2900*t29153;
  t29165 = -1.*t2900*t21014*t3962;
  t29168 = t1188*t29153*t3962;
  t28564 = -1.*t21084*t12674;
  t28587 = t28555 + t24992 + t28564;
  t29244 = t3888*t2900*t21014;
  t29249 = -1.*t1188*t3888*t29153;
  t28631 = -1.*t10642*t21084;
  t28634 = t28630 + t28631 + t25108;
  t29262 = t2900*t21014*t3962;
  t29274 = -1.*t1188*t29153*t3962;
  t28639 = t21084*t12674;
  t28642 = t28638 + t26261 + t28639;
  t28671 = -1.*t1188*t3330*t26603;
  t28673 = t28666 + t28671 + t26944;
  t29432 = t1188*t26444;
  t29435 = t2900*t29374;
  t29459 = t2900*t26444*t9703;
  t29469 = -1.*t1188*t29374*t9703;
  t28700 = -1.*t26603*t16485;
  t28701 = t28696 + t28700 + t27124;
  t29527 = -1.*t2900*t26444*t9703;
  t29531 = t1188*t29374*t9703;
  t28719 = t26603*t16485;
  t28720 = t28718 + t28719 + t27235;
  t29558 = t2900*t26444*t5398;
  t29561 = -1.*t1188*t29374*t5398;
  t28727 = -1.*t26603*t17304;
  t28732 = t28725 + t27332 + t28727;
  t28760 = t1188*t3330*t26603;
  t28761 = t28757 + t28760 + t27518;
  t29356 = -1.*t1188*t26444;
  t29375 = -1.*t2900*t29374;
  t29387 = -1.*t2900*t26444*t5398;
  t29390 = t1188*t29374*t5398;
  t28777 = t26603*t17304;
  t28778 = t28776 + t27578 + t28777;
  t29601 = -1.*t3888*t2900*t3319;
  t29608 = t1188*t3888*t2819*t3330;
  t29611 = t29601 + t29608;
  t29627 = t2900*t3962*t3319;
  t29632 = -1.*t1188*t2819*t3962*t3330;
  t29635 = t29627 + t29632;
  t29639 = -1.*t2900*t9703*t3319;
  t29641 = t1188*t2819*t9703*t3330;
  t29653 = t29639 + t29641;
  t29657 = -1.*t2900*t5398*t3319;
  t29659 = t1188*t2819*t5398*t3330;
  t29665 = t29657 + t29659;
  t30003 = t29992*t30000*t2900;
  t30471 = t29984*t3319;
  t30472 = -1.*t2819*t30000*t3330;
  t30477 = t30471 + t30472;
  t30479 = t2819*t29984;
  t30482 = t30000*t3319*t3330;
  t30484 = t30479 + t30482;
  t30032 = t1188*t29992*t30000;
  t30039 = -1.*t1451*t2900*t20253;
  t30103 = -1.*t1188*t3888*t1451*t21937;
  t30106 = t1451*t29141*t10209;
  t30072 = -1.*t1188*t29992*t29141;
  t30547 = t29153*t3319;
  t30550 = -1.*t2819*t29141*t3330;
  t30554 = t30547 + t30550;
  t30086 = t1451*t2900*t21937;
  t30557 = t2819*t29153;
  t30559 = t29141*t3319*t3330;
  t30562 = t30557 + t30559;
  t30141 = t1188*t29992*t29141;
  t30157 = -1.*t1451*t2900*t21937;
  t30167 = -1.*t1451*t29141*t11507;
  t30178 = -1.*t1188*t1451*t3962*t21937;
  t30217 = t1188*t3888*t1451*t21937;
  t30221 = -1.*t1451*t29141*t10209;
  t30234 = t1451*t29141*t11507;
  t30240 = t1188*t1451*t3962*t21937;
  t30269 = t1188*t29992*t29339;
  t30278 = -1.*t1451*t2900*t26913;
  t30297 = t1188*t1451*t9703*t26913;
  t30301 = -1.*t1451*t29339*t14862;
  t30687 = t29374*t3319;
  t30690 = -1.*t2819*t29339*t3330;
  t30692 = t30687 + t30690;
  t30694 = t2819*t29374;
  t30696 = t29339*t3319*t3330;
  t30697 = t30694 + t30696;
  t30327 = -1.*t1188*t1451*t9703*t26913;
  t30340 = t1451*t29339*t14862;
  t30351 = t1188*t1451*t5398*t26913;
  t30355 = -1.*t1451*t29339*t17221;
  t30393 = -1.*t1188*t29992*t29339;
  t30397 = t1451*t2900*t26913;
  t30411 = -1.*t1188*t1451*t5398*t26913;
  t30416 = t1451*t29339*t17221;
  t30803 = -1.*t3888*t5268;
  t30806 = t3962*t5279;
  t30807 = t30803 + t30806;
  t30808 = 5.e-6*t30807;
  t30812 = -0.124119*t5398;
  t30813 = -0.0875*t30807;
  t30815 = t30812 + t30813;
  t29129 = t1188*t21038;
  t29131 = t28522 + t29129;
  t29179 = -1.*t3888*t4357;
  t29180 = -1.*t2900*t21038*t3962;
  t29182 = t29179 + t28555 + t29180;
  t29190 = -1.*t1188*t21038;
  t29193 = t28417 + t29190;
  t29230 = -1.*t3888*t2900*t21038;
  t29231 = t4357*t3962;
  t29233 = t28506 + t29230 + t29231;
  t30932 = 0.000482*t3888;
  t30933 = 0.031996*t3962;
  t30935 = t30932 + t30933;
  t29283 = t2900*t21038*t3962;
  t29285 = t4419 + t28638 + t29283;
  t29290 = t3888*t2900*t21038;
  t29291 = t28630 + t29290 + t4358;
  t30931 = Power(t1188,2);
  t30939 = Power(t2900,2);
  t29318 = -1.*t1188*t26600;
  t29320 = t28757 + t29318;
  t29396 = t8570*t9084;
  t29399 = -1.*t2900*t26600*t5398;
  t29404 = t29396 + t28776 + t29399;
  t29425 = t1188*t26600;
  t29426 = t28666 + t29425;
  t29487 = t2900*t26600*t9703;
  t29490 = -1.*t8570*t5398;
  t29493 = t28696 + t29487 + t29490;
  t29584 = -1.*t2900*t26600*t9703;
  t31124 = 0.21935*t3888;
  t31126 = -1.*t3888*t5597;
  t31131 = -1.*t3962*t8400;
  t31132 = t31124 + t31126 + t31131;
  t29577 = t2900*t26600*t5398;
  t29580 = t9177 + t28725 + t29577;
  t29586 = t28718 + t29584 + t9733;
  t31161 = -1.*t9386*t9084;
  t31192 = t8570*t9703;
  t31196 = t9386*t5398;
  t30892 = -0.009916*t3962;
  t30897 = t19244 + t30892;
  t30859 = 0.001783*t3888;
  t30861 = -0.00025*t3962;
  t30866 = t30859 + t30861;
  t30967 = -1.*t3888*t30935;
  t30971 = t29179 + t30967;
  t30974 = t3888*t30971;
  t30978 = -1.*t3962*t4363;
  t30980 = t3888*t5016;
  t30981 = -1.*t30935*t3962;
  t30983 = t4358 + t30981;
  t30984 = t3962*t30983;
  t30985 = t30974 + t30978 + t30980 + t30984;
  t31058 = 0.006182*t9703;
  t31062 = t31058 + t19631;
  t31071 = -3.e-6*t9703;
  t31081 = 0.000035*t5398;
  t31084 = t31071 + t31081;
  t31243 = t9703*t9517;
  t31245 = -1.*t9386*t9703;
  t31251 = -1.*t31132*t5398;
  t31252 = t31245 + t31161 + t31251 + t29490;
  t31254 = t5398*t31252;
  t31257 = t5398*t9799;
  t31258 = t31132*t9703;
  t31259 = t9386*t30807;
  t31260 = t31258 + t31192 + t31196 + t31259;
  t31266 = t9084*t31260;
  t31267 = t31243 + t31254 + t31257 + t31266;
  t31344 = t1188*t1451*t1662;
  t31345 = t2788*t3391;
  t31346 = t31344 + t31345;
  t31320 = -1.*t1451*t3962;
  t31321 = -1.*t3888*t2900*t3330;
  t31322 = t31320 + t31321;
  t31369 = t1662*t14862;
  t31370 = t2788*t16908;
  t31372 = t31369 + t31370;
  t31336 = t1451*t9703;
  t31337 = t2900*t30807*t3330;
  t31338 = t31336 + t31337;
  t31352 = -1.*t1188*t3888*t2819;
  t31353 = -1.*t3319*t31322;
  t31356 = t31352 + t31353;
  t17642 = t2788*t10209;
  t17682 = -1.*t1662*t10927;
  t17723 = t17642 + t17682;
  t17846 = t2788*t14862;
  t17847 = -1.*t1662*t16908;
  t17853 = t17846 + t17847;
  t17960 = t2788*t17221;
  t17966 = -1.*t1662*t17429;
  t17976 = t17960 + t17966;
  t31380 = -1.*t1451*t2900*t30807;
  t31381 = t9703*t3330;
  t31382 = t31380 + t31381;
  t31386 = t1188*t2819*t30807;
  t31389 = -1.*t3319*t31338;
  t31390 = t31386 + t31389;
  t30871 = -0.000085*t3888;
  t30872 = -1.e-5*t3962;
  t30874 = t30871 + t30872;
  t30936 = t30931*t3888*t30935;
  t31480 = t1451*t4047;
  t31481 = t2900*t30935*t3330;
  t31483 = t31480 + t31481;
  t31475 = -1.*t1451*t2900*t30935;
  t31476 = t4047*t3330;
  t31477 = t31475 + t31476;
  t31038 = t30931*t30935*t3962;
  t30993 = -1.*t30931*t3888*t30935;
  t31010 = -1.*t30931*t30935*t3962;
  t31137 = t30931*t31132*t5398;
  t31563 = -1.*t1451*t2900*t31132;
  t31565 = t9386*t3330;
  t31566 = t31563 + t31565;
  t31568 = t1451*t9386;
  t31569 = t2900*t31132*t3330;
  t31571 = t31568 + t31569;
  t31211 = -1.*t30931*t31132*t9703;
  t31218 = -1.*t1188*t26444*t30807;
  t31164 = -1.*t30931*t31132*t5398;
  t31186 = t30931*t31132*t9703;
  t31199 = t1188*t26444*t30807;
  t31323 = t2819*t31322;
  t31324 = t18181 + t31323;
  t31332 = t1188*t30807*t3319;
  t31339 = t2819*t31338;
  t31340 = t31332 + t31339;
  t31479 = -1.*t1188*t1451*t31477;
  t31493 = t31477*t10209;
  t31705 = t1188*t30935*t3319;
  t31708 = t2819*t31483;
  t31709 = t31705 + t31708;
  t31716 = t1188*t2819*t30935;
  t31717 = -1.*t3319*t31483;
  t31720 = t31716 + t31717;
  t31507 = t1188*t1451*t31477;
  t31514 = -1.*t11507*t31477;
  t31516 = -1.*t21937*t27722;
  t31527 = -1.*t31477*t10209;
  t31536 = t11507*t31477;
  t31537 = t21937*t27722;
  t31567 = -1.*t1188*t1451*t31566;
  t31579 = t31566*t17221;
  t31816 = t1188*t31132*t3319;
  t31818 = t2819*t31571;
  t31819 = t31816 + t31818;
  t31821 = t1188*t2819*t31132;
  t31822 = -1.*t3319*t31571;
  t31824 = t31821 + t31822;
  t31593 = t1188*t1451*t31566;
  t31606 = -1.*t26913*t31382;
  t31612 = -1.*t31566*t14862;
  t31622 = -1.*t31566*t17221;
  t31636 = t26913*t31382;
  t31639 = t31566*t14862;
  t30802 = -0.000019380093084*t9703;
  t30818 = 0.02973458*t30815;
  t30819 = t30802 + t30808 + t30818;
  t30821 = -0.5*var2[11]*t30819;
  t30826 = 0.21935*t5268;
  t30827 = -1.*t5268*t5597;
  t30828 = t8400*t5279;
  t30834 = t30826 + t30827 + t30828;
  t30839 = -0.008825179*t9703*t30834;
  t30840 = t5268*t8400;
  t30842 = -0.21935*t5279;
  t30845 = t5597*t5279;
  t31912 = 0.002196*t5268;
  t31913 = 0.12338*t5279;
  t31916 = t31912 + t31913;
  t31904 = -0.12338*t5268;
  t31905 = t31904 + t8287;
  t30848 = t30840 + t30842 + t30845;
  t30850 = -0.241*t30848*t30815;
  t31057 = -5.e-6*t2900*t5398;
  t31065 = -1.*t1188*t9703*t31062;
  t31069 = -1.*t1188*t9703*t19632;
  t31086 = -1.*t1188*t5398*t31084;
  t31093 = -1.*t1188*t30807*t19539;
  t31102 = t1188*t29320*t5398;
  t31104 = t2900*t29404;
  t31106 = t31102 + t31104;
  t31108 = -0.241*t30815*t31106;
  t31111 = t1188*t29426*t9703;
  t31112 = t2900*t29493;
  t31116 = t31111 + t31112;
  t31118 = -0.008825179*t9703*t31116;
  t31121 = t1188*t29320*t9703;
  t31942 = -1.*t3962*t31905;
  t31946 = t3888*t31916;
  t31949 = t31942 + t31946;
  t31158 = t1188*t30807*t29580;
  t31184 = t1188*t9703*t29586;
  t31935 = t3888*t31905;
  t31936 = t3962*t31916;
  t31939 = t31935 + t31936;
  t31202 = -1.*t2900*t26600*t30807;
  t31210 = t1188*t29426*t30807;
  t31216 = -1.*t8570*t9703;
  t31222 = t2900*t26600*t30807;
  t31234 = t1188*t9703*t29580;
  t31241 = t1188*t5398*t29586;
  t31242 = t31234 + t31241;
  t31962 = -1.*t31939*t9084;
  t31973 = t31939*t5398;
  t31288 = -0.000646338459602*t9703*t5398;
  t31293 = -1.*t5398*t31062;
  t31302 = -1.*t5398*t19632;
  t31303 = -1.*t9084*t31084;
  t31304 = -1.*t9703*t19539;
  t31308 = -0.482*t14605*t30815;
  t31997 = -1.*t31949*t5398;
  t31999 = t31245 + t31962 + t29490 + t31997;
  t32001 = t5398*t31999;
  t32003 = t31949*t9703;
  t32004 = t31192 + t32003 + t31973 + t31259;
  t32010 = t9084*t32004;
  t32011 = t31243 + t31257 + t32001 + t32010;
  t31328 = -0.008825179*t5398*t26430;
  t31330 = -0.241*t30815*t26430;
  t31331 = -0.008825179*t9703*t27165;
  t31341 = -0.241*t14605*t31340;
  t31373 = -0.008825179*t5398*t31372;
  t31374 = -0.241*t30815*t31372;
  t31375 = t1662*t17221;
  t31376 = t2788*t17429;
  t31377 = t31375 + t31376;
  t31378 = -0.008825179*t9703*t31377;
  t31384 = t1662*t31382;
  t31391 = t2788*t31390;
  t31394 = t31384 + t31391;
  t31395 = -0.241*t14605*t31394;
  t31409 = -0.008825179*t5398*t17853;
  t31413 = -0.241*t30815*t17853;
  t31417 = -0.008825179*t9703*t17976;
  t31418 = t2788*t31382;
  t31419 = -1.*t1662*t31390;
  t31420 = t31418 + t31419;
  t31423 = -0.241*t14605*t31420;
  t31431 = -5.e-6*t1188*t1451*t5398;
  t31439 = -1.*t19539*t31382;
  t31442 = -1.*t31084*t17221;
  t31443 = -1.*t31062*t14862;
  t31444 = -1.*t19632*t14862;
  t31545 = t14862*t28673;
  t31547 = t1188*t1451*t28701;
  t31549 = t31545 + t31547;
  t31550 = -0.008825179*t9703*t31549;
  t31551 = t17221*t28720;
  t31552 = t14862*t28732;
  t31553 = t31551 + t31552;
  t31558 = t17221*t28761;
  t31559 = t1188*t1451*t28778;
  t31560 = t31558 + t31559;
  t31561 = -0.241*t30815*t31560;
  t31578 = t14862*t28761;
  t31950 = t30931*t31949*t5398;
  t32052 = -1.*t1451*t2900*t31949;
  t32053 = t31939*t3330;
  t32058 = t32052 + t32053;
  t32048 = t1451*t31939;
  t32049 = t2900*t31949*t3330;
  t32050 = t32048 + t32049;
  t31601 = t31382*t28673;
  t31987 = -1.*t30931*t31949*t9703;
  t31614 = -1.*t26603*t31338;
  t31620 = t14862*t28720;
  t31621 = t31382*t28732;
  t31965 = -1.*t30931*t31949*t5398;
  t31971 = t30931*t31949*t9703;
  t31644 = t26603*t31338;
  t31663 = -5.e-6*t5398*t19719;
  t31671 = -1.*t31062*t26430;
  t31672 = -1.*t19632*t26430;
  t31673 = -1.*t31084*t27165;
  t31674 = -1.*t19539*t31340;
  t31790 = t26430*t26960;
  t31793 = t19719*t27133;
  t31796 = t31790 + t31793;
  t31799 = -0.008825179*t9703*t31796;
  t31803 = t27165*t27250;
  t31804 = t26430*t27358;
  t31805 = t31803 + t31804;
  t31807 = t27165*t27533;
  t31809 = t19719*t27602;
  t31810 = t31807 + t31809;
  t31812 = -0.241*t30815*t31810;
  t31813 = t26430*t27533;
  t32059 = -1.*t1188*t1451*t32058;
  t32063 = t32058*t17221;
  t32130 = t1188*t31949*t3319;
  t32132 = t2819*t32050;
  t32133 = t32130 + t32132;
  t32137 = t1188*t2819*t31949;
  t32138 = -1.*t3319*t32050;
  t32140 = t32137 + t32138;
  t31845 = t31340*t26960;
  t32078 = t1188*t1451*t32058;
  t32091 = -1.*t32058*t14862;
  t31856 = -1.*t26684*t31340;
  t31859 = -1.*t26834*t31390;
  t31870 = t26430*t27250;
  t31871 = t31340*t27358;
  t32099 = -1.*t32058*t17221;
  t32109 = t32058*t14862;
  t31886 = t26684*t31340;
  t31887 = t26834*t31390;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.241*t14605*(-1.*t14862*t1662 - 1.*t16908*t2788) + 0.008914864*(-1.*t10021*t2788 + t1451*t1662*t2900) + 0.000946944*t3599 - 0.08711128*(-1.*t10209*t1662 - 1.*t10927*t2788)*t3888 + 0.08711128*(-1.*t11507*t1662 - 1.*t13628*t2788)*t3962 - 1.528*t3599*t5177 - 0.008825179*(-1.*t1662*t17221 - 1.*t17429*t2788)*t5398 - 0.241*t3599*t9884)*var2[1] - 0.5*(0.000946944*t17578 + 0.008914864*t17630 - 0.241*t14605*t17853 - 0.08711128*t17723*t3888 + 0.08711128*(-1.*t13628*t1662 + t11507*t2788)*t3962 - 1.528*t17578*t5177 - 0.008825179*t17976*t5398 - 0.241*t17578*t9884)*var2[2])*var2[9];
  p_output1[4]=(-0.5*(0.008914864*t10021 - 0.241*t14605*t16908 + 0.000946944*t3391 - 0.08711128*t10927*t3888 + 0.08711128*t13628*t3962 - 1.528*t3391*t5177 - 0.008825179*t17429*t5398 - 0.241*t3391*t9884)*var2[0] - 0.5*(-0.000946944*t1662*t18066 - 0.008914864*t1662*t18158 + 0.241*t14605*t1662*t18291 + 0.08711128*t1662*t18183*t3888 - 0.08711128*t1662*t18232*t3962 + 1.528*t1662*t18066*t5177 + 0.008825179*t1662*t18520*t5398 + 0.241*t1662*t18066*t9884)*var2[1] - 0.5*(0.000946944*t18066*t2788 + 0.008914864*t18158*t2788 - 0.241*t14605*t18291*t2788 - 0.08711128*t18183*t2788*t3888 + 0.08711128*t18232*t2788*t3962 - 1.528*t18066*t2788*t5177 - 0.008825179*t18520*t2788*t5398 - 0.241*t18066*t2788*t9884)*var2[2] - 0.5*(0.000037*t10021 - 1.*t10927*t19271 - 1.*t13628*t19432 - 1.*t16908*t19539 - 1.*t17429*t19632 + 0.000822*t1451*t3319 + 0.000946944*(t10021*t20693 + t1451*(-1.*t10021*t20127 - 1.*t10021*t20171 - 1.*t18158*t20323 - 1.*t20323*t20611)*t2819 - 1.*t1451*t20769*t3319 + t20611*(-1.*t1451*t20127*t3319 - 1.*t1451*t20171*t3319)) + 5.e-6*t3391 - 1.*t19199*t3391 + 0.008914864*(-1.*t1451*t20590*t3319 + t19719*(t1451*t20127*t3319 + t1451*t20171*t3319) + t20331*t3391 + t1451*t2819*(t18066*t20323 + t19719*t20323 + t20127*t3391 + t20171*t3391)) - 0.241*t14605*(t19719*(t17429*t26646 + t17429*t26684 + t18520*t26834 + t26834*t27165) + t17429*t27533 + t27602*t3391 + t27165*(-1.*t18066*t26834 - 1.*t19719*t26834 - 1.*t26646*t3391 - 1.*t26684*t3391)) - 0.08711128*(t19719*(-1.*t13628*t21095 - 1.*t13628*t21106 - 1.*t18232*t21519 - 1.*t21519*t24721) + t13628*t24910 + t25032*t3391 + t24721*(t18066*t21519 + t19719*t21519 + t21095*t3391 + t21106*t3391))*t3888 + 0.08711128*(t19719*(t10927*t21095 + t10927*t21106 + t18183*t21519 + t20872*t21519) + t10927*t22890 + t24648*t3391 + t20872*(-1.*t18066*t21519 - 1.*t19719*t21519 - 1.*t21095*t3391 - 1.*t21106*t3391))*t3962 - 1.528*((-1.*t10927*t21095 - 1.*t10927*t21106 - 1.*t18183*t21519 - 1.*t20872*t21519)*t24721 + t20872*(t13628*t21095 + t13628*t21106 + t18232*t21519 + t21519*t24721) + t13628*t25846 + t10927*t26307)*t5177 - 0.008825179*(t19719*(-1.*t16908*t26646 - 1.*t16908*t26684 - 1.*t18291*t26834 - 1.*t26430*t26834) + t16908*t26960 + t27133*t3391 + t26430*(t18066*t26834 + t19719*t26834 + t26646*t3391 + t26684*t3391))*t5398 - 5.e-6*t3391*t9084 - 0.241*((t16908*t26646 + t16908*t26684 + t18291*t26834 + t26430*t26834)*t27165 + t26430*(-1.*t17429*t26646 - 1.*t17429*t26684 - 1.*t18520*t26834 - 1.*t26834*t27165) + t17429*t27250 + t16908*t27358)*t9884)*var2[3])*var2[9];
  p_output1[5]=(-0.5*(-0.000946944*t1188*t1451*t2819 - 0.241*t14605*t27754*t2819 + 0.008914864*t1451*t2819*t2900 - 0.08711128*t27722*t2819*t3888 + 0.08711128*t27712*t2819*t3962 + 1.528*t1188*t1451*t2819*t5177 - 0.008825179*t27741*t2819*t5398 + 0.241*t1188*t1451*t2819*t9884)*var2[0] - 0.5*(0.000946944*t27787 - 0.241*t14605*(t16485*t2788 + t1662*t27754*t3319) + 0.008914864*(t1451*t1662*t2900*t3319 + t2788*t2900*t3330) - 0.08711128*(t10642*t2788 + t1662*t27722*t3319)*t3888 + 0.08711128*(t12674*t2788 + t1662*t27712*t3319)*t3962 - 1.528*t27787*t5177 - 0.008825179*(t17304*t2788 + t1662*t27741*t3319)*t5398 - 0.241*t27787*t9884)*var2[1] - 0.5*(0.000946944*t27910 - 0.241*t14605*(t16485*t1662 - 1.*t27754*t2788*t3319) + 0.008914864*(-1.*t1451*t2788*t2900*t3319 + t1662*t2900*t3330) - 0.08711128*(t10642*t1662 - 1.*t27722*t2788*t3319)*t3888 + 0.08711128*(t12674*t1662 - 1.*t27712*t2788*t3319)*t3962 - 1.528*t27910*t5177 - 0.008825179*(t1662*t17304 - 1.*t27741*t2788*t3319)*t5398 - 0.241*t27910*t9884)*var2[2] - 0.5*(-5.e-6*t1188*t1451*t2819 + t1188*t1451*t19199*t2819 - 1.*t19432*t27712*t2819 - 1.*t19271*t27722*t2819 - 1.*t19632*t27741*t2819 - 1.*t19539*t27754*t2819 + 0.000037*t1451*t2819*t2900 + 0.000822*t2819*t3330 + 0.000946944*(t1451*t20693*t2819*t2900 + t1451*t2819*(-1.*t20611*t28184*t2819 + t28286 + t1451*t20092*t2900 - 1.*t1451*t20171*t2819*t2900 + t10021*t28184*t3319 + t1451*t20323*t2900*t3319) - 1.*t20769*t2819*t3330 + t20611*(t28274 + t1451*t28184*t28843 + t1451*t28184*t28846 + t20092*t3330 - 1.*t20171*t2819*t3330 + t20323*t3319*t3330)) + 0.008914864*(-1.*t1188*t1451*t20331*t2819 - 1.*t20590*t2819*t3330 + t19719*(t28205 - 1.*t1451*t28184*t28843 - 1.*t1451*t28184*t28846 - 1.*t20092*t3330 + t20171*t2819*t3330 - 1.*t20323*t3319*t3330) + t1451*t2819*(t1188*t1451*t20092 - 1.*t1188*t1451*t20171*t2819 + t19719*t28184*t2819 + t28212 + t1188*t1451*t20323*t3319 - 1.*t28184*t3319*t3391)) - 0.241*t14605*(-1.*t1188*t1451*t27602*t2819 + t27533*t27741*t2819 + t19719*(t26684*t27741*t2819 + t27165*t2819*t28679 + t28783 + t28786 - 1.*t26834*t27741*t3319 - 1.*t17429*t28679*t3319) + t27165*(-1.*t1188*t1451*t26603 + t1188*t1451*t26684*t2819 - 1.*t19719*t2819*t28679 + t28769 - 1.*t1188*t1451*t26834*t3319 + t28679*t3319*t3391)) - 0.08711128*(-1.*t1188*t1451*t25032*t2819 + t24910*t27712*t2819 + t19719*(-1.*t21106*t27712*t2819 - 1.*t24721*t2819*t28452 + t28593 + t28597 + t21519*t27712*t3319 + t13628*t28452*t3319) + t24721*(t1188*t1451*t21084 - 1.*t1188*t1451*t21106*t2819 + t19719*t2819*t28452 + t28551 + t1188*t1451*t21519*t3319 - 1.*t28452*t3319*t3391))*t3888 + 0.08711128*(-1.*t1188*t1451*t24648*t2819 + t22890*t27722*t2819 + t19719*(t21106*t27722*t2819 + t20872*t2819*t28452 + t28488 + t28500 - 1.*t21519*t27722*t3319 - 1.*t10927*t28452*t3319) + t20872*(-1.*t1188*t1451*t21084 + t1188*t1451*t21106*t2819 - 1.*t19719*t2819*t28452 + t28470 - 1.*t1188*t1451*t21519*t3319 + t28452*t3319*t3391))*t3962 - 1.528*(t25846*t27712*t2819 + t26307*t27722*t2819 + t24721*(-1.*t21106*t27722*t2819 - 1.*t20872*t2819*t28452 + t28621 + t28625 + t21519*t27722*t3319 + t10927*t28452*t3319) + t20872*(t21106*t27712*t2819 + t24721*t2819*t28452 + t28648 + t28652 - 1.*t21519*t27712*t3319 - 1.*t13628*t28452*t3319))*t5177 - 0.008825179*(-1.*t1188*t1451*t27133*t2819 + t26960*t27754*t2819 + t19719*(-1.*t26684*t27754*t2819 - 1.*t26430*t2819*t28679 + t28687 + t28691 + t26834*t27754*t3319 + t16908*t28679*t3319) + t26430*(t1188*t1451*t26603 - 1.*t1188*t1451*t26684*t2819 + t19719*t2819*t28679 + t28681 + t1188*t1451*t26834*t3319 - 1.*t28679*t3319*t3391))*t5398 + 5.e-6*t1188*t1451*t2819*t9084 - 0.241*(t27250*t27741*t2819 + t27358*t27754*t2819 + t27165*(t26684*t27754*t2819 + t26430*t2819*t28679 + t28713 + t28715 - 1.*t26834*t27754*t3319 - 1.*t16908*t28679*t3319) + t26430*(-1.*t26684*t27741*t2819 - 1.*t27165*t2819*t28679 + t28741 + t28746 + t26834*t27741*t3319 + t17429*t28679*t3319))*t9884)*var2[3] - 0.5*(-0.000822*t1451 - 1.*t10642*t19271 - 1.*t12674*t19432 - 1.*t16485*t19539 - 1.*t17304*t19632 - 5.e-6*t1188*t3330 + t1188*t19199*t3330 + 0.000037*t2900*t3330 + 0.008914864*(t1188*t1451*(-1.*t1451*t28184 + t28205) + t1451*(t20504 + t28263 + t28264) - 1.*t1188*t28259*t3330 + t3330*(t28212 - 1.*t1188*t28184*t3330)) - 0.241*t14605*(t17304*t28761 + t1188*t1451*(t26603*t27741 + t17304*t28679 + t28783 + t28786) - 1.*t1188*t28778*t3330 + t17221*(t28769 + t1188*t28679*t3330)) + 0.000946944*(-1.*t1451*(t1451*t28184 + t28274)*t2900 + t28372*t2900*t3330 + t1451*(-1.*t1188*t19741 + t20746 - 1.*t20092*t2900*t3330) + t3330*(t28286 - 1.*t28184*t2900*t3330)) - 0.08711128*(t12674*t28533 + t1188*t1451*(-1.*t21084*t27712 - 1.*t12674*t28452 + t28593 + t28597) - 1.*t1188*t28587*t3330 + t11507*(t28551 - 1.*t1188*t28452*t3330))*t3888 + 0.08711128*(t10642*t28426 + t1188*t1451*(t21084*t27722 + t10642*t28452 + t28488 + t28500) - 1.*t1188*t28512*t3330 + t10209*(t28470 + t1188*t28452*t3330))*t3962 - 1.528*(t11507*(-1.*t21084*t27722 - 1.*t10642*t28452 + t28621 + t28625) + t12674*t28634 + t10642*t28642 + t10209*(t21084*t27712 + t12674*t28452 + t28648 + t28652))*t5177 - 0.008825179*(t16485*t28673 + t1188*t1451*(-1.*t26603*t27754 - 1.*t16485*t28679 + t28687 + t28691) - 1.*t1188*t28701*t3330 + t14862*(t28681 - 1.*t1188*t28679*t3330))*t5398 + 5.e-6*t1188*t3330*t9084 - 0.241*(t17221*(t26603*t27754 + t16485*t28679 + t28713 + t28715) + t17304*t28720 + t16485*t28732 + t14862*(-1.*t26603*t27741 - 1.*t17304*t28679 + t28741 + t28746))*t9884)*var2[4])*var2[9];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(-0.5*(0.008914864*t18066 + 0.000946944*t20611 - 0.241*t14605*t29653 - 0.08711128*t29611*t3888 + 0.08711128*t29635*t3962 - 1.528*t20611*t5177 - 0.008825179*t29665*t5398 - 0.241*t20611*t9884)*var2[0] - 0.5*(0.000946944*t17630 + 0.008914864*(-1.*t1188*t1451*t2788 - 1.*t1662*t29675) - 0.08711128*t3888*(-1.*t1662*t29695 - 1.*t1188*t1451*t2788*t3888) + 0.08711128*t3962*(-1.*t1662*t29734 + t1188*t1451*t2788*t3962) - 1.528*t17630*t5177 - 0.008825179*t5398*(-1.*t1662*t29801 - 1.*t1188*t1451*t2788*t5398) - 0.241*t14605*(-1.*t1662*t29761 - 1.*t1188*t1451*t2788*t9703) - 0.241*t17630*t9884)*var2[1] - 0.5*(0.008914864*(t2357 + t2788*t29675) + 0.000946944*t29716 - 0.08711128*t3888*(t2788*t29695 - 1.*t1188*t1451*t1662*t3888) + 0.08711128*t3962*(t2788*t29734 + t1188*t1451*t1662*t3962) - 1.528*t29716*t5177 - 0.008825179*t5398*(t2788*t29801 - 1.*t1188*t1451*t1662*t5398) - 0.241*t14605*(t2788*t29761 - 1.*t1188*t1451*t1662*t9703) - 0.241*t29716*t9884)*var2[2] - 0.5*(0.000037*t18066 + 5.e-6*t20611 - 1.*t19199*t20611 - 1.*t19271*t29611 - 1.*t19432*t29635 - 1.*t19539*t29653 - 1.*t19632*t29665 + 0.000946944*(t18066*t20693 + t1451*t2819*(-1.*t18066*t20171 + t20504 - 1.*t20323*t29675 + t30003 - 1.*t20611*t30477 - 1.*t10021*t30484) + t20611*(t1451*t2819*t30477 - 1.*t1451*t30484*t3319 + t1451*t30000*t3330)) + 0.008914864*(t20331*t20611 + t19719*(-1.*t1451*t2819*t30477 + t1451*t30484*t3319 - 1.*t1451*t30000*t3330) + t1451*t2819*(t10021*t20323 + t20171*t20611 + t30032 + t30039 + t19719*t30477 + t30484*t3391)) - 0.241*t14605*(t20611*t27602 + t27533*t29665 + t19719*(t26684*t29665 + t26834*t29801 + t30411 + t30416 + t27165*t30692 + t17429*t30697) + t27165*(-1.*t20611*t26684 - 1.*t10021*t26834 + t30393 + t30397 - 1.*t19719*t30692 - 1.*t30697*t3391)) - 0.08711128*(t20611*t25032 + t24910*t29635 + t19719*(-1.*t21106*t29635 - 1.*t21519*t29734 + t30167 + t30178 - 1.*t24721*t30554 - 1.*t13628*t30562) + t24721*(t20611*t21106 + t10021*t21519 + t30141 + t30157 + t19719*t30554 + t30562*t3391))*t3888 + 0.08711128*(t20611*t24648 + t22890*t29611 + t19719*(t21106*t29611 + t21519*t29695 + t30103 + t30106 + t20872*t30554 + t10927*t30562) + t20872*(-1.*t20611*t21106 - 1.*t10021*t21519 + t30072 + t30086 - 1.*t19719*t30554 - 1.*t30562*t3391))*t3962 - 1.528*(t26307*t29611 + t25846*t29635 + t24721*(-1.*t21106*t29611 - 1.*t21519*t29695 + t30217 + t30221 - 1.*t20872*t30554 - 1.*t10927*t30562) + t20872*(t21106*t29635 + t21519*t29734 + t30234 + t30240 + t24721*t30554 + t13628*t30562))*t5177 - 0.008825179*(t20611*t27133 + t26960*t29653 + t19719*(-1.*t26684*t29653 - 1.*t26834*t29761 + t30297 + t30301 - 1.*t26430*t30692 - 1.*t16908*t30697) + t26430*(t20611*t26684 + t10021*t26834 + t30269 + t30278 + t19719*t30692 + t30697*t3391))*t5398 - 5.e-6*t20611*t9084 - 0.241*(t27358*t29653 + t27250*t29665 + t27165*(t26684*t29653 + t26834*t29761 + t30327 + t30340 + t26430*t30692 + t16908*t30697) + t26430*(-1.*t26684*t29665 - 1.*t26834*t29801 + t30351 + t30355 - 1.*t27165*t30692 - 1.*t17429*t30697))*t9884)*var2[3] - 0.5*(-0.000037*t1188*t1451 - 5.e-6*t1451*t2900 + t1451*t19199*t2900 + 0.000946944*(-1.*t1188*t1451*t28372 + (t20504 + t28263 + t28264 - 1.*t1188*t29984 + t30003 + t2900*t30000*t30004)*t3330) + 0.008914864*(-1.*t1451*t28259*t2900 + t3330*(t1188*t19741 + t2900*t29984 + t1188*t30000*t30004 + t30032 + t30039 + t20092*t2900*t3330)) + t1188*t1451*t19271*t3888 - 1.*t1188*t1451*t19432*t3962 + 0.08711128*(-1.*t1451*t28512*t2900 + t10209*(t29210 + t29215 - 1.*t1188*t29141*t30004 + t30072 + t30086 - 1.*t21084*t2900*t3330) - 1.*t1188*t1451*t28426*t3888 + t1188*t1451*(t29198 + t29200 + t30103 + t30106 - 1.*t10642*t29141*t3330 + t1188*t21084*t3330*t3888))*t3962 - 0.08711128*t3888*(-1.*t1451*t28587*t2900 + t11507*(t29149 + t29154 + t1188*t29141*t30004 + t30141 + t30157 + t21084*t2900*t3330) + t1188*t1451*t28533*t3962 + t1188*t1451*(t29165 + t29168 + t30167 + t30178 + t12674*t29141*t3330 + t1188*t21084*t3330*t3962)) - 1.528*(-1.*t1188*t1451*t28642*t3888 + t11507*(t29244 + t29249 + t30217 + t30221 + t10642*t29141*t3330 - 1.*t1188*t21084*t3330*t3888) + t1188*t1451*t28634*t3962 + t10209*(t29262 + t29274 + t30234 + t30240 - 1.*t12674*t29141*t3330 - 1.*t1188*t21084*t3330*t3962))*t5177 + t1188*t1451*t19632*t5398 - 0.241*t14605*(-1.*t1451*t28778*t2900 + t17221*(t29356 + t29375 - 1.*t1188*t29339*t30004 + t30393 + t30397 - 1.*t26603*t2900*t3330) - 1.*t1188*t1451*t28761*t5398 + t1188*t1451*(t29387 + t29390 + t30411 + t30416 - 1.*t17304*t29339*t3330 + t1188*t26603*t3330*t5398)) + 5.e-6*t1451*t2900*t9084 + t1188*t1451*t19539*t9703 - 0.008825179*t5398*(-1.*t1451*t28701*t2900 + t14862*(t29432 + t29435 + t1188*t29339*t30004 + t30269 + t30278 + t26603*t2900*t3330) - 1.*t1188*t1451*t28673*t9703 + t1188*t1451*(t29459 + t29469 + t30297 + t30301 + t16485*t29339*t3330 - 1.*t1188*t26603*t3330*t9703)) - 0.241*(-1.*t1188*t1451*t28720*t5398 + t14862*(t29558 + t29561 + t30351 + t30355 + t17304*t29339*t3330 - 1.*t1188*t26603*t3330*t5398) - 1.*t1188*t1451*t28732*t9703 + t17221*(t29527 + t29531 + t30327 + t30340 - 1.*t16485*t29339*t3330 + t1188*t26603*t3330*t9703))*t9884)*var2[4] - 0.5*(-0.001936496911648*t1188 - 1.*t1188*t19199 - 0.000243227358208*t2900 + t19271*t2900*t3888 - 1.*t19432*t2900*t3962 + 0.08711128*(t1188*t29233 - 1.*t2900*t29193*t3888 + t1188*(t21038*t2900 - 1.*t1188*t29141 + t29210 + t29215)*t3888 + t2900*(t29198 + t29200 - 1.*t1188*t21038*t3888 - 1.*t2900*t29141*t3888))*t3962 - 0.08711128*t3888*(t1188*t29182 + t2900*t29131*t3962 - 1.*t1188*(-1.*t21038*t2900 + t1188*t29141 + t29149 + t29154)*t3962 + t2900*(t29165 + t29168 - 1.*t1188*t21038*t3962 - 1.*t2900*t29141*t3962)) - 1.528*(-1.*t2900*t29285*t3888 + t2900*t29291*t3962 - 1.*t1188*(t29244 + t29249 + t1188*t21038*t3888 + t2900*t29141*t3888)*t3962 + t1188*t3888*(t29262 + t29274 + t1188*t21038*t3962 + t2900*t29141*t3962))*t5177 + t19632*t2900*t5398 - 0.241*t14605*(t1188*t29404 - 1.*t2900*t29320*t5398 + t1188*(t26600*t2900 - 1.*t1188*t29339 + t29356 + t29375)*t5398 + t2900*(t29387 + t29390 - 1.*t1188*t26600*t5398 - 1.*t2900*t29339*t5398)) - 5.e-6*t1188*t9084 + t19539*t2900*t9703 - 0.008825179*t5398*(t1188*t29493 - 1.*t2900*t29426*t9703 + t1188*(-1.*t26600*t2900 + t1188*t29339 + t29432 + t29435)*t9703 + t2900*(t29459 + t29469 + t1188*t26600*t9703 + t2900*t29339*t9703)) - 0.241*(-1.*t2900*t29586*t5398 - 1.*t2900*t29580*t9703 + t1188*(t29558 + t29561 + t1188*t26600*t5398 + t2900*t29339*t5398)*t9703 + t1188*t5398*(t29527 + t29531 - 1.*t1188*t26600*t9703 - 1.*t2900*t29339*t9703))*t9884)*var2[5])*var2[9];
  p_output1[10]=var2[9]*(t30821 - 0.5*(-1.528*t19719*t30985 - 0.241*t19719*t31267 + t31328 + t31330 + t31331 + t31341 + 0.08711128*t20872*t3962 + 0.08711128*t31324*t3962)*var2[0] - 0.5*(-1.528*t17578*t30985 - 0.241*t17578*t31267 + t31409 + t31413 + t31417 + t31423 + 0.08711128*t17723*t3962 + 0.08711128*(t27722*t2788 - 1.*t1662*t31356)*t3962)*var2[1] - 0.5*(-1.528*t30985*t31346 - 0.241*t31267*t31346 + t31373 + t31374 + t31378 + t31395 + 0.08711128*(t10209*t1662 + t10927*t2788)*t3962 + 0.08711128*(t1662*t27722 + t2788*t31356)*t3962)*var2[2] - 0.5*(-1.*t19271*t24721 - 1.*t20872*t30866 - 1.*t19719*t30874 - 1.*t24721*t30897 - 1.528*(t24721*t25846 + t20872*t26307)*t30985 - 1.*t19432*t31324 + t31663 + t31671 + t31672 + t31673 + t31674 + t31799 - 0.241*t31267*t31805 + t31812 - 0.241*t14605*(t31813 + t19719*(t27235 + t27246 + t27248 + t31579 + t27165*t31819 + t17429*t31824) + t27165*(t31567 - 1.*t19719*t31819 - 1.*t31824*t3391)) + 0.08711128*(t20872*t22890 + t19719*t24648)*t3888 - 0.08711128*(t24910*t31324 + t19719*(-1.*t21106*t31324 - 1.*t21519*t31356 + t31514 + t31516 - 1.*t24721*t31709 - 1.*t13628*t31720) + t24721*(t31507 + t19719*t31709 + t31720*t3391))*t3888 + 0.08711128*(t24721*t24910 + t19719*t25032)*t3962 + 0.08711128*(t22890*t24721 + t19719*(t26261 + t26263 + t26267 + t31493 + t20872*t31709 + t10927*t31720) + t20872*(t31479 - 1.*t19719*t31709 - 1.*t31720*t3391))*t3962 - 1.528*(t24721*t26307 + t25846*t31324 + t24721*(t24992 + t24996 + t25022 + t31527 - 1.*t20872*t31709 - 1.*t10927*t31720) + t20872*(t21106*t31324 + t21519*t31356 + t31536 + t31537 + t24721*t31709 + t13628*t31720))*t5177 - 0.008825179*(t31845 + t19719*(t31606 + t31612 - 1.*t26430*t31819 - 1.*t16908*t31824 + t31856 + t31859) + t26430*(t31593 + t19719*t31819 + t31824*t3391))*t5398 - 0.241*(t26430*(t27124 + t27127 + t27130 + t31622 - 1.*t27165*t31819 - 1.*t17429*t31824) + t31870 + t31871 + t27165*(t31636 + t31639 + t26430*t31819 + t16908*t31824 + t31886 + t31887))*t9884)*var2[3] - 0.5*(-1.*t11507*t19271 - 1.*t19432*t27722 - 1.*t10209*t30866 - 1.*t1188*t1451*t30874 - 1.*t11507*t30897 - 1.528*(t11507*t28634 + t10209*t28642)*t30985 + t31431 + t31439 + t31442 + t31443 + t31444 + t31550 - 0.241*t31267*t31553 + t31561 - 0.241*t14605*(t31578 + t1188*t1451*(t27235 + t28718 + t28719 + t31137 + t17304*t31571 + t31579) + t17221*(-1.*t1188*t2900*t31132 + t31567 + t1188*t31571*t3330)) + 0.08711128*(t10209*t28426 + t1188*t1451*t28512)*t3888 - 0.08711128*(t27722*t28533 + t1188*t1451*(t28506 + t31038 - 1.*t21084*t31322 - 1.*t12674*t31483 + t31514 + t31516) + t11507*(t1188*t2900*t30935 + t31507 - 1.*t1188*t31483*t3330))*t3888 + 0.08711128*(t11507*t28533 + t1188*t1451*t28587)*t3962 + 0.08711128*(t11507*t28426 + t1188*t1451*(t26261 + t28638 + t28639 + t30936 + t10642*t31483 + t31493) + t10209*(-1.*t1188*t2900*t30935 + t31479 + t1188*t31483*t3330))*t3962 - 1.528*(t27722*t28634 + t11507*t28642 + t11507*(t24992 + t28555 + t28564 + t30993 - 1.*t10642*t31483 + t31527) + t10209*(t28630 + t31010 + t21084*t31322 + t12674*t31483 + t31536 + t31537))*t5177 - 0.008825179*(t31601 + t1188*t1451*(t31211 + t31218 - 1.*t16485*t31571 + t31606 + t31612 + t31614) + t14862*(t1188*t2900*t31132 + t31593 - 1.*t1188*t31571*t3330))*t5398 - 0.241*(t31620 + t31621 + t14862*(t27124 + t28696 + t28700 + t31164 - 1.*t17304*t31571 + t31622) + t17221*(t31186 + t31199 + t16485*t31571 + t31636 + t31639 + t31644))*t9884)*var2[4] - 0.5*(-1.*t2900*t30874 + t31057 + t31065 + t31069 + t31086 + t31093 + t31108 + t31118 - 0.241*t31242*t31267 + t1188*t19432*t3888 - 1.*t1188*t30866*t3888 + 0.08711128*t3888*(t2900*t29233 + t1188*t29193*t3888) + t1188*t19271*t3962 + t1188*t30897*t3962 + 0.08711128*t3962*(t2900*t29182 - 1.*t1188*t29131*t3962) - 1.528*t30985*(t1188*t29285*t3888 - 1.*t1188*t29291*t3962) - 0.08711128*t3888*(-1.*t1188*t29131*t3888 + t2900*(t28506 + t29230 + t29231 + t31038 + t30935*t30939*t3962 + t4061)) + 0.08711128*t3962*(-1.*t1188*t29193*t3962 + t2900*(t28638 + t29283 + t30936 + t30935*t30939*t3888 + t3962*t4047 + t4419)) - 1.528*(-1.*t1188*t29291*t3888 - 1.*t1188*t29285*t3962 + t1188*t3888*(t28630 + t29290 + t31010 - 1.*t30935*t30939*t3962 + t3888*t4047 + t4358) - 1.*t1188*t3962*(t28555 + t29179 + t29180 + t30993 - 1.*t30935*t30939*t3888 + t5006))*t5177 - 0.008825179*t5398*(t31210 + t2900*(t31211 + t31216 + t31218 + t31222 + t9509 - 1.*t30939*t31132*t9703)) - 0.241*t14605*(t31121 + t2900*(t28718 + t29584 + t31137 + t30939*t31132*t5398 + t9084*t9386 + t9733)) - 0.241*(t31158 + t31184 + t1188*(t28696 + t29487 + t29490 + t31161 + t31164 - 1.*t30939*t31132*t5398)*t9703 + t1188*t5398*(t31186 + t31192 + t31196 + t31199 + t31202 + t30939*t31132*t9703))*t9884)*var2[5] - 0.5*(t31288 + t31293 + t31302 + t31303 + t31304 + t31308 - 1.*t19271*t3888 - 1.*t30897*t3888 + t19432*t3962 - 1.*t30866*t3962 - 3.056*t30985*t5177 - 0.482*t31267*t9884)*var2[9] - 0.5*(t30808 + t30839 + t30850 - 0.00270221251488*t3888 + 0.00005198763696*t3962)*var2[10]);
  p_output1[11]=var2[9]*(t30821 - 0.5*(t31328 + t31330 + t31331 + t31341 - 0.241*t19719*t32011)*var2[0] - 0.5*(t31409 + t31413 + t31417 + t31423 - 0.241*t17578*t32011)*var2[1] - 0.5*(t31373 + t31374 + t31378 + t31395 - 0.241*t31346*t32011)*var2[2] - 0.5*(t31663 + t31671 + t31672 + t31673 + t31674 + t31799 + t31812 - 0.241*t31805*t32011 - 0.241*t14605*(t31813 + t19719*(t27235 + t27246 + t27248 + t32063 + t27165*t32133 + t17429*t32140) + t27165*(t32059 - 1.*t19719*t32133 - 1.*t32140*t3391)) - 0.008825179*(t31845 + t19719*(t31606 + t31856 + t31859 + t32091 - 1.*t26430*t32133 - 1.*t16908*t32140) + t26430*(t32078 + t19719*t32133 + t32140*t3391))*t5398 - 0.241*(t31870 + t31871 + t27165*(t31636 + t31886 + t31887 + t32109 + t26430*t32133 + t16908*t32140) + t26430*(t27124 + t27127 + t27130 + t32099 - 1.*t27165*t32133 - 1.*t17429*t32140))*t9884)*var2[3] - 0.5*(t31431 + t31439 + t31442 + t31443 + t31444 + t31550 + t31561 - 0.241*t31553*t32011 - 0.241*t14605*(t31578 + t1188*t1451*(t27235 + t28718 + t28719 + t31950 + t17304*t32050 + t32063) + t17221*(-1.*t1188*t2900*t31949 + t32059 + t1188*t32050*t3330)) - 0.008825179*(t31601 + t1188*t1451*(t31218 + t31606 + t31614 + t31987 - 1.*t16485*t32050 + t32091) + t14862*(t1188*t2900*t31949 + t32078 - 1.*t1188*t32050*t3330))*t5398 - 0.241*(t31620 + t31621 + t14862*(t27124 + t28696 + t28700 + t31965 - 1.*t17304*t32050 + t32099) + t17221*(t31199 + t31636 + t31644 + t31971 + t16485*t32050 + t32109))*t9884)*var2[4] - 0.5*(t31057 + t31065 + t31069 + t31086 + t31093 + t31108 + t31118 - 0.241*t31242*t32011 - 0.008825179*t5398*(t31210 + t2900*(t31216 + t31218 + t31222 + t31987 - 1.*t31939*t5398 - 1.*t30939*t31949*t9703)) - 0.241*t14605*(t31121 + t2900*(t28718 + t29584 + t31950 + t30939*t31949*t5398 + t31939*t9084 + t9733)) - 0.241*(t31158 + t31184 + t1188*(t28696 + t29487 + t29490 + t31962 + t31965 - 1.*t30939*t31949*t5398)*t9703 + t1188*t5398*(t31192 + t31199 + t31202 + t31971 + t31973 + t30939*t31949*t9703))*t9884)*var2[5] - 0.5*(t31288 + t31293 + t31302 + t31303 + t31304 + t31308 - 0.482*t32011*t9884)*var2[9] - 0.5*(t30808 + t30839 + t30850 - 0.008825179*(t30840 + t30842 + t30845 - 1.*t31905*t5268 + t31916*t5279)*t5398 - 0.241*t14605*(-0.21935*t5268 + t31916*t5268 + t31905*t5279 + t5268*t5597 - 1.*t5279*t8400))*var2[10]);
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec10_laikago_description.hh"

namespace SymFunction
{

void Ce3_vec10_laikago_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
