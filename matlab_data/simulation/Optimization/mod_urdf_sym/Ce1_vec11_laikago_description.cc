/*
 * Automatically Generated from Mathematica.
 * Tue 10 Dec 2019 16:01:23 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t34;
  double t379;
  double t62;
  double t210;
  double t267;
  double t438;
  double t658;
  double t789;
  double t831;
  double t832;
  double t860;
  double t897;
  double t912;
  double t704;
  double t711;
  double t727;
  double t765;
  double t804;
  double t807;
  double t1010;
  double t1011;
  double t1015;
  double t1770;
  double t1859;
  double t1237;
  double t1287;
  double t1295;
  double t1303;
  double t1319;
  double t1368;
  double t1541;
  double t678;
  double t830;
  double t945;
  double t976;
  double t1103;
  double t1104;
  double t1141;
  double t1979;
  double t1980;
  double t1984;
  double t1989;
  double t1995;
  double t1996;
  double t2199;
  double t2222;
  double t2225;
  double t2171;
  double t2185;
  double t2191;
  double t2195;
  double t2352;
  double t2357;
  double t2294;
  double t2319;
  double t2325;
  double t2029;
  double t2066;
  double t2070;
  double t2230;
  double t2239;
  double t2240;
  double t2241;
  double t2249;
  double t2270;
  double t2271;
  double t1968;
  double t1969;
  double t1970;
  double t605;
  double t629;
  double t635;
  double t2590;
  double t311;
  double t441;
  double t522;
  double t2545;
  double t1574;
  double t1583;
  double t1600;
  double t1099;
  double t1151;
  double t1187;
  double t2093;
  double t1967;
  double t1971;
  double t1974;
  double t1976;
  double t1985;
  double t1986;
  double t1988;
  double t2004;
  double t2008;
  double t2024;
  double t2072;
  double t2073;
  double t2111;
  double t2118;
  double t2119;
  double t2914;
  double t2917;
  double t2922;
  double t2941;
  double t2942;
  double t2943;
  double t3101;
  double t3102;
  double t3110;
  double t3114;
  double t2287;
  double t2293;
  double t2329;
  double t2333;
  double t2375;
  double t2379;
  double t2410;
  double t2421;
  double t2425;
  double t2972;
  double t2976;
  double t2977;
  double t3116;
  double t3122;
  double t3124;
  double t3126;
  double t3127;
  double t3129;
  double t3132;
  double t3134;
  double t3136;
  double t3138;
  double t2695;
  double t2696;
  double t2698;
  double t2700;
  double t2703;
  double t2722;
  double t2727;
  double t2731;
  double t2736;
  double t2738;
  double t2740;
  double t2755;
  double t2756;
  double t2763;
  double t2772;
  double t2776;
  double t2784;
  double t2818;
  double t2826;
  double t2832;
  double t2853;
  double t2858;
  double t2861;
  double t2896;
  double t2898;
  double t2900;
  double t3089;
  double t3093;
  double t3098;
  double t3148;
  double t3151;
  double t3152;
  double t3046;
  double t3051;
  double t3066;
  double t3533;
  double t3546;
  double t3551;
  double t3557;
  double t3558;
  double t3559;
  double t3573;
  double t3575;
  double t3721;
  double t3728;
  double t3750;
  double t3767;
  double t3768;
  double t3781;
  double t3799;
  double t3814;
  double t3833;
  double t3663;
  double t3666;
  double t3672;
  double t3681;
  double t3707;
  double t3718;
  double t3865;
  double t3869;
  double t3870;
  double t3719;
  double t3847;
  double t3853;
  double t4019;
  double t4020;
  double t4053;
  double t3856;
  double t3861;
  double t3864;
  double t3885;
  double t3888;
  double t3916;
  double t3660;
  double t3661;
  double t3662;
  double t4063;
  double t4113;
  double t4115;
  double t4124;
  double t4140;
  double t4144;
  double t3982;
  double t3993;
  double t4006;
  double t2150;
  double t2164;
  double t2168;
  double t4445;
  double t4449;
  double t4450;
  double t4453;
  double t4456;
  double t4463;
  double t4465;
  double t4433;
  double t4434;
  double t4436;
  double t4477;
  double t4489;
  double t4495;
  double t4440;
  double t4466;
  double t4470;
  double t4548;
  double t4550;
  double t4558;
  double t4501;
  double t4506;
  double t4507;
  double t4559;
  double t4561;
  double t4566;
  double t4576;
  double t4579;
  double t4588;
  double t2427;
  double t2433;
  double t2435;
  double t1835;
  double t1879;
  double t1916;
  double t1922;
  double t1926;
  double t1931;
  double t1958;
  double t1960;
  double t1961;
  double t4225;
  double t4231;
  double t4249;
  double t4251;
  double t4843;
  double t4844;
  double t4847;
  double t4854;
  double t4855;
  double t4856;
  double t4858;
  double t4860;
  double t4869;
  double t4895;
  double t4903;
  double t4821;
  double t4824;
  double t4825;
  double t4265;
  double t4286;
  double t4288;
  double t4294;
  double t4357;
  double t4358;
  double t4361;
  double t4363;
  double t4926;
  double t4936;
  double t4937;
  double t4938;
  double t4406;
  double t4407;
  double t4422;
  double t4424;
  double t1949;
  double t1953;
  double t1956;
  double t4593;
  double t4599;
  double t4609;
  double t4611;
  double t5025;
  double t5027;
  double t5028;
  double t5030;
  double t5031;
  double t5032;
  double t5033;
  double t5034;
  double t5037;
  double t5039;
  double t5041;
  double t4662;
  double t4664;
  double t4671;
  double t4673;
  double t4758;
  double t4762;
  double t4763;
  double t4764;
  double t4789;
  double t4798;
  double t4800;
  double t4801;
  double t5106;
  double t5107;
  double t5108;
  double t5119;
  double t5123;
  double t5124;
  double t5177;
  double t5178;
  double t5179;
  double t2134;
  double t2140;
  double t5262;
  double t5263;
  double t5266;
  double t5279;
  double t5280;
  double t5286;
  double t5268;
  double t5271;
  double t5272;
  double t5278;
  double t5287;
  double t5288;
  double t5290;
  double t5291;
  double t5293;
  double t5398;
  double t5431;
  double t5432;
  double t5433;
  double t5443;
  double t5444;
  double t5446;
  double t5437;
  double t5438;
  double t5439;
  double t5442;
  double t5448;
  double t5449;
  double t5485;
  double t5487;
  double t5490;
  double t5259;
  double t5395;
  double t5613;
  double t5614;
  double t5615;
  double t5617;
  double t5618;
  double t5625;
  double t5644;
  double t5650;
  double t5652;
  double t5616;
  double t5626;
  double t5633;
  double t5504;
  double t5506;
  double t5507;
  double t5641;
  double t5653;
  double t5654;
  double t5663;
  double t5664;
  double t5666;
  double t5522;
  double t5533;
  double t5539;
  double t5541;
  double t4927;
  double t4930;
  double t4837;
  double t4848;
  double t4979;
  double t5774;
  double t4989;
  double t4995;
  double t4996;
  double t5029;
  double t5036;
  double t5051;
  double t5052;
  double t5069;
  double t5076;
  double t5083;
  double t5085;
  double t5761;
  double t5763;
  double t5765;
  double t3981;
  double t4151;
  double t4152;
  double t5791;
  double t5793;
  double t5794;
  double t5798;
  double t5799;
  double t5805;
  double t4318;
  double t5835;
  double t5837;
  double t5844;
  double t4369;
  double t4370;
  double t5849;
  double t5850;
  double t5851;
  double t4521;
  double t4621;
  double t4622;
  double t5894;
  double t5899;
  double t5904;
  double t5917;
  double t5921;
  double t5923;
  double t4738;
  double t5969;
  double t5970;
  double t5971;
  double t4766;
  double t4769;
  double t5276;
  double t5299;
  double t5301;
  double t5350;
  double t6146;
  double t5363;
  double t5364;
  double t5441;
  double t5502;
  double t5524;
  double t5536;
  double t6134;
  double t6186;
  double t5638;
  double t6188;
  double t6190;
  double t5680;
  double t6204;
  double t5720;
  double t6208;
  double t5731;
  double t6211;
  double t5807;
  double t5808;
  double t5813;
  double t5819;
  double t5783;
  double t5784;
  double t5770;
  double t5771;
  double t5933;
  double t5935;
  double t5947;
  double t5952;
  double t5855;
  double t5862;
  double t5877;
  double t5878;
  double t6347;
  double t6349;
  double t6147;
  double t6148;
  double t6316;
  double t6318;
  double t6395;
  double t6396;
  double t6169;
  double t6507;
  double t6407;
  double t6408;
  double t6189;
  double t6443;
  double t6445;
  double t6207;
  double t6539;
  double t6435;
  double t6438;
  double t6439;
  double t6465;
  double t6466;
  double t6468;
  double t6545;
  double t6551;
  double t6559;
  double t6247;
  double t6567;
  double t6571;
  double t6272;
  double t6573;
  double t6639;
  double t6640;
  double t6641;
  double t6644;
  double t6646;
  double t6648;
  t34 = Cos(var1[4]);
  t379 = Cos(var1[10]);
  t62 = Cos(var1[5]);
  t210 = Sin(var1[9]);
  t267 = Sin(var1[10]);
  t438 = Sin(var1[5]);
  t658 = Cos(var1[11]);
  t789 = Sin(var1[11]);
  t831 = -1. + t658;
  t832 = 0.25*t831;
  t860 = -0.37338*t658;
  t897 = 0.002196*t789;
  t912 = t832 + t860 + t897;
  t704 = -1.*t658;
  t711 = 1. + t704;
  t727 = 0.21935*t711;
  t765 = 0.217154*t658;
  t804 = -0.12338*t789;
  t807 = t727 + t765 + t804;
  t1010 = t379*t658;
  t1011 = -1.*t267*t789;
  t1015 = t1010 + t1011;
  t1770 = Sin(var1[4]);
  t1859 = Cos(var1[9]);
  t1237 = t658*t912;
  t1287 = -0.21935*t789;
  t1295 = t807*t789;
  t1303 = t1237 + t1287 + t1295;
  t1319 = -1.*t658*t267;
  t1368 = -1.*t379*t789;
  t1541 = t1319 + t1368;
  t678 = 0.21935*t658;
  t830 = -1.*t658*t807;
  t945 = t912*t789;
  t976 = t678 + t830 + t945;
  t1103 = t658*t267;
  t1104 = t379*t789;
  t1141 = t1103 + t1104;
  t1979 = t379*t62;
  t1980 = -1.*t210*t267*t438;
  t1984 = t1979 + t1980;
  t1989 = t62*t1015;
  t1995 = t210*t1541*t438;
  t1996 = t1989 + t1995;
  t2199 = -1.*t379*t658;
  t2222 = t267*t789;
  t2225 = t2199 + t2222;
  t2171 = t1859*t1541*t1770;
  t2185 = t34*t1996;
  t2191 = t2171 + t2185;
  t2195 = 0.241*t976*t2191;
  t2352 = -0.12338*t658;
  t2357 = t2352 + t897;
  t2294 = 0.002196*t658;
  t2319 = 0.12338*t789;
  t2325 = t2294 + t2319;
  t2029 = t62*t1141;
  t2066 = t210*t1015*t438;
  t2070 = t2029 + t2066;
  t2230 = t1859*t2225*t1770;
  t2239 = t62*t1541;
  t2240 = t210*t2225*t438;
  t2241 = t2239 + t2240;
  t2249 = t34*t2241;
  t2270 = t2230 + t2249;
  t2271 = 0.241*t1303*t2270;
  t1968 = t62*t267;
  t1969 = t379*t210*t438;
  t1970 = t1968 + t1969;
  t605 = t379*t62*t210;
  t629 = -1.*t267*t438;
  t635 = t605 + t629;
  t2590 = Sin(var1[3]);
  t311 = -1.*t62*t210*t267;
  t441 = -1.*t379*t438;
  t522 = t311 + t441;
  t2545 = Cos(var1[3]);
  t1574 = t62*t210*t1541;
  t1583 = -1.*t1015*t438;
  t1600 = t1574 + t1583;
  t1099 = t62*t210*t1015;
  t1151 = -1.*t1141*t438;
  t1187 = t1099 + t1151;
  t2093 = -1.*t1859*t379*t1770;
  t1967 = t1859*t379*t34;
  t1971 = -1.*t1770*t1970;
  t1974 = t1967 + t1971;
  t1976 = -1.*t1859*t34*t267;
  t1985 = -1.*t1770*t1984;
  t1986 = t1976 + t1985;
  t1988 = t1859*t34*t1541;
  t2004 = -1.*t1770*t1996;
  t2008 = t1988 + t2004;
  t2024 = t1859*t34*t1015;
  t2072 = -1.*t1770*t2070;
  t2073 = t2024 + t2072;
  t2111 = -1.*t62*t267;
  t2118 = -1.*t379*t210*t438;
  t2119 = t2111 + t2118;
  t2914 = t62*t210*t267;
  t2917 = t379*t438;
  t2922 = t2914 + t2917;
  t2941 = -1.*t62*t210*t1541;
  t2942 = t1015*t438;
  t2943 = t2941 + t2942;
  t3101 = t2545*t2943;
  t3102 = -1.*t2590*t2008;
  t3110 = t3101 + t3102;
  t3114 = 0.241*t976*t3110;
  t2287 = -0.21935*t658;
  t2293 = t658*t807;
  t2329 = t658*t2325;
  t2333 = -1.*t912*t789;
  t2375 = t2357*t789;
  t2379 = t2287 + t2293 + t2329 + t2333 + t2375;
  t2410 = -1.*t658*t2357;
  t2421 = t2325*t789;
  t2425 = t1237 + t2410 + t1287 + t1295 + t2421;
  t2972 = -1.*t62*t210*t1015;
  t2976 = t1141*t438;
  t2977 = t2972 + t2976;
  t3116 = -1.*t62*t210*t2225;
  t3122 = t1541*t438;
  t3124 = t3116 + t3122;
  t3126 = t2545*t3124;
  t3127 = t1859*t34*t2225;
  t3129 = -1.*t1770*t2241;
  t3132 = t3127 + t3129;
  t3134 = -1.*t2590*t3132;
  t3136 = t3126 + t3134;
  t3138 = 0.241*t1303*t3136;
  t2695 = -1.*t34*t1970;
  t2696 = t2093 + t2695;
  t2698 = t1859*t267*t1770;
  t2700 = -1.*t34*t1984;
  t2703 = t2698 + t2700;
  t2722 = -1.*t1859*t1541*t1770;
  t2727 = -1.*t34*t1996;
  t2731 = t2722 + t2727;
  t2736 = -1.*t1859*t1015*t1770;
  t2738 = -1.*t34*t2070;
  t2740 = t2736 + t2738;
  t2755 = -1.*t379*t34*t210;
  t2756 = -1.*t1859*t379*t1770*t438;
  t2763 = t2755 + t2756;
  t2772 = t34*t210*t267;
  t2776 = t1859*t267*t1770*t438;
  t2784 = t2772 + t2776;
  t2818 = -1.*t34*t210*t1541;
  t2826 = -1.*t1859*t1541*t1770*t438;
  t2832 = t2818 + t2826;
  t2853 = -1.*t34*t210*t1015;
  t2858 = -1.*t1859*t1015*t1770*t438;
  t2861 = t2853 + t2858;
  t2896 = -1.*t379*t62*t210;
  t2898 = t267*t438;
  t2900 = t2896 + t2898;
  t3089 = t2545*t2922;
  t3093 = -1.*t2590*t1986;
  t3098 = t3089 + t3093;
  t3148 = t2545*t2977;
  t3151 = -1.*t2590*t2073;
  t3152 = t3148 + t3151;
  t3046 = -1.*t1859*t379*t34;
  t3051 = -1.*t1770*t2119;
  t3066 = t3046 + t3051;
  t3533 = t2590*t2943;
  t3546 = t2545*t2008;
  t3551 = t3533 + t3546;
  t3557 = 0.241*t976*t3551;
  t3558 = t2590*t3124;
  t3559 = t2545*t3132;
  t3573 = t3558 + t3559;
  t3575 = 0.241*t1303*t3573;
  t3721 = -1.*t1859;
  t3728 = 1. + t3721;
  t3750 = 0.0875*t3728;
  t3767 = 0.14451*t1859;
  t3768 = -0.031996*t379;
  t3781 = 0.000482*t267;
  t3799 = t3768 + t3781;
  t3814 = -1.*t210*t3799;
  t3833 = t3750 + t3767 + t3814;
  t3663 = -1.*t379;
  t3666 = 1. + t3663;
  t3672 = 0.21935*t3666;
  t3681 = 0.218868*t379;
  t3707 = -0.031996*t267;
  t3718 = t3672 + t3681 + t3707;
  t3865 = -1.*t62*t3833;
  t3869 = -1.*t3718*t438;
  t3870 = t3865 + t3869;
  t3719 = t62*t3718;
  t3847 = -1.*t3833*t438;
  t3853 = t3719 + t3847;
  t4019 = 0.05701*t210;
  t4020 = t1859*t3799;
  t4053 = t4019 + t4020;
  t3856 = t210*t1770;
  t3861 = -1.*t1859*t34*t438;
  t3864 = t3856 + t3861;
  t3885 = t62*t3833;
  t3888 = t3718*t438;
  t3916 = t3885 + t3888;
  t3660 = t1859*t379*t1770;
  t3661 = t34*t1970;
  t3662 = t3660 + t3661;
  t4063 = t4053*t1770;
  t4113 = t34*t3853;
  t4115 = t4063 + t4113;
  t4124 = t34*t4053;
  t4140 = -1.*t1770*t3853;
  t4144 = t4124 + t4140;
  t3982 = t34*t210;
  t3993 = t1859*t1770*t438;
  t4006 = t3982 + t3993;
  t2150 = -1.*t1859*t267*t1770;
  t2164 = t34*t1984;
  t2168 = t2150 + t2164;
  t4445 = 0.124119*t1859;
  t4449 = 0.21935*t267;
  t4450 = -1.*t267*t807;
  t4453 = t379*t912;
  t4456 = t4449 + t4450 + t4453;
  t4463 = -1.*t210*t4456;
  t4465 = t3750 + t4445 + t4463;
  t4433 = t379*t807;
  t4434 = t267*t912;
  t4436 = t3672 + t4433 + t4434;
  t4477 = -1.*t62*t4465;
  t4489 = -1.*t4436*t438;
  t4495 = t4477 + t4489;
  t4440 = t62*t4436;
  t4466 = -1.*t4465*t438;
  t4470 = t4440 + t4466;
  t4548 = 0.036619*t210;
  t4550 = t1859*t4456;
  t4558 = t4548 + t4550;
  t4501 = t62*t4465;
  t4506 = t4436*t438;
  t4507 = t4501 + t4506;
  t4559 = t4558*t1770;
  t4561 = t34*t4470;
  t4566 = t4559 + t4561;
  t4576 = t34*t4558;
  t4579 = -1.*t1770*t4470;
  t4588 = t4576 + t4579;
  t2427 = t1859*t1015*t1770;
  t2433 = t34*t2070;
  t2435 = t2427 + t2433;
  t1835 = -1.*t379*t210*t1770;
  t1879 = t1859*t379*t34*t438;
  t1916 = t1835 + t1879;
  t1922 = t210*t267*t1770;
  t1926 = -1.*t1859*t34*t267*t438;
  t1931 = t1922 + t1926;
  t1958 = -1.*t210*t1015*t1770;
  t1960 = t1859*t34*t1015*t438;
  t1961 = t1958 + t1960;
  t4225 = -1.*t1859*t62*t3916;
  t4231 = -1.*t3864*t4115;
  t4249 = -1.*t4006*t4144;
  t4251 = t4225 + t4231 + t4249;
  t4843 = -0.05701*t210;
  t4844 = -1.*t1859*t3799;
  t4847 = t4843 + t4844;
  t4854 = 0.05701*t1859;
  t4855 = t4854 + t3814;
  t4856 = t4855*t1770;
  t4858 = -1.*t34*t4847*t438;
  t4860 = t4856 + t4858;
  t4869 = t34*t4855;
  t4895 = t4847*t1770*t438;
  t4903 = t4869 + t4895;
  t4821 = t1859*t1770;
  t4824 = t34*t210*t438;
  t4825 = t4821 + t4824;
  t4265 = t3916*t2900;
  t4286 = t3662*t4115;
  t4288 = t1974*t4144;
  t4294 = t4265 + t4286 + t4288;
  t4357 = t1859*t62*t3916;
  t4358 = t3864*t4115;
  t4361 = t4006*t4144;
  t4363 = t4357 + t4358 + t4361;
  t4926 = Power(t62,2);
  t4936 = t1859*t34;
  t4937 = -1.*t210*t1770*t438;
  t4938 = t4936 + t4937;
  t4406 = -1.*t2922*t3916;
  t4407 = -1.*t4115*t2168;
  t4422 = -1.*t4144*t1986;
  t4424 = t4406 + t4407 + t4422;
  t1949 = -1.*t210*t1541*t1770;
  t1953 = t1859*t34*t1541*t438;
  t1956 = t1949 + t1953;
  t4593 = t1859*t62*t4507;
  t4599 = t3864*t4566;
  t4609 = t4006*t4588;
  t4611 = t4593 + t4599 + t4609;
  t5025 = -0.036619*t210;
  t5027 = -1.*t1859*t4456;
  t5028 = t5025 + t5027;
  t5030 = 0.036619*t1859;
  t5031 = t5030 + t4463;
  t5032 = t5031*t1770;
  t5033 = -1.*t34*t5028*t438;
  t5034 = t5032 + t5033;
  t5037 = t34*t5031;
  t5039 = t5028*t1770*t438;
  t5041 = t5037 + t5039;
  t4662 = -1.*t4507*t2943;
  t4664 = -1.*t4566*t2191;
  t4671 = -1.*t4588*t2008;
  t4673 = t4662 + t4664 + t4671;
  t4758 = -1.*t1859*t62*t4507;
  t4762 = -1.*t3864*t4566;
  t4763 = -1.*t4006*t4588;
  t4764 = t4758 + t4762 + t4763;
  t4789 = t4507*t2977;
  t4798 = t4566*t2435;
  t4800 = t4588*t2073;
  t4801 = t4789 + t4798 + t4800;
  t5106 = -1.*t4053*t1770;
  t5107 = -1.*t34*t3853;
  t5108 = t5106 + t5107;
  t5119 = -1.*t210*t1770;
  t5123 = t1859*t34*t438;
  t5124 = t5119 + t5123;
  t5177 = -1.*t4558*t1770;
  t5178 = -1.*t34*t4470;
  t5179 = t5177 + t5178;
  t2134 = t34*t2119;
  t2140 = t2093 + t2134;
  t5262 = 0.000482*t379;
  t5263 = 0.031996*t267;
  t5266 = t5262 + t5263;
  t5279 = t62*t3799;
  t5280 = t210*t5266*t438;
  t5286 = t5279 + t5280;
  t5268 = -1.*t62*t210*t5266;
  t5271 = t3799*t438;
  t5272 = t5268 + t5271;
  t5278 = t1859*t5266*t1770;
  t5287 = t34*t5286;
  t5288 = t5278 + t5287;
  t5290 = t1859*t34*t5266;
  t5291 = -1.*t1770*t5286;
  t5293 = t5290 + t5291;
  t5398 = 0.21935*t379;
  t5431 = -1.*t379*t807;
  t5432 = -1.*t267*t912;
  t5433 = t5398 + t5431 + t5432;
  t5443 = t62*t4456;
  t5444 = t210*t5433*t438;
  t5446 = t5443 + t5444;
  t5437 = -1.*t62*t210*t5433;
  t5438 = t4456*t438;
  t5439 = t5437 + t5438;
  t5442 = t1859*t5433*t1770;
  t5448 = t34*t5446;
  t5449 = t5442 + t5448;
  t5485 = t1859*t34*t5433;
  t5487 = -1.*t1770*t5446;
  t5490 = t5485 + t5487;
  t5259 = 5.e-6*t2191;
  t5395 = t2191*t4764;
  t5613 = -1.*t267*t2357;
  t5614 = t379*t2325;
  t5615 = t5613 + t5614;
  t5617 = t379*t2357;
  t5618 = t267*t2325;
  t5625 = t5617 + t5618;
  t5644 = t62*t5625;
  t5650 = t210*t5615*t438;
  t5652 = t5644 + t5650;
  t5616 = -1.*t62*t210*t5615;
  t5626 = t5625*t438;
  t5633 = t5616 + t5626;
  t5504 = t4507*t2943;
  t5506 = t4566*t2191;
  t5507 = t4588*t2008;
  t5641 = t1859*t5615*t1770;
  t5653 = t34*t5652;
  t5654 = t5641 + t5653;
  t5663 = t1859*t34*t5615;
  t5664 = -1.*t1770*t5652;
  t5666 = t5663 + t5664;
  t5522 = t2270*t4611;
  t5533 = -1.*t4507*t3124;
  t5539 = -1.*t4566*t2270;
  t5541 = -1.*t4588*t3132;
  t4927 = -1.*t1859*t4926*t4847;
  t4930 = t62*t210*t3916;
  t4837 = -1.*t1859*t379*t62*t3916;
  t4848 = t62*t4847*t2900;
  t4979 = t1859*t4926*t4847;
  t5774 = Power(t438,2);
  t4989 = -1.*t62*t210*t3916;
  t4995 = -1.*t62*t4847*t2922;
  t4996 = -1.*t1859*t62*t267*t3916;
  t5029 = t1859*t4926*t5028;
  t5036 = -1.*t62*t210*t4507;
  t5051 = t1859*t62*t1541*t4507;
  t5052 = -1.*t62*t5028*t2943;
  t5069 = -1.*t1859*t4926*t5028;
  t5076 = t62*t210*t4507;
  t5083 = -1.*t1859*t62*t1015*t4507;
  t5085 = t62*t5028*t2977;
  t5761 = -1.*t210*t4053;
  t5763 = t1859*t438*t3853;
  t5765 = t5761 + t5763 + t4225;
  t3981 = t1859*t438*t3916;
  t4151 = t1970*t3916;
  t4152 = t3853*t2900;
  t5791 = t1859*t379*t4053;
  t5793 = t1970*t3853;
  t5794 = t5791 + t5793 + t4265;
  t5798 = t210*t4053;
  t5799 = -1.*t1859*t438*t3853;
  t5805 = t5798 + t5799 + t4357;
  t4318 = -1.*t1859*t438*t3916;
  t5835 = t1859*t4053*t267;
  t5837 = -1.*t3853*t1984;
  t5844 = t5835 + t4406 + t5837;
  t4369 = -1.*t2922*t3853;
  t4370 = -1.*t3916*t1984;
  t5849 = t210*t4558;
  t5850 = -1.*t1859*t438*t4470;
  t5851 = t5849 + t5850 + t4593;
  t4521 = -1.*t1859*t438*t4507;
  t4621 = -1.*t4507*t1996;
  t4622 = -1.*t4470*t2943;
  t5894 = -1.*t1859*t4558*t1541;
  t5899 = -1.*t4470*t1996;
  t5904 = t5894 + t5899 + t4662;
  t5917 = -1.*t210*t4558;
  t5921 = t1859*t438*t4470;
  t5923 = t5917 + t5921 + t4758;
  t4738 = t1859*t438*t4507;
  t5969 = t1859*t4558*t1015;
  t5970 = t4470*t2070;
  t5971 = t5969 + t4789 + t5970;
  t4766 = t4470*t2977;
  t4769 = t4507*t2070;
  t5276 = -1.*t1859*t62*t5272;
  t5299 = t2922*t3916;
  t5301 = t5272*t2900;
  t5350 = t1859*t62*t5272;
  t6146 = Power(t1859,2);
  t5363 = -1.*t2922*t5272;
  t5364 = -1.*t3916*t635;
  t5441 = -1.*t1859*t62*t5439;
  t5502 = t5439*t2977;
  t5524 = t1859*t62*t5439;
  t5536 = -1.*t5439*t2943;
  t6134 = 5.e-6*t2943;
  t6186 = t2943*t5923;
  t5638 = -1.*t1859*t62*t5633;
  t6188 = t1859*t4558*t1541;
  t6190 = t4470*t1996;
  t5680 = t5633*t2977;
  t6204 = t3124*t5851;
  t5720 = t1859*t62*t5633;
  t6208 = -1.*t1859*t4558*t2225;
  t5731 = -1.*t5633*t2943;
  t6211 = -1.*t4470*t2241;
  t5807 = t1859*t4053;
  t5808 = t210*t4855;
  t5813 = -1.*t210*t4053*t267;
  t5819 = t1859*t4855*t267;
  t5783 = -1.*t379*t210*t4053;
  t5784 = t1859*t379*t4855;
  t5770 = -1.*t1859*t4053;
  t5771 = -1.*t210*t4855;
  t5933 = -1.*t1859*t4558;
  t5935 = -1.*t210*t5031;
  t5947 = -1.*t210*t4558*t1015;
  t5952 = t1859*t5031*t1015;
  t5855 = t1859*t4558;
  t5862 = t210*t5031;
  t5877 = t210*t4558*t1541;
  t5878 = -1.*t1859*t5031*t1541;
  t6347 = -1.*t1859*t3833;
  t6349 = t5761 + t6347;
  t6147 = t6146*t379*t5266;
  t6148 = -1.*t1859*t4053*t267;
  t6316 = t1859*t3833;
  t6318 = t5798 + t6316;
  t6395 = -1.*t379*t210*t3833;
  t6396 = t3718*t267;
  t6169 = t6146*t5266*t267;
  t6507 = Power(t210,2);
  t6407 = -1.*t1859*t4465;
  t6408 = t5917 + t6407;
  t6189 = t6146*t5433*t1015;
  t6443 = t1859*t4465;
  t6445 = t5849 + t6443;
  t6207 = -1.*t6146*t5433*t1541;
  t6539 = 5.e-6*t1859*t1541;
  t6435 = t4436*t1141;
  t6438 = -1.*t210*t4465*t1015;
  t6439 = t6435 + t5969 + t6438;
  t6465 = t210*t4465*t1541;
  t6466 = -1.*t4436*t1015;
  t6468 = t5894 + t6465 + t6466;
  t6545 = t1859*t6408*t1541;
  t6551 = -1.*t210*t4465*t1541;
  t6559 = t4436*t1015;
  t6247 = t6146*t5615*t1015;
  t6567 = t1859*t6445*t2225;
  t6571 = -1.*t4436*t1541;
  t6272 = -1.*t6146*t5615*t1541;
  t6573 = t210*t4465*t2225;
  t6639 = 5.e-6*t1015;
  t6640 = 0.008825179*t1541*t976;
  t6641 = -0.124119*t1015;
  t6644 = -0.0875*t2225;
  t6646 = t6641 + t6644;
  t6648 = 0.241*t1303*t6646;
  p_output1[0]=var2[10]*(-0.5*(0.000736496*t1974 - 0.048889888*t1986 + 0.241*t1303*t2008 + 0.241*t2073*t976)*var2[4] - 0.5*(0.241*t1303*t1600*t34 - 0.048889888*t34*t522 + 0.000736496*t34*t635 + 0.241*t1187*t34*t976)*var2[5] - 0.5*(0.000736496*t1916 - 0.048889888*t1931 + 0.241*t1303*t1956 + 0.241*t1961*t976)*var2[9] - 0.5*(-0.048889888*t2140 + 0.000736496*t2168 + t2195 + t2271)*var2[10] - 0.5*(t2195 + t2271 + 0.241*t2191*t2379 + 0.241*t2425*t2435)*var2[11]);
  p_output1[1]=var2[10]*(-0.5*(0.000736496*(-1.*t1974*t2545 - 1.*t2590*t2900) - 0.048889888*(-1.*t1986*t2545 - 1.*t2590*t2922) + 0.241*t1303*(-1.*t2008*t2545 - 1.*t2590*t2943) + 0.241*(-1.*t2073*t2545 - 1.*t2590*t2977)*t976)*var2[3] - 0.5*(-0.000736496*t2590*t2696 + 0.048889888*t2590*t2703 - 0.241*t1303*t2590*t2731 - 0.241*t2590*t2740*t976)*var2[4] - 0.5*(0.241*t1303*(t1996*t2545 + t1600*t1770*t2590) - 0.048889888*(t1984*t2545 + t1770*t2590*t522) + 0.000736496*(t1970*t2545 + t1770*t2590*t635) + 0.241*(t2070*t2545 + t1187*t1770*t2590)*t976)*var2[5] - 0.5*(0.241*t1303*(-1.*t2590*t2832 - 1.*t1541*t1859*t2545*t62) - 0.048889888*(-1.*t2590*t2784 + t1859*t2545*t267*t62) + 0.000736496*(-1.*t2590*t2763 - 1.*t1859*t2545*t379*t62) + 0.241*(-1.*t2590*t2861 - 1.*t1015*t1859*t2545*t62)*t976)*var2[9] - 0.5*(0.000736496*t3098 + t3114 + t3138 - 0.048889888*(-1.*t2590*t3066 + t2545*t635))*var2[10] - 0.5*(0.241*t2379*t3110 + t3114 + t3138 + 0.241*t2425*t3152)*var2[11]);
  p_output1[2]=var2[10]*(-0.5*(0.000736496*(-1.*t1974*t2590 + t2545*t2900) - 0.048889888*t3098 + 0.241*t1303*t3110 + 0.241*t3152*t976)*var2[3] - 0.5*(0.000736496*t2545*t2696 - 0.048889888*t2545*t2703 + 0.241*t1303*t2545*t2731 + 0.241*t2545*t2740*t976)*var2[4] - 0.5*(0.241*t1303*(-1.*t1600*t1770*t2545 + t1996*t2590) - 0.048889888*(t1984*t2590 - 1.*t1770*t2545*t522) + 0.000736496*(t1970*t2590 - 1.*t1770*t2545*t635) + 0.241*(-1.*t1187*t1770*t2545 + t2070*t2590)*t976)*var2[5] - 0.5*(0.241*t1303*(t2545*t2832 - 1.*t1541*t1859*t2590*t62) - 0.048889888*(t2545*t2784 + t1859*t2590*t267*t62) + 0.000736496*(t2545*t2763 - 1.*t1859*t2590*t379*t62) + 0.241*(t2545*t2861 - 1.*t1015*t1859*t2590*t62)*t976)*var2[9] - 0.5*(0.000736496*(t1986*t2545 + t2590*t2922) + t3557 + t3575 - 0.048889888*(t2545*t3066 + t2590*t635))*var2[10] - 0.5*(0.241*t2425*(t2073*t2545 + t2590*t2977) + 0.241*t2379*t3551 + t3557 + t3575)*var2[11]);
  p_output1[3]=var2[10]*(-0.5*(-0.000085*t1974 + 1.e-5*t1986 + 5.e-6*t2073 + 0.015477*t4006 - 0.048889888*(t1974*t4251 + t4006*t4294 + t3864*(t1974*t4115 + t2696*t4144 + t3662*t4144 + t1974*t5108) + t3662*(-1.*t4006*t4115 - 1.*t3864*t4144 - 1.*t4006*t5108 - 1.*t4144*t5124)) + 0.000736496*(t1986*t4363 + t4006*t4424 + t3864*(-1.*t1986*t4115 - 1.*t2168*t4144 - 1.*t2703*t4144 - 1.*t1986*t5108) + t2168*(t4006*t4115 + t3864*t4144 + t4006*t5108 + t4144*t5124)) + 0.241*t1303*(t2073*t4764 + t4006*t4801 + t3864*(t2073*t4566 + t2435*t4588 + t2740*t4588 + t2073*t5179) + t2435*(-1.*t4006*t4566 - 1.*t3864*t4588 - 1.*t4588*t5124 - 1.*t4006*t5179)) + 0.241*(t2008*t4611 + t4006*t4673 + t3864*(-1.*t2008*t4566 - 1.*t2191*t4588 - 1.*t2731*t4588 - 1.*t2008*t5179) + t2191*(t4006*t4566 + t3864*t4588 + t4588*t5124 + t4006*t5179))*t976)*var2[4] - 0.5*(5.e-6*t1187*t34 + 1.e-5*t34*t522 - 0.015477*t1859*t34*t62 + 0.000736496*(t34*t4363*t522 + t3864*(t1770*t1986*t3870 - 1.*t2168*t34*t3870 + t4369 + t4370 - 1.*t34*t4115*t522 + t1770*t4144*t522) - 1.*t1859*t34*t4424*t62 + t2168*(t34*t3864*t3870 - 1.*t1770*t3870*t4006 + t4318 + t1859*t3853*t62 - 1.*t1859*t34*t4115*t62 + t1770*t1859*t4144*t62)) + 0.241*t1303*(t1187*t34*t4764 + t3864*(-1.*t1770*t2073*t4495 + t2435*t34*t4495 + t1187*t34*t4566 - 1.*t1187*t1770*t4588 + t4766 + t4769) - 1.*t1859*t34*t4801*t62 + t2435*(-1.*t34*t3864*t4495 + t1770*t4006*t4495 + t4738 - 1.*t1859*t4470*t62 + t1859*t34*t4566*t62 - 1.*t1770*t1859*t4588*t62)) - 0.000085*t34*t635 - 0.048889888*(-1.*t1859*t34*t4294*t62 + t3662*(-1.*t34*t3864*t3870 + t3981 + t1770*t3870*t4006 - 1.*t1859*t3853*t62 + t1859*t34*t4115*t62 - 1.*t1770*t1859*t4144*t62) + t34*t4251*t635 + t3864*(-1.*t1770*t1974*t3870 + t34*t3662*t3870 + t4151 + t4152 + t34*t4115*t635 - 1.*t1770*t4144*t635)) + 0.241*(t1600*t34*t4611 + t3864*(t1770*t2008*t4495 - 1.*t2191*t34*t4495 - 1.*t1600*t34*t4566 + t1600*t1770*t4588 + t4621 + t4622) - 1.*t1859*t34*t4673*t62 + t2191*(t34*t3864*t4495 - 1.*t1770*t4006*t4495 + t4521 + t1859*t4470*t62 - 1.*t1859*t34*t4566*t62 + t1770*t1859*t4588*t62))*t976)*var2[5] - 0.5*(-0.000085*t1916 + 1.e-5*t1931 + 5.e-6*t1961 + 0.015477*t4825 - 0.048889888*(t1916*t4251 + t4294*t4825 + t3864*(t1916*t4115 + t2763*t4144 + t4837 + t4848 + t3662*t4860 + t1974*t4903) + t3662*(-1.*t4115*t4825 - 1.*t3864*t4860 - 1.*t4006*t4903 + t4927 + t4930 - 1.*t4144*t4938)) + 0.000736496*(t1931*t4363 + t4424*t4825 + t2168*(t4115*t4825 + t3864*t4860 + t4006*t4903 + t4144*t4938 + t4979 + t4989) + t3864*(-1.*t1931*t4115 - 1.*t2784*t4144 - 1.*t2168*t4860 - 1.*t1986*t4903 + t4995 + t4996)) + 0.241*t1303*(t1961*t4764 + t4801*t4825 + t2435*(-1.*t4566*t4825 - 1.*t4588*t4938 - 1.*t3864*t5034 - 1.*t4006*t5041 + t5069 + t5076) + t3864*(t1961*t4566 + t2861*t4588 + t2435*t5034 + t2073*t5041 + t5083 + t5085)) + 0.241*(t1956*t4611 + t4673*t4825 + t2191*(t4566*t4825 + t4588*t4938 + t5029 + t3864*t5034 + t5036 + t4006*t5041) + t3864*(-1.*t1956*t4566 - 1.*t2832*t4588 - 1.*t2191*t5034 - 1.*t2008*t5041 + t5051 + t5052))*t976)*var2[9] - 0.5*(1.e-5*t2140 - 0.000085*t2168 + t5259 - 0.048889888*(t2168*t4251 + t3662*(t5276 - 1.*t3864*t5288 - 1.*t4006*t5293) + t3864*(t2168*t4115 + t1986*t4144 + t3662*t5288 + t1974*t5293 + t5299 + t5301)) + 0.000736496*(t2140*t4363 + t2168*(t3864*t5288 + t4006*t5293 + t5350) + t3864*(-1.*t2140*t4115 - 1.*t3066*t4144 - 1.*t2168*t5288 - 1.*t1986*t5293 + t5363 + t5364)) + 0.241*t1303*(t5395 + t2435*(t5441 - 1.*t3864*t5449 - 1.*t4006*t5490) + t3864*(t2435*t5449 + t2073*t5490 + t5502 + t5504 + t5506 + t5507)) + 0.241*(t5522 + t2191*(t3864*t5449 + t4006*t5490 + t5524) + t3864*(-1.*t2191*t5449 - 1.*t2008*t5490 + t5533 + t5536 + t5539 + t5541))*t976)*var2[10] - 0.5*(0.241*t2425*(t2191*t4611 + t3864*t4673) + 0.241*t2379*(t2435*t4764 + t3864*t4801) + t5259 + 0.241*t1303*(t5395 + t2435*(t5638 - 1.*t3864*t5654 - 1.*t4006*t5666) + t3864*(t5504 + t5506 + t5507 + t2435*t5654 + t2073*t5666 + t5680)) + 0.241*(t5522 + t2191*(t3864*t5654 + t4006*t5666 + t5720) + t3864*(t5533 + t5539 + t5541 - 1.*t2191*t5654 - 1.*t2008*t5666 + t5731))*t976)*var2[11]);
  p_output1[4]=var2[10]*(-0.5*(-0.000085*t1970 + 1.e-5*t1984 + 5.e-6*t2070 - 0.015477*t1859*t438 + 0.241*t1303*(t2977*(t1859*t438*t4495 + t4738) + t2070*t5923 - 1.*t1859*t438*t5971 + t1859*(t1187*t4470 + t2070*t4495 + t4766 + t4769)*t62) + 0.000736496*(t2922*(t4318 - 1.*t1859*t3870*t438) + t1984*t5805 - 1.*t1859*t438*t5844 + t1859*(-1.*t1984*t3870 + t4369 + t4370 - 1.*t3853*t522)*t62) - 0.048889888*(t2900*(t3981 + t1859*t3870*t438) + t1970*t5765 - 1.*t1859*t438*t5794 + t1859*t62*(t1970*t3870 + t4151 + t4152 + t3853*t635)) + 0.241*(t2943*(-1.*t1859*t438*t4495 + t4521) + t1996*t5851 - 1.*t1859*t438*t5904 + t1859*(-1.*t1600*t4470 - 1.*t1996*t4495 + t4621 + t4622)*t62)*t976)*var2[5] - 0.5*(-5.e-6*t1015*t1859*t62 - 0.015477*t210*t62 + 1.e-5*t1859*t267*t62 + 0.000085*t1859*t379*t62 - 0.048889888*(t2900*(-1.*t210*t3853*t438 + t4927 + t4930 + t5770 + t5771 - 1.*t1859*t4847*t5774) - 1.*t1859*t379*t5765*t62 + t1859*(t1859*t379*t3853*t438 + t4837 - 1.*t1970*t438*t4847 + t4848 + t5783 + t5784)*t62 - 1.*t210*t5794*t62) + 0.000736496*(t2922*(t210*t3853*t438 + t4979 + t4989 + t1859*t4847*t5774 + t5807 + t5808) + t1859*t267*t5805*t62 + t1859*(t1859*t267*t3853*t438 + t1984*t438*t4847 + t4995 + t4996 + t5813 + t5819)*t62 - 1.*t210*t5844*t62) + 0.241*t1303*(t2977*(-1.*t210*t438*t4470 + t5069 + t5076 - 1.*t1859*t5028*t5774 + t5933 + t5935) - 1.*t1015*t1859*t5923*t62 + t1859*(t1015*t1859*t438*t4470 - 1.*t2070*t438*t5028 + t5083 + t5085 + t5947 + t5952)*t62 - 1.*t210*t5971*t62) + 0.241*(t2943*(t210*t438*t4470 + t5029 + t5036 + t1859*t5028*t5774 + t5855 + t5862) - 1.*t1541*t1859*t5851*t62 + t1859*(-1.*t1541*t1859*t438*t4470 + t1996*t438*t5028 + t5051 + t5052 + t5877 + t5878)*t62 - 1.*t210*t5904*t62)*t976)*var2[9] - 0.5*(-0.000085*t2922 + t6134 - 0.048889888*(t2900*(-1.*t1859*t210*t5266 + t5276 + t1859*t438*t5286) + t2922*t5765 + t1859*(t1984*t3853 + t1970*t5286 + t5299 + t5301 + t6147 + t6148)*t62) + 0.241*t1303*(t2977*(-1.*t1859*t210*t5433 + t5441 + t1859*t438*t5446) + t6186 + t1859*(t2070*t5446 + t5502 + t5504 + t6188 + t6189 + t6190)*t62) + 1.e-5*t635 + 0.000736496*(t2922*(t1859*t210*t5266 - 1.*t1859*t438*t5286 + t5350) + t1859*(-1.*t2119*t3853 - 1.*t1984*t5286 + t5363 + t5364 + t5791 + t6169)*t62 + t5805*t635) + 0.241*(t2943*(t1859*t210*t5433 - 1.*t1859*t438*t5446 + t5524) + t6204 + t1859*t62*(-1.*t1996*t5446 + t5533 + t5536 + t6207 + t6208 + t6211))*t976)*var2[10] - 0.5*(t6134 + 0.241*t2425*(t2943*t5851 + t1859*t5904*t62) + 0.241*t2379*(t2977*t5923 + t1859*t5971*t62) + 0.241*t1303*(t2977*(-1.*t1859*t210*t5615 + t5638 + t1859*t438*t5652) + t6186 + t1859*t62*(t5504 + t2070*t5652 + t5680 + t6188 + t6190 + t6247)) + 0.241*(t2943*(t1859*t210*t5615 - 1.*t1859*t438*t5652 + t5720) + t6204 + t1859*t62*(t5533 - 1.*t1996*t5652 + t5731 + t6208 + t6211 + t6272))*t976)*var2[11]);
  p_output1[5]=var2[10]*(-0.5*(0.015477*t1859 - 5.e-6*t1015*t210 + 1.e-5*t210*t267 + 0.000085*t210*t379 + 0.000736496*(-1.*t1859*t267*(-1.*t210*t3833 + t1859*t4847 + t5807 + t5808) + t210*(-1.*t1859*t267*t3833 - 1.*t210*t267*t4847 + t5813 + t5819) + t1859*(-1.*t3718*t379 - 1.*t210*t267*t3833 + t5835) + t210*t267*t6318) - 0.048889888*(t1859*t379*(t210*t3833 - 1.*t1859*t4847 + t5770 + t5771) + t210*(-1.*t1859*t379*t3833 - 1.*t210*t379*t4847 + t5783 + t5784) - 1.*t210*t379*t6349 + t1859*(t5791 + t6395 + t6396)) + 0.241*t1303*(t1015*t1859*(t210*t4465 - 1.*t1859*t5028 + t5933 + t5935) + t210*(-1.*t1015*t1859*t4465 - 1.*t1015*t210*t5028 + t5947 + t5952) - 1.*t1015*t210*t6408 + t1859*t6439) + 0.241*(t1541*t1859*(-1.*t210*t4465 + t1859*t5028 + t5855 + t5862) + t210*(t1541*t1859*t4465 + t1541*t210*t5028 + t5877 + t5878) - 1.*t1541*t210*t6445 + t1859*t6468)*t976)*var2[9] - 0.5*(0.000085*t1859*t267 - 1.e-5*t1859*t379 + 0.000736496*(-1.*t1859*t379*t6318 + t210*(-1.*t379*t3799 + t5791 + t6169 + t6395 + t6396 + t267*t5266*t6507)) - 0.048889888*(-1.*t1859*t267*t6349 + t210*(t3718*t379 + t267*t3799 + t210*t267*t3833 + t6147 + t6148 + t379*t5266*t6507)) + t6539 + 0.241*t1303*(t6545 + t210*(t1141*t4456 + t6188 + t6189 + t1015*t5433*t6507 + t6551 + t6559)) + 0.241*(t6567 + t210*(-1.*t1015*t4456 + t6207 + t6208 - 1.*t1541*t5433*t6507 + t6571 + t6573))*t976)*var2[10] - 0.5*(0.241*t2379*(t1015*t1859*t6408 + t210*t6439) + 0.241*t2425*(t1541*t1859*t6445 + t210*t6468) + t6539 + 0.241*t1303*(t6545 + t210*(t1141*t5625 + t6188 + t6247 + t1015*t5615*t6507 + t6551 + t6559)) + 0.241*(t6567 + t210*(-1.*t1015*t5625 + t6208 + t6272 - 1.*t1541*t5615*t6507 + t6571 + t6573))*t976)*var2[11]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=var2[10]*(-0.5*(-0.00005198763696*t267 + 0.00270221251488*t379 + t6639 + t6640 + t6648)*var2[10] - 0.5*(0.241*(-0.124119*t1141 - 0.0875*t1541)*t2379 + 0.008825179*t1015*t2425 + t6639 + t6640 + t6648)*var2[11]);
  p_output1[10]=-0.5*(0.482*t1303*t2379 + 0.482*t2425*t976)*var2[10]*var2[11];
  p_output1[11]=-0.5*(-0.02973458*t2379 + 0.000529236*t2425)*var2[10]*var2[11];
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec11_laikago_description.hh"

namespace SymFunction
{

void Ce1_vec11_laikago_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
