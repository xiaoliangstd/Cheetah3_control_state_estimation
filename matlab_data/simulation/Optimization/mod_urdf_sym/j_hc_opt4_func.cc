/*
 * Automatically Generated from Mathematica.
 * Thu 12 Dec 2019 13:01:31 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t74;
  double t148;
  double t96;
  double t30;
  double t159;
  double t130;
  double t177;
  double t217;
  double t332;
  double t275;
  double t316;
  double t323;
  double t251;
  double t385;
  double t388;
  double t406;
  double t411;
  double t458;
  double t480;
  double t706;
  double t755;
  double t766;
  double t337;
  double t816;
  double t828;
  double t867;
  double t499;
  double t555;
  double t811;
  double t888;
  double t926;
  double t628;
  double t637;
  double t1131;
  double t1182;
  double t1196;
  double t1205;
  double t240;
  double t1467;
  double t1415;
  double t1529;
  double t1545;
  double t1552;
  double t1562;
  double t1580;
  double t1595;
  double t769;
  double t1498;
  double t1614;
  double t1618;
  double t1778;
  double t1780;
  double t1785;
  double t1632;
  double t1654;
  double t1174;
  double t1873;
  double t1887;
  double t1899;
  double t2106;
  double t2111;
  double t2089;
  double t2109;
  double t2129;
  double t2173;
  double t2227;
  double t2248;
  double t2268;
  double t2343;
  double t2365;
  double t2472;
  double t2486;
  double t2494;
  double t2394;
  double t2396;
  double t2624;
  double t2663;
  double t2666;
  double t2085;
  double t2856;
  double t2835;
  double t2963;
  double t3001;
  double t3010;
  double t3028;
  double t3030;
  double t3039;
  double t2471;
  double t2890;
  double t3054;
  double t3058;
  double t3123;
  double t3131;
  double t3140;
  double t3075;
  double t3085;
  double t2615;
  double t3248;
  double t3255;
  double t3294;
  double t3505;
  double t3508;
  double t3533;
  double t3537;
  double t3545;
  double t3554;
  double t3698;
  double t3703;
  double t3705;
  double t3707;
  double t3715;
  double t3719;
  double t3876;
  double t3885;
  double t3893;
  double t3896;
  double t3900;
  double t3903;
  double t3450;
  double t4017;
  double t4034;
  double t4036;
  double t4037;
  double t4040;
  double t4057;
  double t3662;
  double t4151;
  double t4156;
  double t4165;
  double t4166;
  double t4183;
  double t4192;
  double t3840;
  double t4287;
  double t4292;
  double t4296;
  double t4301;
  double t4313;
  double t4323;
  double t4011;
  double t4443;
  double t4444;
  double t4447;
  double t4464;
  double t4466;
  double t4475;
  double t4142;
  double t4625;
  double t4636;
  double t4657;
  double t4663;
  double t4664;
  double t4665;
  double t4246;
  double t4748;
  double t4757;
  double t4789;
  double t4794;
  double t4795;
  double t4813;
  double t4424;
  double t3495;
  double t4915;
  double t4919;
  double t4920;
  double t4923;
  double t4924;
  double t4926;
  double t4533;
  double t3674;
  double t5020;
  double t5029;
  double t5032;
  double t5033;
  double t5043;
  double t5046;
  double t3838;
  double t4699;
  double t5134;
  double t5140;
  double t5141;
  double t5144;
  double t5149;
  double t5151;
  double t5231;
  double t5232;
  double t5234;
  double t5262;
  double t5269;
  double t5274;
  double t5277;
  double t5288;
  double t5292;
  double t5351;
  double t5360;
  double t5364;
  double t5401;
  double t5410;
  double t5412;
  double t5422;
  double t5425;
  double t5427;
  double t5229;
  double t5552;
  double t5553;
  double t5554;
  double t5565;
  double t5568;
  double t5584;
  double t5373;
  double t5710;
  double t5717;
  double t5733;
  double t5755;
  double t5761;
  double t5773;
  double t5522;
  double t5925;
  double t5926;
  double t5938;
  double t5951;
  double t5953;
  double t5955;
  double t5688;
  double t6065;
  double t6068;
  double t6074;
  double t6082;
  double t6084;
  double t6091;
  double t5223;
  double t5884;
  double t6148;
  double t6152;
  double t6155;
  double t6157;
  double t6159;
  double t6160;
  double t5331;
  double t6030;
  double t6228;
  double t6230;
  double t6232;
  double t6233;
  double t6236;
  double t6239;
  double t6289;
  double t6291;
  double t6292;
  double t6324;
  double t6326;
  double t6333;
  double t6342;
  double t6344;
  double t6353;
  double t2712;
  double t6408;
  double t6409;
  double t6448;
  double t6451;
  double t6453;
  double t6457;
  double t6467;
  double t6481;
  double t6358;
  double t6515;
  double t6517;
  double t6519;
  double t6523;
  double t6524;
  double t6555;
  double t6557;
  double t6411;
  double t6611;
  double t6617;
  double t6622;
  double t6623;
  double t6628;
  double t6630;
  double t6631;
  double t6819;
  double t6822;
  double t6827;
  double t6849;
  double t6858;
  double t6861;
  double t1978;
  double t6960;
  double t6961;
  double t6998;
  double t6997;
  double t6999;
  double t7000;
  double t6864;
  double t7041;
  double t7042;
  double t7037;
  double t7043;
  double t7044;
  double t6964;
  double t7083;
  double t7084;
  double t7089;
  double t7090;
  double t7101;
  double t7225;
  double t7238;
  double t7239;
  double t7289;
  double t7291;
  double t7292;
  double t3329;
  double t7333;
  double t7334;
  double t7358;
  double t7357;
  double t7361;
  double t7363;
  double t7305;
  double t7412;
  double t7415;
  double t7406;
  double t7429;
  double t7431;
  double t7340;
  double t7475;
  double t7476;
  double t7477;
  double t7478;
  double t7479;
  double t7601;
  double t7602;
  double t7604;
  double t7628;
  double t7630;
  double t7631;
  double t1270;
  double t7659;
  double t7665;
  double t7716;
  double t7713;
  double t7718;
  double t7726;
  double t7638;
  double t7764;
  double t7772;
  double t7763;
  double t7776;
  double t7792;
  double t7672;
  double t7823;
  double t7834;
  double t7836;
  double t7839;
  double t7843;
  t74 = Cos(var1[5]);
  t148 = Sin(var1[3]);
  t96 = Sin(var1[4]);
  t30 = Cos(var1[3]);
  t159 = Sin(var1[5]);
  t130 = t30*t74*t96;
  t177 = t148*t159;
  t217 = t130 + t177;
  t332 = Cos(var1[15]);
  t275 = -1.*t74*t148*t96;
  t316 = t30*t159;
  t323 = t275 + t316;
  t251 = Sin(var1[15]);
  t385 = Cos(var1[16]);
  t388 = t332*t323;
  t406 = -1.*t251;
  t411 = 0. + t406;
  t458 = t411*t217;
  t480 = t388 + t458;
  t706 = -1.*t74*t148;
  t755 = t30*t96*t159;
  t766 = t706 + t755;
  t337 = 0. + t332;
  t816 = -1.*t30*t74;
  t828 = -1.*t148*t96*t159;
  t867 = t816 + t828;
  t499 = Cos(var1[17]);
  t555 = 0. + t499;
  t811 = t411*t766;
  t888 = t332*t867;
  t926 = t811 + t888;
  t628 = Sin(var1[16]);
  t637 = Sin(var1[17]);
  t1131 = Cos(var1[4]);
  t1182 = t30*t1131*t411;
  t1196 = -1.*t332*t1131*t148;
  t1205 = t1182 + t1196;
  t240 = 0.0875*t217;
  t1467 = Cos(var1[9]);
  t1415 = Sin(var1[9]);
  t1529 = Cos(var1[10]);
  t1545 = t1467*t323;
  t1552 = -1.*t1415;
  t1562 = 0. + t1552;
  t1580 = t1562*t217;
  t1595 = t1545 + t1580;
  t769 = 0.0875*t766;
  t1498 = 0. + t1467;
  t1614 = Cos(var1[11]);
  t1618 = 0. + t1614;
  t1778 = t1562*t766;
  t1780 = t1467*t867;
  t1785 = t1778 + t1780;
  t1632 = Sin(var1[10]);
  t1654 = Sin(var1[11]);
  t1174 = 0.0875*t30*t1131;
  t1873 = t30*t1131*t1562;
  t1887 = -1.*t1467*t1131*t148;
  t1899 = t1873 + t1887;
  t2106 = Cos(var1[6]);
  t2111 = Sin(var1[6]);
  t2089 = Cos(var1[7]);
  t2109 = t2106*t323;
  t2129 = -1.*t2111;
  t2173 = 0. + t2129;
  t2227 = t217*t2173;
  t2248 = t2109 + t2227;
  t2268 = 0. + t2106;
  t2343 = Cos(var1[8]);
  t2365 = 0. + t2343;
  t2472 = t2106*t867;
  t2486 = t766*t2173;
  t2494 = t2472 + t2486;
  t2394 = Sin(var1[7]);
  t2396 = Sin(var1[8]);
  t2624 = -1.*t1131*t2106*t148;
  t2663 = t30*t1131*t2173;
  t2666 = t2624 + t2663;
  t2085 = -0.0875*t217;
  t2856 = Cos(var1[12]);
  t2835 = Sin(var1[12]);
  t2963 = Cos(var1[13]);
  t3001 = t2856*t323;
  t3010 = -1.*t2835;
  t3028 = 0. + t3010;
  t3030 = t3028*t217;
  t3039 = t3001 + t3030;
  t2471 = -0.0875*t766;
  t2890 = 0. + t2856;
  t3054 = Cos(var1[14]);
  t3058 = 0. + t3054;
  t3123 = t3028*t766;
  t3131 = t2856*t867;
  t3140 = t3123 + t3131;
  t3075 = Sin(var1[13]);
  t3085 = Sin(var1[14]);
  t2615 = -0.0875*t30*t1131;
  t3248 = t30*t1131*t3028;
  t3255 = -1.*t2856*t1131*t148;
  t3294 = t3248 + t3255;
  t3505 = t332*t30*t1131*t74;
  t3508 = t1131*t74*t411*t148;
  t3533 = t3505 + t3508;
  t3537 = t385*t3533;
  t3545 = -1.*t74*t628*t96;
  t3554 = t3537 + t3545;
  t3698 = -1.*t628*t96*t159;
  t3703 = t332*t30*t1131*t159;
  t3705 = t1131*t411*t148*t159;
  t3707 = t3703 + t3705;
  t3715 = t385*t3707;
  t3719 = t3698 + t3715;
  t3876 = -1.*t1131*t628;
  t3885 = -1.*t332*t30*t96;
  t3893 = -1.*t411*t148*t96;
  t3896 = t3885 + t3893;
  t3900 = t385*t3896;
  t3903 = t3876 + t3900;
  t3450 = 0.0875*t1131*t74*t148;
  t4017 = t1467*t30*t1131*t74;
  t4034 = t1131*t74*t1562*t148;
  t4036 = t4017 + t4034;
  t4037 = t1529*t4036;
  t4040 = -1.*t74*t1632*t96;
  t4057 = t4037 + t4040;
  t3662 = 0.0875*t1131*t148*t159;
  t4151 = -1.*t1632*t96*t159;
  t4156 = t1467*t30*t1131*t159;
  t4165 = t1131*t1562*t148*t159;
  t4166 = t4156 + t4165;
  t4183 = t1529*t4166;
  t4192 = t4151 + t4183;
  t3840 = -0.0875*t148*t96;
  t4287 = -1.*t1131*t1632;
  t4292 = -1.*t1467*t30*t96;
  t4296 = -1.*t1562*t148*t96;
  t4301 = t4292 + t4296;
  t4313 = t1529*t4301;
  t4323 = t4287 + t4313;
  t4011 = -0.21935*t74*t96;
  t4443 = t30*t1131*t74*t2106;
  t4444 = t1131*t74*t148*t2173;
  t4447 = t4443 + t4444;
  t4464 = t2089*t4447;
  t4466 = -1.*t74*t96*t2394;
  t4475 = t4464 + t4466;
  t4142 = -0.21935*t96*t159;
  t4625 = t30*t1131*t2106*t159;
  t4636 = t1131*t148*t159*t2173;
  t4657 = t4625 + t4636;
  t4663 = t2089*t4657;
  t4664 = -1.*t96*t159*t2394;
  t4665 = t4663 + t4664;
  t4246 = -0.21935*t1131;
  t4748 = -1.*t30*t2106*t96;
  t4757 = -1.*t148*t96*t2173;
  t4789 = t4748 + t4757;
  t4794 = t2089*t4789;
  t4795 = -1.*t1131*t2394;
  t4813 = t4794 + t4795;
  t4424 = -0.0875*t1131*t74*t148;
  t3495 = 0.21935*t74*t96;
  t4915 = t2856*t30*t1131*t74;
  t4919 = t1131*t74*t3028*t148;
  t4920 = t4915 + t4919;
  t4923 = t2963*t4920;
  t4924 = -1.*t74*t3075*t96;
  t4926 = t4923 + t4924;
  t4533 = -0.0875*t1131*t148*t159;
  t3674 = 0.21935*t96*t159;
  t5020 = -1.*t3075*t96*t159;
  t5029 = t2856*t30*t1131*t159;
  t5032 = t1131*t3028*t148*t159;
  t5033 = t5029 + t5032;
  t5043 = t2963*t5033;
  t5046 = t5020 + t5043;
  t3838 = 0.21935*t1131;
  t4699 = 0.0875*t148*t96;
  t5134 = -1.*t1131*t3075;
  t5140 = -1.*t2856*t30*t96;
  t5141 = -1.*t3028*t148*t96;
  t5144 = t5140 + t5141;
  t5149 = t2963*t5144;
  t5151 = t5134 + t5149;
  t5231 = t74*t148;
  t5232 = -1.*t30*t96*t159;
  t5234 = t5231 + t5232;
  t5262 = -1.*t1131*t628*t159;
  t5269 = t332*t5234;
  t5274 = t411*t867;
  t5277 = t5269 + t5274;
  t5288 = t385*t5277;
  t5292 = t5262 + t5288;
  t5351 = t74*t148*t96;
  t5360 = -1.*t30*t159;
  t5364 = t5351 + t5360;
  t5401 = t1131*t74*t628;
  t5410 = t411*t5364;
  t5412 = t332*t217;
  t5422 = t5410 + t5412;
  t5425 = t385*t5422;
  t5427 = t5401 + t5425;
  t5229 = 0.0875*t867;
  t5552 = -1.*t1131*t1632*t159;
  t5553 = t1467*t5234;
  t5554 = t1562*t867;
  t5565 = t5553 + t5554;
  t5568 = t1529*t5565;
  t5584 = t5552 + t5568;
  t5373 = 0.0875*t5364;
  t5710 = t1131*t74*t1632;
  t5717 = t1562*t5364;
  t5733 = t1467*t217;
  t5755 = t5717 + t5733;
  t5761 = t1529*t5755;
  t5773 = t5710 + t5761;
  t5522 = -0.21935*t1131*t159;
  t5925 = t2106*t5234;
  t5926 = t867*t2173;
  t5938 = t5925 + t5926;
  t5951 = t2089*t5938;
  t5953 = -1.*t1131*t159*t2394;
  t5955 = t5951 + t5953;
  t5688 = 0.21935*t1131*t74;
  t6065 = t2106*t217;
  t6068 = t5364*t2173;
  t6074 = t6065 + t6068;
  t6082 = t2089*t6074;
  t6084 = t1131*t74*t2394;
  t6091 = t6082 + t6084;
  t5223 = 0.21935*t1131*t159;
  t5884 = -0.0875*t867;
  t6148 = -1.*t1131*t3075*t159;
  t6152 = t2856*t5234;
  t6155 = t3028*t867;
  t6157 = t6152 + t6155;
  t6159 = t2963*t6157;
  t6160 = t6148 + t6159;
  t5331 = -0.21935*t1131*t74;
  t6030 = -0.0875*t5364;
  t6228 = t1131*t74*t3075;
  t6230 = t3028*t5364;
  t6232 = t2856*t217;
  t6233 = t6230 + t6232;
  t6236 = t2963*t6233;
  t6239 = t6228 + t6236;
  t6289 = -1.*t2106*t5364;
  t6291 = -1.*t217*t2111;
  t6292 = t6289 + t6291;
  t6324 = t30*t74;
  t6326 = t148*t96*t159;
  t6333 = t6324 + t6326;
  t6342 = -1.*t2106*t6333;
  t6344 = -1.*t766*t2111;
  t6353 = t6342 + t6344;
  t2712 = -1.*t1131*t148*t2111;
  t6408 = -1.*t30*t1131*t2111;
  t6409 = t2624 + t6408;
  t6448 = t1131*t74;
  t6451 = 0. + t6448;
  t6453 = t6451*t2089;
  t6457 = 0. + t6065 + t6068;
  t6467 = -1.*t6457*t2394;
  t6481 = t6453 + t6467;
  t6358 = t2106*t766;
  t6515 = t1131*t159;
  t6517 = 0. + t6515;
  t6519 = t2089*t6517;
  t6523 = t6333*t2173;
  t6524 = 0. + t6358 + t6523;
  t6555 = -1.*t6524*t2394;
  t6557 = t6519 + t6555;
  t6411 = t30*t1131*t2106;
  t6611 = -1.*t96;
  t6617 = 0. + t6611;
  t6622 = t2089*t6617;
  t6623 = t1131*t148*t2173;
  t6628 = 0. + t6411 + t6623;
  t6630 = -1.*t6628*t2394;
  t6631 = t6622 + t6630;
  t6819 = -1.*t1467*t5364;
  t6822 = -1.*t1415*t217;
  t6827 = t6819 + t6822;
  t6849 = -1.*t1415*t766;
  t6858 = -1.*t1467*t6333;
  t6861 = t6849 + t6858;
  t1978 = -1.*t1131*t1415*t148;
  t6960 = -1.*t30*t1131*t1415;
  t6961 = t6960 + t1887;
  t6998 = 0. + t5717 + t5733;
  t6997 = t1529*t6451;
  t6999 = -1.*t1632*t6998;
  t7000 = t6997 + t6999;
  t6864 = t1467*t766;
  t7041 = t1562*t6333;
  t7042 = 0. + t6864 + t7041;
  t7037 = t1529*t6517;
  t7043 = -1.*t1632*t7042;
  t7044 = t7037 + t7043;
  t6964 = t1467*t30*t1131;
  t7083 = t1131*t1562*t148;
  t7084 = 0. + t6964 + t7083;
  t7089 = -1.*t1632*t7084;
  t7090 = t1529*t6617;
  t7101 = t7089 + t7090;
  t7225 = -1.*t2856*t5364;
  t7238 = -1.*t2835*t217;
  t7239 = t7225 + t7238;
  t7289 = -1.*t2835*t766;
  t7291 = -1.*t2856*t6333;
  t7292 = t7289 + t7291;
  t3329 = -1.*t1131*t2835*t148;
  t7333 = -1.*t30*t1131*t2835;
  t7334 = t7333 + t3255;
  t7358 = 0. + t6230 + t6232;
  t7357 = t2963*t6451;
  t7361 = -1.*t3075*t7358;
  t7363 = t7357 + t7361;
  t7305 = t2856*t766;
  t7412 = t3028*t6333;
  t7415 = 0. + t7305 + t7412;
  t7406 = t2963*t6517;
  t7429 = -1.*t3075*t7415;
  t7431 = t7406 + t7429;
  t7340 = t2856*t30*t1131;
  t7475 = t1131*t3028*t148;
  t7476 = 0. + t7340 + t7475;
  t7477 = -1.*t3075*t7476;
  t7478 = t2963*t6617;
  t7479 = t7477 + t7478;
  t7601 = -1.*t332*t5364;
  t7602 = -1.*t251*t217;
  t7604 = t7601 + t7602;
  t7628 = -1.*t251*t766;
  t7630 = -1.*t332*t6333;
  t7631 = t7628 + t7630;
  t1270 = -1.*t1131*t251*t148;
  t7659 = -1.*t30*t1131*t251;
  t7665 = t7659 + t1196;
  t7716 = 0. + t5410 + t5412;
  t7713 = t385*t6451;
  t7718 = -1.*t628*t7716;
  t7726 = t7713 + t7718;
  t7638 = t332*t766;
  t7764 = t411*t6333;
  t7772 = 0. + t7638 + t7764;
  t7763 = t385*t6517;
  t7776 = -1.*t628*t7772;
  t7792 = t7763 + t7776;
  t7672 = t332*t30*t1131;
  t7823 = t1131*t411*t148;
  t7834 = 0. + t7672 + t7823;
  t7836 = -1.*t628*t7834;
  t7839 = t385*t6617;
  t7843 = t7836 + t7839;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=1.;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=1.;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=1.;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=1.;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=1.;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=1.;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=1.;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=1.;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=1.;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=1.;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=1.;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=1.;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=1.;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=1.;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=t240 + 0.037*(t251*t323 + t217*t337) - 0.25*t385*t480 - 0.27*(t385*t480*t555 - 1.*t480*t628*t637);
  p_output1[61]=t769 + 0.037*(t337*t766 + t251*t867) - 0.25*t385*t926 - 0.27*(t385*t555*t926 - 1.*t628*t637*t926);
  p_output1[62]=t1174 + 0.037*(t1270 + t1131*t30*t337) - 0.25*t1205*t385 - 0.27*(t1205*t385*t555 - 1.*t1205*t628*t637);
  p_output1[63]=-0.25*t1529*t1595 - 0.27*(t1529*t1595*t1618 - 1.*t1595*t1632*t1654) + t240 + 0.037*(t1498*t217 + t1415*t323);
  p_output1[64]=-0.25*t1529*t1785 - 0.27*(t1529*t1618*t1785 - 1.*t1632*t1654*t1785) + t769 + 0.037*(t1498*t766 + t1415*t867);
  p_output1[65]=t1174 - 0.25*t1529*t1899 - 0.27*(t1529*t1618*t1899 - 1.*t1632*t1654*t1899) + 0.037*(t1978 + t1131*t1498*t30);
  p_output1[66]=t2085 - 0.25*t2089*t2248 - 0.27*(t2089*t2248*t2365 - 1.*t2248*t2394*t2396) - 0.037*(t217*t2268 + t2111*t323);
  p_output1[67]=t2471 - 0.25*t2089*t2494 - 0.27*(t2089*t2365*t2494 - 1.*t2394*t2396*t2494) - 0.037*(t2268*t766 + t2111*t867);
  p_output1[68]=t2615 - 0.25*t2089*t2666 - 0.27*(t2089*t2365*t2666 - 1.*t2394*t2396*t2666) - 0.037*(t2712 + t1131*t2268*t30);
  p_output1[69]=t2085 - 0.25*t2963*t3039 - 0.27*(t2963*t3039*t3058 - 1.*t3039*t3075*t3085) - 0.037*(t217*t2890 + t2835*t323);
  p_output1[70]=t2471 - 0.25*t2963*t3140 - 0.27*(t2963*t3058*t3140 - 1.*t3075*t3085*t3140) - 0.037*(t2890*t766 + t2835*t867);
  p_output1[71]=t2615 - 0.25*t2963*t3294 - 0.27*(t2963*t3058*t3294 - 1.*t3075*t3085*t3294) - 0.037*(t1131*t2890*t30 + t3329);
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=1.;
  p_output1[77]=0;
  p_output1[78]=t3450 + t3495 - 0.25*t3554 + 0.037*(t1131*t251*t30*t74 + t1131*t148*t337*t74) - 0.27*(t3554*t555 + t637*(-1.*t3533*t628 - 1.*t385*t74*t96));
  p_output1[79]=0.037*(t1131*t159*t251*t30 + t1131*t148*t159*t337) + t3662 + t3674 - 0.25*t3719 - 0.27*(t3719*t555 + t637*(-1.*t3707*t628 - 1.*t159*t385*t96));
  p_output1[80]=t3838 + t3840 - 0.25*t3903 - 0.27*(t3903*t555 + (-1.*t1131*t385 - 1.*t3896*t628)*t637) + 0.037*(-1.*t251*t30*t96 - 1.*t148*t337*t96);
  p_output1[81]=t3450 + t4011 - 0.25*t4057 + 0.037*(t1131*t148*t1498*t74 + t1131*t1415*t30*t74) - 0.27*(t1618*t4057 + t1654*(-1.*t1632*t4036 - 1.*t1529*t74*t96));
  p_output1[82]=0.037*(t1131*t148*t1498*t159 + t1131*t1415*t159*t30) + t3662 + t4142 - 0.25*t4192 - 0.27*(t1618*t4192 + t1654*(-1.*t1632*t4166 - 1.*t1529*t159*t96));
  p_output1[83]=t3840 + t4246 - 0.25*t4323 - 0.27*(t1654*(-1.*t1131*t1529 - 1.*t1632*t4301) + t1618*t4323) + 0.037*(-1.*t148*t1498*t96 - 1.*t1415*t30*t96);
  p_output1[84]=t4011 + t4424 - 0.25*t4475 - 0.037*(t1131*t148*t2268*t74 + t1131*t2111*t30*t74) - 0.27*(t2365*t4475 + t2396*(-1.*t2394*t4447 - 1.*t2089*t74*t96));
  p_output1[85]=-0.037*(t1131*t148*t159*t2268 + t1131*t159*t2111*t30) + t4142 + t4533 - 0.25*t4665 - 0.27*(t2365*t4665 + t2396*(-1.*t2394*t4657 - 1.*t159*t2089*t96));
  p_output1[86]=t4246 + t4699 - 0.25*t4813 - 0.27*(t2396*(-1.*t1131*t2089 - 1.*t2394*t4789) + t2365*t4813) - 0.037*(-1.*t148*t2268*t96 - 1.*t2111*t30*t96);
  p_output1[87]=t3495 + t4424 - 0.25*t4926 - 0.037*(t1131*t148*t2890*t74 + t1131*t2835*t30*t74) - 0.27*(t3058*t4926 + t3085*(-1.*t3075*t4920 - 1.*t2963*t74*t96));
  p_output1[88]=-0.037*(t1131*t148*t159*t2890 + t1131*t159*t2835*t30) + t3674 + t4533 - 0.25*t5046 - 0.27*(t3058*t5046 + t3085*(-1.*t3075*t5033 - 1.*t159*t2963*t96));
  p_output1[89]=t3838 + t4699 - 0.25*t5151 - 0.27*(t3085*(-1.*t1131*t2963 - 1.*t3075*t5144) + t3058*t5151) - 0.037*(-1.*t148*t2890*t96 - 1.*t2835*t30*t96);
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=1.;
  p_output1[96]=t5223 + t5229 - 0.25*t5292 - 0.27*(t5292*t555 + (-1.*t1131*t159*t385 - 1.*t5277*t628)*t637) + 0.037*(t251*t5234 + t337*t867);
  p_output1[97]=t5331 + 0.037*(t217*t251 + t337*t5364) + t5373 - 0.25*t5427 - 0.27*(t5427*t555 + t637*(-1.*t5422*t628 + t1131*t385*t74));
  p_output1[98]=0;
  p_output1[99]=t5229 + t5522 - 0.25*t5584 - 0.27*(t1654*(-1.*t1131*t1529*t159 - 1.*t1632*t5565) + t1618*t5584) + 0.037*(t1415*t5234 + t1498*t867);
  p_output1[100]=0.037*(t1415*t217 + t1498*t5364) + t5373 + t5688 - 0.25*t5773 - 0.27*(t1618*t5773 + t1654*(-1.*t1632*t5755 + t1131*t1529*t74));
  p_output1[101]=0;
  p_output1[102]=t5522 + t5884 - 0.25*t5955 - 0.27*(t2396*(-1.*t1131*t159*t2089 - 1.*t2394*t5938) + t2365*t5955) - 0.037*(t2111*t5234 + t2268*t867);
  p_output1[103]=-0.037*(t2111*t217 + t2268*t5364) + t5688 + t6030 - 0.25*t6091 - 0.27*(t2365*t6091 + t2396*(-1.*t2394*t6074 + t1131*t2089*t74));
  p_output1[104]=0;
  p_output1[105]=t5223 + t5884 - 0.25*t6160 - 0.27*(t3085*(-1.*t1131*t159*t2963 - 1.*t3075*t6157) + t3058*t6160) - 0.037*(t2835*t5234 + t2890*t867);
  p_output1[106]=t5331 - 0.037*(t217*t2835 + t2890*t5364) + t6030 - 0.25*t6239 - 0.27*(t3058*t6239 + t3085*(-1.*t3075*t6233 + t1131*t2963*t74));
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=-0.037*(-1.*t2111*t5364 + t6065) - 0.25*t2089*t6292 - 0.27*(t2089*t2365*t6292 - 1.*t2394*t2396*t6292);
  p_output1[121]=-0.25*t2089*t6353 - 0.27*(t2089*t2365*t6353 - 1.*t2394*t2396*t6353) - 0.037*(-1.*t2111*t6333 + t6358);
  p_output1[122]=-0.25*t2089*t6409 - 0.27*(t2089*t2365*t6409 - 1.*t2394*t2396*t6409) - 0.037*(t2712 + t6411);
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=-0.25*t6481 - 0.27*(t2396*(-1.*t2394*t6451 - 1.*t2089*t6457) + t2365*t6481);
  p_output1[139]=-0.25*t6557 - 0.27*(t2396*(-1.*t2394*t6517 - 1.*t2089*t6524) + t2365*t6557);
  p_output1[140]=-0.25*t6631 - 0.27*(t2396*(-1.*t2394*t6617 - 1.*t2089*t6628) + t2365*t6631);
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=-0.27*(-1.*t2396*(0. + t2394*t6451 + t2089*t6457) + t2343*(0. + t6453 + t6467));
  p_output1[157]=-0.27*(-1.*t2396*(0. + t2394*t6517 + t2089*t6524) + t2343*(0. + t6519 + t6555));
  p_output1[158]=-0.27*(-1.*t2396*(0. + t2394*t6617 + t2089*t6628) + t2343*(0. + t6622 + t6630));
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0.037*(-1.*t1415*t5364 + t5733) - 0.25*t1529*t6827 - 0.27*(t1529*t1618*t6827 - 1.*t1632*t1654*t6827);
  p_output1[172]=-0.25*t1529*t6861 - 0.27*(t1529*t1618*t6861 - 1.*t1632*t1654*t6861) + 0.037*(-1.*t1415*t6333 + t6864);
  p_output1[173]=-0.25*t1529*t6961 - 0.27*(t1529*t1618*t6961 - 1.*t1632*t1654*t6961) + 0.037*(t1978 + t6964);
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=0;
  p_output1[187]=0;
  p_output1[188]=0;
  p_output1[189]=-0.25*t7000 - 0.27*(t1654*(-1.*t1632*t6451 - 1.*t1529*t6998) + t1618*t7000);
  p_output1[190]=-0.25*t7044 - 0.27*(t1654*(-1.*t1632*t6517 - 1.*t1529*t7042) + t1618*t7044);
  p_output1[191]=-0.25*t7101 - 0.27*(t1654*(-1.*t1632*t6617 - 1.*t1529*t7084) + t1618*t7101);
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=-0.27*(-1.*t1654*(0. + t1632*t6451 + t1529*t6998) + t1614*(0. + t6997 + t6999));
  p_output1[208]=-0.27*(-1.*t1654*(0. + t1632*t6517 + t1529*t7042) + t1614*(0. + t7037 + t7043));
  p_output1[209]=-0.27*(-1.*t1654*(0. + t1632*t6617 + t1529*t7084) + t1614*(0. + t7089 + t7090));
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=-0.037*(-1.*t2835*t5364 + t6232) - 0.25*t2963*t7239 - 0.27*(t2963*t3058*t7239 - 1.*t3075*t3085*t7239);
  p_output1[232]=-0.25*t2963*t7292 - 0.27*(t2963*t3058*t7292 - 1.*t3075*t3085*t7292) - 0.037*(-1.*t2835*t6333 + t7305);
  p_output1[233]=-0.25*t2963*t7334 - 0.27*(t2963*t3058*t7334 - 1.*t3075*t3085*t7334) - 0.037*(t3329 + t7340);
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=-0.25*t7363 - 0.27*(t3085*(-1.*t3075*t6451 - 1.*t2963*t7358) + t3058*t7363);
  p_output1[250]=-0.25*t7431 - 0.27*(t3085*(-1.*t3075*t6517 - 1.*t2963*t7415) + t3058*t7431);
  p_output1[251]=-0.25*t7479 - 0.27*(t3085*(-1.*t3075*t6617 - 1.*t2963*t7476) + t3058*t7479);
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=-0.27*(-1.*t3085*(0. + t3075*t6451 + t2963*t7358) + t3054*(0. + t7357 + t7361));
  p_output1[268]=-0.27*(-1.*t3085*(0. + t3075*t6517 + t2963*t7415) + t3054*(0. + t7406 + t7429));
  p_output1[269]=-0.27*(-1.*t3085*(0. + t3075*t6617 + t2963*t7476) + t3054*(0. + t7477 + t7478));
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0.037*(-1.*t251*t5364 + t5412) - 0.25*t385*t7604 - 0.27*(t385*t555*t7604 - 1.*t628*t637*t7604);
  p_output1[277]=-0.25*t385*t7631 - 0.27*(t385*t555*t7631 - 1.*t628*t637*t7631) + 0.037*(-1.*t251*t6333 + t7638);
  p_output1[278]=-0.25*t385*t7665 - 0.27*(t385*t555*t7665 - 1.*t628*t637*t7665) + 0.037*(t1270 + t7672);
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=-0.25*t7726 - 0.27*(t637*(-1.*t628*t6451 - 1.*t385*t7716) + t555*t7726);
  p_output1[295]=-0.25*t7792 - 0.27*(t637*(-1.*t628*t6517 - 1.*t385*t7772) + t555*t7792);
  p_output1[296]=-0.25*t7843 - 0.27*(t637*(-1.*t628*t6617 - 1.*t385*t7834) + t555*t7843);
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=-0.27*(-1.*t637*(0. + t628*t6451 + t385*t7716) + t499*(0. + t7713 + t7718));
  p_output1[313]=-0.27*(-1.*t637*(0. + t628*t6517 + t385*t7772) + t499*(0. + t7763 + t7776));
  p_output1[314]=-0.27*(-1.*t637*(0. + t628*t6617 + t385*t7834) + t499*(0. + t7836 + t7839));
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_hc_opt4_func.hh"

namespace SymFunction
{

void j_hc_opt4_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
