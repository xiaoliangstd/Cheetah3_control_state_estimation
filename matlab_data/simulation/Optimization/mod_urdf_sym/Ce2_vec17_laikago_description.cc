/*
 * Automatically Generated from Mathematica.
 * Tue 10 Dec 2019 16:02:15 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t532;
  double t196;
  double t298;
  double t610;
  double t322;
  double t624;
  double t625;
  double t105;
  double t640;
  double t753;
  double t764;
  double t1314;
  double t1527;
  double t1584;
  double t1593;
  double t1339;
  double t686;
  double t773;
  double t795;
  double t1022;
  double t1083;
  double t1358;
  double t1367;
  double t1377;
  double t1414;
  double t3221;
  double t3227;
  double t3240;
  double t3245;
  double t3429;
  double t2903;
  double t2930;
  double t2984;
  double t2990;
  double t3145;
  double t3146;
  double t1601;
  double t1622;
  double t1680;
  double t1777;
  double t1779;
  double t1781;
  double t7419;
  double t7668;
  double t7735;
  double t7770;
  double t7802;
  double t7852;
  double t8711;
  double t8751;
  double t8779;
  double t8858;
  double t8124;
  double t8186;
  double t8274;
  double t9886;
  double t9901;
  double t10136;
  double t10137;
  double t9812;
  double t9846;
  double t9873;
  double t9797;
  double t9804;
  double t9810;
  double t10324;
  double t10327;
  double t10349;
  double t10350;
  double t9573;
  double t9602;
  double t9705;
  double t1811;
  double t1815;
  double t1828;
  double t1932;
  double t2109;
  double t2216;
  double t8892;
  double t18045;
  double t18080;
  double t18081;
  double t18174;
  double t18193;
  double t18207;
  double t18261;
  double t18280;
  double t18286;
  double t8080;
  double t8924;
  double t18301;
  double t18315;
  double t18337;
  double t18365;
  double t9876;
  double t18467;
  double t18471;
  double t18473;
  double t18477;
  double t18480;
  double t18481;
  double t10310;
  double t10410;
  double t10579;
  double t10691;
  double t10846;
  double t18624;
  double t18628;
  double t8822;
  double t18629;
  double t14198;
  double t14202;
  double t14206;
  double t14211;
  double t14212;
  double t14703;
  double t18643;
  double t18644;
  double t18647;
  double t18376;
  double t18431;
  double t2507;
  double t2664;
  double t2780;
  double t2844;
  double t2872;
  double t2880;
  double t18610;
  double t18613;
  double t18617;
  double t18167;
  double t18288;
  double t18489;
  double t18492;
  double t18517;
  double t18528;
  double t18767;
  double t18771;
  double t18786;
  double t10184;
  double t17269;
  double t17479;
  double t17572;
  double t17576;
  double t17579;
  double t17581;
  double t18861;
  double t18869;
  double t18880;
  double t19092;
  double t19105;
  double t19181;
  double t19182;
  double t19183;
  double t19185;
  double t19187;
  double t19191;
  double t19192;
  double t19194;
  double t19208;
  double t19214;
  double t19218;
  double t19221;
  double t19222;
  double t19224;
  double t19225;
  double t19226;
  double t19227;
  double t19262;
  double t19094;
  double t19098;
  double t19099;
  double t19110;
  double t19113;
  double t19114;
  double t19129;
  double t19133;
  double t19144;
  double t19161;
  double t19162;
  double t19165;
  double t19416;
  double t19418;
  double t19419;
  double t19422;
  double t19423;
  double t19426;
  double t19269;
  double t19272;
  double t19273;
  double t19279;
  double t19284;
  double t19285;
  double t19304;
  double t19305;
  double t19307;
  double t19323;
  double t19324;
  double t19325;
  double t19457;
  double t19463;
  double t19465;
  double t19469;
  double t19476;
  double t19479;
  double t19468;
  double t19480;
  double t19483;
  double t18700;
  double t19834;
  double t19851;
  double t19879;
  double t19769;
  double t19787;
  double t19811;
  double t19537;
  double t19541;
  double t19556;
  double t18650;
  double t18356;
  double t19577;
  double t19582;
  double t19904;
  double t20052;
  double t18450;
  double t25048;
  double t25049;
  double t25050;
  double t25052;
  double t25053;
  double t25060;
  double t19013;
  double t25111;
  double t25112;
  double t25113;
  double t18885;
  double t25131;
  double t25132;
  double t25133;
  double t25144;
  double t25145;
  double t25146;
  double t25051;
  double t25069;
  double t25074;
  double t18927;
  double t18957;
  double t25169;
  double t25195;
  double t18474;
  double t18493;
  double t25081;
  double t25085;
  double t18578;
  double t18581;
  double t19495;
  double t25262;
  double t25263;
  double t25264;
  double t25275;
  double t25276;
  double t25277;
  double t25272;
  double t25273;
  double t25274;
  double t25271;
  double t25278;
  double t25279;
  double t19826;
  double t20048;
  double t25318;
  double t25319;
  double t25320;
  double t25322;
  double t25323;
  double t25324;
  double t25287;
  double t25288;
  double t25289;
  double t20436;
  double t21846;
  double t22077;
  double t24670;
  double t24966;
  double t25291;
  double t25296;
  double t25330;
  double t25331;
  double t25018;
  double t25019;
  double t25370;
  double t25371;
  double t25372;
  double t25374;
  double t25375;
  double t25376;
  double t25115;
  double t25386;
  double t25387;
  double t25388;
  double t25134;
  double t25185;
  double t25397;
  double t25398;
  double t25399;
  double t25401;
  double t25402;
  double t25403;
  double t25373;
  double t25377;
  double t25378;
  double t25208;
  double t25213;
  double t25215;
  double t25407;
  double t25408;
  double t25223;
  double t25227;
  double t25380;
  double t25381;
  double t25243;
  double t25252;
  double t19442;
  double t19446;
  double t19447;
  double t19400;
  double t19404;
  double t19405;
  double t2899;
  double t3188;
  double t3596;
  double t3755;
  double t3976;
  double t4014;
  double t4055;
  double t4767;
  double t8367;
  double t8428;
  double t8548;
  double t8865;
  double t8877;
  double t8985;
  double t9275;
  double t9312;
  double t9324;
  double t9520;
  double t9569;
  double t10234;
  double t10235;
  double t10247;
  double t10352;
  double t10434;
  double t10459;
  double t10578;
  double t10580;
  double t10645;
  double t10689;
  double t10852;
  double t10910;
  double t10914;
  double t12100;
  double t25460;
  double t25461;
  double t25462;
  double t19409;
  double t19411;
  double t19414;
  double t16505;
  double t17041;
  double t17042;
  double t19431;
  double t19434;
  double t19436;
  double t17800;
  double t17888;
  double t17936;
  double t18292;
  double t18297;
  double t18323;
  double t18327;
  double t18375;
  double t18442;
  double t18444;
  double t18447;
  double t18452;
  double t18453;
  double t18455;
  double t18459;
  double t18482;
  double t18485;
  double t18486;
  double t18495;
  double t18499;
  double t18505;
  double t18554;
  double t18576;
  double t18579;
  double t18584;
  double t18585;
  double t18589;
  double t18591;
  double t18622;
  double t18633;
  double t18634;
  double t18636;
  double t18649;
  double t18654;
  double t18664;
  double t18665;
  double t18671;
  double t18682;
  double t18684;
  double t18685;
  double t18686;
  double t18695;
  double t18707;
  double t18708;
  double t18730;
  double t18746;
  double t18749;
  double t18788;
  double t18801;
  double t18804;
  double t18849;
  double t18881;
  double t18884;
  double t18889;
  double t18892;
  double t18903;
  double t18906;
  double t18921;
  double t18934;
  double t18949;
  double t18976;
  double t18977;
  double t18981;
  double t18989;
  double t19009;
  double t19012;
  double t19014;
  double t19016;
  double t19020;
  double t19027;
  double t19406;
  double t19415;
  double t19420;
  double t19421;
  double t19427;
  double t19430;
  double t19438;
  double t19448;
  double t19452;
  double t19102;
  double t19120;
  double t19121;
  double t19145;
  double t19170;
  double t19171;
  double t19278;
  double t19293;
  double t19294;
  double t19322;
  double t19331;
  double t19384;
  double t19485;
  double t19488;
  double t19499;
  double t19512;
  double t19513;
  double t19572;
  double t19592;
  double t19593;
  double t19607;
  double t19752;
  double t19768;
  double t19885;
  double t19887;
  double t19891;
  double t20047;
  double t20057;
  double t20063;
  double t20064;
  double t20073;
  double t20078;
  double t20437;
  double t20868;
  double t21027;
  double t21523;
  double t23026;
  double t23366;
  double t23433;
  double t24667;
  double t24669;
  double t24754;
  double t24769;
  double t24965;
  double t24993;
  double t24994;
  double t25003;
  double t25004;
  double t25011;
  double t25020;
  double t25024;
  double t25030;
  double t25040;
  double t25080;
  double t25090;
  double t25094;
  double t25097;
  double t25130;
  double t25147;
  double t25151;
  double t25155;
  double t25168;
  double t25196;
  double t25197;
  double t25204;
  double t25205;
  double t25114;
  double t25125;
  double t25126;
  double t25127;
  double t25128;
  double t25207;
  double t25209;
  double t25210;
  double t25211;
  double t25212;
  double t25214;
  double t25216;
  double t25217;
  double t25218;
  double t25219;
  double t25221;
  double t25222;
  double t25224;
  double t25225;
  double t25226;
  double t25232;
  double t25238;
  double t25239;
  double t25248;
  double t25255;
  double t25256;
  double t25257;
  double t25258;
  double t25280;
  double t25281;
  double t25282;
  double t25283;
  double t25284;
  double t25285;
  double t25290;
  double t25302;
  double t25303;
  double t25307;
  double t25314;
  double t25321;
  double t25325;
  double t25326;
  double t25327;
  double t25328;
  double t25329;
  double t25332;
  double t25333;
  double t25334;
  double t25336;
  double t25337;
  double t25338;
  double t25339;
  double t25340;
  double t25341;
  double t25342;
  double t25343;
  double t25344;
  double t25345;
  double t25346;
  double t25347;
  double t25352;
  double t25353;
  double t25354;
  double t25355;
  double t25356;
  double t25357;
  double t25358;
  double t25359;
  double t25360;
  double t25361;
  double t25362;
  double t25363;
  double t25364;
  double t25365;
  double t25366;
  double t25367;
  double t25368;
  double t25379;
  double t25382;
  double t25383;
  double t25384;
  double t25389;
  double t25390;
  double t25391;
  double t25392;
  double t25393;
  double t25394;
  double t25396;
  double t25400;
  double t25404;
  double t25405;
  double t25406;
  double t25409;
  double t25410;
  double t25411;
  double t25412;
  double t25413;
  double t25415;
  double t25416;
  double t25417;
  double t25418;
  double t25419;
  double t25420;
  double t25421;
  double t25422;
  double t25423;
  double t25424;
  double t25425;
  double t25426;
  double t25428;
  double t25429;
  double t25430;
  double t25431;
  double t25432;
  double t25433;
  double t25434;
  double t25435;
  double t25436;
  double t25437;
  double t25438;
  double t25439;
  double t25440;
  double t25441;
  double t25442;
  double t25443;
  double t25444;
  double t25538;
  double t25539;
  double t25540;
  double t19123;
  double t19174;
  double t19211;
  double t19212;
  double t19266;
  double t19268;
  double t19299;
  double t19389;
  double t19396;
  double t25486;
  double t25487;
  double t25488;
  double t25489;
  double t25490;
  double t25491;
  double t25492;
  double t25493;
  double t25494;
  double t25597;
  double t25602;
  double t25603;
  double t25614;
  double t25635;
  double t25613;
  double t25615;
  double t25617;
  double t25618;
  double t25619;
  double t25621;
  double t25622;
  double t25623;
  double t25625;
  double t25626;
  double t25627;
  double t25628;
  double t25630;
  double t25631;
  double t25632;
  double t25634;
  double t25636;
  double t25637;
  double t25639;
  double t25640;
  double t25641;
  double t25643;
  double t25644;
  double t25648;
  double t25649;
  double t25650;
  double t25659;
  double t25660;
  double t25661;
  double t25286;
  double t25310;
  double t25335;
  double t25348;
  double t25369;
  double t25385;
  double t25395;
  double t25414;
  double t25427;
  double t25445;
  double t25446;
  double t25583;
  double t25584;
  double t25585;
  double t25586;
  double t25587;
  double t25588;
  double t25589;
  double t25590;
  double t25591;
  double t25592;
  double t25593;
  double t25514;
  double t25515;
  double t25516;
  double t25517;
  double t25518;
  double t25519;
  double t25520;
  double t25521;
  double t25522;
  double t25523;
  double t25524;
  double t25611;
  double t25753;
  double t25758;
  double t25759;
  double t25773;
  double t25787;
  double t25718;
  double t25719;
  double t25720;
  double t25654;
  double t25655;
  double t25656;
  double t25727;
  double t25728;
  double t25729;
  double t25666;
  double t25667;
  double t25668;
  double t25769;
  double t25770;
  double t25771;
  double t25774;
  double t25775;
  double t25777;
  double t25778;
  double t25779;
  double t25780;
  double t25782;
  double t25783;
  double t25784;
  double t25786;
  double t25788;
  double t25790;
  double t25791;
  double t25792;
  double t25794;
  double t25795;
  double t25796;
  double t25798;
  double t25799;
  double t25800;
  double t25685;
  double t25686;
  double t25687;
  double t25694;
  double t25695;
  double t25696;
  double t19532;
  double t19636;
  double t20072;
  double t24668;
  double t25047;
  double t25110;
  double t25129;
  double t25206;
  double t25220;
  double t25259;
  double t25260;
  double t25571;
  double t25572;
  double t25573;
  double t25574;
  double t25575;
  double t25576;
  double t25577;
  double t25578;
  double t25579;
  double t25580;
  double t25581;
  double t25502;
  double t25503;
  double t25504;
  double t25505;
  double t25506;
  double t25507;
  double t25508;
  double t25509;
  double t25510;
  double t25511;
  double t25512;
  double t25767;
  double t25713;
  double t25714;
  double t25715;
  double t25716;
  double t25717;
  double t25721;
  double t25722;
  double t25723;
  double t25724;
  double t25725;
  double t25726;
  double t25730;
  double t25873;
  double t25896;
  double t25878;
  double t25879;
  double t25914;
  double t25886;
  double t25887;
  double t25888;
  double t25889;
  double t25891;
  double t25892;
  double t25893;
  double t25895;
  double t25897;
  double t25899;
  double t25900;
  double t25901;
  double t25909;
  double t25910;
  double t25911;
  double t25913;
  double t25915;
  double t25916;
  double t25918;
  double t25919;
  double t25920;
  double t25922;
  double t25923;
  double t18462;
  double t18609;
  double t18638;
  double t18681;
  double t18689;
  double t18761;
  double t18852;
  double t18913;
  double t19002;
  double t19040;
  double t19048;
  double t25551;
  double t25552;
  double t25553;
  double t25554;
  double t25555;
  double t25556;
  double t25557;
  double t25558;
  double t25559;
  double t25560;
  double t25561;
  double t25473;
  double t25474;
  double t25475;
  double t25476;
  double t25477;
  double t25478;
  double t25479;
  double t25480;
  double t25481;
  double t25482;
  double t25483;
  double t25903;
  double t25802;
  double t25803;
  double t25804;
  double t25805;
  double t25806;
  double t25807;
  double t25808;
  double t25809;
  double t25810;
  double t25811;
  double t25812;
  double t25813;
  double t25646;
  double t25647;
  double t25651;
  double t25652;
  double t25653;
  double t25657;
  double t25658;
  double t25662;
  double t25663;
  double t25664;
  double t25665;
  double t25669;
  double t25982;
  double t26004;
  double t25934;
  double t25935;
  double t25936;
  double t25937;
  double t25938;
  double t25939;
  double t26013;
  double t25944;
  double t25945;
  double t25946;
  double t25947;
  double t25948;
  double t25949;
  double t26005;
  double t26006;
  double t26008;
  double t26009;
  double t25992;
  double t25993;
  double t25994;
  double t26000;
  double t26001;
  double t26002;
  double t26012;
  double t26014;
  double t26016;
  double t26017;
  double t26019;
  double t26020;
  double t26021;
  double t26023;
  double t26024;
  double t26025;
  double t9735;
  double t14124;
  double t14193;
  double t14735;
  double t15733;
  double t17267;
  double t17596;
  double t17972;
  double t18014;
  double t25541;
  double t25542;
  double t25543;
  double t25544;
  double t25545;
  double t25546;
  double t25547;
  double t25548;
  double t25549;
  double t25463;
  double t25464;
  double t25465;
  double t25466;
  double t25467;
  double t25468;
  double t25469;
  double t25470;
  double t25471;
  double t25996;
  double t25997;
  double t25998;
  double t25824;
  double t25825;
  double t25826;
  double t25827;
  double t25828;
  double t25829;
  double t25830;
  double t25831;
  double t25832;
  double t25833;
  double t25834;
  double t25835;
  double t25680;
  double t25681;
  double t25682;
  double t25683;
  double t25684;
  double t25688;
  double t25689;
  double t25690;
  double t25691;
  double t25692;
  double t25693;
  double t25697;
  double t25986;
  double t25987;
  double t25988;
  double t25989;
  double t25990;
  double t25880;
  double t25881;
  double t25882;
  double t25883;
  double t25884;
  double t2456;
  double t2886;
  double t3778;
  double t4961;
  double t6254;
  double t25532;
  double t25533;
  double t25534;
  double t25535;
  double t25536;
  double t25454;
  double t25455;
  double t25456;
  double t25457;
  double t25458;
  double t25760;
  double t25761;
  double t25762;
  double t25763;
  double t25764;
  double t25604;
  double t25605;
  double t25606;
  double t25607;
  double t25608;
  double t25981;
  double t25983;
  double t25984;
  double t25874;
  double t25875;
  double t25876;
  double t1422;
  double t1783;
  double t1797;
  double t25528;
  double t25529;
  double t25530;
  double t25450;
  double t25451;
  double t25452;
  double t25754;
  double t25755;
  double t25756;
  double t25598;
  double t25599;
  double t25600;
  t532 = Cos(var1[16]);
  t196 = Cos(var1[17]);
  t298 = Sin(var1[16]);
  t610 = Sin(var1[17]);
  t322 = -1.*t196*t298;
  t624 = -1.*t532*t610;
  t625 = t322 + t624;
  t105 = Cos(var1[15]);
  t640 = Sin(var1[4]);
  t753 = Cos(var1[4]);
  t764 = Cos(var1[5]);
  t1314 = Sin(var1[15]);
  t1527 = -1.*t532*t196;
  t1584 = t298*t610;
  t1593 = t1527 + t1584;
  t1339 = Sin(var1[5]);
  t686 = t105*t625*t640;
  t773 = t532*t196;
  t795 = -1.*t298*t610;
  t1022 = t773 + t795;
  t1083 = t764*t1022;
  t1358 = t1314*t625*t1339;
  t1367 = t1083 + t1358;
  t1377 = t753*t1367;
  t1414 = t686 + t1377;
  t3221 = -1. + t196;
  t3227 = 0.25*t3221;
  t3240 = -0.37338*t196;
  t3245 = 0.002196*t610;
  t3429 = t3227 + t3240 + t3245;
  t2903 = -1.*t196;
  t2930 = 1. + t2903;
  t2984 = -0.21935*t2930;
  t2990 = -0.221546*t196;
  t3145 = -0.12338*t610;
  t3146 = t2984 + t2990 + t3145;
  t1601 = t105*t1593*t640;
  t1622 = t764*t625;
  t1680 = t1314*t1593*t1339;
  t1777 = t1622 + t1680;
  t1779 = t753*t1777;
  t1781 = t1601 + t1779;
  t7419 = -1.*t532;
  t7668 = 1. + t7419;
  t7735 = -0.21935*t7668;
  t7770 = -0.219832*t532;
  t7802 = -0.031996*t298;
  t7852 = t7735 + t7770 + t7802;
  t8711 = -0.031996*t532;
  t8751 = 0.000482*t298;
  t8779 = t8711 + t8751;
  t8858 = -1.*t7852*t298;
  t8124 = 0.000482*t532;
  t8186 = 0.031996*t298;
  t8274 = t8124 + t8186;
  t9886 = -0.21935*t298;
  t9901 = -1.*t298*t3146;
  t10136 = t532*t3429;
  t10137 = t9886 + t9901 + t10136;
  t9812 = t196*t298;
  t9846 = t532*t610;
  t9873 = t9812 + t9846;
  t9797 = t532*t3146;
  t9804 = t298*t3429;
  t9810 = t7735 + t9797 + t9804;
  t10324 = -0.21935*t532;
  t10327 = -1.*t532*t3146;
  t10349 = -1.*t298*t3429;
  t10350 = t10324 + t10327 + t10349;
  t9573 = t1314*t640;
  t9602 = -1.*t105*t753*t1339;
  t9705 = t9573 + t9602;
  t1811 = -1.*t105*t532*t640;
  t1815 = -1.*t764*t298;
  t1828 = -1.*t532*t1314*t1339;
  t1932 = t1815 + t1828;
  t2109 = t753*t1932;
  t2216 = t1811 + t2109;
  t8892 = t532*t7852;
  t18045 = 0.05701*t1314;
  t18080 = t105*t8779;
  t18081 = t18045 + t18080;
  t18174 = -1.*t105;
  t18193 = 1. + t18174;
  t18207 = 0.0875*t18193;
  t18261 = 0.14451*t105;
  t18280 = -1.*t1314*t8779;
  t18286 = t18207 + t18261 + t18280;
  t8080 = -1.*t532*t7852;
  t8924 = -1.*t8779*t298;
  t18301 = -1.*t105*t532*t18081;
  t18315 = t532*t1314*t18286;
  t18337 = Power(t105,2);
  t18365 = Power(t1314,2);
  t9876 = -1.*t9810*t9873;
  t18467 = 0.036619*t1314;
  t18471 = t105*t10137;
  t18473 = t18467 + t18471;
  t18477 = 0.124119*t105;
  t18480 = -1.*t1314*t10137;
  t18481 = t18207 + t18477 + t18480;
  t10310 = -1.*t10137*t9873;
  t10410 = -1.*t9810*t1022;
  t10579 = t9810*t1022;
  t10691 = t9810*t625;
  t10846 = t10137*t1022;
  t18624 = t105*t532*t18081;
  t18628 = -1.*t532*t1314*t18286;
  t8822 = -1.*t532*t8779;
  t18629 = t7852*t298;
  t14198 = t105*t532*t640;
  t14202 = t764*t298;
  t14206 = t532*t1314*t1339;
  t14211 = t14202 + t14206;
  t14212 = t753*t14211;
  t14703 = t14198 + t14212;
  t18643 = t1314*t18081;
  t18644 = t105*t18286;
  t18647 = t18643 + t18644;
  t18376 = t105*t18081*t298;
  t18431 = -1.*t1314*t18286*t298;
  t2507 = -1.*t105*t298*t640;
  t2664 = t532*t764;
  t2780 = -1.*t1314*t298*t1339;
  t2844 = t2664 + t2780;
  t2872 = t753*t2844;
  t2880 = t2507 + t2872;
  t18610 = -1.*t1314*t18081;
  t18613 = -1.*t105*t18286;
  t18617 = t18610 + t18613;
  t18167 = -1.*t105*t18081*t298;
  t18288 = t1314*t18286*t298;
  t18489 = -1.*t105*t18473*t625;
  t18492 = t1314*t18481*t625;
  t18517 = t105*t18473*t625;
  t18528 = -1.*t1314*t18481*t625;
  t18767 = t1314*t18473;
  t18771 = t105*t18481;
  t18786 = t18767 + t18771;
  t10184 = -1.*t10137*t1022;
  t17269 = t105*t1022*t640;
  t17479 = t764*t9873;
  t17572 = t1314*t1022*t1339;
  t17576 = t17479 + t17572;
  t17579 = t753*t17576;
  t17581 = t17269 + t17579;
  t18861 = -1.*t1314*t18473;
  t18869 = -1.*t105*t18481;
  t18880 = t18861 + t18869;
  t19092 = Sin(var1[3]);
  t19105 = Cos(var1[3]);
  t19181 = t764*t1314*t298;
  t19182 = t532*t1339;
  t19183 = t19181 + t19182;
  t19185 = t19092*t19183;
  t19187 = -1.*t105*t753*t298;
  t19191 = -1.*t640*t2844;
  t19192 = t19187 + t19191;
  t19194 = t19105*t19192;
  t19208 = t19185 + t19194;
  t19214 = -1.*t764*t1314*t625;
  t19218 = t1022*t1339;
  t19221 = t19214 + t19218;
  t19222 = t19092*t19221;
  t19224 = t105*t753*t625;
  t19225 = -1.*t640*t1367;
  t19226 = t19224 + t19225;
  t19227 = t19105*t19226;
  t19262 = t19222 + t19227;
  t19094 = t532*t764*t1314;
  t19098 = -1.*t298*t1339;
  t19099 = t19094 + t19098;
  t19110 = -1.*t105*t532*t753;
  t19113 = -1.*t640*t1932;
  t19114 = t19110 + t19113;
  t19129 = -1.*t532*t764*t1314;
  t19133 = t298*t1339;
  t19144 = t19129 + t19133;
  t19161 = t105*t532*t753;
  t19162 = -1.*t640*t14211;
  t19165 = t19161 + t19162;
  t19416 = t19105*t19183;
  t19418 = -1.*t19092*t19192;
  t19419 = t19416 + t19418;
  t19422 = t19105*t19221;
  t19423 = -1.*t19092*t19226;
  t19426 = t19422 + t19423;
  t19269 = -1.*t764*t1314*t1022;
  t19272 = t9873*t1339;
  t19273 = t19269 + t19272;
  t19279 = t105*t753*t1022;
  t19284 = -1.*t640*t17576;
  t19285 = t19279 + t19284;
  t19304 = -1.*t764*t1314*t1593;
  t19305 = t625*t1339;
  t19307 = t19304 + t19305;
  t19323 = t105*t753*t1593;
  t19324 = -1.*t640*t1777;
  t19325 = t19323 + t19324;
  t19457 = t764*t7852;
  t19463 = -1.*t18286*t1339;
  t19465 = t19457 + t19463;
  t19469 = t764*t18286;
  t19476 = t7852*t1339;
  t19479 = t19469 + t19476;
  t19468 = t105*t1339*t19465;
  t19480 = -1.*t105*t764*t19479;
  t19483 = t18610 + t19468 + t19480;
  t18700 = t18337*t532*t8274;
  t19834 = t764*t8779;
  t19851 = t1314*t8274*t1339;
  t19879 = t19834 + t19851;
  t19769 = -1.*t764*t1314*t8274;
  t19787 = t8779*t1339;
  t19811 = t19769 + t19787;
  t19537 = -1.*t105*t1339*t19465;
  t19541 = t105*t764*t19479;
  t19556 = t18643 + t19537 + t19541;
  t18650 = t18337*t8274*t298;
  t18356 = -1.*t18337*t532*t8274;
  t19577 = -1.*t19183*t19479;
  t19582 = -1.*t19465*t2844;
  t19904 = t19183*t19479;
  t20052 = t19465*t2844;
  t18450 = -1.*t18337*t8274*t298;
  t25048 = t764*t9810;
  t25049 = -1.*t18481*t1339;
  t25050 = t25048 + t25049;
  t25052 = t764*t18481;
  t25053 = t9810*t1339;
  t25060 = t25052 + t25053;
  t19013 = t105*t18473*t1022;
  t25111 = t105*t1339*t25050;
  t25112 = -1.*t105*t764*t25060;
  t25113 = t18861 + t25111 + t25112;
  t18885 = t18337*t10350*t1022;
  t25131 = -1.*t764*t1314*t10350;
  t25132 = t10137*t1339;
  t25133 = t25131 + t25132;
  t25144 = t764*t10137;
  t25145 = t1314*t10350*t1339;
  t25146 = t25144 + t25145;
  t25051 = -1.*t105*t1339*t25050;
  t25069 = t105*t764*t25060;
  t25074 = t18767 + t25051 + t25069;
  t18927 = -1.*t18337*t10350*t625;
  t18957 = -1.*t105*t18473*t1593;
  t25169 = t25050*t1367;
  t25195 = t25060*t19221;
  t18474 = -1.*t105*t18473*t1022;
  t18493 = -1.*t18337*t10350*t1022;
  t25081 = -1.*t25050*t1367;
  t25085 = -1.*t25060*t19221;
  t18578 = t18337*t10350*t625;
  t18581 = t105*t18473*t1593;
  t19495 = t19479*t19144;
  t25262 = t18081*t640;
  t25263 = t753*t19465;
  t25264 = t25262 + t25263;
  t25275 = t753*t18081;
  t25276 = -1.*t640*t19465;
  t25277 = t25275 + t25276;
  t25272 = t753*t1314;
  t25273 = t105*t640*t1339;
  t25274 = t25272 + t25273;
  t25271 = -1.*t9705*t25264;
  t25278 = -1.*t25274*t25277;
  t25279 = t19480 + t25271 + t25278;
  t19826 = -1.*t105*t764*t19811;
  t20048 = t19811*t19144;
  t25318 = t105*t8274*t640;
  t25319 = t753*t19879;
  t25320 = t25318 + t25319;
  t25322 = t105*t753*t8274;
  t25323 = -1.*t640*t19879;
  t25324 = t25322 + t25323;
  t25287 = t9705*t25264;
  t25288 = t25274*t25277;
  t25289 = t19541 + t25287 + t25288;
  t20436 = t105*t764*t19811;
  t21846 = -1.*t19183*t19811;
  t22077 = -1.*t19479*t19099;
  t24670 = -1.*t19479*t19144;
  t24966 = -1.*t19811*t19144;
  t25291 = -1.*t25264*t2880;
  t25296 = -1.*t25277*t19192;
  t25330 = t25264*t2880;
  t25331 = t25277*t19192;
  t25018 = t19183*t19811;
  t25019 = t19479*t19099;
  t25370 = t18473*t640;
  t25371 = t753*t25050;
  t25372 = t25370 + t25371;
  t25374 = t753*t18473;
  t25375 = -1.*t640*t25050;
  t25376 = t25374 + t25375;
  t25115 = t25060*t19273;
  t25386 = -1.*t9705*t25372;
  t25387 = -1.*t25274*t25376;
  t25388 = t25112 + t25386 + t25387;
  t25134 = -1.*t105*t764*t25133;
  t25185 = t25133*t19273;
  t25397 = t105*t10350*t640;
  t25398 = t753*t25146;
  t25399 = t25397 + t25398;
  t25401 = t105*t753*t10350;
  t25402 = -1.*t640*t25146;
  t25403 = t25401 + t25402;
  t25373 = t9705*t25372;
  t25377 = t25274*t25376;
  t25378 = t25069 + t25373 + t25377;
  t25208 = t105*t764*t25133;
  t25213 = -1.*t25060*t19307;
  t25215 = -1.*t25133*t19221;
  t25407 = t25372*t1414;
  t25408 = t25376*t19226;
  t25223 = -1.*t25060*t19273;
  t25227 = -1.*t25133*t19273;
  t25380 = -1.*t25372*t1414;
  t25381 = -1.*t25376*t19226;
  t25243 = t25060*t19307;
  t25252 = t25133*t19221;
  t19442 = t19105*t19307;
  t19446 = -1.*t19092*t19325;
  t19447 = t19442 + t19446;
  t19400 = t19105*t19099;
  t19404 = -1.*t19092*t19114;
  t19405 = t19400 + t19404;
  t2899 = -0.21935*t196;
  t3188 = -1.*t196*t3146;
  t3596 = t3429*t610;
  t3755 = t2899 + t3188 + t3596;
  t3976 = t196*t3429;
  t4014 = 0.21935*t610;
  t4055 = t3146*t610;
  t4767 = t3976 + t4014 + t4055;
  t8367 = -1.*t532*t8274;
  t8428 = t8080 + t8367;
  t8548 = t532*t8428;
  t8865 = t8822 + t8858;
  t8877 = -1.*t298*t8865;
  t8985 = t8892 + t8924;
  t9275 = t532*t8985;
  t9312 = -1.*t8274*t298;
  t9324 = t8858 + t9312;
  t9520 = t298*t9324;
  t9569 = t8548 + t8877 + t9275 + t9520;
  t10234 = t9876 + t10184;
  t10235 = t625*t10234;
  t10247 = -1.*t10137*t625;
  t10352 = -1.*t10350*t1022;
  t10434 = t10247 + t10310 + t10352 + t10410;
  t10459 = t1022*t10434;
  t10578 = t10137*t625;
  t10580 = t10578 + t10579;
  t10645 = t1022*t10580;
  t10689 = t10350*t625;
  t10852 = t10137*t1593;
  t10910 = t10689 + t10691 + t10846 + t10852;
  t10914 = t9873*t10910;
  t12100 = t10235 + t10459 + t10645 + t10914;
  t25460 = t105*t19105*t764;
  t25461 = -1.*t19092*t25274;
  t25462 = t25460 + t25461;
  t19409 = t19105*t19144;
  t19411 = -1.*t19092*t19165;
  t19414 = t19409 + t19411;
  t16505 = -0.124119*t1022;
  t17041 = -0.0875*t1593;
  t17042 = t16505 + t17041;
  t19431 = t19105*t19273;
  t19434 = -1.*t19092*t19285;
  t19436 = t19431 + t19434;
  t17800 = -0.0875*t625;
  t17888 = -0.124119*t9873;
  t17936 = t17800 + t17888;
  t18292 = t8892 + t18167 + t18288;
  t18297 = -1.*t105*t298*t18292;
  t18323 = t18301 + t18315 + t8858;
  t18327 = -1.*t105*t532*t18323;
  t18375 = -1.*t532*t18365*t8274;
  t18442 = t8080 + t18356 + t18375 + t18376 + t18431 + t8924;
  t18444 = -1.*t105*t298*t18442;
  t18447 = t532*t8779;
  t18452 = -1.*t18365*t8274*t298;
  t18453 = t18301 + t18315 + t18447 + t8858 + t18450 + t18452;
  t18455 = t105*t532*t18453;
  t18459 = t18297 + t18327 + t18444 + t18455;
  t18482 = t1314*t18481*t1022;
  t18485 = t9876 + t18474 + t18482;
  t18486 = t105*t1593*t18485;
  t18495 = -1.*t18365*t10350*t1022;
  t18499 = t18489 + t18492 + t10310 + t18493 + t18495 + t10410;
  t18505 = t105*t625*t18499;
  t18554 = t18517 + t18528 + t10579;
  t18576 = t105*t625*t18554;
  t18579 = t18365*t10350*t625;
  t18584 = -1.*t1314*t18481*t1593;
  t18585 = t18578 + t18579 + t10691 + t10846 + t18581 + t18584;
  t18589 = t105*t1022*t18585;
  t18591 = t18486 + t18505 + t18576 + t18589;
  t18622 = t105*t532*t18617;
  t18633 = t18624 + t18628 + t18629;
  t18634 = t1314*t18633;
  t18636 = t18622 + t18634;
  t18649 = -1.*t105*t532*t18647;
  t18654 = t18365*t8274*t298;
  t18664 = t18624 + t18628 + t8822 + t18629 + t18650 + t18654;
  t18665 = t1314*t18664;
  t18671 = t18649 + t18665;
  t18682 = -1.*t105*t18647*t298;
  t18684 = t8080 + t18376 + t18431;
  t18685 = t1314*t18684;
  t18686 = t18682 + t18685;
  t18695 = -1.*t105*t18617*t298;
  t18707 = t532*t18365*t8274;
  t18708 = t8779*t298;
  t18730 = t8892 + t18700 + t18707 + t18167 + t18288 + t18708;
  t18746 = t1314*t18730;
  t18749 = t18695 + t18746;
  t18788 = t105*t18786*t625;
  t18801 = t18489 + t18492 + t10410;
  t18804 = t1314*t18801;
  t18849 = t18788 + t18804;
  t18881 = t105*t18880*t625;
  t18884 = t10137*t9873;
  t18889 = t18365*t10350*t1022;
  t18892 = t18517 + t18528 + t18884 + t18885 + t18889 + t10579;
  t18903 = t1314*t18892;
  t18906 = t18881 + t18903;
  t18921 = t105*t18786*t1593;
  t18934 = -1.*t18365*t10350*t625;
  t18949 = -1.*t9810*t625;
  t18976 = t1314*t18481*t1593;
  t18977 = t18927 + t18934 + t18949 + t10184 + t18957 + t18976;
  t18981 = t1314*t18977;
  t18989 = t18921 + t18981;
  t19009 = t105*t18880*t1022;
  t19012 = t9810*t9873;
  t19014 = -1.*t1314*t18481*t1022;
  t19016 = t19012 + t19013 + t19014;
  t19020 = t1314*t19016;
  t19027 = t19009 + t19020;
  t19406 = 1.528*t2880*t19405;
  t19415 = 1.528*t2880*t19414;
  t19420 = 1.528*t2216*t19419;
  t19421 = 1.528*t14703*t19419;
  t19427 = 0.241*t17581*t19426;
  t19430 = 0.241*t1781*t19426;
  t19438 = 0.241*t1414*t19436;
  t19448 = 0.241*t1414*t19447;
  t19452 = t19406 + t19415 + t19420 + t19421 + t19427 + t19430 + t19438 + t19448;
  t19102 = t19092*t19099;
  t19120 = t19105*t19114;
  t19121 = t19102 + t19120;
  t19145 = t19092*t19144;
  t19170 = t19105*t19165;
  t19171 = t19145 + t19170;
  t19278 = t19092*t19273;
  t19293 = t19105*t19285;
  t19294 = t19278 + t19293;
  t19322 = t19092*t19307;
  t19331 = t19105*t19325;
  t19384 = t19322 + t19331;
  t19485 = t19144*t19483;
  t19488 = t14211*t19465;
  t19499 = t18624 + t19488 + t19495;
  t19512 = t105*t764*t19499;
  t19513 = t19485 + t19512;
  t19572 = t19183*t19556;
  t19592 = t18376 + t19577 + t19582;
  t19593 = t105*t764*t19592;
  t19607 = t19572 + t19593;
  t19752 = t19183*t19483;
  t19768 = -1.*t105*t1314*t8274;
  t19885 = t105*t1339*t19879;
  t19887 = t19768 + t19826 + t19885;
  t19891 = t19144*t19887;
  t20047 = t14211*t19879;
  t20057 = t18700 + t18167 + t19904 + t20047 + t20048 + t20052;
  t20063 = t105*t764*t20057;
  t20064 = t19752 + t19891 + t20063;
  t20073 = t19099*t19556;
  t20078 = t105*t1314*t8274;
  t20437 = -1.*t105*t1339*t19879;
  t20868 = t20078 + t20436 + t20437;
  t21027 = t19183*t20868;
  t21523 = -1.*t1932*t19465;
  t23026 = -1.*t19879*t2844;
  t23366 = t18624 + t18650 + t21523 + t21846 + t22077 + t23026;
  t23433 = t105*t764*t23366;
  t24667 = t20073 + t21027 + t23433;
  t24669 = -1.*t14211*t19465;
  t24754 = t18301 + t24669 + t24670;
  t24769 = t19099*t24754;
  t24965 = -1.*t14211*t19879;
  t24993 = t18356 + t18376 + t19577 + t24965 + t24966 + t19582;
  t24994 = t19183*t24993;
  t25003 = t18167 + t19904 + t20052;
  t25004 = t19183*t25003;
  t25011 = t1932*t19465;
  t25020 = t19879*t2844;
  t25024 = t18301 + t18450 + t25011 + t25018 + t25019 + t25020;
  t25030 = t19144*t25024;
  t25040 = t24769 + t24994 + t25004 + t25030;
  t25080 = t19221*t25074;
  t25090 = t18489 + t25081 + t25085;
  t25094 = t105*t764*t25090;
  t25097 = t25080 + t25094;
  t25130 = -1.*t105*t1314*t10350;
  t25147 = t105*t1339*t25146;
  t25151 = t25130 + t25134 + t25147;
  t25155 = t19273*t25151;
  t25168 = t19221*t25113;
  t25196 = t25146*t17576;
  t25197 = t18517 + t18885 + t25169 + t25185 + t25195 + t25196;
  t25204 = t105*t764*t25197;
  t25205 = t25155 + t25168 + t25204;
  t25114 = t19273*t25113;
  t25125 = t25050*t17576;
  t25126 = t19013 + t25115 + t25125;
  t25127 = t105*t764*t25126;
  t25128 = t25114 + t25127;
  t25207 = t105*t1314*t10350;
  t25209 = -1.*t105*t1339*t25146;
  t25210 = t25207 + t25208 + t25209;
  t25211 = t19221*t25210;
  t25212 = t19307*t25074;
  t25214 = -1.*t25146*t1367;
  t25216 = -1.*t25050*t1777;
  t25217 = t18927 + t18957 + t25213 + t25214 + t25215 + t25216;
  t25218 = t105*t764*t25217;
  t25219 = t25211 + t25212 + t25218;
  t25221 = t18517 + t25169 + t25195;
  t25222 = t19221*t25221;
  t25224 = -1.*t25050*t17576;
  t25225 = t18474 + t25223 + t25224;
  t25226 = t19307*t25225;
  t25232 = -1.*t25146*t17576;
  t25238 = t18489 + t18493 + t25081 + t25227 + t25085 + t25232;
  t25239 = t19221*t25238;
  t25248 = t25146*t1367;
  t25255 = t25050*t1777;
  t25256 = t18578 + t18581 + t25243 + t25248 + t25252 + t25255;
  t25257 = t19273*t25256;
  t25258 = t25222 + t25226 + t25239 + t25257;
  t25280 = t14703*t25279;
  t25281 = t14703*t25264;
  t25282 = t19165*t25277;
  t25283 = t19495 + t25281 + t25282;
  t25284 = t9705*t25283;
  t25285 = t25280 + t25284;
  t25290 = t2880*t25289;
  t25302 = t19577 + t25291 + t25296;
  t25303 = t9705*t25302;
  t25307 = t25290 + t25303;
  t25314 = t2880*t25279;
  t25321 = -1.*t9705*t25320;
  t25325 = -1.*t25274*t25324;
  t25326 = t19826 + t25321 + t25325;
  t25327 = t14703*t25326;
  t25328 = t14703*t25320;
  t25329 = t19165*t25324;
  t25332 = t19904 + t20048 + t25328 + t25329 + t25330 + t25331;
  t25333 = t9705*t25332;
  t25334 = t25314 + t25327 + t25333;
  t25336 = t2216*t25289;
  t25337 = t9705*t25320;
  t25338 = t25274*t25324;
  t25339 = t20436 + t25337 + t25338;
  t25340 = t2880*t25339;
  t25341 = -1.*t2216*t25264;
  t25342 = -1.*t19114*t25277;
  t25343 = -1.*t25320*t2880;
  t25344 = -1.*t25324*t19192;
  t25345 = t21846 + t22077 + t25341 + t25342 + t25343 + t25344;
  t25346 = t9705*t25345;
  t25347 = t25336 + t25340 + t25346;
  t25352 = -1.*t14703*t25264;
  t25353 = -1.*t19165*t25277;
  t25354 = t24670 + t25352 + t25353;
  t25355 = t2216*t25354;
  t25356 = -1.*t14703*t25320;
  t25357 = -1.*t19165*t25324;
  t25358 = t19577 + t24966 + t25356 + t25357 + t25291 + t25296;
  t25359 = t2880*t25358;
  t25360 = t19904 + t25330 + t25331;
  t25361 = t2880*t25360;
  t25362 = t2216*t25264;
  t25363 = t19114*t25277;
  t25364 = t25320*t2880;
  t25365 = t25324*t19192;
  t25366 = t25018 + t25019 + t25362 + t25363 + t25364 + t25365;
  t25367 = t14703*t25366;
  t25368 = t25355 + t25359 + t25361 + t25367;
  t25379 = t1414*t25378;
  t25382 = t25085 + t25380 + t25381;
  t25383 = t9705*t25382;
  t25384 = t25379 + t25383;
  t25389 = t17581*t25388;
  t25390 = t25372*t17581;
  t25391 = t25376*t19285;
  t25392 = t25115 + t25390 + t25391;
  t25393 = t9705*t25392;
  t25394 = t25389 + t25393;
  t25396 = t1414*t25388;
  t25400 = -1.*t9705*t25399;
  t25404 = -1.*t25274*t25403;
  t25405 = t25134 + t25400 + t25404;
  t25406 = t17581*t25405;
  t25409 = t25399*t17581;
  t25410 = t25403*t19285;
  t25411 = t25185 + t25195 + t25407 + t25408 + t25409 + t25410;
  t25412 = t9705*t25411;
  t25413 = t25396 + t25406 + t25412;
  t25415 = t1781*t25378;
  t25416 = t9705*t25399;
  t25417 = t25274*t25403;
  t25418 = t25208 + t25416 + t25417;
  t25419 = t1414*t25418;
  t25420 = -1.*t25399*t1414;
  t25421 = -1.*t25403*t19226;
  t25422 = -1.*t25372*t1781;
  t25423 = -1.*t25376*t19325;
  t25424 = t25213 + t25215 + t25420 + t25421 + t25422 + t25423;
  t25425 = t9705*t25424;
  t25426 = t25415 + t25419 + t25425;
  t25428 = t25195 + t25407 + t25408;
  t25429 = t1414*t25428;
  t25430 = -1.*t25372*t17581;
  t25431 = -1.*t25376*t19285;
  t25432 = t25223 + t25430 + t25431;
  t25433 = t1781*t25432;
  t25434 = -1.*t25399*t17581;
  t25435 = -1.*t25403*t19285;
  t25436 = t25227 + t25085 + t25380 + t25381 + t25434 + t25435;
  t25437 = t1414*t25436;
  t25438 = t25399*t1414;
  t25439 = t25403*t19226;
  t25440 = t25372*t1781;
  t25441 = t25376*t19325;
  t25442 = t25243 + t25252 + t25438 + t25439 + t25440 + t25441;
  t25443 = t17581*t25442;
  t25444 = t25429 + t25433 + t25437 + t25443;
  t25538 = t105*t764*t19092;
  t25539 = t19105*t25274;
  t25540 = t25538 + t25539;
  t19123 = 1.528*t2880*t19121;
  t19174 = 1.528*t2880*t19171;
  t19211 = 1.528*t2216*t19208;
  t19212 = 1.528*t14703*t19208;
  t19266 = 0.241*t17581*t19262;
  t19268 = 0.241*t1781*t19262;
  t19299 = 0.241*t1414*t19294;
  t19389 = 0.241*t1414*t19384;
  t19396 = t19123 + t19174 + t19211 + t19212 + t19266 + t19268 + t19299 + t19389;
  t25486 = 1.528*t19405*t19208;
  t25487 = 1.528*t19414*t19208;
  t25488 = 1.528*t19121*t19419;
  t25489 = 1.528*t19171*t19419;
  t25490 = 0.241*t19426*t19294;
  t25491 = 0.241*t19262*t19436;
  t25492 = 0.241*t19426*t19384;
  t25493 = 0.241*t19262*t19447;
  t25494 = t25486 + t25487 + t25488 + t25489 + t25490 + t25491 + t25492 + t25493;
  t25597 = 5.e-6*t1414;
  t25602 = 1.e-5*t2216;
  t25603 = -0.000085*t2880;
  t25614 = 0.00025*t2880;
  t25635 = -3.e-6*t1414;
  t25613 = 0.009916*t2216;
  t25615 = t25613 + t25614;
  t25617 = -0.000085*t9705;
  t25618 = 0.001783*t14703;
  t25619 = t25617 + t25618 + t25614;
  t25621 = 0.00025*t2216;
  t25622 = 0.001783*t2880;
  t25623 = t25621 + t25622;
  t25625 = 1.e-5*t9705;
  t25626 = 0.00025*t14703;
  t25627 = 0.009916*t2880;
  t25628 = t25625 + t25626 + t25627;
  t25630 = 0.006182*t1414;
  t25631 = -3.e-6*t17581;
  t25632 = t25630 + t25631;
  t25634 = 5.e-6*t9705;
  t25636 = 0.000035*t17581;
  t25637 = t25634 + t25635 + t25636;
  t25639 = 0.000035*t1414;
  t25640 = -3.e-6*t1781;
  t25641 = t25639 + t25640;
  t25643 = 0.006182*t1781;
  t25644 = t25635 + t25643;
  t25648 = t2880*t25354;
  t25649 = t14703*t25360;
  t25650 = t25648 + t25649;
  t25659 = t17581*t25428;
  t25660 = t1414*t25432;
  t25661 = t25659 + t25660;
  t25286 = 1.528*t2216*t25285;
  t25310 = 1.528*t2880*t25307;
  t25335 = 1.528*t2880*t25334;
  t25348 = 1.528*t14703*t25347;
  t25369 = 1.528*t9705*t25368;
  t25385 = 0.241*t1414*t25384;
  t25395 = 0.241*t1781*t25394;
  t25414 = 0.241*t1414*t25413;
  t25427 = 0.241*t17581*t25426;
  t25445 = 0.241*t9705*t25444;
  t25446 = t25286 + t25310 + t25335 + t25348 + t25369 + t25385 + t25395 + t25414 + t25427 + t25445;
  t25583 = 1.528*t19121*t25285;
  t25584 = 1.528*t19208*t25307;
  t25585 = 1.528*t19208*t25334;
  t25586 = 1.528*t19171*t25347;
  t25587 = 1.528*t25540*t25368;
  t25588 = 0.241*t19262*t25384;
  t25589 = 0.241*t19384*t25394;
  t25590 = 0.241*t19262*t25413;
  t25591 = 0.241*t19294*t25426;
  t25592 = 0.241*t25540*t25444;
  t25593 = t25583 + t25584 + t25585 + t25586 + t25587 + t25588 + t25589 + t25590 + t25591 + t25592;
  t25514 = 1.528*t19405*t25285;
  t25515 = 1.528*t19419*t25307;
  t25516 = 1.528*t19419*t25334;
  t25517 = 1.528*t19414*t25347;
  t25518 = 1.528*t25462*t25368;
  t25519 = 0.241*t19426*t25384;
  t25520 = 0.241*t19447*t25394;
  t25521 = 0.241*t19426*t25413;
  t25522 = 0.241*t19436*t25426;
  t25523 = 0.241*t25462*t25444;
  t25524 = t25514 + t25515 + t25516 + t25517 + t25518 + t25519 + t25520 + t25521 + t25522 + t25523;
  t25611 = t25602 + t25603;
  t25753 = 5.e-6*t19221;
  t25758 = -0.000085*t19183;
  t25759 = 1.e-5*t19099;
  t25773 = 0.00025*t19183;
  t25787 = -3.e-6*t19221;
  t25718 = t19183*t24754;
  t25719 = t19144*t25003;
  t25720 = t25718 + t25719;
  t25654 = t105*t532*t18292;
  t25655 = -1.*t105*t298*t18323;
  t25656 = t25654 + t25655;
  t25727 = t19273*t25221;
  t25728 = t19221*t25225;
  t25729 = t25727 + t25728;
  t25666 = t105*t625*t18485;
  t25667 = t105*t1022*t18554;
  t25668 = t25666 + t25667;
  t25769 = 0.001783*t19183;
  t25770 = 0.00025*t19099;
  t25771 = t25769 + t25770;
  t25774 = 0.009916*t19099;
  t25775 = t25773 + t25774;
  t25777 = 1.e-5*t105*t764;
  t25778 = 0.009916*t19183;
  t25779 = 0.00025*t19144;
  t25780 = t25777 + t25778 + t25779;
  t25782 = -0.000085*t105*t764;
  t25783 = 0.001783*t19144;
  t25784 = t25782 + t25773 + t25783;
  t25786 = 0.006182*t19307;
  t25788 = t25786 + t25787;
  t25790 = 5.e-6*t105*t764;
  t25791 = 0.000035*t19273;
  t25792 = t25790 + t25791 + t25787;
  t25794 = -3.e-6*t19307;
  t25795 = 0.000035*t19221;
  t25796 = t25794 + t25795;
  t25798 = -3.e-6*t19273;
  t25799 = 0.006182*t19221;
  t25800 = t25798 + t25799;
  t25685 = t532*t8865;
  t25686 = t298*t8985;
  t25687 = t25685 + t25686;
  t25694 = t1022*t10234;
  t25695 = t9873*t10580;
  t25696 = t25694 + t25695;
  t19532 = 1.528*t2216*t19513;
  t19636 = 1.528*t2880*t19607;
  t20072 = 1.528*t2880*t20064;
  t24668 = 1.528*t14703*t24667;
  t25047 = 1.528*t9705*t25040;
  t25110 = 0.241*t1414*t25097;
  t25129 = 0.241*t1781*t25128;
  t25206 = 0.241*t1414*t25205;
  t25220 = 0.241*t17581*t25219;
  t25259 = 0.241*t9705*t25258;
  t25260 = t19532 + t19636 + t20072 + t24668 + t25047 + t25110 + t25129 + t25206 + t25220 + t25259;
  t25571 = 1.528*t19121*t19513;
  t25572 = 1.528*t19208*t19607;
  t25573 = 1.528*t19208*t20064;
  t25574 = 1.528*t19171*t24667;
  t25575 = 1.528*t25540*t25040;
  t25576 = 0.241*t19262*t25097;
  t25577 = 0.241*t19262*t25205;
  t25578 = 0.241*t25128*t19384;
  t25579 = 0.241*t19294*t25219;
  t25580 = 0.241*t25540*t25258;
  t25581 = t25571 + t25572 + t25573 + t25574 + t25575 + t25576 + t25577 + t25578 + t25579 + t25580;
  t25502 = 1.528*t19405*t19513;
  t25503 = 1.528*t19419*t19607;
  t25504 = 1.528*t19419*t20064;
  t25505 = 1.528*t19414*t24667;
  t25506 = 1.528*t25462*t25040;
  t25507 = 0.241*t19426*t25097;
  t25508 = 0.241*t19426*t25205;
  t25509 = 0.241*t25128*t19447;
  t25510 = 0.241*t19436*t25219;
  t25511 = 0.241*t25462*t25258;
  t25512 = t25502 + t25503 + t25504 + t25505 + t25506 + t25507 + t25508 + t25509 + t25510 + t25511;
  t25767 = t25758 + t25759;
  t25713 = 1.528*t20064*t25285;
  t25714 = 1.528*t24667*t25307;
  t25715 = 1.528*t25040*t25650;
  t25716 = 1.528*t19513*t25334;
  t25717 = 1.528*t19607*t25347;
  t25721 = 1.528*t25720*t25368;
  t25722 = 0.241*t25219*t25384;
  t25723 = 0.241*t25258*t25661;
  t25724 = 0.241*t25205*t25394;
  t25725 = 0.241*t25128*t25413;
  t25726 = 0.241*t25097*t25426;
  t25730 = 0.241*t25729*t25444;
  t25873 = 5.e-6*t105*t625;
  t25896 = -0.00025*t105*t298;
  t25878 = -1.e-5*t105*t532;
  t25879 = 0.000085*t105*t298;
  t25914 = -3.e-6*t105*t625;
  t25886 = 0.00025*t105*t532;
  t25887 = 1.e-5*t1314;
  t25888 = -0.009916*t105*t298;
  t25889 = t25886 + t25887 + t25888;
  t25891 = -0.00025*t105*t532;
  t25892 = -0.001783*t105*t298;
  t25893 = t25891 + t25892;
  t25895 = -0.009916*t105*t532;
  t25897 = t25895 + t25896;
  t25899 = 0.001783*t105*t532;
  t25900 = -0.000085*t1314;
  t25901 = t25899 + t25900 + t25896;
  t25909 = 0.006182*t105*t625;
  t25910 = -3.e-6*t105*t1022;
  t25911 = t25909 + t25910;
  t25913 = 5.e-6*t1314;
  t25915 = 0.000035*t105*t1022;
  t25916 = t25913 + t25914 + t25915;
  t25918 = 0.000035*t105*t625;
  t25919 = -3.e-6*t105*t1593;
  t25920 = t25918 + t25919;
  t25922 = 0.006182*t105*t1593;
  t25923 = t25914 + t25922;
  t18462 = 1.528*t18459*t9705;
  t18609 = 0.241*t18591*t9705;
  t18638 = 1.528*t18636*t2216;
  t18681 = 1.528*t18671*t14703;
  t18689 = 1.528*t18686*t2880;
  t18761 = 1.528*t18749*t2880;
  t18852 = 0.241*t18849*t1414;
  t18913 = 0.241*t18906*t1414;
  t19002 = 0.241*t18989*t17581;
  t19040 = 0.241*t19027*t1781;
  t19048 = t18462 + t18609 + t18638 + t18681 + t18689 + t18761 + t18852 + t18913 + t19002 + t19040;
  t25551 = 1.528*t18459*t25540;
  t25552 = 0.241*t18591*t25540;
  t25553 = 1.528*t18636*t19121;
  t25554 = 1.528*t18671*t19171;
  t25555 = 1.528*t18686*t19208;
  t25556 = 1.528*t18749*t19208;
  t25557 = 0.241*t18849*t19262;
  t25558 = 0.241*t18906*t19262;
  t25559 = 0.241*t18989*t19294;
  t25560 = 0.241*t19027*t19384;
  t25561 = t25551 + t25552 + t25553 + t25554 + t25555 + t25556 + t25557 + t25558 + t25559 + t25560;
  t25473 = 1.528*t18459*t25462;
  t25474 = 0.241*t18591*t25462;
  t25475 = 1.528*t18636*t19405;
  t25476 = 1.528*t18671*t19414;
  t25477 = 1.528*t18686*t19419;
  t25478 = 1.528*t18749*t19419;
  t25479 = 0.241*t18849*t19426;
  t25480 = 0.241*t18906*t19426;
  t25481 = 0.241*t18989*t19436;
  t25482 = 0.241*t19027*t19447;
  t25483 = t25473 + t25474 + t25475 + t25476 + t25477 + t25478 + t25479 + t25480 + t25481 + t25482;
  t25903 = t25878 + t25879;
  t25802 = 1.528*t18749*t19513;
  t25803 = 1.528*t18671*t19607;
  t25804 = 1.528*t18459*t25720;
  t25805 = 1.528*t18636*t20064;
  t25806 = 1.528*t18686*t24667;
  t25807 = 1.528*t25656*t25040;
  t25808 = 0.241*t18989*t25097;
  t25809 = 0.241*t18591*t25729;
  t25810 = 0.241*t18906*t25128;
  t25811 = 0.241*t19027*t25205;
  t25812 = 0.241*t18849*t25219;
  t25813 = 0.241*t25668*t25258;
  t25646 = 1.528*t18749*t25285;
  t25647 = 1.528*t18671*t25307;
  t25651 = 1.528*t18459*t25650;
  t25652 = 1.528*t18636*t25334;
  t25653 = 1.528*t18686*t25347;
  t25657 = 1.528*t25656*t25368;
  t25658 = 0.241*t18989*t25384;
  t25662 = 0.241*t18591*t25661;
  t25663 = 0.241*t18906*t25394;
  t25664 = 0.241*t19027*t25413;
  t25665 = 0.241*t18849*t25426;
  t25669 = 0.241*t25668*t25444;
  t25982 = 5.e-6*t1022;
  t26004 = 0.00025*t532;
  t25934 = -0.08711128*t298*t18686;
  t25935 = -0.08711128*t532*t18636;
  t25936 = -0.08711128*t298*t18749;
  t25937 = 1.528*t25656*t9569;
  t25938 = 1.528*t25687*t18459;
  t25939 = 0.08711128*t532*t18671;
  t26013 = -3.e-6*t1022;
  t25944 = 0.241*t17042*t19027;
  t25945 = 0.008825179*t625*t18849;
  t25946 = 0.241*t17936*t18906;
  t25947 = 0.241*t25696*t18591;
  t25948 = 0.008825179*t1022*t18989;
  t25949 = 0.241*t25668*t12100;
  t26005 = -0.009916*t298;
  t26006 = t26004 + t26005;
  t26008 = 0.001783*t298;
  t26009 = t26004 + t26008;
  t25992 = 0.001783*t532;
  t25993 = -0.00025*t298;
  t25994 = t25992 + t25993;
  t26000 = 0.009916*t532;
  t26001 = 0.00025*t298;
  t26002 = t26000 + t26001;
  t26012 = 0.006182*t625;
  t26014 = t26012 + t26013;
  t26016 = 0.000035*t9873;
  t26017 = t26016 + t26013;
  t26019 = -3.e-6*t625;
  t26020 = 0.000035*t1022;
  t26021 = t26019 + t26020;
  t26023 = -3.e-6*t9873;
  t26024 = 0.006182*t1022;
  t26025 = t26023 + t26024;
  t9735 = 1.528*t9569*t9705;
  t14124 = 0.241*t12100*t9705;
  t14193 = -0.08711128*t298*t2216;
  t14735 = -0.08711128*t298*t14703;
  t15733 = 0.008825179*t1022*t1414;
  t17267 = 0.241*t17042*t1414;
  t17596 = 0.008825179*t625*t17581;
  t17972 = 0.241*t17936*t1781;
  t18014 = t9735 + t14124 + t14193 + t14735 + t15733 + t17267 + t17596 + t17972;
  t25541 = 1.528*t9569*t25540;
  t25542 = 0.241*t12100*t25540;
  t25543 = -0.08711128*t298*t19121;
  t25544 = -0.08711128*t298*t19171;
  t25545 = 0.008825179*t1022*t19262;
  t25546 = 0.241*t17042*t19262;
  t25547 = 0.008825179*t625*t19294;
  t25548 = 0.241*t17936*t19384;
  t25549 = t25541 + t25542 + t25543 + t25544 + t25545 + t25546 + t25547 + t25548;
  t25463 = 1.528*t9569*t25462;
  t25464 = 0.241*t12100*t25462;
  t25465 = -0.08711128*t298*t19405;
  t25466 = -0.08711128*t298*t19414;
  t25467 = 0.008825179*t1022*t19426;
  t25468 = 0.241*t17042*t19426;
  t25469 = 0.008825179*t625*t19436;
  t25470 = 0.241*t17936*t19447;
  t25471 = t25463 + t25464 + t25465 + t25466 + t25467 + t25468 + t25469 + t25470;
  t25996 = -0.000085*t532;
  t25997 = -1.e-5*t298;
  t25998 = t25996 + t25997;
  t25824 = -0.08711128*t532*t19513;
  t25825 = -0.08711128*t298*t19607;
  t25826 = 1.528*t9569*t25720;
  t25827 = -0.08711128*t298*t20064;
  t25828 = 0.08711128*t532*t24667;
  t25829 = 1.528*t25687*t25040;
  t25830 = 0.008825179*t625*t25097;
  t25831 = 0.241*t12100*t25729;
  t25832 = 0.241*t17042*t25128;
  t25833 = 0.241*t17936*t25205;
  t25834 = 0.008825179*t1022*t25219;
  t25835 = 0.241*t25696*t25258;
  t25680 = -0.08711128*t532*t25285;
  t25681 = -0.08711128*t298*t25307;
  t25682 = 1.528*t9569*t25650;
  t25683 = -0.08711128*t298*t25334;
  t25684 = 0.08711128*t532*t25347;
  t25688 = 1.528*t25687*t25368;
  t25689 = 0.008825179*t625*t25384;
  t25690 = 0.241*t12100*t25661;
  t25691 = 0.241*t17042*t25394;
  t25692 = 0.241*t17936*t25413;
  t25693 = 0.008825179*t1022*t25426;
  t25697 = 0.241*t25696*t25444;
  t25986 = 0.00270221251488*t532;
  t25987 = -0.00005198763696*t298;
  t25988 = 0.008825179*t625*t3755;
  t25989 = 0.241*t4767*t17042;
  t25990 = t25986 + t25987 + t25982 + t25988 + t25989;
  t25880 = -0.048889888*t18749;
  t25881 = 0.000736496*t18671;
  t25882 = 0.241*t4767*t18906;
  t25883 = 0.241*t3755*t18989;
  t25884 = t25878 + t25879 + t25880 + t25881 + t25873 + t25882 + t25883;
  t2456 = -0.048889888*t2216;
  t2886 = 0.000736496*t2880;
  t3778 = 0.241*t3755*t1414;
  t4961 = 0.241*t4767*t1781;
  t6254 = t2456 + t2886 + t3778 + t4961;
  t25532 = -0.048889888*t19121;
  t25533 = 0.000736496*t19208;
  t25534 = 0.241*t3755*t19262;
  t25535 = 0.241*t4767*t19384;
  t25536 = t25532 + t25533 + t25534 + t25535;
  t25454 = -0.048889888*t19405;
  t25455 = 0.000736496*t19419;
  t25456 = 0.241*t3755*t19426;
  t25457 = 0.241*t4767*t19447;
  t25458 = t25454 + t25455 + t25456 + t25457;
  t25760 = -0.048889888*t20064;
  t25761 = 0.000736496*t24667;
  t25762 = 0.241*t4767*t25205;
  t25763 = 0.241*t3755*t25219;
  t25764 = t25758 + t25759 + t25753 + t25760 + t25761 + t25762 + t25763;
  t25604 = -0.048889888*t25334;
  t25605 = 0.000736496*t25347;
  t25606 = 0.241*t4767*t25413;
  t25607 = 0.241*t3755*t25426;
  t25608 = t25602 + t25603 + t25597 + t25604 + t25605 + t25606 + t25607;
  t25981 = 0.000019380093084*t625;
  t25983 = -0.02973458*t17042;
  t25984 = t25981 + t25982 + t25983;
  t25874 = -0.02973458*t18906;
  t25875 = 0.000529236*t18989;
  t25876 = t25873 + t25874 + t25875;
  t1422 = 0.000529236*t1414;
  t1783 = -0.02973458*t1781;
  t1797 = t1422 + t1783;
  t25528 = 0.000529236*t19262;
  t25529 = -0.02973458*t19384;
  t25530 = t25528 + t25529;
  t25450 = 0.000529236*t19426;
  t25451 = -0.02973458*t19447;
  t25452 = t25450 + t25451;
  t25754 = -0.02973458*t25205;
  t25755 = 0.000529236*t25219;
  t25756 = t25753 + t25754 + t25755;
  t25598 = -0.02973458*t25413;
  t25599 = 0.000529236*t25426;
  t25600 = t25597 + t25598 + t25599;
  p_output1[0]=var2[16]*(-0.5*(0.482*t1414*t17581 + 0.482*t1414*t1781 + 3.056*t14703*t2880 + 3.056*t2216*t2880)*var2[0] - 0.5*t19452*var2[1] - 0.5*t19396*var2[2] - 0.5*t25446*var2[3] - 0.5*t25260*var2[4] - 0.5*t19048*var2[5] - 0.5*t18014*var2[15] - 0.5*t6254*var2[16] - 0.5*t1797*var2[17]);
  p_output1[1]=var2[16]*(-0.5*t19452*var2[0] - 0.5*(3.056*t19405*t19419 + 3.056*t19414*t19419 + 0.482*t19426*t19436 + 0.482*t19426*t19447)*var2[1] - 0.5*t25494*var2[2] - 0.5*t25524*var2[3] - 0.5*t25512*var2[4] - 0.5*t25483*var2[5] - 0.5*t25471*var2[15] - 0.5*t25458*var2[16] - 0.5*t25452*var2[17]);
  p_output1[2]=var2[16]*(-0.5*t19396*var2[0] - 0.5*t25494*var2[1] - 0.5*(3.056*t19121*t19208 + 3.056*t19171*t19208 + 0.482*t19262*t19294 + 0.482*t19262*t19384)*var2[2] - 0.5*t25593*var2[3] - 0.5*t25581*var2[4] - 0.5*t25561*var2[5] - 0.5*t25549*var2[15] - 0.5*t25536*var2[16] - 0.5*t25530*var2[17]);
  p_output1[3]=var2[16]*(-0.5*t25446*var2[0] - 0.5*t25524*var2[1] - 0.5*t25593*var2[2] - 0.5*(3.056*t25285*t25334 + 3.056*t25307*t25347 + 0.482*t25394*t25413 + 0.482*t25384*t25426 + t14703*t25623 + t2216*t25628 + t1781*t25632 + t1414*t25637 + t17581*t25641 + t1414*t25644 + 3.056*t25368*t25650 + 0.482*t25444*t25661 + t25615*t2880 + t25619*t2880 + 5.e-6*t1414*t9705 + t25611*t9705)*var2[3] - 0.5*(t19183*t25615 + t19183*t25619 + t19144*t25623 + t19099*t25628 + t19307*t25632 + t19221*t25637 + t19273*t25641 + t19221*t25644 + t25713 + t25714 + t25715 + t25716 + t25717 + t25721 + t25722 + t25723 + t25724 + t25725 + t25726 + t25730 + 5.e-6*t105*t1414*t764 + t105*t25611*t764)*var2[4] - 0.5*(5.e-6*t1314*t1414 + t1314*t25611 + t105*t1593*t25632 + t1022*t105*t25641 + t25646 + t25647 + t25651 + t25652 + t25653 + t25657 + t25658 + t25662 + t25663 + t25664 + t25665 + t25669 - 1.*t105*t25615*t298 - 1.*t105*t25619*t298 + t105*t25623*t532 - 1.*t105*t25628*t532 + t105*t25637*t625 + t105*t25644*t625)*var2[5] - 0.5*(t1022*t25637 + t1022*t25644 + t25680 + t25681 + t25682 + t25683 + t25684 + t25688 + t25689 + t25690 + t25691 + t25692 + t25693 + t25697 + t25623*t298 - 1.*t25628*t298 + t25615*t532 + t25619*t532 + t25632*t625 + t25641*t9873)*var2[15] - 0.5*t25608*var2[16] - 0.5*t25600*var2[17]);
  p_output1[4]=var2[16]*(-0.5*t25260*var2[0] - 0.5*t25512*var2[1] - 0.5*t25581*var2[2] - 0.5*(t25713 + t25714 + t25715 + t25716 + t25717 + t25721 + t25722 + t25723 + t25724 + t25725 + t25726 + t25730 + t14703*t25771 + t2216*t25780 + t1414*t25788 + t1414*t25792 + t17581*t25796 + t1781*t25800 + t25775*t2880 + t25784*t2880 + 5.e-6*t19221*t9705 + t25767*t9705)*var2[3] - 0.5*(3.056*t19513*t20064 + 3.056*t19607*t24667 + 0.482*t25128*t25205 + 0.482*t25097*t25219 + 3.056*t25040*t25720 + 0.482*t25258*t25729 + t19144*t25771 + t19183*t25775 + t19099*t25780 + t19183*t25784 + t19221*t25788 + t19221*t25792 + t19273*t25796 + t19307*t25800 + 5.e-6*t105*t19221*t764 + t105*t25767*t764)*var2[4] - 0.5*(5.e-6*t1314*t19221 + t1314*t25767 + t1022*t105*t25796 + t105*t1593*t25800 + t25802 + t25803 + t25804 + t25805 + t25806 + t25807 + t25808 + t25809 + t25810 + t25811 + t25812 + t25813 - 1.*t105*t25775*t298 - 1.*t105*t25784*t298 + t105*t25771*t532 - 1.*t105*t25780*t532 + t105*t25788*t625 + t105*t25792*t625)*var2[5] - 0.5*(t1022*t25788 + t1022*t25792 + t25824 + t25825 + t25826 + t25827 + t25828 + t25829 + t25830 + t25831 + t25832 + t25833 + t25834 + t25835 + t25771*t298 - 1.*t25780*t298 + t25775*t532 + t25784*t532 + t25800*t625 + t25796*t9873)*var2[15] - 0.5*t25764*var2[16] - 0.5*t25756*var2[17]);
  p_output1[5]=var2[16]*(-0.5*t19048*var2[0] - 0.5*t25483*var2[1] - 0.5*t25561*var2[2] - 0.5*(t25646 + t25647 + t25651 + t25652 + t25653 + t25657 + t25658 + t25662 + t25663 + t25664 + t25665 + t25669 + t2216*t25889 + t14703*t25893 + t1781*t25911 + t1414*t25916 + t17581*t25920 + t1414*t25923 + t25897*t2880 + t25901*t2880 + t25903*t9705 + 5.e-6*t105*t625*t9705)*var2[3] - 0.5*(t25802 + t25803 + t25804 + t25805 + t25806 + t25807 + t25808 + t25809 + t25810 + t25811 + t25812 + t25813 + t19099*t25889 + t19144*t25893 + t19183*t25897 + t19183*t25901 + t19307*t25911 + t19221*t25916 + t19273*t25920 + t19221*t25923 + t105*t25903*t764 + 5.e-6*t18337*t625*t764)*var2[4] - 0.5*(3.056*t18671*t18686 + 3.056*t18636*t18749 + 0.482*t18849*t18989 + 0.482*t18906*t19027 + 3.056*t18459*t25656 + 0.482*t18591*t25668 + t1314*t25903 + t105*t1593*t25911 + t1022*t105*t25920 - 1.*t105*t25897*t298 - 1.*t105*t25901*t298 - 1.*t105*t25889*t532 + t105*t25893*t532 + 5.e-6*t105*t1314*t625 + t105*t25916*t625 + t105*t25923*t625)*var2[5] - 0.5*(t1022*t25916 + t1022*t25923 + t25934 + t25935 + t25936 + t25937 + t25938 + t25939 + t25944 + t25945 + t25946 + t25947 + t25948 + t25949 - 1.*t25889*t298 + t25893*t298 + t25897*t532 + t25901*t532 + t25911*t625 + t25920*t9873)*var2[15] - 0.5*t25884*var2[16] - 0.5*t25876*var2[17]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=var2[16]*(-0.5*t18014*var2[0] - 0.5*t25471*var2[1] - 0.5*t25549*var2[2] - 0.5*(t25680 + t25681 + t25682 + t25683 + t25684 + t25688 + t25689 + t25690 + t25691 + t25692 + t25693 + t25697 + t14703*t25994 + t2216*t26002 + t1414*t26014 + t1414*t26017 + t17581*t26021 + t1781*t26025 + t26006*t2880 + t26009*t2880 + 5.e-6*t1022*t9705 + t25998*t9705)*var2[3] - 0.5*(t25824 + t25825 + t25826 + t25827 + t25828 + t25829 + t25830 + t25831 + t25832 + t25833 + t25834 + t25835 + t19144*t25994 + t19099*t26002 + t19183*t26006 + t19183*t26009 + t19221*t26014 + t19221*t26017 + t19273*t26021 + t19307*t26025 + 5.e-6*t1022*t105*t764 + t105*t25998*t764)*var2[4] - 0.5*(5.e-6*t1022*t1314 + t25934 + t25935 + t25936 + t25937 + t25938 + t25939 + t25944 + t25945 + t25946 + t25947 + t25948 + t25949 + t1314*t25998 + t1022*t105*t26021 + t105*t1593*t26025 - 1.*t105*t26006*t298 - 1.*t105*t26009*t298 + t105*t25994*t532 - 1.*t105*t26002*t532 + t105*t26014*t625 + t105*t26017*t625)*var2[5] - 0.5*(0.482*t17042*t17936 + 0.482*t12100*t25696 + t1022*t26014 + t1022*t26017 + t25994*t298 - 1.*t26002*t298 + t26006*t532 + t26009*t532 + 0.000646338459602*t1022*t625 + t26025*t625 + 3.056*t25687*t9569 + t26021*t9873)*var2[15] - 0.5*t25990*var2[16] - 0.5*t25984*var2[17]);
  p_output1[16]=(-0.5*t6254*var2[0] - 0.5*t25458*var2[1] - 0.5*t25536*var2[2] - 0.5*t25608*var2[3] - 0.5*t25764*var2[4] - 0.5*t25884*var2[5] - 0.5*t25990*var2[15])*var2[16];
  p_output1[17]=(-0.5*t1797*var2[0] - 0.5*t25452*var2[1] - 0.5*t25530*var2[2] - 0.5*t25600*var2[3] - 0.5*t25756*var2[4] - 0.5*t25876*var2[5] - 0.5*t25984*var2[15])*var2[16];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec17_laikago_description.hh"

namespace SymFunction
{

void Ce2_vec17_laikago_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
