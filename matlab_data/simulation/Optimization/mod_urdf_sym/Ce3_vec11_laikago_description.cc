/*
 * Automatically Generated from Mathematica.
 * Tue 10 Dec 2019 16:02:45 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t37;
  double t54;
  double t82;
  double t63;
  double t91;
  double t17;
  double t115;
  double t120;
  double t121;
  double t130;
  double t221;
  double t232;
  double t297;
  double t305;
  double t309;
  double t315;
  double t327;
  double t328;
  double t263;
  double t269;
  double t276;
  double t283;
  double t284;
  double t286;
  double t227;
  double t229;
  double t230;
  double t237;
  double t246;
  double t406;
  double t407;
  double t409;
  double t73;
  double t92;
  double t97;
  double t127;
  double t131;
  double t142;
  double t145;
  double t146;
  double t148;
  double t170;
  double t177;
  double t181;
  double t185;
  double t186;
  double t188;
  double t190;
  double t195;
  double t203;
  double t249;
  double t259;
  double t291;
  double t293;
  double t312;
  double t339;
  double t341;
  double t345;
  double t353;
  double t358;
  double t363;
  double t369;
  double t371;
  double t394;
  double t396;
  double t398;
  double t399;
  double t405;
  double t414;
  double t419;
  double t423;
  double t428;
  double t432;
  double t433;
  double t434;
  double t436;
  double t524;
  double t529;
  double t531;
  double t544;
  double t556;
  double t565;
  double t577;
  double t578;
  double t596;
  double t606;
  double t611;
  double t623;
  double t705;
  double t707;
  double t712;
  double t758;
  double t760;
  double t778;
  double t757;
  double t779;
  double t780;
  double t783;
  double t785;
  double t788;
  double t791;
  double t793;
  double t794;
  double t800;
  double t808;
  double t814;
  double t815;
  double t822;
  double t828;
  double t836;
  double t840;
  double t844;
  double t869;
  double t871;
  double t872;
  double t859;
  double t861;
  double t868;
  double t850;
  double t852;
  double t853;
  double t782;
  double t845;
  double t846;
  double t743;
  double t749;
  double t755;
  double t894;
  double t896;
  double t898;
  double t876;
  double t877;
  double t880;
  double t934;
  double t937;
  double t938;
  double t1020;
  double t1021;
  double t1037;
  double t1040;
  double t1019;
  double t1042;
  double t1043;
  double t1050;
  double t1057;
  double t1060;
  double t1066;
  double t1068;
  double t1070;
  double t1077;
  double t1109;
  double t1110;
  double t1138;
  double t1142;
  double t1143;
  double t1123;
  double t1130;
  double t1133;
  double t1014;
  double t1017;
  double t1018;
  double t1044;
  double t1113;
  double t1114;
  double t1162;
  double t1164;
  double t1166;
  double t1264;
  double t1265;
  double t1267;
  double t1407;
  double t1418;
  double t1419;
  double t1399;
  double t1403;
  double t1404;
  double t1441;
  double t1442;
  double t1445;
  double t1425;
  double t1434;
  double t1439;
  double t900;
  double t1729;
  double t1733;
  double t1742;
  double t919;
  double t965;
  double t996;
  double t1167;
  double t1836;
  double t1837;
  double t1844;
  double t1228;
  double t1306;
  double t1345;
  double t1746;
  double t1750;
  double t1752;
  double t903;
  double t905;
  double t906;
  double t923;
  double t925;
  double t927;
  double t1795;
  double t971;
  double t974;
  double t986;
  double t1808;
  double t1813;
  double t1000;
  double t1002;
  double t1003;
  double t1848;
  double t1182;
  double t1189;
  double t1190;
  double t1860;
  double t1862;
  double t1234;
  double t1236;
  double t1244;
  double t1928;
  double t1307;
  double t1316;
  double t1318;
  double t1958;
  double t2011;
  double t1347;
  double t1350;
  double t1351;
  double t1787;
  double t2362;
  double t2365;
  double t2368;
  double t2371;
  double t2373;
  double t1800;
  double t1710;
  double t1757;
  double t1895;
  double t2499;
  double t2503;
  double t2505;
  double t2511;
  double t2514;
  double t1940;
  double t1824;
  double t1870;
  double t2661;
  double t2668;
  double t2669;
  double t2681;
  double t2682;
  double t2687;
  double t2707;
  double t2711;
  double t2713;
  double t2739;
  double t2744;
  double t2749;
  double t1713;
  double t1715;
  double t2460;
  double t2461;
  double t2444;
  double t2445;
  double t1758;
  double t1759;
  double t1788;
  double t1789;
  double t2927;
  double t2370;
  double t2377;
  double t2932;
  double t2392;
  double t2395;
  double t1801;
  double t1802;
  double t1829;
  double t1833;
  double t2554;
  double t2557;
  double t2567;
  double t2568;
  double t1871;
  double t1873;
  double t1896;
  double t1898;
  double t2510;
  double t2515;
  double t2527;
  double t2530;
  double t1941;
  double t1943;
  double t2592;
  double t2594;
  double t2595;
  double t2962;
  double t2968;
  double t2931;
  double t3251;
  double t3252;
  double t3256;
  double t2948;
  double t3258;
  double t3259;
  double t3260;
  double t3198;
  double t3199;
  double t3202;
  double t2603;
  double t2604;
  double t2606;
  double t2993;
  double t3006;
  double t3273;
  double t3274;
  double t3275;
  double t3009;
  double t3011;
  double t2608;
  double t2612;
  double t2614;
  double t3026;
  double t3032;
  double t3047;
  double t3049;
  double t3342;
  double t3343;
  double t3346;
  double t3362;
  double t3377;
  double t3378;
  double t2620;
  double t2640;
  double t2646;
  double t3080;
  double t3088;
  double t3109;
  double t3111;
  double t3481;
  double t3483;
  double t3485;
  double t2434;
  double t2439;
  double t3535;
  double t3537;
  double t3539;
  double t2359;
  double t2360;
  double t2469;
  double t2470;
  double t3522;
  double t3548;
  double t2491;
  double t2494;
  double t3627;
  double t3630;
  double t3631;
  double t3633;
  double t2549;
  double t2550;
  double t3702;
  double t3703;
  double t3708;
  double t3732;
  double t3733;
  double t3742;
  double t3775;
  double t3776;
  double t3783;
  double t478;
  double t480;
  double t482;
  double t488;
  double t492;
  double t496;
  double t3807;
  double t3811;
  double t3812;
  double t3816;
  double t3817;
  double t3818;
  double t3547;
  double t3550;
  double t3892;
  double t3893;
  double t3894;
  double t3878;
  double t3879;
  double t3880;
  double t3578;
  double t3605;
  double t3634;
  double t3946;
  double t3947;
  double t3948;
  double t3951;
  double t3952;
  double t3955;
  double t3650;
  double t3676;
  double t3891;
  double t3901;
  double t3907;
  double t4043;
  double t4044;
  double t4051;
  double t4057;
  double t4059;
  double t4064;
  double t3713;
  double t3720;
  double t3917;
  double t3929;
  double t3930;
  double t3949;
  double t3965;
  double t3970;
  double t4157;
  double t4158;
  double t4161;
  double t4164;
  double t4165;
  double t4167;
  double t3729;
  double t3747;
  double t3753;
  double t3989;
  double t4002;
  double t4008;
  double t4246;
  double t4247;
  double t4238;
  double t4239;
  double t4240;
  double t4236;
  double t4237;
  double t4241;
  double t4245;
  double t4250;
  double t4253;
  double t4256;
  double t4257;
  double t4260;
  double t3486;
  double t3487;
  double t3490;
  double t3491;
  double t3492;
  double t3493;
  double t3595;
  double t2535;
  double t2542;
  double t2543;
  double t2581;
  double t2582;
  double t2583;
  double t3603;
  double t3620;
  double t3641;
  double t4334;
  double t4340;
  double t4341;
  double t3648;
  double t3657;
  double t4328;
  double t4331;
  double t4332;
  double t3678;
  double t3726;
  double t3757;
  double t3801;
  double t3803;
  double t3805;
  double t3806;
  double t3815;
  double t3820;
  double t3821;
  double t3823;
  double t3842;
  double t504;
  double t506;
  double t508;
  double t3844;
  double t3845;
  double t3848;
  double t3850;
  double t3874;
  double t3960;
  double t4342;
  double t3963;
  double t4473;
  double t4474;
  double t4481;
  double t4463;
  double t4467;
  double t4468;
  double t4000;
  double t4360;
  double t4010;
  double t4040;
  double t4156;
  double t4482;
  double t4486;
  double t4177;
  double t4178;
  double t4545;
  double t4547;
  double t4549;
  double t4553;
  double t4554;
  double t4555;
  double t4203;
  double t4512;
  double t4517;
  double t4218;
  double t4220;
  t37 = Cos(var1[10]);
  t54 = Cos(var1[5]);
  t82 = Sin(var1[10]);
  t63 = Sin(var1[9]);
  t91 = Sin(var1[5]);
  t17 = Sin(var1[3]);
  t115 = Cos(var1[3]);
  t120 = Cos(var1[9]);
  t121 = Cos(var1[4]);
  t130 = Sin(var1[4]);
  t221 = Cos(var1[11]);
  t232 = Sin(var1[11]);
  t297 = -1.*t221*t82;
  t305 = -1.*t37*t232;
  t309 = t297 + t305;
  t315 = t37*t221;
  t327 = -1.*t82*t232;
  t328 = t315 + t327;
  t263 = -1.*t221;
  t269 = 1. + t263;
  t276 = 0.21935*t269;
  t283 = 0.217154*t221;
  t284 = -0.12338*t232;
  t286 = t276 + t283 + t284;
  t227 = -1. + t221;
  t229 = 0.25*t227;
  t230 = -0.37338*t221;
  t237 = 0.002196*t232;
  t246 = t229 + t230 + t237;
  t406 = t221*t82;
  t407 = t37*t232;
  t409 = t406 + t407;
  t73 = -1.*t37*t54*t63;
  t92 = t82*t91;
  t97 = t73 + t92;
  t127 = t120*t37*t121;
  t131 = t54*t82;
  t142 = t37*t63*t91;
  t145 = t131 + t142;
  t146 = -1.*t130*t145;
  t148 = t127 + t146;
  t170 = t54*t63*t82;
  t177 = t37*t91;
  t181 = t170 + t177;
  t185 = -1.*t120*t121*t82;
  t186 = t37*t54;
  t188 = -1.*t63*t82*t91;
  t190 = t186 + t188;
  t195 = -1.*t130*t190;
  t203 = t185 + t195;
  t249 = t221*t246;
  t259 = -0.21935*t232;
  t291 = t286*t232;
  t293 = t249 + t259 + t291;
  t312 = -1.*t54*t63*t309;
  t339 = t328*t91;
  t341 = t312 + t339;
  t345 = t120*t121*t309;
  t353 = t54*t328;
  t358 = t63*t309*t91;
  t363 = t353 + t358;
  t369 = -1.*t130*t363;
  t371 = t345 + t369;
  t394 = 0.21935*t221;
  t396 = -1.*t221*t286;
  t398 = t246*t232;
  t399 = t394 + t396 + t398;
  t405 = -1.*t54*t63*t328;
  t414 = t409*t91;
  t419 = t405 + t414;
  t423 = t120*t121*t328;
  t428 = t54*t409;
  t432 = t63*t328*t91;
  t433 = t428 + t432;
  t434 = -1.*t130*t433;
  t436 = t423 + t434;
  t524 = -1.*t120*t37*t130;
  t529 = -1.*t121*t145;
  t531 = t524 + t529;
  t544 = t120*t82*t130;
  t556 = -1.*t121*t190;
  t565 = t544 + t556;
  t577 = -1.*t120*t309*t130;
  t578 = -1.*t121*t363;
  t596 = t577 + t578;
  t606 = -1.*t120*t328*t130;
  t611 = -1.*t121*t433;
  t623 = t606 + t611;
  t705 = t121*t63;
  t707 = t120*t130*t91;
  t712 = t705 + t707;
  t758 = -0.031996*t37;
  t760 = 0.000482*t82;
  t778 = t758 + t760;
  t757 = 0.05701*t63;
  t779 = t120*t778;
  t780 = t757 + t779;
  t783 = -1.*t37;
  t785 = 1. + t783;
  t788 = 0.21935*t785;
  t791 = 0.218868*t37;
  t793 = -0.031996*t82;
  t794 = t788 + t791 + t793;
  t800 = t54*t794;
  t808 = -1.*t120;
  t814 = 1. + t808;
  t815 = 0.0875*t814;
  t822 = 0.14451*t120;
  t828 = -1.*t63*t778;
  t836 = t815 + t822 + t828;
  t840 = -1.*t836*t91;
  t844 = t800 + t840;
  t869 = t121*t780;
  t871 = -1.*t130*t844;
  t872 = t869 + t871;
  t859 = t63*t130;
  t861 = -1.*t120*t121*t91;
  t868 = t859 + t861;
  t850 = t780*t130;
  t852 = t121*t844;
  t853 = t850 + t852;
  t782 = -1.*t780*t130;
  t845 = -1.*t121*t844;
  t846 = t782 + t845;
  t743 = t120*t37*t130;
  t749 = t121*t145;
  t755 = t743 + t749;
  t894 = t54*t836;
  t896 = t794*t91;
  t898 = t894 + t896;
  t876 = -1.*t63*t130;
  t877 = t120*t121*t91;
  t880 = t876 + t877;
  t934 = -1.*t120*t82*t130;
  t937 = t121*t190;
  t938 = t934 + t937;
  t1020 = 0.21935*t82;
  t1021 = -1.*t82*t286;
  t1037 = t37*t246;
  t1040 = t1020 + t1021 + t1037;
  t1019 = 0.036619*t63;
  t1042 = t120*t1040;
  t1043 = t1019 + t1042;
  t1050 = t37*t286;
  t1057 = t82*t246;
  t1060 = t788 + t1050 + t1057;
  t1066 = t54*t1060;
  t1068 = 0.124119*t120;
  t1070 = -1.*t63*t1040;
  t1077 = t815 + t1068 + t1070;
  t1109 = -1.*t1077*t91;
  t1110 = t1066 + t1109;
  t1138 = t121*t1043;
  t1142 = -1.*t130*t1110;
  t1143 = t1138 + t1142;
  t1123 = t1043*t130;
  t1130 = t121*t1110;
  t1133 = t1123 + t1130;
  t1014 = t120*t309*t130;
  t1017 = t121*t363;
  t1018 = t1014 + t1017;
  t1044 = -1.*t1043*t130;
  t1113 = -1.*t121*t1110;
  t1114 = t1044 + t1113;
  t1162 = t54*t1077;
  t1164 = t1060*t91;
  t1166 = t1162 + t1164;
  t1264 = t120*t328*t130;
  t1265 = t121*t433;
  t1267 = t1264 + t1265;
  t1407 = t37*t54*t63;
  t1418 = -1.*t82*t91;
  t1419 = t1407 + t1418;
  t1399 = -1.*t54*t63*t82;
  t1403 = -1.*t37*t91;
  t1404 = t1399 + t1403;
  t1441 = t54*t63*t309;
  t1442 = -1.*t328*t91;
  t1445 = t1441 + t1442;
  t1425 = t54*t63*t328;
  t1434 = -1.*t409*t91;
  t1439 = t1425 + t1434;
  t900 = -1.*t120*t54*t898;
  t1729 = -1.*t54*t836;
  t1733 = -1.*t794*t91;
  t1742 = t1729 + t1733;
  t919 = t898*t97;
  t965 = t120*t54*t898;
  t996 = -1.*t181*t898;
  t1167 = t120*t54*t1166;
  t1836 = -1.*t54*t1077;
  t1837 = -1.*t1060*t91;
  t1844 = t1836 + t1837;
  t1228 = -1.*t1166*t341;
  t1306 = -1.*t120*t54*t1166;
  t1345 = t1166*t419;
  t1746 = t120*t91*t898;
  t1750 = t145*t898;
  t1752 = t844*t97;
  t903 = -1.*t868*t853;
  t905 = -1.*t712*t872;
  t906 = t900 + t903 + t905;
  t923 = t755*t853;
  t925 = t148*t872;
  t927 = t919 + t923 + t925;
  t1795 = -1.*t120*t91*t898;
  t971 = t868*t853;
  t974 = t712*t872;
  t986 = t965 + t971 + t974;
  t1808 = -1.*t181*t844;
  t1813 = -1.*t898*t190;
  t1000 = -1.*t853*t938;
  t1002 = -1.*t872*t203;
  t1003 = t996 + t1000 + t1002;
  t1848 = -1.*t120*t91*t1166;
  t1182 = t868*t1133;
  t1189 = t712*t1143;
  t1190 = t1167 + t1182 + t1189;
  t1860 = -1.*t1166*t363;
  t1862 = -1.*t1110*t341;
  t1234 = -1.*t1133*t1018;
  t1236 = -1.*t1143*t371;
  t1244 = t1228 + t1234 + t1236;
  t1928 = t120*t91*t1166;
  t1307 = -1.*t868*t1133;
  t1316 = -1.*t712*t1143;
  t1318 = t1306 + t1307 + t1316;
  t1958 = t1110*t419;
  t2011 = t1166*t433;
  t1347 = t1133*t1267;
  t1350 = t1143*t436;
  t1351 = t1345 + t1347 + t1350;
  t1787 = t63*t780;
  t2362 = -0.05701*t63;
  t2365 = -1.*t120*t778;
  t2368 = t2362 + t2365;
  t2371 = 0.05701*t120;
  t2373 = t2371 + t828;
  t1800 = t120*t780*t82;
  t1710 = -1.*t63*t780;
  t1757 = t120*t37*t780;
  t1895 = -1.*t63*t1043;
  t2499 = -0.036619*t63;
  t2503 = -1.*t120*t1040;
  t2505 = t2499 + t2503;
  t2511 = 0.036619*t120;
  t2514 = t2511 + t1070;
  t1940 = t120*t1043*t328;
  t1824 = t63*t1043;
  t1870 = -1.*t120*t1043*t309;
  t2661 = -1.*t37*t121*t63;
  t2668 = -1.*t120*t37*t130*t91;
  t2669 = t2661 + t2668;
  t2681 = t121*t63*t82;
  t2682 = t120*t82*t130*t91;
  t2687 = t2681 + t2682;
  t2707 = -1.*t121*t63*t309;
  t2711 = -1.*t120*t309*t130*t91;
  t2713 = t2707 + t2711;
  t2739 = -1.*t121*t63*t328;
  t2744 = -1.*t120*t328*t130*t91;
  t2749 = t2739 + t2744;
  t1713 = t120*t91*t844;
  t1715 = t1710 + t1713 + t900;
  t2460 = -1.*t120*t780;
  t2461 = -1.*t63*t2373;
  t2444 = -1.*t37*t63*t780;
  t2445 = t120*t37*t2373;
  t1758 = t145*t844;
  t1759 = t1757 + t1758 + t919;
  t1788 = -1.*t120*t91*t844;
  t1789 = t1787 + t1788 + t965;
  t2927 = Power(t54,2);
  t2370 = t120*t780;
  t2377 = t63*t2373;
  t2932 = Power(t91,2);
  t2392 = -1.*t63*t780*t82;
  t2395 = t120*t2373*t82;
  t1801 = -1.*t844*t190;
  t1802 = t1800 + t996 + t1801;
  t1829 = -1.*t120*t91*t1110;
  t1833 = t1824 + t1829 + t1167;
  t2554 = t120*t1043;
  t2557 = t63*t2514;
  t2567 = t63*t1043*t309;
  t2568 = -1.*t120*t2514*t309;
  t1871 = -1.*t1110*t363;
  t1873 = t1870 + t1871 + t1228;
  t1896 = t120*t91*t1110;
  t1898 = t1895 + t1896 + t1306;
  t2510 = -1.*t120*t1043;
  t2515 = -1.*t63*t2514;
  t2527 = -1.*t63*t1043*t328;
  t2530 = t120*t2514*t328;
  t1941 = t1110*t433;
  t1943 = t1940 + t1345 + t1941;
  t2592 = -1.*t37*t63*t130;
  t2594 = t120*t37*t121*t91;
  t2595 = t2592 + t2594;
  t2962 = -1.*t120*t37*t54*t898;
  t2968 = t54*t2368*t97;
  t2931 = -1.*t120*t2927*t2368;
  t3251 = t2373*t130;
  t3252 = -1.*t121*t2368*t91;
  t3256 = t3251 + t3252;
  t2948 = t54*t63*t898;
  t3258 = t121*t2373;
  t3259 = t2368*t130*t91;
  t3260 = t3258 + t3259;
  t3198 = t120*t130;
  t3199 = t121*t63*t91;
  t3202 = t3198 + t3199;
  t2603 = t63*t82*t130;
  t2604 = -1.*t120*t121*t82*t91;
  t2606 = t2603 + t2604;
  t2993 = t120*t2927*t2368;
  t3006 = -1.*t54*t63*t898;
  t3273 = t120*t121;
  t3274 = -1.*t63*t130*t91;
  t3275 = t3273 + t3274;
  t3009 = -1.*t54*t2368*t181;
  t3011 = -1.*t120*t54*t82*t898;
  t2608 = -1.*t63*t309*t130;
  t2612 = t120*t121*t309*t91;
  t2614 = t2608 + t2612;
  t3026 = t120*t2927*t2505;
  t3032 = -1.*t54*t63*t1166;
  t3047 = t120*t54*t309*t1166;
  t3049 = -1.*t54*t2505*t341;
  t3342 = t2514*t130;
  t3343 = -1.*t121*t2505*t91;
  t3346 = t3342 + t3343;
  t3362 = t121*t2514;
  t3377 = t2505*t130*t91;
  t3378 = t3362 + t3377;
  t2620 = -1.*t63*t328*t130;
  t2640 = t120*t121*t328*t91;
  t2646 = t2620 + t2640;
  t3080 = -1.*t120*t2927*t2505;
  t3088 = t54*t63*t1166;
  t3109 = -1.*t120*t54*t328*t1166;
  t3111 = t54*t2505*t419;
  t3481 = -1.*t37*t221;
  t3483 = t82*t232;
  t3485 = t3481 + t3483;
  t2434 = -1.*t120*t836;
  t2439 = t1710 + t2434;
  t3535 = 0.000482*t37;
  t3537 = 0.031996*t82;
  t3539 = t3535 + t3537;
  t2359 = t120*t836;
  t2360 = t1787 + t2359;
  t2469 = -1.*t37*t63*t836;
  t2470 = t794*t82;
  t3522 = Power(t120,2);
  t3548 = Power(t63,2);
  t2491 = -1.*t120*t1077;
  t2494 = t1895 + t2491;
  t3627 = 0.21935*t37;
  t3630 = -1.*t37*t286;
  t3631 = -1.*t82*t246;
  t3633 = t3627 + t3630 + t3631;
  t2549 = t120*t1077;
  t2550 = t1824 + t2549;
  t3702 = -1.*t54*t82;
  t3703 = -1.*t37*t63*t91;
  t3708 = t3702 + t3703;
  t3732 = t54*t309;
  t3733 = t63*t3485*t91;
  t3742 = t3732 + t3733;
  t3775 = -1.*t120*t37*t121;
  t3776 = -1.*t130*t3708;
  t3783 = t3775 + t3776;
  t478 = t115*t181;
  t480 = -1.*t17*t203;
  t482 = t478 + t480;
  t488 = t115*t341;
  t492 = -1.*t17*t371;
  t496 = t488 + t492;
  t3807 = -1.*t54*t63*t3485;
  t3811 = t309*t91;
  t3812 = t3807 + t3811;
  t3816 = t120*t121*t3485;
  t3817 = -1.*t130*t3742;
  t3818 = t3816 + t3817;
  t3547 = t3522*t37*t3539;
  t3550 = -1.*t120*t780*t82;
  t3892 = t54*t778;
  t3893 = t63*t3539*t91;
  t3894 = t3892 + t3893;
  t3878 = -1.*t54*t63*t3539;
  t3879 = t778*t91;
  t3880 = t3878 + t3879;
  t3578 = t3522*t3539*t82;
  t3605 = t120*t1043*t309;
  t3634 = t3522*t3633*t328;
  t3946 = -1.*t54*t63*t3633;
  t3947 = t1040*t91;
  t3948 = t3946 + t3947;
  t3951 = t54*t1040;
  t3952 = t63*t3633*t91;
  t3955 = t3951 + t3952;
  t3650 = -1.*t3522*t3633*t309;
  t3676 = -1.*t120*t1043*t3485;
  t3891 = -1.*t120*t54*t3880;
  t3901 = t181*t898;
  t3907 = t3880*t97;
  t4043 = t120*t3539*t130;
  t4044 = t121*t3894;
  t4051 = t4043 + t4044;
  t4057 = t120*t121*t3539;
  t4059 = -1.*t130*t3894;
  t4064 = t4057 + t4059;
  t3713 = t121*t3708;
  t3720 = t524 + t3713;
  t3917 = t120*t54*t3880;
  t3929 = -1.*t181*t3880;
  t3930 = -1.*t898*t1419;
  t3949 = -1.*t120*t54*t3948;
  t3965 = t3948*t419;
  t3970 = t1166*t341;
  t4157 = t120*t3633*t130;
  t4158 = t121*t3955;
  t4161 = t4157 + t4158;
  t4164 = t120*t121*t3633;
  t4165 = -1.*t130*t3955;
  t4167 = t4164 + t4165;
  t3729 = t120*t3485*t130;
  t3747 = t121*t3742;
  t3753 = t3729 + t3747;
  t3989 = t120*t54*t3948;
  t4002 = -1.*t1166*t3812;
  t4008 = -1.*t3948*t341;
  t4246 = -0.12338*t221;
  t4247 = t4246 + t237;
  t4238 = 0.002196*t221;
  t4239 = 0.12338*t232;
  t4240 = t4238 + t4239;
  t4236 = -0.21935*t221;
  t4237 = t221*t286;
  t4241 = t221*t4240;
  t4245 = -1.*t246*t232;
  t4250 = t4247*t232;
  t4253 = t4236 + t4237 + t4241 + t4245 + t4250;
  t4256 = -1.*t221*t4247;
  t4257 = t4240*t232;
  t4260 = t249 + t4256 + t259 + t291 + t4257;
  t3486 = 5.e-6*t3485;
  t3487 = -0.008825179*t309*t399;
  t3490 = -0.124119*t328;
  t3491 = -0.0875*t3485;
  t3492 = t3490 + t3491;
  t3493 = -0.241*t293*t3492;
  t3595 = -5.e-6*t120*t309;
  t2535 = t1060*t409;
  t2542 = -1.*t63*t1077*t328;
  t2543 = t2535 + t1940 + t2542;
  t2581 = t63*t1077*t309;
  t2582 = -1.*t1060*t328;
  t2583 = t1870 + t2581 + t2582;
  t3603 = t120*t2494*t309;
  t3620 = -1.*t63*t1077*t309;
  t3641 = t1060*t328;
  t4334 = -1.*t82*t4247;
  t4340 = t37*t4240;
  t4341 = t4334 + t4340;
  t3648 = t120*t2550*t3485;
  t3657 = -1.*t1060*t309;
  t4328 = t37*t4247;
  t4331 = t82*t4240;
  t4332 = t4328 + t4331;
  t3678 = t63*t1077*t3485;
  t3726 = -0.241*t399*t1018;
  t3757 = -0.241*t293*t3753;
  t3801 = t17*t341;
  t3803 = t115*t371;
  t3805 = t3801 + t3803;
  t3806 = -0.241*t399*t3805;
  t3815 = t17*t3812;
  t3820 = t115*t3818;
  t3821 = t3815 + t3820;
  t3823 = -0.241*t293*t3821;
  t3842 = -0.241*t399*t496;
  t504 = t115*t419;
  t506 = -1.*t17*t436;
  t508 = t504 + t506;
  t3844 = t115*t3812;
  t3845 = -1.*t17*t3818;
  t3848 = t3844 + t3845;
  t3850 = -0.241*t293*t3848;
  t3874 = 5.e-6*t1445;
  t3960 = t341*t1898;
  t4342 = t3522*t4341*t328;
  t3963 = t1110*t363;
  t4473 = -1.*t54*t63*t4341;
  t4474 = t4332*t91;
  t4481 = t4473 + t4474;
  t4463 = t54*t4332;
  t4467 = t63*t4341*t91;
  t4468 = t4463 + t4467;
  t4000 = t3812*t1833;
  t4360 = -1.*t3522*t4341*t309;
  t4010 = -1.*t1110*t3742;
  t4040 = 5.e-6*t596;
  t4156 = t1018*t1318;
  t4482 = -1.*t120*t54*t4481;
  t4486 = t4481*t419;
  t4177 = t1133*t1018;
  t4178 = t1143*t371;
  t4545 = t120*t4341*t130;
  t4547 = t121*t4468;
  t4549 = t4545 + t4547;
  t4553 = t120*t121*t4341;
  t4554 = -1.*t130*t4468;
  t4555 = t4553 + t4554;
  t4203 = t3753*t1190;
  t4512 = t120*t54*t4481;
  t4517 = -1.*t4481*t341;
  t4218 = -1.*t1133*t3753;
  t4220 = -1.*t1143*t3818;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(0.048889888*(-1.*t17*t181 - 1.*t115*t203) - 0.241*t293*(-1.*t17*t341 - 1.*t115*t371) - 0.241*t399*(-1.*t17*t419 - 1.*t115*t436) - 0.000736496*(-1.*t115*t148 - 1.*t17*t97))*var2[1] - 0.5*(0.048889888*t482 - 0.241*t293*t496 - 0.241*t399*t508 - 0.000736496*(-1.*t148*t17 + t115*t97))*var2[2])*var2[10];
  p_output1[4]=(-0.5*(-0.000736496*t148 + 0.048889888*t203 - 0.241*t293*t371 - 0.241*t399*t436)*var2[0] - 0.5*(0.000736496*t17*t531 - 0.048889888*t17*t565 + 0.241*t17*t293*t596 + 0.241*t17*t399*t623)*var2[1] - 0.5*(-0.000736496*t115*t531 + 0.048889888*t115*t565 - 0.241*t115*t293*t596 - 0.241*t115*t399*t623)*var2[2] - 0.5*(0.000085*t148 + 5.e-6*(-1.*t120*t121*t328 + t130*t433) - 0.015477*t712 + 1.e-5*(t130*t190 + t120*t121*t82) - 0.241*t293*(t1318*t436 + t1351*t712 + (t1143*t1267 + t1114*t436 + t1133*t436 + t1143*t623)*t868 + t1267*(-1.*t1114*t712 - 1.*t1133*t712 - 1.*t1143*t868 - 1.*t1143*t880)) - 0.241*t399*(t1190*t371 + t1244*t712 + (-1.*t1018*t1143 - 1.*t1114*t371 - 1.*t1133*t371 - 1.*t1143*t596)*t868 + t1018*(t1114*t712 + t1133*t712 + t1143*t868 + t1143*t880)) + 0.048889888*(t868*(t148*t846 + t148*t853 + t531*t872 + t755*t872) + t755*(-1.*t712*t846 - 1.*t712*t853 - 1.*t868*t872 - 1.*t872*t880) + t148*t906 + t712*t927) - 0.000736496*(t1003*t712 + (t712*t846 + t712*t853 + t868*t872 + t872*t880)*t938 + t868*(-1.*t203*t846 - 1.*t203*t853 - 1.*t565*t872 - 1.*t872*t938) + t203*t986))*var2[3])*var2[10];
  p_output1[5]=(-0.5*(0.048889888*t121*t1404 - 0.000736496*t121*t1419 - 0.241*t121*t1445*t293 - 0.241*t121*t1439*t399)*var2[0] - 0.5*(-0.000736496*(t115*t145 + t130*t1419*t17) + 0.048889888*(t130*t1404*t17 + t115*t190) - 0.241*t293*(t130*t1445*t17 + t115*t363) - 0.241*t399*(t130*t1439*t17 + t115*t433))*var2[1] - 0.5*(-0.000736496*(-1.*t115*t130*t1419 + t145*t17) + 0.048889888*(-1.*t115*t130*t1404 + t17*t190) - 0.241*t293*(-1.*t115*t130*t1445 + t17*t363) - 0.241*t399*(-1.*t115*t130*t1439 + t17*t433))*var2[2] - 0.5*(-1.e-5*t121*t1404 + 0.000085*t121*t1419 - 5.e-6*t121*t1439 + 0.015477*t120*t121*t54 - 0.241*t293*(t121*t1318*t1439 - 1.*t120*t121*t1351*t54 + (t1133*t121*t1439 - 1.*t1143*t130*t1439 + t121*t1267*t1844 + t1958 + t2011 - 1.*t130*t1844*t436)*t868 + t1267*(t1928 - 1.*t1110*t120*t54 + t1133*t120*t121*t54 - 1.*t1143*t120*t130*t54 + t130*t1844*t712 - 1.*t121*t1844*t868)) - 0.241*t399*(t1190*t121*t1445 - 1.*t120*t121*t1244*t54 + (-1.*t1133*t121*t1445 + t1143*t130*t1445 - 1.*t1018*t121*t1844 + t1860 + t1862 + t130*t1844*t371)*t868 + t1018*(t1848 + t1110*t120*t54 - 1.*t1133*t120*t121*t54 + t1143*t120*t130*t54 - 1.*t130*t1844*t712 + t121*t1844*t868)) + 0.048889888*(t868*(-1.*t130*t148*t1742 + t1750 + t1752 + t121*t1742*t755 + t121*t1419*t853 - 1.*t130*t1419*t872) + t755*(t1746 + t130*t1742*t712 - 1.*t120*t54*t844 + t120*t121*t54*t853 - 1.*t121*t1742*t868 - 1.*t120*t130*t54*t872) + t121*t1419*t906 - 1.*t120*t121*t54*t927) - 0.000736496*(-1.*t1003*t120*t121*t54 + (t1795 - 1.*t130*t1742*t712 + t120*t54*t844 - 1.*t120*t121*t54*t853 + t121*t1742*t868 + t120*t130*t54*t872)*t938 + t868*(t1808 + t1813 + t130*t1742*t203 - 1.*t121*t1404*t853 + t130*t1404*t872 - 1.*t121*t1742*t938) + t121*t1404*t986))*var2[3] - 0.5*(0.000085*t145 + 0.015477*t120*t91 + 5.e-6*(-1.*t409*t54 - 1.*t328*t63*t91) + 1.e-5*(-1.*t37*t54 + t63*t82*t91) - 0.000736496*(t1789*t190 + t120*t54*(t1808 + t1813 - 1.*t1742*t190 - 1.*t1404*t844) - 1.*t120*t1802*t91 + t181*(t1795 - 1.*t120*t1742*t91)) - 0.241*t399*(t1833*t363 + t120*(-1.*t1110*t1445 + t1860 + t1862 - 1.*t1844*t363)*t54 - 1.*t120*t1873*t91 + t341*(t1848 - 1.*t120*t1844*t91)) - 0.241*t293*(t1898*t433 + t120*(t1110*t1439 + t1958 + t2011 + t1844*t433)*t54 - 1.*t120*t1943*t91 + t419*(t1928 + t120*t1844*t91)) + 0.048889888*(t145*t1715 + t120*t54*(t145*t1742 + t1750 + t1752 + t1419*t844) - 1.*t120*t1759*t91 + (t1746 + t120*t1742*t91)*t97))*var2[4])*var2[10];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(-0.5*(-0.000736496*t2595 + 0.048889888*t2606 - 0.241*t2614*t293 - 0.241*t2646*t399)*var2[0] - 0.5*(-0.241*t293*(-1.*t17*t2713 - 1.*t115*t120*t309*t54) - 0.241*t399*(-1.*t17*t2749 - 1.*t115*t120*t328*t54) - 0.000736496*(-1.*t17*t2669 - 1.*t115*t120*t37*t54) + 0.048889888*(-1.*t17*t2687 + t115*t120*t54*t82))*var2[1] - 0.5*(-0.241*t293*(t115*t2713 - 1.*t120*t17*t309*t54) - 0.241*t399*(t115*t2749 - 1.*t120*t17*t328*t54) - 0.000736496*(t115*t2669 - 1.*t120*t17*t37*t54) + 0.048889888*(t115*t2687 + t120*t17*t54*t82))*var2[2] - 0.5*(0.000085*t2595 - 0.015477*t3202 - 0.241*t293*(t1318*t2646 + t1351*t3202 + (t1133*t2646 + t1143*t2749 + t3109 + t3111 + t1267*t3346 + t3378*t436)*t868 + t1267*(t3080 + t3088 - 1.*t1133*t3202 - 1.*t1143*t3275 - 1.*t3378*t712 - 1.*t3346*t868)) - 0.241*t399*(t1190*t2614 + t1244*t3202 + (-1.*t1133*t2614 - 1.*t1143*t2713 + t3047 + t3049 - 1.*t1018*t3346 - 1.*t3378*t371)*t868 + t1018*(t3026 + t3032 + t1133*t3202 + t1143*t3275 + t3378*t712 + t3346*t868)) + 5.e-6*(t130*t328*t63 - 1.*t120*t121*t328*t91) + 1.e-5*(-1.*t130*t63*t82 + t120*t121*t82*t91) + 0.048889888*(t868*(t2962 + t2968 + t148*t3260 + t3256*t755 + t2595*t853 + t2669*t872) + t755*(t2931 + t2948 - 1.*t3260*t712 - 1.*t3202*t853 - 1.*t3256*t868 - 1.*t3275*t872) + t2595*t906 + t3202*t927) - 0.000736496*(t1003*t3202 + (t2993 + t3006 + t3260*t712 + t3202*t853 + t3256*t868 + t3275*t872)*t938 + t868*(t3009 + t3011 - 1.*t203*t3260 - 1.*t2606*t853 - 1.*t2687*t872 - 1.*t3256*t938) + t2606*t986))*var2[3] - 0.5*(5.e-6*t120*t328*t54 - 0.000085*t120*t37*t54 + 0.015477*t54*t63 - 1.e-5*t120*t54*t82 - 0.241*t293*(-1.*t120*t1898*t328*t54 - 1.*t1943*t54*t63 + t120*t54*(t2527 + t2530 + t3109 + t3111 + t1110*t120*t328*t91 - 1.*t2505*t433*t91) + t419*(t2510 + t2515 - 1.*t120*t2505*t2932 + t3080 + t3088 - 1.*t1110*t63*t91)) - 0.241*t399*(-1.*t120*t1833*t309*t54 - 1.*t1873*t54*t63 + t120*t54*(t2567 + t2568 + t3047 + t3049 - 1.*t1110*t120*t309*t91 + t2505*t363*t91) + t341*(t2554 + t2557 + t120*t2505*t2932 + t3026 + t3032 + t1110*t63*t91)) - 0.000736496*(-1.*t1802*t54*t63 + t120*t1789*t54*t82 + t181*(t2370 + t2377 + t120*t2368*t2932 + t2993 + t3006 + t63*t844*t91) + t120*t54*(t2392 + t2395 + t3009 + t3011 + t190*t2368*t91 + t120*t82*t844*t91)) + 0.048889888*(-1.*t120*t1715*t37*t54 - 1.*t1759*t54*t63 + t120*t54*(t2444 + t2445 + t2962 + t2968 - 1.*t145*t2368*t91 + t120*t37*t844*t91) + (t2460 + t2461 + t2931 - 1.*t120*t2368*t2932 + t2948 - 1.*t63*t844*t91)*t97))*var2[4] - 0.5*(-0.015477*t120 + 5.e-6*t328*t63 - 0.000085*t37*t63 - 0.241*t399*(t120*t2583 - 1.*t2550*t309*t63 + t120*t309*(t120*t2505 + t2554 + t2557 - 1.*t1077*t63) + t63*(t2567 + t2568 + t1077*t120*t309 + t2505*t309*t63)) - 0.241*t293*(t120*t2543 - 1.*t2494*t328*t63 + t120*t328*(-1.*t120*t2505 + t2510 + t2515 + t1077*t63) + t63*(t2527 + t2530 - 1.*t1077*t120*t328 - 1.*t2505*t328*t63)) - 1.e-5*t63*t82 + 0.048889888*(t120*(t1757 + t2469 + t2470) - 1.*t2439*t37*t63 + t63*(t2444 + t2445 - 1.*t2368*t37*t63 - 1.*t120*t37*t836) + t120*t37*(-1.*t120*t2368 + t2460 + t2461 + t63*t836)) - 0.000736496*(t2360*t63*t82 - 1.*t120*t82*(t120*t2368 + t2370 + t2377 - 1.*t63*t836) + t63*(t2392 + t2395 - 1.*t2368*t63*t82 - 1.*t120*t82*t836) + t120*(t1800 - 1.*t37*t794 - 1.*t63*t82*t836)))*var2[5])*var2[10];
  p_output1[10]=(-0.5*(0.048889888*t3720 + t3726 + t3757 - 0.000736496*t938)*var2[0] - 0.5*(0.048889888*(t115*t1419 - 1.*t17*t3783) + t3842 + t3850 - 0.000736496*t482)*var2[1] - 0.5*(-0.000736496*(t17*t181 + t115*t203) + 0.048889888*(t1419*t17 + t115*t3783) + t3806 + t3823)*var2[2] - 0.5*(t4040 + 1.e-5*(-1.*t121*t3708 + t743) - 0.241*t293*(t4156 + (t3965 + t3970 + t1267*t4161 + t4177 + t4178 + t4167*t436)*t868 + t1267*(t3949 - 1.*t4167*t712 - 1.*t4161*t868)) - 0.241*t399*(t4203 + (t4002 + t4008 - 1.*t1018*t4161 - 1.*t371*t4167 + t4218 + t4220)*t868 + t1018*(t3989 + t4167*t712 + t4161*t868)) + 0.000085*t938 + 0.048889888*(t755*(t3891 - 1.*t4064*t712 - 1.*t4051*t868) + t906*t938 + t868*(t3901 + t3907 + t148*t4064 + t4051*t755 + t203*t872 + t853*t938)) - 0.000736496*((t3917 + t4064*t712 + t4051*t868)*t938 + t868*(t3929 + t3930 - 1.*t203*t4064 - 1.*t3720*t853 - 1.*t3783*t872 - 1.*t4051*t938) + t3720*t986))*var2[3] - 0.5*(0.000085*t181 + t3874 - 0.000736496*(t1419*t1789 + t120*t54*(t1757 + t3578 - 1.*t190*t3894 + t3929 + t3930 - 1.*t3708*t844) + t181*(t3917 + t120*t3539*t63 - 1.*t120*t3894*t91)) - 0.241*t399*(t4000 + t120*(t3650 + t3676 - 1.*t363*t3955 + t4002 + t4008 + t4010)*t54 + t341*(t3989 + t120*t3633*t63 - 1.*t120*t3955*t91)) - 0.241*t293*(t3960 + t120*(t3605 + t3634 + t3963 + t3965 + t3970 + t3955*t433)*t54 + t419*(t3949 - 1.*t120*t3633*t63 + t120*t3955*t91)) + 1.e-5*t97 + 0.048889888*(t1715*t181 + t120*t54*(t3547 + t3550 + t145*t3894 + t3901 + t3907 + t190*t844) + (t3891 - 1.*t120*t3539*t63 + t120*t3894*t91)*t97))*var2[4] - 0.5*(t3595 + 1.e-5*t120*t37 - 0.241*t399*(t3648 + (-1.*t1040*t328 - 1.*t309*t3548*t3633 + t3650 + t3657 + t3676 + t3678)*t63) - 0.241*t293*(t3603 + (t3605 + t3620 + t328*t3548*t3633 + t3634 + t3641 + t1040*t409)*t63) - 0.000085*t120*t82 - 0.000736496*(-1.*t120*t2360*t37 + t63*(t1757 + t2469 + t2470 + t3578 - 1.*t37*t778 + t3539*t3548*t82)) + 0.048889888*(-1.*t120*t2439*t82 + t63*(t3547 + t3550 + t3539*t3548*t37 + t37*t794 + t778*t82 + t63*t82*t836)))*var2[5] - 0.5*(t3486 + t3487 + t3493 - 0.00270221251488*t37 + 0.00005198763696*t82)*var2[9])*var2[10];
  p_output1[11]=var2[10]*(-0.5*(t3726 + t3757 - 0.241*t1018*t4253 - 0.241*t1267*t4260)*var2[0] - 0.5*(t3842 + t3850 - 0.241*t4253*t496 - 0.241*t4260*t508)*var2[1] - 0.5*(t3806 + t3823 - 0.241*t3805*t4253 - 0.241*t4260*(t17*t419 + t115*t436))*var2[2] - 0.5*(t4040 - 0.241*t4260*(t1018*t1190 + t1244*t868) - 0.241*t4253*(t1267*t1318 + t1351*t868) - 0.241*t293*(t4156 + (t3970 + t4177 + t4178 + t4486 + t1267*t4549 + t436*t4555)*t868 + t1267*(t4482 - 1.*t4555*t712 - 1.*t4549*t868)) - 0.241*t399*(t4203 + (t4002 + t4218 + t4220 + t4517 - 1.*t1018*t4549 - 1.*t371*t4555)*t868 + t1018*(t4512 + t4555*t712 + t4549*t868)))*var2[3] - 0.5*(t3874 - 0.241*t4260*(t1833*t341 + t120*t1873*t54) - 0.241*t4253*(t1898*t419 + t120*t1943*t54) - 0.241*t399*(t4000 + t120*(t3676 + t4002 + t4010 + t4360 - 1.*t363*t4468 + t4517)*t54 + t341*(t4512 + t120*t4341*t63 - 1.*t120*t4468*t91)) - 0.241*t293*(t3960 + t120*(t3605 + t3963 + t3970 + t4342 + t433*t4468 + t4486)*t54 + t419*(t4482 - 1.*t120*t4341*t63 + t120*t4468*t91)))*var2[4] - 0.5*(t3595 - 0.241*t4253*(t120*t2494*t328 + t2543*t63) - 0.241*t4260*(t120*t2550*t309 + t2583*t63) - 0.241*t293*(t3603 + (t3605 + t3620 + t3641 + t409*t4332 + t328*t3548*t4341 + t4342)*t63) - 0.241*t399*(t3648 + (t3657 + t3676 + t3678 - 1.*t328*t4332 - 1.*t309*t3548*t4341 + t4360)*t63))*var2[5] - 0.5*(t3486 + t3487 + t3493 - 0.241*(-0.0875*t309 - 0.124119*t409)*t4253 - 0.008825179*t328*t4260)*var2[9] - 0.5*(-0.482*t293*t4253 - 0.482*t399*t4260)*var2[10] - 0.5*(0.02973458*t4253 - 0.000529236*t4260)*var2[11]);
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec11_laikago_description.hh"

namespace SymFunction
{

void Ce3_vec11_laikago_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
