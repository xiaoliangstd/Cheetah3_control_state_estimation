/*
 * Automatically Generated from Mathematica.
 * Tue 10 Dec 2019 16:02:57 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1187;
  double t2014;
  double t2801;
  double t2073;
  double t2942;
  double t605;
  double t3533;
  double t3575;
  double t3916;
  double t4844;
  double t5660;
  double t5703;
  double t5826;
  double t5829;
  double t5843;
  double t5867;
  double t5887;
  double t5900;
  double t5767;
  double t5773;
  double t5774;
  double t5783;
  double t5804;
  double t5823;
  double t5670;
  double t5676;
  double t5677;
  double t5706;
  double t5707;
  double t6020;
  double t6023;
  double t6025;
  double t2085;
  double t3013;
  double t3120;
  double t4113;
  double t4924;
  double t5202;
  double t5213;
  double t5310;
  double t5312;
  double t5392;
  double t5396;
  double t5400;
  double t5426;
  double t5447;
  double t5466;
  double t5541;
  double t5580;
  double t5585;
  double t5723;
  double t5766;
  double t5824;
  double t5825;
  double t5861;
  double t5915;
  double t5933;
  double t5951;
  double t5953;
  double t5954;
  double t5955;
  double t5957;
  double t5965;
  double t5977;
  double t5989;
  double t5991;
  double t6000;
  double t6005;
  double t6028;
  double t6042;
  double t6047;
  double t6050;
  double t6052;
  double t6064;
  double t6123;
  double t6207;
  double t7101;
  double t7243;
  double t7441;
  double t7589;
  double t7603;
  double t7631;
  double t7690;
  double t7694;
  double t8061;
  double t8399;
  double t8415;
  double t8554;
  double t8901;
  double t8903;
  double t8922;
  double t9527;
  double t9629;
  double t9639;
  double t9522;
  double t9730;
  double t9731;
  double t9823;
  double t10172;
  double t10185;
  double t10187;
  double t10192;
  double t10257;
  double t10322;
  double t10400;
  double t10470;
  double t10493;
  double t10495;
  double t10595;
  double t10872;
  double t10873;
  double t10938;
  double t15068;
  double t16029;
  double t16219;
  double t14154;
  double t14247;
  double t15064;
  double t12650;
  double t12679;
  double t12706;
  double t9801;
  double t11186;
  double t11319;
  double t9511;
  double t9513;
  double t9518;
  double t17466;
  double t17548;
  double t17588;
  double t16956;
  double t16961;
  double t16971;
  double t18497;
  double t18506;
  double t18507;
  double t18855;
  double t18867;
  double t18876;
  double t18879;
  double t18851;
  double t18887;
  double t18895;
  double t18905;
  double t18908;
  double t18910;
  double t18911;
  double t18955;
  double t19000;
  double t19030;
  double t19037;
  double t19043;
  double t19106;
  double t19109;
  double t19115;
  double t19068;
  double t19071;
  double t19078;
  double t18832;
  double t18843;
  double t18848;
  double t18899;
  double t19057;
  double t19064;
  double t19125;
  double t19126;
  double t19130;
  double t19242;
  double t19245;
  double t19246;
  double t19439;
  double t19445;
  double t19453;
  double t19398;
  double t19412;
  double t19429;
  double t19493;
  double t19503;
  double t19504;
  double t19473;
  double t19475;
  double t19478;
  double t17822;
  double t19883;
  double t19893;
  double t19898;
  double t18214;
  double t18577;
  double t18741;
  double t19131;
  double t20071;
  double t20081;
  double t20097;
  double t19202;
  double t19303;
  double t19362;
  double t19908;
  double t19937;
  double t19941;
  double t17826;
  double t17839;
  double t17868;
  double t18270;
  double t18278;
  double t18287;
  double t19995;
  double t18580;
  double t18583;
  double t18587;
  double t20017;
  double t20021;
  double t18747;
  double t18795;
  double t18816;
  double t20108;
  double t19132;
  double t19139;
  double t19141;
  double t20115;
  double t20139;
  double t19203;
  double t19210;
  double t19233;
  double t20220;
  double t19306;
  double t19315;
  double t19336;
  double t20264;
  double t20281;
  double t19364;
  double t19369;
  double t19372;
  double t19979;
  double t21219;
  double t21246;
  double t21267;
  double t21427;
  double t21436;
  double t20007;
  double t19859;
  double t19955;
  double t20191;
  double t24751;
  double t24753;
  double t24763;
  double t24771;
  double t24778;
  double t20241;
  double t20028;
  double t20150;
  double t26380;
  double t26389;
  double t26425;
  double t26706;
  double t26708;
  double t26709;
  double t26890;
  double t26961;
  double t26990;
  double t27048;
  double t27050;
  double t27052;
  double t19867;
  double t19868;
  double t23457;
  double t23737;
  double t23350;
  double t23354;
  double t19959;
  double t19960;
  double t19980;
  double t19989;
  double t27252;
  double t21368;
  double t21445;
  double t27257;
  double t21499;
  double t21528;
  double t20009;
  double t20012;
  double t20031;
  double t20065;
  double t25028;
  double t25062;
  double t25087;
  double t25088;
  double t20152;
  double t20181;
  double t20194;
  double t20195;
  double t24767;
  double t24803;
  double t24909;
  double t24914;
  double t20242;
  double t20248;
  double t25735;
  double t25739;
  double t25740;
  double t27396;
  double t27414;
  double t27253;
  double t27884;
  double t27887;
  double t27888;
  double t27316;
  double t27891;
  double t27894;
  double t27898;
  double t27855;
  double t27856;
  double t27863;
  double t26105;
  double t26141;
  double t26147;
  double t27526;
  double t27556;
  double t27956;
  double t27958;
  double t27965;
  double t27577;
  double t27618;
  double t26201;
  double t26227;
  double t26256;
  double t27661;
  double t27681;
  double t27698;
  double t27713;
  double t28110;
  double t28111;
  double t28113;
  double t28117;
  double t28118;
  double t28121;
  double t26305;
  double t26308;
  double t26311;
  double t27790;
  double t27806;
  double t27812;
  double t27816;
  double t28266;
  double t28267;
  double t28268;
  double t22051;
  double t22102;
  double t28410;
  double t28414;
  double t28415;
  double t21126;
  double t21187;
  double t24365;
  double t24377;
  double t28402;
  double t28447;
  double t24706;
  double t24708;
  double t28546;
  double t28548;
  double t28553;
  double t28554;
  double t24969;
  double t24991;
  double t28620;
  double t28622;
  double t28623;
  double t28733;
  double t28747;
  double t28748;
  double t28780;
  double t28782;
  double t28785;
  double t6647;
  double t6764;
  double t6765;
  double t6926;
  double t6933;
  double t6937;
  double t28852;
  double t28855;
  double t28857;
  double t28864;
  double t28867;
  double t28869;
  double t28435;
  double t28462;
  double t28988;
  double t28989;
  double t29028;
  double t28972;
  double t28975;
  double t28982;
  double t28504;
  double t28541;
  double t28561;
  double t29219;
  double t29220;
  double t29225;
  double t29232;
  double t29234;
  double t29239;
  double t28589;
  double t28602;
  double t28986;
  double t29036;
  double t29039;
  double t29588;
  double t29591;
  double t29594;
  double t29614;
  double t29621;
  double t29623;
  double t28654;
  double t28655;
  double t29071;
  double t29119;
  double t29126;
  double t29226;
  double t29302;
  double t29304;
  double t29912;
  double t29916;
  double t29927;
  double t29940;
  double t29941;
  double t29956;
  double t28724;
  double t28755;
  double t28756;
  double t29395;
  double t29427;
  double t29439;
  double t30231;
  double t30237;
  double t30201;
  double t30205;
  double t30215;
  double t30193;
  double t30196;
  double t30225;
  double t30227;
  double t30243;
  double t30247;
  double t30256;
  double t30258;
  double t30261;
  double t28270;
  double t28272;
  double t28273;
  double t28276;
  double t28280;
  double t28282;
  double t28525;
  double t24935;
  double t24941;
  double t24942;
  double t25175;
  double t25179;
  double t25247;
  double t28537;
  double t28543;
  double t28571;
  double t30452;
  double t30454;
  double t30455;
  double t28588;
  double t28599;
  double t30432;
  double t30446;
  double t30447;
  double t28604;
  double t28714;
  double t28762;
  double t28814;
  double t28821;
  double t28847;
  double t28850;
  double t28862;
  double t28871;
  double t28874;
  double t28876;
  double t28940;
  double t6951;
  double t6958;
  double t6960;
  double t28943;
  double t28944;
  double t28946;
  double t28947;
  double t28968;
  double t29294;
  double t30461;
  double t29297;
  double t30640;
  double t30641;
  double t30647;
  double t30605;
  double t30611;
  double t30635;
  double t29413;
  double t30490;
  double t29442;
  double t29573;
  double t29911;
  double t30656;
  double t30664;
  double t29988;
  double t30007;
  double t30744;
  double t30751;
  double t30760;
  double t30765;
  double t30768;
  double t30772;
  double t30041;
  double t30686;
  double t30714;
  double t30100;
  double t30102;
  t1187 = Cos(var1[16]);
  t2014 = Cos(var1[5]);
  t2801 = Sin(var1[16]);
  t2073 = Sin(var1[15]);
  t2942 = Sin(var1[5]);
  t605 = Sin(var1[3]);
  t3533 = Cos(var1[3]);
  t3575 = Cos(var1[15]);
  t3916 = Cos(var1[4]);
  t4844 = Sin(var1[4]);
  t5660 = Cos(var1[17]);
  t5703 = Sin(var1[17]);
  t5826 = -1.*t5660*t2801;
  t5829 = -1.*t1187*t5703;
  t5843 = t5826 + t5829;
  t5867 = t1187*t5660;
  t5887 = -1.*t2801*t5703;
  t5900 = t5867 + t5887;
  t5767 = -1.*t5660;
  t5773 = 1. + t5767;
  t5774 = -0.21935*t5773;
  t5783 = -0.221546*t5660;
  t5804 = -0.12338*t5703;
  t5823 = t5774 + t5783 + t5804;
  t5670 = -1. + t5660;
  t5676 = 0.25*t5670;
  t5677 = -0.37338*t5660;
  t5706 = 0.002196*t5703;
  t5707 = t5676 + t5677 + t5706;
  t6020 = t5660*t2801;
  t6023 = t1187*t5703;
  t6025 = t6020 + t6023;
  t2085 = -1.*t1187*t2014*t2073;
  t3013 = t2801*t2942;
  t3120 = t2085 + t3013;
  t4113 = t3575*t1187*t3916;
  t4924 = t2014*t2801;
  t5202 = t1187*t2073*t2942;
  t5213 = t4924 + t5202;
  t5310 = -1.*t4844*t5213;
  t5312 = t4113 + t5310;
  t5392 = t2014*t2073*t2801;
  t5396 = t1187*t2942;
  t5400 = t5392 + t5396;
  t5426 = -1.*t3575*t3916*t2801;
  t5447 = t1187*t2014;
  t5466 = -1.*t2073*t2801*t2942;
  t5541 = t5447 + t5466;
  t5580 = -1.*t4844*t5541;
  t5585 = t5426 + t5580;
  t5723 = t5660*t5707;
  t5766 = 0.21935*t5703;
  t5824 = t5823*t5703;
  t5825 = t5723 + t5766 + t5824;
  t5861 = -1.*t2014*t2073*t5843;
  t5915 = t5900*t2942;
  t5933 = t5861 + t5915;
  t5951 = t3575*t3916*t5843;
  t5953 = t2014*t5900;
  t5954 = t2073*t5843*t2942;
  t5955 = t5953 + t5954;
  t5957 = -1.*t4844*t5955;
  t5965 = t5951 + t5957;
  t5977 = -0.21935*t5660;
  t5989 = -1.*t5660*t5823;
  t5991 = t5707*t5703;
  t6000 = t5977 + t5989 + t5991;
  t6005 = -1.*t2014*t2073*t5900;
  t6028 = t6025*t2942;
  t6042 = t6005 + t6028;
  t6047 = t3575*t3916*t5900;
  t6050 = t2014*t6025;
  t6052 = t2073*t5900*t2942;
  t6064 = t6050 + t6052;
  t6123 = -1.*t4844*t6064;
  t6207 = t6047 + t6123;
  t7101 = -1.*t3575*t1187*t4844;
  t7243 = -1.*t3916*t5213;
  t7441 = t7101 + t7243;
  t7589 = t3575*t2801*t4844;
  t7603 = -1.*t3916*t5541;
  t7631 = t7589 + t7603;
  t7690 = -1.*t3575*t5843*t4844;
  t7694 = -1.*t3916*t5955;
  t8061 = t7690 + t7694;
  t8399 = -1.*t3575*t5900*t4844;
  t8415 = -1.*t3916*t6064;
  t8554 = t8399 + t8415;
  t8901 = t3916*t2073;
  t8903 = t3575*t4844*t2942;
  t8922 = t8901 + t8903;
  t9527 = -0.031996*t1187;
  t9629 = 0.000482*t2801;
  t9639 = t9527 + t9629;
  t9522 = 0.05701*t2073;
  t9730 = t3575*t9639;
  t9731 = t9522 + t9730;
  t9823 = -1.*t1187;
  t10172 = 1. + t9823;
  t10185 = -0.21935*t10172;
  t10187 = -0.219832*t1187;
  t10192 = -0.031996*t2801;
  t10257 = t10185 + t10187 + t10192;
  t10322 = t2014*t10257;
  t10400 = -1.*t3575;
  t10470 = 1. + t10400;
  t10493 = 0.0875*t10470;
  t10495 = 0.14451*t3575;
  t10595 = -1.*t2073*t9639;
  t10872 = t10493 + t10495 + t10595;
  t10873 = -1.*t10872*t2942;
  t10938 = t10322 + t10873;
  t15068 = t3916*t9731;
  t16029 = -1.*t4844*t10938;
  t16219 = t15068 + t16029;
  t14154 = t2073*t4844;
  t14247 = -1.*t3575*t3916*t2942;
  t15064 = t14154 + t14247;
  t12650 = t9731*t4844;
  t12679 = t3916*t10938;
  t12706 = t12650 + t12679;
  t9801 = -1.*t9731*t4844;
  t11186 = -1.*t3916*t10938;
  t11319 = t9801 + t11186;
  t9511 = t3575*t1187*t4844;
  t9513 = t3916*t5213;
  t9518 = t9511 + t9513;
  t17466 = t2014*t10872;
  t17548 = t10257*t2942;
  t17588 = t17466 + t17548;
  t16956 = -1.*t2073*t4844;
  t16961 = t3575*t3916*t2942;
  t16971 = t16956 + t16961;
  t18497 = -1.*t3575*t2801*t4844;
  t18506 = t3916*t5541;
  t18507 = t18497 + t18506;
  t18855 = -0.21935*t2801;
  t18867 = -1.*t2801*t5823;
  t18876 = t1187*t5707;
  t18879 = t18855 + t18867 + t18876;
  t18851 = 0.036619*t2073;
  t18887 = t3575*t18879;
  t18895 = t18851 + t18887;
  t18905 = t1187*t5823;
  t18908 = t2801*t5707;
  t18910 = t10185 + t18905 + t18908;
  t18911 = t2014*t18910;
  t18955 = 0.124119*t3575;
  t19000 = -1.*t2073*t18879;
  t19030 = t10493 + t18955 + t19000;
  t19037 = -1.*t19030*t2942;
  t19043 = t18911 + t19037;
  t19106 = t3916*t18895;
  t19109 = -1.*t4844*t19043;
  t19115 = t19106 + t19109;
  t19068 = t18895*t4844;
  t19071 = t3916*t19043;
  t19078 = t19068 + t19071;
  t18832 = t3575*t5843*t4844;
  t18843 = t3916*t5955;
  t18848 = t18832 + t18843;
  t18899 = -1.*t18895*t4844;
  t19057 = -1.*t3916*t19043;
  t19064 = t18899 + t19057;
  t19125 = t2014*t19030;
  t19126 = t18910*t2942;
  t19130 = t19125 + t19126;
  t19242 = t3575*t5900*t4844;
  t19245 = t3916*t6064;
  t19246 = t19242 + t19245;
  t19439 = t1187*t2014*t2073;
  t19445 = -1.*t2801*t2942;
  t19453 = t19439 + t19445;
  t19398 = -1.*t2014*t2073*t2801;
  t19412 = -1.*t1187*t2942;
  t19429 = t19398 + t19412;
  t19493 = t2014*t2073*t5843;
  t19503 = -1.*t5900*t2942;
  t19504 = t19493 + t19503;
  t19473 = t2014*t2073*t5900;
  t19475 = -1.*t6025*t2942;
  t19478 = t19473 + t19475;
  t17822 = -1.*t3575*t2014*t17588;
  t19883 = -1.*t2014*t10872;
  t19893 = -1.*t10257*t2942;
  t19898 = t19883 + t19893;
  t18214 = t17588*t3120;
  t18577 = t3575*t2014*t17588;
  t18741 = -1.*t5400*t17588;
  t19131 = t3575*t2014*t19130;
  t20071 = -1.*t2014*t19030;
  t20081 = -1.*t18910*t2942;
  t20097 = t20071 + t20081;
  t19202 = -1.*t19130*t5933;
  t19303 = -1.*t3575*t2014*t19130;
  t19362 = t19130*t6042;
  t19908 = t3575*t2942*t17588;
  t19937 = t5213*t17588;
  t19941 = t10938*t3120;
  t17826 = -1.*t15064*t12706;
  t17839 = -1.*t8922*t16219;
  t17868 = t17822 + t17826 + t17839;
  t18270 = t9518*t12706;
  t18278 = t5312*t16219;
  t18287 = t18214 + t18270 + t18278;
  t19995 = -1.*t3575*t2942*t17588;
  t18580 = t15064*t12706;
  t18583 = t8922*t16219;
  t18587 = t18577 + t18580 + t18583;
  t20017 = -1.*t5400*t10938;
  t20021 = -1.*t17588*t5541;
  t18747 = -1.*t12706*t18507;
  t18795 = -1.*t16219*t5585;
  t18816 = t18741 + t18747 + t18795;
  t20108 = -1.*t3575*t2942*t19130;
  t19132 = t15064*t19078;
  t19139 = t8922*t19115;
  t19141 = t19131 + t19132 + t19139;
  t20115 = -1.*t19130*t5955;
  t20139 = -1.*t19043*t5933;
  t19203 = -1.*t19078*t18848;
  t19210 = -1.*t19115*t5965;
  t19233 = t19202 + t19203 + t19210;
  t20220 = t3575*t2942*t19130;
  t19306 = -1.*t15064*t19078;
  t19315 = -1.*t8922*t19115;
  t19336 = t19303 + t19306 + t19315;
  t20264 = t19043*t6042;
  t20281 = t19130*t6064;
  t19364 = t19078*t19246;
  t19369 = t19115*t6207;
  t19372 = t19362 + t19364 + t19369;
  t19979 = t2073*t9731;
  t21219 = -0.05701*t2073;
  t21246 = -1.*t3575*t9639;
  t21267 = t21219 + t21246;
  t21427 = 0.05701*t3575;
  t21436 = t21427 + t10595;
  t20007 = t3575*t9731*t2801;
  t19859 = -1.*t2073*t9731;
  t19955 = t3575*t1187*t9731;
  t20191 = -1.*t2073*t18895;
  t24751 = -0.036619*t2073;
  t24753 = -1.*t3575*t18879;
  t24763 = t24751 + t24753;
  t24771 = 0.036619*t3575;
  t24778 = t24771 + t19000;
  t20241 = t3575*t18895*t5900;
  t20028 = t2073*t18895;
  t20150 = -1.*t3575*t18895*t5843;
  t26380 = -1.*t1187*t3916*t2073;
  t26389 = -1.*t3575*t1187*t4844*t2942;
  t26425 = t26380 + t26389;
  t26706 = t3916*t2073*t2801;
  t26708 = t3575*t2801*t4844*t2942;
  t26709 = t26706 + t26708;
  t26890 = -1.*t3916*t2073*t5843;
  t26961 = -1.*t3575*t5843*t4844*t2942;
  t26990 = t26890 + t26961;
  t27048 = -1.*t3916*t2073*t5900;
  t27050 = -1.*t3575*t5900*t4844*t2942;
  t27052 = t27048 + t27050;
  t19867 = t3575*t2942*t10938;
  t19868 = t19859 + t19867 + t17822;
  t23457 = -1.*t3575*t9731;
  t23737 = -1.*t2073*t21436;
  t23350 = -1.*t1187*t2073*t9731;
  t23354 = t3575*t1187*t21436;
  t19959 = t5213*t10938;
  t19960 = t19955 + t19959 + t18214;
  t19980 = -1.*t3575*t2942*t10938;
  t19989 = t19979 + t19980 + t18577;
  t27252 = Power(t2014,2);
  t21368 = t3575*t9731;
  t21445 = t2073*t21436;
  t27257 = Power(t2942,2);
  t21499 = -1.*t2073*t9731*t2801;
  t21528 = t3575*t21436*t2801;
  t20009 = -1.*t10938*t5541;
  t20012 = t20007 + t18741 + t20009;
  t20031 = -1.*t3575*t2942*t19043;
  t20065 = t20028 + t20031 + t19131;
  t25028 = t3575*t18895;
  t25062 = t2073*t24778;
  t25087 = t2073*t18895*t5843;
  t25088 = -1.*t3575*t24778*t5843;
  t20152 = -1.*t19043*t5955;
  t20181 = t20150 + t20152 + t19202;
  t20194 = t3575*t2942*t19043;
  t20195 = t20191 + t20194 + t19303;
  t24767 = -1.*t3575*t18895;
  t24803 = -1.*t2073*t24778;
  t24909 = -1.*t2073*t18895*t5900;
  t24914 = t3575*t24778*t5900;
  t20242 = t19043*t6064;
  t20248 = t20241 + t19362 + t20242;
  t25735 = -1.*t1187*t2073*t4844;
  t25739 = t3575*t1187*t3916*t2942;
  t25740 = t25735 + t25739;
  t27396 = -1.*t3575*t1187*t2014*t17588;
  t27414 = t2014*t21267*t3120;
  t27253 = -1.*t3575*t27252*t21267;
  t27884 = t21436*t4844;
  t27887 = -1.*t3916*t21267*t2942;
  t27888 = t27884 + t27887;
  t27316 = t2014*t2073*t17588;
  t27891 = t3916*t21436;
  t27894 = t21267*t4844*t2942;
  t27898 = t27891 + t27894;
  t27855 = t3575*t4844;
  t27856 = t3916*t2073*t2942;
  t27863 = t27855 + t27856;
  t26105 = t2073*t2801*t4844;
  t26141 = -1.*t3575*t3916*t2801*t2942;
  t26147 = t26105 + t26141;
  t27526 = t3575*t27252*t21267;
  t27556 = -1.*t2014*t2073*t17588;
  t27956 = t3575*t3916;
  t27958 = -1.*t2073*t4844*t2942;
  t27965 = t27956 + t27958;
  t27577 = -1.*t2014*t21267*t5400;
  t27618 = -1.*t3575*t2014*t2801*t17588;
  t26201 = -1.*t2073*t5843*t4844;
  t26227 = t3575*t3916*t5843*t2942;
  t26256 = t26201 + t26227;
  t27661 = t3575*t27252*t24763;
  t27681 = -1.*t2014*t2073*t19130;
  t27698 = t3575*t2014*t5843*t19130;
  t27713 = -1.*t2014*t24763*t5933;
  t28110 = t24778*t4844;
  t28111 = -1.*t3916*t24763*t2942;
  t28113 = t28110 + t28111;
  t28117 = t3916*t24778;
  t28118 = t24763*t4844*t2942;
  t28121 = t28117 + t28118;
  t26305 = -1.*t2073*t5900*t4844;
  t26308 = t3575*t3916*t5900*t2942;
  t26311 = t26305 + t26308;
  t27790 = -1.*t3575*t27252*t24763;
  t27806 = t2014*t2073*t19130;
  t27812 = -1.*t3575*t2014*t5900*t19130;
  t27816 = t2014*t24763*t6042;
  t28266 = -1.*t1187*t5660;
  t28267 = t2801*t5703;
  t28268 = t28266 + t28267;
  t22051 = -1.*t3575*t10872;
  t22102 = t19859 + t22051;
  t28410 = 0.000482*t1187;
  t28414 = 0.031996*t2801;
  t28415 = t28410 + t28414;
  t21126 = t3575*t10872;
  t21187 = t19979 + t21126;
  t24365 = -1.*t1187*t2073*t10872;
  t24377 = t10257*t2801;
  t28402 = Power(t3575,2);
  t28447 = Power(t2073,2);
  t24706 = -1.*t3575*t19030;
  t24708 = t20191 + t24706;
  t28546 = -0.21935*t1187;
  t28548 = -1.*t1187*t5823;
  t28553 = -1.*t2801*t5707;
  t28554 = t28546 + t28548 + t28553;
  t24969 = t3575*t19030;
  t24991 = t20028 + t24969;
  t28620 = -1.*t2014*t2801;
  t28622 = -1.*t1187*t2073*t2942;
  t28623 = t28620 + t28622;
  t28733 = t2014*t5843;
  t28747 = t2073*t28268*t2942;
  t28748 = t28733 + t28747;
  t28780 = -1.*t3575*t1187*t3916;
  t28782 = -1.*t4844*t28623;
  t28785 = t28780 + t28782;
  t6647 = t3533*t5400;
  t6764 = -1.*t605*t5585;
  t6765 = t6647 + t6764;
  t6926 = t3533*t5933;
  t6933 = -1.*t605*t5965;
  t6937 = t6926 + t6933;
  t28852 = -1.*t2014*t2073*t28268;
  t28855 = t5843*t2942;
  t28857 = t28852 + t28855;
  t28864 = t3575*t3916*t28268;
  t28867 = -1.*t4844*t28748;
  t28869 = t28864 + t28867;
  t28435 = t28402*t1187*t28415;
  t28462 = -1.*t3575*t9731*t2801;
  t28988 = t2014*t9639;
  t28989 = t2073*t28415*t2942;
  t29028 = t28988 + t28989;
  t28972 = -1.*t2014*t2073*t28415;
  t28975 = t9639*t2942;
  t28982 = t28972 + t28975;
  t28504 = t28402*t28415*t2801;
  t28541 = t3575*t18895*t5843;
  t28561 = t28402*t28554*t5900;
  t29219 = -1.*t2014*t2073*t28554;
  t29220 = t18879*t2942;
  t29225 = t29219 + t29220;
  t29232 = t2014*t18879;
  t29234 = t2073*t28554*t2942;
  t29239 = t29232 + t29234;
  t28589 = -1.*t28402*t28554*t5843;
  t28602 = -1.*t3575*t18895*t28268;
  t28986 = -1.*t3575*t2014*t28982;
  t29036 = t5400*t17588;
  t29039 = t28982*t3120;
  t29588 = t3575*t28415*t4844;
  t29591 = t3916*t29028;
  t29594 = t29588 + t29591;
  t29614 = t3575*t3916*t28415;
  t29621 = -1.*t4844*t29028;
  t29623 = t29614 + t29621;
  t28654 = t3916*t28623;
  t28655 = t7101 + t28654;
  t29071 = t3575*t2014*t28982;
  t29119 = -1.*t5400*t28982;
  t29126 = -1.*t17588*t19453;
  t29226 = -1.*t3575*t2014*t29225;
  t29302 = t29225*t6042;
  t29304 = t19130*t5933;
  t29912 = t3575*t28554*t4844;
  t29916 = t3916*t29239;
  t29927 = t29912 + t29916;
  t29940 = t3575*t3916*t28554;
  t29941 = -1.*t4844*t29239;
  t29956 = t29940 + t29941;
  t28724 = t3575*t28268*t4844;
  t28755 = t3916*t28748;
  t28756 = t28724 + t28755;
  t29395 = t3575*t2014*t29225;
  t29427 = -1.*t19130*t28857;
  t29439 = -1.*t29225*t5933;
  t30231 = -0.12338*t5660;
  t30237 = t30231 + t5706;
  t30201 = 0.002196*t5660;
  t30205 = 0.12338*t5703;
  t30215 = t30201 + t30205;
  t30193 = 0.21935*t5660;
  t30196 = t5660*t5823;
  t30225 = t5660*t30215;
  t30227 = -1.*t5707*t5703;
  t30243 = t30237*t5703;
  t30247 = t30193 + t30196 + t30225 + t30227 + t30243;
  t30256 = -1.*t5660*t30237;
  t30258 = t30215*t5703;
  t30261 = t5723 + t30256 + t5766 + t5824 + t30258;
  t28270 = 5.e-6*t28268;
  t28272 = -0.008825179*t5843*t6000;
  t28273 = -0.124119*t5900;
  t28276 = -0.0875*t28268;
  t28280 = t28273 + t28276;
  t28282 = -0.241*t5825*t28280;
  t28525 = -5.e-6*t3575*t5843;
  t24935 = t18910*t6025;
  t24941 = -1.*t2073*t19030*t5900;
  t24942 = t24935 + t20241 + t24941;
  t25175 = t2073*t19030*t5843;
  t25179 = -1.*t18910*t5900;
  t25247 = t20150 + t25175 + t25179;
  t28537 = t3575*t24708*t5843;
  t28543 = -1.*t2073*t19030*t5843;
  t28571 = t18910*t5900;
  t30452 = -1.*t2801*t30237;
  t30454 = t1187*t30215;
  t30455 = t30452 + t30454;
  t28588 = t3575*t24991*t28268;
  t28599 = -1.*t18910*t5843;
  t30432 = t1187*t30237;
  t30446 = t2801*t30215;
  t30447 = t30432 + t30446;
  t28604 = t2073*t19030*t28268;
  t28714 = -0.241*t6000*t18848;
  t28762 = -0.241*t5825*t28756;
  t28814 = t605*t5933;
  t28821 = t3533*t5965;
  t28847 = t28814 + t28821;
  t28850 = -0.241*t6000*t28847;
  t28862 = t605*t28857;
  t28871 = t3533*t28869;
  t28874 = t28862 + t28871;
  t28876 = -0.241*t5825*t28874;
  t28940 = -0.241*t6000*t6937;
  t6951 = t3533*t6042;
  t6958 = -1.*t605*t6207;
  t6960 = t6951 + t6958;
  t28943 = t3533*t28857;
  t28944 = -1.*t605*t28869;
  t28946 = t28943 + t28944;
  t28947 = -0.241*t5825*t28946;
  t28968 = 5.e-6*t19504;
  t29294 = t5933*t20195;
  t30461 = t28402*t30455*t5900;
  t29297 = t19043*t5955;
  t30640 = -1.*t2014*t2073*t30455;
  t30641 = t30447*t2942;
  t30647 = t30640 + t30641;
  t30605 = t2014*t30447;
  t30611 = t2073*t30455*t2942;
  t30635 = t30605 + t30611;
  t29413 = t28857*t20065;
  t30490 = -1.*t28402*t30455*t5843;
  t29442 = -1.*t19043*t28748;
  t29573 = 5.e-6*t8061;
  t29911 = t18848*t19336;
  t30656 = -1.*t3575*t2014*t30647;
  t30664 = t30647*t6042;
  t29988 = t19078*t18848;
  t30007 = t19115*t5965;
  t30744 = t3575*t30455*t4844;
  t30751 = t3916*t30635;
  t30760 = t30744 + t30751;
  t30765 = t3575*t3916*t30455;
  t30768 = -1.*t4844*t30635;
  t30772 = t30765 + t30768;
  t30041 = t28756*t19141;
  t30686 = t3575*t2014*t30647;
  t30714 = -1.*t30647*t5933;
  t30100 = -1.*t19078*t28756;
  t30102 = -1.*t19115*t28869;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.000736496*(-1.*t3533*t5312 - 1.*t3120*t605) + 0.048889888*(-1.*t3533*t5585 - 1.*t5400*t605) - 0.241*t5825*(-1.*t3533*t5965 - 1.*t5933*t605) - 0.241*t6000*(-1.*t6042*t605 - 1.*t3533*t6207))*var2[1] - 0.5*(-0.000736496*(t3120*t3533 - 1.*t5312*t605) + 0.048889888*t6765 - 0.241*t5825*t6937 - 0.241*t6000*t6960)*var2[2])*var2[16];
  p_output1[4]=(-0.5*(-0.000736496*t5312 + 0.048889888*t5585 - 0.241*t5825*t5965 - 0.241*t6000*t6207)*var2[0] - 0.5*(0.000736496*t605*t7441 - 0.048889888*t605*t7631 + 0.241*t5825*t605*t8061 + 0.241*t6000*t605*t8554)*var2[1] - 0.5*(-0.000736496*t3533*t7441 + 0.048889888*t3533*t7631 - 0.241*t3533*t5825*t8061 - 0.241*t3533*t6000*t8554)*var2[2] - 0.5*(0.000085*t5312 + 1.e-5*(t2801*t3575*t3916 + t4844*t5541) + 5.e-6*(-1.*t3575*t3916*t5900 + t4844*t6064) - 0.015477*t8922 - 0.000736496*(t18587*t5585 + t15064*(-1.*t16219*t18507 - 1.*t11319*t5585 - 1.*t12706*t5585 - 1.*t16219*t7631) + t18816*t8922 + t18507*(t15064*t16219 + t16219*t16971 + t11319*t8922 + t12706*t8922)) - 0.241*t5825*(t19336*t6207 + t15064*(t19115*t19246 + t19064*t6207 + t19078*t6207 + t19115*t8554) + t19372*t8922 + t19246*(-1.*t15064*t19115 - 1.*t16971*t19115 - 1.*t19064*t8922 - 1.*t19078*t8922)) - 0.241*t6000*(t19141*t5965 + t15064*(-1.*t18848*t19115 - 1.*t19064*t5965 - 1.*t19078*t5965 - 1.*t19115*t8061) + t19233*t8922 + t18848*(t15064*t19115 + t16971*t19115 + t19064*t8922 + t19078*t8922)) + 0.048889888*(t17868*t5312 + t18287*t8922 + (-1.*t15064*t16219 - 1.*t16219*t16971 - 1.*t11319*t8922 - 1.*t12706*t8922)*t9518 + t15064*(t11319*t5312 + t12706*t5312 + t16219*t7441 + t16219*t9518)))*var2[3])*var2[16];
  p_output1[5]=(-0.5*(0.048889888*t19429*t3916 - 0.000736496*t19453*t3916 - 0.241*t19504*t3916*t5825 - 0.241*t19478*t3916*t6000)*var2[0] - 0.5*(0.048889888*(t3533*t5541 + t19429*t4844*t605) - 0.000736496*(t3533*t5213 + t19453*t4844*t605) - 0.241*t5825*(t3533*t5955 + t19504*t4844*t605) - 0.241*t6000*(t19478*t4844*t605 + t3533*t6064))*var2[1] - 0.5*(-0.000736496*(-1.*t19453*t3533*t4844 + t5213*t605) + 0.048889888*(-1.*t19429*t3533*t4844 + t5541*t605) - 0.241*t5825*(-1.*t19504*t3533*t4844 + t5955*t605) - 0.241*t6000*(-1.*t19478*t3533*t4844 + t605*t6064))*var2[2] - 0.5*(-1.e-5*t19429*t3916 + 0.000085*t19453*t3916 - 5.e-6*t19478*t3916 + 0.015477*t2014*t3575*t3916 - 0.000736496*(t18587*t19429*t3916 - 1.*t18816*t2014*t3575*t3916 + t15064*(t20017 + t20021 - 1.*t12706*t19429*t3916 - 1.*t18507*t19898*t3916 + t16219*t19429*t4844 + t19898*t4844*t5585) + t18507*(t19995 + t10938*t2014*t3575 + t15064*t19898*t3916 - 1.*t12706*t2014*t3575*t3916 + t16219*t2014*t3575*t4844 - 1.*t19898*t4844*t8922)) - 0.241*t6000*(t19141*t19504*t3916 - 1.*t19233*t2014*t3575*t3916 + t15064*(t20115 + t20139 - 1.*t19078*t19504*t3916 - 1.*t18848*t20097*t3916 + t19115*t19504*t4844 + t20097*t4844*t5965) + t18848*(t20108 + t19043*t2014*t3575 + t15064*t20097*t3916 - 1.*t19078*t2014*t3575*t3916 + t19115*t2014*t3575*t4844 - 1.*t20097*t4844*t8922)) - 0.241*t5825*(t19336*t19478*t3916 - 1.*t19372*t2014*t3575*t3916 + t15064*(t20264 + t20281 + t19078*t19478*t3916 + t19246*t20097*t3916 - 1.*t19115*t19478*t4844 - 1.*t20097*t4844*t6207) + t19246*(t20220 - 1.*t19043*t2014*t3575 - 1.*t15064*t20097*t3916 + t19078*t2014*t3575*t3916 - 1.*t19115*t2014*t3575*t4844 + t20097*t4844*t8922)) + 0.048889888*(t17868*t19453*t3916 - 1.*t18287*t2014*t3575*t3916 + (t19908 - 1.*t10938*t2014*t3575 - 1.*t15064*t19898*t3916 + t12706*t2014*t3575*t3916 - 1.*t16219*t2014*t3575*t4844 + t19898*t4844*t8922)*t9518 + t15064*(t19937 + t19941 + t12706*t19453*t3916 - 1.*t16219*t19453*t4844 - 1.*t19898*t4844*t5312 + t19898*t3916*t9518)))*var2[3] - 0.5*(1.e-5*(-1.*t1187*t2014 + t2073*t2801*t2942) + 0.015477*t2942*t3575 + 0.000085*t5213 + 0.048889888*(-1.*t19960*t2942*t3575 + t3120*(t19908 + t19898*t2942*t3575) + t19868*t5213 + t2014*t3575*(t10938*t19453 + t19937 + t19941 + t19898*t5213)) - 0.000736496*(-1.*t20012*t2942*t3575 + (t19995 - 1.*t19898*t2942*t3575)*t5400 + t19989*t5541 + t2014*t3575*(-1.*t10938*t19429 + t20017 + t20021 - 1.*t19898*t5541)) - 0.241*(-1.*t20181*t2942*t3575 + (t20108 - 1.*t20097*t2942*t3575)*t5933 + t20065*t5955 + t2014*t3575*(-1.*t19043*t19504 + t20115 + t20139 - 1.*t20097*t5955))*t6000 + 5.e-6*(-1.*t2073*t2942*t5900 - 1.*t2014*t6025) - 0.241*t5825*(-1.*t20248*t2942*t3575 + (t20220 + t20097*t2942*t3575)*t6042 + t20195*t6064 + t2014*t3575*(t19043*t19478 + t20264 + t20281 + t20097*t6064)))*var2[4])*var2[16];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=(-0.5*(-0.000736496*t25740 + 0.048889888*t26147 - 0.241*t26256*t5825 - 0.241*t26311*t6000)*var2[0] - 0.5*(-0.000736496*(-1.*t1187*t2014*t3533*t3575 - 1.*t26425*t605) + 0.048889888*(t2014*t2801*t3533*t3575 - 1.*t26709*t605) - 0.241*t5825*(-1.*t2014*t3533*t3575*t5843 - 1.*t26990*t605) - 0.241*t6000*(-1.*t2014*t3533*t3575*t5900 - 1.*t27052*t605))*var2[1] - 0.5*(-0.000736496*(t26425*t3533 - 1.*t1187*t2014*t3575*t605) + 0.048889888*(t26709*t3533 + t2014*t2801*t3575*t605) - 0.241*t5825*(t26990*t3533 - 1.*t2014*t3575*t5843*t605) - 0.241*t6000*(t27052*t3533 - 1.*t2014*t3575*t5900*t605))*var2[2] - 0.5*(0.000085*t25740 - 0.015477*t27863 + 1.e-5*(t2801*t2942*t3575*t3916 - 1.*t2073*t2801*t4844) + 5.e-6*(-1.*t2942*t3575*t3916*t5900 + t2073*t4844*t5900) - 0.000736496*(t18587*t26147 + t18816*t27863 + t15064*(-1.*t12706*t26147 - 1.*t16219*t26709 + t27577 + t27618 - 1.*t18507*t27888 - 1.*t27898*t5585) + t18507*(t27526 + t27556 + t12706*t27863 + t15064*t27888 + t16219*t27965 + t27898*t8922)) - 0.241*t5825*(t19336*t26311 + t19372*t27863 + t15064*(t19078*t26311 + t19115*t27052 + t27812 + t27816 + t19246*t28113 + t28121*t6207) + t19246*(t27790 + t27806 - 1.*t19078*t27863 - 1.*t19115*t27965 - 1.*t15064*t28113 - 1.*t28121*t8922)) - 0.241*t6000*(t19141*t26256 + t19233*t27863 + t15064*(-1.*t19078*t26256 - 1.*t19115*t26990 + t27698 + t27713 - 1.*t18848*t28113 - 1.*t28121*t5965) + t18848*(t27661 + t27681 + t19078*t27863 + t19115*t27965 + t15064*t28113 + t28121*t8922)) + 0.048889888*(t17868*t25740 + t18287*t27863 + (t27253 + t27316 - 1.*t12706*t27863 - 1.*t15064*t27888 - 1.*t16219*t27965 - 1.*t27898*t8922)*t9518 + t15064*(t12706*t25740 + t16219*t26425 + t27396 + t27414 + t27898*t5312 + t27888*t9518)))*var2[3] - 0.5*(0.015477*t2014*t2073 - 0.000085*t1187*t2014*t3575 - 1.e-5*t2014*t2801*t3575 + 0.048889888*(-1.*t19960*t2014*t2073 - 1.*t1187*t19868*t2014*t3575 + t3120*(t23457 + t23737 + t27253 + t27316 - 1.*t10938*t2073*t2942 - 1.*t21267*t27257*t3575) + t2014*t3575*(t23350 + t23354 + t27396 + t27414 + t10938*t1187*t2942*t3575 - 1.*t21267*t2942*t5213)) - 0.000736496*(-1.*t20012*t2014*t2073 + t19989*t2014*t2801*t3575 + (t21368 + t21445 + t27526 + t27556 + t10938*t2073*t2942 + t21267*t27257*t3575)*t5400 + t2014*t3575*(t21499 + t21528 + t27577 + t27618 + t10938*t2801*t2942*t3575 + t21267*t2942*t5541)) + 5.e-6*t2014*t3575*t5900 - 0.241*(-1.*t2014*t20181*t2073 - 1.*t20065*t2014*t3575*t5843 + (t25028 + t25062 + t27661 + t27681 + t19043*t2073*t2942 + t24763*t27257*t3575)*t5933 + t2014*t3575*(t25087 + t25088 + t27698 + t27713 - 1.*t19043*t2942*t3575*t5843 + t24763*t2942*t5955))*t6000 - 0.241*t5825*(-1.*t2014*t20248*t2073 - 1.*t2014*t20195*t3575*t5900 + (t24767 + t24803 + t27790 + t27806 - 1.*t19043*t2073*t2942 - 1.*t24763*t27257*t3575)*t6042 + t2014*t3575*(t24909 + t24914 + t27812 + t27816 + t19043*t2942*t3575*t5900 - 1.*t24763*t2942*t6064)))*var2[4] - 0.5*(-0.000085*t1187*t2073 - 1.e-5*t2073*t2801 - 0.015477*t3575 + 0.048889888*(-1.*t1187*t2073*t22102 + (t19955 + t24365 + t24377)*t3575 + t2073*(-1.*t1187*t2073*t21267 + t23350 + t23354 - 1.*t10872*t1187*t3575) + t1187*t3575*(t10872*t2073 + t23457 + t23737 - 1.*t21267*t3575)) - 0.000736496*(t2073*t21187*t2801 + (-1.*t10257*t1187 + t20007 - 1.*t10872*t2073*t2801)*t3575 - 1.*t2801*t3575*(-1.*t10872*t2073 + t21368 + t21445 + t21267*t3575) + t2073*(t21499 + t21528 - 1.*t2073*t21267*t2801 - 1.*t10872*t2801*t3575)) + 5.e-6*t2073*t5900 - 0.241*t5825*(t24942*t3575 - 1.*t2073*t24708*t5900 + t3575*(t19030*t2073 + t24767 + t24803 - 1.*t24763*t3575)*t5900 + t2073*(t24909 + t24914 - 1.*t2073*t24763*t5900 - 1.*t19030*t3575*t5900)) - 0.241*(t25247*t3575 - 1.*t2073*t24991*t5843 + t3575*(-1.*t19030*t2073 + t25028 + t25062 + t24763*t3575)*t5843 + t2073*(t25087 + t25088 + t2073*t24763*t5843 + t19030*t3575*t5843))*t6000)*var2[5])*var2[16];
  p_output1[16]=(-0.5*(-0.000736496*t18507 + 0.048889888*t28655 + t28714 + t28762)*var2[0] - 0.5*(t28940 + t28947 + 0.048889888*(t19453*t3533 - 1.*t28785*t605) - 0.000736496*t6765)*var2[1] - 0.5*(t28850 + t28876 + 0.048889888*(t28785*t3533 + t19453*t605) - 0.000736496*(t3533*t5585 + t5400*t605))*var2[2] - 0.5*(0.000085*t18507 + t29573 - 0.000736496*(t18587*t28655 + t15064*(-1.*t12706*t28655 - 1.*t16219*t28785 + t29119 + t29126 - 1.*t18507*t29594 - 1.*t29623*t5585) + t18507*(t29071 + t15064*t29594 + t29623*t8922)) - 0.241*t5825*(t29911 + t15064*(t29302 + t29304 + t19246*t29927 + t29988 + t30007 + t29956*t6207) + t19246*(t29226 - 1.*t15064*t29927 - 1.*t29956*t8922)) - 0.241*t6000*(t30041 + t15064*(t29427 + t29439 - 1.*t18848*t29927 + t30100 + t30102 - 1.*t29956*t5965) + t18848*(t29395 + t15064*t29927 + t29956*t8922)) + 1.e-5*(-1.*t28623*t3916 + t9511) + 0.048889888*(t17868*t18507 + (t28986 - 1.*t15064*t29594 - 1.*t29623*t8922)*t9518 + t15064*(t12706*t18507 + t29036 + t29039 + t29623*t5312 + t16219*t5585 + t29594*t9518)))*var2[3] - 0.5*(t28968 + 1.e-5*t3120 + 0.000085*t5400 + 0.048889888*(t3120*(t28986 - 1.*t2073*t28415*t3575 + t29028*t2942*t3575) + t19868*t5400 + t2014*t3575*(t28435 + t28462 + t29036 + t29039 + t29028*t5213 + t10938*t5541)) - 0.000736496*(t19453*t19989 + (t29071 + t2073*t28415*t3575 - 1.*t29028*t2942*t3575)*t5400 + t2014*t3575*(t19955 + t28504 - 1.*t10938*t28623 + t29119 + t29126 - 1.*t29028*t5541)) - 0.241*(t29413 + (t29395 + t2073*t28554*t3575 - 1.*t29239*t2942*t3575)*t5933 + t2014*t3575*(t28589 + t28602 + t29427 + t29439 + t29442 - 1.*t29239*t5955))*t6000 - 0.241*t5825*(t29294 + (t29226 - 1.*t2073*t28554*t3575 + t29239*t2942*t3575)*t6042 + t2014*t3575*(t28541 + t28561 + t29297 + t29302 + t29304 + t29239*t6064)))*var2[4] - 0.5*(t28525 + 1.e-5*t1187*t3575 - 0.000085*t2801*t3575 - 0.241*(t28588 + t2073*(t28589 + t28599 + t28602 + t28604 - 1.*t28447*t28554*t5843 - 1.*t18879*t5900))*t6000 - 0.241*t5825*(t28537 + t2073*(t28541 + t28543 + t28561 + t28571 + t28447*t28554*t5900 + t18879*t6025)) - 0.000736496*(-1.*t1187*t21187*t3575 + t2073*(t19955 + t24365 + t24377 + t2801*t28415*t28447 + t28504 - 1.*t1187*t9639)) + 0.048889888*(-1.*t22102*t2801*t3575 + t2073*(t10257*t1187 + t10872*t2073*t2801 + t28435 + t1187*t28415*t28447 + t28462 + t2801*t9639)))*var2[5] - 0.5*(-0.00270221251488*t1187 + 0.00005198763696*t2801 + t28270 + t28272 + t28282)*var2[15])*var2[16];
  p_output1[17]=var2[16]*(-0.5*(t28714 + t28762 - 0.241*t18848*t30247 - 0.241*t19246*t30261)*var2[0] - 0.5*(t28940 + t28947 - 0.241*t30247*t6937 - 0.241*t30261*t6960)*var2[1] - 0.5*(t28850 + t28876 - 0.241*t28847*t30247 - 0.241*t30261*(t6042*t605 + t3533*t6207))*var2[2] - 0.5*(t29573 - 0.241*(t19246*t19336 + t15064*t19372)*t30247 - 0.241*(t18848*t19141 + t15064*t19233)*t30261 - 0.241*t5825*(t29911 + t15064*(t29304 + t29988 + t30007 + t30664 + t19246*t30760 + t30772*t6207) + t19246*(t30656 - 1.*t15064*t30760 - 1.*t30772*t8922)) - 0.241*t6000*(t30041 + t15064*(t29427 + t30100 + t30102 + t30714 - 1.*t18848*t30760 - 1.*t30772*t5965) + t18848*(t30686 + t15064*t30760 + t30772*t8922)))*var2[3] - 0.5*(t28968 - 0.241*t30261*(t2014*t20181*t3575 + t20065*t5933) - 0.241*(t29413 + (t30686 + t2073*t30455*t3575 - 1.*t2942*t30635*t3575)*t5933 + t2014*t3575*(t28602 + t29427 + t29442 + t30490 + t30714 - 1.*t30635*t5955))*t6000 - 0.241*t30247*(t2014*t20248*t3575 + t20195*t6042) - 0.241*t5825*(t29294 + (t30656 - 1.*t2073*t30455*t3575 + t2942*t30635*t3575)*t6042 + t2014*t3575*(t28541 + t29297 + t29304 + t30461 + t30664 + t30635*t6064)))*var2[4] - 0.5*(t28525 - 0.241*t30261*(t2073*t25247 + t24991*t3575*t5843) - 0.241*t30247*(t2073*t24942 + t24708*t3575*t5900) - 0.241*(t28588 + t2073*(t28599 + t28602 + t28604 + t30490 - 1.*t28447*t30455*t5843 - 1.*t30447*t5900))*t6000 - 0.241*t5825*(t28537 + t2073*(t28541 + t28543 + t28571 + t30461 + t28447*t30455*t5900 + t30447*t6025)))*var2[5] - 0.5*(t28270 + t28272 + t28282 - 0.008825179*t30261*t5900 - 0.241*t30247*(-0.0875*t5843 - 0.124119*t6025))*var2[15] - 0.5*(-0.482*t30247*t5825 - 0.482*t30261*t6000)*var2[16] - 0.5*(0.02973458*t30247 - 0.000529236*t30261)*var2[17]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec17_laikago_description.hh"

namespace SymFunction
{

void Ce3_vec17_laikago_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
