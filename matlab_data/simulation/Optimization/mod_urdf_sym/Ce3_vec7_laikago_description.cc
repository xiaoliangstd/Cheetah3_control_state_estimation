/*
 * Automatically Generated from Mathematica.
 * Tue 10 Dec 2019 16:02:37 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t192;
  double t128;
  double t213;
  double t502;
  double t344;
  double t459;
  double t377;
  double t393;
  double t234;
  double t424;
  double t522;
  double t548;
  double t575;
  double t601;
  double t676;
  double t704;
  double t768;
  double t787;
  double t798;
  double t799;
  double t807;
  double t826;
  double t688;
  double t711;
  double t727;
  double t1443;
  double t1486;
  double t1574;
  double t1585;
  double t1589;
  double t1639;
  double t1655;
  double t1678;
  double t1707;
  double t1761;
  double t1770;
  double t1838;
  double t1840;
  double t1469;
  double t1520;
  double t1542;
  double t1955;
  double t1960;
  double t1961;
  double t1968;
  double t1972;
  double t1973;
  double t1979;
  double t1704;
  double t1865;
  double t1917;
  double t1995;
  double t2024;
  double t2033;
  double t627;
  double t629;
  double t638;
  double t2425;
  double t2433;
  double t2435;
  double t748;
  double t831;
  double t832;
  double t874;
  double t935;
  double t948;
  double t961;
  double t997;
  double t1025;
  double t1115;
  double t1136;
  double t1137;
  double t1151;
  double t1155;
  double t1193;
  double t1194;
  double t1221;
  double t1224;
  double t1280;
  double t1286;
  double t1291;
  double t1299;
  double t1301;
  double t1303;
  double t1309;
  double t1310;
  double t1359;
  double t1967;
  double t1980;
  double t1986;
  double t1991;
  double t2036;
  double t2040;
  double t2061;
  double t2065;
  double t2072;
  double t2094;
  double t2111;
  double t2118;
  double t2134;
  double t2146;
  double t2148;
  double t2164;
  double t2181;
  double t2195;
  double t2214;
  double t2222;
  double t2225;
  double t2240;
  double t2249;
  double t2270;
  double t2287;
  double t2294;
  double t2304;
  double t2308;
  double t2321;
  double t2333;
  double t2957;
  double t2977;
  double t2992;
  double t3052;
  double t3056;
  double t3060;
  double t3089;
  double t3110;
  double t3116;
  double t3125;
  double t3127;
  double t3129;
  double t3138;
  double t3148;
  double t3151;
  double t3157;
  double t3194;
  double t3196;
  double t3619;
  double t3624;
  double t3658;
  double t3663;
  double t3664;
  double t3677;
  double t3709;
  double t3715;
  double t3760;
  double t3781;
  double t3809;
  double t3822;
  double t3856;
  double t3864;
  double t3869;
  double t3890;
  double t3910;
  double t3925;
  double t3768;
  double t3827;
  double t3833;
  double t4006;
  double t4007;
  double t4009;
  double t3588;
  double t3681;
  double t3699;
  double t4159;
  double t4160;
  double t4170;
  double t4489;
  double t4501;
  double t4544;
  double t4548;
  double t4558;
  double t4559;
  double t4560;
  double t4561;
  double t4576;
  double t4583;
  double t4593;
  double t4599;
  double t4673;
  double t4689;
  double t4690;
  double t4819;
  double t4821;
  double t4824;
  double t4763;
  double t4764;
  double t4780;
  double t4622;
  double t4643;
  double t4658;
  double t5030;
  double t5032;
  double t5034;
  double t5616;
  double t5617;
  double t5625;
  double t5633;
  double t5649;
  double t5652;
  double t5654;
  double t5664;
  double t5671;
  double t5784;
  double t5791;
  double t5793;
  double t5770;
  double t5771;
  double t5782;
  double t5808;
  double t5816;
  double t5819;
  double t5627;
  double t5698;
  double t5704;
  double t5855;
  double t5856;
  double t5862;
  double t6110;
  double t6116;
  double t6129;
  double t6652;
  double t6686;
  double t6695;
  double t6715;
  double t6719;
  double t6731;
  double t7223;
  double t7235;
  double t7258;
  double t6770;
  double t6780;
  double t6822;
  double t6833;
  double t6868;
  double t6898;
  double t8444;
  double t8450;
  double t8455;
  double t4202;
  double t9636;
  double t9638;
  double t9647;
  double t4267;
  double t3707;
  double t4068;
  double t4406;
  double t4407;
  double t4410;
  double t4429;
  double t4434;
  double t4436;
  double t4446;
  double t4449;
  double t4451;
  double t4825;
  double t10278;
  double t10279;
  double t10299;
  double t4847;
  double t5069;
  double t5107;
  double t5272;
  double t5432;
  double t5520;
  double t5522;
  double t5524;
  double t5550;
  double t5613;
  double t5614;
  double t5868;
  double t16311;
  double t16321;
  double t16325;
  double t5947;
  double t6189;
  double t6303;
  double t6437;
  double t6551;
  double t3834;
  double t3871;
  double t3883;
  double t9924;
  double t10027;
  double t4073;
  double t4083;
  double t4089;
  double t4242;
  double t4243;
  double t4249;
  double t17310;
  double t17371;
  double t9679;
  double t9755;
  double t4288;
  double t4330;
  double t4356;
  double t4800;
  double t4801;
  double t4843;
  double t10449;
  double t4854;
  double t4860;
  double t4864;
  double t10515;
  double t10552;
  double t5290;
  double t5293;
  double t5298;
  double t13194;
  double t13794;
  double t5437;
  double t5438;
  double t5441;
  double t14307;
  double t14407;
  double t5038;
  double t5041;
  double t5076;
  double t11275;
  double t5108;
  double t5119;
  double t5123;
  double t12624;
  double t12646;
  double t5848;
  double t5849;
  double t5878;
  double t16338;
  double t5969;
  double t5970;
  double t5974;
  double t16373;
  double t16413;
  double t6434;
  double t6435;
  double t6439;
  double t17024;
  double t6554;
  double t6555;
  double t6560;
  double t17154;
  double t17205;
  double t6190;
  double t6195;
  double t6206;
  double t16639;
  double t16644;
  double t6316;
  double t6318;
  double t6321;
  double t16950;
  double t16955;
  double t3557;
  double t3558;
  double t3573;
  double t19728;
  double t19735;
  double t19736;
  double t19688;
  double t19692;
  double t19695;
  double t2520;
  double t2545;
  double t2584;
  double t19757;
  double t19761;
  double t19762;
  double t19808;
  double t19813;
  double t19818;
  double t19866;
  double t19878;
  double t19881;
  double t11642;
  double t11799;
  double t20285;
  double t20289;
  double t20290;
  double t20307;
  double t20309;
  double t10256;
  double t10648;
  double t14184;
  double t13956;
  double t17054;
  double t17097;
  double t20655;
  double t20665;
  double t20674;
  double t20696;
  double t20697;
  double t16242;
  double t16497;
  double t16923;
  double t16783;
  double t10041;
  double t10043;
  double t20896;
  double t20897;
  double t20899;
  double t9710;
  double t9712;
  double t10175;
  double t20923;
  double t20926;
  double t20893;
  double t20906;
  double t10177;
  double t10246;
  double t10270;
  double t20487;
  double t20496;
  double t10697;
  double t10781;
  double t20455;
  double t20461;
  double t14092;
  double t14131;
  double t20554;
  double t20568;
  double t14197;
  double t14223;
  double t20591;
  double t20594;
  double t11612;
  double t11656;
  double t20298;
  double t20320;
  double t11837;
  double t11851;
  double t20380;
  double t20386;
  double t16289;
  double t16294;
  double t20752;
  double t20761;
  double t20770;
  double t20776;
  double t16508;
  double t16519;
  double t20793;
  double t20811;
  double t16849;
  double t16906;
  double t20828;
  double t20831;
  double t16937;
  double t16940;
  double t17057;
  double t17078;
  double t20685;
  double t20698;
  double t20724;
  double t20729;
  double t17106;
  double t17109;
  double t20959;
  double t21657;
  double t21665;
  double t21673;
  double t21580;
  double t21596;
  double t21598;
  double t20901;
  double t20921;
  double t19474;
  double t19484;
  double t19528;
  double t19543;
  double t19555;
  double t19561;
  double t20990;
  double t20994;
  double t21016;
  double t21020;
  double t24279;
  double t24292;
  double t24320;
  double t23743;
  double t24085;
  double t24243;
  double t21091;
  double t21092;
  double t21115;
  double t21116;
  double t21032;
  double t21051;
  double t21071;
  double t21073;
  double t19567;
  double t19581;
  double t19590;
  double t19612;
  double t19618;
  double t19623;
  double t21196;
  double t21220;
  double t21256;
  double t21288;
  double t24878;
  double t24880;
  double t24882;
  double t24868;
  double t24871;
  double t24873;
  double t21334;
  double t21356;
  double t21387;
  double t21416;
  double t21447;
  double t21472;
  double t21486;
  double t21493;
  double t25187;
  double t25189;
  double t25199;
  double t25201;
  double t25202;
  double t25228;
  double t25231;
  double t20339;
  double t25741;
  double t25744;
  double t25746;
  double t20782;
  double t26015;
  double t26044;
  double t26048;
  double t26049;
  double t20273;
  double t20274;
  double t20352;
  double t20353;
  double t20434;
  double t20443;
  double t20508;
  double t20514;
  double t20517;
  double t20579;
  double t20580;
  double t20598;
  double t20606;
  double t25747;
  double t25750;
  double t25751;
  double t25768;
  double t25781;
  double t25785;
  double t25793;
  double t25838;
  double t25842;
  double t26284;
  double t26294;
  double t20650;
  double t20651;
  double t20707;
  double t20713;
  double t20718;
  double t20738;
  double t20745;
  double t20781;
  double t20787;
  double t20838;
  double t20818;
  double t20821;
  double t26010;
  double t20839;
  double t26102;
  double t26103;
  double t25959;
  double t25967;
  double t26053;
  double t26054;
  double t26057;
  double t26095;
  double t26101;
  double t26107;
  double t26111;
  double t26115;
  double t26135;
  double t26207;
  double t26213;
  double t26171;
  double t26178;
  double t26179;
  double t26480;
  double t26487;
  double t26492;
  double t26506;
  double t26514;
  double t25675;
  double t25699;
  double t25710;
  double t26891;
  double t26901;
  double t26903;
  double t26962;
  double t26964;
  double t26966;
  double t25898;
  double t25902;
  double t25904;
  double t26917;
  double t26919;
  double t26932;
  double t2623;
  double t2627;
  double t2638;
  double t2731;
  double t2737;
  double t2756;
  double t2818;
  double t2826;
  double t2832;
  double t26993;
  double t27003;
  double t27005;
  double t27015;
  double t27016;
  double t27019;
  double t26189;
  double t26199;
  double t26200;
  double t26286;
  double t27200;
  double t27203;
  double t27207;
  double t27167;
  double t27171;
  double t27177;
  double t26441;
  double t26373;
  double t26407;
  double t26573;
  double t27465;
  double t27468;
  double t27472;
  double t27477;
  double t27495;
  double t27498;
  double t26710;
  double t26720;
  double t26621;
  double t26675;
  double t26678;
  double t25711;
  double t25734;
  double t27185;
  double t27237;
  double t27775;
  double t27777;
  double t27779;
  double t27761;
  double t27769;
  double t27773;
  double t27254;
  double t27276;
  double t27284;
  double t27324;
  double t27372;
  double t27374;
  double t25868;
  double t25921;
  double t25955;
  double t27475;
  double t27512;
  double t28076;
  double t28077;
  double t28079;
  double t28035;
  double t28051;
  double t28059;
  double t27565;
  double t27586;
  double t27591;
  double t27619;
  double t27638;
  double t27642;
  double t25184;
  double t25235;
  double t25237;
  double t25242;
  double t25309;
  double t25315;
  double t25349;
  double t25448;
  double t25449;
  double t25459;
  double t25496;
  double t25596;
  double t28233;
  double t28240;
  double t28245;
  double t28225;
  double t28227;
  double t25610;
  double t25620;
  double t25858;
  double t25860;
  double t25861;
  double t25957;
  double t28321;
  double t28322;
  double t28347;
  double t28304;
  double t28308;
  double t28309;
  double t26478;
  double t26490;
  double t26491;
  double t26516;
  double t26517;
  double t26529;
  double t26533;
  double t26536;
  double t26539;
  double t26555;
  double t26559;
  double t26563;
  double t26565;
  double t26569;
  double t26619;
  double t26654;
  double t28313;
  double t28359;
  double t26679;
  double t26702;
  double t26719;
  double t26731;
  double t26773;
  double t26796;
  double t26803;
  double t28348;
  double t28349;
  double t28350;
  double t28355;
  double t28363;
  double t28366;
  double t28368;
  double t26849;
  double t26856;
  double t26860;
  double t26863;
  double t26878;
  double t26883;
  double t26968;
  double t26971;
  double t26977;
  double t26980;
  double t26984;
  double t26986;
  double t27006;
  double t27023;
  double t27025;
  double t27029;
  double t27069;
  double t27072;
  double t27073;
  double t27075;
  double t27079;
  double t27081;
  double t27085;
  double t27416;
  double t27418;
  double t27419;
  double t27428;
  double t27430;
  double t27432;
  double t27446;
  double t27448;
  double t27458;
  double t27541;
  double t27544;
  double t27545;
  double t27548;
  double t27549;
  double t27553;
  double t27560;
  double t27459;
  double t28396;
  double t28569;
  double t28576;
  double t28578;
  double t28557;
  double t28559;
  double t28560;
  double t27581;
  double t28492;
  double t27595;
  double t27616;
  double t27632;
  double t28440;
  double t28465;
  double t27650;
  double t27930;
  double t27931;
  double t27935;
  double t27938;
  double t27940;
  double t27941;
  double t27944;
  double t27945;
  double t27946;
  double t27951;
  double t27952;
  double t27955;
  double t27991;
  double t27998;
  double t28004;
  double t28006;
  double t28027;
  double t28583;
  double t28591;
  double t28667;
  double t28669;
  double t28670;
  double t28662;
  double t28663;
  double t28664;
  double t28615;
  double t28135;
  double t28624;
  double t28140;
  double t28141;
  double t28159;
  double t28161;
  double t28633;
  double t28643;
  double t28180;
  double t28188;
  t192 = Cos(var1[6]);
  t128 = Cos(var1[5]);
  t213 = Sin(var1[3]);
  t502 = Sin(var1[6]);
  t344 = Cos(var1[3]);
  t459 = Cos(var1[4]);
  t377 = Sin(var1[4]);
  t393 = Sin(var1[5]);
  t234 = -1.*t128*t192*t213;
  t424 = t192*t377*t393;
  t522 = t459*t502;
  t548 = t424 + t522;
  t575 = -1.*t344*t548;
  t601 = t234 + t575;
  t676 = Cos(var1[7]);
  t704 = Sin(var1[7]);
  t768 = -1.*t676;
  t787 = 1. + t768;
  t798 = 0.21935*t787;
  t799 = 0.218868*t676;
  t807 = -0.031996*t704;
  t826 = t798 + t799 + t807;
  t688 = -0.031996*t676;
  t711 = 0.000482*t704;
  t727 = t688 + t711;
  t1443 = Cos(var1[8]);
  t1486 = Sin(var1[8]);
  t1574 = -1.*t1443;
  t1585 = 1. + t1574;
  t1589 = 0.21935*t1585;
  t1639 = 0.217154*t1443;
  t1655 = -0.12338*t1486;
  t1678 = t1589 + t1639 + t1655;
  t1707 = -1. + t1443;
  t1761 = 0.25*t1707;
  t1770 = -0.37338*t1443;
  t1838 = 0.002196*t1486;
  t1840 = t1761 + t1770 + t1838;
  t1469 = t676*t1443;
  t1520 = -1.*t704*t1486;
  t1542 = t1469 + t1520;
  t1955 = t1443*t704;
  t1960 = t676*t1486;
  t1961 = t1955 + t1960;
  t1968 = 0.21935*t704;
  t1972 = -1.*t704*t1678;
  t1973 = t676*t1840;
  t1979 = t1968 + t1972 + t1973;
  t1704 = t676*t1678;
  t1865 = t704*t1840;
  t1917 = t798 + t1704 + t1865;
  t1995 = -1.*t1443*t704;
  t2024 = -1.*t676*t1486;
  t2033 = t1995 + t2024;
  t627 = t459*t192;
  t629 = -1.*t377*t393*t502;
  t638 = t627 + t629;
  t2425 = t344*t128*t192;
  t2433 = -1.*t213*t548;
  t2435 = t2425 + t2433;
  t748 = -1.*t676*t727;
  t831 = -1.*t826*t704;
  t832 = t748 + t831;
  t874 = t676*t832;
  t935 = t676*t826;
  t948 = -1.*t727*t704;
  t961 = t935 + t948;
  t997 = t704*t961;
  t1025 = t874 + t997;
  t1115 = -1.*t128*t676*t502;
  t1136 = t393*t704;
  t1137 = t1115 + t1136;
  t1151 = t459*t192*t676;
  t1155 = t676*t393*t502;
  t1193 = t128*t704;
  t1194 = t1155 + t1193;
  t1221 = -1.*t377*t1194;
  t1224 = t1151 + t1221;
  t1280 = t676*t393;
  t1286 = t128*t502*t704;
  t1291 = t1280 + t1286;
  t1299 = -1.*t459*t192*t704;
  t1301 = t128*t676;
  t1303 = -1.*t393*t502*t704;
  t1309 = t1301 + t1303;
  t1310 = -1.*t377*t1309;
  t1359 = t1299 + t1310;
  t1967 = -1.*t1917*t1961;
  t1980 = -1.*t1979*t1542;
  t1986 = t1967 + t1980;
  t1991 = t1542*t1986;
  t2036 = t1979*t2033;
  t2040 = t1917*t1542;
  t2061 = t2036 + t2040;
  t2065 = t1961*t2061;
  t2072 = t1991 + t2065;
  t2094 = 0.0875*t2033;
  t2111 = 0.124881*t1961;
  t2118 = t2094 + t2111;
  t2134 = -1.*t128*t502*t2033;
  t2146 = t393*t1542;
  t2148 = t2134 + t2146;
  t2164 = t459*t192*t2033;
  t2181 = t393*t502*t2033;
  t2195 = t128*t1542;
  t2214 = t2181 + t2195;
  t2222 = -1.*t377*t2214;
  t2225 = t2164 + t2222;
  t2240 = t393*t1961;
  t2249 = -1.*t128*t502*t1542;
  t2270 = t2240 + t2249;
  t2287 = t459*t192*t1542;
  t2294 = t128*t1961;
  t2304 = t393*t502*t1542;
  t2308 = t2294 + t2304;
  t2321 = -1.*t377*t2308;
  t2333 = t2287 + t2321;
  t2957 = t459*t192*t393;
  t2977 = -1.*t377*t502;
  t2992 = t2957 + t2977;
  t3052 = -1.*t192*t377;
  t3056 = -1.*t459*t393*t502;
  t3060 = t3052 + t3056;
  t3089 = -1.*t192*t676*t377;
  t3110 = -1.*t459*t1194;
  t3116 = t3089 + t3110;
  t3125 = t192*t377*t704;
  t3127 = -1.*t459*t1309;
  t3129 = t3125 + t3127;
  t3138 = -1.*t192*t377*t2033;
  t3148 = -1.*t459*t2214;
  t3151 = t3138 + t3148;
  t3157 = -1.*t192*t377*t1542;
  t3194 = -1.*t459*t2308;
  t3196 = t3157 + t3194;
  t3619 = -1.*t192;
  t3624 = 1. + t3619;
  t3658 = -0.0875*t3624;
  t3663 = -0.079366*t192;
  t3664 = -0.000864*t502;
  t3677 = t3658 + t3663 + t3664;
  t3709 = 0.217782*t128;
  t3715 = -1.*t393*t3677;
  t3760 = t3709 + t3715;
  t3781 = 0.000864*t192;
  t3809 = 0.008134*t502;
  t3822 = t3781 + t3809;
  t3856 = t459*t3760;
  t3864 = t377*t3822;
  t3869 = t3856 + t3864;
  t3890 = -1.*t459*t3760;
  t3910 = -1.*t377*t3822;
  t3925 = t3890 + t3910;
  t3768 = -1.*t377*t3760;
  t3827 = t459*t3822;
  t3833 = t3768 + t3827;
  t4006 = -1.*t459*t192*t393;
  t4007 = t377*t502;
  t4009 = t4006 + t4007;
  t3588 = 0.217782*t393;
  t3681 = t128*t3677;
  t3699 = t3588 + t3681;
  t4159 = t192*t377;
  t4160 = t459*t393*t502;
  t4170 = t4159 + t4160;
  t4489 = -0.14451*t192;
  t4501 = -1.*t502*t727;
  t4544 = t3658 + t4489 + t4501;
  t4548 = -1.*t393*t4544;
  t4558 = t128*t826;
  t4559 = t4548 + t4558;
  t4560 = -1.*t377*t4559;
  t4561 = -0.05701*t502;
  t4576 = t192*t727;
  t4583 = t4561 + t4576;
  t4593 = t459*t4583;
  t4599 = t4560 + t4593;
  t4673 = t459*t4559;
  t4689 = t377*t4583;
  t4690 = t4673 + t4689;
  t4819 = t128*t4544;
  t4821 = t393*t826;
  t4824 = t4819 + t4821;
  t4763 = t192*t676*t377;
  t4764 = t459*t1194;
  t4780 = t4763 + t4764;
  t4622 = -1.*t459*t4559;
  t4643 = -1.*t377*t4583;
  t4658 = t4622 + t4643;
  t5030 = -1.*t192*t377*t704;
  t5032 = t459*t1309;
  t5034 = t5030 + t5032;
  t5616 = -0.037381*t502;
  t5617 = t192*t1979;
  t5625 = t5616 + t5617;
  t5633 = -0.124881*t192;
  t5649 = -1.*t502*t1979;
  t5652 = t3658 + t5633 + t5649;
  t5654 = -1.*t393*t5652;
  t5664 = t128*t1917;
  t5671 = t5654 + t5664;
  t5784 = t459*t5625;
  t5791 = -1.*t377*t5671;
  t5793 = t5784 + t5791;
  t5770 = t377*t5625;
  t5771 = t459*t5671;
  t5782 = t5770 + t5771;
  t5808 = t192*t377*t2033;
  t5816 = t459*t2214;
  t5819 = t5808 + t5816;
  t5627 = -1.*t377*t5625;
  t5698 = -1.*t459*t5671;
  t5704 = t5627 + t5698;
  t5855 = t128*t5652;
  t5856 = t393*t1917;
  t5862 = t5855 + t5856;
  t6110 = t192*t377*t1542;
  t6116 = t459*t2308;
  t6129 = t6110 + t6116;
  t6652 = t128*t676*t502;
  t6686 = -1.*t393*t704;
  t6695 = t6652 + t6686;
  t6715 = -1.*t676*t393;
  t6719 = -1.*t128*t502*t704;
  t6731 = t6715 + t6719;
  t7223 = -1.*t128*t192*t213*t377;
  t7235 = -1.*t344*t192*t393;
  t7258 = t7223 + t7235;
  t6770 = t128*t502*t2033;
  t6780 = -1.*t393*t1542;
  t6822 = t6770 + t6780;
  t6833 = -1.*t393*t1961;
  t6868 = t128*t502*t1542;
  t6898 = t6833 + t6868;
  t8444 = t344*t128*t192*t377;
  t8450 = -1.*t192*t213*t393;
  t8455 = t8444 + t8450;
  t4202 = t393*t3699;
  t9636 = -0.217782*t393;
  t9638 = -1.*t128*t3677;
  t9647 = t9636 + t9638;
  t4267 = t128*t3699*t502;
  t3707 = -1.*t393*t3699;
  t4068 = t128*t192*t3699;
  t4406 = -1.e-5*t676;
  t4407 = 0.000085*t704;
  t4410 = t4406 + t4407;
  t4429 = 0.00025*t676;
  t4434 = 0.001783*t704;
  t4436 = t4429 + t4434;
  t4446 = 0.009916*t676;
  t4449 = 0.00025*t704;
  t4451 = t4446 + t4449;
  t4825 = -1.*t128*t192*t4824;
  t10278 = -1.*t128*t4544;
  t10279 = -1.*t393*t826;
  t10299 = t10278 + t10279;
  t4847 = t4824*t1137;
  t5069 = t128*t192*t4824;
  t5107 = -1.*t4824*t1291;
  t5272 = -1.*t4824*t1137;
  t5432 = t4824*t1291;
  t5520 = -3.e-6*t1961;
  t5522 = 0.006182*t1542;
  t5524 = t5520 + t5522;
  t5550 = 0.000035*t1961;
  t5613 = -3.e-6*t1542;
  t5614 = t5550 + t5613;
  t5868 = t128*t192*t5862;
  t16311 = -1.*t128*t5652;
  t16321 = -1.*t393*t1917;
  t16325 = t16311 + t16321;
  t5947 = -1.*t5862*t2148;
  t6189 = t5862*t2148;
  t6303 = -1.*t5862*t2270;
  t6437 = -1.*t128*t192*t5862;
  t6551 = t5862*t2270;
  t3834 = t128*t377*t3833;
  t3871 = -1.*t459*t128*t3869;
  t3883 = t3707 + t3834 + t3871;
  t9924 = -1.*t128*t3699;
  t10027 = -1.*t192*t393*t3699;
  t4073 = t3833*t548;
  t4083 = t3869*t4009;
  t4089 = t4068 + t4073 + t4083;
  t4242 = -1.*t128*t377*t3833;
  t4243 = t459*t128*t3869;
  t4249 = t4202 + t4242 + t4243;
  t17310 = Power(t459,2);
  t17371 = Power(t377,2);
  t9679 = t128*t3699;
  t9755 = -1.*t393*t3699*t502;
  t4288 = -1.*t3869*t4170;
  t4330 = -1.*t3833*t638;
  t4356 = t4267 + t4288 + t4330;
  t4800 = -1.*t548*t4599;
  t4801 = -1.*t4009*t4690;
  t4843 = t4800 + t4801 + t4825;
  t10449 = t192*t393*t4824;
  t4854 = t4690*t4780;
  t4860 = t4599*t1224;
  t4864 = t4847 + t4854 + t4860;
  t10515 = t4824*t1194;
  t10552 = t4559*t1137;
  t5290 = -1.*t4690*t4780;
  t5293 = -1.*t4599*t1224;
  t5298 = t5272 + t5290 + t5293;
  t13194 = -1.*t4824*t1194;
  t13794 = -1.*t4559*t1137;
  t5437 = t4690*t5034;
  t5438 = t4599*t1359;
  t5441 = t5432 + t5437 + t5438;
  t14307 = t4559*t1291;
  t14407 = t4824*t1309;
  t5038 = t548*t4599;
  t5041 = t4009*t4690;
  t5076 = t5038 + t5041 + t5069;
  t11275 = -1.*t192*t393*t4824;
  t5108 = -1.*t4690*t5034;
  t5119 = -1.*t4599*t1359;
  t5123 = t5107 + t5108 + t5119;
  t12624 = -1.*t4559*t1291;
  t12646 = -1.*t4824*t1309;
  t5848 = t4009*t5782;
  t5849 = t548*t5793;
  t5878 = t5848 + t5849 + t5868;
  t16338 = -1.*t192*t393*t5862;
  t5969 = -1.*t5782*t5819;
  t5970 = -1.*t5793*t2225;
  t5974 = t5947 + t5969 + t5970;
  t16373 = -1.*t5862*t2214;
  t16413 = -1.*t5671*t2148;
  t6434 = -1.*t4009*t5782;
  t6435 = -1.*t548*t5793;
  t6439 = t6434 + t6435 + t6437;
  t17024 = t192*t393*t5862;
  t6554 = t5782*t6129;
  t6555 = t5793*t2333;
  t6560 = t6551 + t6554 + t6555;
  t17154 = t5671*t2270;
  t17205 = t5862*t2308;
  t6190 = t5782*t5819;
  t6195 = t5793*t2225;
  t6206 = t6189 + t6190 + t6195;
  t16639 = t5862*t2214;
  t16644 = t5671*t2148;
  t6316 = -1.*t5782*t6129;
  t6318 = -1.*t5793*t2333;
  t6321 = t6303 + t6316 + t6318;
  t16950 = -1.*t5671*t2270;
  t16955 = -1.*t5862*t2308;
  t3557 = -1.*t192*t377*t393;
  t3558 = -1.*t459*t502;
  t3573 = t3557 + t3558;
  t19728 = -1.*t128*t213*t502;
  t19735 = t344*t638;
  t19736 = t19728 + t19735;
  t19688 = -1.*t192*t676*t377*t393;
  t19692 = -1.*t459*t676*t502;
  t19695 = t19688 + t19692;
  t2520 = -1.*t344*t128*t502;
  t2545 = -1.*t213*t638;
  t2584 = t2520 + t2545;
  t19757 = t192*t377*t393*t704;
  t19761 = t459*t502*t704;
  t19762 = t19757 + t19761;
  t19808 = -1.*t192*t377*t393*t2033;
  t19813 = -1.*t459*t502*t2033;
  t19818 = t19808 + t19813;
  t19866 = -1.*t192*t377*t393*t1542;
  t19878 = -1.*t459*t502*t1542;
  t19881 = t19866 + t19878;
  t11642 = t502*t4583;
  t11799 = t192*t4583*t704;
  t20285 = 0.05701*t502;
  t20289 = -1.*t192*t727;
  t20290 = t20285 + t20289;
  t20307 = -0.05701*t192;
  t20309 = t20307 + t4501;
  t10256 = -1.*t502*t4583;
  t10648 = t192*t676*t4583;
  t14184 = -1.*t192*t4583*t704;
  t13956 = -1.*t192*t676*t4583;
  t17054 = -1.*t502*t5625;
  t17097 = t192*t5625*t1542;
  t20655 = 0.037381*t502;
  t20665 = -1.*t192*t1979;
  t20674 = t20655 + t20665;
  t20696 = -0.037381*t192;
  t20697 = t20696 + t5649;
  t16242 = t502*t5625;
  t16497 = -1.*t192*t5625*t2033;
  t16923 = -1.*t192*t5625*t1542;
  t16783 = t192*t5625*t2033;
  t10041 = -1.*t128*t3760;
  t10043 = t3707 + t10041;
  t20896 = -0.000864*t192;
  t20897 = -0.008134*t502;
  t20899 = t20896 + t20897;
  t9710 = t128*t3760;
  t9712 = t4202 + t9710;
  t10175 = -1.*t192*t393*t3760;
  t20923 = 0.008134*t192;
  t20926 = t20923 + t3664;
  t20893 = Power(t128,2);
  t20906 = Power(t393,2);
  t10177 = t3822*t502;
  t10246 = t192*t393*t4559;
  t10270 = t10246 + t4825 + t10256;
  t20487 = -1.*t192*t4583;
  t20496 = -1.*t502*t20309;
  t10697 = t4559*t1194;
  t10781 = t10648 + t10697 + t4847;
  t20455 = -1.*t676*t502*t4583;
  t20461 = t192*t676*t20309;
  t14092 = -1.*t4559*t1194;
  t14131 = t13956 + t14092 + t5272;
  t20554 = t676*t502*t4583;
  t20568 = -1.*t192*t676*t20309;
  t14197 = t4559*t1309;
  t14223 = t14184 + t5432 + t14197;
  t20591 = t502*t4583*t704;
  t20594 = -1.*t192*t20309*t704;
  t11612 = -1.*t192*t393*t4559;
  t11656 = t11612 + t5069 + t11642;
  t20298 = t192*t4583;
  t20320 = t502*t20309;
  t11837 = -1.*t4559*t1309;
  t11851 = t11799 + t5107 + t11837;
  t20380 = -1.*t502*t4583*t704;
  t20386 = t192*t20309*t704;
  t16289 = -1.*t192*t393*t5671;
  t16294 = t16242 + t16289 + t5868;
  t20752 = t192*t5625;
  t20761 = t502*t20697;
  t20770 = t502*t5625*t2033;
  t20776 = -1.*t192*t20697*t2033;
  t16508 = -1.*t5671*t2214;
  t16519 = t16497 + t16508 + t5947;
  t20793 = -1.*t502*t5625*t2033;
  t20811 = t192*t20697*t2033;
  t16849 = t5671*t2214;
  t16906 = t16783 + t16849 + t6189;
  t20828 = t502*t5625*t1542;
  t20831 = -1.*t192*t20697*t1542;
  t16937 = -1.*t5671*t2308;
  t16940 = t16923 + t6303 + t16937;
  t17057 = t192*t393*t5671;
  t17078 = t17054 + t17057 + t6437;
  t20685 = -1.*t192*t5625;
  t20698 = -1.*t502*t20697;
  t20724 = -1.*t502*t5625*t1542;
  t20729 = t192*t20697*t1542;
  t17106 = t5671*t2308;
  t17109 = t17097 + t6551 + t17106;
  t20959 = t20893*t20899*t502;
  t21657 = -1.*t459*t393*t20899;
  t21665 = t377*t20926;
  t21673 = t21657 + t21665;
  t21580 = t377*t393*t20899;
  t21596 = t459*t20926;
  t21598 = t21580 + t21596;
  t20901 = t20893*t192*t20899;
  t20921 = -1.*t128*t3699*t502;
  t19474 = t459*t192*t676*t393;
  t19484 = -1.*t676*t377*t502;
  t19528 = t19474 + t19484;
  t19543 = -1.*t459*t192*t393*t704;
  t19555 = t377*t502*t704;
  t19561 = t19543 + t19555;
  t20990 = t128*t502*t4824;
  t20994 = -1.*t20893*t192*t20290;
  t21016 = -1.*t128*t192*t676*t4824;
  t21020 = t128*t20290*t1137;
  t24279 = -1.*t459*t393*t20290;
  t24292 = t377*t20309;
  t24320 = t24279 + t24292;
  t23743 = t377*t393*t20290;
  t24085 = t459*t20309;
  t24243 = t23743 + t24085;
  t21091 = -1.*t128*t502*t4824;
  t21092 = t20893*t192*t20290;
  t21115 = -1.*t128*t192*t4824*t704;
  t21116 = -1.*t128*t20290*t1291;
  t21032 = t128*t192*t676*t4824;
  t21051 = -1.*t128*t20290*t1137;
  t21071 = t128*t192*t4824*t704;
  t21073 = t128*t20290*t1291;
  t19567 = t459*t192*t393*t2033;
  t19581 = -1.*t377*t502*t2033;
  t19590 = t19567 + t19581;
  t19612 = t459*t192*t393*t1542;
  t19618 = -1.*t377*t502*t1542;
  t19623 = t19612 + t19618;
  t21196 = t20893*t192*t20674;
  t21220 = -1.*t128*t502*t5862;
  t21256 = t128*t192*t5862*t2033;
  t21288 = -1.*t128*t20674*t2148;
  t24878 = -1.*t459*t393*t20674;
  t24880 = t377*t20697;
  t24882 = t24878 + t24880;
  t24868 = t377*t393*t20674;
  t24871 = t459*t20697;
  t24873 = t24868 + t24871;
  t21334 = -1.*t128*t192*t5862*t2033;
  t21356 = t128*t20674*t2148;
  t21387 = t128*t192*t5862*t1542;
  t21416 = -1.*t128*t20674*t2270;
  t21447 = -1.*t20893*t192*t20674;
  t21472 = t128*t502*t5862;
  t21486 = -1.*t128*t192*t5862*t1542;
  t21493 = t128*t20674*t2270;
  t25187 = -1.*t676*t1443;
  t25189 = t704*t1486;
  t25199 = t25187 + t25189;
  t25201 = 5.e-6*t25199;
  t25202 = 0.124881*t1542;
  t25228 = 0.0875*t25199;
  t25231 = t25202 + t25228;
  t20339 = -1.*t676*t826;
  t25741 = 0.000482*t676;
  t25744 = 0.031996*t704;
  t25746 = t25741 + t25744;
  t20782 = -1.*t1917*t1542;
  t26015 = 0.21935*t676;
  t26044 = -1.*t676*t1678;
  t26048 = -1.*t704*t1840;
  t26049 = t26015 + t26044 + t26048;
  t20273 = t192*t4544;
  t20274 = t11642 + t20273;
  t20352 = -1.*t502*t4544*t704;
  t20353 = t20339 + t11799 + t20352;
  t20434 = -1.*t192*t4544;
  t20443 = t10256 + t20434;
  t20508 = -1.*t676*t502*t4544;
  t20514 = t826*t704;
  t20517 = t10648 + t20508 + t20514;
  t20579 = t502*t4544*t704;
  t20580 = t935 + t14184 + t20579;
  t20598 = t676*t502*t4544;
  t20606 = t13956 + t20598 + t831;
  t25747 = -1.*t676*t25746;
  t25750 = t20339 + t25747;
  t25751 = t676*t25750;
  t25768 = -1.*t704*t832;
  t25781 = t676*t961;
  t25785 = -1.*t25746*t704;
  t25793 = t831 + t25785;
  t25838 = t704*t25793;
  t25842 = t25751 + t25768 + t25781 + t25838;
  t26284 = Power(t192,2);
  t26294 = Power(t502,2);
  t20650 = -1.*t192*t5652;
  t20651 = t17054 + t20650;
  t20707 = t1917*t1961;
  t20713 = -1.*t502*t5652*t1542;
  t20718 = t20707 + t17097 + t20713;
  t20738 = t192*t5652;
  t20745 = t16242 + t20738;
  t20781 = t502*t5652*t2033;
  t20787 = t16497 + t20781 + t20782;
  t20838 = -1.*t502*t5652*t2033;
  t20818 = t502*t5652*t1542;
  t20821 = t1967 + t16923 + t20818;
  t26010 = -1.*t1979*t1961;
  t20839 = t16783 + t20838 + t2040;
  t26102 = t1917*t2033;
  t26103 = t1979*t1542;
  t25959 = t2033*t1986;
  t25967 = -1.*t1979*t2033;
  t26053 = -1.*t26049*t1542;
  t26054 = t25967 + t26010 + t26053 + t20782;
  t26057 = t1542*t26054;
  t26095 = t1542*t2061;
  t26101 = t26049*t2033;
  t26107 = t1979*t25199;
  t26111 = t26101 + t26102 + t26103 + t26107;
  t26115 = t1961*t26111;
  t26135 = t25959 + t26057 + t26095 + t26115;
  t26207 = -0.009916*t704;
  t26213 = t4429 + t26207;
  t26171 = 0.001783*t676;
  t26178 = -0.00025*t704;
  t26179 = t26171 + t26178;
  t26480 = 0.006182*t2033;
  t26487 = t26480 + t5613;
  t26492 = -3.e-6*t2033;
  t26506 = 0.000035*t1542;
  t26514 = t26492 + t26506;
  t25675 = -1.*t676*t393*t502;
  t25699 = -1.*t128*t704;
  t25710 = t25675 + t25699;
  t26891 = t128*t192*t213;
  t26901 = t344*t548;
  t26903 = t26891 + t26901;
  t26962 = t213*t2148;
  t26964 = t344*t2225;
  t26966 = t26962 + t26964;
  t25898 = t128*t2033;
  t25902 = t393*t502*t25199;
  t25904 = t25898 + t25902;
  t26917 = -1.*t459*t192*t676;
  t26919 = -1.*t377*t25710;
  t26932 = t26917 + t26919;
  t2623 = t344*t1137;
  t2627 = -1.*t213*t1224;
  t2638 = t2623 + t2627;
  t2731 = t344*t2148;
  t2737 = -1.*t213*t2225;
  t2756 = t2731 + t2737;
  t2818 = t344*t2270;
  t2826 = -1.*t213*t2333;
  t2832 = t2818 + t2826;
  t26993 = t393*t2033;
  t27003 = -1.*t128*t502*t25199;
  t27005 = t26993 + t27003;
  t27015 = t459*t192*t25199;
  t27016 = -1.*t377*t25904;
  t27019 = t27015 + t27016;
  t26189 = 0.000085*t676;
  t26199 = 1.e-5*t704;
  t26200 = t26189 + t26199;
  t26286 = t26284*t676*t25746;
  t27200 = t128*t727;
  t27203 = t393*t502*t25746;
  t27207 = t27200 + t27203;
  t27167 = t393*t727;
  t27171 = -1.*t128*t502*t25746;
  t27177 = t27167 + t27171;
  t26441 = t26284*t25746*t704;
  t26373 = -1.*t26284*t676*t25746;
  t26407 = -1.*t26284*t25746*t704;
  t26573 = t26284*t26049*t1542;
  t27465 = t393*t1979;
  t27468 = -1.*t128*t502*t26049;
  t27472 = t27465 + t27468;
  t27477 = t128*t1979;
  t27495 = t393*t502*t26049;
  t27498 = t27477 + t27495;
  t26710 = -1.*t26284*t26049*t2033;
  t26720 = -1.*t192*t5625*t25199;
  t26621 = -1.*t26284*t26049*t1542;
  t26675 = t26284*t26049*t2033;
  t26678 = t192*t5625*t25199;
  t25711 = t459*t25710;
  t25734 = t3089 + t25711;
  t27185 = -1.*t128*t192*t27177;
  t27237 = t27177*t1137;
  t27775 = t459*t27207;
  t27777 = t192*t377*t25746;
  t27779 = t27775 + t27777;
  t27761 = -1.*t377*t27207;
  t27769 = t459*t192*t25746;
  t27773 = t27761 + t27769;
  t27254 = t128*t192*t27177;
  t27276 = -1.*t4824*t6695;
  t27284 = -1.*t27177*t1291;
  t27324 = -1.*t27177*t1137;
  t27372 = t4824*t6695;
  t27374 = t27177*t1291;
  t25868 = t192*t377*t25199;
  t25921 = t459*t25904;
  t25955 = t25868 + t25921;
  t27475 = -1.*t128*t192*t27472;
  t27512 = t27472*t2270;
  t28076 = t459*t27498;
  t28077 = t192*t377*t26049;
  t28079 = t28076 + t28077;
  t28035 = -1.*t377*t27498;
  t28051 = t459*t192*t26049;
  t28059 = t28035 + t28051;
  t27565 = t128*t192*t27472;
  t27586 = -1.*t27472*t2148;
  t27591 = -1.*t5862*t27005;
  t27619 = -1.*t27472*t2270;
  t27638 = t27472*t2148;
  t27642 = t5862*t27005;
  t25184 = 0.000019783370916*t2033;
  t25235 = 0.02973458*t25231;
  t25237 = t25184 + t25201 + t25235;
  t25242 = -0.5*var2[8]*t25237;
  t25309 = 0.21935*t1443;
  t25315 = -1.*t1443*t1678;
  t25349 = t1840*t1486;
  t25448 = t25309 + t25315 + t25349;
  t25449 = 0.009008821*t2033*t25448;
  t25459 = t1443*t1840;
  t25496 = -0.21935*t1486;
  t25596 = t1678*t1486;
  t28233 = 0.002196*t1443;
  t28240 = 0.12338*t1486;
  t28245 = t28233 + t28240;
  t28225 = -0.12338*t1443;
  t28227 = t28225 + t1838;
  t25610 = t25459 + t25496 + t25596;
  t25620 = -0.241*t25610*t25231;
  t25858 = 0.009008821*t1542*t5819;
  t25860 = -0.241*t25231*t5819;
  t25861 = 0.009008821*t2033*t6129;
  t25957 = -0.241*t2118*t25955;
  t28321 = -1.*t704*t28227;
  t28322 = t676*t28245;
  t28347 = t28321 + t28322;
  t28304 = t676*t28227;
  t28308 = t704*t28245;
  t28309 = t28304 + t28308;
  t26478 = -5.e-6*t502*t1542;
  t26490 = -1.*t192*t2033*t26487;
  t26491 = -1.*t192*t2033*t5614;
  t26516 = -1.*t192*t1542*t26514;
  t26517 = -1.*t192*t25199*t5524;
  t26529 = t192*t20651*t1542;
  t26533 = t502*t20718;
  t26536 = t26529 + t26533;
  t26539 = -0.241*t25231*t26536;
  t26555 = t192*t20745*t2033;
  t26559 = t502*t20787;
  t26563 = t26555 + t26559;
  t26565 = 0.009008821*t2033*t26563;
  t26569 = t192*t20651*t2033;
  t26619 = t192*t25199*t20821;
  t26654 = t192*t2033*t20839;
  t28313 = -1.*t28309*t1961;
  t28359 = t28309*t1542;
  t26679 = -1.*t502*t5652*t25199;
  t26702 = t192*t20745*t25199;
  t26719 = -1.*t1917*t2033;
  t26731 = t502*t5652*t25199;
  t26773 = t192*t2033*t20821;
  t26796 = t192*t1542*t20839;
  t26803 = t26773 + t26796;
  t28348 = -1.*t28347*t1542;
  t28349 = t25967 + t28313 + t20782 + t28348;
  t28350 = t1542*t28349;
  t28355 = t28347*t2033;
  t28363 = t26102 + t28355 + t28359 + t26107;
  t28366 = t1961*t28363;
  t28368 = t25959 + t26095 + t28350 + t28366;
  t26849 = -0.000673517475602*t2033*t1542;
  t26856 = -1.*t1542*t26487;
  t26860 = -1.*t1542*t5614;
  t26863 = -1.*t1961*t26514;
  t26878 = -1.*t2033*t5524;
  t26883 = -0.482*t2118*t25231;
  t26968 = 0.009008821*t1542*t26966;
  t26971 = -0.241*t25231*t26966;
  t26977 = t213*t2270;
  t26980 = t344*t2333;
  t26984 = t26977 + t26980;
  t26986 = 0.009008821*t2033*t26984;
  t27006 = t213*t27005;
  t27023 = t344*t27019;
  t27025 = t27006 + t27023;
  t27029 = -0.241*t2118*t27025;
  t27069 = 0.009008821*t1542*t2756;
  t27072 = -0.241*t25231*t2756;
  t27073 = 0.009008821*t2033*t2832;
  t27075 = t344*t27005;
  t27079 = -1.*t213*t27019;
  t27081 = t27075 + t27079;
  t27085 = -0.241*t2118*t27081;
  t27416 = -5.e-6*t128*t192*t1542;
  t27418 = -1.*t26487*t2148;
  t27419 = -1.*t5614*t2148;
  t27428 = -1.*t26514*t2270;
  t27430 = -1.*t5524*t27005;
  t27432 = t16294*t2148;
  t27446 = t128*t192*t16519;
  t27448 = t27432 + t27446;
  t27458 = 0.009008821*t2033*t27448;
  t27541 = t2270*t16906;
  t27544 = t2148*t16940;
  t27545 = t27541 + t27544;
  t27548 = t17078*t2270;
  t27549 = t128*t192*t17109;
  t27553 = t27548 + t27549;
  t27560 = -0.241*t25231*t27553;
  t27459 = t17078*t2148;
  t28396 = t26284*t28347*t1542;
  t28569 = -1.*t128*t502*t28347;
  t28576 = t393*t28309;
  t28578 = t28569 + t28576;
  t28557 = t393*t502*t28347;
  t28559 = t128*t28309;
  t28560 = t28557 + t28559;
  t27581 = t16294*t27005;
  t28492 = -1.*t26284*t28347*t2033;
  t27595 = -1.*t5671*t25904;
  t27616 = t2148*t16906;
  t27632 = t27005*t16940;
  t28440 = -1.*t26284*t28347*t1542;
  t28465 = t26284*t28347*t2033;
  t27650 = t5671*t25904;
  t27930 = -5.e-6*t4009*t1542;
  t27931 = -1.*t26487*t5819;
  t27935 = -1.*t5614*t5819;
  t27938 = -1.*t26514*t6129;
  t27940 = -1.*t5524*t25955;
  t27941 = t5878*t5819;
  t27944 = t4009*t5974;
  t27945 = t27941 + t27944;
  t27946 = 0.009008821*t2033*t27945;
  t27951 = t6129*t6206;
  t27952 = t5819*t6321;
  t27955 = t27951 + t27952;
  t27991 = t6439*t6129;
  t27998 = t4009*t6560;
  t28004 = t27991 + t27998;
  t28006 = -0.241*t25231*t28004;
  t28027 = t6439*t5819;
  t28583 = -1.*t128*t192*t28578;
  t28591 = t28578*t2270;
  t28667 = t459*t28560;
  t28669 = t192*t377*t28347;
  t28670 = t28667 + t28669;
  t28662 = -1.*t377*t28560;
  t28663 = t459*t192*t28347;
  t28664 = t28662 + t28663;
  t28615 = t128*t192*t28578;
  t28135 = t5878*t25955;
  t28624 = -1.*t28578*t2148;
  t28140 = -1.*t5782*t25955;
  t28141 = -1.*t5793*t27019;
  t28159 = t5819*t6206;
  t28161 = t25955*t6321;
  t28633 = -1.*t28578*t2270;
  t28643 = t28578*t2148;
  t28180 = t5782*t25955;
  t28188 = t5793*t27019;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.241*t2118*(-1.*t213*t2148 - 1.*t2225*t344) + 0.009008821*t1542*(-1.*t213*t2270 - 1.*t2333*t344) + 0.000946944*t601 - 1.528*t1025*t601 - 0.241*t2072*t601 - 0.008914864*(t128*t213*t502 - 1.*t344*t638) + 0.08711128*(-1.*t1137*t213 - 1.*t1224*t344)*t676 - 0.08711128*(-1.*t1291*t213 - 1.*t1359*t344)*t704)*var2[1] - 0.5*(0.000946944*t2435 - 1.528*t1025*t2435 - 0.241*t2072*t2435 - 0.008914864*t2584 - 0.241*t2118*t2756 + 0.009008821*t1542*t2832 + 0.08711128*t2638*t676 - 0.08711128*(-1.*t1359*t213 + t1291*t344)*t704)*var2[2])*var2[6];
  p_output1[4]=(-0.5*(-0.241*t2118*t2225 + 0.009008821*t1542*t2333 + 0.000946944*t548 - 1.528*t1025*t548 - 0.241*t2072*t548 - 0.008914864*t638 + 0.08711128*t1224*t676 - 0.08711128*t1359*t704)*var2[0] - 0.5*(-0.000946944*t213*t2992 + 1.528*t1025*t213*t2992 + 0.241*t2072*t213*t2992 + 0.008914864*t213*t3060 + 0.241*t2118*t213*t3151 - 0.009008821*t1542*t213*t3196 - 0.08711128*t213*t3116*t676 + 0.08711128*t213*t3129*t704)*var2[1] - 0.5*(0.000946944*t2992*t344 - 1.528*t1025*t2992*t344 - 0.241*t2072*t2992*t344 - 0.008914864*t3060*t344 - 0.241*t2118*t3151*t344 + 0.009008821*t1542*t3196*t344 + 0.08711128*t3116*t344*t676 - 0.08711128*t3129*t344*t704)*var2[2] - 0.5*(5.e-6*t3573 + 0.000822*t128*t377 - 1.*t1224*t4436 - 1.*t1359*t4451 - 1.528*t1025*((-1.*t3116*t4599 - 1.*t1224*t4658 - 1.*t1224*t4690 - 1.*t4599*t4780)*t5034 + t4780*(t3129*t4599 + t1359*t4658 + t1359*t4690 + t4599*t5034) + t1359*t5298 + t1224*t5441) - 5.e-6*t1961*t548 - 1.*t4410*t548 - 0.008914864*((t128*t377*t3869 + t128*t377*t3925)*t4009 - 1.*t128*t377*t4089 + t3883*t548 + t128*t459*(t2992*t3833 + t3833*t4009 + t3869*t548 + t3925*t548)) - 1.*t2225*t5524 - 1.*t2333*t5614 + 0.009008821*t1542*((t548*t5704 + t548*t5782 + t2992*t5793 + t4009*t5793)*t5819 + t4009*(-1.*t2225*t5704 - 1.*t2225*t5782 - 1.*t3151*t5793 - 1.*t5793*t5819) + t2225*t5878 + t548*t5974) - 0.241*t2072*((t2225*t5704 + t2225*t5782 + t3151*t5793 + t5793*t5819)*t6129 + t5819*(-1.*t2333*t5704 - 1.*t2333*t5782 - 1.*t3196*t5793 - 1.*t5793*t6129) + t2333*t6206 + t2225*t6321) + 0.000037*t638 + 0.000946944*((-1.*t128*t377*t3869 - 1.*t128*t377*t3925)*t4170 - 1.*t128*t377*t4356 + t4249*t638 + t128*t459*(-1.*t3060*t3833 - 1.*t3833*t4170 - 1.*t3869*t638 - 1.*t3925*t638)) - 0.241*t2118*((-1.*t548*t5704 - 1.*t548*t5782 - 1.*t2992*t5793 - 1.*t4009*t5793)*t6129 + t4009*(t2333*t5704 + t2333*t5782 + t3196*t5793 + t5793*t6129) + t2333*t6439 + t548*t6560) + 0.08711128*(t4009*(-1.*t3129*t4599 - 1.*t1359*t4658 - 1.*t1359*t4690 - 1.*t4599*t5034) + t1359*t5076 + t5123*t548 + t5034*(t2992*t4599 + t4009*t4599 + t4658*t548 + t4690*t548))*t676 - 0.08711128*(t4009*(t3116*t4599 + t1224*t4658 + t1224*t4690 + t4599*t4780) + t1224*t4843 + t4864*t548 + t4780*(-1.*t2992*t4599 - 1.*t4009*t4599 - 1.*t4658*t548 - 1.*t4690*t548))*t704)*var2[3])*var2[6];
  p_output1[5]=(-0.5*(-0.000946944*t128*t192*t459 + 1.528*t1025*t128*t192*t459 + 0.241*t128*t192*t2072*t459 - 0.008914864*t128*t459*t502 + 0.08711128*t459*t6695*t676 - 0.241*t2118*t459*t6822 + 0.009008821*t1542*t459*t6898 - 0.08711128*t459*t6731*t704)*var2[0] - 0.5*(-0.008914864*(t128*t213*t377*t502 + t344*t393*t502) + 0.08711128*(t1194*t344 + t213*t377*t6695)*t676 - 0.241*t2118*(t2214*t344 + t213*t377*t6822) + 0.009008821*t1542*(t2308*t344 + t213*t377*t6898) - 0.08711128*(t1309*t344 + t213*t377*t6731)*t704 + 0.000946944*t7258 - 1.528*t1025*t7258 - 0.241*t2072*t7258)*var2[1] - 0.5*(-0.008914864*(-1.*t128*t344*t377*t502 + t213*t393*t502) + 0.08711128*(t1194*t213 - 1.*t344*t377*t6695)*t676 - 0.241*t2118*(t213*t2214 - 1.*t344*t377*t6822) + 0.009008821*t1542*(t213*t2308 - 1.*t344*t377*t6898) - 0.08711128*(t1309*t213 - 1.*t344*t377*t6731)*t704 + 0.000946944*t8455 - 1.528*t1025*t8455 - 0.241*t2072*t8455)*var2[2] - 0.5*(5.e-6*t128*t192*t459 + 5.e-6*t128*t192*t1961*t459 + 0.000822*t393*t459 + t128*t192*t4410*t459 + 0.000037*t128*t459*t502 - 1.*t4436*t459*t6695 - 1.*t4451*t459*t6731 - 1.528*t1025*(t459*t5441*t6695 + t5034*(t13194 + t13794 + t10299*t1224*t377 - 1.*t10299*t459*t4780 + t377*t4599*t6695 - 1.*t459*t4690*t6695) + t459*t5298*t6731 + t4780*(t14307 + t14407 - 1.*t10299*t1359*t377 + t10299*t459*t5034 - 1.*t377*t4599*t6731 + t459*t4690*t6731)) + 0.08711128*(-1.*t128*t192*t459*t5123 + t5034*(t11275 + t128*t192*t4559 + t10299*t4009*t459 + t128*t192*t377*t4599 - 1.*t128*t192*t459*t4690 - 1.*t10299*t377*t548) + t459*t5076*t6731 + t4009*(t12624 + t12646 + t10299*t1359*t377 - 1.*t10299*t459*t5034 + t377*t4599*t6731 - 1.*t459*t4690*t6731))*t676 - 1.*t459*t5524*t6822 + 0.009008821*t1542*((t16338 + t16325*t4009*t459 - 1.*t16325*t377*t548 + t128*t192*t5671 - 1.*t128*t192*t459*t5782 + t128*t192*t377*t5793)*t5819 - 1.*t128*t192*t459*t5974 + t459*t5878*t6822 + t4009*(t16373 + t16413 + t16325*t2225*t377 - 1.*t16325*t459*t5819 - 1.*t459*t5782*t6822 + t377*t5793*t6822)) - 1.*t459*t5614*t6898 - 0.241*t2118*((t17024 - 1.*t16325*t4009*t459 + t16325*t377*t548 - 1.*t128*t192*t5671 + t128*t192*t459*t5782 - 1.*t128*t192*t377*t5793)*t6129 - 1.*t128*t192*t459*t6560 + t459*t6439*t6898 + t4009*(t17154 + t17205 - 1.*t16325*t2333*t377 + t16325*t459*t6129 + t459*t5782*t6898 - 1.*t377*t5793*t6898)) - 0.241*t2072*(t459*t6321*t6822 + t6129*(t16639 + t16644 - 1.*t16325*t2225*t377 + t16325*t459*t5819 + t459*t5782*t6822 - 1.*t377*t5793*t6822) + t459*t6206*t6898 + t5819*(t16950 + t16955 + t16325*t2333*t377 - 1.*t16325*t459*t6129 - 1.*t459*t5782*t6898 + t377*t5793*t6898)) - 0.08711128*(-1.*t128*t192*t459*t4864 + t4780*(t10449 - 1.*t128*t192*t4559 - 1.*t10299*t4009*t459 - 1.*t128*t192*t377*t4599 + t128*t192*t459*t4690 + t10299*t377*t548) + t459*t4843*t6695 + t4009*(t10515 + t10552 - 1.*t10299*t1224*t377 + t10299*t459*t4780 - 1.*t377*t4599*t6695 + t459*t4690*t6695))*t704 + 0.000946944*(-1.*t393*t4356*t459 + t128*t4249*t459*t502 + t4170*(t3760*t393 + t377*t3833*t393 - 1.*t3869*t393*t459 + t128*t17310*t9647 + t128*t17371*t9647 + t9679) + t128*t459*(t128*t3760*t502 + t128*t377*t3833*t502 - 1.*t128*t3869*t459*t502 - 1.*t4170*t459*t9647 + t377*t638*t9647 + t9755)) - 0.008914864*(-1.*t128*t192*t3883*t459 - 1.*t393*t4089*t459 + t128*t459*(t10027 + t128*t192*t3760 + t128*t192*t377*t3833 - 1.*t128*t192*t3869*t459 + t4009*t459*t9647 - 1.*t377*t548*t9647) + t4009*(-1.*t3760*t393 - 1.*t377*t3833*t393 + t3869*t393*t459 - 1.*t128*t17310*t9647 - 1.*t128*t17371*t9647 + t9924)))*var2[3] - 0.5*(-0.000822*t128 + 5.e-6*t192*t393 + 5.e-6*t192*t1961*t393 + t192*t393*t4410 - 1.*t1194*t4436 - 1.*t1309*t4451 + 0.000037*t393*t502 - 1.*t2214*t5524 - 1.*t2308*t5614 - 1.528*t1025*(t1309*t14131 + t1194*t14223 + t1291*(-1.*t10299*t1194 + t13194 + t13794 - 1.*t4559*t6695) + t1137*(t10299*t1309 + t14307 + t14407 + t4559*t6731)) + 0.08711128*(t11656*t1309 - 1.*t11851*t192*t393 + t1291*(t11275 - 1.*t10299*t192*t393) + t128*t192*(t12624 + t12646 - 1.*t10299*t1309 - 1.*t4559*t6731))*t676 + 0.009008821*t1542*(t16294*t2214 - 1.*t16519*t192*t393 + t2148*(t16338 - 1.*t16325*t192*t393) + t128*t192*(t16373 + t16413 - 1.*t16325*t2214 - 1.*t5671*t6822)) - 0.241*t2072*(t16940*t2214 + t16906*t2308 + t2270*(t16639 + t16644 + t16325*t2214 + t5671*t6822) + t2148*(t16950 + t16955 - 1.*t16325*t2308 - 1.*t5671*t6898)) - 0.241*t2118*(t17078*t2308 - 1.*t17109*t192*t393 + t2270*(t17024 + t16325*t192*t393) + t128*t192*(t17154 + t17205 + t16325*t2308 + t5671*t6898)) - 0.08711128*(t10270*t1194 - 1.*t10781*t192*t393 + t1137*(t10449 + t10299*t192*t393) + t128*t192*(t10515 + t10552 + t10299*t1194 + t4559*t6695))*t704 + 0.000946944*(t128*(-1.*t192*t3822 + t4267 - 1.*t3760*t393*t502) - 1.*t128*t502*(t128*t9647 + t9679) + t393*t502*t9712 + t393*(-1.*t393*t502*t9647 + t9755)) - 0.008914864*(-1.*t10043*t192*t393 + t128*(t10175 + t10177 + t4068) + t393*(t10027 - 1.*t192*t393*t9647) + t128*t192*(-1.*t128*t9647 + t9924)))*var2[4])*var2[6];
  p_output1[6]=(-0.5*(0.009008821*t1542*t19623 - 0.241*t19590*t2118 - 0.008914864*t2992 + 0.000946944*t4170 - 1.528*t1025*t4170 - 0.241*t2072*t4170 + 0.08711128*t19528*t676 - 0.08711128*t19561*t704)*var2[0] - 0.5*(0.000946944*t2584 - 1.528*t1025*t2584 - 0.241*t2072*t2584 + 0.009008821*t1542*(-1.*t19881*t213 - 1.*t128*t1542*t192*t344) - 0.241*t2118*(-1.*t19818*t213 - 1.*t128*t192*t2033*t344) - 0.008914864*(-1.*t128*t192*t344 - 1.*t213*t3573) + 0.08711128*t676*(-1.*t19695*t213 - 1.*t128*t192*t344*t676) - 0.08711128*t704*(-1.*t19762*t213 + t128*t192*t344*t704))*var2[1] - 0.5*(0.000946944*t19736 - 1.528*t1025*t19736 - 0.241*t19736*t2072 - 0.241*t2118*(-1.*t128*t192*t2033*t213 + t19818*t344) + 0.009008821*t1542*(-1.*t128*t1542*t192*t213 + t19881*t344) - 0.008914864*(t234 + t344*t3573) + 0.08711128*t676*(t19695*t344 - 1.*t128*t192*t213*t676) - 0.08711128*t704*(t19762*t344 + t128*t192*t213*t704))*var2[2] - 0.5*(0.000037*t2992 + 5.e-6*t3060 - 5.e-6*t1961*t4170 - 1.*t4170*t4410 - 1.*t19528*t4436 - 1.*t19561*t4451 - 1.528*t1025*((t21032 + t21051 - 1.*t1224*t24243 - 1.*t19695*t4599 - 1.*t19528*t4690 - 1.*t24320*t4780)*t5034 + t4780*(t21071 + t21073 + t1359*t24243 + t19762*t4599 + t19561*t4690 + t24320*t5034) + t19561*t5298 + t19528*t5441) - 1.*t19590*t5524 - 1.*t19623*t5614 - 0.241*t2072*((t21334 + t21356 + t2225*t24873 + t19590*t5782 + t19818*t5793 + t24882*t5819)*t6129 + t5819*(t21387 + t21416 - 1.*t2333*t24873 - 1.*t19623*t5782 - 1.*t19881*t5793 - 1.*t24882*t6129) + t19623*t6206 + t19590*t6321) + 0.000946944*(t2992*t4249 + t4170*(-1.*t128*t21598*t377 + t128*t20899*t393 + t128*t21673*t459) + t128*t459*(t20959 - 1.*t3573*t3833 - 1.*t2992*t3869 + t4068 - 1.*t21673*t4170 - 1.*t21598*t638)) - 0.008914864*(t3883*t4170 + t4009*(t128*t21598*t377 - 1.*t128*t20899*t393 - 1.*t128*t21673*t459) + t128*t459*(t20901 + t20921 + t21673*t4009 + t3869*t4170 + t21598*t548 + t3833*t638)) + 0.009008821*t1542*(t4009*(t21256 + t21288 - 1.*t2225*t24873 - 1.*t19590*t5782 - 1.*t19818*t5793 - 1.*t24882*t5819) + t19590*t5878 + t4170*t5974 + t5819*(t21196 + t21220 + t24882*t4009 + t24873*t548 + t4170*t5782 + t5793*t638)) - 0.241*t2118*(t4009*(t21486 + t21493 + t2333*t24873 + t19623*t5782 + t19881*t5793 + t24882*t6129) + t6129*(t21447 + t21472 - 1.*t24882*t4009 - 1.*t24873*t548 - 1.*t4170*t5782 - 1.*t5793*t638) + t19623*t6439 + t4170*t6560) + 0.08711128*(t4009*(t21115 + t21116 - 1.*t1359*t24243 - 1.*t19762*t4599 - 1.*t19561*t4690 - 1.*t24320*t5034) + t19561*t5076 + t4170*t5123 + t5034*(t21091 + t21092 + t24320*t4009 + t4170*t4690 + t24243*t548 + t4599*t638))*t676 - 0.08711128*(t4009*(t21016 + t21020 + t1224*t24243 + t19695*t4599 + t19528*t4690 + t24320*t4780) + t19528*t4843 + t4170*t4864 + t4780*(t20990 + t20994 - 1.*t24320*t4009 - 1.*t4170*t4690 - 1.*t24243*t548 - 1.*t4599*t638))*t704)*var2[3] - 0.5*(-0.000037*t128*t192 + 5.e-6*t128*t502 + 5.e-6*t128*t1961*t502 + t128*t4410*t502 - 0.008914864*(-1.*t10043*t128*t502 + t393*(t20901 + t192*t20899*t20906 + t20921 + t192*t3822 + t20926*t502 + t3760*t393*t502)) + t128*t192*t2033*t5524 + t128*t1542*t192*t5614 - 0.241*t2072*(-1.*t128*t1542*t16906*t192 - 1.*t128*t16940*t192*t2033 + t2148*(t20828 + t20831 + t21387 + t21416 + t20674*t2308*t393 - 1.*t1542*t192*t393*t5671) + t2270*(t20793 + t20811 + t21334 + t21356 - 1.*t20674*t2214*t393 + t192*t2033*t393*t5671)) - 0.241*t2118*(-1.*t128*t1542*t17078*t192 - 1.*t128*t17109*t502 + t128*t192*(t20724 + t20729 + t21486 + t21493 - 1.*t20674*t2308*t393 + t1542*t192*t393*t5671) + t2270*(t20685 + t20698 - 1.*t192*t20674*t20906 + t21447 + t21472 - 1.*t393*t502*t5671)) + 0.009008821*t1542*(-1.*t128*t16294*t192*t2033 - 1.*t128*t16519*t502 + t128*t192*(t20770 + t20776 + t21256 + t21288 + t20674*t2214*t393 - 1.*t192*t2033*t393*t5671) + t2148*(t20752 + t20761 + t192*t20674*t20906 + t21196 + t21220 + t393*t502*t5671)) + t128*t192*t4436*t676 - 1.*t128*t192*t4451*t704 - 0.08711128*(-1.*t10781*t128*t502 + t1137*(t20487 + t20496 - 1.*t192*t20290*t20906 + t20990 + t20994 - 1.*t393*t4559*t502) - 1.*t10270*t128*t192*t676 + t128*t192*(t20455 + t20461 + t21016 + t21020 - 1.*t1194*t20290*t393 + t192*t393*t4559*t676))*t704 - 1.528*t1025*(-1.*t128*t14223*t192*t676 + t1291*(t20554 + t20568 + t21032 + t21051 + t1194*t20290*t393 - 1.*t192*t393*t4559*t676) + t128*t14131*t192*t704 + t1137*(t20591 + t20594 + t21071 + t21073 - 1.*t1309*t20290*t393 - 1.*t192*t393*t4559*t704)) + 0.08711128*t676*(-1.*t11851*t128*t502 + t1291*(t20298 + t20320 + t192*t20290*t20906 + t21091 + t21092 + t393*t4559*t502) + t11656*t128*t192*t704 + t128*t192*(t20380 + t20386 + t21115 + t21116 + t1309*t20290*t393 + t192*t393*t4559*t704)) + 0.000946944*(t393*(t10175 + t10177 - 1.*t192*t20926 + t20959 + t4068 + t20899*t20906*t502) - 1.*t128*t192*t9712))*var2[4] - 0.5*(0.001936496911648*t192 - 5.e-6*t192*t1961 - 1.*t192*t4410 - 0.000243227358208*t502 + t2033*t502*t5524 + t1542*t502*t5614 - 0.241*t2072*(-1.*t2033*t20821*t502 - 1.*t1542*t20839*t502 + t192*t2033*(t20828 + t20831 + t1542*t20674*t502 + t1542*t192*t5652) + t1542*t192*(t20793 + t20811 - 1.*t2033*t20674*t502 - 1.*t192*t2033*t5652)) + 0.009008821*t1542*(t192*t20787 - 1.*t2033*t20745*t502 + t502*(t20770 + t20776 + t2033*t20674*t502 + t192*t2033*t5652) + t192*t2033*(t192*t20674 + t20752 + t20761 - 1.*t502*t5652)) - 0.241*t2118*(t192*t20718 - 1.*t1542*t20651*t502 + t502*(t20724 + t20729 - 1.*t1542*t20674*t502 - 1.*t1542*t192*t5652) + t1542*t192*(-1.*t192*t20674 + t20685 + t20698 + t502*t5652)) + t4436*t502*t676 - 1.*t4451*t502*t704 - 0.08711128*(t192*t20517 - 1.*t20443*t502*t676 + t192*(-1.*t192*t20290 + t20487 + t20496 + t4544*t502)*t676 + t502*(t20455 + t20461 - 1.*t192*t4544*t676 - 1.*t20290*t502*t676))*t704 + 0.08711128*t676*(t192*t20353 + t20274*t502*t704 - 1.*t192*(t192*t20290 + t20298 + t20320 - 1.*t4544*t502)*t704 + t502*(t20380 + t20386 - 1.*t192*t4544*t704 - 1.*t20290*t502*t704)) - 1.528*t1025*(-1.*t20580*t502*t676 + t20606*t502*t704 - 1.*t192*(t20554 + t20568 + t192*t4544*t676 + t20290*t502*t676)*t704 + t192*t676*(t20591 + t20594 + t192*t4544*t704 + t20290*t502*t704)))*var2[5])*var2[6];
  p_output1[7]=var2[6]*(t25242 - 0.5*(t25858 + t25860 + t25861 + t25957 - 1.528*t25842*t4009 - 0.241*t26135*t4009 - 0.08711128*t25734*t704 - 0.08711128*t4780*t704)*var2[0] - 0.5*(-1.528*t2435*t25842 - 0.241*t2435*t26135 + t27069 + t27072 + t27073 + t27085 - 0.08711128*t2638*t704 - 0.08711128*(-1.*t213*t26932 + t344*t6695)*t704)*var2[1] - 0.5*(-1.528*t25842*t26903 - 0.241*t26135*t26903 + t26968 + t26971 + t26986 + t27029 - 0.08711128*(t1137*t213 + t1224*t344)*t704 - 0.08711128*(t26932*t344 + t213*t6695)*t704)*var2[2] - 0.5*(t27930 + t27931 + t27935 + t27938 + t27940 + t27946 - 0.241*t26135*t27955 + t28006 - 1.*t26200*t4009 - 1.*t25734*t4451 - 1.*t26179*t4780 - 1.*t26213*t5034 - 1.*t4436*t5034 - 1.528*t25842*(t5034*t5298 + t4780*t5441) - 1.528*t1025*(t4780*(t27372 + t27374 + t1359*t27773 + t26932*t4599 + t25734*t4690 + t27779*t5034) + t5034*(t27324 - 1.*t1224*t27773 - 1.*t27779*t4780 + t5107 + t5108 + t5119) + t25734*t5298 + t5034*t5441) + 0.009008821*t1542*(t28135 + (t27565 + t28079*t4009 + t28059*t548)*t5819 + t4009*(t27586 + t27591 - 1.*t2225*t28059 + t28140 + t28141 - 1.*t28079*t5819)) - 0.241*t2072*(t28159 + t28161 + (t27638 + t27642 + t2225*t28059 + t28180 + t28188 + t28079*t5819)*t6129 + t5819*(t27619 - 1.*t2333*t28059 + t5947 + t5969 + t5970 - 1.*t28079*t6129)) - 0.241*t2118*(t28027 + (t27475 - 1.*t28079*t4009 - 1.*t28059*t548)*t6129 + t4009*(t27512 + t2333*t28059 + t28079*t6129 + t6189 + t6190 + t6195)) - 0.08711128*(t4780*t4843 + t4009*t4864)*t676 + 0.08711128*(t4009*(t27276 + t27284 - 1.*t1359*t27773 - 1.*t26932*t4599 - 1.*t25734*t4690 - 1.*t27779*t5034) + t25734*t5076 + t5034*(t27254 + t27779*t4009 + t27773*t548))*t676 - 0.08711128*(t5034*t5076 + t4009*t5123)*t704 - 0.08711128*(t4843*t5034 + t4009*(t27237 + t1224*t27773 + t27779*t4780 + t5432 + t5437 + t5438) + t4780*(t27185 - 1.*t27779*t4009 - 1.*t27773*t548))*t704)*var2[3] - 0.5*(-1.528*(t1291*t14131 + t1137*t14223)*t25842 - 1.*t1137*t26179 - 1.*t128*t192*t26200 - 1.*t1291*t26213 + t27416 + t27418 + t27419 + t27428 + t27430 + t27458 - 0.241*t26135*t27545 + t27560 - 1.*t1291*t4436 + 0.009008821*t1542*(t27581 + t128*t192*(t26710 + t26720 - 1.*t2214*t27498 + t27586 + t27591 + t27595) + t2148*(t27565 - 1.*t192*t27498*t393 + t192*t26049*t502)) - 0.241*t2072*(t27616 + t27632 + t2270*(t26675 + t26678 + t2214*t27498 + t27638 + t27642 + t27650) + t2148*(t16497 + t16508 + t26621 - 1.*t2308*t27498 + t27619 + t5947)) - 0.241*t2118*(t27459 + t2270*(t27475 + t192*t27498*t393 - 1.*t192*t26049*t502) + t128*t192*(t16783 + t16849 + t26573 + t2308*t27498 + t27512 + t6189)) - 1.*t4451*t6695 - 1.528*t1025*(t1291*t14223 + t1137*(t13956 + t26407 + t1309*t27207 + t27372 + t27374 + t25710*t4559) + t1291*(t11799 + t11837 + t26373 - 1.*t1194*t27207 + t27324 + t5107) + t14131*t6695) - 0.08711128*(t10270*t1137 + t10781*t128*t192)*t676 + 0.08711128*(t128*t192*(t10648 + t26441 - 1.*t1309*t27207 + t27276 + t27284 - 1.*t25710*t4559) + t1291*(t27254 - 1.*t192*t27207*t393 + t192*t25746*t502) + t11656*t6695)*t676 - 0.08711128*(t11656*t1291 + t11851*t128*t192)*t704 - 0.08711128*(t10270*t1291 + t1137*(t27185 + t192*t27207*t393 - 1.*t192*t25746*t502) + t128*t192*(t14184 + t14197 + t26286 + t1194*t27207 + t27237 + t5432))*t704)*var2[4] - 0.5*(t26478 + t26490 + t26491 + t26516 + t26517 + t26539 + t26565 - 0.241*t2072*(t26619 + t192*t2033*(t16497 + t20781 + t20782 + t26010 - 1.*t1542*t26049*t26294 + t26621) + t26654 + t1542*t192*(t26102 + t26103 + t2033*t26049*t26294 + t26675 + t26678 + t26679)) - 0.241*t26135*t26803 - 1.*t26200*t502 - 0.241*t2118*(t26569 + (t16783 + t1961*t1979 + t2040 + t20838 + t1542*t26049*t26294 + t26573)*t502) + 0.009008821*t1542*(t26702 + (t1980 - 1.*t2033*t26049*t26294 + t26710 + t26719 + t26720 + t26731)*t502) - 1.*t192*t26179*t676 + t192*t4451*t676 - 0.08711128*t676*(t20517*t502 + t192*t20443*t676) + t192*t26213*t704 + t192*t4436*t704 - 0.08711128*t704*(t20353*t502 - 1.*t192*t20274*t704) - 1.528*t25842*(t192*t20580*t676 - 1.*t192*t20606*t704) + 0.08711128*t676*(-1.*t192*t20274*t676 + t502*(t10648 + t20508 + t20514 + t26441 + t25746*t26294*t704 + t748)) - 0.08711128*t704*(-1.*t192*t20443*t704 + t502*(t14184 + t20579 + t26286 + t25746*t26294*t676 + t704*t727 + t935)) - 1.528*t1025*(-1.*t192*t20606*t676 - 1.*t192*t20580*t704 + t192*t676*(t13956 + t20598 + t26407 - 1.*t25746*t26294*t704 + t676*t727 + t831) - 1.*t192*t704*(t11799 + t20339 + t20352 + t26373 - 1.*t25746*t26294*t676 + t948)))*var2[5] - 0.5*(-3.056*t1025*t25842 - 0.482*t2072*t26135 + t26849 + t26856 + t26860 + t26863 + t26878 + t26883 - 1.*t26213*t676 - 1.*t4436*t676 - 1.*t26179*t704 + t4451*t704)*var2[6] - 0.5*(t25201 + t25449 + t25620 + 0.00270221251488*t676 - 0.00005198763696*t704)*var2[7]);
  p_output1[8]=var2[6]*(t25242 - 0.5*(t25858 + t25860 + t25861 + t25957 - 0.241*t28368*t4009)*var2[0] - 0.5*(t27069 + t27072 + t27073 + t27085 - 0.241*t2435*t28368)*var2[1] - 0.5*(t26968 + t26971 + t26986 + t27029 - 0.241*t26903*t28368)*var2[2] - 0.5*(t27930 + t27931 + t27935 + t27938 + t27940 + t27946 + t28006 - 0.241*t27955*t28368 + 0.009008821*t1542*(t28135 + (t28615 + t28670*t4009 + t28664*t548)*t5819 + t4009*(t27591 + t28140 + t28141 + t28624 - 1.*t2225*t28664 - 1.*t28670*t5819)) - 0.241*t2072*(t28159 + t28161 + (t27642 + t28180 + t28188 + t28643 + t2225*t28664 + t28670*t5819)*t6129 + t5819*(t28633 - 1.*t2333*t28664 + t5947 + t5969 + t5970 - 1.*t28670*t6129)) - 0.241*t2118*(t28027 + (t28583 - 1.*t28670*t4009 - 1.*t28664*t548)*t6129 + t4009*(t28591 + t2333*t28664 + t28670*t6129 + t6189 + t6190 + t6195)))*var2[3] - 0.5*(t27416 + t27418 + t27419 + t27428 + t27430 + t27458 + t27560 - 0.241*t27545*t28368 + 0.009008821*t1542*(t27581 + t128*t192*(t26720 + t27591 + t27595 + t28492 - 1.*t2214*t28560 + t28624) + t2148*(t28615 - 1.*t192*t28560*t393 + t192*t28347*t502)) - 0.241*t2072*(t27616 + t27632 + t2270*(t26678 + t27642 + t27650 + t28465 + t2214*t28560 + t28643) + t2148*(t16497 + t16508 + t28440 - 1.*t2308*t28560 + t28633 + t5947)) - 0.241*t2118*(t27459 + t2270*(t28583 + t192*t28560*t393 - 1.*t192*t28347*t502) + t128*t192*(t16783 + t16849 + t28396 + t2308*t28560 + t28591 + t6189)))*var2[4] - 0.5*(t26478 + t26490 + t26491 + t26516 + t26517 + t26539 + t26565 - 0.241*t26803*t28368 - 0.241*t2072*(t26619 + t26654 + t192*t2033*(t16497 + t20781 + t20782 + t28313 - 1.*t1542*t26294*t28347 + t28440) + t1542*t192*(t26102 + t26678 + t26679 + t2033*t26294*t28347 + t28359 + t28465)) - 0.241*t2118*(t26569 + (t16783 + t2040 + t20838 + t1961*t28309 + t1542*t26294*t28347 + t28396)*t502) + 0.009008821*t1542*(t26702 + (t26719 + t26720 + t26731 - 1.*t1542*t28309 - 1.*t2033*t26294*t28347 + t28492)*t502))*var2[5] - 0.5*(t26849 + t26856 + t26860 + t26863 + t26878 + t26883 - 0.482*t2072*t28368)*var2[6] - 0.5*(t25201 + t25449 + t25620 - 0.241*t2118*(-0.21935*t1443 + t1443*t1678 - 1.*t1486*t1840 + t1486*t28227 + t1443*t28245) + 0.009008821*t1542*(t25459 + t25496 + t25596 - 1.*t1443*t28227 + t1486*t28245))*var2[7]);
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec7_laikago_description.hh"

namespace SymFunction
{

void Ce3_vec7_laikago_description_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
