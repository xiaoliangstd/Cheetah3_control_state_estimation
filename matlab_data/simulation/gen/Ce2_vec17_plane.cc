/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:11:55 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t75;
  double t107;
  double t62;
  double t111;
  double t462;
  double t521;
  double t529;
  double t199;
  double t263;
  double t306;
  double t347;
  double t567;
  double t758;
  double t764;
  double t790;
  double t593;
  double t1066;
  double t1084;
  double t88;
  double t155;
  double t198;
  double t224;
  double t561;
  double t604;
  double t609;
  double t628;
  double t655;
  double t1182;
  double t1187;
  double t1191;
  double t1220;
  double t1094;
  double t1109;
  double t1159;
  double t1170;
  double t697;
  double t791;
  double t812;
  double t833;
  double t835;
  double t846;
  double t1422;
  double t1338;
  double t1357;
  double t1365;
  double t1378;
  double t1381;
  double t1395;
  double t1574;
  double t1580;
  double t1624;
  double t1409;
  double t1452;
  double t913;
  double t914;
  double t930;
  double t935;
  double t981;
  double t1021;
  double t2271;
  double t2145;
  double t2169;
  double t2171;
  double t2240;
  double t2108;
  double t2115;
  double t2123;
  double t2064;
  double t2076;
  double t2086;
  double t2101;
  double t2448;
  double t2457;
  double t2474;
  double t2475;
  double t2538;
  double t2412;
  double t1705;
  double t3328;
  double t3364;
  double t3396;
  double t3441;
  double t3462;
  double t3463;
  double t3506;
  double t3527;
  double t3531;
  double t1399;
  double t1710;
  double t3559;
  double t3605;
  double t3762;
  double t3841;
  double t1817;
  double t1836;
  double t1893;
  double t1927;
  double t1970;
  double t1975;
  double t1976;
  double t1998;
  double t2008;
  double t2602;
  double t2959;
  double t2963;
  double t2928;
  double t2947;
  double t2702;
  double t2732;
  double t4976;
  double t5040;
  double t5070;
  double t5114;
  double t5153;
  double t5179;
  double t5217;
  double t2126;
  double t3123;
  double t3132;
  double t3064;
  double t3098;
  double t2442;
  double t2443;
  double t2785;
  double t2809;
  double t2812;
  double t2823;
  double t2827;
  double t2836;
  double t2840;
  double t4836;
  double t4872;
  double t4938;
  double t1035;
  double t1038;
  double t1039;
  double t1044;
  double t1045;
  double t1047;
  double t4800;
  double t4810;
  double t4827;
  double t6034;
  double t6077;
  double t6101;
  double t2915;
  double t2949;
  double t2989;
  double t3001;
  double t3009;
  double t3010;
  double t5889;
  double t5903;
  double t5941;
  double t3044;
  double t3122;
  double t3133;
  double t3146;
  double t3220;
  double t3227;
  double t7616;
  double t7842;
  double t9235;
  double t9284;
  double t9305;
  double t9324;
  double t9365;
  double t9462;
  double t9686;
  double t9729;
  double t9829;
  double t7658;
  double t7684;
  double t7747;
  double t7959;
  double t8018;
  double t8129;
  double t8490;
  double t8551;
  double t8580;
  double t8698;
  double t8727;
  double t8774;
  double t10728;
  double t10748;
  double t10773;
  double t9990;
  double t10002;
  double t10007;
  double t10028;
  double t10033;
  double t10041;
  double t10097;
  double t10098;
  double t10132;
  double t10172;
  double t10173;
  double t10177;
  double t10277;
  double t10315;
  double t10322;
  double t10341;
  double t10345;
  double t10388;
  double t10484;
  double t10542;
  double t10560;
  double t10564;
  double t10565;
  double t10569;
  double t11159;
  double t11198;
  double t11208;
  double t11098;
  double t11111;
  double t11130;
  double t11210;
  double t11217;
  double t11274;
  double t11139;
  double t11280;
  double t11286;
  double t11604;
  double t11612;
  double t11613;
  double t11630;
  double t11671;
  double t11677;
  double t11446;
  double t11467;
  double t11470;
  double t1605;
  double t11330;
  double t11479;
  double t11484;
  double t11710;
  double t11739;
  double t4052;
  double t12064;
  double t12068;
  double t12074;
  double t12047;
  double t12055;
  double t12060;
  double t12075;
  double t12091;
  double t12093;
  double t12063;
  double t12102;
  double t12110;
  double t12185;
  double t12189;
  double t12193;
  double t12214;
  double t12227;
  double t12228;
  double t12293;
  double t12322;
  double t12324;
  double t11366;
  double t12576;
  double t12577;
  double t12580;
  double t12594;
  double t12599;
  double t12600;
  double t12592;
  double t12608;
  double t12621;
  double t11682;
  double t11709;
  double t12695;
  double t12706;
  double t12707;
  double t12726;
  double t12729;
  double t12733;
  double t12643;
  double t12646;
  double t12649;
  double t11797;
  double t11833;
  double t11858;
  double t11892;
  double t11902;
  double t12661;
  double t12669;
  double t12744;
  double t12750;
  double t12009;
  double t12015;
  double t12158;
  double t12908;
  double t12915;
  double t12917;
  double t12927;
  double t12930;
  double t12938;
  double t12922;
  double t12923;
  double t12924;
  double t12940;
  double t12944;
  double t12234;
  double t12251;
  double t12261;
  double t12955;
  double t12965;
  double t12974;
  double t12979;
  double t12987;
  double t12995;
  double t12368;
  double t12398;
  double t12444;
  double t12446;
  double t12475;
  double t12480;
  double t12484;
  double t13039;
  double t13041;
  double t13042;
  double t12515;
  double t12528;
  double t12545;
  double t10807;
  double t10843;
  double t10895;
  double t10911;
  double t10933;
  double t10963;
  double t10679;
  double t10691;
  double t10725;
  double t1064;
  double t1177;
  double t1224;
  double t1225;
  double t1284;
  double t1288;
  double t1295;
  double t1300;
  double t1549;
  double t1558;
  double t1573;
  double t1644;
  double t1695;
  double t1713;
  double t1738;
  double t1787;
  double t1799;
  double t1800;
  double t1812;
  double t10640;
  double t10649;
  double t10653;
  double t2329;
  double t2378;
  double t2400;
  double t2410;
  double t2490;
  double t2527;
  double t2535;
  double t2589;
  double t2625;
  double t2655;
  double t2723;
  double t2748;
  double t2763;
  double t2775;
  double t2779;
  double t2848;
  double t2851;
  double t2853;
  double t2862;
  double t2866;
  double t2880;
  double t2882;
  double t2903;
  double t10975;
  double t10994;
  double t11000;
  double t11005;
  double t11036;
  double t11060;
  double t3413;
  double t3534;
  double t3544;
  double t3546;
  double t3624;
  double t3662;
  double t3836;
  double t3845;
  double t3856;
  double t3921;
  double t3922;
  double t3931;
  double t4108;
  double t4141;
  double t4186;
  double t4239;
  double t4318;
  double t13213;
  double t13215;
  double t13220;
  double t5093;
  double t5227;
  double t5419;
  double t5466;
  double t5481;
  double t5515;
  double t5557;
  double t5598;
  double t5624;
  double t5651;
  double t5667;
  double t5676;
  double t5712;
  double t5743;
  double t5750;
  double t5775;
  double t5781;
  double t5801;
  double t5807;
  double t5814;
  double t5828;
  double t13229;
  double t13239;
  double t13240;
  double t5968;
  double t5986;
  double t6127;
  double t6187;
  double t6215;
  double t6219;
  double t6348;
  double t6362;
  double t6438;
  double t6447;
  double t6484;
  double t6513;
  double t6517;
  double t6584;
  double t6764;
  double t6790;
  double t10674;
  double t10727;
  double t10775;
  double t10801;
  double t10898;
  double t10971;
  double t11002;
  double t11070;
  double t11073;
  double t7820;
  double t8294;
  double t8296;
  double t8609;
  double t9066;
  double t9100;
  double t10323;
  double t10407;
  double t10413;
  double t10151;
  double t10208;
  double t10214;
  double t10563;
  double t10582;
  double t10595;
  double t10017;
  double t10043;
  double t10067;
  double t11294;
  double t11358;
  double t11367;
  double t11382;
  double t11433;
  double t11475;
  double t11497;
  double t11527;
  double t11557;
  double t11572;
  double t11627;
  double t11690;
  double t11696;
  double t11701;
  double t11708;
  double t11751;
  double t11752;
  double t11757;
  double t11767;
  double t11778;
  double t11808;
  double t11818;
  double t11831;
  double t11834;
  double t11867;
  double t11870;
  double t11874;
  double t11879;
  double t11895;
  double t11896;
  double t11897;
  double t11920;
  double t11944;
  double t11949;
  double t11965;
  double t12002;
  double t12013;
  double t12016;
  double t12017;
  double t12018;
  double t12142;
  double t12143;
  double t12155;
  double t12159;
  double t12160;
  double t12175;
  double t12178;
  double t12197;
  double t12235;
  double t12240;
  double t12241;
  double t12244;
  double t12250;
  double t12253;
  double t12270;
  double t12272;
  double t12277;
  double t12331;
  double t12363;
  double t12367;
  double t12369;
  double t12371;
  double t12375;
  double t12381;
  double t12406;
  double t12408;
  double t12421;
  double t12445;
  double t12448;
  double t12461;
  double t12462;
  double t12476;
  double t12477;
  double t12478;
  double t12483;
  double t12485;
  double t12487;
  double t12488;
  double t12501;
  double t12507;
  double t12516;
  double t12519;
  double t12520;
  double t12522;
  double t12523;
  double t12532;
  double t12554;
  double t12558;
  double t12561;
  double t12622;
  double t12623;
  double t12624;
  double t12626;
  double t12629;
  double t12633;
  double t12651;
  double t12670;
  double t12671;
  double t12681;
  double t12691;
  double t12718;
  double t12736;
  double t12737;
  double t12739;
  double t12741;
  double t12742;
  double t12754;
  double t12760;
  double t12765;
  double t12794;
  double t12797;
  double t12800;
  double t12801;
  double t12805;
  double t12806;
  double t12807;
  double t12810;
  double t12811;
  double t12819;
  double t12820;
  double t12836;
  double t12849;
  double t12857;
  double t12872;
  double t12873;
  double t12875;
  double t12878;
  double t12879;
  double t12880;
  double t12882;
  double t12883;
  double t12886;
  double t12889;
  double t12891;
  double t12899;
  double t12900;
  double t12902;
  double t12903;
  double t12945;
  double t12947;
  double t12948;
  double t12949;
  double t12950;
  double t12951;
  double t12954;
  double t12977;
  double t13004;
  double t13005;
  double t13010;
  double t13024;
  double t13026;
  double t13027;
  double t13032;
  double t13033;
  double t13034;
  double t13035;
  double t13044;
  double t13045;
  double t13048;
  double t13049;
  double t13056;
  double t13058;
  double t13066;
  double t13069;
  double t13075;
  double t13079;
  double t13081;
  double t13088;
  double t13090;
  double t13098;
  double t13101;
  double t13103;
  double t13104;
  double t13105;
  double t13110;
  double t13114;
  double t13120;
  double t13121;
  double t13128;
  double t13132;
  double t13133;
  double t13134;
  double t13139;
  double t13141;
  double t13144;
  double t13149;
  double t13151;
  double t13152;
  double t13153;
  double t13154;
  double t13156;
  double t13157;
  double t13161;
  double t13162;
  double t13167;
  double t13498;
  double t13505;
  double t13507;
  double t13520;
  double t13521;
  double t13522;
  double t8321;
  double t9183;
  double t9929;
  double t9947;
  double t10077;
  double t10216;
  double t10431;
  double t10612;
  double t10613;
  double t13303;
  double t13308;
  double t13309;
  double t13310;
  double t13311;
  double t13312;
  double t13313;
  double t13318;
  double t13319;
  double t13792;
  double t13794;
  double t13795;
  double t13832;
  double t13834;
  double t13837;
  double t12635;
  double t12682;
  double t12766;
  double t12845;
  double t12904;
  double t12952;
  double t13036;
  double t13064;
  double t13140;
  double t13169;
  double t13170;
  double t13696;
  double t13699;
  double t13701;
  double t13706;
  double t13707;
  double t13708;
  double t13709;
  double t13711;
  double t13716;
  double t13717;
  double t13720;
  double t13380;
  double t13381;
  double t13407;
  double t13409;
  double t13410;
  double t13412;
  double t13414;
  double t13415;
  double t13416;
  double t13418;
  double t13421;
  double t13932;
  double t13934;
  double t13935;
  double t13811;
  double t13813;
  double t13818;
  double t13963;
  double t13971;
  double t13972;
  double t13859;
  double t13860;
  double t13863;
  double t13881;
  double t13882;
  double t13884;
  double t13894;
  double t13896;
  double t13897;
  double t11444;
  double t11563;
  double t11765;
  double t11877;
  double t12027;
  double t12177;
  double t12287;
  double t12378;
  double t12497;
  double t12562;
  double t12565;
  double t13649;
  double t13651;
  double t13655;
  double t13656;
  double t13657;
  double t13659;
  double t13669;
  double t13673;
  double t13678;
  double t13679;
  double t13680;
  double t13335;
  double t13336;
  double t13337;
  double t13339;
  double t13347;
  double t13348;
  double t13349;
  double t13350;
  double t13354;
  double t13366;
  double t13367;
  double t13926;
  double t13927;
  double t13928;
  double t13929;
  double t13930;
  double t13945;
  double t13948;
  double t13949;
  double t13952;
  double t13958;
  double t13973;
  double t13976;
  double t13977;
  double t14117;
  double t14119;
  double t14122;
  double t14123;
  double t14129;
  double t14132;
  double t4518;
  double t4832;
  double t4959;
  double t5862;
  double t5864;
  double t5886;
  double t6463;
  double t6980;
  double t13562;
  double t13565;
  double t13566;
  double t13567;
  double t13568;
  double t13572;
  double t13575;
  double t13577;
  double t13257;
  double t13258;
  double t13267;
  double t13268;
  double t13280;
  double t13282;
  double t13290;
  double t13291;
  double t14040;
  double t14043;
  double t14044;
  double t14047;
  double t14048;
  double t14049;
  double t14050;
  double t14052;
  double t14053;
  double t13870;
  double t13872;
  double t13875;
  double t13877;
  double t13879;
  double t13885;
  double t13886;
  double t13890;
  double t13891;
  double t14105;
  double t14107;
  double t14108;
  double t14110;
  double t14210;
  double t14211;
  double t14214;
  double t14215;
  double t14219;
  double t14220;
  double t1905;
  double t2014;
  double t2063;
  double t2844;
  double t3016;
  double t3232;
  double t13508;
  double t13510;
  double t13513;
  double t13523;
  double t13542;
  double t13550;
  double t13222;
  double t13224;
  double t13225;
  double t13241;
  double t13244;
  double t13246;
  double t14012;
  double t14013;
  double t14014;
  double t14015;
  double t14016;
  double t14017;
  double t14023;
  double t14034;
  double t14035;
  double t13789;
  double t13791;
  double t13796;
  double t13798;
  double t13805;
  double t13820;
  double t13825;
  double t13838;
  double t13839;
  double t14198;
  double t14199;
  double t14098;
  double t14099;
  double t14276;
  double t14278;
  double t14284;
  double t14285;
  double t1026;
  double t1048;
  double t13482;
  double t13489;
  double t13198;
  double t13199;
  double t14000;
  double t14001;
  double t13775;
  double t13778;
  double t14092;
  double t14094;
  double t14095;
  double t14193;
  double t14194;
  double t14195;
  double t660;
  double t847;
  double t875;
  double t13450;
  double t13455;
  double t13480;
  double t13186;
  double t13187;
  double t13190;
  double t13995;
  double t13996;
  double t13997;
  double t13765;
  double t13766;
  double t13767;
  t75 = Cos(var1[17]);
  t107 = Sin(var1[16]);
  t62 = Cos(var1[16]);
  t111 = Sin(var1[17]);
  t462 = -1.*t75*t107;
  t521 = -1.*t62*t111;
  t529 = t462 + t521;
  t199 = Sin(var1[4]);
  t263 = Cos(var1[4]);
  t306 = Cos(var1[5]);
  t347 = Sin(var1[15]);
  t567 = Cos(var1[15]);
  t758 = -1.*t62*t75;
  t764 = t107*t111;
  t790 = t758 + t764;
  t593 = Sin(var1[5]);
  t1066 = -1.*t75;
  t1084 = 1. + t1066;
  t88 = t62*t75;
  t155 = -1.*t107*t111;
  t198 = t88 + t155;
  t224 = t198*t199;
  t561 = -1.*t306*t347*t529;
  t604 = -1.*t567*t529*t593;
  t609 = t561 + t604;
  t628 = t263*t609;
  t655 = t224 + t628;
  t1182 = -0.20833*t1084;
  t1187 = -0.36833*t75;
  t1191 = 0.020000000000000018*t111;
  t1220 = 0. + t1182 + t1187 + t1191;
  t1094 = -0.336601*t1084;
  t1109 = -0.356601*t75;
  t1159 = -0.16*t111;
  t1170 = 0. + t1094 + t1109 + t1159;
  t697 = t529*t199;
  t791 = -1.*t306*t347*t790;
  t812 = -1.*t567*t790*t593;
  t833 = t791 + t812;
  t835 = t263*t833;
  t846 = t697 + t835;
  t1422 = 0.04*t107;
  t1338 = -1.*t62;
  t1357 = 1. + t1338;
  t1365 = -0.194401*t1357;
  t1378 = -0.234401*t62;
  t1381 = -0.04*t107;
  t1395 = t1365 + t1378 + t1381;
  t1574 = -0.04*t62;
  t1580 = t1574 + t1422;
  t1624 = -1.*t1395*t107;
  t1409 = 0.04*t62;
  t1452 = t1409 + t1422;
  t913 = -1.*t107*t199;
  t914 = t62*t306*t347;
  t930 = t567*t62*t593;
  t935 = t914 + t930;
  t981 = t263*t935;
  t1021 = t913 + t981;
  t2271 = 0. + t88 + t155;
  t2145 = -0.194401*t107;
  t2169 = -1.*t107*t1170;
  t2171 = t62*t1220;
  t2240 = 0. + t2145 + t2169 + t2171;
  t2108 = t75*t107;
  t2115 = t62*t111;
  t2123 = 0. + t2108 + t2115;
  t2064 = -0.194401*t1357;
  t2076 = t62*t1170;
  t2086 = t107*t1220;
  t2101 = 0. + t2064 + t2076 + t2086;
  t2448 = -0.194401*t62;
  t2457 = -1.*t62*t1170;
  t2474 = -1.*t107*t1220;
  t2475 = t2448 + t2457 + t2474;
  t2538 = 0. + t462 + t521;
  t2412 = t2145 + t2169 + t2171;
  t1705 = t62*t1395;
  t3328 = 0.055855*t347;
  t3364 = t567*t1580;
  t3396 = t3328 + t3364;
  t3441 = -1.*t567;
  t3462 = 1. + t3441;
  t3463 = 0.081715*t3462;
  t3506 = 0.13757*t567;
  t3527 = -1.*t347*t1580;
  t3531 = t3463 + t3506 + t3527;
  t1399 = -1.*t62*t1395;
  t1710 = -1.*t1580*t107;
  t3559 = -1.*t567*t62*t3396;
  t3605 = t62*t347*t3531;
  t3762 = Power(t567,2);
  t3841 = Power(t347,2);
  t1817 = t567*t306;
  t1836 = -1.*t347*t593;
  t1893 = t1817 + t1836;
  t1927 = t107*t199;
  t1970 = -1.*t62*t306*t347;
  t1975 = -1.*t567*t62*t593;
  t1976 = t1970 + t1975;
  t1998 = t263*t1976;
  t2008 = t1927 + t1998;
  t2602 = t2101*t2271;
  t2959 = t567*t2538;
  t2963 = 0. + t2959;
  t2928 = -1.*t347*t2538;
  t2947 = 0. + t2928;
  t2702 = t2101*t529;
  t2732 = t2412*t2271;
  t4976 = 0.035165*t347;
  t5040 = t567*t2240;
  t5070 = t4976 + t5040;
  t5114 = 0.081715*t3462;
  t5153 = 0.11688*t567;
  t5179 = -1.*t347*t2240;
  t5217 = t5114 + t5153 + t5179;
  t2126 = -1.*t2101*t2123;
  t3123 = t567*t2271;
  t3132 = 0. + t3123;
  t3064 = -1.*t347*t2271;
  t3098 = 0. + t3064;
  t2442 = -1.*t2412*t2123;
  t2443 = -1.*t2101*t198;
  t2785 = 0. + t567;
  t2809 = t2785*t306;
  t2812 = 0. + t347;
  t2823 = -1.*t2812*t593;
  t2827 = 0. + t2809 + t2823;
  t2836 = t263*t2827;
  t2840 = 0. + t2836;
  t4836 = -1.*t347*t3396;
  t4872 = -1.*t567*t3531;
  t4938 = t4836 + t4872;
  t1035 = t62*t199;
  t1038 = t306*t347*t107;
  t1039 = t567*t107*t593;
  t1044 = t1038 + t1039;
  t1045 = t263*t1044;
  t1047 = t1035 + t1045;
  t4800 = t347*t3396;
  t4810 = t567*t3531;
  t4827 = t4800 + t4810;
  t6034 = -1.*t2812*t5070;
  t6077 = -1.*t2785*t5217;
  t6101 = 0. + t6034 + t6077;
  t2915 = t2271*t199;
  t2949 = t306*t2947;
  t2989 = -1.*t2963*t593;
  t3001 = 0. + t2949 + t2989;
  t3009 = t263*t3001;
  t3010 = 0. + t2915 + t3009;
  t5889 = t2812*t5070;
  t5903 = t2785*t5217;
  t5941 = 0. + t5889 + t5903;
  t3044 = t2123*t199;
  t3122 = t306*t3098;
  t3133 = -1.*t3132*t593;
  t3146 = 0. + t3122 + t3133;
  t3220 = t263*t3146;
  t3227 = 0. + t3044 + t3220;
  t7616 = Sin(var1[3]);
  t7842 = Cos(var1[3]);
  t9235 = -1.*t567*t306*t107;
  t9284 = t347*t107*t593;
  t9305 = t9235 + t9284;
  t9324 = t7616*t9305;
  t9365 = t62*t263;
  t9462 = -1.*t199*t1044;
  t9686 = t9365 + t9462;
  t9729 = t7842*t9686;
  t9829 = t9324 + t9729;
  t7658 = t567*t62*t306;
  t7684 = -1.*t62*t347*t593;
  t7747 = t7658 + t7684;
  t7959 = t263*t107;
  t8018 = -1.*t199*t1976;
  t8129 = t7959 + t8018;
  t8490 = -1.*t567*t62*t306;
  t8551 = t62*t347*t593;
  t8580 = t8490 + t8551;
  t8698 = -1.*t263*t107;
  t8727 = -1.*t199*t935;
  t8774 = t8698 + t8727;
  t10728 = t7842*t9305;
  t10748 = -1.*t7616*t9686;
  t10773 = t10728 + t10748;
  t9990 = t567*t306*t529;
  t10002 = -1.*t347*t529*t593;
  t10007 = t9990 + t10002;
  t10028 = t263*t198;
  t10033 = -1.*t199*t609;
  t10041 = t10028 + t10033;
  t10097 = t567*t306*t790;
  t10098 = -1.*t347*t790*t593;
  t10132 = t10097 + t10098;
  t10172 = t263*t529;
  t10173 = -1.*t199*t833;
  t10177 = t10172 + t10173;
  t10277 = t306*t2963;
  t10315 = t2947*t593;
  t10322 = 0. + t10277 + t10315;
  t10341 = t263*t2271;
  t10345 = -1.*t199*t3001;
  t10388 = 0. + t10341 + t10345;
  t10484 = t306*t3132;
  t10542 = t3098*t593;
  t10560 = 0. + t10484 + t10542;
  t10564 = t263*t2123;
  t10565 = -1.*t199*t3146;
  t10569 = 0. + t10564 + t10565;
  t11159 = t306*t347;
  t11198 = t567*t593;
  t11208 = t11159 + t11198;
  t11098 = t306*t3531;
  t11111 = -1.*t3396*t593;
  t11130 = t11098 + t11111;
  t11210 = t306*t3396;
  t11217 = t3531*t593;
  t11274 = t11210 + t11217;
  t11139 = -1.*t1893*t11130;
  t11280 = -1.*t11208*t11274;
  t11286 = t11139 + t11280;
  t11604 = -1.*t306*t347*t1452;
  t11612 = -1.*t567*t1452*t593;
  t11613 = t11604 + t11612;
  t11630 = t567*t306*t1452;
  t11671 = -1.*t347*t1452*t593;
  t11677 = t11630 + t11671;
  t11446 = t1893*t11130;
  t11467 = t11208*t11274;
  t11470 = t11446 + t11467;
  t1605 = -1.*t62*t1580;
  t11330 = t1395*t107;
  t11479 = -1.*t11130*t1044;
  t11484 = -1.*t11274*t9305;
  t11710 = t11130*t1044;
  t11739 = t11274*t9305;
  t4052 = t62*t1580;
  t12064 = t306*t2812;
  t12068 = t2785*t593;
  t12074 = 0. + t12064 + t12068;
  t12047 = t306*t5217;
  t12055 = -1.*t5070*t593;
  t12060 = 0. + t12047 + t12055;
  t12075 = t306*t5070;
  t12091 = t5217*t593;
  t12093 = 0. + t12075 + t12091;
  t12063 = t2827*t12060;
  t12102 = t12074*t12093;
  t12110 = 0. + t12063 + t12102;
  t12185 = -1.*t306*t347*t2475;
  t12189 = -1.*t567*t2475*t593;
  t12193 = t12185 + t12189;
  t12214 = t567*t306*t2475;
  t12227 = -1.*t347*t2475*t593;
  t12228 = t12214 + t12227;
  t12293 = -1.*t2827*t12060;
  t12322 = -1.*t12074*t12093;
  t12324 = 0. + t12293 + t12322;
  t11366 = t7747*t11274;
  t12576 = t1395*t199;
  t12577 = t263*t11130;
  t12580 = t12576 + t12577;
  t12594 = t263*t1395;
  t12599 = -1.*t199*t11130;
  t12600 = t12594 + t12599;
  t12592 = -1.*t263*t1893*t12580;
  t12608 = t199*t1893*t12600;
  t12621 = t11280 + t12592 + t12608;
  t11682 = -1.*t11208*t11677;
  t11709 = t7747*t11677;
  t12695 = t1580*t199;
  t12706 = t263*t11613;
  t12707 = t12695 + t12706;
  t12726 = t263*t1580;
  t12729 = -1.*t199*t11613;
  t12733 = t12726 + t12729;
  t12643 = t263*t1893*t12580;
  t12646 = -1.*t199*t1893*t12600;
  t12649 = t11467 + t12643 + t12646;
  t11797 = t11208*t11677;
  t11833 = -1.*t8580*t11274;
  t11858 = -1.*t11677*t9305;
  t11892 = -1.*t7747*t11274;
  t11902 = -1.*t7747*t11677;
  t12661 = -1.*t12580*t1047;
  t12669 = -1.*t12600*t9686;
  t12744 = t12580*t1047;
  t12750 = t12600*t9686;
  t12009 = t8580*t11274;
  t12015 = t11677*t9305;
  t12158 = -1.*t12093*t10322;
  t12908 = t2101*t199;
  t12915 = t263*t12060;
  t12917 = 0. + t12908 + t12915;
  t12927 = t263*t2101;
  t12930 = -1.*t199*t12060;
  t12938 = 0. + t12927 + t12930;
  t12922 = t2840*t12917;
  t12923 = -1.*t199*t2827;
  t12924 = 0. + t12923;
  t12940 = t12924*t12938;
  t12944 = t12102 + t12922 + t12940;
  t12234 = t12074*t12228;
  t12251 = -1.*t12093*t10132;
  t12261 = -1.*t12228*t10322;
  t12955 = t2412*t199;
  t12965 = t263*t12193;
  t12974 = t12955 + t12965;
  t12979 = t263*t2412;
  t12987 = -1.*t199*t12193;
  t12995 = t12979 + t12987;
  t12368 = t12093*t10560;
  t12398 = t12093*t10322;
  t12444 = t12093*t10132;
  t12446 = t12228*t10322;
  t12475 = -1.*t12093*t10560;
  t12480 = -1.*t12093*t10007;
  t12484 = -1.*t12228*t10560;
  t13039 = -1.*t2840*t12917;
  t13041 = -1.*t12924*t12938;
  t13042 = t12322 + t13039 + t13041;
  t12515 = -1.*t12074*t12228;
  t12528 = t12093*t10007;
  t12545 = t12228*t10560;
  t10807 = t7842*t10007;
  t10843 = -1.*t7616*t10041;
  t10895 = t10807 + t10843;
  t10911 = t7842*t10132;
  t10933 = -1.*t7616*t10177;
  t10963 = t10911 + t10933;
  t10679 = t7842*t8580;
  t10691 = -1.*t7616*t8774;
  t10725 = t10679 + t10691;
  t1064 = -0.194401*t75;
  t1177 = -1.*t75*t1170;
  t1224 = t1220*t111;
  t1225 = 0. + t1064 + t1177 + t1224;
  t1284 = t75*t1220;
  t1288 = 0.194401*t111;
  t1295 = t1170*t111;
  t1300 = 0. + t1284 + t1288 + t1295;
  t1549 = -1.*t62*t1452;
  t1558 = t1399 + t1549;
  t1573 = t62*t1558;
  t1644 = t1605 + t1624;
  t1695 = -1.*t107*t1644;
  t1713 = t1705 + t1710;
  t1738 = t62*t1713;
  t1787 = -1.*t1452*t107;
  t1799 = t1624 + t1787;
  t1800 = t107*t1799;
  t1812 = t1573 + t1695 + t1738 + t1800;
  t10640 = t7842*t7747;
  t10649 = -1.*t7616*t8129;
  t10653 = t10640 + t10649;
  t2329 = -1.*t2240*t2271;
  t2378 = 0. + t2126 + t2329;
  t2400 = t529*t2378;
  t2410 = -1.*t2240*t529;
  t2490 = -1.*t2475*t2271;
  t2527 = t2410 + t2442 + t2443 + t2490;
  t2535 = t2271*t2527;
  t2589 = t2240*t2538;
  t2625 = 0. + t2589 + t2602;
  t2655 = t198*t2625;
  t2723 = t2475*t2538;
  t2748 = t2240*t790;
  t2763 = t2702 + t2723 + t2732 + t2748;
  t2775 = t2123*t2763;
  t2779 = t2400 + t2535 + t2655 + t2775;
  t2848 = 0.035165*t2271;
  t2851 = 0. + t2848;
  t2853 = -0.081715*t2538;
  t2862 = -0.11688*t2123;
  t2866 = 0. + t2853 + t2862;
  t2880 = -0.11688*t198;
  t2882 = -0.081715*t790;
  t2903 = t2880 + t2882;
  t10975 = t7842*t10322;
  t10994 = -1.*t7616*t10388;
  t11000 = 0. + t10975 + t10994;
  t11005 = t7842*t10560;
  t11036 = -1.*t7616*t10569;
  t11060 = 0. + t11005 + t11036;
  t3413 = -1.*t567*t3396*t107;
  t3534 = t347*t3531*t107;
  t3544 = t1705 + t3413 + t3534;
  t3546 = t62*t3544;
  t3624 = t3559 + t3605 + t1624;
  t3662 = -1.*t107*t3624;
  t3836 = -1.*t3762*t62*t1452;
  t3845 = -1.*t62*t3841*t1452;
  t3856 = t567*t3396*t107;
  t3921 = -1.*t347*t3531*t107;
  t3922 = t1399 + t3836 + t3845 + t3856 + t3921 + t1710;
  t3931 = t62*t3922;
  t4108 = -1.*t3762*t1452*t107;
  t4141 = -1.*t3841*t1452*t107;
  t4186 = t3559 + t3605 + t4052 + t1624 + t4108 + t4141;
  t4239 = t107*t4186;
  t4318 = t3546 + t3662 + t3931 + t4239;
  t13213 = t7842*t11208;
  t13215 = t7616*t199*t1893;
  t13220 = t13213 + t13215;
  t5093 = t5070*t2963;
  t5227 = t5217*t2947;
  t5419 = t2602 + t5093 + t5227;
  t5466 = t198*t5419;
  t5481 = t567*t5070*t790;
  t5515 = -1.*t347*t5217*t790;
  t5557 = t567*t2475*t2963;
  t5598 = -1.*t347*t2475*t2947;
  t5624 = t2702 + t2732 + t5481 + t5515 + t5557 + t5598;
  t5651 = t2123*t5624;
  t5667 = -1.*t5070*t3132;
  t5676 = -1.*t5217*t3098;
  t5712 = t2126 + t5667 + t5676;
  t5743 = t529*t5712;
  t5750 = -1.*t567*t5070*t529;
  t5775 = t347*t5217*t529;
  t5781 = -1.*t567*t2475*t3132;
  t5801 = t347*t2475*t3098;
  t5807 = t5750 + t5775 + t2442 + t2443 + t5781 + t5801;
  t5814 = t2271*t5807;
  t5828 = t5466 + t5651 + t5743 + t5814;
  t13229 = t7842*t12074;
  t13239 = -1.*t7616*t12924;
  t13240 = 0. + t13229 + t13239;
  t5968 = t5941*t2271;
  t5986 = 0. + t5968;
  t6127 = t6101*t2123;
  t6187 = 0. + t6127;
  t6215 = t2785*t347*t2475;
  t6219 = -1.*t567*t2812*t2475;
  t6348 = t6215 + t6219;
  t6362 = t6348*t2123;
  t6438 = t6101*t198;
  t6447 = t6362 + t6438;
  t6484 = t5941*t529;
  t6513 = -1.*t2785*t347*t2475;
  t6517 = t567*t2812*t2475;
  t6584 = t6513 + t6517;
  t6764 = t6584*t2271;
  t6790 = t6484 + t6764;
  t10674 = 1.527*t1047*t10653;
  t10727 = 1.527*t1047*t10725;
  t10775 = 1.527*t2008*t10773;
  t10801 = 1.527*t1021*t10773;
  t10898 = 0.241*t3227*t10895;
  t10971 = 0.241*t3010*t10963;
  t11002 = 0.241*t846*t11000;
  t11070 = 0.241*t655*t11060;
  t11073 = t10674 + t10727 + t10775 + t10801 + t10898 + t10971 + t11002 + t11070;
  t7820 = t7616*t7747;
  t8294 = t7842*t8129;
  t8296 = t7820 + t8294;
  t8609 = t7616*t8580;
  t9066 = t7842*t8774;
  t9100 = t8609 + t9066;
  t10323 = t7616*t10322;
  t10407 = t7842*t10388;
  t10413 = 0. + t10323 + t10407;
  t10151 = t7616*t10132;
  t10208 = t7842*t10177;
  t10214 = t10151 + t10208;
  t10563 = t7616*t10560;
  t10582 = t7842*t10569;
  t10595 = 0. + t10563 + t10582;
  t10017 = t7616*t10007;
  t10043 = t7842*t10041;
  t10067 = t10017 + t10043;
  t11294 = t7747*t11286;
  t11358 = t1976*t11130;
  t11367 = t11330 + t11358 + t11366;
  t11382 = t11208*t11367;
  t11433 = t11294 + t11382;
  t11475 = t9305*t11470;
  t11497 = t1399 + t11479 + t11484;
  t11527 = t11208*t11497;
  t11557 = t11475 + t11527;
  t11572 = t9305*t11286;
  t11627 = -1.*t1893*t11613;
  t11690 = t11627 + t11682;
  t11696 = t7747*t11690;
  t11701 = t1580*t107;
  t11708 = t1976*t11613;
  t11751 = t1705 + t11701 + t11708 + t11709 + t11710 + t11739;
  t11752 = t11208*t11751;
  t11757 = t11572 + t11696 + t11752;
  t11767 = t8580*t11470;
  t11778 = t1893*t11613;
  t11808 = t11778 + t11797;
  t11818 = t9305*t11808;
  t11831 = -1.*t935*t11130;
  t11834 = -1.*t11613*t1044;
  t11867 = t1605 + t11330 + t11831 + t11833 + t11834 + t11858;
  t11870 = t11208*t11867;
  t11874 = t11767 + t11818 + t11870;
  t11879 = -1.*t1976*t11130;
  t11895 = t1624 + t11879 + t11892;
  t11896 = t8580*t11895;
  t11897 = -1.*t1976*t11613;
  t11920 = t1399 + t1710 + t11897 + t11902 + t11479 + t11484;
  t11944 = t9305*t11920;
  t11949 = t1705 + t11710 + t11739;
  t11965 = t9305*t11949;
  t12002 = t935*t11130;
  t12013 = t11613*t1044;
  t12016 = t4052 + t1624 + t12002 + t12009 + t12013 + t12015;
  t12017 = t7747*t12016;
  t12018 = t11896 + t11944 + t11965 + t12017;
  t12142 = t10322*t12110;
  t12143 = -1.*t2101*t2271;
  t12155 = -1.*t12060*t3001;
  t12159 = t12143 + t12155 + t12158;
  t12160 = t12074*t12159;
  t12175 = t12142 + t12160;
  t12178 = t10132*t12110;
  t12197 = t2827*t12193;
  t12235 = t12197 + t12234;
  t12240 = t10322*t12235;
  t12241 = -1.*t2101*t529;
  t12244 = -1.*t2412*t2271;
  t12250 = -1.*t12060*t833;
  t12253 = -1.*t12193*t3001;
  t12270 = t12241 + t12244 + t12250 + t12251 + t12253 + t12261;
  t12272 = t12074*t12270;
  t12277 = t12178 + t12240 + t12272;
  t12331 = t10560*t12324;
  t12363 = t2101*t2123;
  t12367 = t12060*t3146;
  t12369 = t12363 + t12367 + t12368;
  t12371 = t12074*t12369;
  t12375 = t12331 + t12371;
  t12381 = t12060*t3001;
  t12406 = t2602 + t12381 + t12398;
  t12408 = t10007*t12406;
  t12421 = t12060*t833;
  t12445 = t12193*t3001;
  t12448 = t2702 + t2732 + t12421 + t12444 + t12445 + t12446;
  t12461 = t10560*t12448;
  t12462 = -1.*t12060*t3146;
  t12476 = t2126 + t12462 + t12475;
  t12477 = t10132*t12476;
  t12478 = -1.*t12060*t609;
  t12483 = -1.*t12193*t3146;
  t12485 = t2442 + t2443 + t12478 + t12480 + t12483 + t12484;
  t12487 = t10322*t12485;
  t12488 = t12408 + t12461 + t12477 + t12487;
  t12501 = t10007*t12324;
  t12507 = -1.*t2827*t12193;
  t12516 = t12507 + t12515;
  t12519 = t10560*t12516;
  t12520 = t2412*t2123;
  t12522 = t2101*t198;
  t12523 = t12060*t609;
  t12532 = t12193*t3146;
  t12554 = t12520 + t12522 + t12523 + t12528 + t12532 + t12545;
  t12558 = t12074*t12554;
  t12561 = t12501 + t12519 + t12558;
  t12622 = t2008*t12621;
  t12623 = t2008*t12580;
  t12624 = t8129*t12600;
  t12626 = t11366 + t12623 + t12624;
  t12629 = t263*t1893*t12626;
  t12633 = t12622 + t12629;
  t12651 = t1047*t12649;
  t12670 = t11484 + t12661 + t12669;
  t12671 = t263*t1893*t12670;
  t12681 = t12651 + t12671;
  t12691 = t1047*t12621;
  t12718 = -1.*t263*t1893*t12707;
  t12736 = t199*t1893*t12733;
  t12737 = t11682 + t12718 + t12736;
  t12739 = t2008*t12737;
  t12741 = t2008*t12707;
  t12742 = t8129*t12733;
  t12754 = t11709 + t11739 + t12741 + t12742 + t12744 + t12750;
  t12760 = t263*t1893*t12754;
  t12765 = t12691 + t12739 + t12760;
  t12794 = t1021*t12649;
  t12797 = t263*t1893*t12707;
  t12800 = -1.*t199*t1893*t12733;
  t12801 = t11797 + t12797 + t12800;
  t12805 = t1047*t12801;
  t12806 = -1.*t1021*t12580;
  t12807 = -1.*t8774*t12600;
  t12810 = -1.*t12707*t1047;
  t12811 = -1.*t12733*t9686;
  t12819 = t11833 + t11858 + t12806 + t12807 + t12810 + t12811;
  t12820 = t263*t1893*t12819;
  t12836 = t12794 + t12805 + t12820;
  t12849 = -1.*t2008*t12580;
  t12857 = -1.*t8129*t12600;
  t12872 = t11892 + t12849 + t12857;
  t12873 = t1021*t12872;
  t12875 = -1.*t2008*t12707;
  t12878 = -1.*t8129*t12733;
  t12879 = t11902 + t11484 + t12875 + t12878 + t12661 + t12669;
  t12880 = t1047*t12879;
  t12882 = t11739 + t12744 + t12750;
  t12883 = t1047*t12882;
  t12886 = t1021*t12580;
  t12889 = t8774*t12600;
  t12891 = t12707*t1047;
  t12899 = t12733*t9686;
  t12900 = t12009 + t12015 + t12886 + t12889 + t12891 + t12899;
  t12902 = t2008*t12900;
  t12903 = t12873 + t12880 + t12883 + t12902;
  t12945 = t3010*t12944;
  t12947 = -1.*t12917*t3010;
  t12948 = -1.*t12938*t10388;
  t12949 = t12158 + t12947 + t12948;
  t12950 = t2840*t12949;
  t12951 = t12945 + t12950;
  t12954 = t846*t12944;
  t12977 = t2840*t12974;
  t13004 = t12924*t12995;
  t13005 = t12234 + t12977 + t13004;
  t13010 = t3010*t13005;
  t13024 = -1.*t12917*t846;
  t13026 = -1.*t12938*t10177;
  t13027 = -1.*t12974*t3010;
  t13032 = -1.*t12995*t10388;
  t13033 = t12251 + t12261 + t13024 + t13026 + t13027 + t13032;
  t13034 = t2840*t13033;
  t13035 = t12954 + t13010 + t13034;
  t13044 = t3227*t13042;
  t13045 = t12917*t3227;
  t13048 = t12938*t10569;
  t13049 = t12368 + t13045 + t13048;
  t13056 = t2840*t13049;
  t13058 = t13044 + t13056;
  t13066 = t12917*t3010;
  t13069 = t12938*t10388;
  t13075 = t12398 + t13066 + t13069;
  t13079 = t655*t13075;
  t13081 = t12917*t846;
  t13088 = t12938*t10177;
  t13090 = t12974*t3010;
  t13098 = t12995*t10388;
  t13101 = t12444 + t12446 + t13081 + t13088 + t13090 + t13098;
  t13103 = t3227*t13101;
  t13104 = -1.*t12917*t3227;
  t13105 = -1.*t12938*t10569;
  t13110 = t12475 + t13104 + t13105;
  t13114 = t846*t13110;
  t13120 = -1.*t12917*t655;
  t13121 = -1.*t12938*t10041;
  t13128 = -1.*t12974*t3227;
  t13132 = -1.*t12995*t10569;
  t13133 = t12480 + t12484 + t13120 + t13121 + t13128 + t13132;
  t13134 = t3010*t13133;
  t13139 = t13079 + t13103 + t13114 + t13134;
  t13141 = t655*t13042;
  t13144 = -1.*t2840*t12974;
  t13149 = -1.*t12924*t12995;
  t13151 = t12515 + t13144 + t13149;
  t13152 = t3227*t13151;
  t13153 = t12917*t655;
  t13154 = t12938*t10041;
  t13156 = t12974*t3227;
  t13157 = t12995*t10569;
  t13161 = t12528 + t12545 + t13153 + t13154 + t13156 + t13157;
  t13162 = t2840*t13161;
  t13167 = t13141 + t13152 + t13162;
  t13498 = t7616*t11208;
  t13505 = -1.*t7842*t199*t1893;
  t13507 = t13498 + t13505;
  t13520 = t7616*t12074;
  t13521 = t7842*t12924;
  t13522 = 0. + t13520 + t13521;
  t8321 = 1.527*t1047*t8296;
  t9183 = 1.527*t1047*t9100;
  t9929 = 1.527*t2008*t9829;
  t9947 = 1.527*t1021*t9829;
  t10077 = 0.241*t3227*t10067;
  t10216 = 0.241*t3010*t10214;
  t10431 = 0.241*t846*t10413;
  t10612 = 0.241*t655*t10595;
  t10613 = t8321 + t9183 + t9929 + t9947 + t10077 + t10216 + t10431 + t10612;
  t13303 = 1.527*t10653*t9829;
  t13308 = 1.527*t10725*t9829;
  t13309 = 1.527*t8296*t10773;
  t13310 = 1.527*t9100*t10773;
  t13311 = 0.241*t10963*t10413;
  t13312 = 0.241*t10214*t11000;
  t13313 = 0.241*t10895*t10595;
  t13318 = 0.241*t10067*t11060;
  t13319 = t13303 + t13308 + t13309 + t13310 + t13311 + t13312 + t13313 + t13318;
  t13792 = t1047*t12872;
  t13794 = t2008*t12882;
  t13795 = t13792 + t13794;
  t13832 = t3227*t13075;
  t13834 = t3010*t13110;
  t13837 = t13832 + t13834;
  t12635 = 1.527*t1021*t12633;
  t12682 = 1.527*t1047*t12681;
  t12766 = 1.527*t1047*t12765;
  t12845 = 1.527*t2008*t12836;
  t12904 = 1.527*t263*t1893*t12903;
  t12952 = 0.241*t655*t12951;
  t13036 = 0.241*t3227*t13035;
  t13064 = 0.241*t846*t13058;
  t13140 = 0.241*t2840*t13139;
  t13169 = 0.241*t3010*t13167;
  t13170 = t12635 + t12682 + t12766 + t12845 + t12904 + t12952 + t13036 + t13064 + t13140 + t13169;
  t13696 = 1.527*t9100*t12633;
  t13699 = 1.527*t9829*t12681;
  t13701 = 1.527*t9829*t12765;
  t13706 = 1.527*t8296*t12836;
  t13707 = 1.527*t13507*t12903;
  t13708 = 0.241*t10067*t12951;
  t13709 = 0.241*t10595*t13035;
  t13711 = 0.241*t10214*t13058;
  t13716 = 0.241*t13522*t13139;
  t13717 = 0.241*t10413*t13167;
  t13720 = t13696 + t13699 + t13701 + t13706 + t13707 + t13708 + t13709 + t13711 + t13716 + t13717;
  t13380 = 1.527*t10725*t12633;
  t13381 = 1.527*t10773*t12681;
  t13407 = 1.527*t10773*t12765;
  t13409 = 1.527*t10653*t12836;
  t13410 = 1.527*t13220*t12903;
  t13412 = 0.241*t10895*t12951;
  t13414 = 0.241*t11060*t13035;
  t13415 = 0.241*t10963*t13058;
  t13416 = 0.241*t13240*t13139;
  t13418 = 0.241*t11000*t13167;
  t13421 = t13380 + t13381 + t13407 + t13409 + t13410 + t13412 + t13414 + t13415 + t13416 + t13418;
  t13932 = t9305*t11895;
  t13934 = t7747*t11949;
  t13935 = t13932 + t13934;
  t13811 = t62*t1644;
  t13813 = t107*t1713;
  t13818 = t13811 + t13813;
  t13963 = t10560*t12406;
  t13971 = t10322*t12476;
  t13972 = 0. + t13963 + t13971;
  t13859 = t2271*t2378;
  t13860 = t2123*t2625;
  t13863 = 0. + t13859 + t13860;
  t13881 = t107*t3544;
  t13882 = t62*t3624;
  t13884 = t13881 + t13882;
  t13894 = t2123*t5419;
  t13896 = t2271*t5712;
  t13897 = 0. + t13894 + t13896;
  t11444 = 1.527*t1021*t11433;
  t11563 = 1.527*t1047*t11557;
  t11765 = 1.527*t1047*t11757;
  t11877 = 1.527*t2008*t11874;
  t12027 = 1.527*t263*t1893*t12018;
  t12177 = 0.241*t655*t12175;
  t12287 = 0.241*t3227*t12277;
  t12378 = 0.241*t846*t12375;
  t12497 = 0.241*t2840*t12488;
  t12562 = 0.241*t3010*t12561;
  t12565 = t11444 + t11563 + t11765 + t11877 + t12027 + t12177 + t12287 + t12378 + t12497 + t12562;
  t13649 = 1.527*t9100*t11433;
  t13651 = 1.527*t9829*t11557;
  t13655 = 1.527*t9829*t11757;
  t13656 = 1.527*t8296*t11874;
  t13657 = 1.527*t13507*t12018;
  t13659 = 0.241*t10067*t12175;
  t13669 = 0.241*t12277*t10595;
  t13673 = 0.241*t10214*t12375;
  t13678 = 0.241*t13522*t12488;
  t13679 = 0.241*t10413*t12561;
  t13680 = t13649 + t13651 + t13655 + t13656 + t13657 + t13659 + t13669 + t13673 + t13678 + t13679;
  t13335 = 1.527*t10725*t11433;
  t13336 = 1.527*t10773*t11557;
  t13337 = 1.527*t10773*t11757;
  t13339 = 1.527*t10653*t11874;
  t13347 = 1.527*t13220*t12018;
  t13348 = 0.241*t10895*t12175;
  t13349 = 0.241*t12277*t11060;
  t13350 = 0.241*t10963*t12375;
  t13354 = 0.241*t13240*t12488;
  t13366 = 0.241*t11000*t12561;
  t13367 = t13335 + t13336 + t13337 + t13339 + t13347 + t13348 + t13349 + t13350 + t13354 + t13366;
  t13926 = 1.527*t11757*t12633;
  t13927 = 1.527*t11874*t12681;
  t13928 = 1.527*t12018*t13795;
  t13929 = 1.527*t11433*t12765;
  t13930 = 1.527*t11557*t12836;
  t13945 = 1.527*t13935*t12903;
  t13948 = 0.241*t12277*t12951;
  t13949 = 0.241*t12175*t13035;
  t13952 = 0.241*t12488*t13837;
  t13958 = 0.241*t12561*t13058;
  t13973 = 0.241*t13972*t13139;
  t13976 = 0.241*t12375*t13167;
  t13977 = t13926 + t13927 + t13928 + t13929 + t13930 + t13945 + t13948 + t13949 + t13952 + t13958 + t13973 + t13976;
  t14117 = 0.241*t6187;
  t14119 = 0. + t14117;
  t14122 = 0.241*t5986;
  t14123 = 0. + t14122;
  t14129 = 0.241*t13897;
  t14132 = 0. + t14129;
  t4518 = 1.527*t263*t4318*t1893;
  t4832 = -1.527*t4827*t107*t2008;
  t4959 = 1.527*t4938*t107*t1021;
  t5862 = 0.241*t5828*t2840;
  t5864 = 1.527*t62*t4938*t1047;
  t5886 = 1.527*t62*t4827*t1047;
  t6463 = 0.241*t6447*t3010;
  t6980 = 0.241*t6790*t3227;
  t13562 = 1.527*t4318*t13507;
  t13565 = -1.527*t4827*t107*t8296;
  t13566 = 1.527*t4938*t107*t9100;
  t13567 = 0.241*t5828*t13522;
  t13568 = 1.527*t62*t4938*t9829;
  t13572 = 1.527*t62*t4827*t9829;
  t13575 = 0.241*t6447*t10413;
  t13577 = 0.241*t6790*t10595;
  t13257 = 1.527*t4318*t13220;
  t13258 = -1.527*t4827*t107*t10653;
  t13267 = 1.527*t4938*t107*t10725;
  t13268 = 0.241*t5828*t13240;
  t13280 = 1.527*t62*t4938*t10773;
  t13282 = 1.527*t62*t4827*t10773;
  t13290 = 0.241*t6447*t11000;
  t13291 = 0.241*t6790*t11060;
  t14040 = 1.527*t62*t4938*t11433;
  t14043 = -1.527*t4827*t107*t11557;
  t14044 = 1.527*t4318*t13935;
  t14047 = 1.527*t4938*t107*t11757;
  t14048 = 1.527*t62*t4827*t11874;
  t14049 = 1.527*t13884*t12018;
  t14050 = 0.241*t6790*t12175;
  t14052 = 0.241*t5828*t13972;
  t14053 = 0.241*t6447*t12375;
  t13870 = 1.527*t62*t4938*t12633;
  t13872 = -1.527*t4827*t107*t12681;
  t13875 = 1.527*t4318*t13795;
  t13877 = 1.527*t4938*t107*t12765;
  t13879 = 1.527*t62*t4827*t12836;
  t13885 = 1.527*t13884*t12903;
  t13886 = 0.241*t6790*t12951;
  t13890 = 0.241*t5828*t13837;
  t13891 = 0.241*t6447*t13058;
  t14105 = -0.17058117*t62*t4938*t107;
  t14107 = -0.17058117*t62*t4827*t107;
  t14108 = 1.527*t13884*t1812;
  t14110 = 1.527*t13818*t4318;
  t14210 = 0.241*t2866;
  t14211 = 0. + t14210;
  t14214 = 0.241*t2851;
  t14215 = 0. + t14214;
  t14219 = 0.241*t13863;
  t14220 = 0. + t14219;
  t1905 = 1.527*t263*t1812*t1893;
  t2014 = -0.085290585*t107*t2008;
  t2063 = -0.085290585*t107*t1021;
  t2844 = 0.241*t2779*t2840;
  t3016 = 0.241*t2903*t3010;
  t3232 = 0.008474765*t529*t3227;
  t13508 = 1.527*t1812*t13507;
  t13510 = -0.085290585*t107*t8296;
  t13513 = -0.085290585*t107*t9100;
  t13523 = 0.241*t2779*t13522;
  t13542 = 0.241*t2903*t10413;
  t13550 = 0.008474765*t529*t10595;
  t13222 = 1.527*t1812*t13220;
  t13224 = -0.085290585*t107*t10653;
  t13225 = -0.085290585*t107*t10725;
  t13241 = 0.241*t2779*t13240;
  t13244 = 0.241*t2903*t11000;
  t13246 = 0.008474765*t529*t11060;
  t14012 = -0.085290585*t62*t11433;
  t14013 = -0.085290585*t107*t11557;
  t14014 = 1.527*t1812*t13935;
  t14015 = -0.085290585*t107*t11757;
  t14016 = 0.085290585*t62*t11874;
  t14017 = 1.527*t13818*t12018;
  t14023 = 0.008474765*t529*t12175;
  t14034 = 0.241*t2779*t13972;
  t14035 = 0.241*t2903*t12375;
  t13789 = -0.085290585*t62*t12633;
  t13791 = -0.085290585*t107*t12681;
  t13796 = 1.527*t1812*t13795;
  t13798 = -0.085290585*t107*t12765;
  t13805 = 0.085290585*t62*t12836;
  t13820 = 1.527*t13818*t12903;
  t13825 = 0.008474765*t529*t12951;
  t13838 = 0.241*t2779*t13837;
  t13839 = 0.241*t2903*t13058;
  t14198 = 0.0034116234*t62;
  t14199 = -0.0034116234*t107;
  t14098 = -0.06108*t62*t4938;
  t14099 = -0.06108*t4827*t107;
  t14276 = 0.241*t1300;
  t14278 = 0. + t14276;
  t14284 = 0.241*t1225;
  t14285 = 0. + t14284;
  t1026 = -0.06108*t1021;
  t1048 = 0.06108*t1047;
  t13482 = -0.06108*t9100;
  t13489 = 0.06108*t9829;
  t13198 = -0.06108*t10725;
  t13199 = 0.06108*t10773;
  t14000 = -0.06108*t11757;
  t14001 = 0.06108*t11874;
  t13775 = -0.06108*t12765;
  t13778 = 0.06108*t12836;
  t14092 = -0.03856*t6447;
  t14094 = 0.004820000000000004*t6790;
  t14095 = t14092 + t14094;
  t14193 = 0.00016949530000000016*t529;
  t14194 = -0.03856*t2903;
  t14195 = t14193 + t14194;
  t660 = 0.004820000000000004*t655;
  t847 = -0.03856*t846;
  t875 = t660 + t847;
  t13450 = 0.004820000000000004*t10067;
  t13455 = -0.03856*t10214;
  t13480 = t13450 + t13455;
  t13186 = 0.004820000000000004*t10895;
  t13187 = -0.03856*t10963;
  t13190 = t13186 + t13187;
  t13995 = 0.004820000000000004*t12277;
  t13996 = -0.03856*t12561;
  t13997 = t13995 + t13996;
  t13765 = 0.004820000000000004*t13035;
  t13766 = -0.03856*t13167;
  t13767 = t13765 + t13766;
  p_output1[0]=var2[16]*(-0.5*(3.054*t1021*t1047 + 3.054*t1047*t2008 + 0.482*t3227*t655 + 0.482*t3010*t846)*var2[0] - 0.5*t11073*var2[1] - 0.5*t10613*var2[2] - 0.5*t13170*var2[3] - 0.5*t12565*var2[4] - 0.5*(t4518 + t4832 + t4959 + t5862 + t5864 + t5886 + t6463 + 0.241*t5986*t655 + t6980 + 0.241*t6187*t846)*var2[5] - 0.5*(t1905 + t2014 + t2063 + t2844 + t3016 + t3232 + 0.241*t2851*t655 + 0.241*t2866*t846)*var2[15] - 0.5*(t1026 + t1048 + 0.241*t1225*t655 + 0.241*t1300*t846)*var2[16] - 0.5*t875*var2[17]);
  p_output1[1]=var2[16]*(-0.5*t11073*var2[0] - 0.5*(3.054*t10653*t10773 + 3.054*t10725*t10773 + 0.482*t10963*t11000 + 0.482*t10895*t11060)*var2[1] - 0.5*t13319*var2[2] - 0.5*t13421*var2[3] - 0.5*t13367*var2[4] - 0.5*(t13257 + t13258 + t13267 + t13268 + t13280 + t13282 + t13290 + t13291 + 0.241*t10895*t5986 + 0.241*t10963*t6187)*var2[5] - 0.5*(t13222 + t13224 + t13225 + t13241 + t13244 + t13246 + 0.241*t10895*t2851 + 0.241*t10963*t2866)*var2[15] - 0.5*(0.241*t10895*t1225 + 0.241*t10963*t1300 + t13198 + t13199)*var2[16] - 0.5*t13190*var2[17]);
  p_output1[2]=var2[16]*(-0.5*t10613*var2[0] - 0.5*t13319*var2[1] - 0.5*(0.482*t10214*t10413 + 0.482*t10067*t10595 + 3.054*t8296*t9829 + 3.054*t9100*t9829)*var2[2] - 0.5*t13720*var2[3] - 0.5*t13680*var2[4] - 0.5*(t13562 + t13565 + t13566 + t13567 + t13568 + t13572 + t13575 + t13577 + 0.241*t10067*t5986 + 0.241*t10214*t6187)*var2[5] - 0.5*(t13508 + t13510 + t13513 + t13523 + t13542 + t13550 + 0.241*t10067*t2851 + 0.241*t10214*t2866)*var2[15] - 0.5*(0.241*t10067*t1225 + 0.241*t10214*t1300 + t13482 + t13489)*var2[16] - 0.5*t13480*var2[17]);
  p_output1[3]=var2[16]*(-0.5*t13170*var2[0] - 0.5*t13421*var2[1] - 0.5*t13720*var2[2] - 0.5*(3.054*t12633*t12765 + 3.054*t12681*t12836 + 0.482*t12951*t13035 + 0.482*t13058*t13167 + 3.054*t12903*t13795 + 0.482*t13139*t13837)*var2[3] - 0.5*t13977*var2[4] - 0.5*(t13870 + t13872 + t13875 + t13877 + t13879 + t13885 + t13886 + t13890 + t13891 + 0.241*t13139*t13897 + 0.241*t13035*t5986 + 0.241*t13167*t6187)*var2[5] - 0.5*(t13789 + t13791 + t13796 + t13798 + t13805 + t13820 + t13825 + t13838 + t13839 + 0.241*t13139*t13863 + 0.241*t13035*t2851 + 0.241*t13167*t2866)*var2[15] - 0.5*(0.241*t1225*t13035 + 0.241*t1300*t13167 + t13775 + t13778)*var2[16] - 0.5*t13767*var2[17]);
  p_output1[4]=var2[16]*(-0.5*t12565*var2[0] - 0.5*t13367*var2[1] - 0.5*t13680*var2[2] - 0.5*t13977*var2[3] - 0.5*(3.054*t11433*t11757 + 3.054*t11557*t11874 + 0.482*t12175*t12277 + 0.482*t12375*t12561 + 3.054*t12018*t13935 + 0.482*t12488*t13972)*var2[4] - 0.5*(0.241*t12488*t13897 + t14040 + t14043 + t14044 + t14047 + t14048 + t14049 + t14050 + t14052 + t14053 + 0.241*t12277*t5986 + 0.241*t12561*t6187)*var2[5] - 0.5*(0.241*t12488*t13863 + t14012 + t14013 + t14014 + t14015 + t14016 + t14017 + t14023 + t14034 + t14035 + 0.241*t12277*t2851 + 0.241*t12561*t2866)*var2[15] - 0.5*(0.241*t1225*t12277 + 0.241*t12561*t1300 + t14000 + t14001)*var2[16] - 0.5*t13997*var2[17]);
  p_output1[5]=var2[16]*(-0.5*(t4518 + t4832 + t4959 + t5862 + t5864 + t5886 + t6463 + t14123*t655 + t6980 + t14119*t846)*var2[0] - 0.5*(t13257 + t13258 + t13267 + t13268 + t13280 + t13282 + t13290 + t13291 + t10963*t14119 + t10895*t14123)*var2[1] - 0.5*(t13562 + t13565 + t13566 + t13567 + t13568 + t13572 + t13575 + t13577 + t10214*t14119 + t10067*t14123)*var2[2] - 0.5*(t13870 + t13872 + t13875 + t13877 + t13879 + t13885 + t13886 + t13890 + t13891 + t13167*t14119 + t13035*t14123 + t13139*t14132)*var2[3] - 0.5*(t14040 + t14043 + t14044 + t14047 + t14048 + t14049 + t14050 + t14052 + t14053 + t12561*t14119 + t12277*t14123 + t12488*t14132)*var2[4] - 0.5*(3.054*t13884*t4318 + 0.241*t13897*t5828 + t14132*t5828 - 3.054*t107*Power(t4827,2)*t62 + 3.054*t107*Power(t4938,2)*t62 + t14119*t6447 + 0.241*t6187*t6447 + t14123*t6790 + 0.241*t5986*t6790)*var2[5] - 0.5*(t14105 + t14107 + t14108 + t14110 + t14132*t2779 + t14119*t2903 + 0.035165*t14123*t529 + 0.241*t13863*t5828 + 0.241*t2866*t6447 + 0.241*t2851*t6790)*var2[15] - 0.5*(t14098 + t14099 + 0.241*t1300*t6447 + 0.241*t1225*t6790)*var2[16] - 0.5*t14095*var2[17]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=var2[16]*(-0.5*(t1905 + t2014 + t2063 + t2844 + t3016 + t3232 + t14215*t655 + t14211*t846)*var2[0] - 0.5*(t13222 + t13224 + t13225 + t13241 + t13244 + t13246 + t10963*t14211 + t10895*t14215)*var2[1] - 0.5*(t13508 + t13510 + t13513 + t13523 + t13542 + t13550 + t10214*t14211 + t10067*t14215)*var2[2] - 0.5*(t13789 + t13791 + t13796 + t13798 + t13805 + t13820 + t13825 + t13838 + t13839 + t13167*t14211 + t13035*t14215 + t13139*t14220)*var2[3] - 0.5*(t14012 + t14013 + t14014 + t14015 + t14016 + t14017 + t14023 + t14034 + t14035 + t12561*t14211 + t12277*t14215 + t12488*t14220)*var2[4] - 0.5*(t14105 + t14107 + t14108 + t14110 + 0.241*t13897*t2779 + t14220*t5828 + 0.008474765*t529*t5986 + 0.241*t2903*t6187 + t14211*t6447 + t14215*t6790)*var2[5] - 0.5*(3.054*t13818*t1812 + 0.241*t13863*t2779 + t14220*t2779 + t14211*t2903 + 0.241*t2866*t2903 + 0.035165*t14215*t529 + 0.008474765*t2851*t529)*var2[15] - 0.5*(t14198 + t14199 + 0.241*t1300*t2903 + 0.008474765*t1225*t529)*var2[16] - 0.5*t14195*var2[17]);
  p_output1[16]=(-0.5*(t1026 + t1048 + t14285*t655 + t14278*t846)*var2[0] - 0.5*(t13198 + t13199 + t10963*t14278 + t10895*t14285)*var2[1] - 0.5*(t13482 + t13489 + t10214*t14278 + t10067*t14285)*var2[2] - 0.5*(t13775 + t13778 + t13167*t14278 + t13035*t14285)*var2[3] - 0.5*(t14000 + t14001 + t12561*t14278 + t12277*t14285)*var2[4] - 0.5*(t14098 + t14099 + t14278*t6447 + t14285*t6790)*var2[5] - 0.5*(t14198 + t14199 + t14278*t2903 + 0.035165*t14285*t529)*var2[15])*var2[16];
  p_output1[17]=(-0.5*t875*var2[0] - 0.5*t13190*var2[1] - 0.5*t13480*var2[2] - 0.5*t13767*var2[3] - 0.5*t13997*var2[4] - 0.5*t14095*var2[5] - 0.5*t14195*var2[15])*var2[16];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec17_plane.hh"

namespace SymFunction
{

void Ce2_vec17_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
