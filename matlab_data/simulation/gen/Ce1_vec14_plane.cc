/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:11:46 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t170;
  double t132;
  double t141;
  double t304;
  double t838;
  double t1917;
  double t991;
  double t3470;
  double t4070;
  double t3655;
  double t3766;
  double t4676;
  double t4694;
  double t4695;
  double t4369;
  double t4386;
  double t4399;
  double t4420;
  double t3907;
  double t3935;
  double t4133;
  double t4163;
  double t5034;
  double t5054;
  double t5061;
  double t4286;
  double t4303;
  double t4550;
  double t4576;
  double t4985;
  double t4999;
  double t5010;
  double t5024;
  double t6125;
  double t7029;
  double t7453;
  double t7454;
  double t7537;
  double t6865;
  double t7020;
  double t7100;
  double t7127;
  double t7277;
  double t7284;
  double t7431;
  double t7447;
  double t7448;
  double t7567;
  double t7572;
  double t7577;
  double t7605;
  double t7648;
  double t7662;
  double t5727;
  double t5730;
  double t5717;
  double t5725;
  double t8032;
  double t8066;
  double t7805;
  double t7884;
  double t7990;
  double t5831;
  double t5845;
  double t5785;
  double t5818;
  double t6423;
  double t6503;
  double t6515;
  double t8172;
  double t8312;
  double t8313;
  double t8698;
  double t8705;
  double t8835;
  double t8856;
  double t8869;
  double t8886;
  double t6167;
  double t6222;
  double t6265;
  double t354;
  double t1251;
  double t1592;
  double t9852;
  double t9873;
  double t2190;
  double t2398;
  double t2448;
  double t4948;
  double t4953;
  double t4968;
  double t5095;
  double t5139;
  double t5142;
  double t6164;
  double t9178;
  double t9195;
  double t9201;
  double t5327;
  double t5447;
  double t5499;
  double t5583;
  double t5600;
  double t5689;
  double t5726;
  double t5733;
  double t5734;
  double t5829;
  double t5846;
  double t5867;
  double t9316;
  double t9374;
  double t9384;
  double t9174;
  double t9210;
  double t9223;
  double t9419;
  double t9435;
  double t9513;
  double t9521;
  double t10501;
  double t10518;
  double t10528;
  double t10530;
  double t10531;
  double t10532;
  double t10535;
  double t10536;
  double t10546;
  double t10547;
  double t10549;
  double t10550;
  double t10551;
  double t10552;
  double t10554;
  double t10558;
  double t10559;
  double t10560;
  double t10561;
  double t10564;
  double t7714;
  double t7783;
  double t7991;
  double t8031;
  double t8085;
  double t8133;
  double t10580;
  double t10582;
  double t10583;
  double t10585;
  double t8655;
  double t8665;
  double t8666;
  double t10589;
  double t10590;
  double t10591;
  double t10593;
  double t10026;
  double t10035;
  double t10061;
  double t10085;
  double t10089;
  double t10091;
  double t10204;
  double t10213;
  double t10217;
  double t10298;
  double t10337;
  double t10345;
  double t10351;
  double t10361;
  double t10363;
  double t10364;
  double t10365;
  double t10377;
  double t10382;
  double t10383;
  double t10416;
  double t10443;
  double t10458;
  double t10460;
  double t10461;
  double t10795;
  double t10797;
  double t10801;
  double t10807;
  double t10808;
  double t10813;
  double t10816;
  double t10817;
  double t10468;
  double t10470;
  double t10475;
  double t10601;
  double t10604;
  double t10608;
  double t10611;
  double t10901;
  double t10902;
  double t10903;
  double t10914;
  double t10915;
  double t10917;
  double t10899;
  double t10904;
  double t10905;
  double t10933;
  double t10935;
  double t10936;
  double t10937;
  double t10939;
  double t10940;
  double t10887;
  double t10889;
  double t10898;
  double t10986;
  double t10989;
  double t10998;
  double t10999;
  double t11012;
  double t11013;
  double t11034;
  double t11035;
  double t11036;
  double t11038;
  double t11042;
  double t11043;
  double t11046;
  double t11048;
  double t11049;
  double t11019;
  double t11020;
  double t11045;
  double t11050;
  double t11051;
  double t11057;
  double t11058;
  double t11060;
  double t10913;
  double t10921;
  double t10924;
  double t10878;
  double t10885;
  double t10886;
  double t6350;
  double t6760;
  double t6801;
  double t10926;
  double t10966;
  double t10971;
  double t10979;
  double t10981;
  double t8134;
  double t8358;
  double t8364;
  double t11389;
  double t11390;
  double t11392;
  double t11394;
  double t11412;
  double t11414;
  double t11418;
  double t11445;
  double t11384;
  double t11399;
  double t11407;
  double t11374;
  double t11353;
  double t11357;
  double t11475;
  double t11478;
  double t11481;
  double t11482;
  double t11494;
  double t11447;
  double t11449;
  double t11451;
  double t11453;
  double t11507;
  double t11515;
  double t11516;
  double t11519;
  double t11524;
  double t11530;
  double t11531;
  double t11371;
  double t11378;
  double t11383;
  double t11469;
  double t11473;
  double t11495;
  double t11496;
  double t11520;
  double t11537;
  double t11540;
  double t11503;
  double t11504;
  double t11549;
  double t11552;
  double t11556;
  double t11411;
  double t11419;
  double t11429;
  double t8846;
  double t8929;
  double t8946;
  double t11434;
  double t11442;
  double t11695;
  double t11696;
  double t11697;
  double t11703;
  double t11707;
  double t11708;
  double t11069;
  double t11079;
  double t11100;
  double t11107;
  double t11188;
  double t11199;
  double t11201;
  double t11202;
  double t11267;
  double t11273;
  double t11279;
  double t11293;
  double t11337;
  double t11338;
  double t11339;
  double t11344;
  double t11807;
  double t11808;
  double t11809;
  double t11816;
  double t11819;
  double t11820;
  double t11560;
  double t11564;
  double t11568;
  double t11572;
  double t11796;
  double t11592;
  double t11593;
  double t11594;
  double t11595;
  double t11798;
  double t11637;
  double t11642;
  double t11643;
  double t11648;
  double t11672;
  double t11676;
  double t11677;
  double t11678;
  double t11905;
  double t11916;
  double t11918;
  double t9477;
  double t11996;
  double t11978;
  double t11983;
  double t11986;
  double t9699;
  double t12056;
  double t12057;
  double t12071;
  double t12073;
  double t12075;
  double t12058;
  double t12062;
  double t12063;
  double t12070;
  double t12076;
  double t12077;
  double t12089;
  double t12091;
  double t12092;
  double t6300;
  double t6307;
  double t12141;
  double t12143;
  double t12145;
  double t12146;
  double t12157;
  double t12162;
  double t12164;
  double t12167;
  double t12149;
  double t12150;
  double t12151;
  double t12158;
  double t12172;
  double t12173;
  double t12180;
  double t12181;
  double t12182;
  double t12140;
  double t12290;
  double t12296;
  double t12299;
  double t12311;
  double t12312;
  double t12313;
  double t12318;
  double t12320;
  double t12321;
  double t12195;
  double t12300;
  double t12303;
  double t12305;
  double t12197;
  double t12198;
  double t12317;
  double t12323;
  double t12329;
  double t12334;
  double t12337;
  double t12341;
  double t12219;
  double t12243;
  double t12249;
  double t12250;
  double t11723;
  double t11726;
  double t11693;
  double t11701;
  double t11763;
  double t11766;
  double t11776;
  double t11778;
  double t11797;
  double t11806;
  double t11830;
  double t11831;
  double t11863;
  double t11867;
  double t11883;
  double t11886;
  double t12467;
  double t12470;
  double t11136;
  double t11140;
  double t10925;
  double t11022;
  double t12514;
  double t12515;
  double t12517;
  double t12525;
  double t12528;
  double t11220;
  double t11250;
  double t11305;
  double t11309;
  double t12573;
  double t12583;
  double t12588;
  double t12606;
  double t12613;
  double t11432;
  double t11474;
  double t11575;
  double t11576;
  double t12635;
  double t12636;
  double t12639;
  double t12646;
  double t12648;
  double t11603;
  double t11605;
  double t11650;
  double t11652;
  double t12669;
  double t12670;
  double t12672;
  double t12068;
  double t12100;
  double t12101;
  double t12118;
  double t12126;
  double t12129;
  double t12155;
  double t12196;
  double t12230;
  double t12247;
  double t12829;
  double t12306;
  double t12833;
  double t12835;
  double t12352;
  double t12844;
  double t12406;
  double t12851;
  double t12852;
  double t12419;
  double t13031;
  double t13039;
  double t13040;
  double t13041;
  double t13045;
  double t13046;
  double t13048;
  double t13051;
  double t13157;
  double t13158;
  double t13165;
  double t13170;
  double t13172;
  t170 = Cos(var1[13]);
  t132 = Cos(var1[4]);
  t141 = Cos(var1[12]);
  t304 = Cos(var1[5]);
  t838 = Sin(var1[12]);
  t1917 = Sin(var1[13]);
  t991 = Sin(var1[5]);
  t3470 = Cos(var1[14]);
  t4070 = Sin(var1[14]);
  t3655 = -1.*t3470;
  t3766 = 1. + t3655;
  t4676 = -1.*t3470*t1917;
  t4694 = -1.*t170*t4070;
  t4695 = 0. + t4676 + t4694;
  t4369 = -0.336601*t3766;
  t4386 = -0.356601*t3470;
  t4399 = -0.16*t4070;
  t4420 = 0. + t4369 + t4386 + t4399;
  t3907 = -0.20833*t3766;
  t3935 = -0.36833*t3470;
  t4133 = 0.020000000000000018*t4070;
  t4163 = 0. + t3907 + t3935 + t4133;
  t5034 = t170*t3470;
  t5054 = -1.*t1917*t4070;
  t5061 = 0. + t5034 + t5054;
  t4286 = t3470*t4163;
  t4303 = 0.194401*t4070;
  t4550 = t4420*t4070;
  t4576 = 0. + t4286 + t4303 + t4550;
  t4985 = -0.194401*t3470;
  t4999 = -1.*t3470*t4420;
  t5010 = t4163*t4070;
  t5024 = 0. + t4985 + t4999 + t5010;
  t6125 = Sin(var1[4]);
  t7029 = t4676 + t4694;
  t7453 = -1.*t170*t3470;
  t7454 = t1917*t4070;
  t7537 = t7453 + t7454;
  t6865 = t5034 + t5054;
  t7020 = t6865*t6125;
  t7100 = t304*t838*t7029;
  t7127 = -1.*t141*t7029*t991;
  t7277 = t7100 + t7127;
  t7284 = t132*t7277;
  t7431 = t7020 + t7284;
  t7447 = 0.241*t5024*t7431;
  t7448 = t7029*t6125;
  t7567 = t304*t838*t7537;
  t7572 = -1.*t141*t7537*t991;
  t7577 = t7567 + t7572;
  t7605 = t132*t7577;
  t7648 = t7448 + t7605;
  t7662 = 0.241*t4576*t7648;
  t5727 = t838*t4695;
  t5730 = 0. + t5727;
  t5717 = t141*t4695;
  t5725 = 0. + t5717;
  t8032 = -0.16*t3470;
  t8066 = t8032 + t4133;
  t7805 = 0.020000000000000018*t3470;
  t7884 = 0.16*t4070;
  t7990 = t7805 + t7884;
  t5831 = t838*t5061;
  t5845 = 0. + t5831;
  t5785 = t141*t5061;
  t5818 = 0. + t5785;
  t6423 = -1.*t304*t838*t1917;
  t6503 = t141*t1917*t991;
  t6515 = t6423 + t6503;
  t8172 = t304*t5730;
  t8312 = -1.*t5725*t991;
  t8313 = 0. + t8172 + t8312;
  t8698 = t3470*t1917;
  t8705 = t170*t4070;
  t8835 = 0. + t8698 + t8705;
  t8856 = t304*t5845;
  t8869 = -1.*t5818*t991;
  t8886 = 0. + t8856 + t8869;
  t6167 = -1.*t170*t304*t838;
  t6222 = t141*t170*t991;
  t6265 = t6167 + t6222;
  t354 = t141*t170*t304;
  t1251 = t170*t838*t991;
  t1592 = t354 + t1251;
  t9852 = Cos(var1[3]);
  t9873 = Sin(var1[3]);
  t2190 = -1.*t141*t304*t1917;
  t2398 = -1.*t838*t1917*t991;
  t2448 = t2190 + t2398;
  t4948 = t141*t304*t4695;
  t4953 = t838*t4695*t991;
  t4968 = t4948 + t4953;
  t5095 = t141*t304*t5061;
  t5139 = t838*t5061*t991;
  t5142 = t5095 + t5139;
  t6164 = -1.*t1917*t6125;
  t9178 = t170*t304*t838;
  t9195 = -1.*t141*t170*t991;
  t9201 = t9178 + t9195;
  t5327 = -1.*t141*t170*t304;
  t5447 = -1.*t170*t838*t991;
  t5499 = t5327 + t5447;
  t5583 = t141*t304*t1917;
  t5600 = t838*t1917*t991;
  t5689 = t5583 + t5600;
  t5726 = -1.*t304*t5725;
  t5733 = -1.*t5730*t991;
  t5734 = t5726 + t5733;
  t5829 = -1.*t304*t5818;
  t5846 = -1.*t5845*t991;
  t5867 = t5829 + t5846;
  t9316 = t170*t132;
  t9374 = -1.*t6125*t6515;
  t9384 = t9316 + t9374;
  t9174 = t132*t1917;
  t9210 = -1.*t6125*t9201;
  t9223 = t9174 + t9210;
  t9419 = t132*t5061;
  t9435 = -1.*t6125*t8313;
  t9513 = t132*t8835;
  t9521 = -1.*t6125*t8886;
  t10501 = t141*t304*t7029;
  t10518 = t838*t7029*t991;
  t10528 = t10501 + t10518;
  t10530 = t9852*t10528;
  t10531 = t132*t6865;
  t10532 = -1.*t6125*t7277;
  t10535 = t10531 + t10532;
  t10536 = -1.*t9873*t10535;
  t10546 = t10530 + t10536;
  t10547 = 0.241*t5024*t10546;
  t10549 = t141*t304*t7537;
  t10550 = t838*t7537*t991;
  t10551 = t10549 + t10550;
  t10552 = t9852*t10551;
  t10554 = t132*t7029;
  t10558 = -1.*t6125*t7577;
  t10559 = t10554 + t10558;
  t10560 = -1.*t9873*t10559;
  t10561 = t10552 + t10560;
  t10564 = 0.241*t4576*t10561;
  t7714 = 0.194401*t3470;
  t7783 = t3470*t4420;
  t7991 = t3470*t7990;
  t8031 = -1.*t4163*t4070;
  t8085 = t8066*t4070;
  t8133 = t7714 + t7783 + t7991 + t8031 + t8085;
  t10580 = t304*t5725;
  t10582 = t5730*t991;
  t10583 = 0. + t10580 + t10582;
  t10585 = 0. + t9419 + t9435;
  t8655 = -1.*t3470*t8066;
  t8665 = t7990*t4070;
  t8666 = t4286 + t8655 + t4303 + t4550 + t8665;
  t10589 = t304*t5818;
  t10590 = t5845*t991;
  t10591 = 0. + t10589 + t10590;
  t10593 = 0. + t9513 + t9521;
  t10026 = t304*t838*t1917;
  t10035 = -1.*t141*t1917*t991;
  t10061 = t10026 + t10035;
  t10085 = -1.*t304*t838*t4695;
  t10089 = t141*t4695*t991;
  t10091 = t10085 + t10089;
  t10204 = -1.*t304*t838*t5061;
  t10213 = t141*t5061*t991;
  t10217 = t10204 + t10213;
  t10298 = -1.*t132*t9201;
  t10337 = t6164 + t10298;
  t10345 = -1.*t170*t6125;
  t10351 = -1.*t132*t6515;
  t10361 = t10345 + t10351;
  t10363 = -1.*t5061*t6125;
  t10364 = -1.*t132*t8313;
  t10365 = t10363 + t10364;
  t10377 = -1.*t8835*t6125;
  t10382 = -1.*t132*t8886;
  t10383 = t10377 + t10382;
  t10416 = t8172 + t8312;
  t10443 = t8856 + t8869;
  t10458 = -1.*t132*t1917;
  t10460 = -1.*t6125*t6265;
  t10461 = t10458 + t10460;
  t10795 = t9873*t10528;
  t10797 = t9852*t10535;
  t10801 = t10795 + t10797;
  t10807 = 0.241*t5024*t10801;
  t10808 = t9873*t10551;
  t10813 = t9852*t10559;
  t10816 = t10808 + t10813;
  t10817 = 0.241*t4576*t10816;
  t10468 = t9852*t2448;
  t10470 = -1.*t9873*t9384;
  t10475 = t10468 + t10470;
  t10601 = t9852*t10583;
  t10604 = -1.*t9873*t10585;
  t10608 = t9852*t10591;
  t10611 = -1.*t9873*t10593;
  t10901 = -0.04*t170;
  t10902 = 0.04*t1917;
  t10903 = t10901 + t10902;
  t10914 = 0.053565*t838;
  t10915 = t141*t10903;
  t10917 = t10914 + t10915;
  t10899 = 0.053565*t141;
  t10904 = -1.*t838*t10903;
  t10905 = t10899 + t10904;
  t10933 = t141*t304;
  t10935 = t838*t991;
  t10936 = t10933 + t10935;
  t10937 = t304*t10917;
  t10939 = -1.*t10905*t991;
  t10940 = t10937 + t10939;
  t10887 = -1.*t304*t838;
  t10889 = t141*t991;
  t10898 = t10887 + t10889;
  t10986 = -1.*t141;
  t10989 = 1. + t10986;
  t10998 = -0.081715*t10989;
  t10999 = -0.13528*t141;
  t11012 = t838*t10903;
  t11013 = t10998 + t10999 + t11012;
  t11034 = -1.*t170;
  t11035 = 1. + t11034;
  t11036 = -0.194401*t11035;
  t11038 = -0.234401*t170;
  t11042 = -0.04*t1917;
  t11043 = t11036 + t11038 + t11042;
  t11046 = t304*t11013;
  t11048 = -1.*t10917*t991;
  t11049 = t11046 + t11048;
  t11019 = t11013*t991;
  t11020 = t10937 + t11019;
  t11045 = t11043*t6125;
  t11050 = t132*t11049;
  t11051 = t11045 + t11050;
  t11057 = t132*t11043;
  t11058 = -1.*t6125*t11049;
  t11060 = t11057 + t11058;
  t10913 = t304*t10905;
  t10921 = t10917*t991;
  t10924 = t10913 + t10921;
  t10878 = t1917*t6125;
  t10885 = t132*t9201;
  t10886 = t10878 + t10885;
  t6350 = t170*t6125;
  t6760 = t132*t6515;
  t6801 = t6350 + t6760;
  t10926 = Power(t132,2);
  t10966 = Power(t6125,2);
  t10971 = -1.*t141*t304;
  t10979 = -1.*t838*t991;
  t10981 = t10971 + t10979;
  t8134 = t5061*t6125;
  t8358 = t132*t8313;
  t8364 = 0. + t8134 + t8358;
  t11389 = -0.194401*t1917;
  t11390 = -1.*t1917*t4420;
  t11392 = t170*t4163;
  t11394 = 0. + t11389 + t11390 + t11392;
  t11412 = 0.032875*t838;
  t11414 = t141*t11394;
  t11418 = t11412 + t11414;
  t11445 = t304*t11418;
  t11384 = 0.032875*t141;
  t11399 = -1.*t838*t11394;
  t11407 = t11384 + t11399;
  t11374 = 0. + t141;
  t11353 = -1.*t838;
  t11357 = 0. + t11353;
  t11475 = -1.*t11407*t991;
  t11478 = t11445 + t11475;
  t11481 = t11374*t304;
  t11482 = -1.*t11357*t991;
  t11494 = 0. + t11481 + t11482;
  t11447 = -0.081715*t10989;
  t11449 = -0.11459*t141;
  t11451 = t838*t11394;
  t11453 = t11447 + t11449 + t11451;
  t11507 = -0.194401*t11035;
  t11515 = t170*t4420;
  t11516 = t1917*t4163;
  t11519 = 0. + t11507 + t11515 + t11516;
  t11524 = t304*t11453;
  t11530 = -1.*t11418*t991;
  t11531 = 0. + t11524 + t11530;
  t11371 = t304*t11357;
  t11378 = t11374*t991;
  t11383 = 0. + t11371 + t11378;
  t11469 = t11453*t991;
  t11473 = 0. + t11445 + t11469;
  t11495 = t132*t11494;
  t11496 = 0. + t11495;
  t11520 = t11519*t6125;
  t11537 = t132*t11531;
  t11540 = 0. + t11520 + t11537;
  t11503 = -1.*t6125*t11494;
  t11504 = 0. + t11503;
  t11549 = t132*t11519;
  t11552 = -1.*t6125*t11531;
  t11556 = 0. + t11549 + t11552;
  t11411 = t304*t11407;
  t11419 = t11418*t991;
  t11429 = t11411 + t11419;
  t8846 = t8835*t6125;
  t8929 = t132*t8886;
  t8946 = 0. + t8846 + t8929;
  t11434 = -1.*t141*t304;
  t11442 = t11434 + t10979;
  t11695 = -1.*t304*t10917;
  t11696 = -1.*t11013*t991;
  t11697 = t11695 + t11696;
  t11703 = t304*t838;
  t11707 = -1.*t141*t991;
  t11708 = t11703 + t11707;
  t11069 = -1.*t10898*t11020;
  t11079 = -1.*t132*t10936*t11051;
  t11100 = t6125*t10936*t11060;
  t11107 = t11069 + t11079 + t11100;
  t11188 = t1592*t11020;
  t11199 = t10886*t11051;
  t11201 = t9223*t11060;
  t11202 = t11188 + t11199 + t11201;
  t11267 = t10898*t11020;
  t11273 = t132*t10936*t11051;
  t11279 = -1.*t6125*t10936*t11060;
  t11293 = t11267 + t11273 + t11279;
  t11337 = -1.*t11020*t2448;
  t11338 = -1.*t11051*t6801;
  t11339 = -1.*t11060*t9384;
  t11344 = t11337 + t11338 + t11339;
  t11807 = -1.*t304*t11418;
  t11808 = -1.*t11453*t991;
  t11809 = t11807 + t11808;
  t11816 = -1.*t304*t11357;
  t11819 = -1.*t11374*t991;
  t11820 = t11816 + t11819;
  t11560 = t11383*t11473;
  t11564 = t11496*t11540;
  t11568 = t11504*t11556;
  t11572 = t11560 + t11564 + t11568;
  t11796 = t11524 + t11530;
  t11592 = -1.*t11473*t10583;
  t11593 = -1.*t11540*t8364;
  t11594 = -1.*t11556*t10585;
  t11595 = t11592 + t11593 + t11594;
  t11798 = t11481 + t11482;
  t11637 = -1.*t11383*t11473;
  t11642 = -1.*t11496*t11540;
  t11643 = -1.*t11504*t11556;
  t11648 = t11637 + t11642 + t11643;
  t11672 = t11473*t10591;
  t11676 = t11540*t8946;
  t11677 = t11556*t10593;
  t11678 = t11672 + t11676 + t11677;
  t11905 = -1.*t11043*t6125;
  t11916 = -1.*t132*t11049;
  t11918 = t11905 + t11916;
  t9477 = t9419 + t9435;
  t11996 = t11549 + t11552;
  t11978 = -1.*t11519*t6125;
  t11983 = -1.*t132*t11531;
  t11986 = t11978 + t11983;
  t9699 = t9513 + t9521;
  t12056 = 0.04*t170;
  t12057 = t12056 + t10902;
  t12071 = t304*t838*t12057;
  t12073 = -1.*t141*t12057*t991;
  t12075 = t12071 + t12073;
  t12058 = t141*t304*t12057;
  t12062 = t838*t12057*t991;
  t12063 = t12058 + t12062;
  t12070 = t10903*t6125;
  t12076 = t132*t12075;
  t12077 = t12070 + t12076;
  t12089 = t132*t10903;
  t12091 = -1.*t6125*t12075;
  t12092 = t12089 + t12091;
  t6300 = t132*t6265;
  t6307 = t6164 + t6300;
  t12141 = -0.194401*t170;
  t12143 = -1.*t170*t4420;
  t12145 = -1.*t1917*t4163;
  t12146 = t12141 + t12143 + t12145;
  t12157 = t11389 + t11390 + t11392;
  t12162 = t304*t838*t12146;
  t12164 = -1.*t141*t12146*t991;
  t12167 = t12162 + t12164;
  t12149 = t141*t304*t12146;
  t12150 = t838*t12146*t991;
  t12151 = t12149 + t12150;
  t12158 = t12157*t6125;
  t12172 = t132*t12167;
  t12173 = t12158 + t12172;
  t12180 = t132*t12157;
  t12181 = -1.*t6125*t12167;
  t12182 = t12180 + t12181;
  t12140 = t7648*t11572;
  t12290 = -1.*t1917*t8066;
  t12296 = t170*t7990;
  t12299 = t12290 + t12296;
  t12311 = t170*t8066;
  t12312 = t1917*t7990;
  t12313 = t12311 + t12312;
  t12318 = t304*t838*t12299;
  t12320 = -1.*t141*t12299*t991;
  t12321 = t12318 + t12320;
  t12195 = -1.*t11473*t10551;
  t12300 = t141*t304*t12299;
  t12303 = t838*t12299*t991;
  t12305 = t12300 + t12303;
  t12197 = -1.*t11540*t7648;
  t12198 = -1.*t11556*t10559;
  t12317 = t12313*t6125;
  t12323 = t132*t12321;
  t12329 = t12317 + t12323;
  t12334 = t132*t12313;
  t12337 = -1.*t6125*t12321;
  t12341 = t12334 + t12337;
  t12219 = t7431*t11648;
  t12243 = t11473*t10528;
  t12249 = t11540*t7431;
  t12250 = t11556*t10535;
  t11723 = t1592*t11049;
  t11726 = t9201*t11020;
  t11693 = -1.*t10898*t11049;
  t11701 = -1.*t10936*t11020;
  t11763 = t10898*t11049;
  t11766 = t10936*t11020;
  t11776 = -1.*t11020*t6515;
  t11778 = -1.*t11049*t2448;
  t11797 = t11383*t11796;
  t11806 = t11798*t11473;
  t11830 = -1.*t11473*t10416;
  t11831 = -1.*t11796*t10583;
  t11863 = -1.*t11383*t11796;
  t11867 = -1.*t11798*t11473;
  t11883 = t11473*t10443;
  t11886 = t11796*t10591;
  t12467 = -1.*t10936*t11049;
  t12470 = t12467 + t11069;
  t11136 = t1592*t10924;
  t11140 = t6265*t11020;
  t10925 = -1.*t10898*t10924;
  t11022 = -1.*t10981*t11020;
  t12514 = t11043*t1917;
  t12515 = t9201*t11049;
  t12517 = t12514 + t12515 + t11188;
  t12525 = t10936*t11049;
  t12528 = t12525 + t11267;
  t11220 = t10898*t10924;
  t11250 = t10981*t11020;
  t11305 = -1.*t11020*t10061;
  t11309 = -1.*t10924*t2448;
  t12573 = -1.*t170*t11043;
  t12583 = -1.*t11049*t6515;
  t12588 = t12573 + t12583 + t11337;
  t12606 = t11494*t11531;
  t12613 = 0. + t12606 + t11560;
  t11432 = t11383*t11429;
  t11474 = t11442*t11473;
  t11575 = -1.*t11473*t10091;
  t11576 = -1.*t11429*t10583;
  t12635 = -1.*t11519*t5061;
  t12636 = -1.*t11531*t8313;
  t12639 = t12635 + t12636 + t11592;
  t12646 = -1.*t11494*t11531;
  t12648 = 0. + t12646 + t11637;
  t11603 = -1.*t11383*t11429;
  t11605 = -1.*t11442*t11473;
  t11650 = t11473*t10217;
  t11652 = t11429*t10591;
  t12669 = t11519*t8835;
  t12670 = t11531*t8886;
  t12672 = t12669 + t12670 + t11672;
  t12068 = -1.*t10898*t12063;
  t12100 = t1592*t12063;
  t12101 = t11020*t2448;
  t12118 = t10898*t12063;
  t12126 = -1.*t5499*t11020;
  t12129 = -1.*t12063*t2448;
  t12155 = t11383*t12151;
  t12196 = -1.*t12151*t10583;
  t12230 = -1.*t11383*t12151;
  t12247 = t12151*t10591;
  t12829 = t10551*t12613;
  t12306 = t11383*t12305;
  t12833 = -1.*t11519*t7029;
  t12835 = -1.*t11531*t7577;
  t12352 = -1.*t12305*t10583;
  t12844 = t10528*t12648;
  t12406 = -1.*t11383*t12305;
  t12851 = t11519*t6865;
  t12852 = t11531*t7277;
  t12419 = t12305*t10591;
  t13031 = -1.*t11357*t11418;
  t13039 = -1.*t11374*t11453;
  t13040 = 0. + t13031 + t13039;
  t13041 = t13040*t6865;
  t13045 = t11357*t11418;
  t13046 = t11374*t11453;
  t13048 = 0. + t13045 + t13046;
  t13051 = t13048*t7029;
  t13157 = 0.007922875*t7029*t5024;
  t13158 = -0.11459*t6865;
  t13165 = -0.081715*t7537;
  t13170 = t13158 + t13165;
  t13172 = 0.241*t4576*t13170;
  p_output1[0]=var2[13]*(-0.5*(0.06108*t9223 - 0.06108*t9384 + 0.241*t4576*t9477 + 0.241*t5024*t9699)*var2[4] - 0.5*(0.06108*t132*t5499 - 0.06108*t132*t5689 + 0.241*t132*t4576*t5734 + 0.241*t132*t5024*t5867)*var2[5] - 0.5*(0.06108*t132*t1592 - 0.06108*t132*t2448 + 0.241*t132*t4576*t4968 + 0.241*t132*t5024*t5142)*var2[12] - 0.5*(-0.06108*t6307 + 0.06108*t6801 + t7447 + t7662)*var2[13] - 0.5*(t7447 + t7662 + 0.241*t8133*t8364 + 0.241*t8666*t8946)*var2[14]);
  p_output1[1]=var2[13]*(-0.5*(0.241*t4576*(-1.*t10585*t9852 - 1.*t10583*t9873) + 0.241*t5024*(-1.*t10593*t9852 - 1.*t10591*t9873) + 0.06108*(-1.*t9223*t9852 - 1.*t1592*t9873) - 0.06108*(-1.*t9384*t9852 - 1.*t2448*t9873))*var2[3] - 0.5*(-0.06108*t10337*t9873 + 0.06108*t10361*t9873 - 0.241*t10365*t4576*t9873 - 0.241*t10383*t5024*t9873)*var2[4] - 0.5*(0.06108*(t9201*t9852 + t5499*t6125*t9873) - 0.06108*(t6515*t9852 + t5689*t6125*t9873) + 0.241*t4576*(t10416*t9852 + t5734*t6125*t9873) + 0.241*t5024*(t10443*t9852 + t5867*t6125*t9873))*var2[5] - 0.5*(0.06108*(t6265*t9852 + t1592*t6125*t9873) - 0.06108*(t10061*t9852 + t2448*t6125*t9873) + 0.241*t4576*(t10091*t9852 + t4968*t6125*t9873) + 0.241*t5024*(t10217*t9852 + t5142*t6125*t9873))*var2[12] - 0.5*(0.06108*t10475 + t10547 + t10564 - 0.06108*(t5499*t9852 - 1.*t10461*t9873))*var2[13] - 0.5*(t10547 + t10564 + 0.241*(0. + t10601 + t10604)*t8133 + 0.241*(0. + t10608 + t10611)*t8666)*var2[14]);
  p_output1[2]=var2[13]*(-0.5*(-0.06108*t10475 + 0.241*(t10601 + t10604)*t4576 + 0.241*(t10608 + t10611)*t5024 + 0.06108*(t1592*t9852 - 1.*t9223*t9873))*var2[3] - 0.5*(0.06108*t10337*t9852 - 0.06108*t10361*t9852 + 0.241*t10365*t4576*t9852 + 0.241*t10383*t5024*t9852)*var2[4] - 0.5*(0.241*t4576*(-1.*t5734*t6125*t9852 + t10416*t9873) + 0.241*t5024*(-1.*t5867*t6125*t9852 + t10443*t9873) - 0.06108*(-1.*t5689*t6125*t9852 + t6515*t9873) + 0.06108*(-1.*t5499*t6125*t9852 + t9201*t9873))*var2[5] - 0.5*(-0.06108*(-1.*t2448*t6125*t9852 + t10061*t9873) + 0.241*t4576*(-1.*t4968*t6125*t9852 + t10091*t9873) + 0.241*t5024*(-1.*t5142*t6125*t9852 + t10217*t9873) + 0.06108*(-1.*t1592*t6125*t9852 + t6265*t9873))*var2[12] - 0.5*(t10807 + t10817 + 0.06108*(t9384*t9852 + t2448*t9873) - 0.06108*(t10461*t9852 + t5499*t9873))*var2[13] - 0.5*(t10807 + t10817 + 0.241*t8133*(0. + t10585*t9852 + t10583*t9873) + 0.241*t8666*(0. + t10593*t9852 + t10591*t9873))*var2[14]);
  p_output1[3]=var2[13]*(-0.5*(-0.06108*(-1.*t10936*t11202*t6125 + t10886*(t10936*t11051*t6125 + t10936*t11918*t6125) + t11107*t9223 + t10936*t132*(t10337*t11060 + t10886*t11060 + t11051*t9223 + t11918*t9223)) + 0.06108*(-1.*t10936*t11344*t6125 + (-1.*t10936*t11051*t6125 - 1.*t10936*t11918*t6125)*t6801 + t11293*t9384 + t10936*t132*(-1.*t10361*t11060 - 1.*t11060*t6801 - 1.*t11051*t9384 - 1.*t11918*t9384)) + 0.241*t5024*(-1.*t11494*t11595*t6125 + (t11504*t11986 + t11496*t11996 - 1.*t11494*t11556*t132 - 1.*t11494*t11540*t6125)*t8364 + t11572*t9477 + t11496*(-1.*t10365*t11556 - 1.*t10585*t11986 - 1.*t11996*t8364 - 1.*t11540*t9477)) + 0.241*t4576*(-1.*t11494*t11678*t6125 + (-1.*t11504*t11986 - 1.*t11496*t11996 + t11494*t11556*t132 + t11494*t11540*t6125)*t8946 + t11648*t9699 + t11496*(t10383*t11556 + t10593*t11986 + t11996*t8946 + t11540*t9699)))*var2[4] - 0.5*(0.241*t5024*(t11595*t11820*t132 + t11572*t132*t5734 + (t11797 + t11806 + t11496*t11809*t132 + t11540*t11820*t132 - 1.*t11504*t11809*t6125 - 1.*t11556*t11820*t6125)*t8364 + t11496*(t11830 + t11831 - 1.*t11540*t132*t5734 + t10585*t11809*t6125 + t11556*t5734*t6125 - 1.*t11809*t132*t8364)) + 0.241*t4576*(t11678*t11820*t132 + t11648*t132*t5867 + (t11863 + t11867 - 1.*t11496*t11809*t132 - 1.*t11540*t11820*t132 + t11504*t11809*t6125 + t11556*t11820*t6125)*t8946 + t11496*(t11883 + t11886 + t11540*t132*t5867 - 1.*t10593*t11809*t6125 - 1.*t11556*t5867*t6125 + t11809*t132*t8946)) - 0.06108*(t11202*t11708*t132 + t11107*t132*t5499 + t10886*(t11693 - 1.*t10926*t10936*t11697 - 1.*t10936*t10966*t11697 + t11701 - 1.*t11051*t11708*t132 + t11060*t11708*t6125) + t10936*t132*(t11723 + t11726 + t10886*t11697*t132 + t11051*t132*t5499 - 1.*t11060*t5499*t6125 - 1.*t11697*t6125*t9223)) + 0.06108*(t11344*t11708*t132 + t11293*t132*t5689 + (t10926*t10936*t11697 + t10936*t10966*t11697 + t11763 + t11766 + t11051*t11708*t132 - 1.*t11060*t11708*t6125)*t6801 + t10936*t132*(t11776 + t11778 - 1.*t11051*t132*t5689 + t11060*t5689*t6125 - 1.*t11697*t132*t6801 + t11697*t6125*t9384)))*var2[5] - 0.5*(0.241*t5024*(t10898*t11595*t132 + t11572*t132*t4968 + (t11432 + t11474 + t11478*t11496*t132 + t10898*t11540*t132 - 1.*t11478*t11504*t6125 - 1.*t10898*t11556*t6125)*t8364 + t11496*(t11575 + t11576 - 1.*t11540*t132*t4968 + t10585*t11478*t6125 + t11556*t4968*t6125 - 1.*t11478*t132*t8364)) + 0.241*t4576*(t10898*t11678*t132 + t11648*t132*t5142 + (t11603 + t11605 - 1.*t11478*t11496*t132 - 1.*t10898*t11540*t132 + t11478*t11504*t6125 + t10898*t11556*t6125)*t8946 + t11496*(t11650 + t11652 + t11540*t132*t5142 - 1.*t10593*t11478*t6125 - 1.*t11556*t5142*t6125 + t11478*t132*t8946)) - 0.06108*(t10898*t11202*t132 + t11107*t132*t1592 + t10886*(t10925 - 1.*t10926*t10936*t10940 - 1.*t10936*t10940*t10966 + t11022 - 1.*t10898*t11051*t132 + t10898*t11060*t6125) + t10936*t132*(t11136 + t11140 + t10886*t10940*t132 + t11051*t132*t1592 - 1.*t11060*t1592*t6125 - 1.*t10940*t6125*t9223)) + 0.06108*(t10898*t11344*t132 + t11293*t132*t2448 + (t10926*t10936*t10940 + t10936*t10940*t10966 + t11220 + t11250 + t10898*t11051*t132 - 1.*t10898*t11060*t6125)*t6801 + t10936*t132*(t11305 + t11309 - 1.*t11051*t132*t2448 + t11060*t2448*t6125 - 1.*t10940*t132*t6801 + t10940*t6125*t9384)))*var2[12] - 0.5*(0.241*t5024*(t12140 + (t12155 + t11496*t12173 + t11504*t12182)*t8364 + t11496*(-1.*t10585*t12182 + t12195 + t12196 + t12197 + t12198 - 1.*t12173*t8364)) + 0.241*t4576*(t12219 + (-1.*t11496*t12173 - 1.*t11504*t12182 + t12230)*t8946 + t11496*(t10593*t12182 + t12243 + t12247 + t12249 + t12250 + t12173*t8946)) - 0.06108*(t10886*(t12068 - 1.*t10936*t12077*t132 + t10936*t12092*t6125) + t11107*t6801 + t10936*t132*(t10886*t12077 + t12100 + t12101 + t11051*t6801 + t12092*t9223 + t11060*t9384)) + 0.06108*(t11293*t6307 + (t12118 + t10936*t12077*t132 - 1.*t10936*t12092*t6125)*t6801 + t10936*t132*(-1.*t10461*t11060 + t12126 + t12129 - 1.*t11051*t6307 - 1.*t12077*t6801 - 1.*t12092*t9384)))*var2[13] - 0.5*(0.241*t5024*(t12140 + (t12306 + t11496*t12329 + t11504*t12341)*t8364 + t11496*(t12195 + t12197 + t12198 - 1.*t10585*t12341 + t12352 - 1.*t12329*t8364)) + 0.241*(t11496*t11595 + t11572*t8364)*t8666 + 0.241*t8133*(t11496*t11678 + t11648*t8946) + 0.241*t4576*(t12219 + (-1.*t11496*t12329 - 1.*t11504*t12341 + t12406)*t8946 + t11496*(t12243 + t12249 + t12250 + t10593*t12341 + t12419 + t12329*t8946)))*var2[14]);
  p_output1[4]=var2[13]*(-0.5*(0.06108*(t10936*t12588 + (t10936*t11697 + t11049*t11708 + t11763 + t11766)*t2448 + t12528*t6515 + t10898*(t11776 + t11778 - 1.*t11049*t5689 - 1.*t11697*t6515)) + 0.241*t5024*(t10583*(t11797 + t11806 + t11494*t11809 + t11531*t11820) + t10416*t12613 + t11798*t12639 + t11383*(t11830 + t11831 - 1.*t11531*t5734 - 1.*t11809*t8313)) + 0.241*t4576*(t10591*(-1.*t11494*t11809 - 1.*t11531*t11820 + t11863 + t11867) + t10443*t12648 + t11798*t12672 + t11383*(t11883 + t11886 + t11531*t5867 + t11809*t8886)) - 0.06108*(t10936*t12517 + (t11693 - 1.*t10936*t11697 + t11701 - 1.*t11049*t11708)*t1592 + t12470*t9201 + t10898*(t11723 + t11726 + t11049*t5499 + t11697*t9201)))*var2[5] - 0.5*(0.06108*(t10061*t12528 + t10981*t12588 + (t10936*t10940 + t11220 + t11250 + t11763)*t2448 + t10898*(t11305 + t11309 + t11778 - 1.*t10940*t6515)) + 0.241*t5024*(t10583*(t11432 + t11474 + t11478*t11494 + t10898*t11531) + t10091*t12613 + t11442*t12639 + t11383*(t11575 + t11576 - 1.*t11531*t4968 - 1.*t11478*t8313)) + 0.241*t4576*(t10591*(-1.*t11478*t11494 - 1.*t10898*t11531 + t11603 + t11605) + t10217*t12648 + t11442*t12672 + t11383*(t11650 + t11652 + t11531*t5142 + t11478*t8886)) - 0.06108*(t10981*t12517 + (t10925 - 1.*t10936*t10940 + t11022 + t11693)*t1592 + t12470*t6265 + t10898*(t11136 + t11140 + t11723 + t10940*t9201)))*var2[12] - 0.5*(0.06108*((t10936*t12075 + t12118)*t2448 + t12528*t5499 + t10898*(t12126 + t12129 + t12514 - 1.*t10903*t170 - 1.*t11049*t6265 - 1.*t12075*t6515)) + 0.241*t5024*(t10583*(t12155 + t11494*t12167) + t12829 + t11383*(t12195 + t12196 + t12833 + t12835 - 1.*t12157*t5061 - 1.*t12167*t8313)) + 0.241*t4576*(t10591*(-1.*t11494*t12167 + t12230) + t12844 + t11383*(t12243 + t12247 + t12851 + t12852 + t12157*t8835 + t12167*t8886)) - 0.06108*((t12068 - 1.*t10936*t12075)*t1592 + t12470*t2448 + t10898*(t12100 + t12101 + t11043*t170 + t10903*t1917 + t11049*t6515 + t12075*t9201)))*var2[13] - 0.5*(0.241*(t10591*t12648 + t11383*t12672)*t8133 + 0.241*t5024*(t10583*(t12306 + t11494*t12321) + t12829 + t11383*(t12195 + t12352 + t12833 + t12835 - 1.*t12313*t5061 - 1.*t12321*t8313)) + 0.241*(t10583*t12613 + t11383*t12639)*t8666 + 0.241*t4576*(t10591*(-1.*t11494*t12321 + t12406) + t12844 + t11383*(t12243 + t12419 + t12851 + t12852 + t12313*t8835 + t12321*t8886)))*var2[14]);
  p_output1[5]=var2[13]*(-0.5*(0.06108*t170*(-1.*t10905*t838 - 1.*t11013*t838) - 0.06108*t1917*(t10905*t838 + t11013*t838) + 0.241*t5024*t5061*(t11357*t11407 + t11374*t11418 - 1.*t11418*t141 - 1.*t11453*t838) + 0.241*t4576*(-1.*t11357*t11407 - 1.*t11374*t11418 + t11418*t141 + t11453*t838)*t8835)*var2[12] - 0.5*(-0.06108*t1917*(t11013*t141 - 1.*t10917*t838) - 0.06108*t170*(-1.*t11013*t141 + t10917*t838) + 0.241*t5024*(t13051 + t5061*(t11357*t12146*t141 + t11374*t12146*t838)) + 0.241*t4576*(t13041 + (-1.*t11357*t12146*t141 - 1.*t11374*t12146*t838)*t8835))*var2[13] - 0.5*(0.241*t5024*(t13051 + t5061*(t11357*t12299*t141 + t11374*t12299*t838)) + (0. + 0.241*(0. + t13048*t5061))*t8666 + 0.241*t4576*(t13041 + (-1.*t11357*t12299*t141 - 1.*t11374*t12299*t838)*t8835) + t8133*(0. + 0.241*(0. + t13040*t8835)))*var2[14]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=var2[13]*(-0.5*(t13157 + t13172 + 0.0032717502*t170 - 0.0032717502*t1917)*var2[13] - 0.5*(t13157 + t13172 + (0. + 0.241*(0. + 0.032875*t5061))*t8666 + t8133*(0. + 0.241*(0. - 0.081715*t4695 - 0.11459*t8835)))*var2[14]);
  p_output1[13]=-0.5*((0. + 0.241*t4576)*t8133 + 0.241*t4576*t8133 + (0. + 0.241*t5024)*t8666 + 0.241*t5024*t8666)*var2[13]*var2[14];
  p_output1[14]=-0.5*(-0.03856*t8133 + 0.004820000000000004*t8666)*var2[13]*var2[14];
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec14_plane.hh"

namespace SymFunction
{

void Ce1_vec14_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
