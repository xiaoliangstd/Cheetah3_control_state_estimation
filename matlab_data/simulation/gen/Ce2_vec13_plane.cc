/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:11:53 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1163;
  double t1450;
  double t1646;
  double t1735;
  double t2046;
  double t2054;
  double t2077;
  double t320;
  double t1025;
  double t1125;
  double t2146;
  double t2920;
  double t3020;
  double t3183;
  double t2205;
  double t4131;
  double t4132;
  double t2081;
  double t2769;
  double t2907;
  double t4171;
  double t4175;
  double t4193;
  double t4211;
  double t4133;
  double t4140;
  double t4141;
  double t4149;
  double t3200;
  double t3444;
  double t3511;
  double t6400;
  double t6426;
  double t6497;
  double t7461;
  double t7564;
  double t8511;
  double t5576;
  double t5770;
  double t6154;
  double t9642;
  double t9668;
  double t9711;
  double t9900;
  double t9980;
  double t10007;
  double t10008;
  double t9553;
  double t9555;
  double t9556;
  double t9557;
  double t9415;
  double t9444;
  double t9452;
  double t3695;
  double t3784;
  double t3801;
  double t3847;
  double t4092;
  double t4103;
  double t10198;
  double t10199;
  double t10216;
  double t10225;
  double t10226;
  double t10229;
  double t10243;
  double t10255;
  double t9226;
  double t10319;
  double t10323;
  double t10326;
  double t10328;
  double t10329;
  double t10330;
  double t8835;
  double t10056;
  double t9857;
  double t10412;
  double t10413;
  double t10415;
  double t10427;
  double t10428;
  double t10433;
  double t10452;
  double t10096;
  double t10097;
  double t10099;
  double t10515;
  double t10516;
  double t10518;
  double t10547;
  double t10550;
  double t10554;
  double t10424;
  double t10425;
  double t10453;
  double t10454;
  double t10608;
  double t10610;
  double t10611;
  double t10461;
  double t10462;
  double t10477;
  double t10480;
  double t10585;
  double t10277;
  double t10295;
  double t10296;
  double t10720;
  double t10586;
  double t10591;
  double t10592;
  double t10593;
  double t10594;
  double t10601;
  double t10639;
  double t10640;
  double t10643;
  double t10644;
  double t10645;
  double t10652;
  double t10653;
  double t10654;
  double t10658;
  double t10660;
  double t10661;
  double t10679;
  double t10681;
  double t10682;
  double t10684;
  double t10685;
  double t10686;
  double t10705;
  double t10706;
  double t10708;
  double t10710;
  double t10711;
  double t10713;
  double t10737;
  double t10738;
  double t10741;
  double t10744;
  double t10782;
  double t10783;
  double t10784;
  double t10743;
  double t10746;
  double t10926;
  double t10757;
  double t10759;
  double t10947;
  double t10949;
  double t10951;
  double t10788;
  double t10790;
  double t10792;
  double t10806;
  double t10811;
  double t10812;
  double t10818;
  double t10820;
  double t10822;
  double t10827;
  double t10828;
  double t10831;
  double t10845;
  double t10851;
  double t10852;
  double t10863;
  double t10864;
  double t10866;
  double t10872;
  double t10875;
  double t10880;
  double t10881;
  double t10886;
  double t10891;
  double t10892;
  double t10893;
  double t10895;
  double t10896;
  double t10897;
  double t10907;
  double t10908;
  double t10909;
  double t10911;
  double t10912;
  double t10913;
  double t11021;
  double t11022;
  double t11023;
  double t11012;
  double t11016;
  double t11018;
  double t11042;
  double t11043;
  double t11032;
  double t11037;
  double t11038;
  double t11079;
  double t11080;
  double t11083;
  double t11090;
  double t11091;
  double t11093;
  double t11085;
  double t11095;
  double t11096;
  double t11111;
  double t11112;
  double t11113;
  double t11117;
  double t11119;
  double t11098;
  double t11099;
  double t11100;
  double t11104;
  double t11139;
  double t11140;
  double t11141;
  double t11147;
  double t11148;
  double t11149;
  double t11150;
  double t11186;
  double t11187;
  double t11189;
  double t11197;
  double t11198;
  double t11199;
  double t11215;
  double t11217;
  double t11219;
  double t11221;
  double t11222;
  double t11224;
  double t11220;
  double t11225;
  double t11227;
  double t11278;
  double t11279;
  double t11264;
  double t11265;
  double t11266;
  double t11240;
  double t11246;
  double t11250;
  double t11251;
  double t11337;
  double t11344;
  double t11348;
  double t11372;
  double t11373;
  double t11379;
  double t11397;
  double t11400;
  double t11407;
  double t11412;
  double t11413;
  double t11414;
  double t11416;
  double t11452;
  double t11453;
  double t11455;
  double t11457;
  double t11459;
  double t11461;
  double t11482;
  double t11483;
  double t11484;
  double t11055;
  double t11025;
  double t11031;
  double t11039;
  double t11496;
  double t11058;
  double t11509;
  double t11510;
  double t11050;
  double t11456;
  double t11467;
  double t11470;
  double t11551;
  double t11553;
  double t11126;
  double t11129;
  double t11583;
  double t11585;
  double t11586;
  double t11589;
  double t11591;
  double t11592;
  double t11116;
  double t11122;
  double t11600;
  double t11601;
  double t11602;
  double t11619;
  double t11620;
  double t11621;
  double t11159;
  double t11161;
  double t11166;
  double t11169;
  double t11647;
  double t11648;
  double t11650;
  double t11665;
  double t11667;
  double t11669;
  double t11180;
  double t11182;
  double t11191;
  double t11194;
  double t11690;
  double t11691;
  double t11692;
  double t11702;
  double t11704;
  double t11708;
  double t11268;
  double t11283;
  double t11741;
  double t11742;
  double t11743;
  double t11745;
  double t11748;
  double t11750;
  double t11293;
  double t11303;
  double t11757;
  double t11760;
  double t11761;
  double t11775;
  double t11780;
  double t11781;
  double t11313;
  double t11321;
  double t11356;
  double t11368;
  double t11809;
  double t11811;
  double t11815;
  double t11826;
  double t11829;
  double t11830;
  double t11425;
  double t11429;
  double t11432;
  double t11438;
  double t11855;
  double t11858;
  double t11860;
  double t11875;
  double t11876;
  double t11878;
  double t10967;
  double t10968;
  double t10969;
  double t10974;
  double t10975;
  double t10976;
  double t10957;
  double t10958;
  double t10959;
  double t10963;
  double t10964;
  double t10965;
  double t4153;
  double t4159;
  double t4289;
  double t4452;
  double t4573;
  double t4686;
  double t4886;
  double t4962;
  double t6373;
  double t9047;
  double t9184;
  double t9261;
  double t9350;
  double t9376;
  double t9411;
  double t10931;
  double t10932;
  double t10009;
  double t10012;
  double t10019;
  double t10043;
  double t10072;
  double t10076;
  double t10090;
  double t10936;
  double t10938;
  double t10131;
  double t10141;
  double t10163;
  double t10193;
  double t10194;
  double t10327;
  double t10332;
  double t10341;
  double t10353;
  double t10377;
  double t10381;
  double t10404;
  double t10407;
  double t10408;
  double t10426;
  double t10456;
  double t10457;
  double t10460;
  double t10475;
  double t10481;
  double t10482;
  double t10485;
  double t10486;
  double t10941;
  double t10942;
  double t10943;
  double t10494;
  double t10503;
  double t10504;
  double t10507;
  double t10509;
  double t10510;
  double t10511;
  double t10512;
  double t10519;
  double t10520;
  double t10527;
  double t10529;
  double t10530;
  double t10531;
  double t10532;
  double t10533;
  double t10534;
  double t10537;
  double t10539;
  double t10540;
  double t10543;
  double t10544;
  double t10545;
  double t10553;
  double t10555;
  double t10559;
  double t10560;
  double t10561;
  double t10565;
  double t10568;
  double t10570;
  double t10572;
  double t10574;
  double t10580;
  double t10583;
  double t10584;
  double t10978;
  double t10979;
  double t10981;
  double t10604;
  double t10607;
  double t10612;
  double t10614;
  double t10622;
  double t10624;
  double t10627;
  double t10628;
  double t10632;
  double t10634;
  double t10635;
  double t10636;
  double t10637;
  double t10983;
  double t10984;
  double t10986;
  double t10647;
  double t10650;
  double t10651;
  double t10990;
  double t10991;
  double t10992;
  double t10670;
  double t10673;
  double t10676;
  double t10677;
  double t10678;
  double t10995;
  double t10996;
  double t10997;
  double t10691;
  double t10699;
  double t10700;
  double t10703;
  double t10704;
  double t11000;
  double t11001;
  double t11004;
  double t10935;
  double t10940;
  double t10944;
  double t10953;
  double t10955;
  double t10960;
  double t10966;
  double t10973;
  double t10977;
  double t10982;
  double t10989;
  double t10993;
  double t10998;
  double t11006;
  double t11008;
  double t10748;
  double t10751;
  double t10770;
  double t10771;
  double t10778;
  double t10843;
  double t10856;
  double t10861;
  double t10793;
  double t10794;
  double t10797;
  double t10870;
  double t10876;
  double t10877;
  double t10762;
  double t10765;
  double t10879;
  double t10887;
  double t10888;
  double t10814;
  double t10815;
  double t10816;
  double t10894;
  double t10900;
  double t10901;
  double t10823;
  double t10824;
  double t10825;
  double t10910;
  double t10914;
  double t10919;
  double t10833;
  double t10835;
  double t10836;
  double t11019;
  double t11026;
  double t11030;
  double t11041;
  double t11044;
  double t11045;
  double t11046;
  double t11051;
  double t11052;
  double t11053;
  double t11054;
  double t11060;
  double t11062;
  double t11065;
  double t11069;
  double t11097;
  double t11105;
  double t11106;
  double t11108;
  double t11110;
  double t11121;
  double t11123;
  double t11124;
  double t11125;
  double t11128;
  double t11131;
  double t11133;
  double t11136;
  double t11137;
  double t11146;
  double t11151;
  double t11152;
  double t11155;
  double t11156;
  double t11160;
  double t11164;
  double t11165;
  double t11167;
  double t11168;
  double t11170;
  double t11171;
  double t11173;
  double t11174;
  double t11179;
  double t11181;
  double t11184;
  double t11185;
  double t11190;
  double t11192;
  double t11193;
  double t11195;
  double t11196;
  double t11201;
  double t11202;
  double t11206;
  double t11210;
  double t11211;
  double t11236;
  double t11254;
  double t11255;
  double t11259;
  double t11262;
  double t11281;
  double t11286;
  double t11288;
  double t11298;
  double t11301;
  double t11304;
  double t11306;
  double t11309;
  double t11311;
  double t11314;
  double t11315;
  double t11330;
  double t11333;
  double t11355;
  double t11362;
  double t11363;
  double t11369;
  double t11371;
  double t11380;
  double t11386;
  double t11390;
  double t11392;
  double t11393;
  double t11408;
  double t11417;
  double t11419;
  double t11422;
  double t11424;
  double t11428;
  double t11430;
  double t11431;
  double t11434;
  double t11437;
  double t11439;
  double t11442;
  double t11444;
  double t11445;
  double t11471;
  double t11472;
  double t11474;
  double t11475;
  double t11476;
  double t11477;
  double t11478;
  double t11485;
  double t11486;
  double t11490;
  double t11492;
  double t11497;
  double t11498;
  double t11499;
  double t11500;
  double t11501;
  double t11503;
  double t11508;
  double t11513;
  double t11514;
  double t11515;
  double t11520;
  double t11521;
  double t11522;
  double t11527;
  double t11528;
  double t11529;
  double t11532;
  double t11535;
  double t11536;
  double t11538;
  double t11542;
  double t11543;
  double t11544;
  double t11550;
  double t11556;
  double t11557;
  double t11561;
  double t11563;
  double t11564;
  double t11566;
  double t11567;
  double t11572;
  double t11573;
  double t11576;
  double t11579;
  double t11580;
  double t11588;
  double t11594;
  double t11595;
  double t11597;
  double t11603;
  double t11604;
  double t11605;
  double t11610;
  double t11611;
  double t11612;
  double t11613;
  double t11627;
  double t11628;
  double t11630;
  double t11635;
  double t11637;
  double t11640;
  double t11641;
  double t11642;
  double t11643;
  double t11644;
  double t11646;
  double t11651;
  double t11652;
  double t11655;
  double t11657;
  double t11659;
  double t11663;
  double t11664;
  double t11671;
  double t11673;
  double t11675;
  double t11676;
  double t11678;
  double t11681;
  double t11682;
  double t11685;
  double t11687;
  double t11688;
  double t11689;
  double t11693;
  double t11694;
  double t11695;
  double t11696;
  double t11697;
  double t11698;
  double t11701;
  double t11715;
  double t11719;
  double t11723;
  double t11724;
  double t11726;
  double t11737;
  double t11738;
  double t11744;
  double t11751;
  double t11755;
  double t11756;
  double t11763;
  double t11766;
  double t11768;
  double t11769;
  double t11770;
  double t11771;
  double t11774;
  double t11786;
  double t11791;
  double t11797;
  double t11798;
  double t11799;
  double t11802;
  double t11803;
  double t11805;
  double t11806;
  double t11807;
  double t11808;
  double t11817;
  double t11818;
  double t11819;
  double t11820;
  double t11822;
  double t11824;
  double t11825;
  double t11831;
  double t11832;
  double t11834;
  double t11835;
  double t11837;
  double t11839;
  double t11843;
  double t11844;
  double t11845;
  double t11846;
  double t11851;
  double t11862;
  double t11864;
  double t11866;
  double t11867;
  double t11870;
  double t11871;
  double t11874;
  double t11881;
  double t11882;
  double t11886;
  double t11888;
  double t11889;
  double t10754;
  double t10769;
  double t10779;
  double t10786;
  double t10787;
  double t10802;
  double t10817;
  double t10826;
  double t10838;
  double t10862;
  double t10878;
  double t10890;
  double t10902;
  double t10920;
  double t10924;
  double t11982;
  double t11983;
  double t11985;
  double t11986;
  double t11991;
  double t11994;
  double t11995;
  double t11996;
  double t11997;
  double t11998;
  double t12000;
  double t12003;
  double t12004;
  double t12005;
  double t12006;
  double t11479;
  double t11504;
  double t11516;
  double t11562;
  double t11577;
  double t11629;
  double t11639;
  double t11674;
  double t11679;
  double t11722;
  double t11736;
  double t11792;
  double t11800;
  double t11833;
  double t11838;
  double t11883;
  double t11891;
  double t11894;
  double t12198;
  double t12199;
  double t12202;
  double t12204;
  double t12205;
  double t12210;
  double t12215;
  double t12218;
  double t12219;
  double t12220;
  double t12222;
  double t12226;
  double t12227;
  double t12231;
  double t12236;
  double t12237;
  double t12238;
  double t12243;
  double t12048;
  double t12049;
  double t12051;
  double t12052;
  double t12053;
  double t12054;
  double t12055;
  double t12056;
  double t12058;
  double t12059;
  double t12060;
  double t12061;
  double t12062;
  double t12065;
  double t12066;
  double t12069;
  double t12070;
  double t12071;
  double t12330;
  double t12334;
  double t12335;
  double t11010;
  double t11011;
  double t11074;
  double t11107;
  double t11138;
  double t11153;
  double t11175;
  double t11205;
  double t11214;
  double t11257;
  double t11312;
  double t11389;
  double t11396;
  double t11421;
  double t11446;
  double t11449;
  double t12167;
  double t12170;
  double t12171;
  double t12172;
  double t12173;
  double t12174;
  double t12176;
  double t12180;
  double t12182;
  double t12185;
  double t12188;
  double t12190;
  double t12193;
  double t12194;
  double t12195;
  double t12196;
  double t12024;
  double t12025;
  double t12026;
  double t12028;
  double t12029;
  double t12031;
  double t12032;
  double t12034;
  double t12035;
  double t12036;
  double t12038;
  double t12039;
  double t12040;
  double t12042;
  double t12043;
  double t12044;
  double t12337;
  double t12341;
  double t12342;
  double t12325;
  double t12326;
  double t12329;
  double t12336;
  double t12345;
  double t12346;
  double t12347;
  double t12349;
  double t12350;
  double t12351;
  double t12352;
  double t12353;
  double t12354;
  double t12355;
  double t12356;
  double t12357;
  double t12360;
  double t12361;
  double t12362;
  double t12464;
  double t12467;
  double t10298;
  double t10300;
  double t10411;
  double t12498;
  double t12500;
  double t10508;
  double t10514;
  double t10536;
  double t10541;
  double t10546;
  double t12490;
  double t12491;
  double t12493;
  double t12495;
  double t10603;
  double t10646;
  double t10665;
  double t10688;
  double t10714;
  double t12118;
  double t12120;
  double t12122;
  double t12123;
  double t12124;
  double t12125;
  double t12126;
  double t12129;
  double t12134;
  double t12135;
  double t12137;
  double t12138;
  double t12140;
  double t11947;
  double t11948;
  double t11956;
  double t11957;
  double t11958;
  double t11959;
  double t11962;
  double t11964;
  double t11968;
  double t11971;
  double t11974;
  double t11975;
  double t11977;
  double t12409;
  double t12410;
  double t12412;
  double t12414;
  double t12415;
  double t12416;
  double t12417;
  double t12419;
  double t12420;
  double t12424;
  double t12425;
  double t12278;
  double t12281;
  double t12282;
  double t12286;
  double t12288;
  double t12291;
  double t12295;
  double t12302;
  double t12304;
  double t12305;
  double t12308;
  double t12311;
  double t12313;
  double t12463;
  double t12465;
  double t12468;
  double t12470;
  double t9552;
  double t12549;
  double t12552;
  double t10117;
  double t10127;
  double t10130;
  double t12541;
  double t12542;
  double t12545;
  double t12546;
  double t12099;
  double t12101;
  double t12103;
  double t12107;
  double t11922;
  double t11926;
  double t11929;
  double t11931;
  double t12394;
  double t12395;
  double t12396;
  double t12399;
  double t12264;
  double t12265;
  double t12267;
  double t12268;
  double t12456;
  double t12457;
  double t3806;
  double t4128;
  double t12590;
  double t12591;
  double t12594;
  double t12595;
  double t12081;
  double t12084;
  double t11908;
  double t11910;
  double t12386;
  double t12387;
  double t12255;
  double t12257;
  double t12451;
  double t12452;
  double t12453;
  double t2909;
  double t3554;
  double t3555;
  double t12077;
  double t12078;
  double t12079;
  double t11903;
  double t11904;
  double t11905;
  double t12382;
  double t12383;
  double t12384;
  double t12250;
  double t12251;
  double t12252;
  t1163 = Cos(var1[14]);
  t1450 = Sin(var1[13]);
  t1646 = -1.*t1163*t1450;
  t1735 = Cos(var1[13]);
  t2046 = Sin(var1[14]);
  t2054 = -1.*t1735*t2046;
  t2077 = 0. + t1646 + t2054;
  t320 = Cos(var1[4]);
  t1025 = Cos(var1[12]);
  t1125 = Cos(var1[5]);
  t2146 = Sin(var1[12]);
  t2920 = t1735*t1163;
  t3020 = -1.*t1450*t2046;
  t3183 = 0. + t2920 + t3020;
  t2205 = Sin(var1[5]);
  t4131 = -1.*t1163;
  t4132 = 1. + t4131;
  t2081 = t1025*t1125*t2077;
  t2769 = t2146*t2077*t2205;
  t2907 = t2081 + t2769;
  t4171 = -0.336601*t4132;
  t4175 = -0.356601*t1163;
  t4193 = -0.16*t2046;
  t4211 = 0. + t4171 + t4175 + t4193;
  t4133 = -0.20833*t4132;
  t4140 = -0.36833*t1163;
  t4141 = 0.020000000000000018*t2046;
  t4149 = 0. + t4133 + t4140 + t4141;
  t3200 = t1025*t1125*t3183;
  t3444 = t2146*t3183*t2205;
  t3511 = t3200 + t3444;
  t6400 = -1.*t1735;
  t6426 = 1. + t6400;
  t6497 = -0.194401*t6426;
  t7461 = -0.234401*t1735;
  t7564 = -0.04*t1450;
  t8511 = t6497 + t7461 + t7564;
  t5576 = -0.04*t1735;
  t5770 = 0.04*t1450;
  t6154 = t5576 + t5770;
  t9642 = t1163*t1450;
  t9668 = t1735*t2046;
  t9711 = 0. + t9642 + t9668;
  t9900 = -0.194401*t1450;
  t9980 = -1.*t1450*t4211;
  t10007 = t1735*t4149;
  t10008 = 0. + t9900 + t9980 + t10007;
  t9553 = -0.194401*t6426;
  t9555 = t1735*t4211;
  t9556 = t1450*t4149;
  t9557 = 0. + t9553 + t9555 + t9556;
  t9415 = -1.*t1125*t2146;
  t9444 = t1025*t2205;
  t9452 = t9415 + t9444;
  t3695 = t1025*t1735*t1125;
  t3784 = t1735*t2146*t2205;
  t3801 = t3695 + t3784;
  t3847 = -1.*t1025*t1125*t1450;
  t4092 = -1.*t2146*t1450*t2205;
  t4103 = t3847 + t4092;
  t10198 = -1.*t1025;
  t10199 = 1. + t10198;
  t10216 = -0.081715*t10199;
  t10225 = -0.061715*t1025;
  t10226 = t10216 + t10225;
  t10229 = -1.*t10226*t2146;
  t10243 = 0.02*t1025*t2146;
  t10255 = t10229 + t10243;
  t9226 = t1735*t8511;
  t10319 = 0.053565*t2146;
  t10323 = t1025*t6154;
  t10326 = t10319 + t10323;
  t10328 = -0.13528*t1025;
  t10329 = t2146*t6154;
  t10330 = t10216 + t10328 + t10329;
  t8835 = -1.*t8511*t1450;
  t10056 = t9557*t3183;
  t9857 = -1.*t9557*t9711;
  t10412 = 0.032875*t2146;
  t10413 = t1025*t10008;
  t10415 = t10412 + t10413;
  t10427 = -0.081715*t10199;
  t10428 = -0.11459*t1025;
  t10433 = t2146*t10008;
  t10452 = t10427 + t10428 + t10433;
  t10096 = t1025*t1125;
  t10097 = t2146*t2205;
  t10099 = t10096 + t10097;
  t10515 = 0.053565*t1025;
  t10516 = -1.*t2146*t6154;
  t10518 = t10515 + t10516;
  t10547 = -1.*t2146;
  t10550 = 0. + t10547;
  t10554 = 0. + t1025;
  t10424 = t1025*t2077;
  t10425 = 0. + t10424;
  t10453 = t2146*t2077;
  t10454 = 0. + t10453;
  t10608 = 0.032875*t1025;
  t10610 = -1.*t2146*t10008;
  t10611 = t10608 + t10610;
  t10461 = t1025*t3183;
  t10462 = 0. + t10461;
  t10477 = t2146*t3183;
  t10480 = 0. + t10477;
  t10585 = Sin(var1[4]);
  t10277 = t1125*t2146;
  t10295 = -1.*t1025*t2205;
  t10296 = t10277 + t10295;
  t10720 = Power(t320,2);
  t10586 = t1450*t10585;
  t10591 = t1735*t1125*t2146;
  t10592 = -1.*t1025*t1735*t2205;
  t10593 = t10591 + t10592;
  t10594 = t320*t10593;
  t10601 = t10586 + t10594;
  t10639 = t10554*t1125;
  t10640 = -1.*t10550*t2205;
  t10643 = 0. + t10639 + t10640;
  t10644 = t320*t10643;
  t10645 = 0. + t10644;
  t10652 = t1735*t10585;
  t10653 = -1.*t1125*t2146*t1450;
  t10654 = t1025*t1450*t2205;
  t10658 = t10653 + t10654;
  t10660 = t320*t10658;
  t10661 = t10652 + t10660;
  t10679 = t3183*t10585;
  t10681 = t1125*t10454;
  t10682 = -1.*t10425*t2205;
  t10684 = 0. + t10681 + t10682;
  t10685 = t320*t10684;
  t10686 = 0. + t10679 + t10685;
  t10705 = t9711*t10585;
  t10706 = t1125*t10480;
  t10708 = -1.*t10462*t2205;
  t10710 = 0. + t10706 + t10708;
  t10711 = t320*t10710;
  t10713 = 0. + t10705 + t10711;
  t10737 = Cos(var1[3]);
  t10738 = -1.*t10737*t10585*t9452;
  t10741 = Sin(var1[3]);
  t10744 = -1.*t2146*t2205;
  t10782 = t10741*t9452;
  t10783 = -1.*t10737*t10585*t10099;
  t10784 = t10782 + t10783;
  t10743 = -1.*t1025*t1125;
  t10746 = t10743 + t10744;
  t10926 = t10741*t10585*t9452;
  t10757 = -1.*t1025*t1125;
  t10759 = t10757 + t10744;
  t10947 = t10737*t9452;
  t10949 = t10741*t10585*t10099;
  t10951 = t10947 + t10949;
  t10788 = -1.*t1735*t1125*t2146;
  t10790 = t1025*t1735*t2205;
  t10792 = t10788 + t10790;
  t10806 = t1125*t2146*t1450;
  t10811 = -1.*t1025*t1450*t2205;
  t10812 = t10806 + t10811;
  t10818 = -1.*t1125*t2146*t2077;
  t10820 = t1025*t2077*t2205;
  t10822 = t10818 + t10820;
  t10827 = -1.*t1125*t2146*t3183;
  t10828 = t1025*t3183*t2205;
  t10831 = t10827 + t10828;
  t10845 = t320*t1450;
  t10851 = -1.*t10585*t10593;
  t10852 = t10845 + t10851;
  t10863 = t1125*t10550;
  t10864 = t10554*t2205;
  t10866 = 0. + t10863 + t10864;
  t10872 = -1.*t10585*t10643;
  t10875 = 0. + t10872;
  t10880 = t1735*t320;
  t10881 = -1.*t10585*t10658;
  t10886 = t10880 + t10881;
  t10891 = t1125*t10425;
  t10892 = t10454*t2205;
  t10893 = 0. + t10891 + t10892;
  t10895 = t320*t3183;
  t10896 = -1.*t10585*t10684;
  t10897 = 0. + t10895 + t10896;
  t10907 = t1125*t10462;
  t10908 = t10480*t2205;
  t10909 = 0. + t10907 + t10908;
  t10911 = t320*t9711;
  t10912 = -1.*t10585*t10710;
  t10913 = 0. + t10911 + t10912;
  t11021 = -0.02*t1125*t2146;
  t11022 = t10226*t2205;
  t11023 = t11021 + t11022;
  t11012 = t10226*t1125;
  t11016 = 0.02*t2146*t2205;
  t11018 = t11012 + t11016;
  t11042 = 0.02*t1025*t2205;
  t11043 = t11021 + t11042;
  t11032 = -0.02*t1025*t1125;
  t11037 = -0.02*t2146*t2205;
  t11038 = t11032 + t11037;
  t11079 = t1125*t10330;
  t11080 = -1.*t10326*t2205;
  t11083 = t11079 + t11080;
  t11090 = t1125*t10326;
  t11091 = t10330*t2205;
  t11093 = t11090 + t11091;
  t11085 = -1.*t10099*t11083;
  t11095 = -1.*t9452*t11093;
  t11096 = t11085 + t11095;
  t11111 = t1125*t10518;
  t11112 = t10326*t2205;
  t11113 = t11111 + t11112;
  t11117 = -1.*t10518*t2205;
  t11119 = t11090 + t11117;
  t11098 = t8511*t1450;
  t11099 = t10593*t11083;
  t11100 = t3801*t11093;
  t11104 = t11098 + t11099 + t11100;
  t11139 = t10099*t11083;
  t11140 = t9452*t11093;
  t11141 = t11139 + t11140;
  t11147 = -1.*t1735*t8511;
  t11148 = -1.*t11083*t10658;
  t11149 = -1.*t11093*t4103;
  t11150 = t11147 + t11148 + t11149;
  t11186 = -1.*t10593*t11083;
  t11187 = -1.*t3801*t11093;
  t11189 = t8835 + t11186 + t11187;
  t11197 = t11083*t10658;
  t11198 = t11093*t4103;
  t11199 = t9226 + t11197 + t11198;
  t11215 = t1125*t10452;
  t11217 = -1.*t10415*t2205;
  t11219 = 0. + t11215 + t11217;
  t11221 = t1125*t10415;
  t11222 = t10452*t2205;
  t11224 = 0. + t11221 + t11222;
  t11220 = t10643*t11219;
  t11225 = t10866*t11224;
  t11227 = 0. + t11220 + t11225;
  t11278 = -1.*t10611*t2205;
  t11279 = t11221 + t11278;
  t11264 = t1125*t10611;
  t11265 = t10415*t2205;
  t11266 = t11264 + t11265;
  t11240 = -1.*t9557*t3183;
  t11246 = -1.*t11219*t10684;
  t11250 = -1.*t11224*t10893;
  t11251 = t11240 + t11246 + t11250;
  t11337 = t11219*t10684;
  t11344 = t11224*t10893;
  t11348 = t10056 + t11337 + t11344;
  t11372 = -1.*t11219*t10710;
  t11373 = -1.*t11224*t10909;
  t11379 = t9857 + t11372 + t11373;
  t11397 = -1.*t10643*t11219;
  t11400 = -1.*t10866*t11224;
  t11407 = 0. + t11397 + t11400;
  t11412 = t9557*t9711;
  t11413 = t11219*t10710;
  t11414 = t11224*t10909;
  t11416 = t11412 + t11413 + t11414;
  t11452 = -0.194401*t10585;
  t11453 = t320*t11018;
  t11455 = t11452 + t11453;
  t11457 = -0.194401*t320;
  t11459 = -1.*t10585*t11018;
  t11461 = t11457 + t11459;
  t11482 = -1.*t10585*t11455;
  t11483 = -1.*t320*t11461;
  t11484 = t11482 + t11483;
  t11055 = t11023*t9452;
  t11025 = t11023*t10099;
  t11031 = -1.*t11023*t10746;
  t11039 = -1.*t9452*t11038;
  t11496 = Power(t10585,2);
  t11058 = t11038*t10099;
  t11509 = t320*t10099*t11455;
  t11510 = -1.*t10585*t10099*t11461;
  t11050 = -1.*t11023*t9452;
  t11456 = t10585*t11455;
  t11467 = t320*t11461;
  t11470 = t11456 + t11467;
  t11551 = -1.*t320*t10099*t11455;
  t11553 = t10585*t10099*t11461;
  t11126 = -1.*t9452*t11113;
  t11129 = -1.*t10746*t11093;
  t11583 = t8511*t10585;
  t11585 = t320*t11083;
  t11586 = t11583 + t11585;
  t11589 = t320*t8511;
  t11591 = -1.*t10585*t11083;
  t11592 = t11589 + t11591;
  t11116 = t3801*t11113;
  t11122 = t10792*t11093;
  t11600 = -1.*t320*t10099*t11586;
  t11601 = t10585*t10099*t11592;
  t11602 = t11095 + t11600 + t11601;
  t11619 = t10601*t11586;
  t11620 = t10852*t11592;
  t11621 = t11100 + t11619 + t11620;
  t11159 = t9452*t11113;
  t11161 = t10746*t11093;
  t11166 = -1.*t11093*t10812;
  t11169 = -1.*t11113*t4103;
  t11647 = t320*t10099*t11586;
  t11648 = -1.*t10585*t10099*t11592;
  t11650 = t11140 + t11647 + t11648;
  t11665 = -1.*t11586*t10661;
  t11667 = -1.*t11592*t10886;
  t11669 = t11149 + t11665 + t11667;
  t11180 = -1.*t3801*t11113;
  t11182 = -1.*t10792*t11093;
  t11191 = t11093*t10812;
  t11194 = t11113*t4103;
  t11690 = -1.*t10601*t11586;
  t11691 = -1.*t10852*t11592;
  t11692 = t11187 + t11690 + t11691;
  t11702 = t11586*t10661;
  t11704 = t11592*t10886;
  t11708 = t11198 + t11702 + t11704;
  t11268 = t10866*t11266;
  t11283 = t10759*t11224;
  t11741 = t9557*t10585;
  t11742 = t320*t11219;
  t11743 = 0. + t11741 + t11742;
  t11745 = t320*t9557;
  t11748 = -1.*t10585*t11219;
  t11750 = 0. + t11745 + t11748;
  t11293 = -1.*t11224*t10822;
  t11303 = -1.*t11266*t10893;
  t11757 = t10645*t11743;
  t11760 = t10875*t11750;
  t11761 = t11225 + t11757 + t11760;
  t11775 = -1.*t11743*t10686;
  t11780 = -1.*t11750*t10897;
  t11781 = t11250 + t11775 + t11780;
  t11313 = t11224*t10822;
  t11321 = t11266*t10893;
  t11356 = -1.*t11224*t10831;
  t11368 = -1.*t11266*t10909;
  t11809 = t11743*t10686;
  t11811 = t11750*t10897;
  t11815 = t11344 + t11809 + t11811;
  t11826 = -1.*t11743*t10713;
  t11829 = -1.*t11750*t10913;
  t11830 = t11373 + t11826 + t11829;
  t11425 = -1.*t10866*t11266;
  t11429 = -1.*t10759*t11224;
  t11432 = t11224*t10831;
  t11438 = t11266*t10909;
  t11855 = -1.*t10645*t11743;
  t11858 = -1.*t10875*t11750;
  t11860 = t11400 + t11855 + t11858;
  t11875 = t11743*t10713;
  t11876 = t11750*t10913;
  t11878 = t11414 + t11875 + t11876;
  t10967 = t10737*t10822;
  t10968 = t10741*t10585*t2907;
  t10969 = t10967 + t10968;
  t10974 = t10737*t10831;
  t10975 = t10741*t10585*t3511;
  t10976 = t10974 + t10975;
  t10957 = t10737*t10792;
  t10958 = t10741*t10585*t3801;
  t10959 = t10957 + t10958;
  t10963 = t10737*t10812;
  t10964 = t10741*t10585*t4103;
  t10965 = t10963 + t10964;
  t4153 = t1163*t4149;
  t4159 = 0.194401*t2046;
  t4289 = t4211*t2046;
  t4452 = 0. + t4153 + t4159 + t4289;
  t4573 = -0.194401*t1163;
  t4686 = -1.*t1163*t4211;
  t4886 = t4149*t2046;
  t4962 = 0. + t4573 + t4686 + t4886;
  t6373 = -1.*t1735*t6154;
  t9047 = t6373 + t8835;
  t9184 = -1.*t1735*t9047;
  t9261 = -1.*t6154*t1450;
  t9350 = t9226 + t9261;
  t9376 = -1.*t1450*t9350;
  t9411 = t9184 + t9376;
  t10931 = t10737*t10746;
  t10932 = t10926 + t10931;
  t10009 = -1.*t10008*t3183;
  t10012 = 0. + t9857 + t10009;
  t10019 = -1.*t3183*t10012;
  t10043 = t10008*t2077;
  t10072 = 0. + t10043 + t10056;
  t10076 = -1.*t9711*t10072;
  t10090 = 0. + t10019 + t10076;
  t10936 = t10737*t10759;
  t10938 = t10926 + t10936;
  t10131 = -0.081715*t2077;
  t10141 = -0.11459*t9711;
  t10163 = 0. + t10131 + t10141;
  t10193 = 0.032875*t3183;
  t10194 = 0. + t10193;
  t10327 = -1.*t1025*t10326*t1450;
  t10332 = -1.*t2146*t10330*t1450;
  t10341 = t9226 + t10327 + t10332;
  t10353 = t1450*t10341;
  t10377 = -1.*t1025*t1735*t10326;
  t10381 = -1.*t1735*t2146*t10330;
  t10404 = t10377 + t10381 + t8835;
  t10407 = t1735*t10404;
  t10408 = t10353 + t10407;
  t10426 = t10415*t10425;
  t10456 = t10452*t10454;
  t10457 = t10056 + t10426 + t10456;
  t10460 = t9711*t10457;
  t10475 = -1.*t10415*t10462;
  t10481 = -1.*t10452*t10480;
  t10482 = t9857 + t10475 + t10481;
  t10485 = t3183*t10482;
  t10486 = 0. + t10460 + t10485;
  t10941 = t10741*t10585*t10296;
  t10942 = t10737*t10099;
  t10943 = t10941 + t10942;
  t10494 = -1.*t10226*t1025;
  t10503 = Power(t1025,2);
  t10504 = 0.02*t10503;
  t10507 = t10494 + t10504;
  t10509 = t10226*t1025;
  t10510 = Power(t2146,2);
  t10511 = 0.02*t10510;
  t10512 = t10509 + t10511;
  t10519 = -1.*t1025*t1735*t10518;
  t10520 = -1.*t1025*t1735*t10330;
  t10527 = t10519 + t10520;
  t10529 = t1735*t10527;
  t10530 = -1.*t1025*t10518*t1450;
  t10531 = -1.*t1025*t10330*t1450;
  t10532 = t10530 + t10531;
  t10533 = t1450*t10532;
  t10534 = t10529 + t10533;
  t10537 = -1.*t2146*t10326;
  t10539 = t1025*t10330;
  t10540 = t10537 + t10539;
  t10543 = t2146*t10326;
  t10544 = -1.*t1025*t10330;
  t10545 = t10543 + t10544;
  t10553 = -1.*t10550*t10415;
  t10555 = -1.*t10554*t10452;
  t10559 = 0. + t10553 + t10555;
  t10560 = t10559*t9711;
  t10561 = 0. + t10560;
  t10565 = t10550*t10415;
  t10568 = t10554*t10452;
  t10570 = 0. + t10565 + t10568;
  t10572 = t10570*t3183;
  t10574 = 0. + t10572;
  t10580 = -1.*t2146*t10518;
  t10583 = -1.*t2146*t10330;
  t10584 = t10580 + t10583;
  t10978 = t10737*t3801;
  t10979 = -1.*t10741*t10852;
  t10981 = t10978 + t10979;
  t10604 = -1.*t2146*t10415*t2077;
  t10607 = t1025*t10452*t2077;
  t10612 = t10611*t10425;
  t10614 = t10415*t10454;
  t10622 = t10604 + t10607 + t10612 + t10614;
  t10624 = t9711*t10622;
  t10627 = t2146*t10415*t3183;
  t10628 = -1.*t1025*t10452*t3183;
  t10632 = -1.*t10611*t10462;
  t10634 = -1.*t10415*t10480;
  t10635 = t10627 + t10628 + t10632 + t10634;
  t10636 = t3183*t10635;
  t10637 = t10624 + t10636;
  t10983 = t10737*t10866;
  t10984 = -1.*t10741*t10875;
  t10986 = 0. + t10983 + t10984;
  t10647 = t2146*t10518;
  t10650 = t2146*t10330;
  t10651 = t10647 + t10650;
  t10990 = t10737*t4103;
  t10991 = -1.*t10741*t10886;
  t10992 = t10990 + t10991;
  t10670 = t1025*t10415;
  t10673 = -1.*t10554*t10415;
  t10676 = -1.*t10550*t10611;
  t10677 = t2146*t10452;
  t10678 = t10670 + t10673 + t10676 + t10677;
  t10995 = t10737*t10893;
  t10996 = -1.*t10741*t10897;
  t10997 = 0. + t10995 + t10996;
  t10691 = -1.*t1025*t10415;
  t10699 = t10554*t10415;
  t10700 = t10550*t10611;
  t10703 = -1.*t2146*t10452;
  t10704 = t10691 + t10699 + t10700 + t10703;
  t11000 = t10737*t10909;
  t11001 = -1.*t10741*t10913;
  t11004 = 0. + t11000 + t11001;
  t10935 = 1.768*t320*t10099*t10932;
  t10940 = 0.241*t10645*t10938;
  t10944 = 0.241*t320*t10099*t10943;
  t10953 = 0.241*t320*t10296*t10951;
  t10955 = 1.768*t320*t9452*t10951;
  t10960 = 1.527*t10601*t10959;
  t10966 = 1.527*t10661*t10965;
  t10973 = 0.241*t10969*t10686;
  t10977 = 0.241*t10976*t10713;
  t10982 = 1.527*t320*t3801*t10981;
  t10989 = 0.241*t320*t9452*t10986;
  t10993 = 1.527*t320*t4103*t10992;
  t10998 = 0.241*t320*t2907*t10997;
  t11006 = 0.241*t320*t3511*t11004;
  t11008 = t10935 + t10940 + t10944 + t10953 + t10955 + t10960 + t10966 + t10973 + t10977 + t10982 + t10989 + t10993 + t10998 + t11006;
  t10748 = t10741*t10746;
  t10751 = t10738 + t10748;
  t10770 = -1.*t10737*t10585*t10296;
  t10771 = t10741*t10099;
  t10778 = t10770 + t10771;
  t10843 = t10741*t3801;
  t10856 = t10737*t10852;
  t10861 = t10843 + t10856;
  t10793 = t10741*t10792;
  t10794 = -1.*t10737*t10585*t3801;
  t10797 = t10793 + t10794;
  t10870 = t10741*t10866;
  t10876 = t10737*t10875;
  t10877 = 0. + t10870 + t10876;
  t10762 = t10741*t10759;
  t10765 = t10738 + t10762;
  t10879 = t10741*t4103;
  t10887 = t10737*t10886;
  t10888 = t10879 + t10887;
  t10814 = t10741*t10812;
  t10815 = -1.*t10737*t10585*t4103;
  t10816 = t10814 + t10815;
  t10894 = t10741*t10893;
  t10900 = t10737*t10897;
  t10901 = 0. + t10894 + t10900;
  t10823 = t10741*t10822;
  t10824 = -1.*t10737*t10585*t2907;
  t10825 = t10823 + t10824;
  t10910 = t10741*t10909;
  t10914 = t10737*t10913;
  t10919 = 0. + t10910 + t10914;
  t10833 = t10741*t10831;
  t10835 = -1.*t10737*t10585*t3511;
  t10836 = t10833 + t10835;
  t11019 = t10296*t11018;
  t11026 = t11019 + t11025;
  t11030 = t10746*t11026;
  t11041 = -1.*t9452*t11018;
  t11044 = -1.*t11043*t10099;
  t11045 = t11031 + t11039 + t11041 + t11044;
  t11046 = t10099*t11045;
  t11051 = -1.*t11018*t10099;
  t11052 = t11050 + t11051;
  t11053 = t9452*t11052;
  t11054 = t10296*t11043;
  t11060 = t11018*t10099;
  t11062 = t11054 + t11055 + t11058 + t11060;
  t11065 = t9452*t11062;
  t11069 = t11030 + t11046 + t11053 + t11065;
  t11097 = t3801*t11096;
  t11105 = t9452*t11104;
  t11106 = t11097 + t11105;
  t11108 = t10792*t11096;
  t11110 = t3801*t11083;
  t11121 = t10593*t11119;
  t11123 = t11110 + t11116 + t11121 + t11122;
  t11124 = t9452*t11123;
  t11125 = -1.*t9452*t11083;
  t11128 = -1.*t10099*t11119;
  t11131 = t11125 + t11126 + t11128 + t11129;
  t11133 = t3801*t11131;
  t11136 = t10746*t11104;
  t11137 = t11108 + t11124 + t11133 + t11136;
  t11146 = t4103*t11141;
  t11151 = t9452*t11150;
  t11152 = t11146 + t11151;
  t11155 = t10812*t11141;
  t11156 = t9452*t11083;
  t11160 = t10099*t11119;
  t11164 = t11156 + t11159 + t11160 + t11161;
  t11165 = t4103*t11164;
  t11167 = -1.*t11119*t10658;
  t11168 = -1.*t11083*t4103;
  t11170 = t11166 + t11167 + t11168 + t11169;
  t11171 = t9452*t11170;
  t11173 = t10746*t11150;
  t11174 = t11155 + t11165 + t11171 + t11173;
  t11179 = -1.*t3801*t11083;
  t11181 = -1.*t10593*t11119;
  t11184 = t11179 + t11180 + t11181 + t11182;
  t11185 = t4103*t11184;
  t11190 = t10812*t11189;
  t11192 = t11119*t10658;
  t11193 = t11083*t4103;
  t11195 = t11191 + t11192 + t11193 + t11194;
  t11196 = t3801*t11195;
  t11201 = t10792*t11199;
  t11202 = t11185 + t11190 + t11196 + t11201;
  t11206 = t4103*t11189;
  t11210 = t3801*t11199;
  t11211 = t11206 + t11210;
  t11236 = t10893*t11227;
  t11254 = t10866*t11251;
  t11255 = t11236 + t11254;
  t11259 = t10822*t11227;
  t11262 = t9452*t11219;
  t11281 = t10643*t11279;
  t11286 = t11262 + t11268 + t11281 + t11283;
  t11288 = t10893*t11286;
  t11298 = -1.*t11219*t2907;
  t11301 = -1.*t11279*t10684;
  t11304 = t11293 + t11298 + t11301 + t11303;
  t11306 = t10866*t11304;
  t11309 = t10759*t11251;
  t11311 = t11259 + t11288 + t11306 + t11309;
  t11314 = t11219*t2907;
  t11315 = t11279*t10684;
  t11330 = t11313 + t11314 + t11315 + t11321;
  t11333 = t10909*t11330;
  t11355 = t10831*t11348;
  t11362 = -1.*t11219*t3511;
  t11363 = -1.*t11279*t10710;
  t11369 = t11356 + t11362 + t11363 + t11368;
  t11371 = t10893*t11369;
  t11380 = t10822*t11379;
  t11386 = t11333 + t11355 + t11371 + t11380;
  t11390 = t10909*t11348;
  t11392 = t10893*t11379;
  t11393 = 0. + t11390 + t11392;
  t11408 = t10909*t11407;
  t11417 = t10866*t11416;
  t11419 = t11408 + t11417;
  t11422 = t10831*t11407;
  t11424 = -1.*t9452*t11219;
  t11428 = -1.*t10643*t11279;
  t11430 = t11424 + t11425 + t11428 + t11429;
  t11431 = t10909*t11430;
  t11434 = t11219*t3511;
  t11437 = t11279*t10710;
  t11439 = t11432 + t11434 + t11437 + t11438;
  t11442 = t10866*t11439;
  t11444 = t10759*t11416;
  t11445 = t11422 + t11431 + t11442 + t11444;
  t11471 = t320*t10296*t11470;
  t11472 = -1.*t11023*t10099;
  t11474 = -1.*t320*t10296*t11455;
  t11475 = t10585*t10296*t11461;
  t11476 = t11472 + t11474 + t11475;
  t11477 = t10585*t11476;
  t11478 = t11471 + t11477;
  t11485 = t320*t9452*t11484;
  t11486 = t11023*t10746;
  t11490 = t9452*t11038;
  t11492 = t10720*t11043*t10099;
  t11497 = t11496*t11043*t10099;
  t11498 = t320*t9452*t11455;
  t11499 = -1.*t10585*t9452*t11461;
  t11500 = t11486 + t11490 + t11492 + t11497 + t11498 + t11499;
  t11501 = t10585*t11500;
  t11503 = t11485 + t11501;
  t11508 = t320*t10099*t11484;
  t11513 = t11055 + t11509 + t11510;
  t11514 = t10585*t11513;
  t11515 = t11508 + t11514;
  t11520 = t320*t10296*t11455;
  t11521 = -1.*t10585*t10296*t11461;
  t11522 = t11025 + t11520 + t11521;
  t11527 = t320*t9452*t11522;
  t11528 = -1.*t10720*t11043*t10099;
  t11529 = -1.*t11496*t11043*t10099;
  t11532 = -1.*t320*t9452*t11455;
  t11535 = t10585*t9452*t11461;
  t11536 = t11031 + t11039 + t11528 + t11529 + t11532 + t11535;
  t11538 = t320*t10296*t11536;
  t11542 = t10720*t10296*t11043;
  t11543 = t11496*t10296*t11043;
  t11544 = t11542 + t11543 + t11055 + t11058 + t11509 + t11510;
  t11550 = t320*t10099*t11544;
  t11556 = t11050 + t11551 + t11553;
  t11557 = t320*t10099*t11556;
  t11561 = t11527 + t11538 + t11550 + t11557;
  t11563 = t320*t10099*t11470;
  t11564 = -1.*t10720*t10296*t11043;
  t11566 = -1.*t11496*t10296*t11043;
  t11567 = -1.*t11038*t10099;
  t11572 = t11564 + t11566 + t11050 + t11567 + t11551 + t11553;
  t11573 = t10585*t11572;
  t11576 = t11563 + t11573;
  t11579 = -1.*t10720*t10099*t11119;
  t11580 = -1.*t11496*t10099*t11119;
  t11588 = -1.*t320*t9452*t11586;
  t11594 = t10585*t9452*t11592;
  t11595 = t11126 + t11579 + t11580 + t11129 + t11588 + t11594;
  t11597 = t10601*t11595;
  t11603 = t320*t3801*t11602;
  t11604 = t320*t11119*t10601;
  t11605 = -1.*t10585*t11119*t10852;
  t11610 = t320*t3801*t11586;
  t11611 = -1.*t10585*t3801*t11592;
  t11612 = t11116 + t11122 + t11604 + t11605 + t11610 + t11611;
  t11613 = t320*t10099*t11612;
  t11627 = t320*t9452*t11621;
  t11628 = t11597 + t11603 + t11613 + t11627;
  t11630 = t10601*t11602;
  t11635 = t320*t10099*t11621;
  t11637 = t11630 + t11635;
  t11640 = t10720*t10099*t11119;
  t11641 = t11496*t10099*t11119;
  t11642 = t320*t9452*t11586;
  t11643 = -1.*t10585*t9452*t11592;
  t11644 = t11159 + t11640 + t11641 + t11161 + t11642 + t11643;
  t11646 = t10661*t11644;
  t11651 = t320*t4103*t11650;
  t11652 = -1.*t320*t4103*t11586;
  t11655 = t10585*t4103*t11592;
  t11657 = -1.*t320*t11119*t10661;
  t11659 = t10585*t11119*t10886;
  t11663 = t11166 + t11169 + t11652 + t11655 + t11657 + t11659;
  t11664 = t320*t10099*t11663;
  t11671 = t320*t9452*t11669;
  t11673 = t11646 + t11651 + t11664 + t11671;
  t11675 = t10661*t11650;
  t11676 = t320*t10099*t11669;
  t11678 = t11675 + t11676;
  t11681 = -1.*t320*t11119*t10601;
  t11682 = t10585*t11119*t10852;
  t11685 = -1.*t320*t3801*t11586;
  t11687 = t10585*t3801*t11592;
  t11688 = t11180 + t11182 + t11681 + t11682 + t11685 + t11687;
  t11689 = t10661*t11688;
  t11693 = t320*t4103*t11692;
  t11694 = t320*t4103*t11586;
  t11695 = -1.*t10585*t4103*t11592;
  t11696 = t320*t11119*t10661;
  t11697 = -1.*t10585*t11119*t10886;
  t11698 = t11191 + t11194 + t11694 + t11695 + t11696 + t11697;
  t11701 = t10601*t11698;
  t11715 = t320*t3801*t11708;
  t11719 = t11689 + t11693 + t11701 + t11715;
  t11723 = t10661*t11692;
  t11724 = t10601*t11708;
  t11726 = t11723 + t11724;
  t11737 = t320*t11279*t10645;
  t11738 = -1.*t10585*t11279*t10875;
  t11744 = t320*t9452*t11743;
  t11751 = -1.*t10585*t9452*t11750;
  t11755 = t11268 + t11283 + t11737 + t11738 + t11744 + t11751;
  t11756 = t10686*t11755;
  t11763 = t320*t2907*t11761;
  t11766 = -1.*t320*t2907*t11743;
  t11768 = t10585*t2907*t11750;
  t11769 = -1.*t320*t11279*t10686;
  t11770 = t10585*t11279*t10897;
  t11771 = t11293 + t11303 + t11766 + t11768 + t11769 + t11770;
  t11774 = t10645*t11771;
  t11786 = t320*t9452*t11781;
  t11791 = t11756 + t11763 + t11774 + t11786;
  t11797 = t10686*t11761;
  t11798 = t10645*t11781;
  t11799 = t11797 + t11798;
  t11802 = t320*t2907*t11743;
  t11803 = -1.*t10585*t2907*t11750;
  t11805 = t320*t11279*t10686;
  t11806 = -1.*t10585*t11279*t10897;
  t11807 = t11313 + t11321 + t11802 + t11803 + t11805 + t11806;
  t11808 = t10713*t11807;
  t11817 = t320*t3511*t11815;
  t11818 = -1.*t320*t3511*t11743;
  t11819 = t10585*t3511*t11750;
  t11820 = -1.*t320*t11279*t10713;
  t11822 = t10585*t11279*t10913;
  t11824 = t11356 + t11368 + t11818 + t11819 + t11820 + t11822;
  t11825 = t10686*t11824;
  t11831 = t320*t2907*t11830;
  t11832 = t11808 + t11817 + t11825 + t11831;
  t11834 = t10713*t11815;
  t11835 = t10686*t11830;
  t11837 = t11834 + t11835;
  t11839 = -1.*t320*t11279*t10645;
  t11843 = t10585*t11279*t10875;
  t11844 = -1.*t320*t9452*t11743;
  t11845 = t10585*t9452*t11750;
  t11846 = t11425 + t11429 + t11839 + t11843 + t11844 + t11845;
  t11851 = t10713*t11846;
  t11862 = t320*t3511*t11860;
  t11864 = t320*t3511*t11743;
  t11866 = -1.*t10585*t3511*t11750;
  t11867 = t320*t11279*t10713;
  t11870 = -1.*t10585*t11279*t10913;
  t11871 = t11432 + t11438 + t11864 + t11866 + t11867 + t11870;
  t11874 = t10645*t11871;
  t11881 = t320*t9452*t11878;
  t11882 = t11851 + t11862 + t11874 + t11881;
  t11886 = t10713*t11860;
  t11888 = t10645*t11878;
  t11889 = t11886 + t11888;
  t10754 = 1.768*t320*t10099*t10751;
  t10769 = 0.241*t10645*t10765;
  t10779 = 0.241*t320*t10099*t10778;
  t10786 = 0.241*t320*t10296*t10784;
  t10787 = 1.768*t320*t9452*t10784;
  t10802 = 1.527*t10601*t10797;
  t10817 = 1.527*t10661*t10816;
  t10826 = 0.241*t10825*t10686;
  t10838 = 0.241*t10836*t10713;
  t10862 = 1.527*t320*t3801*t10861;
  t10878 = 0.241*t320*t9452*t10877;
  t10890 = 1.527*t320*t4103*t10888;
  t10902 = 0.241*t320*t2907*t10901;
  t10920 = 0.241*t320*t3511*t10919;
  t10924 = t10754 + t10769 + t10779 + t10786 + t10787 + t10802 + t10817 + t10826 + t10838 + t10862 + t10878 + t10890 + t10902 + t10920;
  t11982 = 1.768*t10932*t10784;
  t11983 = 0.241*t10943*t10784;
  t11985 = 1.768*t10751*t10951;
  t11986 = 0.241*t10778*t10951;
  t11991 = 1.527*t10959*t10861;
  t11994 = 1.527*t10797*t10981;
  t11995 = 0.241*t10938*t10877;
  t11996 = 0.241*t10765*t10986;
  t11997 = 1.527*t10965*t10888;
  t11998 = 1.527*t10816*t10992;
  t12000 = 0.241*t10969*t10901;
  t12003 = 0.241*t10825*t10997;
  t12004 = 0.241*t10976*t10919;
  t12005 = 0.241*t10836*t11004;
  t12006 = t11982 + t11983 + t11985 + t11986 + t11991 + t11994 + t11995 + t11996 + t11997 + t11998 + t12000 + t12003 + t12004 + t12005;
  t11479 = 0.241*t320*t9452*t11478;
  t11504 = 0.241*t320*t10296*t11503;
  t11516 = 0.241*t320*t10099*t11515;
  t11562 = 0.241*t10585*t11561;
  t11577 = 0.241*t320*t10099*t11576;
  t11629 = 1.527*t10661*t11628;
  t11639 = 1.527*t320*t4103*t11637;
  t11674 = 1.527*t10601*t11673;
  t11679 = 1.527*t320*t3801*t11678;
  t11722 = 1.527*t320*t10099*t11719;
  t11736 = 1.527*t320*t9452*t11726;
  t11792 = 0.241*t10713*t11791;
  t11800 = 0.241*t320*t3511*t11799;
  t11833 = 0.241*t10645*t11832;
  t11838 = 0.241*t320*t9452*t11837;
  t11883 = 0.241*t10686*t11882;
  t11891 = 0.241*t320*t2907*t11889;
  t11894 = t11479 + t11504 + t11516 + t11562 + t11577 + t11629 + t11639 + t11674 + t11679 + t11722 + t11736 + t11792 + t11800 + t11833 + t11838 + t11883 + t11891;
  t12198 = 0.241*t10751*t11478;
  t12199 = 0.241*t10778*t11503;
  t12202 = 0.241*t10784*t11515;
  t12204 = 0.241*t10737*t320*t11561;
  t12205 = 0.241*t10784*t11576;
  t12210 = 1.527*t10888*t11628;
  t12215 = 1.527*t10816*t11637;
  t12218 = 1.527*t10861*t11673;
  t12219 = 1.527*t10797*t11678;
  t12220 = 1.527*t10784*t11719;
  t12222 = 1.527*t10751*t11726;
  t12226 = 0.241*t10919*t11791;
  t12227 = 0.241*t10836*t11799;
  t12231 = 0.241*t10877*t11832;
  t12236 = 0.241*t10765*t11837;
  t12237 = 0.241*t10901*t11882;
  t12238 = 0.241*t10825*t11889;
  t12243 = t12198 + t12199 + t12202 + t12204 + t12205 + t12210 + t12215 + t12218 + t12219 + t12220 + t12222 + t12226 + t12227 + t12231 + t12236 + t12237 + t12238;
  t12048 = 0.241*t10932*t11478;
  t12049 = 0.241*t10943*t11503;
  t12051 = 0.241*t10951*t11515;
  t12052 = -0.241*t320*t10741*t11561;
  t12053 = 0.241*t10951*t11576;
  t12054 = 1.527*t10992*t11628;
  t12055 = 1.527*t10965*t11637;
  t12056 = 1.527*t10981*t11673;
  t12058 = 1.527*t10959*t11678;
  t12059 = 1.527*t10951*t11719;
  t12060 = 1.527*t10932*t11726;
  t12061 = 0.241*t11004*t11791;
  t12062 = 0.241*t10976*t11799;
  t12065 = 0.241*t10986*t11832;
  t12066 = 0.241*t10938*t11837;
  t12069 = 0.241*t10997*t11882;
  t12070 = 0.241*t10969*t11889;
  t12071 = t12048 + t12049 + t12051 + t12052 + t12053 + t12054 + t12055 + t12056 + t12058 + t12059 + t12060 + t12061 + t12062 + t12065 + t12066 + t12069 + t12070;
  t12330 = t320*t10099*t11522;
  t12334 = t320*t10296*t11556;
  t12335 = t12330 + t12334;
  t11010 = 0.046850641*t320*t10296*t10746;
  t11011 = -0.046850641*t320*t9452*t10099;
  t11074 = 0.241*t10585*t11069;
  t11107 = 1.527*t320*t4103*t11106;
  t11138 = 1.527*t10661*t11137;
  t11153 = 1.527*t320*t3801*t11152;
  t11175 = 1.527*t10601*t11174;
  t11205 = 1.527*t320*t10099*t11202;
  t11214 = 1.527*t320*t9452*t11211;
  t11257 = 0.241*t320*t3511*t11255;
  t11312 = 0.241*t10713*t11311;
  t11389 = 0.241*t10645*t11386;
  t11396 = 0.241*t320*t9452*t11393;
  t11421 = 0.241*t320*t2907*t11419;
  t11446 = 0.241*t10686*t11445;
  t11449 = t11010 + t11011 + t11074 + t11107 + t11138 + t11153 + t11175 + t11205 + t11214 + t11257 + t11312 + t11389 + t11396 + t11421 + t11446;
  t12167 = -0.046850641*t10099*t10751;
  t12170 = 0.046850641*t10746*t10778;
  t12171 = 0.241*t10737*t320*t11069;
  t12172 = 1.527*t10816*t11106;
  t12173 = 1.527*t11137*t10888;
  t12174 = 1.527*t10797*t11152;
  t12176 = 1.527*t10861*t11174;
  t12180 = 1.527*t10784*t11202;
  t12182 = 1.527*t10751*t11211;
  t12185 = 0.241*t10836*t11255;
  t12188 = 0.241*t11311*t10919;
  t12190 = 0.241*t10877*t11386;
  t12193 = 0.241*t10765*t11393;
  t12194 = 0.241*t10825*t11419;
  t12195 = 0.241*t10901*t11445;
  t12196 = t12167 + t12170 + t12171 + t12172 + t12173 + t12174 + t12176 + t12180 + t12182 + t12185 + t12188 + t12190 + t12193 + t12194 + t12195;
  t12024 = -0.046850641*t10099*t10932;
  t12025 = 0.046850641*t10746*t10943;
  t12026 = -0.241*t320*t10741*t11069;
  t12028 = 1.527*t10965*t11106;
  t12029 = 1.527*t11137*t10992;
  t12031 = 1.527*t10959*t11152;
  t12032 = 1.527*t10981*t11174;
  t12034 = 1.527*t10951*t11202;
  t12035 = 1.527*t10932*t11211;
  t12036 = 0.241*t10976*t11255;
  t12038 = 0.241*t11311*t11004;
  t12039 = 0.241*t10986*t11386;
  t12040 = 0.241*t10938*t11393;
  t12042 = 0.241*t10969*t11419;
  t12043 = 0.241*t10997*t11445;
  t12044 = t12024 + t12025 + t12026 + t12028 + t12029 + t12031 + t12032 + t12034 + t12035 + t12036 + t12038 + t12039 + t12040 + t12042 + t12043;
  t12337 = t9452*t11026;
  t12341 = t10099*t11052;
  t12342 = t12337 + t12341;
  t12325 = -0.046850641*t9452*t11478;
  t12326 = 0.046850641*t9452*t11503;
  t12329 = 0.046850641*t10746*t11515;
  t12336 = 0.241*t11069*t12335;
  t12345 = 0.241*t12342*t11561;
  t12346 = -0.046850641*t10099*t11576;
  t12347 = 1.527*t11106*t11628;
  t12349 = 1.527*t11137*t11637;
  t12350 = 1.527*t11152*t11673;
  t12351 = 1.527*t11174*t11678;
  t12352 = 1.527*t11211*t11719;
  t12353 = 1.527*t11202*t11726;
  t12354 = 0.241*t11255*t11791;
  t12355 = 0.241*t11311*t11799;
  t12356 = 0.241*t11393*t11832;
  t12357 = 0.241*t11386*t11837;
  t12360 = 0.241*t11419*t11882;
  t12361 = 0.241*t11445*t11889;
  t12362 = t12325 + t12326 + t12329 + t12336 + t12345 + t12346 + t12347 + t12349 + t12350 + t12351 + t12352 + t12353 + t12354 + t12355 + t12356 + t12357 + t12360 + t12361;
  t12464 = Power(t1735,2);
  t12467 = Power(t1450,2);
  t10298 = 0.241*t320*t10255*t10296;
  t10300 = 0.241*t320*t10255*t9452;
  t10411 = 1.527*t320*t10408*t9452;
  t12498 = 0.241*t10486;
  t12500 = 0. + t12498;
  t10508 = 0.241*t10507*t320*t10099;
  t10514 = 0.241*t320*t10512*t10099;
  t10536 = 1.527*t320*t10534*t10099;
  t10541 = 1.527*t1735*t320*t10540*t3801;
  t10546 = 1.527*t320*t10545*t1450*t4103;
  t12490 = 0.241*t10561;
  t12491 = 0. + t12490;
  t12493 = 0.241*t10574;
  t12495 = 0. + t12493;
  t10603 = 1.527*t1735*t10584*t10601;
  t10646 = 0.241*t10637*t10645;
  t10665 = 1.527*t10651*t1450*t10661;
  t10688 = 0.241*t10678*t9711*t10686;
  t10714 = 0.241*t10704*t3183*t10713;
  t12118 = 0.241*t10255*t10751;
  t12120 = 1.527*t10408*t10751;
  t12122 = 0.241*t10255*t10778;
  t12123 = 0.241*t10507*t10784;
  t12124 = 0.241*t10512*t10784;
  t12125 = 1.527*t10534*t10784;
  t12126 = 1.527*t1735*t10540*t10797;
  t12129 = 1.527*t10545*t1450*t10816;
  t12134 = 1.527*t1735*t10584*t10861;
  t12135 = 0.241*t10637*t10877;
  t12137 = 1.527*t10651*t1450*t10888;
  t12138 = 0.241*t10678*t9711*t10901;
  t12140 = 0.241*t10704*t3183*t10919;
  t11947 = 0.241*t10255*t10932;
  t11948 = 1.527*t10408*t10932;
  t11956 = 0.241*t10255*t10943;
  t11957 = 0.241*t10507*t10951;
  t11958 = 0.241*t10512*t10951;
  t11959 = 1.527*t10534*t10951;
  t11962 = 1.527*t1735*t10540*t10959;
  t11964 = 1.527*t10545*t1450*t10965;
  t11968 = 1.527*t1735*t10584*t10981;
  t11971 = 0.241*t10637*t10986;
  t11974 = 1.527*t10651*t1450*t10992;
  t11975 = 0.241*t10678*t9711*t10997;
  t11977 = 0.241*t10704*t3183*t11004;
  t12409 = 0.046850641*t10512*t10746;
  t12410 = -0.046850641*t10507*t10099;
  t12412 = 1.527*t10651*t1450*t11106;
  t12414 = 1.527*t10545*t1450*t11137;
  t12415 = 1.527*t1735*t10584*t11152;
  t12416 = 1.527*t1735*t10540*t11174;
  t12417 = 1.527*t10408*t11202;
  t12419 = 1.527*t10534*t11211;
  t12420 = 0.241*t10704*t3183*t11255;
  t12424 = 0.241*t10637*t11393;
  t12425 = 0.241*t10678*t9711*t11419;
  t12278 = 0.241*t10507*t11478;
  t12281 = 0.241*t10512*t11503;
  t12282 = 0.241*t10255*t11515;
  t12286 = 0.241*t10255*t11576;
  t12288 = 1.527*t10545*t1450*t11628;
  t12291 = 1.527*t10651*t1450*t11637;
  t12295 = 1.527*t1735*t10540*t11673;
  t12302 = 1.527*t1735*t10584*t11678;
  t12304 = 1.527*t10408*t11719;
  t12305 = 1.527*t10534*t11726;
  t12308 = 0.241*t10704*t3183*t11799;
  t12311 = 0.241*t10637*t11837;
  t12313 = 0.241*t10678*t9711*t11889;
  t12463 = -0.00482*t10255;
  t12465 = 0.081793755*t12464*t10584;
  t12468 = -0.081793755*t10651*t12467;
  t12470 = 1.527*t10534*t9411;
  t9552 = 1.527*t320*t9411*t9452;
  t12549 = 0.241*t10090;
  t12552 = 0. + t12549;
  t10117 = -0.00482*t320*t10099;
  t10127 = 0.081793755*t1735*t320*t3801;
  t10130 = -0.081793755*t320*t1450*t4103;
  t12541 = 0.241*t10163;
  t12542 = 0. + t12541;
  t12545 = 0.241*t10194;
  t12546 = 0. + t12545;
  t12099 = 1.527*t9411*t10751;
  t12101 = -0.00482*t10784;
  t12103 = 0.081793755*t1735*t10797;
  t12107 = -0.081793755*t1450*t10816;
  t11922 = 1.527*t9411*t10932;
  t11926 = -0.00482*t10951;
  t11929 = 0.081793755*t1735*t10959;
  t11931 = -0.081793755*t1450*t10965;
  t12394 = -0.00093701282*t10746;
  t12395 = -0.081793755*t1450*t11137;
  t12396 = 0.081793755*t1735*t11174;
  t12399 = 1.527*t9411*t11202;
  t12264 = -0.00482*t11503;
  t12265 = -0.081793755*t1450*t11628;
  t12267 = 0.081793755*t1735*t11673;
  t12268 = 1.527*t9411*t11719;
  t12456 = 0.06108*t1735*t10584;
  t12457 = -0.06108*t10651*t1450;
  t3806 = 0.06108*t320*t3801;
  t4128 = -0.06108*t320*t4103;
  t12590 = 0.241*t4452;
  t12591 = 0. + t12590;
  t12594 = 0.241*t4962;
  t12595 = 0. + t12594;
  t12081 = 0.06108*t10797;
  t12084 = -0.06108*t10816;
  t11908 = 0.06108*t10959;
  t11910 = -0.06108*t10965;
  t12386 = -0.06108*t11137;
  t12387 = 0.06108*t11174;
  t12255 = -0.06108*t11628;
  t12257 = 0.06108*t11673;
  t12451 = -0.03856*t10678*t9711;
  t12452 = 0.004820000000000004*t10704*t3183;
  t12453 = t12451 + t12452;
  t2909 = -0.03856*t320*t2907;
  t3554 = 0.004820000000000004*t320*t3511;
  t3555 = t2909 + t3554;
  t12077 = -0.03856*t10825;
  t12078 = 0.004820000000000004*t10836;
  t12079 = t12077 + t12078;
  t11903 = -0.03856*t10969;
  t11904 = 0.004820000000000004*t10976;
  t11905 = t11903 + t11904;
  t12382 = 0.004820000000000004*t11311;
  t12383 = -0.03856*t11445;
  t12384 = t12382 + t12383;
  t12250 = 0.004820000000000004*t11791;
  t12251 = -0.03856*t11882;
  t12252 = t12250 + t12251;
  p_output1[0]=var2[12]*(-0.5*(0.482*t10099*t10296*t10720 + 0.482*t10686*t2907*t320 + 0.482*t10713*t320*t3511 + 3.054*t10601*t320*t3801 + 3.054*t10661*t320*t4103 + 3.536*t10099*t10720*t9452 + 0.482*t10645*t320*t9452)*var2[0] - 0.5*t11008*var2[1] - 0.5*t10924*var2[2] - 0.5*t11894*var2[3] - 0.5*t11449*var2[4] - 0.5*(t10298 + t10300 + t10411 + t10508 + t10514 + t10536 + t10541 + t10546 + t10603 + t10646 + t10665 + t10688 + t10714 + 0.241*t10561*t2907*t320 + 0.241*t10574*t320*t3511 + 0.241*t10486*t320*t9452)*var2[5] - 0.5*(t10117 + t10127 + t10130 + 0.241*t10163*t2907*t320 + 0.241*t10194*t320*t3511 + 0.241*t10090*t320*t9452 + t9552)*var2[12] - 0.5*(t3806 + t4128 + 0.241*t2907*t320*t4452 + 0.241*t320*t3511*t4962)*var2[13] - 0.5*t3555*var2[14]);
  p_output1[1]=var2[12]*(-0.5*t11008*var2[0] - 0.5*(3.536*t10932*t10951 + 0.482*t10943*t10951 + 3.054*t10959*t10981 + 0.482*t10938*t10986 + 3.054*t10965*t10992 + 0.482*t10969*t10997 + 0.482*t10976*t11004)*var2[1] - 0.5*t12006*var2[2] - 0.5*t12071*var2[3] - 0.5*t12044*var2[4] - 0.5*(0.241*t10486*t10938 + 0.241*t10561*t10969 + 0.241*t10574*t10976 + t11947 + t11948 + t11956 + t11957 + t11958 + t11959 + t11962 + t11964 + t11968 + t11971 + t11974 + t11975 + t11977)*var2[5] - 0.5*(0.241*t10090*t10938 + 0.241*t10163*t10969 + 0.241*t10194*t10976 + t11922 + t11926 + t11929 + t11931)*var2[12] - 0.5*(t11908 + t11910 + 0.241*t10969*t4452 + 0.241*t10976*t4962)*var2[13] - 0.5*t11905*var2[14]);
  p_output1[2]=var2[12]*(-0.5*t10924*var2[0] - 0.5*t12006*var2[1] - 0.5*(3.536*t10751*t10784 + 0.482*t10778*t10784 + 3.054*t10797*t10861 + 0.482*t10765*t10877 + 3.054*t10816*t10888 + 0.482*t10825*t10901 + 0.482*t10836*t10919)*var2[2] - 0.5*t12243*var2[3] - 0.5*t12196*var2[4] - 0.5*(0.241*t10486*t10765 + 0.241*t10561*t10825 + 0.241*t10574*t10836 + t12118 + t12120 + t12122 + t12123 + t12124 + t12125 + t12126 + t12129 + t12134 + t12135 + t12137 + t12138 + t12140)*var2[5] - 0.5*(0.241*t10090*t10765 + 0.241*t10163*t10825 + 0.241*t10194*t10836 + t12099 + t12101 + t12103 + t12107)*var2[12] - 0.5*(t12081 + t12084 + 0.241*t10825*t4452 + 0.241*t10836*t4962)*var2[13] - 0.5*t12079*var2[14]);
  p_output1[3]=var2[12]*(-0.5*t11894*var2[0] - 0.5*t12071*var2[1] - 0.5*t12243*var2[2] - 0.5*(0.482*t11503*t11515 + 0.482*t11478*t11576 + 3.054*t11628*t11637 + 3.054*t11673*t11678 + 3.054*t11719*t11726 + 0.482*t11791*t11799 + 0.482*t11832*t11837 + 0.482*t11882*t11889 + 0.482*t11561*t12335)*var2[3] - 0.5*t12362*var2[4] - 0.5*(0.241*t10574*t11791 + 0.241*t10486*t11832 + 0.241*t10561*t11882 + t12278 + t12281 + t12282 + t12286 + t12288 + t12291 + t12295 + t12302 + t12304 + t12305 + t12308 + t12311 + t12313)*var2[5] - 0.5*(0.241*t10194*t11791 + 0.241*t10090*t11832 + 0.241*t10163*t11882 + t12264 + t12265 + t12267 + t12268)*var2[12] - 0.5*(t12255 + t12257 + 0.241*t11882*t4452 + 0.241*t11791*t4962)*var2[13] - 0.5*t12252*var2[14]);
  p_output1[4]=var2[12]*(-0.5*t11449*var2[0] - 0.5*t12044*var2[1] - 0.5*t12196*var2[2] - 0.5*t12362*var2[3] - 0.5*(3.054*t11106*t11137 + 3.054*t11152*t11174 + 3.054*t11202*t11211 + 0.482*t11255*t11311 + 0.482*t11386*t11393 + 0.482*t11419*t11445 + 0.482*t11069*t12342 + 0.018215622922082*t10099*t9452 + 0.018215622922082*t10746*t9452)*var2[4] - 0.5*(0.241*t10574*t11311 + 0.241*t10486*t11386 + 0.241*t10561*t11445 + t12409 + t12410 + t12412 + t12414 + t12415 + t12416 + t12417 + t12419 + t12420 + t12424 + t12425)*var2[5] - 0.5*(0.241*t10194*t11311 + 0.241*t10090*t11386 + 0.241*t10163*t11445 + t12394 + t12395 + t12396 + t12399)*var2[12] - 0.5*(t12386 + t12387 + 0.241*t11445*t4452 + 0.241*t11311*t4962)*var2[13] - 0.5*t12384*var2[14]);
  p_output1[5]=var2[12]*(-0.5*(t10298 + t10300 + t10411 + t10508 + t10514 + t10536 + t10541 + t10546 + t10603 + t10646 + t10665 + t10688 + t10714 + t12491*t2907*t320 + t12495*t320*t3511 + t12500*t320*t9452)*var2[0] - 0.5*(t11947 + t11948 + t11956 + t11957 + t11958 + t11959 + t11962 + t11964 + t11968 + t11971 + t11974 + t11975 + t11977 + t10969*t12491 + t10976*t12495 + t10938*t12500)*var2[1] - 0.5*(t12118 + t12120 + t12122 + t12123 + t12124 + t12125 + t12126 + t12129 + t12134 + t12135 + t12137 + t12138 + t12140 + t10825*t12491 + t10836*t12495 + t10765*t12500)*var2[2] - 0.5*(t12278 + t12281 + t12282 + t12286 + t12288 + t12291 + t12295 + t12302 + t12304 + t12305 + t12308 + t12311 + t12313 + t11882*t12491 + t11791*t12495 + t11832*t12500)*var2[3] - 0.5*(t12409 + t12410 + t12412 + t12414 + t12415 + t12416 + t12417 + t12419 + t12420 + t12424 + t12425 + t11445*t12491 + t11311*t12495 + t11386*t12500)*var2[4] - 0.5*(0.482*t10255*t10507 + 0.482*t10255*t10512 + 3.054*t10408*t10534 + 0.241*t10486*t10637 + 3.054*t10540*t10584*t12464 + 3.054*t10545*t10651*t12467 + t10637*t12500 + 0.241*t10574*t10704*t3183 + t10704*t12495*t3183 + 0.241*t10561*t10678*t9711 + t10678*t12491*t9711)*var2[5] - 0.5*(0.241*t10090*t10637 + t12463 + t12465 + t12468 + t12470 + 0.241*t10194*t10704*t3183 + 0.241*t10163*t10678*t9711)*var2[12] - 0.5*(t12456 + t12457 + 0.241*t10704*t3183*t4962 + 0.241*t10678*t4452*t9711)*var2[13] - 0.5*t12453*var2[14]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=(-0.5*(t10117 + t10127 + t10130 + t12542*t2907*t320 + t12546*t320*t3511 + t12552*t320*t9452 + t9552)*var2[0] - 0.5*(t11922 + t11926 + t11929 + t11931 + t10969*t12542 + t10976*t12546 + t10938*t12552)*var2[1] - 0.5*(t12099 + t12101 + t12103 + t12107 + t10825*t12542 + t10836*t12546 + t10765*t12552)*var2[2] - 0.5*(t12264 + t12265 + t12267 + t12268 + t11882*t12542 + t11791*t12546 + t11832*t12552)*var2[3] - 0.5*(t12394 + t12395 + t12396 + t12399 + t11445*t12542 + t11311*t12546 + t11386*t12552)*var2[4] - 0.5*(t12463 + t12465 + t12468 + t12470 + t10637*t12552 + t10704*t12546*t3183 + t10678*t12542*t9711)*var2[5])*var2[12];
  p_output1[13]=(-0.5*(t12591*t2907*t320 + t12595*t320*t3511 + t3806 + t4128)*var2[0] - 0.5*(t11908 + t11910 + t10969*t12591 + t10976*t12595)*var2[1] - 0.5*(t12081 + t12084 + t10825*t12591 + t10836*t12595)*var2[2] - 0.5*(t12255 + t12257 + t11882*t12591 + t11791*t12595)*var2[3] - 0.5*(t12386 + t12387 + t11445*t12591 + t11311*t12595)*var2[4] - 0.5*(t12456 + t12457 + t10704*t12595*t3183 + t10678*t12591*t9711)*var2[5])*var2[12];
  p_output1[14]=(-0.5*t3555*var2[0] - 0.5*t11905*var2[1] - 0.5*t12079*var2[2] - 0.5*t12252*var2[3] - 0.5*t12384*var2[4] - 0.5*t12453*var2[5])*var2[12];
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec13_plane.hh"

namespace SymFunction
{

void Ce2_vec13_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
