/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:12:02 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t157;
  double t47;
  double t52;
  double t178;
  double t205;
  double t237;
  double t32;
  double t33;
  double t206;
  double t211;
  double t212;
  double t280;
  double t351;
  double t354;
  double t355;
  double t366;
  double t367;
  double t374;
  double t345;
  double t346;
  double t348;
  double t276;
  double t324;
  double t325;
  double t326;
  double t331;
  double t334;
  double t342;
  double t547;
  double t569;
  double t595;
  double t619;
  double t622;
  double t625;
  double t628;
  double t630;
  double t635;
  double t637;
  double t638;
  double t639;
  double t561;
  double t575;
  double t578;
  double t646;
  double t657;
  double t658;
  double t665;
  double t670;
  double t685;
  double t697;
  double t631;
  double t640;
  double t645;
  double t748;
  double t755;
  double t758;
  double t125;
  double t182;
  double t191;
  double t241;
  double t245;
  double t247;
  double t265;
  double t268;
  double t270;
  double t275;
  double t281;
  double t293;
  double t349;
  double t377;
  double t383;
  double t385;
  double t386;
  double t396;
  double t405;
  double t411;
  double t414;
  double t431;
  double t433;
  double t440;
  double t476;
  double t491;
  double t498;
  double t506;
  double t510;
  double t516;
  double t1119;
  double t1128;
  double t1129;
  double t660;
  double t713;
  double t719;
  double t733;
  double t768;
  double t788;
  double t790;
  double t791;
  double t794;
  double t807;
  double t817;
  double t832;
  double t835;
  double t836;
  double t854;
  double t875;
  double t880;
  double t885;
  double t893;
  double t913;
  double t925;
  double t950;
  double t961;
  double t974;
  double t981;
  double t994;
  double t997;
  double t1015;
  double t1022;
  double t1027;
  double t1299;
  double t1302;
  double t1316;
  double t1330;
  double t1331;
  double t1336;
  double t1393;
  double t1402;
  double t1416;
  double t1420;
  double t1444;
  double t1447;
  double t1632;
  double t1639;
  double t1643;
  double t1644;
  double t1646;
  double t1675;
  double t1692;
  double t1695;
  double t1628;
  double t1697;
  double t1702;
  double t1707;
  double t1730;
  double t1732;
  double t1811;
  double t1816;
  double t1817;
  double t1932;
  double t1939;
  double t1940;
  double t1956;
  double t1957;
  double t1964;
  double t1978;
  double t1979;
  double t1984;
  double t2004;
  double t2007;
  double t2024;
  double t2056;
  double t2060;
  double t2075;
  double t1988;
  double t1991;
  double t1992;
  double t2087;
  double t2090;
  double t2095;
  double t1945;
  double t1965;
  double t1966;
  double t2228;
  double t2243;
  double t2259;
  double t2719;
  double t2723;
  double t2741;
  double t2749;
  double t2750;
  double t2767;
  double t2770;
  double t2784;
  double t2793;
  double t2833;
  double t2846;
  double t2857;
  double t2882;
  double t2898;
  double t2916;
  double t2870;
  double t2872;
  double t2874;
  double t2921;
  double t2924;
  double t2927;
  double t2798;
  double t2819;
  double t2822;
  double t3109;
  double t3111;
  double t3112;
  double t3410;
  double t3416;
  double t3420;
  double t3431;
  double t3443;
  double t3449;
  double t3458;
  double t3464;
  double t3482;
  double t1060;
  double t1064;
  double t1067;
  double t3488;
  double t3496;
  double t3497;
  double t3522;
  double t3528;
  double t3542;
  double t3805;
  double t3807;
  double t3822;
  double t1975;
  double t3955;
  double t3957;
  double t3958;
  double t2160;
  double t2267;
  double t2325;
  double t2509;
  double t2585;
  double t2917;
  double t4355;
  double t4367;
  double t4379;
  double t2977;
  double t3049;
  double t3149;
  double t3240;
  double t3283;
  double t1810;
  double t1820;
  double t1849;
  double t1858;
  double t1862;
  double t1876;
  double t4875;
  double t4885;
  double t4889;
  double t2003;
  double t2029;
  double t2031;
  double t3981;
  double t4868;
  double t4896;
  double t3990;
  double t3944;
  double t3961;
  double t2167;
  double t2171;
  double t2189;
  double t2275;
  double t2284;
  double t2294;
  double t4045;
  double t4061;
  double t4121;
  double t4124;
  double t2327;
  double t2340;
  double t2347;
  double t2512;
  double t2520;
  double t2548;
  double t4188;
  double t4195;
  double t4251;
  double t4264;
  double t2588;
  double t2607;
  double t2618;
  double t2934;
  double t2953;
  double t2961;
  double t4333;
  double t4396;
  double t4420;
  double t4427;
  double t2984;
  double t2991;
  double t3003;
  double t4503;
  double t4514;
  double t3058;
  double t3066;
  double t3077;
  double t4560;
  double t4573;
  double t3152;
  double t3156;
  double t3157;
  double t3251;
  double t3254;
  double t3255;
  double t4649;
  double t4670;
  double t4718;
  double t4733;
  double t3292;
  double t3294;
  double t3295;
  double t5516;
  double t5521;
  double t5522;
  double t5452;
  double t5455;
  double t5463;
  double t5482;
  double t5483;
  double t5489;
  double t5534;
  double t5537;
  double t5543;
  double t5567;
  double t5571;
  double t5575;
  double t5635;
  double t5637;
  double t5643;
  double t5738;
  double t5747;
  double t5757;
  double t5839;
  double t5840;
  double t5841;
  double t3921;
  double t3922;
  double t5924;
  double t5925;
  double t5927;
  double t5929;
  double t5932;
  double t4008;
  double t4016;
  double t4017;
  double t4038;
  double t4039;
  double t4099;
  double t4101;
  double t4113;
  double t4212;
  double t4219;
  double t4224;
  double t4225;
  double t4292;
  double t4304;
  double t6021;
  double t6023;
  double t6017;
  double t6018;
  double t6019;
  double t4447;
  double t4460;
  double t4461;
  double t4541;
  double t4546;
  double t4578;
  double t4579;
  double t4602;
  double t4637;
  double t4778;
  double t4787;
  double t4792;
  double t6122;
  double t6123;
  double t5940;
  double t5947;
  double t5928;
  double t5934;
  double t5963;
  double t5965;
  double t5972;
  double t5975;
  double t5988;
  double t5992;
  double t6005;
  double t6006;
  double t6020;
  double t6028;
  double t6032;
  double t6037;
  double t6048;
  double t6052;
  double t6058;
  double t6061;
  double t6078;
  double t6080;
  double t6088;
  double t6092;
  double t6381;
  double t6385;
  double t6390;
  double t6403;
  double t6404;
  double t6408;
  double t6471;
  double t6472;
  double t6528;
  double t6529;
  double t6530;
  double t6531;
  double t6473;
  double t6477;
  double t6478;
  double t6481;
  double t6484;
  double t6486;
  double t6488;
  double t6489;
  double t6492;
  double t6576;
  double t6577;
  double t6578;
  double t6581;
  double t6582;
  double t6584;
  double t6592;
  double t6600;
  double t6624;
  double t6625;
  double t6627;
  double t6526;
  double t6540;
  double t6545;
  double t6638;
  double t6642;
  double t6643;
  double t6662;
  double t6663;
  double t6666;
  double t6524;
  double t6525;
  double t6532;
  double t6533;
  double t6536;
  double t6537;
  double t6539;
  double t6548;
  double t6549;
  double t6550;
  double t6554;
  double t5602;
  double t5605;
  double t5607;
  double t6725;
  double t6730;
  double t6733;
  double t6510;
  double t6512;
  double t6514;
  double t6703;
  double t6707;
  double t6708;
  double t1087;
  double t1102;
  double t1114;
  double t1173;
  double t1195;
  double t1215;
  double t1220;
  double t1229;
  double t1230;
  double t6744;
  double t6746;
  double t6748;
  double t6751;
  double t6754;
  double t6756;
  double t6809;
  double t6810;
  double t6811;
  double t6813;
  double t6817;
  double t6819;
  double t6608;
  double t6900;
  double t6902;
  double t6906;
  double t6911;
  double t6912;
  double t6913;
  double t6821;
  double t6832;
  double t6990;
  double t6991;
  double t6992;
  double t6994;
  double t6995;
  double t6996;
  double t6464;
  double t6466;
  double t6843;
  double t6847;
  double t6849;
  double t6860;
  double t6868;
  double t6870;
  double t6914;
  double t6923;
  double t7068;
  double t7071;
  double t7072;
  double t7064;
  double t7065;
  double t7066;
  double t6938;
  double t6509;
  double t6518;
  double t6520;
  double t6945;
  double t6947;
  double t6955;
  double t6960;
  double t6965;
  double t6380;
  double t6414;
  double t6418;
  double t6420;
  double t6437;
  double t6439;
  double t6440;
  double t6442;
  double t6443;
  double t6444;
  double t6445;
  double t6448;
  double t7145;
  double t7146;
  double t7148;
  double t7140;
  double t7141;
  double t6450;
  double t6451;
  double t6503;
  double t6504;
  double t6507;
  double t6523;
  double t7173;
  double t7174;
  double t7175;
  double t7169;
  double t7170;
  double t7171;
  double t6617;
  double t6619;
  double t6622;
  double t6623;
  double t6629;
  double t6632;
  double t6646;
  double t6667;
  double t6648;
  double t6649;
  double t7172;
  double t7181;
  double t6670;
  double t6671;
  double t6679;
  double t6680;
  double t6687;
  double t7176;
  double t7178;
  double t7179;
  double t7180;
  double t7182;
  double t7183;
  double t7184;
  double t6694;
  double t6695;
  double t6734;
  double t6735;
  double t6736;
  double t6737;
  double t6740;
  double t6741;
  double t6750;
  double t6757;
  double t6758;
  double t6761;
  double t6776;
  double t6777;
  double t6778;
  double t6780;
  double t6781;
  double t6782;
  double t6784;
  double t6877;
  double t6880;
  double t6883;
  double t6885;
  double t6886;
  double t6888;
  double t6889;
  double t6893;
  double t6894;
  double t6896;
  double t6897;
  double t6899;
  double t7226;
  double t7227;
  double t7229;
  double t7231;
  double t7233;
  double t7235;
  double t6942;
  double t6943;
  double t6946;
  double t6952;
  double t6953;
  double t6963;
  double t7057;
  double t7058;
  double t7059;
  double t7061;
  double t7086;
  double t7087;
  double t7088;
  double t7090;
  double t7091;
  double t7094;
  double t7095;
  double t7062;
  double t7236;
  double t7244;
  double t7297;
  double t7298;
  double t7300;
  double t7288;
  double t7289;
  double t7295;
  double t7250;
  double t7101;
  double t7256;
  double t7104;
  double t7105;
  double t7114;
  double t7121;
  double t7266;
  double t7276;
  double t7126;
  double t7127;
  t157 = Cos(var1[5]);
  t47 = Cos(var1[6]);
  t52 = Sin(var1[5]);
  t178 = Sin(var1[6]);
  t205 = Sin(var1[3]);
  t237 = Cos(var1[7]);
  t32 = Cos(var1[3]);
  t33 = Sin(var1[4]);
  t206 = t157*t47;
  t211 = t52*t178;
  t212 = t206 + t211;
  t280 = Sin(var1[7]);
  t351 = -1.*t237;
  t354 = 1. + t351;
  t355 = 0.242889*t354;
  t366 = 0.202889*t237;
  t367 = -0.04*t280;
  t374 = t355 + t366 + t367;
  t345 = -0.04*t237;
  t346 = 0.04*t280;
  t348 = t345 + t346;
  t276 = Cos(var1[4]);
  t324 = t47*t52;
  t325 = -1.*t157*t178;
  t326 = t324 + t325;
  t331 = -1.*t205*t326;
  t334 = t32*t33*t212;
  t342 = t331 + t334;
  t547 = Cos(var1[8]);
  t569 = Sin(var1[8]);
  t595 = -1.*t547;
  t619 = 1. + t595;
  t622 = 0.100689*t619;
  t625 = 0.080689*t547;
  t628 = -0.16*t569;
  t630 = t622 + t625 + t628;
  t635 = -0.20833*t619;
  t637 = -0.36833*t547;
  t638 = 0.02*t569;
  t639 = t635 + t637 + t638;
  t561 = t237*t547;
  t575 = -1.*t280*t569;
  t578 = t561 + t575;
  t646 = t547*t280;
  t657 = t237*t569;
  t658 = t646 + t657;
  t665 = 0.242889*t280;
  t670 = -1.*t280*t630;
  t685 = t237*t639;
  t697 = t665 + t670 + t685;
  t631 = t237*t630;
  t640 = t280*t639;
  t645 = t355 + t631 + t640;
  t748 = -1.*t547*t280;
  t755 = -1.*t237*t569;
  t758 = t748 + t755;
  t125 = -1.*t47*t52;
  t182 = t157*t178;
  t191 = t125 + t182;
  t241 = t157*t47*t237;
  t245 = t237*t52*t178;
  t247 = t241 + t245;
  t265 = -1.*t47*t237*t52;
  t268 = t157*t237*t178;
  t270 = t265 + t268;
  t275 = -1.*t33*t270;
  t281 = t276*t280;
  t293 = t275 + t281;
  t349 = -1.*t237*t348;
  t377 = -1.*t374*t280;
  t383 = t349 + t377;
  t385 = -1.*t237*t383;
  t386 = t237*t374;
  t396 = -1.*t348*t280;
  t405 = t386 + t396;
  t411 = -1.*t280*t405;
  t414 = t385 + t411;
  t431 = -1.*t157*t47*t280;
  t433 = -1.*t52*t178*t280;
  t440 = t431 + t433;
  t476 = t276*t237;
  t491 = t47*t52*t280;
  t498 = -1.*t157*t178*t280;
  t506 = t491 + t498;
  t510 = -1.*t33*t506;
  t516 = t476 + t510;
  t1119 = t32*t326;
  t1128 = t205*t33*t212;
  t1129 = t1119 + t1128;
  t660 = -1.*t645*t658;
  t713 = -1.*t697*t578;
  t719 = t660 + t713;
  t733 = -1.*t578*t719;
  t768 = t697*t758;
  t788 = t645*t578;
  t790 = t768 + t788;
  t791 = -1.*t658*t790;
  t794 = t733 + t791;
  t807 = -0.081715*t758;
  t817 = -0.11459*t658;
  t832 = t807 + t817;
  t835 = t157*t47*t758;
  t836 = t52*t178*t758;
  t854 = t835 + t836;
  t875 = t276*t578;
  t880 = -1.*t47*t52*t758;
  t885 = t157*t178*t758;
  t893 = t880 + t885;
  t913 = -1.*t33*t893;
  t925 = t875 + t913;
  t950 = t157*t47*t578;
  t961 = t52*t178*t578;
  t974 = t950 + t961;
  t981 = t276*t658;
  t994 = -1.*t47*t52*t578;
  t997 = t157*t178*t578;
  t1015 = t994 + t997;
  t1022 = -1.*t33*t1015;
  t1027 = t981 + t1022;
  t1299 = -1.*t276*t270;
  t1302 = -1.*t33*t280;
  t1316 = t1299 + t1302;
  t1330 = -1.*t237*t33;
  t1331 = -1.*t276*t506;
  t1336 = t1330 + t1331;
  t1393 = -1.*t33*t578;
  t1402 = -1.*t276*t893;
  t1416 = t1393 + t1402;
  t1420 = -1.*t33*t658;
  t1444 = -1.*t276*t1015;
  t1447 = t1420 + t1444;
  t1632 = -1.*t47;
  t1639 = 1. + t1632;
  t1643 = -0.081715*t1639;
  t1644 = -0.061715*t47;
  t1646 = t1643 + t1644;
  t1675 = t157*t1646;
  t1692 = 0.02*t52*t178;
  t1695 = t1675 + t1692;
  t1628 = -0.242889*t33;
  t1697 = -1.*t276*t1695;
  t1702 = t1628 + t1697;
  t1707 = 0.242889*t33;
  t1730 = t276*t1695;
  t1732 = t1707 + t1730;
  t1811 = 0.242889*t276;
  t1816 = -1.*t33*t1695;
  t1817 = t1811 + t1816;
  t1932 = 0.053565*t178;
  t1939 = t47*t348;
  t1940 = t1932 + t1939;
  t1956 = -0.13528*t47;
  t1957 = t178*t348;
  t1964 = t1643 + t1956 + t1957;
  t1978 = -1.*t52*t1940;
  t1979 = t157*t1964;
  t1984 = t1978 + t1979;
  t2004 = t276*t1984;
  t2007 = t33*t374;
  t2024 = t2004 + t2007;
  t2056 = -1.*t276*t1984;
  t2060 = -1.*t33*t374;
  t2075 = t2056 + t2060;
  t1988 = -1.*t33*t1984;
  t1991 = t276*t374;
  t1992 = t1988 + t1991;
  t2087 = t276*t270;
  t2090 = t33*t280;
  t2095 = t2087 + t2090;
  t1945 = t157*t1940;
  t1965 = t52*t1964;
  t1966 = t1945 + t1965;
  t2228 = t237*t33;
  t2243 = t276*t506;
  t2259 = t2228 + t2243;
  t2719 = 0.032875*t178;
  t2723 = t47*t697;
  t2741 = t2719 + t2723;
  t2749 = -1.*t52*t2741;
  t2750 = -0.11459*t47;
  t2767 = t178*t697;
  t2770 = t1643 + t2750 + t2767;
  t2784 = t157*t2770;
  t2793 = t2749 + t2784;
  t2833 = t276*t2793;
  t2846 = t33*t645;
  t2857 = t2833 + t2846;
  t2882 = t157*t2741;
  t2898 = t52*t2770;
  t2916 = t2882 + t2898;
  t2870 = t33*t578;
  t2872 = t276*t893;
  t2874 = t2870 + t2872;
  t2921 = -1.*t33*t2793;
  t2924 = t276*t645;
  t2927 = t2921 + t2924;
  t2798 = -1.*t276*t2793;
  t2819 = -1.*t33*t645;
  t2822 = t2798 + t2819;
  t3109 = t33*t658;
  t3111 = t276*t1015;
  t3112 = t3109 + t3111;
  t3410 = -1.*t157*t47;
  t3416 = -1.*t52*t178;
  t3420 = t3410 + t3416;
  t3431 = -1.*t157*t47*t237;
  t3443 = -1.*t237*t52*t178;
  t3449 = t3431 + t3443;
  t3458 = t157*t47*t280;
  t3464 = t52*t178*t280;
  t3482 = t3458 + t3464;
  t1060 = t205*t33*t191;
  t1064 = t32*t212;
  t1067 = t1060 + t1064;
  t3488 = -1.*t157*t47*t758;
  t3496 = -1.*t52*t178*t758;
  t3497 = t3488 + t3496;
  t3522 = -1.*t157*t47*t578;
  t3528 = -1.*t52*t178*t578;
  t3542 = t3522 + t3528;
  t3805 = -1.*t32*t33*t191;
  t3807 = t205*t212;
  t3822 = t3805 + t3807;
  t1975 = -1.*t326*t1966;
  t3955 = -1.*t157*t1940;
  t3957 = -1.*t52*t1964;
  t3958 = t3955 + t3957;
  t2160 = t247*t1966;
  t2267 = t326*t1966;
  t2325 = -1.*t1966*t440;
  t2509 = -1.*t247*t1966;
  t2585 = t1966*t440;
  t2917 = t326*t2916;
  t4355 = -1.*t157*t2741;
  t4367 = -1.*t52*t2770;
  t4379 = t4355 + t4367;
  t2977 = -1.*t2916*t854;
  t3049 = t2916*t854;
  t3149 = -1.*t2916*t974;
  t3240 = -1.*t326*t2916;
  t3283 = t2916*t974;
  t1810 = -1.*t33*t1732;
  t1820 = -1.*t276*t1817;
  t1849 = t1810 + t1820;
  t1858 = t1646*t52;
  t1862 = -0.02*t157*t178;
  t1876 = t1858 + t1862;
  t4875 = -1.*t1646*t52;
  t4885 = 0.02*t157*t178;
  t4889 = t4875 + t4885;
  t2003 = t33*t212*t1992;
  t2029 = -1.*t276*t212*t2024;
  t2031 = t1975 + t2003 + t2029;
  t3981 = -1.*t326*t1984;
  t4868 = Power(t276,2);
  t4896 = Power(t33,2);
  t3990 = -1.*t212*t1966;
  t3944 = t247*t1984;
  t3961 = t270*t1966;
  t2167 = t1992*t293;
  t2171 = t2024*t2095;
  t2189 = t2160 + t2167 + t2171;
  t2275 = -1.*t33*t212*t1992;
  t2284 = t276*t212*t2024;
  t2294 = t2267 + t2275 + t2284;
  t4045 = t326*t1984;
  t4061 = t212*t1966;
  t4121 = -1.*t1966*t506;
  t4124 = -1.*t1984*t440;
  t2327 = -1.*t2024*t2259;
  t2340 = -1.*t1992*t516;
  t2347 = t2325 + t2327 + t2340;
  t2512 = -1.*t1992*t293;
  t2520 = -1.*t2024*t2095;
  t2548 = t2509 + t2512 + t2520;
  t4188 = -1.*t247*t1984;
  t4195 = -1.*t270*t1966;
  t4251 = t1966*t506;
  t4264 = t1984*t440;
  t2588 = t2024*t2259;
  t2607 = t1992*t516;
  t2618 = t2585 + t2588 + t2607;
  t2934 = -1.*t33*t212*t2927;
  t2953 = t276*t212*t2857;
  t2961 = t2917 + t2934 + t2953;
  t4333 = t326*t2793;
  t4396 = t212*t2916;
  t4420 = -1.*t2916*t893;
  t4427 = -1.*t2793*t854;
  t2984 = -1.*t2857*t2874;
  t2991 = -1.*t2927*t925;
  t3003 = t2977 + t2984 + t2991;
  t4503 = t2916*t893;
  t4514 = t2793*t854;
  t3058 = t2857*t2874;
  t3066 = t2927*t925;
  t3077 = t3049 + t3058 + t3066;
  t4560 = -1.*t2916*t1015;
  t4573 = -1.*t2793*t974;
  t3152 = -1.*t2857*t3112;
  t3156 = -1.*t2927*t1027;
  t3157 = t3149 + t3152 + t3156;
  t3251 = t33*t212*t2927;
  t3254 = -1.*t276*t212*t2857;
  t3255 = t3240 + t3251 + t3254;
  t4649 = -1.*t326*t2793;
  t4670 = -1.*t212*t2916;
  t4718 = t2916*t1015;
  t4733 = t2793*t974;
  t3292 = t2857*t3112;
  t3294 = t2927*t1027;
  t3295 = t3283 + t3292 + t3294;
  t5516 = t205*t33*t326;
  t5521 = t32*t3420;
  t5522 = t5516 + t5521;
  t5452 = t47*t237*t52;
  t5455 = -1.*t157*t237*t178;
  t5463 = t5452 + t5455;
  t5482 = -1.*t47*t52*t280;
  t5483 = t157*t178*t280;
  t5489 = t5482 + t5483;
  t5534 = t47*t52*t758;
  t5537 = -1.*t157*t178*t758;
  t5543 = t5534 + t5537;
  t5567 = t47*t52*t578;
  t5571 = -1.*t157*t178*t578;
  t5575 = t5567 + t5571;
  t5635 = -1.*t32*t33*t326;
  t5637 = t205*t3420;
  t5643 = t5635 + t5637;
  t5738 = 0.053565*t47;
  t5747 = -1.*t178*t348;
  t5757 = t5738 + t5747;
  t5839 = 0.032875*t47;
  t5840 = -1.*t178*t697;
  t5841 = t5839 + t5840;
  t3921 = -1.*t212*t1984;
  t3922 = t3921 + t1975;
  t5924 = t52*t1940;
  t5925 = t157*t5757;
  t5927 = t5924 + t5925;
  t5929 = -1.*t52*t5757;
  t5932 = t1945 + t5929;
  t4008 = t270*t1984;
  t4016 = t374*t280;
  t4017 = t4008 + t2160 + t4016;
  t4038 = t212*t1984;
  t4039 = t4038 + t2267;
  t4099 = -1.*t237*t374;
  t4101 = -1.*t1984*t506;
  t4113 = t4099 + t4101 + t2325;
  t4212 = -1.*t270*t1984;
  t4219 = t4212 + t2509 + t377;
  t4224 = t1984*t506;
  t4225 = t386 + t4224 + t2585;
  t4292 = t212*t2793;
  t4304 = t4292 + t2917;
  t6021 = -1.*t52*t5841;
  t6023 = t2882 + t6021;
  t6017 = t52*t2741;
  t6018 = t157*t5841;
  t6019 = t6017 + t6018;
  t4447 = -1.*t645*t578;
  t4460 = -1.*t2793*t893;
  t4461 = t4447 + t4460 + t2977;
  t4541 = t2793*t893;
  t4546 = t788 + t4541 + t3049;
  t4578 = -1.*t2793*t1015;
  t4579 = t660 + t4578 + t3149;
  t4602 = -1.*t212*t2793;
  t4637 = t4602 + t3240;
  t4778 = t645*t658;
  t4787 = t2793*t1015;
  t4792 = t4778 + t4787 + t3283;
  t6122 = 0.02*t47*t52;
  t6123 = t6122 + t1862;
  t5940 = -1.*t326*t5927;
  t5947 = -1.*t3420*t1966;
  t5928 = t247*t5927;
  t5934 = t5463*t1966;
  t5963 = t326*t5927;
  t5965 = t3420*t1966;
  t5972 = -1.*t1966*t5489;
  t5975 = -1.*t5927*t440;
  t5988 = -1.*t247*t5927;
  t5992 = -1.*t5463*t1966;
  t6005 = t1966*t5489;
  t6006 = t5927*t440;
  t6020 = t326*t6019;
  t6028 = t3420*t2916;
  t6032 = -1.*t2916*t5543;
  t6037 = -1.*t6019*t854;
  t6048 = t2916*t5543;
  t6052 = t6019*t854;
  t6058 = -1.*t2916*t5575;
  t6061 = -1.*t6019*t974;
  t6078 = -1.*t326*t6019;
  t6080 = -1.*t3420*t2916;
  t6088 = t2916*t5575;
  t6092 = t6019*t974;
  t6381 = -0.11459*t578;
  t6385 = -1.*t237*t547;
  t6390 = t280*t569;
  t6403 = t6385 + t6390;
  t6404 = -0.081715*t6403;
  t6408 = t6381 + t6404;
  t6471 = 0.04*t237;
  t6472 = t6471 + t346;
  t6528 = 0.242889*t237;
  t6529 = -1.*t237*t630;
  t6530 = -1.*t280*t639;
  t6531 = t6528 + t6529 + t6530;
  t6473 = -1.*t237*t6472;
  t6477 = t4099 + t6473;
  t6478 = -1.*t237*t6477;
  t6481 = t280*t383;
  t6484 = -1.*t237*t405;
  t6486 = -1.*t6472*t280;
  t6488 = t377 + t6486;
  t6489 = -1.*t280*t6488;
  t6492 = t6478 + t6481 + t6484 + t6489;
  t6576 = -1.*t47*t1940*t280;
  t6577 = -1.*t178*t1964*t280;
  t6578 = t386 + t6576 + t6577;
  t6581 = -1.*t47*t237*t1940;
  t6582 = -1.*t237*t178*t1964;
  t6584 = t6581 + t6582 + t377;
  t6592 = Power(t47,2);
  t6600 = Power(t178,2);
  t6624 = t178*t2741;
  t6625 = -1.*t47*t2770;
  t6627 = t6624 + t6625;
  t6526 = -1.*t697*t658;
  t6540 = t645*t758;
  t6545 = t697*t578;
  t6638 = -1.*t47*t2741*t578;
  t6642 = -1.*t178*t2770*t578;
  t6643 = t660 + t6638 + t6642;
  t6662 = t47*t2741*t758;
  t6663 = t178*t2770*t758;
  t6666 = t6662 + t6663 + t788;
  t6524 = -1.*t758*t719;
  t6525 = -1.*t697*t758;
  t6532 = -1.*t6531*t578;
  t6533 = t6525 + t6526 + t6532 + t4447;
  t6536 = -1.*t578*t6533;
  t6537 = -1.*t578*t790;
  t6539 = t6531*t758;
  t6548 = t697*t6403;
  t6549 = t6539 + t6540 + t6545 + t6548;
  t6550 = -1.*t658*t6549;
  t6554 = t6524 + t6536 + t6537 + t6550;
  t5602 = t205*t326;
  t5605 = -1.*t32*t33*t212;
  t5607 = t5602 + t5605;
  t6725 = t205*t854;
  t6730 = t32*t925;
  t6733 = t6725 + t6730;
  t6510 = -1.*t47*t52*t6403;
  t6512 = t157*t178*t6403;
  t6514 = t6510 + t6512;
  t6703 = -1.*t33*t5463;
  t6707 = -1.*t276*t280;
  t6708 = t6703 + t6707;
  t1087 = t32*t247;
  t1102 = -1.*t205*t293;
  t1114 = t1087 + t1102;
  t1173 = t32*t854;
  t1195 = -1.*t205*t925;
  t1215 = t1173 + t1195;
  t1220 = t32*t974;
  t1229 = -1.*t205*t1027;
  t1230 = t1220 + t1229;
  t6744 = t157*t47*t6403;
  t6746 = t52*t178*t6403;
  t6748 = t6744 + t6746;
  t6751 = t276*t758;
  t6754 = -1.*t33*t6514;
  t6756 = t6751 + t6754;
  t6809 = -1.*t47*t52*t6472;
  t6810 = t157*t178*t6472;
  t6811 = t6809 + t6810;
  t6813 = t157*t47*t6472;
  t6817 = t52*t178*t6472;
  t6819 = t6813 + t6817;
  t6608 = t237*t348;
  t6900 = -1.*t47*t52*t6531;
  t6902 = t157*t178*t6531;
  t6906 = t6900 + t6902;
  t6911 = t157*t47*t6531;
  t6912 = t52*t178*t6531;
  t6913 = t6911 + t6912;
  t6821 = -1.*t326*t6819;
  t6832 = t247*t6819;
  t6990 = -1.*t33*t6811;
  t6991 = t276*t348;
  t6992 = t6990 + t6991;
  t6994 = t276*t6811;
  t6995 = t33*t348;
  t6996 = t6994 + t6995;
  t6464 = t276*t5463;
  t6466 = t6464 + t1302;
  t6843 = t326*t6819;
  t6847 = -1.*t3449*t1966;
  t6849 = -1.*t6819*t440;
  t6860 = -1.*t247*t6819;
  t6868 = t3449*t1966;
  t6870 = t6819*t440;
  t6914 = -1.*t326*t6913;
  t6923 = t6913*t974;
  t7068 = t276*t6906;
  t7071 = t33*t697;
  t7072 = t7068 + t7071;
  t7064 = -1.*t33*t6906;
  t7065 = t276*t697;
  t7066 = t7064 + t7065;
  t6938 = t326*t6913;
  t6509 = t33*t758;
  t6518 = t276*t6514;
  t6520 = t6509 + t6518;
  t6945 = -1.*t6913*t854;
  t6947 = -1.*t2916*t6748;
  t6955 = -1.*t6913*t974;
  t6960 = t6913*t854;
  t6965 = t2916*t6748;
  t6380 = -0.0001584575*t758;
  t6414 = 0.03856*t6408;
  t6418 = t6380 + t6414;
  t6420 = -0.5*var2[8]*t6418;
  t6437 = 0.242889*t547;
  t6439 = -1.*t547*t630;
  t6440 = t639*t569;
  t6442 = t6437 + t6439 + t6440;
  t6443 = -0.007922875*t758*t6442;
  t6444 = t547*t639;
  t6445 = -0.242889*t569;
  t6448 = t630*t569;
  t7145 = 0.02*t547;
  t7146 = 0.16*t569;
  t7148 = t7145 + t7146;
  t7140 = -0.16*t547;
  t7141 = t7140 + t638;
  t6450 = t6444 + t6445 + t6448;
  t6451 = -0.241*t6450*t6408;
  t6503 = -0.007922875*t578*t2874;
  t6504 = -0.241*t6408*t2874;
  t6507 = -0.007922875*t758*t3112;
  t6523 = -0.241*t832*t6520;
  t7173 = -1.*t280*t7141;
  t7174 = t237*t7148;
  t7175 = t7173 + t7174;
  t7169 = t237*t7141;
  t7170 = t280*t7148;
  t7171 = t7169 + t7170;
  t6617 = -1.*t178*t2741;
  t6619 = t47*t2770;
  t6622 = t6617 + t6619;
  t6623 = -0.01584575*t6622*t758*t578;
  t6629 = -0.241*t6627*t578*t832;
  t6632 = -0.241*t6627*t658*t6408;
  t6646 = t758*t6643;
  t6667 = t578*t6666;
  t6648 = -1.*t47*t2741*t758;
  t6649 = -1.*t178*t2770*t758;
  t7172 = -1.*t7171*t658;
  t7181 = t7171*t578;
  t6670 = t47*t2741*t6403;
  t6671 = t178*t2770*t6403;
  t6679 = t578*t6643;
  t6680 = t658*t6666;
  t6687 = t6679 + t6680;
  t7176 = -1.*t7175*t578;
  t7178 = t6525 + t7172 + t4447 + t7176;
  t7179 = -1.*t578*t7178;
  t7180 = t7175*t758;
  t7182 = t6540 + t7180 + t7181 + t6548;
  t7183 = -1.*t658*t7182;
  t7184 = t6524 + t6537 + t7179 + t7183;
  t6694 = -0.00052092903125*t758*t578;
  t6695 = -0.482*t832*t6408;
  t6734 = -0.007922875*t578*t6733;
  t6735 = -0.241*t6408*t6733;
  t6736 = t205*t974;
  t6737 = t32*t1027;
  t6740 = t6736 + t6737;
  t6741 = -0.007922875*t758*t6740;
  t6750 = t205*t6748;
  t6757 = t32*t6756;
  t6758 = t6750 + t6757;
  t6761 = -0.241*t832*t6758;
  t6776 = -0.007922875*t578*t1215;
  t6777 = -0.241*t6408*t1215;
  t6778 = -0.007922875*t758*t1230;
  t6780 = t32*t6748;
  t6781 = -1.*t205*t6756;
  t6782 = t6780 + t6781;
  t6784 = -0.241*t832*t6782;
  t6877 = t4304*t854;
  t6880 = t326*t4461;
  t6883 = t6877 + t6880;
  t6885 = -0.007922875*t758*t6883;
  t6886 = t974*t4546;
  t6888 = t854*t4579;
  t6889 = t6886 + t6888;
  t6893 = t4637*t974;
  t6894 = t326*t4792;
  t6896 = t6893 + t6894;
  t6897 = -0.241*t6408*t6896;
  t6899 = t4637*t854;
  t7226 = -1.*t47*t52*t7175;
  t7227 = t157*t178*t7175;
  t7229 = t7226 + t7227;
  t7231 = t157*t47*t7175;
  t7233 = t52*t178*t7175;
  t7235 = t7231 + t7233;
  t6942 = t4304*t6748;
  t6943 = -1.*t645*t758;
  t6946 = -1.*t2793*t6514;
  t6952 = t854*t4546;
  t6953 = t6748*t4579;
  t6963 = t2793*t6514;
  t7057 = t2961*t2874;
  t7058 = t276*t212*t3003;
  t7059 = t7057 + t7058;
  t7061 = -0.007922875*t758*t7059;
  t7086 = t3112*t3077;
  t7087 = t2874*t3157;
  t7088 = t7086 + t7087;
  t7090 = t3255*t3112;
  t7091 = t276*t212*t3295;
  t7094 = t7090 + t7091;
  t7095 = -0.241*t6408*t7094;
  t7062 = t3255*t2874;
  t7236 = -1.*t326*t7235;
  t7244 = t7235*t974;
  t7297 = t276*t7229;
  t7298 = t33*t7171;
  t7300 = t7297 + t7298;
  t7288 = -1.*t33*t7229;
  t7289 = t276*t7171;
  t7295 = t7288 + t7289;
  t7250 = t326*t7235;
  t7101 = t2961*t6520;
  t7256 = -1.*t7235*t854;
  t7104 = -1.*t2857*t6520;
  t7105 = -1.*t2927*t6756;
  t7114 = t2874*t3077;
  t7121 = t6520*t3157;
  t7266 = -1.*t7235*t974;
  t7276 = t7235*t854;
  t7126 = t2857*t6520;
  t7127 = t2927*t6756;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.081793755*t237*(-1.*t205*t247 - 1.*t293*t32) + 0.00482*(-1.*t205*t212 + t191*t32*t33) - 1.527*t342*t414 + 0.081793755*t280*(-1.*t205*t440 - 1.*t32*t516) - 0.241*t342*t794 - 0.241*t832*(-1.*t205*t854 - 1.*t32*t925) - 0.007922875*t578*(-1.*t1027*t32 - 1.*t205*t974))*var2[1] - 0.5*(0.00482*t1067 - 0.081793755*t1114*t237 - 1.527*t1129*t414 + 0.081793755*t280*(t32*t440 - 1.*t205*t516) - 0.007922875*t1230*t578 - 0.241*t1129*t794 - 0.241*t1215*t832)*var2[2])*var2[6];
  p_output1[4]=(-0.5*(-0.081793755*t237*t293 - 0.00482*t191*t33 + 1.527*t212*t33*t414 + 0.081793755*t280*t516 - 0.007922875*t1027*t578 + 0.241*t212*t33*t794 - 0.241*t832*t925)*var2[0] - 0.5*(0.081793755*t1316*t205*t237 + 0.00482*t191*t205*t276 - 0.081793755*t1336*t205*t280 - 1.527*t205*t212*t276*t414 + 0.007922875*t1447*t205*t578 - 0.241*t205*t212*t276*t794 + 0.241*t1416*t205*t832)*var2[1] - 0.5*(-0.081793755*t1316*t237*t32 - 0.00482*t191*t276*t32 + 0.081793755*t1336*t280*t32 + 1.527*t212*t276*t32*t414 - 0.007922875*t1447*t32*t578 + 0.241*t212*t276*t32*t794 - 0.241*t1416*t32*t832)*var2[2] - 0.5*(0.00482*(t212*t276*(-1.*t1702*t276 - 1.*t1732*t276) - 1.*t1849*t212*t33 + t33*(-1.*t1702*t212*t33 - 1.*t1732*t212*t33) + t276*(t1732*t212*t276 + t1876*t326 - 1.*t1817*t212*t33)) + 0.081793755*t280*(t2031*t293 + t212*t276*(t1316*t1992 + t1992*t2095 + t2024*t293 + t2075*t293) - 1.*t212*t2189*t33 + t2095*(t2024*t212*t33 + t2075*t212*t33)) - 0.081793755*t237*(-1.*t212*t2347*t33 + t2259*(-1.*t2024*t212*t33 - 1.*t2075*t212*t33) + t2294*t516 + t212*t276*(-1.*t1336*t1992 - 1.*t1992*t2259 - 1.*t2024*t516 - 1.*t2075*t516)) - 1.527*t414*(t2618*t293 + t2259*(-1.*t1316*t1992 - 1.*t1992*t2095 - 1.*t2024*t293 - 1.*t2075*t293) + t2548*t516 + t2095*(t1336*t1992 + t1992*t2259 + t2024*t516 + t2075*t516)) - 0.241*(t212*t276*(t1027*t2822 + t1027*t2857 + t1447*t2927 + t2927*t3112) + t1027*t3255 - 1.*t212*t3295*t33 + t3112*(t212*t2822*t33 + t212*t2857*t33))*t832 - 0.007922875*t578*(-1.*t212*t3003*t33 + t2874*(-1.*t212*t2822*t33 - 1.*t212*t2857*t33) + t2961*t925 + t212*t276*(-1.*t1416*t2927 - 1.*t2874*t2927 - 1.*t2822*t925 - 1.*t2857*t925)) - 0.241*t794*(t1027*t3077 + t2874*(-1.*t1027*t2822 - 1.*t1027*t2857 - 1.*t1447*t2927 - 1.*t2927*t3112) + t3157*t925 + t3112*(t1416*t2927 + t2874*t2927 + t2822*t925 + t2857*t925)))*var2[3])*var2[6];
  p_output1[5]=(-0.5*(0.00482*t276*t3420 - 0.081793755*t237*t276*t3449 + 0.081793755*t276*t280*t3482 - 1.527*t191*t276*t414 - 0.007922875*t276*t3542*t578 - 0.241*t191*t276*t794 - 0.241*t276*t3497*t832)*var2[0] - 0.5*(0.00482*(t191*t32 + t205*t33*t3420) - 0.081793755*t237*(t270*t32 + t205*t33*t3449) - 1.527*t1067*t414 + 0.081793755*t280*(t205*t33*t3482 + t32*t506) - 0.007922875*(t1015*t32 + t205*t33*t3542)*t578 - 0.241*t1067*t794 - 0.241*t832*(t205*t33*t3497 + t32*t893))*var2[1] - 0.5*(0.00482*(t191*t205 - 1.*t32*t33*t3420) - 0.081793755*t237*(t205*t270 - 1.*t32*t33*t3449) - 1.527*t3822*t414 + 0.081793755*t280*(-1.*t32*t33*t3482 + t205*t506) - 0.007922875*(t1015*t205 - 1.*t32*t33*t3542)*t578 - 0.241*t3822*t794 - 0.241*t832*(-1.*t32*t33*t3497 + t205*t893))*var2[2] - 0.5*(0.081793755*t280*(t191*t2189*t276 + t2031*t276*t3449 + t212*t276*(t2024*t276*t3449 - 1.*t1992*t33*t3449 + t3944 + t2095*t276*t3958 - 1.*t293*t33*t3958 + t3961) + t2095*(-1.*t191*t2024*t276 + t191*t1992*t33 + t3981 + t3990 - 1.*t212*t3958*t4868 - 1.*t212*t3958*t4896)) + 0.00482*(t1849*t191*t276 + t33*(t1876*t212 + t1732*t191*t276 + t1695*t326 - 1.*t1817*t191*t33 + t212*t4868*t4889 + t212*t4889*t4896)) - 1.527*t414*(t2618*t276*t3449 + t2548*t276*t3482 + t2259*(-1.*t2024*t276*t3449 + t1992*t33*t3449 - 1.*t2095*t276*t3958 + t293*t33*t3958 + t4188 + t4195) + t2095*(t2024*t276*t3482 - 1.*t1992*t33*t3482 + t2259*t276*t3958 + t4251 + t4264 - 1.*t33*t3958*t516)) - 0.081793755*t237*(t191*t2347*t276 + t2294*t276*t3482 + t2259*(t191*t2024*t276 - 1.*t191*t1992*t33 + t4045 + t4061 + t212*t3958*t4868 + t212*t3958*t4896) + t212*t276*(-1.*t2024*t276*t3482 + t1992*t33*t3482 - 1.*t2259*t276*t3958 + t4121 + t4124 + t33*t3958*t516)) - 0.241*(t191*t276*t3295 + t276*t3255*t3542 + t212*t276*(t276*t2857*t3542 - 1.*t2927*t33*t3542 + t276*t3112*t4379 - 1.*t1027*t33*t4379 + t4718 + t4733) + t3112*(-1.*t191*t276*t2857 + t191*t2927*t33 + t4649 + t4670 - 1.*t212*t4379*t4868 - 1.*t212*t4379*t4896))*t832 - 0.241*t794*(t276*t3157*t3497 + t276*t3077*t3542 + t2874*(-1.*t276*t2857*t3542 + t2927*t33*t3542 - 1.*t276*t3112*t4379 + t1027*t33*t4379 + t4560 + t4573) + t3112*(t276*t2857*t3497 - 1.*t2927*t33*t3497 + t276*t2874*t4379 + t4503 + t4514 - 1.*t33*t4379*t925)) - 0.007922875*t578*(t191*t276*t3003 + t276*t2961*t3497 + t2874*(t191*t276*t2857 - 1.*t191*t2927*t33 + t4333 + t4396 + t212*t4379*t4868 + t212*t4379*t4896) + t212*t276*(-1.*t276*t2857*t3497 + t2927*t33*t3497 - 1.*t276*t2874*t4379 + t4420 + t4427 + t33*t4379*t925)))*var2[3] - 0.5*(-0.00117072498*t212 + 0.081793755*t280*(t270*t3922 + t326*(t1984*t3449 + t3944 + t270*t3958 + t3961) + t247*(-1.*t191*t1984 - 1.*t212*t3958 + t3981 + t3990) + t212*t4017) - 0.081793755*t237*(t212*t4113 + (t191*t1984 + t212*t3958 + t4045 + t4061)*t440 + t4039*t506 + t326*(-1.*t1984*t3482 + t4121 + t4124 - 1.*t3958*t506)) - 1.527*t414*(t270*t4225 + (-1.*t1984*t3449 - 1.*t270*t3958 + t4188 + t4195)*t440 + t4219*t506 + t247*(t1984*t3482 + t4251 + t4264 + t3958*t506)) - 0.007922875*t578*(t212*t4461 + (t191*t2793 + t4333 + t212*t4379 + t4396)*t854 + t4304*t893 + t326*(-1.*t2793*t3497 + t4420 + t4427 - 1.*t4379*t893)) - 0.241*t832*(t1015*t4637 + t326*(t2793*t3542 + t1015*t4379 + t4718 + t4733) + t212*t4792 + (-1.*t191*t2793 - 1.*t212*t4379 + t4649 + t4670)*t974) - 0.241*t794*(t1015*t4546 + (-1.*t2793*t3542 - 1.*t1015*t4379 + t4560 + t4573)*t854 + t4579*t893 + (t2793*t3497 + t4503 + t4514 + t4379*t893)*t974))*var2[4])*var2[6];
  p_output1[6]=(-0.5*(0.00482*t212*t276 - 0.081793755*t237*t247*t276 - 1.527*t276*t326*t414 + 0.081793755*t276*t280*t440 - 0.241*t276*t326*t794 - 0.241*t276*t832*t854 - 0.007922875*t276*t578*t974)*var2[0] - 0.5*(0.00482*t1129 - 0.081793755*t237*(t205*t247*t33 + t32*t5463) + 0.081793755*t280*(t205*t33*t440 + t32*t5489) - 1.527*t414*t5522 - 0.241*t5522*t794 - 0.241*t832*(t32*t5543 + t205*t33*t854) - 0.007922875*t578*(t32*t5575 + t205*t33*t974))*var2[1] - 0.5*(-0.081793755*t237*(-1.*t247*t32*t33 + t205*t5463) + 0.081793755*t280*(-1.*t32*t33*t440 + t205*t5489) + 0.00482*t5607 - 1.527*t414*t5643 - 0.241*t5643*t794 - 0.241*t832*(t205*t5543 - 1.*t32*t33*t854) - 0.007922875*t578*(t205*t5575 - 1.*t32*t33*t974))*var2[2] - 0.5*(0.081793755*t280*(t2031*t247*t276 + t2189*t276*t326 + t212*t276*(t2024*t247*t276 - 1.*t1992*t247*t33 + t5928 + t2095*t276*t5932 - 1.*t293*t33*t5932 + t5934) + t2095*(-1.*t2024*t276*t326 + t1992*t326*t33 - 1.*t212*t4868*t5932 - 1.*t212*t4896*t5932 + t5940 + t5947)) - 0.081793755*t237*(t2347*t276*t326 + t2294*t276*t440 + t2259*(t2024*t276*t326 - 1.*t1992*t326*t33 + t212*t4868*t5932 + t212*t4896*t5932 + t5963 + t5965) + t212*t276*(-1.*t2024*t276*t440 + t1992*t33*t440 - 1.*t2259*t276*t5932 + t33*t516*t5932 + t5972 + t5975)) - 1.527*t414*(t247*t2618*t276 + t2548*t276*t440 + t2259*(-1.*t2024*t247*t276 + t1992*t247*t33 - 1.*t2095*t276*t5932 + t293*t33*t5932 + t5988 + t5992) + t2095*(t2024*t276*t440 - 1.*t1992*t33*t440 + t2259*t276*t5932 - 1.*t33*t516*t5932 + t6005 + t6006)) + 0.00482*(t1849*t276*t326 + t33*(t1732*t276*t326 - 1.*t1817*t326*t33 + t1876*t3420 + t326*(-0.02*t157*t47 - 0.02*t178*t52) + t212*t4868*t6123 + t212*t4896*t6123)) - 0.007922875*t578*(t276*t3003*t326 + t2874*(t276*t2857*t326 - 1.*t2927*t326*t33 + t6020 + t212*t4868*t6023 + t212*t4896*t6023 + t6028) + t276*t2961*t854 + t212*t276*(-1.*t276*t2874*t6023 + t6032 + t6037 - 1.*t276*t2857*t854 + t2927*t33*t854 + t33*t6023*t925)) - 0.241*t832*(t276*t326*t3295 + t3112*(-1.*t276*t2857*t326 + t2927*t326*t33 - 1.*t212*t4868*t6023 - 1.*t212*t4896*t6023 + t6078 + t6080) + t276*t3255*t974 + t212*t276*(t276*t3112*t6023 - 1.*t1027*t33*t6023 + t6088 + t6092 + t276*t2857*t974 - 1.*t2927*t33*t974)) - 0.241*t794*(t276*t3157*t854 + t3112*(t276*t2874*t6023 + t6048 + t6052 + t276*t2857*t854 - 1.*t2927*t33*t854 - 1.*t33*t6023*t925) + t276*t3077*t974 + t2874*(-1.*t276*t3112*t6023 + t1027*t33*t6023 + t6058 + t6061 - 1.*t276*t2857*t974 + t2927*t33*t974)))*var2[3] - 0.5*(-0.00117072498*t3420 + 0.081793755*t280*(t3420*t4017 + t3922*t5463 + t326*(t3944 + t5928 + t270*t5932 + t5934) + t247*(t3981 - 1.*t212*t5932 + t5940 + t5947)) - 0.081793755*t237*(t3420*t4113 + t4039*t5489 + t440*(t4045 + t212*t5932 + t5963 + t5965) + t326*(t4124 - 1.*t506*t5932 + t5972 + t5975)) - 1.527*t414*(t4225*t5463 + t4219*t5489 + t440*(t4188 - 1.*t270*t5932 + t5988 + t5992) + t247*(t4264 + t506*t5932 + t6005 + t6006)) - 0.007922875*t578*(t3420*t4461 + t4304*t5543 + (t4333 + t6020 + t212*t6023 + t6028)*t854 + t326*(t4427 + t6032 + t6037 - 1.*t6023*t893)) - 0.241*t832*(t3420*t4792 + t4637*t5575 + t326*(t4733 + t1015*t6023 + t6088 + t6092) + (t4649 - 1.*t212*t6023 + t6078 + t6080)*t974) - 0.241*t794*(t4579*t5543 + t4546*t5575 + (t4573 - 1.*t1015*t6023 + t6058 + t6061)*t854 + (t4514 + t6048 + t6052 + t6023*t893)*t974))*var2[4] - 0.5*(0.00482*(-1.*t1646*t178 + 0.02*t178*t47) - 0.081793755*Power(t237,2)*(-1.*t178*t1964 - 1.*t178*t5757) + 0.081793755*Power(t280,2)*(t178*t1964 + t178*t5757) - 1.527*t414*(t237*(-1.*t1964*t237*t47 - 1.*t237*t47*t5757) + t280*(-1.*t1964*t280*t47 - 1.*t280*t47*t5757)) - 0.007922875*Power(t578,2)*(-1.*t178*t2770 - 1.*t178*t5841) - 0.241*(t578*(-1.*t2770*t47*t578 - 1.*t47*t578*t5841) + t658*(t2770*t47*t758 + t47*t5841*t758))*t794 - 0.241*(t178*t2770 + t178*t5841)*t658*t832)*var2[5])*var2[6];
  p_output1[7]=var2[6]*(t6420 - 0.5*(0.081793755*t2095*t280 + 0.081793755*t280*t6466 - 1.527*t212*t276*t6492 + t6503 + t6504 + t6507 + t6523 - 0.241*t212*t276*t6554)*var2[0] - 0.5*(0.081793755*t1114*t280 - 1.527*t1129*t6492 - 0.241*t1129*t6554 + 0.081793755*t280*(t32*t3449 - 1.*t205*t6708) + t6776 + t6777 + t6778 + t6784)*var2[1] - 0.5*(0.081793755*t280*(t205*t247 + t293*t32) - 1.527*t5607*t6492 - 0.241*t5607*t6554 + 0.081793755*t280*(t205*t3449 + t32*t6708) + t6734 + t6735 + t6741 + t6761)*var2[2] - 0.5*(0.081793755*t237*(t2031*t2095 + t212*t2189*t276) + 0.081793755*(t2259*t2294 + t212*t2347*t276)*t280 - 1.527*(t2259*t2548 + t2095*t2618)*t6492 - 1.527*t414*(t2259*t2618 + t2548*t6466 + t2259*(t2325 + t2327 + t2340 + t6860 - 1.*t293*t6992 - 1.*t2095*t6996) + t2095*(t2024*t6466 + t1992*t6708 + t6868 + t6870 + t516*t6992 + t2259*t6996)) + 0.081793755*t280*(t2031*t2259 + t212*t276*(t2585 + t2588 + t2607 + t6832 + t293*t6992 + t2095*t6996) + t2095*(t6821 + t212*t33*t6992 - 1.*t212*t276*t6996)) - 0.081793755*t237*(t2294*t6466 + t212*t276*(-1.*t2024*t6466 - 1.*t1992*t6708 + t6847 + t6849 - 1.*t516*t6992 - 1.*t2259*t6996) + t2259*(t6843 - 1.*t212*t33*t6992 + t212*t276*t6996)) + t7061 - 0.241*t6554*t7088 + t7095 - 0.241*(t7062 + t3112*(t6914 + t212*t33*t7066 - 1.*t212*t276*t7072) + t212*t276*(t3049 + t3058 + t3066 + t6923 + t1027*t7066 + t3112*t7072))*t832 - 0.007922875*t578*(t2874*(t6938 - 1.*t212*t33*t7066 + t212*t276*t7072) + t7101 + t212*t276*(t6945 + t6947 - 1.*t2874*t7072 + t7104 + t7105 - 1.*t7066*t925)) - 0.241*t794*(t2874*(t2977 + t2984 + t2991 + t6955 - 1.*t1027*t7066 - 1.*t3112*t7072) + t7114 + t7121 + t3112*(t6960 + t6965 + t2874*t7072 + t7126 + t7127 + t7066*t925)))*var2[3] - 0.5*(0.081793755*t237*(t247*t3922 + t326*t4017) + 0.081793755*t280*(t326*t4113 + t4039*t440) - 1.527*(t247*t4225 + t4219*t440)*t6492 + 0.081793755*t280*(t3922*t440 + t247*(-1.*t212*t6811 + t6821) + t326*(t2585 + t280*t348 + t386 + t4224 + t270*t6811 + t6832)) - 0.081793755*t237*(t3449*t4039 + t440*(t212*t6811 + t6843) + t326*(t349 + t4016 - 1.*t1984*t5463 - 1.*t506*t6811 + t6847 + t6849)) - 1.527*t414*(t3449*t4219 + t4225*t440 + t440*(t2325 + t396 + t4099 + t4101 - 1.*t270*t6811 + t6860) + t247*(t377 + t1984*t5463 + t6608 + t506*t6811 + t6868 + t6870)) + t6885 - 0.241*t6554*t6889 + t6897 - 0.007922875*t578*(t6942 + (t212*t6906 + t6938)*t854 + t326*(t6943 + t6945 + t6946 + t6947 + t713 - 1.*t6906*t893)) - 0.241*t832*(t6899 + t326*(t3049 + t4541 + t1015*t6906 + t6923 + t658*t697 + t788) + (-1.*t212*t6906 + t6914)*t974) - 0.241*t794*(t6952 + t6953 + (t2977 + t4447 + t4460 + t6526 - 1.*t1015*t6906 + t6955)*t854 + (t6540 + t6545 + t6960 + t6963 + t6965 + t6906*t893)*t974))*var2[4] - 0.5*(0.16358751*t237*t280*(t178*t1940 - 1.*t1964*t47) + 0.16358751*t237*t280*(-1.*t178*t1940 + t1964*t47) - 1.527*t6492*(t280*t6578 + t237*t6584) - 1.527*t414*(t237*t6578 - 1.*t280*t6584 + t237*(t178*t1964*t280 + t396 + t4099 + t1940*t280*t47 - 1.*t237*t6472*t6592 - 1.*t237*t6472*t6600) + t280*(t377 + t6581 + t6582 - 1.*t280*t6472*t6592 - 1.*t280*t6472*t6600 + t6608)) + t6623 + t6629 + t6632 - 0.241*t6554*t6687 - 0.241*(t6646 + t578*(t4447 + t6526 - 1.*t578*t6531*t6592 - 1.*t578*t6531*t6600 + t6648 + t6649) + t6667 + t658*(t6540 + t6545 + t6670 + t6671 + t6531*t6592*t758 + t6531*t6600*t758))*t794)*var2[5] - 0.5*(-3.054*t414*t6492 + t6694 + t6695 - 0.482*t6554*t794)*var2[6] - 0.5*(-0.0032717502*t237 + 0.0032717502*t280 + t6443 + t6451)*var2[7]);
  p_output1[8]=var2[6]*(t6420 - 0.5*(t6503 + t6504 + t6507 + t6523 - 0.241*t212*t276*t7184)*var2[0] - 0.5*(t6776 + t6777 + t6778 + t6784 - 0.241*t1129*t7184)*var2[1] - 0.5*(t6734 + t6735 + t6741 + t6761 - 0.241*t5607*t7184)*var2[2] - 0.5*(t7061 + t7095 - 0.241*t7088*t7184 - 0.241*(t7062 + t3112*(t7236 + t212*t33*t7295 - 1.*t212*t276*t7300) + t212*t276*(t3049 + t3058 + t3066 + t7244 + t1027*t7295 + t3112*t7300))*t832 - 0.007922875*t578*(t7101 + t2874*(t7250 - 1.*t212*t33*t7295 + t212*t276*t7300) + t212*t276*(t6947 + t7104 + t7105 + t7256 - 1.*t2874*t7300 - 1.*t7295*t925)) - 0.241*t794*(t7114 + t7121 + t2874*(t2977 + t2984 + t2991 + t7266 - 1.*t1027*t7295 - 1.*t3112*t7300) + t3112*(t6965 + t7126 + t7127 + t7276 + t2874*t7300 + t7295*t925)))*var2[3] - 0.5*(t6885 + t6897 - 0.241*t6889*t7184 - 0.007922875*t578*(t6942 + (t212*t7229 + t7250)*t854 + t326*(t6943 + t6946 + t6947 - 1.*t578*t7171 + t7256 - 1.*t7229*t893)) - 0.241*t832*(t6899 + t326*(t3049 + t4541 + t658*t7171 + t1015*t7229 + t7244 + t788) + (-1.*t212*t7229 + t7236)*t974) - 0.241*t794*(t6952 + t6953 + (t2977 + t4447 + t4460 + t7172 - 1.*t1015*t7229 + t7266)*t854 + (t6540 + t6963 + t6965 + t7181 + t7276 + t7229*t893)*t974))*var2[4] - 0.5*(t6623 + t6629 + t6632 - 0.241*t6687*t7184 - 0.241*(t6646 + t6667 + t578*(t4447 + t6648 + t6649 + t7172 - 1.*t578*t6592*t7175 - 1.*t578*t6600*t7175) + t658*(t6540 + t6670 + t6671 + t7181 + t6592*t7175*t758 + t6600*t7175*t758))*t794)*var2[5] - 0.5*(t6694 + t6695 - 0.482*t7184*t794)*var2[6] - 0.5*(t6443 + t6451 - 0.007922875*t578*(t6444 + t6445 + t6448 - 1.*t547*t7141 + t569*t7148) - 0.241*(-0.242889*t547 + t547*t630 - 1.*t569*t639 + t569*t7141 + t547*t7148)*t832)*var2[7]);
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec7_plane.hh"

namespace SymFunction
{

void Ce3_vec7_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
