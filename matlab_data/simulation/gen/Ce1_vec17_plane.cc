/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:11:47 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t272;
  double t103;
  double t207;
  double t339;
  double t426;
  double t514;
  double t427;
  double t850;
  double t975;
  double t851;
  double t856;
  double t1334;
  double t1506;
  double t1509;
  double t1152;
  double t1178;
  double t1188;
  double t1190;
  double t870;
  double t880;
  double t1104;
  double t1115;
  double t1813;
  double t1832;
  double t1858;
  double t390;
  double t445;
  double t452;
  double t510;
  double t673;
  double t816;
  double t821;
  double t834;
  double t1128;
  double t1146;
  double t1195;
  double t1213;
  double t1666;
  double t1707;
  double t1717;
  double t1722;
  double t2735;
  double t3549;
  double t4071;
  double t4096;
  double t4118;
  double t3520;
  double t3546;
  double t3555;
  double t3699;
  double t3773;
  double t3901;
  double t3902;
  double t3952;
  double t3996;
  double t4286;
  double t4288;
  double t4289;
  double t4357;
  double t4371;
  double t4389;
  double t2188;
  double t2191;
  double t2153;
  double t2166;
  double t4561;
  double t4563;
  double t4506;
  double t4524;
  double t4543;
  double t2335;
  double t2519;
  double t2290;
  double t2312;
  double t3088;
  double t3125;
  double t3168;
  double t4767;
  double t4930;
  double t4953;
  double t5351;
  double t5352;
  double t5360;
  double t5447;
  double t5600;
  double t5633;
  double t6328;
  double t6457;
  double t6492;
  double t8760;
  double t9092;
  double t1554;
  double t1601;
  double t1662;
  double t1951;
  double t1986;
  double t2057;
  double t2825;
  double t8785;
  double t9111;
  double t9123;
  double t9131;
  double t9154;
  double t9160;
  double t9168;
  double t9173;
  double t2182;
  double t2218;
  double t2246;
  double t2320;
  double t2576;
  double t2595;
  double t2873;
  double t2875;
  double t2937;
  double t7028;
  double t7219;
  double t7454;
  double t6090;
  double t6671;
  double t6760;
  double t10565;
  double t10567;
  double t10569;
  double t7615;
  double t7675;
  double t7805;
  double t7884;
  double t10584;
  double t10592;
  double t10599;
  double t10623;
  double t10636;
  double t10641;
  double t10653;
  double t10682;
  double t10716;
  double t10730;
  double t10748;
  double t10767;
  double t10786;
  double t10787;
  double t10789;
  double t10797;
  double t10813;
  double t10818;
  double t10824;
  double t10829;
  double t4428;
  double t4479;
  double t4544;
  double t4550;
  double t4680;
  double t4705;
  double t10935;
  double t11046;
  double t11057;
  double t11062;
  double t5095;
  double t5271;
  double t5335;
  double t11152;
  double t11217;
  double t11227;
  double t11266;
  double t9200;
  double t9207;
  double t9233;
  double t9281;
  double t9284;
  double t9332;
  double t9396;
  double t9410;
  double t9412;
  double t9421;
  double t9436;
  double t9455;
  double t9456;
  double t9513;
  double t9931;
  double t10018;
  double t10069;
  double t11495;
  double t11497;
  double t11528;
  double t11537;
  double t11549;
  double t11557;
  double t11558;
  double t11559;
  double t10218;
  double t10392;
  double t10453;
  double t10466;
  double t10528;
  double t11790;
  double t11792;
  double t11824;
  double t11826;
  double t11829;
  double t11835;
  double t11844;
  double t11845;
  double t10855;
  double t10856;
  double t10857;
  double t10571;
  double t10575;
  double t10579;
  double t11326;
  double t11336;
  double t11349;
  double t11378;
  double t12012;
  double t12013;
  double t12014;
  double t12033;
  double t12041;
  double t12047;
  double t12006;
  double t12026;
  double t12027;
  double t12109;
  double t12110;
  double t12115;
  double t12116;
  double t12117;
  double t12123;
  double t12205;
  double t12210;
  double t12218;
  double t12232;
  double t12234;
  double t12162;
  double t12185;
  double t12186;
  double t12253;
  double t12255;
  double t12258;
  double t12272;
  double t12276;
  double t12277;
  double t12280;
  double t12284;
  double t12285;
  double t12289;
  double t12294;
  double t12296;
  double t11976;
  double t11989;
  double t12001;
  double t12204;
  double t12238;
  double t12242;
  double t12286;
  double t12300;
  double t12303;
  double t12312;
  double t12317;
  double t12318;
  double t12032;
  double t12050;
  double t12102;
  double t11971;
  double t11973;
  double t11974;
  double t3069;
  double t3171;
  double t3207;
  double t12108;
  double t12133;
  double t4719;
  double t4954;
  double t4959;
  double t12703;
  double t12707;
  double t12711;
  double t12713;
  double t12714;
  double t12734;
  double t12738;
  double t12739;
  double t12700;
  double t12718;
  double t12692;
  double t12655;
  double t12820;
  double t12822;
  double t12823;
  double t12824;
  double t12831;
  double t12832;
  double t12793;
  double t12796;
  double t12806;
  double t12766;
  double t12768;
  double t12771;
  double t12855;
  double t12856;
  double t12870;
  double t12874;
  double t12879;
  double t12889;
  double t12902;
  double t12675;
  double t12698;
  double t12699;
  double t12780;
  double t12812;
  double t12813;
  double t12834;
  double t12836;
  double t12877;
  double t12907;
  double t12910;
  double t12842;
  double t12850;
  double t12923;
  double t12957;
  double t12958;
  double t12729;
  double t12744;
  double t12751;
  double t5430;
  double t5844;
  double t5888;
  double t13207;
  double t13208;
  double t13209;
  double t12251;
  double t12311;
  double t12323;
  double t12342;
  double t12346;
  double t12347;
  double t12353;
  double t12363;
  double t12373;
  double t12388;
  double t12393;
  double t12411;
  double t12413;
  double t12417;
  double t12421;
  double t12422;
  double t12495;
  double t12508;
  double t12515;
  double t12524;
  double t12525;
  double t12538;
  double t12539;
  double t12552;
  double t12567;
  double t12590;
  double t12592;
  double t12604;
  double t12606;
  double t12616;
  double t12619;
  double t12625;
  double t13281;
  double t13282;
  double t13290;
  double t13297;
  double t13300;
  double t13303;
  double t12981;
  double t12982;
  double t12987;
  double t12988;
  double t13277;
  double t13040;
  double t13042;
  double t13044;
  double t13048;
  double t13279;
  double t13097;
  double t13098;
  double t13101;
  double t13105;
  double t13155;
  double t13158;
  double t13173;
  double t13182;
  double t13433;
  double t13434;
  double t13435;
  double t7684;
  double t13565;
  double t13548;
  double t13550;
  double t13554;
  double t8077;
  double t13661;
  double t13664;
  double t13680;
  double t13683;
  double t13687;
  double t13671;
  double t13672;
  double t13674;
  double t13677;
  double t13688;
  double t13689;
  double t13698;
  double t13706;
  double t13709;
  double t2946;
  double t2950;
  double t13767;
  double t13775;
  double t13776;
  double t13777;
  double t13785;
  double t13788;
  double t13793;
  double t13794;
  double t13778;
  double t13779;
  double t13780;
  double t13786;
  double t13795;
  double t13796;
  double t13799;
  double t13800;
  double t13805;
  double t13766;
  double t13872;
  double t13875;
  double t13876;
  double t13906;
  double t13919;
  double t13927;
  double t13936;
  double t13945;
  double t13947;
  double t13810;
  double t13877;
  double t13886;
  double t13897;
  double t13819;
  double t13827;
  double t13933;
  double t13949;
  double t13950;
  double t13953;
  double t13957;
  double t13958;
  double t13837;
  double t13846;
  double t13850;
  double t13851;
  double t12372;
  double t12107;
  double t12475;
  double t12570;
  double t12759;
  double t12816;
  double t13006;
  double t13008;
  double t13073;
  double t13075;
  double t13126;
  double t13127;
  double t14042;
  double t14044;
  double t14049;
  double t13220;
  double t14051;
  double t14066;
  double t13196;
  double t14078;
  double t14080;
  double t14082;
  double t14085;
  double t14114;
  double t14116;
  double t14117;
  double t14129;
  double t13246;
  double t14137;
  double t13257;
  double t14149;
  double t14151;
  double t14161;
  double t14162;
  double t14171;
  double t14174;
  double t13278;
  double t13280;
  double t13315;
  double t13316;
  double t14204;
  double t14206;
  double t14207;
  double t14212;
  double t14213;
  double t13350;
  double t13351;
  double t13397;
  double t13398;
  double t14235;
  double t14237;
  double t14238;
  double t13675;
  double t13715;
  double t13716;
  double t13733;
  double t13744;
  double t13745;
  double t13782;
  double t13811;
  double t13838;
  double t13848;
  double t14402;
  double t13904;
  double t14409;
  double t14413;
  double t13971;
  double t14421;
  double t13995;
  double t14428;
  double t14429;
  double t14003;
  double t14521;
  double t14522;
  double t14523;
  double t14524;
  double t14527;
  double t14528;
  double t14529;
  double t14530;
  double t14591;
  double t14595;
  double t14597;
  double t14598;
  double t14599;
  t272 = Cos(var1[16]);
  t103 = Cos(var1[4]);
  t207 = Cos(var1[15]);
  t339 = Cos(var1[5]);
  t426 = Sin(var1[15]);
  t514 = Sin(var1[16]);
  t427 = Sin(var1[5]);
  t850 = Cos(var1[17]);
  t975 = Sin(var1[17]);
  t851 = -1.*t850;
  t856 = 1. + t851;
  t1334 = -1.*t850*t514;
  t1506 = -1.*t272*t975;
  t1509 = 0. + t1334 + t1506;
  t1152 = -0.336601*t856;
  t1178 = -0.356601*t850;
  t1188 = -0.16*t975;
  t1190 = 0. + t1152 + t1178 + t1188;
  t870 = -0.20833*t856;
  t880 = -0.36833*t850;
  t1104 = 0.020000000000000018*t975;
  t1115 = 0. + t870 + t880 + t1104;
  t1813 = t272*t850;
  t1832 = -1.*t514*t975;
  t1858 = 0. + t1813 + t1832;
  t390 = -1.*t207*t272*t339;
  t445 = t272*t426*t427;
  t452 = t390 + t445;
  t510 = 0.06108*t103*t452;
  t673 = t207*t339*t514;
  t816 = -1.*t426*t514*t427;
  t821 = t673 + t816;
  t834 = -0.06108*t103*t821;
  t1128 = t850*t1115;
  t1146 = 0.194401*t975;
  t1195 = t1190*t975;
  t1213 = 0. + t1128 + t1146 + t1195;
  t1666 = -0.194401*t850;
  t1707 = -1.*t850*t1190;
  t1717 = t1115*t975;
  t1722 = 0. + t1666 + t1707 + t1717;
  t2735 = Sin(var1[4]);
  t3549 = t1334 + t1506;
  t4071 = -1.*t272*t850;
  t4096 = t514*t975;
  t4118 = t4071 + t4096;
  t3520 = t1813 + t1832;
  t3546 = t3520*t2735;
  t3555 = -1.*t339*t426*t3549;
  t3699 = -1.*t207*t3549*t427;
  t3773 = t3555 + t3699;
  t3901 = t103*t3773;
  t3902 = t3546 + t3901;
  t3952 = 0.241*t1722*t3902;
  t3996 = t3549*t2735;
  t4286 = -1.*t339*t426*t4118;
  t4288 = -1.*t207*t4118*t427;
  t4289 = t4286 + t4288;
  t4357 = t103*t4289;
  t4371 = t3996 + t4357;
  t4389 = 0.241*t1213*t4371;
  t2188 = -1.*t426*t1509;
  t2191 = 0. + t2188;
  t2153 = t207*t1509;
  t2166 = 0. + t2153;
  t4561 = -0.16*t850;
  t4563 = t4561 + t1104;
  t4506 = 0.020000000000000018*t850;
  t4524 = 0.16*t975;
  t4543 = t4506 + t4524;
  t2335 = -1.*t426*t1858;
  t2519 = 0. + t2335;
  t2290 = t207*t1858;
  t2312 = 0. + t2290;
  t3088 = t339*t426*t514;
  t3125 = t207*t514*t427;
  t3168 = t3088 + t3125;
  t4767 = t339*t2191;
  t4930 = -1.*t2166*t427;
  t4953 = 0. + t4767 + t4930;
  t5351 = t850*t514;
  t5352 = t272*t975;
  t5360 = 0. + t5351 + t5352;
  t5447 = t339*t2519;
  t5600 = -1.*t2312*t427;
  t5633 = 0. + t5447 + t5600;
  t6328 = -1.*t272*t339*t426;
  t6457 = -1.*t207*t272*t427;
  t6492 = t6328 + t6457;
  t8760 = Cos(var1[3]);
  t9092 = Sin(var1[3]);
  t1554 = -1.*t207*t339*t1509;
  t1601 = t426*t1509*t427;
  t1662 = t1554 + t1601;
  t1951 = -1.*t207*t339*t1858;
  t1986 = t426*t1858*t427;
  t2057 = t1951 + t1986;
  t2825 = -1.*t514*t2735;
  t8785 = t8760*t6492;
  t9111 = t9092*t2735*t452;
  t9123 = t8785 + t9111;
  t9131 = 0.06108*t9123;
  t9154 = t8760*t3168;
  t9160 = t9092*t2735*t821;
  t9168 = t9154 + t9160;
  t9173 = -0.06108*t9168;
  t2182 = -1.*t339*t2166;
  t2218 = -1.*t2191*t427;
  t2246 = t2182 + t2218;
  t2320 = -1.*t339*t2312;
  t2576 = -1.*t2519*t427;
  t2595 = t2320 + t2576;
  t2873 = t272*t339*t426;
  t2875 = t207*t272*t427;
  t2937 = t2873 + t2875;
  t7028 = t272*t103;
  t7219 = -1.*t2735*t3168;
  t7454 = t7028 + t7219;
  t6090 = t103*t514;
  t6671 = -1.*t2735*t6492;
  t6760 = t6090 + t6671;
  t10565 = -1.*t207*t339*t514;
  t10567 = t426*t514*t427;
  t10569 = t10565 + t10567;
  t7615 = t103*t1858;
  t7675 = -1.*t2735*t4953;
  t7805 = t103*t5360;
  t7884 = -1.*t2735*t5633;
  t10584 = t207*t339*t3549;
  t10592 = -1.*t426*t3549*t427;
  t10599 = t10584 + t10592;
  t10623 = t8760*t10599;
  t10636 = t103*t3520;
  t10641 = -1.*t2735*t3773;
  t10653 = t10636 + t10641;
  t10682 = -1.*t9092*t10653;
  t10716 = t10623 + t10682;
  t10730 = 0.241*t1722*t10716;
  t10748 = t207*t339*t4118;
  t10767 = -1.*t426*t4118*t427;
  t10786 = t10748 + t10767;
  t10787 = t8760*t10786;
  t10789 = t103*t3549;
  t10797 = -1.*t2735*t4289;
  t10813 = t10789 + t10797;
  t10818 = -1.*t9092*t10813;
  t10824 = t10787 + t10818;
  t10829 = 0.241*t1213*t10824;
  t4428 = 0.194401*t850;
  t4479 = t850*t1190;
  t4544 = t850*t4543;
  t4550 = -1.*t1115*t975;
  t4680 = t4563*t975;
  t4705 = t4428 + t4479 + t4544 + t4550 + t4680;
  t10935 = t339*t2166;
  t11046 = t2191*t427;
  t11057 = 0. + t10935 + t11046;
  t11062 = 0. + t7615 + t7675;
  t5095 = -1.*t850*t4563;
  t5271 = t4543*t975;
  t5335 = t1128 + t5095 + t1146 + t1195 + t5271;
  t11152 = t339*t2312;
  t11217 = t2519*t427;
  t11227 = 0. + t11152 + t11217;
  t11266 = 0. + t7805 + t7884;
  t9200 = -1.*t339*t426*t1509;
  t9207 = -1.*t207*t1509*t427;
  t9233 = t9200 + t9207;
  t9281 = -1.*t339*t426*t1858;
  t9284 = -1.*t207*t1858*t427;
  t9332 = t9281 + t9284;
  t9396 = -1.*t103*t6492;
  t9410 = t2825 + t9396;
  t9412 = -1.*t272*t2735;
  t9421 = -1.*t103*t3168;
  t9436 = t9412 + t9421;
  t9455 = -1.*t1858*t2735;
  t9456 = -1.*t103*t4953;
  t9513 = t9455 + t9456;
  t9931 = -1.*t5360*t2735;
  t10018 = -1.*t103*t5633;
  t10069 = t9931 + t10018;
  t11495 = t9092*t6492;
  t11497 = -1.*t8760*t2735*t452;
  t11528 = t11495 + t11497;
  t11537 = 0.06108*t11528;
  t11549 = t9092*t3168;
  t11557 = -1.*t8760*t2735*t821;
  t11558 = t11549 + t11557;
  t11559 = -0.06108*t11558;
  t10218 = t4767 + t4930;
  t10392 = t5447 + t5600;
  t10453 = -1.*t103*t514;
  t10466 = -1.*t2735*t2937;
  t10528 = t10453 + t10466;
  t11790 = t9092*t10599;
  t11792 = t8760*t10653;
  t11824 = t11790 + t11792;
  t11826 = 0.241*t1722*t11824;
  t11829 = t9092*t10786;
  t11835 = t8760*t10813;
  t11844 = t11829 + t11835;
  t11845 = 0.241*t1213*t11844;
  t10855 = t207*t272*t339;
  t10856 = -1.*t272*t426*t427;
  t10857 = t10855 + t10856;
  t10571 = t8760*t10569;
  t10575 = -1.*t9092*t7454;
  t10579 = t10571 + t10575;
  t11326 = t8760*t11057;
  t11336 = -1.*t9092*t11062;
  t11349 = t8760*t11227;
  t11378 = -1.*t9092*t11266;
  t12012 = -0.04*t272;
  t12013 = 0.04*t514;
  t12014 = t12012 + t12013;
  t12033 = -0.055855*t426;
  t12041 = -1.*t207*t12014;
  t12047 = t12033 + t12041;
  t12006 = 0.055855*t207;
  t12026 = -1.*t426*t12014;
  t12027 = t12006 + t12026;
  t12109 = t207*t339;
  t12110 = -1.*t426*t427;
  t12115 = t12109 + t12110;
  t12116 = t339*t12047;
  t12117 = -1.*t12027*t427;
  t12123 = t12116 + t12117;
  t12205 = -1.*t207;
  t12210 = 1. + t12205;
  t12218 = 0.081715*t12210;
  t12232 = 0.13757*t207;
  t12234 = t12218 + t12232 + t12026;
  t12162 = 0.055855*t426;
  t12185 = t207*t12014;
  t12186 = t12162 + t12185;
  t12253 = -1.*t339*t426;
  t12255 = -1.*t207*t427;
  t12258 = t12253 + t12255;
  t12272 = -1.*t272;
  t12276 = 1. + t12272;
  t12277 = -0.194401*t12276;
  t12280 = -0.234401*t272;
  t12284 = -0.04*t514;
  t12285 = t12277 + t12280 + t12284;
  t12289 = t339*t12234;
  t12294 = -1.*t12186*t427;
  t12296 = t12289 + t12294;
  t11976 = t339*t426;
  t11989 = t207*t427;
  t12001 = t11976 + t11989;
  t12204 = t339*t12186;
  t12238 = t12234*t427;
  t12242 = t12204 + t12238;
  t12286 = t12285*t2735;
  t12300 = t103*t12296;
  t12303 = t12286 + t12300;
  t12312 = t103*t12285;
  t12317 = -1.*t2735*t12296;
  t12318 = t12312 + t12317;
  t12032 = t339*t12027;
  t12050 = t12047*t427;
  t12102 = t12032 + t12050;
  t11971 = t514*t2735;
  t11973 = t103*t6492;
  t11974 = t11971 + t11973;
  t3069 = t272*t2735;
  t3171 = t103*t3168;
  t3207 = t3069 + t3171;
  t12108 = Power(t103,2);
  t12133 = Power(t2735,2);
  t4719 = t1858*t2735;
  t4954 = t103*t4953;
  t4959 = 0. + t4719 + t4954;
  t12703 = -0.194401*t514;
  t12707 = -1.*t514*t1190;
  t12711 = t272*t1115;
  t12713 = 0. + t12703 + t12707 + t12711;
  t12714 = -1.*t426*t12713;
  t12734 = -0.035165*t426;
  t12738 = -1.*t207*t12713;
  t12739 = t12734 + t12738;
  t12700 = 0.035165*t207;
  t12718 = t12700 + t12714;
  t12692 = 0. + t207;
  t12655 = 0. + t426;
  t12820 = t339*t12739;
  t12822 = -1.*t12718*t427;
  t12823 = t12820 + t12822;
  t12824 = t12692*t339;
  t12831 = -1.*t12655*t427;
  t12832 = 0. + t12824 + t12831;
  t12793 = 0.081715*t12210;
  t12796 = 0.11688*t207;
  t12806 = t12793 + t12796 + t12714;
  t12766 = 0.035165*t426;
  t12768 = t207*t12713;
  t12771 = t12766 + t12768;
  t12855 = -0.194401*t12276;
  t12856 = t272*t1190;
  t12870 = t514*t1115;
  t12874 = 0. + t12855 + t12856 + t12870;
  t12879 = t339*t12806;
  t12889 = -1.*t12771*t427;
  t12902 = 0. + t12879 + t12889;
  t12675 = t339*t12655;
  t12698 = t12692*t427;
  t12699 = 0. + t12675 + t12698;
  t12780 = t339*t12771;
  t12812 = t12806*t427;
  t12813 = 0. + t12780 + t12812;
  t12834 = t103*t12832;
  t12836 = 0. + t12834;
  t12877 = t12874*t2735;
  t12907 = t103*t12902;
  t12910 = 0. + t12877 + t12907;
  t12842 = -1.*t2735*t12832;
  t12850 = 0. + t12842;
  t12923 = t103*t12874;
  t12957 = -1.*t2735*t12902;
  t12958 = 0. + t12923 + t12957;
  t12729 = t339*t12718;
  t12744 = t12739*t427;
  t12751 = t12729 + t12744;
  t5430 = t5360*t2735;
  t5844 = t103*t5633;
  t5888 = 0. + t5430 + t5844;
  t13207 = -1.*t339*t12186;
  t13208 = -1.*t12234*t427;
  t13209 = t13207 + t13208;
  t12251 = -1.*t12115*t12242;
  t12311 = -1.*t103*t12258*t12303;
  t12323 = t2735*t12258*t12318;
  t12342 = -1.*t12001*t12242;
  t12346 = -1.*t103*t12115*t12303;
  t12347 = t2735*t12115*t12318;
  t12353 = t12342 + t12346 + t12347;
  t12363 = t103*t452*t12353;
  t12373 = t6492*t12242;
  t12388 = t103*t452*t12303;
  t12393 = -1.*t2735*t452*t12318;
  t12411 = t10857*t12242;
  t12413 = t11974*t12303;
  t12417 = t6760*t12318;
  t12421 = t12411 + t12413 + t12417;
  t12422 = t103*t12258*t12421;
  t12495 = t12115*t12242;
  t12508 = t103*t12258*t12303;
  t12515 = -1.*t2735*t12258*t12318;
  t12524 = t12001*t12242;
  t12525 = t103*t12115*t12303;
  t12538 = -1.*t2735*t12115*t12318;
  t12539 = t12524 + t12525 + t12538;
  t12552 = t103*t821*t12539;
  t12567 = -1.*t12242*t3168;
  t12590 = -1.*t103*t821*t12303;
  t12592 = t2735*t821*t12318;
  t12604 = -1.*t12242*t10569;
  t12606 = -1.*t12303*t3207;
  t12616 = -1.*t12318*t7454;
  t12619 = t12604 + t12606 + t12616;
  t12625 = t103*t12258*t12619;
  t13281 = -1.*t339*t12771;
  t13282 = -1.*t12806*t427;
  t13290 = t13281 + t13282;
  t13297 = -1.*t339*t12655;
  t13300 = -1.*t12692*t427;
  t13303 = t13297 + t13300;
  t12981 = t12699*t12813;
  t12982 = t12836*t12910;
  t12987 = t12850*t12958;
  t12988 = t12981 + t12982 + t12987;
  t13277 = t12879 + t12889;
  t13040 = -1.*t12813*t11057;
  t13042 = -1.*t12910*t4959;
  t13044 = -1.*t12958*t11062;
  t13048 = t13040 + t13042 + t13044;
  t13279 = t12824 + t12831;
  t13097 = -1.*t12699*t12813;
  t13098 = -1.*t12836*t12910;
  t13101 = -1.*t12850*t12958;
  t13105 = t13097 + t13098 + t13101;
  t13155 = t12813*t11227;
  t13158 = t12910*t5888;
  t13173 = t12958*t11266;
  t13182 = t13155 + t13158 + t13173;
  t13433 = -1.*t12285*t2735;
  t13434 = -1.*t103*t12296;
  t13435 = t13433 + t13434;
  t7684 = t7615 + t7675;
  t13565 = t12923 + t12957;
  t13548 = -1.*t12874*t2735;
  t13550 = -1.*t103*t12902;
  t13554 = t13548 + t13550;
  t8077 = t7805 + t7884;
  t13661 = 0.04*t272;
  t13664 = t13661 + t12013;
  t13680 = -1.*t339*t426*t13664;
  t13683 = -1.*t207*t13664*t427;
  t13687 = t13680 + t13683;
  t13671 = t207*t339*t13664;
  t13672 = -1.*t426*t13664*t427;
  t13674 = t13671 + t13672;
  t13677 = t12014*t2735;
  t13688 = t103*t13687;
  t13689 = t13677 + t13688;
  t13698 = t103*t12014;
  t13706 = -1.*t2735*t13687;
  t13709 = t13698 + t13706;
  t2946 = t103*t2937;
  t2950 = t2825 + t2946;
  t13767 = -0.194401*t272;
  t13775 = -1.*t272*t1190;
  t13776 = -1.*t514*t1115;
  t13777 = t13767 + t13775 + t13776;
  t13785 = t12703 + t12707 + t12711;
  t13788 = -1.*t339*t426*t13777;
  t13793 = -1.*t207*t13777*t427;
  t13794 = t13788 + t13793;
  t13778 = t207*t339*t13777;
  t13779 = -1.*t426*t13777*t427;
  t13780 = t13778 + t13779;
  t13786 = t13785*t2735;
  t13795 = t103*t13794;
  t13796 = t13786 + t13795;
  t13799 = t103*t13785;
  t13800 = -1.*t2735*t13794;
  t13805 = t13799 + t13800;
  t13766 = t4371*t12988;
  t13872 = -1.*t514*t4563;
  t13875 = t272*t4543;
  t13876 = t13872 + t13875;
  t13906 = t272*t4563;
  t13919 = t514*t4543;
  t13927 = t13906 + t13919;
  t13936 = -1.*t339*t426*t13876;
  t13945 = -1.*t207*t13876*t427;
  t13947 = t13936 + t13945;
  t13810 = -1.*t12813*t10786;
  t13877 = t207*t339*t13876;
  t13886 = -1.*t426*t13876*t427;
  t13897 = t13877 + t13886;
  t13819 = -1.*t12910*t4371;
  t13827 = -1.*t12958*t10813;
  t13933 = t13927*t2735;
  t13949 = t103*t13947;
  t13950 = t13933 + t13949;
  t13953 = t103*t13927;
  t13957 = -1.*t2735*t13947;
  t13958 = t13953 + t13957;
  t13837 = t3902*t13105;
  t13846 = t12813*t10599;
  t13850 = t12910*t3902;
  t13851 = t12958*t10653;
  t12372 = t10857*t12102;
  t12107 = -1.*t12001*t12102;
  t12475 = t12001*t12102;
  t12570 = -1.*t12102*t10569;
  t12759 = t12699*t12751;
  t12816 = t12115*t12813;
  t13006 = -1.*t12813*t9233;
  t13008 = -1.*t12751*t11057;
  t13073 = -1.*t12699*t12751;
  t13075 = -1.*t12115*t12813;
  t13126 = t12813*t9332;
  t13127 = t12751*t11227;
  t14042 = -1.*t12115*t12296;
  t14044 = t14042 + t12342;
  t14049 = t6492*t14044;
  t13220 = t10857*t12296;
  t14051 = t452*t12296;
  t14066 = -1.*t12258*t12296;
  t13196 = -1.*t12001*t12296;
  t14078 = t12285*t514;
  t14080 = t6492*t12296;
  t14082 = t14078 + t14080 + t12411;
  t14085 = t12115*t14082;
  t14114 = t12115*t12296;
  t14116 = t14114 + t12524;
  t14117 = t3168*t14116;
  t14129 = t12258*t12296;
  t13246 = t12001*t12296;
  t14137 = -1.*t12296*t821;
  t13257 = -1.*t12296*t10569;
  t14149 = -1.*t272*t12285;
  t14151 = -1.*t12296*t3168;
  t14161 = t14149 + t14151 + t12604;
  t14162 = t12115*t14161;
  t14171 = t12832*t12902;
  t14174 = 0. + t14171 + t12981;
  t13278 = t12699*t13277;
  t13280 = t13279*t12813;
  t13315 = -1.*t12813*t10218;
  t13316 = -1.*t13277*t11057;
  t14204 = -1.*t12874*t1858;
  t14206 = -1.*t12902*t4953;
  t14207 = t14204 + t14206 + t13040;
  t14212 = -1.*t12832*t12902;
  t14213 = 0. + t14212 + t13097;
  t13350 = -1.*t12699*t13277;
  t13351 = -1.*t13279*t12813;
  t13397 = t12813*t10392;
  t13398 = t13277*t11227;
  t14235 = t12874*t5360;
  t14237 = t12902*t5633;
  t14238 = t14235 + t14237 + t13155;
  t13675 = -1.*t12001*t13674;
  t13715 = t10857*t13674;
  t13716 = t12242*t10569;
  t13733 = t12001*t13674;
  t13744 = -1.*t452*t12242;
  t13745 = -1.*t13674*t10569;
  t13782 = t12699*t13780;
  t13811 = -1.*t13780*t11057;
  t13838 = -1.*t12699*t13780;
  t13848 = t13780*t11227;
  t14402 = t10786*t14174;
  t13904 = t12699*t13897;
  t14409 = -1.*t12874*t3549;
  t14413 = -1.*t12902*t4289;
  t13971 = -1.*t13897*t11057;
  t14421 = t10599*t14213;
  t13995 = -1.*t12699*t13897;
  t14428 = t12874*t3520;
  t14429 = t12902*t3773;
  t14003 = t13897*t11227;
  t14521 = -1.*t12655*t12771;
  t14522 = -1.*t12692*t12806;
  t14523 = 0. + t14521 + t14522;
  t14524 = t14523*t3520;
  t14527 = t12655*t12771;
  t14528 = t12692*t12806;
  t14529 = 0. + t14527 + t14528;
  t14530 = t14529*t3549;
  t14591 = 0.008474765*t3549*t1722;
  t14595 = -0.11688*t3520;
  t14597 = -0.081715*t4118;
  t14598 = t14595 + t14597;
  t14599 = 0.241*t1213*t14598;
  p_output1[0]=var2[16]*(-0.5*(0.06108*t6760 - 0.06108*t7454 + 0.241*t1213*t7684 + 0.241*t1722*t8077)*var2[4] - 0.5*(0.241*t103*t1213*t2246 + 0.241*t103*t1722*t2595 + t510 + t834)*var2[5] - 0.5*(0.241*t103*t1213*t1662 + 0.241*t103*t1722*t2057 + t510 + t834)*var2[15] - 0.5*(-0.06108*t2950 + 0.06108*t3207 + t3952 + t4389)*var2[16] - 0.5*(t3952 + t4389 + 0.241*t4705*t4959 + 0.241*t5335*t5888)*var2[17]);
  p_output1[1]=var2[16]*(-0.5*(-0.06108*(-1.*t7454*t8760 - 1.*t10569*t9092) + 0.06108*(-1.*t6760*t8760 - 1.*t10857*t9092) + 0.241*t1213*(-1.*t11062*t8760 - 1.*t11057*t9092) + 0.241*t1722*(-1.*t11266*t8760 - 1.*t11227*t9092))*var2[3] - 0.5*(-0.241*t10069*t1722*t9092 - 0.06108*t9092*t9410 + 0.06108*t9092*t9436 - 0.241*t1213*t9092*t9513)*var2[4] - 0.5*(0.241*t1213*(t10218*t8760 + t2246*t2735*t9092) + 0.241*t1722*(t10392*t8760 + t2595*t2735*t9092) + t9131 + t9173)*var2[5] - 0.5*(t9131 + t9173 + 0.241*t1213*(t1662*t2735*t9092 + t8760*t9233) + 0.241*t1722*(t2057*t2735*t9092 + t8760*t9332))*var2[15] - 0.5*(0.06108*t10579 + t10730 + t10829 - 0.06108*(t452*t8760 - 1.*t10528*t9092))*var2[16] - 0.5*(t10730 + t10829 + 0.241*(0. + t11326 + t11336)*t4705 + 0.241*(0. + t11349 + t11378)*t5335)*var2[17]);
  p_output1[2]=var2[16]*(-0.5*(-0.06108*t10579 + 0.241*(t11326 + t11336)*t1213 + 0.241*(t11349 + t11378)*t1722 + 0.06108*(t10857*t8760 - 1.*t6760*t9092))*var2[3] - 0.5*(0.241*t10069*t1722*t8760 + 0.06108*t8760*t9410 - 0.06108*t8760*t9436 + 0.241*t1213*t8760*t9513)*var2[4] - 0.5*(t11537 + t11559 + 0.241*t1213*(-1.*t2246*t2735*t8760 + t10218*t9092) + 0.241*t1722*(-1.*t2595*t2735*t8760 + t10392*t9092))*var2[5] - 0.5*(t11537 + t11559 + 0.241*t1213*(-1.*t1662*t2735*t8760 + t9092*t9233) + 0.241*t1722*(-1.*t2057*t2735*t8760 + t9092*t9332))*var2[15] - 0.5*(t11826 + t11845 + 0.06108*(t7454*t8760 + t10569*t9092) - 0.06108*(t10528*t8760 + t452*t9092))*var2[16] - 0.5*(t11826 + t11845 + 0.241*t4705*(0. + t11062*t8760 + t11057*t9092) + 0.241*t5335*(0. + t11266*t8760 + t11227*t9092))*var2[17]);
  p_output1[3]=var2[16]*(-0.5*(0.241*t1213*(-1.*t12832*t13182*t2735 + (t103*t12832*t12958 - 1.*t12850*t13554 - 1.*t12836*t13565 + t12832*t12910*t2735)*t5888 + t13105*t8077 + t12836*(t10069*t12958 + t11266*t13554 + t13565*t5888 + t12910*t8077)) - 0.06108*(-1.*t12115*t12421*t2735 + t11974*(t12115*t12303*t2735 + t12115*t13435*t2735) + t12353*t6760 + t103*t12115*(t11974*t12318 + t12303*t6760 + t13435*t6760 + t12318*t9410)) + 0.06108*(-1.*t12115*t12619*t2735 + (-1.*t12115*t12303*t2735 - 1.*t12115*t13435*t2735)*t3207 + t12539*t7454 + t103*t12115*(-1.*t12318*t3207 - 1.*t12303*t7454 - 1.*t13435*t7454 - 1.*t12318*t9436)) + 0.241*t1722*(-1.*t12832*t13048*t2735 + (-1.*t103*t12832*t12958 + t12850*t13554 + t12836*t13565 - 1.*t12832*t12910*t2735)*t4959 + t12988*t7684 + t12836*(-1.*t11062*t13554 - 1.*t13565*t4959 - 1.*t12910*t7684 - 1.*t12958*t9513)))*var2[4] - 0.5*(0.241*t1722*(t103*t13048*t13303 + t103*t12988*t2246 + (t13278 + t13280 + t103*t12836*t13290 + t103*t12910*t13303 - 1.*t12850*t13290*t2735 - 1.*t12958*t13303*t2735)*t4959 + t12836*(t13315 + t13316 - 1.*t103*t12910*t2246 + t11062*t13290*t2735 + t12958*t2246*t2735 - 1.*t103*t13290*t4959)) + 0.241*t1213*(t103*t13182*t13303 + t103*t13105*t2595 + (-1.*t103*t12836*t13290 - 1.*t103*t12910*t13303 + t13350 + t13351 + t12850*t13290*t2735 + t12958*t13303*t2735)*t5888 + t12836*(t13397 + t13398 + t103*t12910*t2595 - 1.*t11266*t13290*t2735 - 1.*t12958*t2595*t2735 + t103*t13290*t5888)) - 0.06108*(t12363 + t12422 + t11974*(t12251 + t12311 + t12323 + t13196 - 1.*t12108*t12115*t13209 - 1.*t12115*t12133*t13209) + t103*t12115*(t12373 + t12388 + t12393 + t103*t11974*t13209 + t13220 - 1.*t13209*t2735*t6760)) + 0.06108*(t12552 + t12625 + (t12495 + t12508 + t12515 + t12108*t12115*t13209 + t12115*t12133*t13209 + t13246)*t3207 + t103*t12115*(t12567 + t12590 + t12592 + t13257 - 1.*t103*t13209*t3207 + t13209*t2735*t7454)))*var2[5] - 0.5*(0.241*t1722*(t103*t12258*t13048 + t103*t12988*t1662 + (t12759 + t12816 + t103*t12823*t12836 + t103*t12258*t12910 - 1.*t12823*t12850*t2735 - 1.*t12258*t12958*t2735)*t4959 + t12836*(t13006 + t13008 - 1.*t103*t12910*t1662 + t11062*t12823*t2735 + t12958*t1662*t2735 - 1.*t103*t12823*t4959)) + 0.241*t1213*(t103*t12258*t13182 + t103*t13105*t2057 + (-1.*t103*t12823*t12836 - 1.*t103*t12258*t12910 + t13073 + t13075 + t12823*t12850*t2735 + t12258*t12958*t2735)*t5888 + t12836*(t13126 + t13127 + t103*t12910*t2057 - 1.*t11266*t12823*t2735 - 1.*t12958*t2057*t2735 + t103*t12823*t5888)) - 0.06108*(t11974*(t12107 - 1.*t12108*t12115*t12123 - 1.*t12115*t12123*t12133 + t12251 + t12311 + t12323) + t12363 + t12422 + t103*t12115*(t103*t11974*t12123 + t12372 + t12373 + t12388 + t12393 - 1.*t12123*t2735*t6760)) + 0.06108*(t12552 + t12625 + (t12108*t12115*t12123 + t12115*t12123*t12133 + t12475 + t12495 + t12508 + t12515)*t3207 + t103*t12115*(t12567 + t12570 + t12590 + t12592 - 1.*t103*t12123*t3207 + t12123*t2735*t7454)))*var2[15] - 0.5*(0.241*t1722*(t13766 + (t13782 + t12836*t13796 + t12850*t13805)*t4959 + t12836*(-1.*t11062*t13805 + t13810 + t13811 + t13819 + t13827 - 1.*t13796*t4959)) + 0.241*t1213*(t13837 + (-1.*t12836*t13796 - 1.*t12850*t13805 + t13838)*t5888 + t12836*(t11266*t13805 + t13846 + t13848 + t13850 + t13851 + t13796*t5888)) - 0.06108*(t11974*(t13675 - 1.*t103*t12115*t13689 + t12115*t13709*t2735) + t12353*t3207 + t103*t12115*(t11974*t13689 + t13715 + t13716 + t12303*t3207 + t13709*t6760 + t12318*t7454)) + 0.06108*(t12539*t2950 + (t103*t12115*t13689 + t13733 - 1.*t12115*t13709*t2735)*t3207 + t103*t12115*(-1.*t10528*t12318 + t13744 + t13745 - 1.*t12303*t2950 - 1.*t13689*t3207 - 1.*t13709*t7454)))*var2[16] - 0.5*(0.241*t1722*(t13766 + (t13904 + t12836*t13950 + t12850*t13958)*t4959 + t12836*(t13810 + t13819 + t13827 - 1.*t11062*t13958 + t13971 - 1.*t13950*t4959)) + 0.241*(t12836*t13048 + t12988*t4959)*t5335 + 0.241*t4705*(t12836*t13182 + t13105*t5888) + 0.241*t1213*(t13837 + (-1.*t12836*t13950 - 1.*t12850*t13958 + t13995)*t5888 + t12836*(t13846 + t13850 + t13851 + t11266*t13958 + t14003 + t13950*t5888)))*var2[17]);
  p_output1[4]=var2[16]*(-0.5*(0.06108*(t14117 + t10569*(t12495 + t12115*t13209 + t13246 + t14129) + t14162 + t12001*(t12567 + t13257 + t14137 - 1.*t13209*t3168)) + 0.241*t1722*(t11057*(t13278 + t13280 + t12832*t13290 + t12902*t13303) + t10218*t14174 + t13279*t14207 + t12699*(t13315 + t13316 - 1.*t12902*t2246 - 1.*t13290*t4953)) + 0.241*t1213*(t11227*(-1.*t12832*t13290 - 1.*t12902*t13303 + t13350 + t13351) + t10392*t14213 + t13279*t14238 + t12699*(t13397 + t13398 + t12902*t2595 + t13290*t5633)) - 0.06108*(t14049 + t10857*(t12251 + t13196 - 1.*t12115*t13209 + t14066) + t14085 + t12001*(t12373 + t13220 + t14051 + t13209*t6492)))*var2[5] - 0.5*(0.06108*(t14117 + t10569*(t12115*t12123 + t12475 + t12495 + t14129) + t14162 + t12001*(t12567 + t12570 + t14137 - 1.*t12123*t3168)) - 0.06108*(t14049 + t10857*(t12107 - 1.*t12115*t12123 + t12251 + t14066) + t14085 + t12001*(t12372 + t12373 + t14051 + t12123*t6492)) + 0.241*t1722*(t11057*(t12759 + t12816 + t12823*t12832 + t12258*t12902) + t12115*t14207 + t12699*(t13006 + t13008 - 1.*t12902*t1662 - 1.*t12823*t4953) + t14174*t9233) + 0.241*t1213*(t11227*(-1.*t12823*t12832 - 1.*t12258*t12902 + t13073 + t13075) + t12115*t14238 + t12699*(t13126 + t13127 + t12902*t2057 + t12823*t5633) + t14213*t9332))*var2[15] - 0.5*(0.06108*(t10569*(t12115*t13687 + t13733) + t12001*(t13744 + t13745 + t14078 - 1.*t12014*t272 - 1.*t12296*t2937 - 1.*t13687*t3168) + t14116*t452) + 0.241*t1722*(t11057*(t13782 + t12832*t13794) + t14402 + t12699*(t13810 + t13811 + t14409 + t14413 - 1.*t13785*t1858 - 1.*t13794*t4953)) + 0.241*t1213*(t11227*(-1.*t12832*t13794 + t13838) + t14421 + t12699*(t13846 + t13848 + t14428 + t14429 + t13785*t5360 + t13794*t5633)) - 0.06108*(t10857*(t13675 - 1.*t12115*t13687) + t10569*t14044 + t12001*(t13715 + t13716 + t12285*t272 + t12296*t3168 + t12014*t514 + t13687*t6492)))*var2[16] - 0.5*(0.241*(t11227*t14213 + t12699*t14238)*t4705 + 0.241*t1722*(t11057*(t13904 + t12832*t13947) + t14402 + t12699*(t13810 + t13971 + t14409 + t14413 - 1.*t13927*t1858 - 1.*t13947*t4953)) + 0.241*(t11057*t14174 + t12699*t14207)*t5335 + 0.241*t1213*(t11227*(-1.*t12832*t13947 + t13995) + t14421 + t12699*(t13846 + t14003 + t14428 + t14429 + t13927*t5360 + t13947*t5633)))*var2[17]);
  p_output1[5]=var2[16]*(-0.5*(0.06108*t272*(t12047*t207 + t12186*t207 + t12027*t426 - 1.*t12234*t426) + 0.241*t1722*t1858*(t12655*t12718 + t12692*t12739 + t12771*t207 - 1.*t12806*t426) - 0.06108*(-1.*t12047*t207 - 1.*t12186*t207 - 1.*t12027*t426 + t12234*t426)*t514 + 0.241*t1213*(-1.*t12655*t12718 - 1.*t12692*t12739 - 1.*t12771*t207 + t12806*t426)*t5360)*var2[15] - 0.5*(-0.06108*t272*(-1.*t12234*t207 - 1.*t12186*t426) + 0.241*t1722*(t14530 + t1858*(t12655*t13777*t207 - 1.*t12692*t13777*t426)) - 0.06108*(t12234*t207 + t12186*t426)*t514 + 0.241*t1213*(t14524 + (-1.*t12655*t13777*t207 + t12692*t13777*t426)*t5360))*var2[16] - 0.5*(0.241*t1722*(t14530 + t1858*(t12655*t13876*t207 - 1.*t12692*t13876*t426)) + (0. + 0.241*(0. + t14529*t1858))*t5335 + 0.241*t1213*(t14524 + (-1.*t12655*t13876*t207 + t12692*t13876*t426)*t5360) + t4705*(0. + 0.241*(0. + t14523*t5360)))*var2[17]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=var2[16]*(-0.5*(t14591 + t14599 + 0.0034116234*t272 - 0.0034116234*t514)*var2[16] - 0.5*(t14591 + t14599 + (0. + 0.241*(0. + 0.035165*t1858))*t5335 + t4705*(0. + 0.241*(0. - 0.081715*t1509 - 0.11688*t5360)))*var2[17]);
  p_output1[16]=-0.5*((0. + 0.241*t1213)*t4705 + 0.241*t1213*t4705 + (0. + 0.241*t1722)*t5335 + 0.241*t1722*t5335)*var2[16]*var2[17];
  p_output1[17]=-0.5*(-0.03856*t4705 + 0.004820000000000004*t5335)*var2[16]*var2[17];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec17_plane.hh"

namespace SymFunction
{

void Ce1_vec17_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
