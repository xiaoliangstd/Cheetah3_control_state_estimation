/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:11:55 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t327;
  double t382;
  double t402;
  double t409;
  double t423;
  double t436;
  double t437;
  double t23;
  double t118;
  double t203;
  double t470;
  double t561;
  double t618;
  double t651;
  double t479;
  double t960;
  double t972;
  double t460;
  double t521;
  double t523;
  double t1066;
  double t1084;
  double t1159;
  double t1165;
  double t981;
  double t982;
  double t1021;
  double t1035;
  double t663;
  double t697;
  double t708;
  double t1470;
  double t1504;
  double t1511;
  double t1514;
  double t1532;
  double t1534;
  double t1422;
  double t1437;
  double t1456;
  double t1812;
  double t1817;
  double t1838;
  double t1998;
  double t2003;
  double t2064;
  double t2069;
  double t1787;
  double t1799;
  double t1800;
  double t1804;
  double t1737;
  double t1745;
  double t1767;
  double t847;
  double t887;
  double t905;
  double t930;
  double t932;
  double t937;
  double t2514;
  double t2516;
  double t2536;
  double t2537;
  double t2547;
  double t1644;
  double t2623;
  double t2625;
  double t2627;
  double t2639;
  double t2654;
  double t2661;
  double t1547;
  double t2115;
  double t1926;
  double t2823;
  double t2827;
  double t2832;
  double t2844;
  double t2848;
  double t2855;
  double t2859;
  double t3087;
  double t3108;
  double t3111;
  double t3157;
  double t3158;
  double t3044;
  double t3047;
  double t3051;
  double t3009;
  double t2295;
  double t2329;
  double t2332;
  double t4659;
  double t4719;
  double t2836;
  double t2837;
  double t2860;
  double t2862;
  double t6077;
  double t6143;
  double t2903;
  double t2913;
  double t6193;
  double t6248;
  double t6280;
  double t2929;
  double t2948;
  double t5711;
  double t10210;
  double t5743;
  double t5754;
  double t5795;
  double t5796;
  double t5814;
  double t5820;
  double t6584;
  double t6630;
  double t6644;
  double t6764;
  double t6771;
  double t7584;
  double t7616;
  double t7684;
  double t7814;
  double t7820;
  double t7903;
  double t8551;
  double t8727;
  double t8769;
  double t8901;
  double t9324;
  double t9325;
  double t10043;
  double t10077;
  double t10078;
  double t10096;
  double t10097;
  double t10145;
  double t10460;
  double t10543;
  double t10547;
  double t10560;
  double t10571;
  double t11446;
  double t11467;
  double t11469;
  double t10582;
  double t10612;
  double t10622;
  double t10864;
  double t10867;
  double t10879;
  double t10939;
  double t10949;
  double t10952;
  double t10971;
  double t10973;
  double t10974;
  double t11000;
  double t11030;
  double t11035;
  double t11060;
  double t11073;
  double t11097;
  double t11108;
  double t11110;
  double t11123;
  double t11130;
  double t11133;
  double t11159;
  double t11164;
  double t11171;
  double t11210;
  double t11217;
  double t11239;
  double t11280;
  double t11283;
  double t11284;
  double t11330;
  double t11358;
  double t11359;
  double t11367;
  double t11376;
  double t11377;
  double t11864;
  double t11867;
  double t11871;
  double t11879;
  double t11880;
  double t11881;
  double t11978;
  double t11981;
  double t12000;
  double t12007;
  double t12008;
  double t12093;
  double t12094;
  double t12096;
  double t12142;
  double t12143;
  double t12144;
  double t12114;
  double t12149;
  double t12155;
  double t12189;
  double t12197;
  double t12213;
  double t12228;
  double t12229;
  double t12233;
  double t12159;
  double t12160;
  double t12175;
  double t12177;
  double t12261;
  double t12270;
  double t12272;
  double t12306;
  double t12320;
  double t12321;
  double t12322;
  double t12451;
  double t12452;
  double t12461;
  double t12484;
  double t12485;
  double t12487;
  double t12507;
  double t12512;
  double t12513;
  double t12519;
  double t12520;
  double t12521;
  double t12516;
  double t12522;
  double t12523;
  double t12580;
  double t12581;
  double t12589;
  double t12562;
  double t12565;
  double t12571;
  double t12530;
  double t12535;
  double t12541;
  double t12554;
  double t12661;
  double t12669;
  double t12670;
  double t12683;
  double t12684;
  double t12691;
  double t12724;
  double t12725;
  double t12729;
  double t12736;
  double t12737;
  double t12741;
  double t12742;
  double t11874;
  double t12848;
  double t12849;
  double t12850;
  double t12859;
  double t12863;
  double t12868;
  double t11970;
  double t12858;
  double t12869;
  double t12872;
  double t12880;
  double t12881;
  double t12876;
  double t12011;
  double t12901;
  double t12903;
  double t11903;
  double t12016;
  double t12018;
  double t12886;
  double t12891;
  double t12899;
  double t12245;
  double t12249;
  double t13004;
  double t13005;
  double t13006;
  double t13010;
  double t13012;
  double t13022;
  double t12214;
  double t12240;
  double t13031;
  double t13032;
  double t13033;
  double t13044;
  double t13045;
  double t13048;
  double t12367;
  double t12371;
  double t12385;
  double t12401;
  double t13081;
  double t13085;
  double t13088;
  double t13106;
  double t13109;
  double t13110;
  double t12436;
  double t12444;
  double t12476;
  double t12478;
  double t13137;
  double t13138;
  double t13139;
  double t13153;
  double t13154;
  double t13156;
  double t12576;
  double t12594;
  double t13169;
  double t13170;
  double t13172;
  double t13180;
  double t13181;
  double t13182;
  double t12601;
  double t12621;
  double t13187;
  double t13192;
  double t13198;
  double t13211;
  double t13212;
  double t13213;
  double t12629;
  double t12646;
  double t12672;
  double t12680;
  double t13241;
  double t13242;
  double t13243;
  double t13261;
  double t13265;
  double t13267;
  double t12776;
  double t12792;
  double t12801;
  double t12810;
  double t13292;
  double t13293;
  double t13297;
  double t13310;
  double t13311;
  double t13312;
  double t11627;
  double t11630;
  double t11663;
  double t11671;
  double t11682;
  double t11692;
  double t11563;
  double t11572;
  double t11577;
  double t11612;
  double t11613;
  double t11619;
  double t1048;
  double t1052;
  double t1177;
  double t1190;
  double t1200;
  double t1211;
  double t1239;
  double t1283;
  double t1460;
  double t1558;
  double t1574;
  double t1658;
  double t1710;
  double t1713;
  double t1727;
  double t2081;
  double t2086;
  double t2101;
  double t2108;
  double t2123;
  double t2126;
  double t2167;
  double t11497;
  double t11527;
  double t11553;
  double t2370;
  double t2378;
  double t2383;
  double t2442;
  double t2451;
  double t2561;
  double t2574;
  double t2581;
  double t2602;
  double t2608;
  double t2616;
  double t2638;
  double t2702;
  double t2748;
  double t2763;
  double t2764;
  double t2779;
  double t2785;
  double t2809;
  double t2816;
  double t2840;
  double t2879;
  double t2880;
  double t2882;
  double t2924;
  double t2950;
  double t2959;
  double t2963;
  double t2992;
  double t3015;
  double t3016;
  double t3035;
  double t11479;
  double t11484;
  double t11490;
  double t3123;
  double t3133;
  double t3164;
  double t3227;
  double t3259;
  double t3328;
  double t3364;
  double t3396;
  double t3400;
  double t3413;
  double t3441;
  double t3506;
  double t3554;
  double t3758;
  double t3810;
  double t3872;
  double t4108;
  double t4141;
  double t4263;
  double t4306;
  double t4312;
  double t4393;
  double t4705;
  double t4781;
  double t4836;
  double t4938;
  double t4949;
  double t5070;
  double t5093;
  double t5153;
  double t5179;
  double t5335;
  double t5481;
  double t5515;
  double t5557;
  double t5641;
  double t5678;
  double t11696;
  double t11701;
  double t11702;
  double t5987;
  double t6039;
  double t6187;
  double t6348;
  double t6438;
  double t6447;
  double t6463;
  double t6484;
  double t6495;
  double t6511;
  double t6513;
  double t6517;
  double t6583;
  double t11708;
  double t11715;
  double t11724;
  double t6834;
  double t7070;
  double t7156;
  double t7353;
  double t7569;
  double t11757;
  double t11761;
  double t11768;
  double t8036;
  double t8065;
  double t8077;
  double t8129;
  double t8387;
  double t11797;
  double t11798;
  double t11806;
  double t9947;
  double t10007;
  double t10028;
  double t10032;
  double t10037;
  double t11808;
  double t11811;
  double t11815;
  double t11475;
  double t11477;
  double t11494;
  double t11557;
  double t11589;
  double t11602;
  double t11621;
  double t11664;
  double t11695;
  double t11704;
  double t11732;
  double t11785;
  double t11807;
  double t11817;
  double t11824;
  double t10627;
  double t10652;
  double t10654;
  double t10691;
  double t10699;
  double t10700;
  double t10975;
  double t11036;
  double t11046;
  double t10725;
  double t10744;
  double t10761;
  double t11098;
  double t11111;
  double t11112;
  double t11139;
  double t11198;
  double t11199;
  double t10843;
  double t10845;
  double t10856;
  double t11274;
  double t11286;
  double t11314;
  double t10895;
  double t10902;
  double t10931;
  double t11366;
  double t11382;
  double t11385;
  double t10963;
  double t10964;
  double t10967;
  double t11895;
  double t11896;
  double t11902;
  double t11906;
  double t11944;
  double t11949;
  double t12002;
  double t12003;
  double t12013;
  double t12015;
  double t12017;
  double t12055;
  double t12074;
  double t12075;
  double t12089;
  double t12158;
  double t12178;
  double t12179;
  double t12185;
  double t12227;
  double t12235;
  double t12241;
  double t12244;
  double t12246;
  double t12247;
  double t12250;
  double t12251;
  double t12253;
  double t12258;
  double t12277;
  double t12331;
  double t12341;
  double t12363;
  double t12368;
  double t12369;
  double t12375;
  double t12378;
  double t12383;
  double t12389;
  double t12406;
  double t12408;
  double t12421;
  double t12434;
  double t12439;
  double t12440;
  double t12445;
  double t12446;
  double t12462;
  double t12475;
  double t12477;
  double t12480;
  double t12483;
  double t12488;
  double t12492;
  double t12497;
  double t12501;
  double t12503;
  double t12528;
  double t12558;
  double t12559;
  double t12561;
  double t12577;
  double t12592;
  double t12599;
  double t12600;
  double t12607;
  double t12617;
  double t12622;
  double t12623;
  double t12624;
  double t12625;
  double t12633;
  double t12635;
  double t12649;
  double t12651;
  double t12671;
  double t12673;
  double t12676;
  double t12681;
  double t12682;
  double t12695;
  double t12698;
  double t12706;
  double t12707;
  double t12708;
  double t12733;
  double t12750;
  double t12752;
  double t12754;
  double t12789;
  double t12790;
  double t12794;
  double t12797;
  double t12805;
  double t12807;
  double t12811;
  double t12819;
  double t12820;
  double t12835;
  double t12873;
  double t12875;
  double t12878;
  double t12879;
  double t12882;
  double t12883;
  double t12884;
  double t12900;
  double t12904;
  double t12908;
  double t12912;
  double t12922;
  double t12923;
  double t12924;
  double t12925;
  double t12927;
  double t12930;
  double t12933;
  double t12938;
  double t12940;
  double t12941;
  double t12942;
  double t12944;
  double t12945;
  double t12946;
  double t12947;
  double t12948;
  double t12949;
  double t12950;
  double t12951;
  double t12952;
  double t12953;
  double t12954;
  double t12955;
  double t12956;
  double t12965;
  double t12967;
  double t12968;
  double t12969;
  double t12970;
  double t12973;
  double t12974;
  double t12977;
  double t12979;
  double t12991;
  double t13002;
  double t13003;
  double t13007;
  double t13024;
  double t13026;
  double t13027;
  double t13035;
  double t13036;
  double t13037;
  double t13039;
  double t13040;
  double t13041;
  double t13042;
  double t13049;
  double t13053;
  double t13056;
  double t13058;
  double t13059;
  double t13064;
  double t13066;
  double t13069;
  double t13074;
  double t13075;
  double t13079;
  double t13090;
  double t13094;
  double t13098;
  double t13099;
  double t13103;
  double t13104;
  double t13105;
  double t13114;
  double t13116;
  double t13120;
  double t13121;
  double t13124;
  double t13127;
  double t13128;
  double t13131;
  double t13132;
  double t13133;
  double t13134;
  double t13140;
  double t13141;
  double t13142;
  double t13144;
  double t13150;
  double t13151;
  double t13152;
  double t13157;
  double t13158;
  double t13161;
  double t13162;
  double t13164;
  double t13167;
  double t13168;
  double t13173;
  double t13183;
  double t13185;
  double t13186;
  double t13199;
  double t13204;
  double t13205;
  double t13207;
  double t13208;
  double t13209;
  double t13210;
  double t13215;
  double t13216;
  double t13220;
  double t13222;
  double t13223;
  double t13225;
  double t13227;
  double t13229;
  double t13231;
  double t13239;
  double t13240;
  double t13244;
  double t13245;
  double t13246;
  double t13249;
  double t13250;
  double t13257;
  double t13258;
  double t13268;
  double t13273;
  double t13280;
  double t13282;
  double t13283;
  double t13286;
  double t13287;
  double t13288;
  double t13289;
  double t13290;
  double t13291;
  double t13300;
  double t13301;
  double t13302;
  double t13303;
  double t13307;
  double t13308;
  double t13309;
  double t13313;
  double t13314;
  double t13318;
  double t13319;
  double t13320;
  double t10572;
  double t10575;
  double t10690;
  double t10717;
  double t10782;
  double t10790;
  double t10863;
  double t10936;
  double t10968;
  double t11054;
  double t11122;
  double t11206;
  double t11315;
  double t11414;
  double t11423;
  double t13382;
  double t13383;
  double t13384;
  double t13385;
  double t13386;
  double t13387;
  double t13388;
  double t13389;
  double t13390;
  double t13391;
  double t13393;
  double t13397;
  double t13398;
  double t13401;
  double t13405;
  double t12885;
  double t12919;
  double t12937;
  double t12959;
  double t13000;
  double t13055;
  double t13062;
  double t13117;
  double t13126;
  double t13160;
  double t13165;
  double t13219;
  double t13224;
  double t13279;
  double t13285;
  double t13317;
  double t13322;
  double t13323;
  double t13607;
  double t13609;
  double t13611;
  double t13613;
  double t13617;
  double t13619;
  double t13621;
  double t13624;
  double t13625;
  double t13629;
  double t13630;
  double t13633;
  double t13634;
  double t13635;
  double t13637;
  double t13639;
  double t13640;
  double t13642;
  double t13456;
  double t13457;
  double t13459;
  double t13462;
  double t13463;
  double t13467;
  double t13468;
  double t13469;
  double t13473;
  double t13474;
  double t13475;
  double t13476;
  double t13478;
  double t13479;
  double t13480;
  double t13483;
  double t13484;
  double t13488;
  double t13716;
  double t13717;
  double t13723;
  double t11835;
  double t11860;
  double t12091;
  double t12184;
  double t12259;
  double t12345;
  double t12435;
  double t12496;
  double t12506;
  double t12560;
  double t12627;
  double t12702;
  double t12712;
  double t12753;
  double t12836;
  double t12837;
  double t13580;
  double t13581;
  double t13582;
  double t13583;
  double t13585;
  double t13590;
  double t13591;
  double t13592;
  double t13595;
  double t13596;
  double t13597;
  double t13598;
  double t13599;
  double t13600;
  double t13601;
  double t13603;
  double t13423;
  double t13425;
  double t13426;
  double t13427;
  double t13428;
  double t13430;
  double t13431;
  double t13435;
  double t13436;
  double t13438;
  double t13440;
  double t13443;
  double t13444;
  double t13447;
  double t13448;
  double t13449;
  double t13728;
  double t13730;
  double t13733;
  double t13712;
  double t13714;
  double t13715;
  double t13727;
  double t13734;
  double t13735;
  double t13739;
  double t13741;
  double t13742;
  double t13743;
  double t13745;
  double t13752;
  double t13753;
  double t13755;
  double t13756;
  double t13758;
  double t13761;
  double t13762;
  double t13764;
  double t13913;
  double t13919;
  double t2596;
  double t2622;
  double t2822;
  double t13966;
  double t13970;
  double t3055;
  double t3695;
  double t3952;
  double t4276;
  double t4565;
  double t13950;
  double t13951;
  double t13954;
  double t13955;
  double t5888;
  double t6826;
  double t7955;
  double t9680;
  double t10150;
  double t13524;
  double t13525;
  double t13526;
  double t13534;
  double t13535;
  double t13536;
  double t13537;
  double t13540;
  double t13543;
  double t13545;
  double t13548;
  double t13554;
  double t13556;
  double t13351;
  double t13352;
  double t13353;
  double t13357;
  double t13359;
  double t13361;
  double t13363;
  double t13364;
  double t13370;
  double t13371;
  double t13374;
  double t13375;
  double t13376;
  double t13842;
  double t13843;
  double t13844;
  double t13845;
  double t13846;
  double t13848;
  double t13849;
  double t13850;
  double t13851;
  double t13857;
  double t13858;
  double t13861;
  double t13862;
  double t13681;
  double t13683;
  double t13684;
  double t13686;
  double t13687;
  double t13689;
  double t13691;
  double t13692;
  double t13693;
  double t13694;
  double t13697;
  double t13700;
  double t13705;
  double t13912;
  double t13915;
  double t13922;
  double t13923;
  double t1785;
  double t14031;
  double t14033;
  double t2333;
  double t2338;
  double t2349;
  double t14020;
  double t14021;
  double t14025;
  double t14028;
  double t13511;
  double t13514;
  double t13516;
  double t13518;
  double t13338;
  double t13341;
  double t13343;
  double t13344;
  double t13821;
  double t13822;
  double t13827;
  double t13829;
  double t13661;
  double t13663;
  double t13667;
  double t13668;
  double t13902;
  double t13903;
  double t906;
  double t945;
  double t14077;
  double t14078;
  double t14082;
  double t14085;
  double t13500;
  double t13502;
  double t13332;
  double t13333;
  double t13809;
  double t13810;
  double t13652;
  double t13654;
  double t13897;
  double t13899;
  double t13900;
  double t529;
  double t764;
  double t789;
  double t13494;
  double t13496;
  double t13497;
  double t13328;
  double t13329;
  double t13330;
  double t13796;
  double t13798;
  double t13800;
  double t13648;
  double t13649;
  double t13650;
  t327 = Cos(var1[17]);
  t382 = Sin(var1[16]);
  t402 = -1.*t327*t382;
  t409 = Cos(var1[16]);
  t423 = Sin(var1[17]);
  t436 = -1.*t409*t423;
  t437 = 0. + t402 + t436;
  t23 = Cos(var1[4]);
  t118 = Cos(var1[15]);
  t203 = Cos(var1[5]);
  t470 = Sin(var1[15]);
  t561 = t409*t327;
  t618 = -1.*t382*t423;
  t651 = 0. + t561 + t618;
  t479 = Sin(var1[5]);
  t960 = -1.*t327;
  t972 = 1. + t960;
  t460 = -1.*t118*t203*t437;
  t521 = t470*t437*t479;
  t523 = t460 + t521;
  t1066 = -0.336601*t972;
  t1084 = -0.356601*t327;
  t1159 = -0.16*t423;
  t1165 = 0. + t1066 + t1084 + t1159;
  t981 = -0.20833*t972;
  t982 = -0.36833*t327;
  t1021 = 0.020000000000000018*t423;
  t1035 = 0. + t981 + t982 + t1021;
  t663 = -1.*t118*t203*t651;
  t697 = t470*t651*t479;
  t708 = t663 + t697;
  t1470 = -1.*t409;
  t1504 = 1. + t1470;
  t1511 = -0.194401*t1504;
  t1514 = -0.234401*t409;
  t1532 = -0.04*t382;
  t1534 = t1511 + t1514 + t1532;
  t1422 = -0.04*t409;
  t1437 = 0.04*t382;
  t1456 = t1422 + t1437;
  t1812 = t327*t382;
  t1817 = t409*t423;
  t1838 = 0. + t1812 + t1817;
  t1998 = -0.194401*t382;
  t2003 = -1.*t382*t1165;
  t2064 = t409*t1035;
  t2069 = 0. + t1998 + t2003 + t2064;
  t1787 = -0.194401*t1504;
  t1799 = t409*t1165;
  t1800 = t382*t1035;
  t1804 = 0. + t1787 + t1799 + t1800;
  t1737 = -1.*t203*t470;
  t1745 = -1.*t118*t479;
  t1767 = t1737 + t1745;
  t847 = -1.*t118*t409*t203;
  t887 = t409*t470*t479;
  t905 = t847 + t887;
  t930 = t118*t203*t382;
  t932 = -1.*t470*t382*t479;
  t937 = t930 + t932;
  t2514 = -1.*t118;
  t2516 = 1. + t2514;
  t2536 = 0.081715*t2516;
  t2537 = 0.061715*t118;
  t2547 = t2536 + t2537;
  t1644 = t409*t1534;
  t2623 = 0.055855*t470;
  t2625 = t118*t1456;
  t2627 = t2623 + t2625;
  t2639 = 0.13757*t118;
  t2654 = -1.*t470*t1456;
  t2661 = t2536 + t2639 + t2654;
  t1547 = -1.*t1534*t382;
  t2115 = t1804*t651;
  t1926 = -1.*t1804*t1838;
  t2823 = 0.035165*t470;
  t2827 = t118*t2069;
  t2832 = t2823 + t2827;
  t2844 = 0.081715*t2516;
  t2848 = 0.11688*t118;
  t2855 = -1.*t470*t2069;
  t2859 = t2844 + t2848 + t2855;
  t3087 = -0.055855*t470;
  t3108 = -1.*t118*t1456;
  t3111 = t3087 + t3108;
  t3157 = 0.055855*t118;
  t3158 = t3157 + t2654;
  t3044 = t118*t203;
  t3047 = -1.*t470*t479;
  t3051 = t3044 + t3047;
  t3009 = t2547*t118;
  t2295 = -1.*t118*t203;
  t2329 = t470*t479;
  t2332 = t2295 + t2329;
  t4659 = 0. + t470;
  t4719 = 0. + t118;
  t2836 = t118*t437;
  t2837 = 0. + t2836;
  t2860 = -1.*t470*t437;
  t2862 = 0. + t2860;
  t6077 = 0.035165*t118;
  t6143 = t6077 + t2855;
  t2903 = t118*t651;
  t2913 = 0. + t2903;
  t6193 = -0.035165*t470;
  t6248 = -1.*t118*t2069;
  t6280 = t6193 + t6248;
  t2929 = -1.*t470*t651;
  t2948 = 0. + t2929;
  t5711 = Sin(var1[4]);
  t10210 = Power(t23,2);
  t5743 = t382*t5711;
  t5754 = -1.*t409*t203*t470;
  t5795 = -1.*t118*t409*t479;
  t5796 = t5754 + t5795;
  t5814 = t23*t5796;
  t5820 = t5743 + t5814;
  t6584 = t4719*t203;
  t6630 = -1.*t4659*t479;
  t6644 = 0. + t6584 + t6630;
  t6764 = t23*t6644;
  t6771 = 0. + t6764;
  t7584 = t409*t5711;
  t7616 = t203*t470*t382;
  t7684 = t118*t382*t479;
  t7814 = t7616 + t7684;
  t7820 = t23*t7814;
  t7903 = t7584 + t7820;
  t8551 = t651*t5711;
  t8727 = t203*t2862;
  t8769 = -1.*t2837*t479;
  t8901 = 0. + t8727 + t8769;
  t9324 = t23*t8901;
  t9325 = 0. + t8551 + t9324;
  t10043 = t1838*t5711;
  t10077 = t203*t2948;
  t10078 = -1.*t2913*t479;
  t10096 = 0. + t10077 + t10078;
  t10097 = t23*t10096;
  t10145 = 0. + t10043 + t10097;
  t10460 = Cos(var1[3]);
  t10543 = -1.*t10460*t5711*t1767;
  t10547 = Sin(var1[3]);
  t10560 = t10547*t3051;
  t10571 = t10543 + t10560;
  t11446 = t10547*t5711*t1767;
  t11467 = t10460*t3051;
  t11469 = t11446 + t11467;
  t10582 = t203*t470;
  t10612 = t118*t479;
  t10622 = t10582 + t10612;
  t10864 = -1.*t203*t470*t437;
  t10867 = -1.*t118*t437*t479;
  t10879 = t10864 + t10867;
  t10939 = -1.*t203*t470*t651;
  t10949 = -1.*t118*t651*t479;
  t10952 = t10939 + t10949;
  t10971 = t118*t409*t203;
  t10973 = -1.*t409*t470*t479;
  t10974 = t10971 + t10973;
  t11000 = t23*t382;
  t11030 = -1.*t5711*t5796;
  t11035 = t11000 + t11030;
  t11060 = t203*t4659;
  t11073 = t4719*t479;
  t11097 = 0. + t11060 + t11073;
  t11108 = -1.*t5711*t6644;
  t11110 = 0. + t11108;
  t11123 = -1.*t118*t203*t382;
  t11130 = t470*t382*t479;
  t11133 = t11123 + t11130;
  t11159 = t409*t23;
  t11164 = -1.*t5711*t7814;
  t11171 = t11159 + t11164;
  t11210 = t203*t2837;
  t11217 = t2862*t479;
  t11239 = 0. + t11210 + t11217;
  t11280 = t23*t651;
  t11283 = -1.*t5711*t8901;
  t11284 = 0. + t11280 + t11283;
  t11330 = t203*t2913;
  t11358 = t2948*t479;
  t11359 = 0. + t11330 + t11358;
  t11367 = t23*t1838;
  t11376 = -1.*t5711*t10096;
  t11377 = 0. + t11367 + t11376;
  t11864 = -0.02*t203*t470;
  t11867 = t2547*t479;
  t11871 = t11864 + t11867;
  t11879 = t2547*t203;
  t11880 = 0.02*t470*t479;
  t11881 = t11879 + t11880;
  t11978 = 0.02*t203*t470;
  t11981 = 0.02*t118*t479;
  t12000 = t11978 + t11981;
  t12007 = -0.02*t118*t203;
  t12008 = t12007 + t11880;
  t12093 = t203*t2661;
  t12094 = -1.*t2627*t479;
  t12096 = t12093 + t12094;
  t12142 = t203*t2627;
  t12143 = t2661*t479;
  t12144 = t12142 + t12143;
  t12114 = -1.*t3051*t12096;
  t12149 = -1.*t10622*t12144;
  t12155 = t12114 + t12149;
  t12189 = t203*t3158;
  t12197 = t3111*t479;
  t12213 = t12189 + t12197;
  t12228 = t203*t3111;
  t12229 = -1.*t3158*t479;
  t12233 = t12228 + t12229;
  t12159 = t1534*t382;
  t12160 = t5796*t12096;
  t12175 = t10974*t12144;
  t12177 = t12159 + t12160 + t12175;
  t12261 = t3051*t12096;
  t12270 = t10622*t12144;
  t12272 = t12261 + t12270;
  t12306 = -1.*t409*t1534;
  t12320 = -1.*t12096*t7814;
  t12321 = -1.*t12144*t11133;
  t12322 = t12306 + t12320 + t12321;
  t12451 = -1.*t5796*t12096;
  t12452 = -1.*t10974*t12144;
  t12461 = t1547 + t12451 + t12452;
  t12484 = t12096*t7814;
  t12485 = t12144*t11133;
  t12487 = t1644 + t12484 + t12485;
  t12507 = t203*t2859;
  t12512 = -1.*t2832*t479;
  t12513 = 0. + t12507 + t12512;
  t12519 = t203*t2832;
  t12520 = t2859*t479;
  t12521 = 0. + t12519 + t12520;
  t12516 = t6644*t12513;
  t12522 = t11097*t12521;
  t12523 = 0. + t12516 + t12522;
  t12580 = t203*t6280;
  t12581 = -1.*t6143*t479;
  t12589 = t12580 + t12581;
  t12562 = t203*t6143;
  t12565 = t6280*t479;
  t12571 = t12562 + t12565;
  t12530 = -1.*t1804*t651;
  t12535 = -1.*t12513*t8901;
  t12541 = -1.*t12521*t11239;
  t12554 = t12530 + t12535 + t12541;
  t12661 = t12513*t8901;
  t12669 = t12521*t11239;
  t12670 = t2115 + t12661 + t12669;
  t12683 = -1.*t12513*t10096;
  t12684 = -1.*t12521*t11359;
  t12691 = t1926 + t12683 + t12684;
  t12724 = -1.*t6644*t12513;
  t12725 = -1.*t11097*t12521;
  t12729 = 0. + t12724 + t12725;
  t12736 = t1804*t1838;
  t12737 = t12513*t10096;
  t12741 = t12521*t11359;
  t12742 = t12736 + t12737 + t12741;
  t11874 = t11871*t3051;
  t12848 = -0.194401*t5711;
  t12849 = t23*t11881;
  t12850 = t12848 + t12849;
  t12859 = -0.194401*t23;
  t12863 = -1.*t5711*t11881;
  t12868 = t12859 + t12863;
  t11970 = -1.*t11871*t3051;
  t12858 = -1.*t5711*t12850;
  t12869 = -1.*t23*t12868;
  t12872 = t12858 + t12869;
  t12880 = t23*t1767*t12850;
  t12881 = -1.*t5711*t1767*t12868;
  t12876 = Power(t5711,2);
  t12011 = -1.*t10622*t12008;
  t12901 = -1.*t23*t1767*t12850;
  t12903 = t5711*t1767*t12868;
  t11903 = -1.*t11871*t10622;
  t12016 = t11871*t1767;
  t12018 = t3051*t12008;
  t12886 = t5711*t12850;
  t12891 = t23*t12868;
  t12899 = t12886 + t12891;
  t12245 = -1.*t10622*t12213;
  t12249 = -1.*t3051*t12144;
  t13004 = t1534*t5711;
  t13005 = t23*t12096;
  t13006 = t13004 + t13005;
  t13010 = t23*t1534;
  t13012 = -1.*t5711*t12096;
  t13022 = t13010 + t13012;
  t12214 = t10974*t12213;
  t12240 = t5796*t12144;
  t13031 = -1.*t23*t3051*t13006;
  t13032 = t5711*t3051*t13022;
  t13033 = t12149 + t13031 + t13032;
  t13044 = t5820*t13006;
  t13045 = t11035*t13022;
  t13048 = t12175 + t13044 + t13045;
  t12367 = t10622*t12213;
  t12371 = t3051*t12144;
  t12385 = -1.*t12144*t7814;
  t12401 = -1.*t12213*t11133;
  t13081 = t23*t3051*t13006;
  t13085 = -1.*t5711*t3051*t13022;
  t13088 = t12270 + t13081 + t13085;
  t13106 = -1.*t13006*t7903;
  t13109 = -1.*t13022*t11171;
  t13110 = t12321 + t13106 + t13109;
  t12436 = -1.*t10974*t12213;
  t12444 = -1.*t5796*t12144;
  t12476 = t12144*t7814;
  t12478 = t12213*t11133;
  t13137 = -1.*t5820*t13006;
  t13138 = -1.*t11035*t13022;
  t13139 = t12452 + t13137 + t13138;
  t13153 = t13006*t7903;
  t13154 = t13022*t11171;
  t13156 = t12485 + t13153 + t13154;
  t12576 = t11097*t12571;
  t12594 = t3051*t12521;
  t13169 = t1804*t5711;
  t13170 = t23*t12513;
  t13172 = 0. + t13169 + t13170;
  t13180 = t23*t1804;
  t13181 = -1.*t5711*t12513;
  t13182 = 0. + t13180 + t13181;
  t12601 = -1.*t12521*t10879;
  t12621 = -1.*t12571*t11239;
  t13187 = t6771*t13172;
  t13192 = t11110*t13182;
  t13198 = t12522 + t13187 + t13192;
  t13211 = -1.*t13172*t9325;
  t13212 = -1.*t13182*t11284;
  t13213 = t12541 + t13211 + t13212;
  t12629 = t12521*t10879;
  t12646 = t12571*t11239;
  t12672 = -1.*t12521*t10952;
  t12680 = -1.*t12571*t11359;
  t13241 = t13172*t9325;
  t13242 = t13182*t11284;
  t13243 = t12669 + t13241 + t13242;
  t13261 = -1.*t13172*t10145;
  t13265 = -1.*t13182*t11377;
  t13267 = t12684 + t13261 + t13265;
  t12776 = -1.*t11097*t12571;
  t12792 = -1.*t3051*t12521;
  t12801 = t12521*t10952;
  t12810 = t12571*t11359;
  t13292 = -1.*t6771*t13172;
  t13293 = -1.*t11110*t13182;
  t13297 = t12725 + t13292 + t13293;
  t13310 = t13172*t10145;
  t13311 = t13182*t11377;
  t13312 = t12741 + t13310 + t13311;
  t11627 = t10460*t10879;
  t11630 = t10547*t5711*t523;
  t11663 = t11627 + t11630;
  t11671 = t10460*t10952;
  t11682 = t10547*t5711*t708;
  t11692 = t11671 + t11682;
  t11563 = t10460*t5796;
  t11572 = t10547*t5711*t905;
  t11577 = t11563 + t11572;
  t11612 = t10460*t7814;
  t11613 = t10547*t5711*t937;
  t11619 = t11612 + t11613;
  t1048 = t327*t1035;
  t1052 = 0.194401*t423;
  t1177 = t1165*t423;
  t1190 = 0. + t1048 + t1052 + t1177;
  t1200 = -0.194401*t327;
  t1211 = -1.*t327*t1165;
  t1239 = t1035*t423;
  t1283 = 0. + t1200 + t1211 + t1239;
  t1460 = -1.*t409*t1456;
  t1558 = t1460 + t1547;
  t1574 = t409*t1558;
  t1658 = -1.*t1456*t382;
  t1710 = t1644 + t1658;
  t1713 = t382*t1710;
  t1727 = t1574 + t1713;
  t2081 = -1.*t2069*t651;
  t2086 = 0. + t1926 + t2081;
  t2101 = t651*t2086;
  t2108 = t2069*t437;
  t2123 = 0. + t2108 + t2115;
  t2126 = t1838*t2123;
  t2167 = 0. + t2101 + t2126;
  t11497 = t10460*t1767;
  t11527 = t10547*t5711*t2332;
  t11553 = t11497 + t11527;
  t2370 = -0.081715*t437;
  t2378 = -0.11688*t1838;
  t2383 = 0. + t2370 + t2378;
  t2442 = 0.035165*t651;
  t2451 = 0. + t2442;
  t2561 = -1.*t2547*t470;
  t2574 = -0.02*t118*t470;
  t2581 = t2561 + t2574;
  t2602 = t2547*t470;
  t2608 = 0.02*t118*t470;
  t2616 = t2602 + t2608;
  t2638 = -1.*t118*t2627*t382;
  t2702 = t470*t2661*t382;
  t2748 = t1644 + t2638 + t2702;
  t2763 = t382*t2748;
  t2764 = -1.*t118*t409*t2627;
  t2779 = t409*t470*t2661;
  t2785 = t2764 + t2779 + t1547;
  t2809 = t409*t2785;
  t2816 = t2763 + t2809;
  t2840 = t2832*t2837;
  t2879 = t2859*t2862;
  t2880 = t2115 + t2840 + t2879;
  t2882 = t1838*t2880;
  t2924 = -1.*t2832*t2913;
  t2950 = -1.*t2859*t2948;
  t2959 = t1926 + t2924 + t2950;
  t2963 = t651*t2959;
  t2992 = 0. + t2882 + t2963;
  t3015 = Power(t118,2);
  t3016 = 0.02*t3015;
  t3035 = t3009 + t3016;
  t11479 = t10460*t10622;
  t11484 = t10547*t5711*t3051;
  t11490 = t11479 + t11484;
  t3123 = t409*t470*t3111;
  t3133 = t409*t470*t2627;
  t3164 = -1.*t118*t409*t3158;
  t3227 = t118*t409*t2661;
  t3259 = t3123 + t3133 + t3164 + t3227;
  t3328 = t409*t3259;
  t3364 = t470*t3111*t382;
  t3396 = t470*t2627*t382;
  t3400 = -1.*t118*t3158*t382;
  t3413 = t118*t2661*t382;
  t3441 = t3364 + t3396 + t3400 + t3413;
  t3506 = t382*t3441;
  t3554 = t3328 + t3506;
  t3758 = Power(t470,2);
  t3810 = -0.02*t3758;
  t3872 = t3009 + t3810;
  t4108 = t470*t2627;
  t4141 = t118*t2661;
  t4263 = t4108 + t4141;
  t4306 = -1.*t470*t2627;
  t4312 = -1.*t118*t2661;
  t4393 = t4306 + t4312;
  t4705 = -1.*t4659*t2832;
  t4781 = -1.*t4719*t2859;
  t4836 = 0. + t4705 + t4781;
  t4938 = t4836*t1838;
  t4949 = 0. + t4938;
  t5070 = t4659*t2832;
  t5093 = t4719*t2859;
  t5153 = 0. + t5070 + t5093;
  t5179 = t5153*t651;
  t5335 = 0. + t5179;
  t5481 = t118*t3111;
  t5515 = t118*t2627;
  t5557 = t470*t3158;
  t5641 = -1.*t470*t2661;
  t5678 = t5481 + t5515 + t5557 + t5641;
  t11696 = t10460*t10974;
  t11701 = -1.*t10547*t11035;
  t11702 = t11696 + t11701;
  t5987 = -1.*t470*t2832*t437;
  t6039 = -1.*t118*t2859*t437;
  t6187 = t6143*t2837;
  t6348 = t6280*t2862;
  t6438 = t5987 + t6039 + t6187 + t6348;
  t6447 = t1838*t6438;
  t6463 = t470*t2832*t651;
  t6484 = t118*t2859*t651;
  t6495 = -1.*t6143*t2913;
  t6511 = -1.*t6280*t2948;
  t6513 = t6463 + t6484 + t6495 + t6511;
  t6517 = t651*t6513;
  t6583 = t6447 + t6517;
  t11708 = t10460*t11097;
  t11715 = -1.*t10547*t11110;
  t11724 = 0. + t11708 + t11715;
  t6834 = -1.*t118*t3111;
  t7070 = -1.*t118*t2627;
  t7156 = -1.*t470*t3158;
  t7353 = t470*t2661;
  t7569 = t6834 + t7070 + t7156 + t7353;
  t11757 = t10460*t11133;
  t11761 = -1.*t10547*t11171;
  t11768 = t11757 + t11761;
  t8036 = -1.*t4719*t6280;
  t8065 = -1.*t118*t2832;
  t8077 = -1.*t4659*t6143;
  t8129 = t470*t2859;
  t8387 = t8036 + t8065 + t8077 + t8129;
  t11797 = t10460*t11239;
  t11798 = -1.*t10547*t11284;
  t11806 = 0. + t11797 + t11798;
  t9947 = t4719*t6280;
  t10007 = t118*t2832;
  t10028 = t4659*t6143;
  t10032 = -1.*t470*t2859;
  t10037 = t9947 + t10007 + t10028 + t10032;
  t11808 = t10460*t11359;
  t11811 = -1.*t10547*t11377;
  t11815 = 0. + t11808 + t11811;
  t11475 = 2.622*t23*t3051*t11469;
  t11477 = 1.095*t23*t2332*t11469;
  t11494 = 2.622*t23*t1767*t11490;
  t11557 = 1.095*t23*t1767*t11553;
  t11589 = 1.527*t5820*t11577;
  t11602 = 0.241*t11469*t6771;
  t11621 = 1.527*t7903*t11619;
  t11664 = 0.241*t11663*t9325;
  t11695 = 0.241*t11692*t10145;
  t11704 = 1.527*t23*t905*t11702;
  t11732 = 0.241*t23*t1767*t11724;
  t11785 = 1.527*t23*t937*t11768;
  t11807 = 0.241*t23*t523*t11806;
  t11817 = 0.241*t23*t708*t11815;
  t11824 = t11475 + t11477 + t11494 + t11557 + t11589 + t11602 + t11621 + t11664 + t11695 + t11704 + t11732 + t11785 + t11807 + t11817;
  t10627 = t10547*t10622;
  t10652 = -1.*t10460*t5711*t3051;
  t10654 = t10627 + t10652;
  t10691 = t10547*t1767;
  t10699 = -1.*t10460*t5711*t2332;
  t10700 = t10691 + t10699;
  t10975 = t10547*t10974;
  t11036 = t10460*t11035;
  t11046 = t10975 + t11036;
  t10725 = t10547*t5796;
  t10744 = -1.*t10460*t5711*t905;
  t10761 = t10725 + t10744;
  t11098 = t10547*t11097;
  t11111 = t10460*t11110;
  t11112 = 0. + t11098 + t11111;
  t11139 = t10547*t11133;
  t11198 = t10460*t11171;
  t11199 = t11139 + t11198;
  t10843 = t10547*t7814;
  t10845 = -1.*t10460*t5711*t937;
  t10856 = t10843 + t10845;
  t11274 = t10547*t11239;
  t11286 = t10460*t11284;
  t11314 = 0. + t11274 + t11286;
  t10895 = t10547*t10879;
  t10902 = -1.*t10460*t5711*t523;
  t10931 = t10895 + t10902;
  t11366 = t10547*t11359;
  t11382 = t10460*t11377;
  t11385 = 0. + t11366 + t11382;
  t10963 = t10547*t10952;
  t10964 = -1.*t10460*t5711*t708;
  t10967 = t10963 + t10964;
  t11895 = t1767*t11881;
  t11896 = t11874 + t11895;
  t11902 = t3051*t11896;
  t11906 = -1.*t3051*t11881;
  t11944 = t11903 + t11906;
  t11949 = t1767*t11944;
  t12002 = -1.*t12000*t3051;
  t12003 = -1.*t1767*t11881;
  t12013 = t11970 + t12002 + t12003 + t12011;
  t12015 = t3051*t12013;
  t12017 = t1767*t12000;
  t12055 = t11881*t2332;
  t12074 = t12016 + t12017 + t12018 + t12055;
  t12075 = t10622*t12074;
  t12089 = t11902 + t11949 + t12015 + t12075;
  t12158 = t10974*t12155;
  t12178 = t10622*t12177;
  t12179 = t12158 + t12178;
  t12185 = t5796*t12155;
  t12227 = t905*t12096;
  t12235 = t5796*t12233;
  t12241 = t12214 + t12227 + t12235 + t12240;
  t12244 = t10622*t12241;
  t12246 = -1.*t1767*t12096;
  t12247 = -1.*t3051*t12233;
  t12250 = t12245 + t12246 + t12247 + t12249;
  t12251 = t10974*t12250;
  t12253 = t3051*t12177;
  t12258 = t12185 + t12244 + t12251 + t12253;
  t12277 = t11133*t12272;
  t12331 = t10622*t12322;
  t12341 = t12277 + t12331;
  t12363 = t7814*t12272;
  t12368 = t1767*t12096;
  t12369 = t3051*t12233;
  t12375 = t12367 + t12368 + t12369 + t12371;
  t12378 = t11133*t12375;
  t12383 = -1.*t12233*t7814;
  t12389 = -1.*t12096*t937;
  t12406 = t12383 + t12385 + t12389 + t12401;
  t12408 = t10622*t12406;
  t12421 = t3051*t12322;
  t12434 = t12363 + t12378 + t12408 + t12421;
  t12439 = -1.*t905*t12096;
  t12440 = -1.*t5796*t12233;
  t12445 = t12436 + t12439 + t12440 + t12444;
  t12446 = t11133*t12445;
  t12462 = t7814*t12461;
  t12475 = t12233*t7814;
  t12477 = t12096*t937;
  t12480 = t12475 + t12476 + t12477 + t12478;
  t12483 = t10974*t12480;
  t12488 = t5796*t12487;
  t12492 = t12446 + t12462 + t12483 + t12488;
  t12497 = t11133*t12461;
  t12501 = t10974*t12487;
  t12503 = t12497 + t12501;
  t12528 = t11239*t12523;
  t12558 = t11097*t12554;
  t12559 = t12528 + t12558;
  t12561 = t10879*t12523;
  t12577 = t1767*t12513;
  t12592 = t6644*t12589;
  t12599 = t12576 + t12577 + t12592 + t12594;
  t12600 = t11239*t12599;
  t12607 = -1.*t12513*t523;
  t12617 = -1.*t12589*t8901;
  t12622 = t12601 + t12607 + t12617 + t12621;
  t12623 = t11097*t12622;
  t12624 = t3051*t12554;
  t12625 = t12561 + t12600 + t12623 + t12624;
  t12633 = t12513*t523;
  t12635 = t12589*t8901;
  t12649 = t12629 + t12633 + t12635 + t12646;
  t12651 = t11359*t12649;
  t12671 = t10952*t12670;
  t12673 = -1.*t12513*t708;
  t12676 = -1.*t12589*t10096;
  t12681 = t12672 + t12673 + t12676 + t12680;
  t12682 = t11239*t12681;
  t12695 = t10879*t12691;
  t12698 = t12651 + t12671 + t12682 + t12695;
  t12706 = t11359*t12670;
  t12707 = t11239*t12691;
  t12708 = 0. + t12706 + t12707;
  t12733 = t11359*t12729;
  t12750 = t11097*t12742;
  t12752 = t12733 + t12750;
  t12754 = t10952*t12729;
  t12789 = -1.*t1767*t12513;
  t12790 = -1.*t6644*t12589;
  t12794 = t12776 + t12789 + t12790 + t12792;
  t12797 = t11359*t12794;
  t12805 = t12513*t708;
  t12807 = t12589*t10096;
  t12811 = t12801 + t12805 + t12807 + t12810;
  t12819 = t11097*t12811;
  t12820 = t3051*t12742;
  t12835 = t12754 + t12797 + t12819 + t12820;
  t12873 = t23*t1767*t12872;
  t12875 = t10210*t12000*t3051;
  t12878 = t12876*t12000*t3051;
  t12879 = t10622*t12008;
  t12882 = t11874 + t12875 + t12878 + t12879 + t12880 + t12881;
  t12883 = t5711*t12882;
  t12884 = t12873 + t12883;
  t12900 = t23*t1767*t12899;
  t12904 = t11970 + t12901 + t12903;
  t12908 = t5711*t12904;
  t12912 = t12900 + t12908;
  t12922 = t23*t3051*t12872;
  t12923 = t11871*t10622;
  t12924 = t23*t3051*t12850;
  t12925 = -1.*t5711*t3051*t12868;
  t12927 = t12923 + t12924 + t12925;
  t12930 = t5711*t12927;
  t12933 = t12922 + t12930;
  t12938 = t11874 + t12880 + t12881;
  t12940 = t23*t1767*t12938;
  t12941 = -1.*t10210*t12000*t3051;
  t12942 = -1.*t12876*t12000*t3051;
  t12944 = t11970 + t12941 + t12942 + t12011 + t12901 + t12903;
  t12945 = t23*t1767*t12944;
  t12946 = -1.*t23*t3051*t12850;
  t12947 = t5711*t3051*t12868;
  t12948 = t11903 + t12946 + t12947;
  t12949 = t23*t2332*t12948;
  t12950 = t10210*t1767*t12000;
  t12951 = t12876*t1767*t12000;
  t12952 = t23*t2332*t12850;
  t12953 = -1.*t5711*t2332*t12868;
  t12954 = t12016 + t12950 + t12951 + t12018 + t12952 + t12953;
  t12955 = t23*t3051*t12954;
  t12956 = t12940 + t12945 + t12949 + t12955;
  t12965 = t23*t2332*t12899;
  t12967 = -1.*t11871*t1767;
  t12968 = -1.*t10210*t1767*t12000;
  t12969 = -1.*t12876*t1767*t12000;
  t12970 = -1.*t3051*t12008;
  t12973 = -1.*t23*t2332*t12850;
  t12974 = t5711*t2332*t12868;
  t12977 = t12967 + t12968 + t12969 + t12970 + t12973 + t12974;
  t12979 = t5711*t12977;
  t12991 = t12965 + t12979;
  t13002 = -1.*t10210*t3051*t12233;
  t13003 = -1.*t12876*t3051*t12233;
  t13007 = -1.*t23*t1767*t13006;
  t13024 = t5711*t1767*t13022;
  t13026 = t12245 + t13002 + t13003 + t12249 + t13007 + t13024;
  t13027 = t5820*t13026;
  t13035 = t23*t905*t13033;
  t13036 = t23*t12233*t5820;
  t13037 = -1.*t5711*t12233*t11035;
  t13039 = t23*t905*t13006;
  t13040 = -1.*t5711*t905*t13022;
  t13041 = t12214 + t12240 + t13036 + t13037 + t13039 + t13040;
  t13042 = t23*t3051*t13041;
  t13049 = t23*t1767*t13048;
  t13053 = t13027 + t13035 + t13042 + t13049;
  t13056 = t5820*t13033;
  t13058 = t23*t3051*t13048;
  t13059 = t13056 + t13058;
  t13064 = t10210*t3051*t12233;
  t13066 = t12876*t3051*t12233;
  t13069 = t23*t1767*t13006;
  t13074 = -1.*t5711*t1767*t13022;
  t13075 = t12367 + t13064 + t13066 + t12371 + t13069 + t13074;
  t13079 = t7903*t13075;
  t13090 = t23*t937*t13088;
  t13094 = -1.*t23*t937*t13006;
  t13098 = t5711*t937*t13022;
  t13099 = -1.*t23*t12233*t7903;
  t13103 = t5711*t12233*t11171;
  t13104 = t12385 + t12401 + t13094 + t13098 + t13099 + t13103;
  t13105 = t23*t3051*t13104;
  t13114 = t23*t1767*t13110;
  t13116 = t13079 + t13090 + t13105 + t13114;
  t13120 = t7903*t13088;
  t13121 = t23*t3051*t13110;
  t13124 = t13120 + t13121;
  t13127 = -1.*t23*t12233*t5820;
  t13128 = t5711*t12233*t11035;
  t13131 = -1.*t23*t905*t13006;
  t13132 = t5711*t905*t13022;
  t13133 = t12436 + t12444 + t13127 + t13128 + t13131 + t13132;
  t13134 = t7903*t13133;
  t13140 = t23*t937*t13139;
  t13141 = t23*t937*t13006;
  t13142 = -1.*t5711*t937*t13022;
  t13144 = t23*t12233*t7903;
  t13150 = -1.*t5711*t12233*t11171;
  t13151 = t12476 + t12478 + t13141 + t13142 + t13144 + t13150;
  t13152 = t5820*t13151;
  t13157 = t23*t905*t13156;
  t13158 = t13134 + t13140 + t13152 + t13157;
  t13161 = t7903*t13139;
  t13162 = t5820*t13156;
  t13164 = t13161 + t13162;
  t13167 = t23*t12589*t6771;
  t13168 = -1.*t5711*t12589*t11110;
  t13173 = t23*t1767*t13172;
  t13183 = -1.*t5711*t1767*t13182;
  t13185 = t12576 + t12594 + t13167 + t13168 + t13173 + t13183;
  t13186 = t9325*t13185;
  t13199 = t23*t523*t13198;
  t13204 = -1.*t23*t523*t13172;
  t13205 = t5711*t523*t13182;
  t13207 = -1.*t23*t12589*t9325;
  t13208 = t5711*t12589*t11284;
  t13209 = t12601 + t12621 + t13204 + t13205 + t13207 + t13208;
  t13210 = t6771*t13209;
  t13215 = t23*t1767*t13213;
  t13216 = t13186 + t13199 + t13210 + t13215;
  t13220 = t9325*t13198;
  t13222 = t6771*t13213;
  t13223 = t13220 + t13222;
  t13225 = t23*t523*t13172;
  t13227 = -1.*t5711*t523*t13182;
  t13229 = t23*t12589*t9325;
  t13231 = -1.*t5711*t12589*t11284;
  t13239 = t12629 + t12646 + t13225 + t13227 + t13229 + t13231;
  t13240 = t10145*t13239;
  t13244 = t23*t708*t13243;
  t13245 = -1.*t23*t708*t13172;
  t13246 = t5711*t708*t13182;
  t13249 = -1.*t23*t12589*t10145;
  t13250 = t5711*t12589*t11377;
  t13257 = t12672 + t12680 + t13245 + t13246 + t13249 + t13250;
  t13258 = t9325*t13257;
  t13268 = t23*t523*t13267;
  t13273 = t13240 + t13244 + t13258 + t13268;
  t13280 = t10145*t13243;
  t13282 = t9325*t13267;
  t13283 = t13280 + t13282;
  t13286 = -1.*t23*t12589*t6771;
  t13287 = t5711*t12589*t11110;
  t13288 = -1.*t23*t1767*t13172;
  t13289 = t5711*t1767*t13182;
  t13290 = t12776 + t12792 + t13286 + t13287 + t13288 + t13289;
  t13291 = t10145*t13290;
  t13300 = t23*t708*t13297;
  t13301 = t23*t708*t13172;
  t13302 = -1.*t5711*t708*t13182;
  t13303 = t23*t12589*t10145;
  t13307 = -1.*t5711*t12589*t11377;
  t13308 = t12801 + t12810 + t13301 + t13302 + t13303 + t13307;
  t13309 = t6771*t13308;
  t13313 = t23*t1767*t13312;
  t13314 = t13291 + t13300 + t13309 + t13313;
  t13318 = t10145*t13297;
  t13319 = t6771*t13312;
  t13320 = t13318 + t13319;
  t10572 = 2.622*t23*t3051*t10571;
  t10575 = 1.095*t23*t2332*t10571;
  t10690 = 2.622*t23*t1767*t10654;
  t10717 = 1.095*t23*t1767*t10700;
  t10782 = 1.527*t5820*t10761;
  t10790 = 0.241*t10571*t6771;
  t10863 = 1.527*t7903*t10856;
  t10936 = 0.241*t10931*t9325;
  t10968 = 0.241*t10967*t10145;
  t11054 = 1.527*t23*t905*t11046;
  t11122 = 0.241*t23*t1767*t11112;
  t11206 = 1.527*t23*t937*t11199;
  t11315 = 0.241*t23*t523*t11314;
  t11414 = 0.241*t23*t708*t11385;
  t11423 = t10572 + t10575 + t10690 + t10717 + t10782 + t10790 + t10863 + t10936 + t10968 + t11054 + t11122 + t11206 + t11315 + t11414;
  t13382 = 2.622*t11469*t10654;
  t13383 = 2.622*t10571*t11490;
  t13384 = 1.095*t11469*t10700;
  t13385 = 1.095*t10571*t11553;
  t13386 = 1.527*t11577*t11046;
  t13387 = 1.527*t10761*t11702;
  t13388 = 0.241*t11469*t11112;
  t13389 = 0.241*t10571*t11724;
  t13390 = 1.527*t11619*t11199;
  t13391 = 1.527*t10856*t11768;
  t13393 = 0.241*t11663*t11314;
  t13397 = 0.241*t10931*t11806;
  t13398 = 0.241*t11692*t11385;
  t13401 = 0.241*t10967*t11815;
  t13405 = t13382 + t13383 + t13384 + t13385 + t13386 + t13387 + t13388 + t13389 + t13390 + t13391 + t13393 + t13397 + t13398 + t13401;
  t12885 = 1.095*t23*t1767*t12884;
  t12919 = 1.095*t23*t1767*t12912;
  t12937 = 1.095*t23*t2332*t12933;
  t12959 = 1.095*t5711*t12956;
  t13000 = 1.095*t23*t3051*t12991;
  t13055 = 1.527*t7903*t13053;
  t13062 = 1.527*t23*t937*t13059;
  t13117 = 1.527*t5820*t13116;
  t13126 = 1.527*t23*t905*t13124;
  t13160 = 1.527*t23*t3051*t13158;
  t13165 = 1.527*t23*t1767*t13164;
  t13219 = 0.241*t10145*t13216;
  t13224 = 0.241*t23*t708*t13223;
  t13279 = 0.241*t6771*t13273;
  t13285 = 0.241*t23*t1767*t13283;
  t13317 = 0.241*t9325*t13314;
  t13322 = 0.241*t23*t523*t13320;
  t13323 = t12885 + t12919 + t12937 + t12959 + t13000 + t13055 + t13062 + t13117 + t13126 + t13160 + t13165 + t13219 + t13224 + t13279 + t13285 + t13317 + t13322;
  t13607 = 1.095*t10571*t12884;
  t13609 = 1.095*t10571*t12912;
  t13611 = 1.095*t10700*t12933;
  t13613 = 1.095*t10460*t23*t12956;
  t13617 = 1.095*t10654*t12991;
  t13619 = 1.527*t11199*t13053;
  t13621 = 1.527*t10856*t13059;
  t13624 = 1.527*t11046*t13116;
  t13625 = 1.527*t10761*t13124;
  t13629 = 1.527*t10654*t13158;
  t13630 = 1.527*t10571*t13164;
  t13633 = 0.241*t11385*t13216;
  t13634 = 0.241*t10967*t13223;
  t13635 = 0.241*t11112*t13273;
  t13637 = 0.241*t10571*t13283;
  t13639 = 0.241*t11314*t13314;
  t13640 = 0.241*t10931*t13320;
  t13642 = t13607 + t13609 + t13611 + t13613 + t13617 + t13619 + t13621 + t13624 + t13625 + t13629 + t13630 + t13633 + t13634 + t13635 + t13637 + t13639 + t13640;
  t13456 = 1.095*t11469*t12884;
  t13457 = 1.095*t11469*t12912;
  t13459 = 1.095*t11553*t12933;
  t13462 = -1.095*t23*t10547*t12956;
  t13463 = 1.095*t11490*t12991;
  t13467 = 1.527*t11768*t13053;
  t13468 = 1.527*t11619*t13059;
  t13469 = 1.527*t11702*t13116;
  t13473 = 1.527*t11577*t13124;
  t13474 = 1.527*t11490*t13158;
  t13475 = 1.527*t11469*t13164;
  t13476 = 0.241*t11815*t13216;
  t13478 = 0.241*t11692*t13223;
  t13479 = 0.241*t11724*t13273;
  t13480 = 0.241*t11469*t13283;
  t13483 = 0.241*t11806*t13314;
  t13484 = 0.241*t11663*t13320;
  t13488 = t13456 + t13457 + t13459 + t13462 + t13463 + t13467 + t13468 + t13469 + t13473 + t13474 + t13475 + t13476 + t13478 + t13479 + t13480 + t13483 + t13484;
  t13716 = t23*t3051*t12938;
  t13717 = t23*t1767*t12948;
  t13723 = t13716 + t13717;
  t11835 = -0.212869095*t23*t1767*t3051;
  t11860 = 0.212869095*t23*t10622*t2332;
  t12091 = 1.095*t5711*t12089;
  t12184 = 1.527*t23*t937*t12179;
  t12259 = 1.527*t7903*t12258;
  t12345 = 1.527*t23*t905*t12341;
  t12435 = 1.527*t5820*t12434;
  t12496 = 1.527*t23*t3051*t12492;
  t12506 = 1.527*t23*t1767*t12503;
  t12560 = 0.241*t23*t708*t12559;
  t12627 = 0.241*t10145*t12625;
  t12702 = 0.241*t6771*t12698;
  t12712 = 0.241*t23*t1767*t12708;
  t12753 = 0.241*t23*t523*t12752;
  t12836 = 0.241*t9325*t12835;
  t12837 = t11835 + t11860 + t12091 + t12184 + t12259 + t12345 + t12435 + t12496 + t12506 + t12560 + t12627 + t12702 + t12712 + t12753 + t12836;
  t13580 = -0.212869095*t1767*t10654;
  t13581 = 0.212869095*t10622*t10700;
  t13582 = 1.095*t10460*t23*t12089;
  t13583 = 1.527*t10856*t12179;
  t13585 = 1.527*t12258*t11199;
  t13590 = 1.527*t10761*t12341;
  t13591 = 1.527*t11046*t12434;
  t13592 = 1.527*t10654*t12492;
  t13595 = 1.527*t10571*t12503;
  t13596 = 0.241*t10967*t12559;
  t13597 = 0.241*t12625*t11385;
  t13598 = 0.241*t11112*t12698;
  t13599 = 0.241*t10571*t12708;
  t13600 = 0.241*t10931*t12752;
  t13601 = 0.241*t11314*t12835;
  t13603 = t13580 + t13581 + t13582 + t13583 + t13585 + t13590 + t13591 + t13592 + t13595 + t13596 + t13597 + t13598 + t13599 + t13600 + t13601;
  t13423 = -0.212869095*t1767*t11490;
  t13425 = 0.212869095*t10622*t11553;
  t13426 = -1.095*t23*t10547*t12089;
  t13427 = 1.527*t11619*t12179;
  t13428 = 1.527*t12258*t11768;
  t13430 = 1.527*t11577*t12341;
  t13431 = 1.527*t11702*t12434;
  t13435 = 1.527*t11490*t12492;
  t13436 = 1.527*t11469*t12503;
  t13438 = 0.241*t11692*t12559;
  t13440 = 0.241*t12625*t11815;
  t13443 = 0.241*t11724*t12698;
  t13444 = 0.241*t11469*t12708;
  t13447 = 0.241*t11663*t12752;
  t13448 = 0.241*t11806*t12835;
  t13449 = t13423 + t13425 + t13426 + t13427 + t13428 + t13430 + t13431 + t13435 + t13436 + t13438 + t13440 + t13443 + t13444 + t13447 + t13448;
  t13728 = t10622*t11896;
  t13730 = t3051*t11944;
  t13733 = t13728 + t13730;
  t13712 = 0.212869095*t10622*t12884;
  t13714 = -0.212869095*t1767*t12912;
  t13715 = 0.212869095*t3051*t12933;
  t13727 = 1.095*t12089*t13723;
  t13734 = 1.095*t13733*t12956;
  t13735 = -0.212869095*t3051*t12991;
  t13739 = 1.527*t12179*t13053;
  t13741 = 1.527*t12258*t13059;
  t13742 = 1.527*t12341*t13116;
  t13743 = 1.527*t12434*t13124;
  t13745 = 1.527*t12503*t13158;
  t13752 = 1.527*t12492*t13164;
  t13753 = 0.241*t12559*t13216;
  t13755 = 0.241*t12625*t13223;
  t13756 = 0.241*t12708*t13273;
  t13758 = 0.241*t12698*t13283;
  t13761 = 0.241*t12752*t13314;
  t13762 = 0.241*t12835*t13320;
  t13764 = t13712 + t13714 + t13715 + t13727 + t13734 + t13735 + t13739 + t13741 + t13742 + t13743 + t13745 + t13752 + t13753 + t13755 + t13756 + t13758 + t13761 + t13762;
  t13913 = Power(t409,2);
  t13919 = Power(t382,2);
  t2596 = 1.095*t23*t2581*t1767;
  t2622 = 1.095*t23*t2616*t1767;
  t2822 = 1.527*t23*t2816*t1767;
  t13966 = 0.241*t2992;
  t13970 = 0. + t13966;
  t3055 = 1.095*t3035*t23*t3051;
  t3695 = 1.527*t23*t3554*t3051;
  t3952 = 1.095*t23*t3872*t2332;
  t4276 = 1.527*t409*t23*t4263*t905;
  t4565 = 1.527*t23*t4393*t382*t937;
  t13950 = 0.241*t4949;
  t13951 = 0. + t13950;
  t13954 = 0.241*t5335;
  t13955 = 0. + t13954;
  t5888 = 1.527*t409*t5678*t5820;
  t6826 = 0.241*t6583*t6771;
  t7955 = 1.527*t7569*t382*t7903;
  t9680 = 0.241*t8387*t1838*t9325;
  t10150 = 0.241*t10037*t651*t10145;
  t13524 = 1.095*t2581*t10571;
  t13525 = 1.095*t2616*t10571;
  t13526 = 1.527*t2816*t10571;
  t13534 = 1.095*t3035*t10654;
  t13535 = 1.527*t3554*t10654;
  t13536 = 1.095*t3872*t10700;
  t13537 = 1.527*t409*t4263*t10761;
  t13540 = 1.527*t4393*t382*t10856;
  t13543 = 1.527*t409*t5678*t11046;
  t13545 = 0.241*t6583*t11112;
  t13548 = 1.527*t7569*t382*t11199;
  t13554 = 0.241*t8387*t1838*t11314;
  t13556 = 0.241*t10037*t651*t11385;
  t13351 = 1.095*t2581*t11469;
  t13352 = 1.095*t2616*t11469;
  t13353 = 1.527*t2816*t11469;
  t13357 = 1.095*t3035*t11490;
  t13359 = 1.527*t3554*t11490;
  t13361 = 1.095*t3872*t11553;
  t13363 = 1.527*t409*t4263*t11577;
  t13364 = 1.527*t4393*t382*t11619;
  t13370 = 1.527*t409*t5678*t11702;
  t13371 = 0.241*t6583*t11724;
  t13374 = 1.527*t7569*t382*t11768;
  t13375 = 0.241*t8387*t1838*t11806;
  t13376 = 0.241*t10037*t651*t11815;
  t13842 = -0.212869095*t2616*t1767;
  t13843 = 0.212869095*t2581*t10622;
  t13844 = -0.212869095*t3035*t3051;
  t13845 = 0.212869095*t3872*t3051;
  t13846 = 1.527*t7569*t382*t12179;
  t13848 = 1.527*t4393*t382*t12258;
  t13849 = 1.527*t409*t5678*t12341;
  t13850 = 1.527*t409*t4263*t12434;
  t13851 = 1.527*t2816*t12492;
  t13857 = 1.527*t3554*t12503;
  t13858 = 0.241*t10037*t651*t12559;
  t13861 = 0.241*t6583*t12708;
  t13862 = 0.241*t8387*t1838*t12752;
  t13681 = 1.095*t3872*t12884;
  t13683 = 1.095*t3035*t12912;
  t13684 = 1.095*t2581*t12933;
  t13686 = 1.095*t2616*t12991;
  t13687 = 1.527*t4393*t382*t13053;
  t13689 = 1.527*t7569*t382*t13059;
  t13691 = 1.527*t409*t4263*t13116;
  t13692 = 1.527*t409*t5678*t13124;
  t13693 = 1.527*t2816*t13158;
  t13694 = 1.527*t3554*t13164;
  t13697 = 0.241*t10037*t651*t13223;
  t13700 = 0.241*t6583*t13283;
  t13705 = 0.241*t8387*t1838*t13320;
  t13912 = -0.0219*t2581;
  t13915 = 0.085290585*t13913*t5678;
  t13922 = -0.085290585*t7569*t13919;
  t13923 = 1.527*t3554*t1727;
  t1785 = 1.527*t23*t1727*t1767;
  t14031 = 0.241*t2167;
  t14033 = 0. + t14031;
  t2333 = -0.0219*t23*t2332;
  t2338 = 0.085290585*t409*t23*t905;
  t2349 = -0.085290585*t23*t382*t937;
  t14020 = 0.241*t2383;
  t14021 = 0. + t14020;
  t14025 = 0.241*t2451;
  t14028 = 0. + t14025;
  t13511 = 1.527*t1727*t10571;
  t13514 = -0.0219*t10700;
  t13516 = 0.085290585*t409*t10761;
  t13518 = -0.085290585*t382*t10856;
  t13338 = 1.527*t1727*t11469;
  t13341 = -0.0219*t11553;
  t13343 = 0.085290585*t409*t11577;
  t13344 = -0.085290585*t382*t11619;
  t13821 = -0.0042573819*t3051;
  t13822 = -0.085290585*t382*t12258;
  t13827 = 0.085290585*t409*t12434;
  t13829 = 1.527*t1727*t12492;
  t13661 = -0.0219*t12884;
  t13663 = -0.085290585*t382*t13053;
  t13667 = 0.085290585*t409*t13116;
  t13668 = 1.527*t1727*t13158;
  t13902 = 0.06108*t409*t5678;
  t13903 = -0.06108*t7569*t382;
  t906 = 0.06108*t23*t905;
  t945 = -0.06108*t23*t937;
  t14077 = 0.241*t1190;
  t14078 = 0. + t14077;
  t14082 = 0.241*t1283;
  t14085 = 0. + t14082;
  t13500 = 0.06108*t10761;
  t13502 = -0.06108*t10856;
  t13332 = 0.06108*t11577;
  t13333 = -0.06108*t11619;
  t13809 = -0.06108*t12258;
  t13810 = 0.06108*t12434;
  t13652 = -0.06108*t13053;
  t13654 = 0.06108*t13116;
  t13897 = -0.03856*t8387*t1838;
  t13899 = 0.004820000000000004*t10037*t651;
  t13900 = t13897 + t13899;
  t529 = -0.03856*t23*t523;
  t764 = 0.004820000000000004*t23*t708;
  t789 = t529 + t764;
  t13494 = -0.03856*t10931;
  t13496 = 0.004820000000000004*t10967;
  t13497 = t13494 + t13496;
  t13328 = -0.03856*t11663;
  t13329 = 0.004820000000000004*t11692;
  t13330 = t13328 + t13329;
  t13796 = 0.004820000000000004*t12625;
  t13798 = -0.03856*t12835;
  t13800 = t13796 + t13798;
  t13648 = 0.004820000000000004*t13216;
  t13649 = -0.03856*t13314;
  t13650 = t13648 + t13649;
  p_output1[0]=var2[15]*(-0.5*(2.19*t10210*t1767*t2332 + 5.244*t10210*t1767*t3051 + 0.482*t1767*t23*t6771 + 0.482*t10145*t23*t708 + 3.054*t23*t5820*t905 + 0.482*t23*t523*t9325 + 3.054*t23*t7903*t937)*var2[0] - 0.5*t11824*var2[1] - 0.5*t11423*var2[2] - 0.5*t13323*var2[3] - 0.5*t12837*var2[4] - 0.5*(t10150 + t2596 + t2622 + t2822 + 0.241*t1767*t23*t2992 + t3055 + t3695 + t3952 + t4276 + t4565 + 0.241*t23*t4949*t523 + t5888 + t6826 + 0.241*t23*t5335*t708 + t7955 + t9680)*var2[5] - 0.5*(t1785 + 0.241*t1767*t2167*t23 + t2333 + t2338 + t2349 + 0.241*t23*t2383*t523 + 0.241*t23*t2451*t708)*var2[15] - 0.5*(0.241*t1190*t23*t523 + 0.241*t1283*t23*t708 + t906 + t945)*var2[16] - 0.5*t789*var2[17]);
  p_output1[1]=var2[15]*(-0.5*t11824*var2[0] - 0.5*(5.244*t11469*t11490 + 2.19*t11469*t11553 + 3.054*t11577*t11702 + 0.482*t11469*t11724 + 3.054*t11619*t11768 + 0.482*t11663*t11806 + 0.482*t11692*t11815)*var2[1] - 0.5*t13405*var2[2] - 0.5*t13488*var2[3] - 0.5*t13449*var2[4] - 0.5*(t13351 + t13352 + t13353 + t13357 + t13359 + t13361 + t13363 + t13364 + t13370 + t13371 + t13374 + t13375 + t13376 + 0.241*t11469*t2992 + 0.241*t11663*t4949 + 0.241*t11692*t5335)*var2[5] - 0.5*(t13338 + t13341 + t13343 + t13344 + 0.241*t11469*t2167 + 0.241*t11663*t2383 + 0.241*t11692*t2451)*var2[15] - 0.5*(0.241*t11663*t1190 + 0.241*t11692*t1283 + t13332 + t13333)*var2[16] - 0.5*t13330*var2[17]);
  p_output1[2]=var2[15]*(-0.5*t11423*var2[0] - 0.5*t13405*var2[1] - 0.5*(5.244*t10571*t10654 + 2.19*t10571*t10700 + 3.054*t10761*t11046 + 0.482*t10571*t11112 + 3.054*t10856*t11199 + 0.482*t10931*t11314 + 0.482*t10967*t11385)*var2[2] - 0.5*t13642*var2[3] - 0.5*t13603*var2[4] - 0.5*(t13524 + t13525 + t13526 + t13534 + t13535 + t13536 + t13537 + t13540 + t13543 + t13545 + t13548 + t13554 + t13556 + 0.241*t10571*t2992 + 0.241*t10931*t4949 + 0.241*t10967*t5335)*var2[5] - 0.5*(t13511 + t13514 + t13516 + t13518 + 0.241*t10571*t2167 + 0.241*t10931*t2383 + 0.241*t10967*t2451)*var2[15] - 0.5*(0.241*t10931*t1190 + 0.241*t10967*t1283 + t13500 + t13502)*var2[16] - 0.5*t13497*var2[17]);
  p_output1[3]=var2[15]*(-0.5*t13323*var2[0] - 0.5*t13488*var2[1] - 0.5*t13642*var2[2] - 0.5*(2.19*t12884*t12933 + 2.19*t12912*t12991 + 3.054*t13053*t13059 + 3.054*t13116*t13124 + 3.054*t13158*t13164 + 0.482*t13216*t13223 + 0.482*t13273*t13283 + 0.482*t13314*t13320 + 2.19*t12956*t13723)*var2[3] - 0.5*t13764*var2[4] - 0.5*(t13681 + t13683 + t13684 + t13686 + t13687 + t13689 + t13691 + t13692 + t13693 + t13694 + t13697 + t13700 + t13705 + 0.241*t13273*t2992 + 0.241*t13314*t4949 + 0.241*t13216*t5335)*var2[5] - 0.5*(t13661 + t13663 + t13667 + t13668 + 0.241*t13273*t2167 + 0.241*t13314*t2383 + 0.241*t13216*t2451)*var2[15] - 0.5*(0.241*t1283*t13216 + 0.241*t1190*t13314 + t13652 + t13654)*var2[16] - 0.5*t13650*var2[17]);
  p_output1[4]=var2[15]*(-0.5*t12837*var2[0] - 0.5*t13449*var2[1] - 0.5*t13603*var2[2] - 0.5*t13764*var2[3] - 0.5*(3.054*t12179*t12258 + 3.054*t12341*t12434 + 3.054*t12492*t12503 + 0.482*t12559*t12625 + 0.482*t12698*t12708 + 0.482*t12752*t12835 + 2.19*t12089*t13733 + 0.08276392987419*t10622*t3051 + 0.08276392987419*t1767*t3051)*var2[4] - 0.5*(t13842 + t13843 + t13844 + t13845 + t13846 + t13848 + t13849 + t13850 + t13851 + t13857 + t13858 + t13861 + t13862 + 0.241*t12698*t2992 + 0.241*t12835*t4949 + 0.241*t12625*t5335)*var2[5] - 0.5*(t13821 + t13822 + t13827 + t13829 + 0.241*t12698*t2167 + 0.241*t12835*t2383 + 0.241*t12625*t2451)*var2[15] - 0.5*(0.241*t12625*t1283 + 0.241*t1190*t12835 + t13809 + t13810)*var2[16] - 0.5*t13800*var2[17]);
  p_output1[5]=var2[15]*(-0.5*(t10150 + t13970*t1767*t23 + t2596 + t2622 + t2822 + t3055 + t3695 + t3952 + t4276 + t4565 + t13951*t23*t523 + t5888 + t6826 + t13955*t23*t708 + t7955 + t9680)*var2[0] - 0.5*(t13351 + t13352 + t13353 + t13357 + t13359 + t13361 + t13363 + t13364 + t13370 + t13371 + t13374 + t13375 + t13376 + t11663*t13951 + t11692*t13955 + t11469*t13970)*var2[1] - 0.5*(t13524 + t13525 + t13526 + t13534 + t13535 + t13536 + t13537 + t13540 + t13543 + t13545 + t13548 + t13554 + t13556 + t10931*t13951 + t10967*t13955 + t10571*t13970)*var2[2] - 0.5*(t13681 + t13683 + t13684 + t13686 + t13687 + t13689 + t13691 + t13692 + t13693 + t13694 + t13697 + t13700 + t13705 + t13314*t13951 + t13216*t13955 + t13273*t13970)*var2[3] - 0.5*(t13842 + t13843 + t13844 + t13845 + t13846 + t13848 + t13849 + t13850 + t13851 + t13857 + t13858 + t13861 + t13862 + t12835*t13951 + t12625*t13955 + t12698*t13970)*var2[4] - 0.5*(2.19*t2616*t3035 + 3.054*t2816*t3554 + 2.19*t2581*t3872 + 3.054*t13913*t4263*t5678 + t10037*t13955*t651 + 0.241*t10037*t5335*t651 + t13970*t6583 + 0.241*t2992*t6583 + 3.054*t13919*t4393*t7569 + t13951*t1838*t8387 + 0.241*t1838*t4949*t8387)*var2[5] - 0.5*(t13912 + t13915 + t13922 + t13923 + 0.241*t10037*t2451*t651 + 0.241*t2167*t6583 + 0.241*t1838*t2383*t8387)*var2[15] - 0.5*(t13902 + t13903 + 0.241*t10037*t1283*t651 + 0.241*t1190*t1838*t8387)*var2[16] - 0.5*t13900*var2[17]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=(-0.5*(t1785 + t14033*t1767*t23 + t2333 + t2338 + t2349 + t14021*t23*t523 + t14028*t23*t708)*var2[0] - 0.5*(t13338 + t13341 + t13343 + t13344 + t11663*t14021 + t11692*t14028 + t11469*t14033)*var2[1] - 0.5*(t13511 + t13514 + t13516 + t13518 + t10931*t14021 + t10967*t14028 + t10571*t14033)*var2[2] - 0.5*(t13661 + t13663 + t13667 + t13668 + t13314*t14021 + t13216*t14028 + t13273*t14033)*var2[3] - 0.5*(t13821 + t13822 + t13827 + t13829 + t12835*t14021 + t12625*t14028 + t12698*t14033)*var2[4] - 0.5*(t13912 + t13915 + t13922 + t13923 + t10037*t14028*t651 + t14033*t6583 + t14021*t1838*t8387)*var2[5])*var2[15];
  p_output1[16]=(-0.5*(t14078*t23*t523 + t14085*t23*t708 + t906 + t945)*var2[0] - 0.5*(t13332 + t13333 + t11663*t14078 + t11692*t14085)*var2[1] - 0.5*(t13500 + t13502 + t10931*t14078 + t10967*t14085)*var2[2] - 0.5*(t13652 + t13654 + t13314*t14078 + t13216*t14085)*var2[3] - 0.5*(t13809 + t13810 + t12835*t14078 + t12625*t14085)*var2[4] - 0.5*(t13902 + t13903 + t10037*t14085*t651 + t14078*t1838*t8387)*var2[5])*var2[15];
  p_output1[17]=(-0.5*t789*var2[0] - 0.5*t13330*var2[1] - 0.5*t13497*var2[2] - 0.5*t13650*var2[3] - 0.5*t13800*var2[4] - 0.5*t13900*var2[5])*var2[15];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec16_plane.hh"

namespace SymFunction
{

void Ce2_vec16_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
