/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:11:46 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t396;
  double t782;
  double t1081;
  double t1251;
  double t1274;
  double t1458;
  double t1649;
  double t1684;
  double t738;
  double t799;
  double t1025;
  double t128;
  double t3138;
  double t3907;
  double t4111;
  double t4115;
  double t4288;
  double t4389;
  double t4406;
  double t4476;
  double t4550;
  double t4616;
  double t4705;
  double t4759;
  double t3901;
  double t4081;
  double t4083;
  double t4953;
  double t4959;
  double t4982;
  double t5095;
  double t5218;
  double t5271;
  double t5292;
  double t4096;
  double t4506;
  double t4767;
  double t4948;
  double t2303;
  double t2469;
  double t2471;
  double t2485;
  double t2736;
  double t2746;
  double t2916;
  double t5700;
  double t5715;
  double t5717;
  double t1057;
  double t1685;
  double t1692;
  double t1707;
  double t1725;
  double t1735;
  double t2057;
  double t2153;
  double t2296;
  double t2935;
  double t5010;
  double t5513;
  double t5600;
  double t5633;
  double t5844;
  double t5927;
  double t6044;
  double t6090;
  double t6113;
  double t6350;
  double t6457;
  double t6459;
  double t6461;
  double t6521;
  double t6760;
  double t6839;
  double t6865;
  double t7028;
  double t7100;
  double t7200;
  double t7284;
  double t7454;
  double t7587;
  double t7605;
  double t7884;
  double t8085;
  double t10076;
  double t10106;
  double t10395;
  double t10451;
  double t10462;
  double t10466;
  double t10468;
  double t10479;
  double t10501;
  double t10456;
  double t8927;
  double t8846;
  double t10554;
  double t10565;
  double t10566;
  double t9235;
  double t9316;
  double t9131;
  double t9174;
  double t9700;
  double t9738;
  double t9513;
  double t9614;
  double t10453;
  double t10531;
  double t10454;
  double t10465;
  double t10789;
  double t10790;
  double t10813;
  double t10818;
  double t10823;
  double t10536;
  double t10845;
  double t10846;
  double t10848;
  double t10797;
  double t10824;
  double t10834;
  double t10567;
  double t10575;
  double t10576;
  double t10578;
  double t10579;
  double t10580;
  double t10584;
  double t10586;
  double t10587;
  double t10589;
  double t10592;
  double t10595;
  double t10598;
  double t10599;
  double t10612;
  double t10613;
  double t10615;
  double t10623;
  double t10625;
  double t10628;
  double t10636;
  double t10637;
  double t10638;
  double t10641;
  double t10653;
  double t10673;
  double t10680;
  double t10682;
  double t10694;
  double t10702;
  double t10716;
  double t10748;
  double t10756;
  double t10761;
  double t10767;
  double t10769;
  double t10783;
  double t10362;
  double t10376;
  double t10386;
  double t10397;
  double t10405;
  double t10406;
  double t11273;
  double t11304;
  double t11316;
  double t11326;
  double t11330;
  double t11061;
  double t11062;
  double t11064;
  double t7663;
  double t7675;
  double t7783;
  double t8184;
  double t8358;
  double t8504;
  double t10413;
  double t11333;
  double t11347;
  double t11349;
  double t11352;
  double t11353;
  double t11378;
  double t11384;
  double t11389;
  double t11392;
  double t8856;
  double t8961;
  double t9084;
  double t11411;
  double t11412;
  double t11414;
  double t11445;
  double t9178;
  double t9320;
  double t9326;
  double t9663;
  double t9780;
  double t10003;
  double t10935;
  double t10937;
  double t10958;
  double t11057;
  double t11065;
  double t11100;
  double t11134;
  double t11135;
  double t11152;
  double t11180;
  double t10073;
  double t10148;
  double t10175;
  double t10188;
  double t10213;
  double t10218;
  double t10219;
  double t10238;
  double t10289;
  double t10338;
  double t11772;
  double t11773;
  double t11779;
  double t11792;
  double t11822;
  double t11823;
  double t10422;
  double t10436;
  double t10437;
  double t10457;
  double t10518;
  double t10528;
  double t10530;
  double t10549;
  double t10550;
  double t10569;
  double t10571;
  double t10572;
  double t11847;
  double t11848;
  double t11851;
  double t11862;
  double t11870;
  double t11923;
  double t11924;
  double t11928;
  double t11936;
  double t11948;
  double t11950;
  double t11951;
  double t11954;
  double t10839;
  double t10852;
  double t10855;
  double t10856;
  double t10857;
  double t10862;
  double t10865;
  double t10875;
  double t10876;
  double t12016;
  double t12018;
  double t12025;
  double t12027;
  double t12030;
  double t12031;
  double t12032;
  double t12033;
  double t12035;
  double t12036;
  double t12037;
  double t12038;
  double t12039;
  double t12041;
  double t12042;
  double t12046;
  double t12047;
  double t12050;
  double t12052;
  double t12058;
  double t12062;
  double t12070;
  double t12071;
  double t12076;
  double t12087;
  double t12089;
  double t12096;
  double t12097;
  double t12099;
  double t12102;
  double t12106;
  double t12122;
  double t12123;
  double t12124;
  double t11447;
  double t11449;
  double t11451;
  double t11505;
  double t11507;
  double t11515;
  double t11573;
  double t11577;
  double t11584;
  double t11585;
  double t11586;
  double t11596;
  double t11598;
  double t11601;
  double t11618;
  double t11619;
  double t11620;
  double t12125;
  double t12133;
  double t12134;
  double t12135;
  double t12137;
  double t12138;
  double t12139;
  double t12149;
  double t12158;
  double t11657;
  double t12162;
  double t12172;
  double t12176;
  double t12180;
  double t11669;
  double t11699;
  double t12009;
  double t12010;
  double t12011;
  double t12411;
  double t12413;
  double t12416;
  double t12421;
  double t12422;
  double t12446;
  double t12448;
  double t12456;
  double t12464;
  double t12466;
  double t12472;
  double t12475;
  double t12485;
  double t12486;
  double t12488;
  double t12491;
  double t12495;
  double t12508;
  double t12513;
  double t11973;
  double t11974;
  double t11975;
  double t11989;
  double t11998;
  double t11999;
  double t11888;
  double t11892;
  double t11893;
  double t12630;
  double t12632;
  double t12640;
  double t12643;
  double t12644;
  double t12645;
  double t12650;
  double t12651;
  double t12685;
  double t12686;
  double t12689;
  double t12628;
  double t12655;
  double t12656;
  double t12659;
  double t12663;
  double t12665;
  double t10396;
  double t10407;
  double t10410;
  double t12684;
  double t12723;
  double t12726;
  double t12727;
  double t12715;
  double t12716;
  double t12717;
  double t12697;
  double t12734;
  double t12735;
  double t12736;
  double t12753;
  double t12757;
  double t12742;
  double t12744;
  double t12747;
  double t12768;
  double t12769;
  double t12770;
  double t12751;
  double t12759;
  double t12764;
  double t12766;
  double t12771;
  double t12772;
  double t12780;
  double t12784;
  double t12788;
  double t12718;
  double t12729;
  double t12732;
  double t12834;
  double t12836;
  double t12838;
  double t12983;
  double t12988;
  double t12990;
  double t12991;
  double t12982;
  double t12986;
  double t13023;
  double t13025;
  double t13028;
  double t13015;
  double t13016;
  double t13017;
  double t13006;
  double t13008;
  double t13009;
  double t13044;
  double t13045;
  double t13046;
  double t13011;
  double t13019;
  double t13021;
  double t13042;
  double t13048;
  double t13052;
  double t13062;
  double t13064;
  double t13065;
  double t12987;
  double t12994;
  double t12999;
  double t12658;
  double t12668;
  double t12669;
  double t12670;
  double t13270;
  double t13273;
  double t12673;
  double t12675;
  double t12676;
  double t12678;
  double t12704;
  double t12705;
  double t13284;
  double t13285;
  double t13287;
  double t12765;
  double t12778;
  double t12790;
  double t12800;
  double t12804;
  double t12806;
  double t12807;
  double t12808;
  double t12811;
  double t12814;
  double t12815;
  double t12822;
  double t12823;
  double t12824;
  double t12825;
  double t12830;
  double t12845;
  double t12848;
  double t12849;
  double t12855;
  double t12856;
  double t12857;
  double t12858;
  double t12860;
  double t12864;
  double t12867;
  double t12868;
  double t12881;
  double t12882;
  double t12883;
  double t12887;
  double t12888;
  double t12906;
  double t12911;
  double t12913;
  double t12929;
  double t12931;
  double t12932;
  double t12935;
  double t12948;
  double t12949;
  double t12952;
  double t12954;
  double t12965;
  double t12967;
  double t12969;
  double t12976;
  double t12978;
  double t13383;
  double t13387;
  double t13393;
  double t13076;
  double t13077;
  double t13078;
  double t13081;
  double t13374;
  double t13109;
  double t13112;
  double t13113;
  double t13116;
  double t13155;
  double t13158;
  double t13173;
  double t13181;
  double t13197;
  double t13198;
  double t13202;
  double t13205;
  double t13224;
  double t13225;
  double t13227;
  double t13231;
  double t13252;
  double t13253;
  double t13257;
  double t13258;
  double t13597;
  double t13598;
  double t13600;
  double t13634;
  double t13637;
  double t13643;
  double t11150;
  double t13762;
  double t13749;
  double t13755;
  double t13756;
  double t11182;
  double t13887;
  double t13893;
  double t13894;
  double t13877;
  double t13879;
  double t13883;
  double t13886;
  double t13897;
  double t13900;
  double t13906;
  double t13907;
  double t13915;
  double t10440;
  double t10444;
  double t14031;
  double t14036;
  double t14037;
  double t14025;
  double t14026;
  double t14027;
  double t14029;
  double t14038;
  double t14039;
  double t14044;
  double t14047;
  double t14048;
  double t14012;
  double t14014;
  double t14017;
  double t14021;
  double t14024;
  double t14187;
  double t14188;
  double t14189;
  double t14056;
  double t14179;
  double t14180;
  double t14181;
  double t14060;
  double t14062;
  double t14183;
  double t14190;
  double t14191;
  double t14195;
  double t14197;
  double t14199;
  double t14078;
  double t14080;
  double t14081;
  double t14085;
  double t14088;
  double t14092;
  double t14094;
  double t14095;
  double t14101;
  double t14105;
  double t14108;
  double t14119;
  double t14120;
  double t14122;
  double t14128;
  double t14139;
  double t14155;
  double t14159;
  double t14160;
  double t12810;
  double t12733;
  double t12840;
  double t12865;
  double t12905;
  double t12951;
  double t13004;
  double t13022;
  double t13087;
  double t13089;
  double t13131;
  double t13133;
  double t13183;
  double t13188;
  double t13210;
  double t13212;
  double t13239;
  double t13240;
  double t14268;
  double t14269;
  double t14270;
  double t14271;
  double t13298;
  double t14272;
  double t14277;
  double t13283;
  double t14282;
  double t14283;
  double t14284;
  double t14285;
  double t14289;
  double t14290;
  double t14291;
  double t14292;
  double t13314;
  double t14297;
  double t13320;
  double t14300;
  double t14301;
  double t14302;
  double t13338;
  double t14308;
  double t14314;
  double t14315;
  double t14318;
  double t14320;
  double t13357;
  double t14328;
  double t14329;
  double t14330;
  double t14333;
  double t14336;
  double t13375;
  double t13380;
  double t13415;
  double t13416;
  double t14357;
  double t14358;
  double t14359;
  double t13447;
  double t13449;
  double t14368;
  double t14371;
  double t13485;
  double t13490;
  double t14381;
  double t14382;
  double t14388;
  double t14389;
  double t13534;
  double t13535;
  double t13566;
  double t13568;
  double t14408;
  double t14409;
  double t14411;
  double t13884;
  double t13935;
  double t13955;
  double t13968;
  double t13969;
  double t13990;
  double t13998;
  double t13999;
  double t14028;
  double t14059;
  double t14102;
  double t14121;
  double t14141;
  double t14156;
  double t14544;
  double t14545;
  double t14546;
  double t14547;
  double t14548;
  double t14182;
  double t14553;
  double t14555;
  double t14205;
  double t14562;
  double t14563;
  double t14564;
  double t14567;
  double t14568;
  double t14569;
  double t14570;
  double t14571;
  double t14572;
  double t14214;
  double t14576;
  double t14580;
  double t14226;
  double t14592;
  double t14236;
  double t14600;
  double t14602;
  double t14244;
  double t14723;
  double t14724;
  double t14725;
  double t14727;
  double t14728;
  double t14730;
  double t14537;
  double t14739;
  double t14741;
  double t14759;
  double t14760;
  double t14761;
  double t14765;
  double t14766;
  double t14767;
  double t14792;
  double t14795;
  double t14796;
  double t14804;
  double t14805;
  double t14806;
  double t14762;
  double t14768;
  double t14775;
  double t14780;
  double t14781;
  double t14782;
  double t14783;
  double t14785;
  double t14786;
  double t14789;
  double t14790;
  double t14791;
  double t14797;
  double t14798;
  double t14799;
  double t14807;
  double t14808;
  double t14809;
  double t14816;
  double t14817;
  double t14818;
  double t14819;
  double t14820;
  double t14860;
  double t14861;
  double t14862;
  double t14863;
  double t14864;
  double t14865;
  double t14866;
  double t14867;
  double t14870;
  double t14872;
  double t14884;
  double t14885;
  double t14886;
  double t14887;
  double t14888;
  double t14892;
  double t14893;
  double t14895;
  double t14896;
  double t14897;
  double t14898;
  double t14899;
  double t14900;
  double t14901;
  double t14923;
  double t14924;
  double t14925;
  t396 = Cos(var1[16]);
  t782 = Sin(var1[16]);
  t1081 = -1.*t396;
  t1251 = 1. + t1081;
  t1274 = -0.194401*t1251;
  t1458 = -0.234401*t396;
  t1649 = -0.04*t782;
  t1684 = t1274 + t1458 + t1649;
  t738 = -0.04*t396;
  t799 = 0.04*t782;
  t1025 = t738 + t799;
  t128 = Cos(var1[4]);
  t3138 = Cos(var1[17]);
  t3907 = Sin(var1[17]);
  t4111 = -1.*t3138;
  t4115 = 1. + t4111;
  t4288 = -0.336601*t4115;
  t4389 = -0.356601*t3138;
  t4406 = -0.16*t3907;
  t4476 = 0. + t4288 + t4389 + t4406;
  t4550 = -0.20833*t4115;
  t4616 = -0.36833*t3138;
  t4705 = 0.020000000000000018*t3907;
  t4759 = 0. + t4550 + t4616 + t4705;
  t3901 = t396*t3138;
  t4081 = -1.*t782*t3907;
  t4083 = 0. + t3901 + t4081;
  t4953 = t3138*t782;
  t4959 = t396*t3907;
  t4982 = 0. + t4953 + t4959;
  t5095 = -0.194401*t782;
  t5218 = -1.*t782*t4476;
  t5271 = t396*t4759;
  t5292 = 0. + t5095 + t5218 + t5271;
  t4096 = -0.194401*t1251;
  t4506 = t396*t4476;
  t4767 = t782*t4759;
  t4948 = 0. + t4096 + t4506 + t4767;
  t2303 = Cos(var1[5]);
  t2469 = Sin(var1[15]);
  t2471 = -1.*t2303*t2469;
  t2485 = Cos(var1[15]);
  t2736 = Sin(var1[5]);
  t2746 = -1.*t2485*t2736;
  t2916 = t2471 + t2746;
  t5700 = -1.*t3138*t782;
  t5715 = -1.*t396*t3907;
  t5717 = 0. + t5700 + t5715;
  t1057 = -1.*t396*t1025;
  t1685 = -1.*t1684*t782;
  t1692 = t1057 + t1685;
  t1707 = t396*t1692;
  t1725 = t396*t1684;
  t1735 = -1.*t1025*t782;
  t2057 = t1725 + t1735;
  t2153 = t782*t2057;
  t2296 = t1707 + t2153;
  t2935 = 1.527*t128*t2296*t2916;
  t5010 = -1.*t4948*t4982;
  t5513 = -1.*t5292*t4083;
  t5600 = 0. + t5010 + t5513;
  t5633 = t4083*t5600;
  t5844 = t5292*t5717;
  t5927 = t4948*t4083;
  t6044 = 0. + t5844 + t5927;
  t6090 = t4982*t6044;
  t6113 = 0. + t5633 + t6090;
  t6350 = -1.*t2485*t2303;
  t6457 = t2469*t2736;
  t6459 = t6350 + t6457;
  t6461 = -0.0219*t128*t6459;
  t6521 = -1.*t2485*t396*t2303;
  t6760 = t396*t2469*t2736;
  t6839 = t6521 + t6760;
  t6865 = 0.085290585*t396*t128*t6839;
  t7028 = t2485*t2303*t782;
  t7100 = -1.*t2469*t782*t2736;
  t7200 = t7028 + t7100;
  t7284 = -0.085290585*t128*t782*t7200;
  t7454 = -0.081715*t5717;
  t7587 = -0.11688*t4982;
  t7605 = 0. + t7454 + t7587;
  t7884 = 0.035165*t4083;
  t8085 = 0. + t7884;
  t10076 = 0.04*t396;
  t10106 = t10076 + t799;
  t10395 = Sin(var1[4]);
  t10451 = t5700 + t5715;
  t10462 = t3901 + t4081;
  t10466 = -0.194401*t396;
  t10468 = -1.*t396*t4476;
  t10479 = -1.*t782*t4759;
  t10501 = t10466 + t10468 + t10479;
  t10456 = t5095 + t5218 + t5271;
  t8927 = 0. + t2485;
  t8846 = 0. + t2469;
  t10554 = -1.*t396*t3138;
  t10565 = t782*t3907;
  t10566 = t10554 + t10565;
  t9235 = -1.*t2469*t5717;
  t9316 = 0. + t9235;
  t9131 = t2485*t5717;
  t9174 = 0. + t9131;
  t9700 = -1.*t2469*t4083;
  t9738 = 0. + t9700;
  t9513 = t2485*t4083;
  t9614 = 0. + t9513;
  t10453 = t10451*t5600;
  t10531 = t10462*t6044;
  t10454 = -1.*t5292*t10451;
  t10465 = -1.*t4948*t10462;
  t10789 = -0.16*t3138;
  t10790 = t10789 + t4705;
  t10813 = 0.020000000000000018*t3138;
  t10818 = 0.16*t3907;
  t10823 = t10813 + t10818;
  t10536 = t4948*t10451;
  t10845 = -1.*t782*t10790;
  t10846 = t396*t10823;
  t10848 = t10845 + t10846;
  t10797 = t396*t10790;
  t10824 = t782*t10823;
  t10834 = t10797 + t10824;
  t10567 = t5292*t10566;
  t10575 = t8927*t2303;
  t10576 = -1.*t8846*t2736;
  t10578 = 0. + t10575 + t10576;
  t10579 = t128*t10578;
  t10580 = 0. + t10579;
  t10584 = t10462*t10395;
  t10586 = -1.*t2303*t2469*t10451;
  t10587 = -1.*t2485*t10451*t2736;
  t10589 = t10586 + t10587;
  t10592 = t128*t10589;
  t10595 = t10584 + t10592;
  t10598 = 0.241*t8085*t10595;
  t10599 = t10451*t10395;
  t10612 = -1.*t2303*t2469*t10566;
  t10613 = -1.*t2485*t10566*t2736;
  t10615 = t10612 + t10613;
  t10623 = t128*t10615;
  t10625 = t10599 + t10623;
  t10628 = 0.241*t7605*t10625;
  t10636 = -0.11688*t10462;
  t10637 = -0.081715*t10566;
  t10638 = t10636 + t10637;
  t10641 = t4083*t10395;
  t10653 = t2303*t9316;
  t10673 = -1.*t9174*t2736;
  t10680 = 0. + t10653 + t10673;
  t10682 = t128*t10680;
  t10694 = 0. + t10641 + t10682;
  t10702 = 0.241*t10638*t10694;
  t10716 = t4982*t10395;
  t10748 = t2303*t9738;
  t10756 = -1.*t9614*t2736;
  t10761 = 0. + t10748 + t10756;
  t10767 = t128*t10761;
  t10769 = 0. + t10716 + t10767;
  t10783 = 0.008474765*t10451*t10769;
  t10362 = t2485*t2303;
  t10376 = -1.*t2469*t2736;
  t10386 = t10362 + t10376;
  t10397 = -1.*t396*t2303*t2469;
  t10405 = -1.*t2485*t396*t2736;
  t10406 = t10397 + t10405;
  t11273 = Sin(var1[3]);
  t11304 = t11273*t10395*t2916;
  t11316 = Cos(var1[3]);
  t11326 = t11316*t10386;
  t11330 = t11304 + t11326;
  t11061 = t2303*t2469*t782;
  t11062 = t2485*t782*t2736;
  t11064 = t11061 + t11062;
  t7663 = -1.*t2485*t2303*t5717;
  t7675 = t2469*t5717*t2736;
  t7783 = t7663 + t7675;
  t8184 = -1.*t2485*t2303*t4083;
  t8358 = t2469*t4083*t2736;
  t8504 = t8184 + t8358;
  t10413 = -1.*t782*t10395;
  t11333 = 1.527*t2296*t11330;
  t11347 = t11316*t2916;
  t11349 = t11273*t10395*t6459;
  t11352 = t11347 + t11349;
  t11353 = -0.0219*t11352;
  t11378 = t11316*t10406;
  t11384 = t11273*t10395*t6839;
  t11389 = t11378 + t11384;
  t11392 = 0.085290585*t396*t11389;
  t8856 = -1.*t2303*t8846;
  t8961 = -1.*t8927*t2736;
  t9084 = t8856 + t8961;
  t11411 = t11316*t11064;
  t11412 = t11273*t10395*t7200;
  t11414 = t11411 + t11412;
  t11445 = -0.085290585*t782*t11414;
  t9178 = -1.*t2303*t9174;
  t9320 = -1.*t9316*t2736;
  t9326 = t9178 + t9320;
  t9663 = -1.*t2303*t9614;
  t9780 = -1.*t9738*t2736;
  t10003 = t9663 + t9780;
  t10935 = t128*t782;
  t10937 = -1.*t10395*t10406;
  t10958 = t10935 + t10937;
  t11057 = t396*t128;
  t11065 = -1.*t10395*t11064;
  t11100 = t11057 + t11065;
  t11134 = t128*t4083;
  t11135 = -1.*t10395*t10680;
  t11152 = t128*t4982;
  t11180 = -1.*t10395*t10761;
  t10073 = -1.*t396*t1684;
  t10148 = -1.*t396*t10106;
  t10175 = t10073 + t10148;
  t10188 = t396*t10175;
  t10213 = -1.*t782*t1692;
  t10218 = t396*t2057;
  t10219 = -1.*t10106*t782;
  t10238 = t1685 + t10219;
  t10289 = t782*t10238;
  t10338 = t10188 + t10213 + t10218 + t10289;
  t11772 = t2303*t2469;
  t11773 = t2485*t2736;
  t11779 = t11772 + t11773;
  t11792 = t2485*t396*t2303;
  t11822 = -1.*t396*t2469*t2736;
  t11823 = t11792 + t11822;
  t10422 = t396*t2303*t2469;
  t10436 = t2485*t396*t2736;
  t10437 = t10422 + t10436;
  t10457 = -1.*t10456*t4982;
  t10518 = -1.*t10501*t4083;
  t10528 = t10454 + t10457 + t10465 + t10518;
  t10530 = t4083*t10528;
  t10549 = t10501*t5717;
  t10550 = t10456*t4083;
  t10569 = t10536 + t10549 + t10550 + t10567;
  t10571 = t4982*t10569;
  t10572 = t10453 + t10530 + t10531 + t10571;
  t11847 = t2303*t8846;
  t11848 = t8927*t2736;
  t11851 = 0. + t11847 + t11848;
  t11862 = -1.*t10395*t10578;
  t11870 = 0. + t11862;
  t11923 = t2303*t9174;
  t11924 = t9316*t2736;
  t11928 = 0. + t11923 + t11924;
  t11936 = 0. + t11134 + t11135;
  t11948 = t2303*t9614;
  t11950 = t9738*t2736;
  t11951 = 0. + t11948 + t11950;
  t11954 = 0. + t11152 + t11180;
  t10839 = -1.*t10834*t4982;
  t10852 = -1.*t10848*t4083;
  t10855 = t10454 + t10839 + t10465 + t10852;
  t10856 = t4083*t10855;
  t10857 = t10848*t5717;
  t10862 = t10834*t4083;
  t10865 = t10536 + t10857 + t10862 + t10567;
  t10875 = t4982*t10865;
  t10876 = t10453 + t10531 + t10856 + t10875;
  t12016 = t11316*t11851;
  t12018 = -1.*t11273*t11870;
  t12025 = 0. + t12016 + t12018;
  t12027 = t2485*t2303*t10451;
  t12030 = -1.*t2469*t10451*t2736;
  t12031 = t12027 + t12030;
  t12032 = t11316*t12031;
  t12033 = t128*t10462;
  t12035 = -1.*t10395*t10589;
  t12036 = t12033 + t12035;
  t12037 = -1.*t11273*t12036;
  t12038 = t12032 + t12037;
  t12039 = 0.241*t8085*t12038;
  t12041 = t2485*t2303*t10566;
  t12042 = -1.*t2469*t10566*t2736;
  t12046 = t12041 + t12042;
  t12047 = t11316*t12046;
  t12050 = t128*t10451;
  t12052 = -1.*t10395*t10615;
  t12058 = t12050 + t12052;
  t12062 = -1.*t11273*t12058;
  t12070 = t12047 + t12062;
  t12071 = 0.241*t7605*t12070;
  t12076 = t11316*t11928;
  t12087 = -1.*t11273*t11936;
  t12089 = 0. + t12076 + t12087;
  t12096 = 0.241*t10638*t12089;
  t12097 = t11316*t11951;
  t12099 = -1.*t11273*t11954;
  t12102 = 0. + t12097 + t12099;
  t12106 = 0.008474765*t10451*t12102;
  t12122 = -1.*t11316*t10395*t2916;
  t12123 = t11273*t10386;
  t12124 = t12122 + t12123;
  t11447 = -1.*t2303*t2469*t5717;
  t11449 = -1.*t2485*t5717*t2736;
  t11451 = t11447 + t11449;
  t11505 = -1.*t2303*t2469*t4083;
  t11507 = -1.*t2485*t4083*t2736;
  t11515 = t11505 + t11507;
  t11573 = -1.*t128*t10406;
  t11577 = t10413 + t11573;
  t11584 = -1.*t396*t10395;
  t11585 = -1.*t128*t11064;
  t11586 = t11584 + t11585;
  t11596 = -1.*t4083*t10395;
  t11598 = -1.*t128*t10680;
  t11601 = t11596 + t11598;
  t11618 = -1.*t4982*t10395;
  t11619 = -1.*t128*t10761;
  t11620 = t11618 + t11619;
  t12125 = 1.527*t2296*t12124;
  t12133 = t11273*t2916;
  t12134 = -1.*t11316*t10395*t6459;
  t12135 = t12133 + t12134;
  t12137 = -0.0219*t12135;
  t12138 = t11273*t10406;
  t12139 = -1.*t11316*t10395*t6839;
  t12149 = t12138 + t12139;
  t12158 = 0.085290585*t396*t12149;
  t11657 = t10575 + t10576;
  t12162 = t11273*t11064;
  t12172 = -1.*t11316*t10395*t7200;
  t12176 = t12162 + t12172;
  t12180 = -0.085290585*t782*t12176;
  t11669 = t10653 + t10673;
  t11699 = t10748 + t10756;
  t12009 = -1.*t128*t782;
  t12010 = -1.*t10395*t10437;
  t12011 = t12009 + t12010;
  t12411 = t11273*t11851;
  t12413 = t11316*t11870;
  t12416 = 0. + t12411 + t12413;
  t12421 = t11273*t12031;
  t12422 = t11316*t12036;
  t12446 = t12421 + t12422;
  t12448 = 0.241*t8085*t12446;
  t12456 = t11273*t12046;
  t12464 = t11316*t12058;
  t12466 = t12456 + t12464;
  t12472 = 0.241*t7605*t12466;
  t12475 = t11273*t11928;
  t12485 = t11316*t11936;
  t12486 = 0. + t12475 + t12485;
  t12488 = 0.241*t10638*t12486;
  t12491 = t11273*t11951;
  t12495 = t11316*t11954;
  t12508 = 0. + t12491 + t12495;
  t12513 = 0.008474765*t10451*t12508;
  t11973 = t11316*t11779;
  t11974 = t11273*t10395*t10386;
  t11975 = t11973 + t11974;
  t11989 = t11316*t11823;
  t11998 = -1.*t11273*t10958;
  t11999 = t11989 + t11998;
  t11888 = -1.*t2485*t2303*t782;
  t11892 = t2469*t782*t2736;
  t11893 = t11888 + t11892;
  t12630 = -1.*t2485;
  t12632 = 1. + t12630;
  t12640 = 0.081715*t12632;
  t12643 = 0.061715*t2485;
  t12644 = t12640 + t12643;
  t12645 = t12644*t2303;
  t12650 = 0.02*t2469*t2736;
  t12651 = t12645 + t12650;
  t12685 = 0.02*t2303*t2469;
  t12686 = 0.02*t2485*t2736;
  t12689 = t12685 + t12686;
  t12628 = -0.194401*t10395;
  t12655 = t128*t12651;
  t12656 = t12628 + t12655;
  t12659 = -0.194401*t128;
  t12663 = -1.*t10395*t12651;
  t12665 = t12659 + t12663;
  t10396 = t782*t10395;
  t10407 = t128*t10406;
  t10410 = t10396 + t10407;
  t12684 = Power(t128,2);
  t12723 = -0.055855*t2469;
  t12726 = -1.*t2485*t1025;
  t12727 = t12723 + t12726;
  t12715 = 0.055855*t2485;
  t12716 = -1.*t2469*t1025;
  t12717 = t12715 + t12716;
  t12697 = Power(t10395,2);
  t12734 = t2303*t12727;
  t12735 = -1.*t12717*t2736;
  t12736 = t12734 + t12735;
  t12753 = 0.13757*t2485;
  t12757 = t12640 + t12753 + t12716;
  t12742 = 0.055855*t2469;
  t12744 = t2485*t1025;
  t12747 = t12742 + t12744;
  t12768 = t2303*t12757;
  t12769 = -1.*t12747*t2736;
  t12770 = t12768 + t12769;
  t12751 = t2303*t12747;
  t12759 = t12757*t2736;
  t12764 = t12751 + t12759;
  t12766 = t1684*t10395;
  t12771 = t128*t12770;
  t12772 = t12766 + t12771;
  t12780 = t128*t1684;
  t12784 = -1.*t10395*t12770;
  t12788 = t12780 + t12784;
  t12718 = t2303*t12717;
  t12729 = t12727*t2736;
  t12732 = t12718 + t12729;
  t12834 = t396*t10395;
  t12836 = t128*t11064;
  t12838 = t12834 + t12836;
  t12983 = -1.*t2469*t5292;
  t12988 = -0.035165*t2469;
  t12990 = -1.*t2485*t5292;
  t12991 = t12988 + t12990;
  t12982 = 0.035165*t2485;
  t12986 = t12982 + t12983;
  t13023 = t2303*t12991;
  t13025 = -1.*t12986*t2736;
  t13028 = t13023 + t13025;
  t13015 = 0.081715*t12632;
  t13016 = 0.11688*t2485;
  t13017 = t13015 + t13016 + t12983;
  t13006 = 0.035165*t2469;
  t13008 = t2485*t5292;
  t13009 = t13006 + t13008;
  t13044 = t2303*t13017;
  t13045 = -1.*t13009*t2736;
  t13046 = 0. + t13044 + t13045;
  t13011 = t2303*t13009;
  t13019 = t13017*t2736;
  t13021 = 0. + t13011 + t13019;
  t13042 = t4948*t10395;
  t13048 = t128*t13046;
  t13052 = 0. + t13042 + t13048;
  t13062 = t128*t4948;
  t13064 = -1.*t10395*t13046;
  t13065 = 0. + t13062 + t13064;
  t12987 = t2303*t12986;
  t12994 = t12991*t2736;
  t12999 = t12987 + t12994;
  t12658 = -1.*t10395*t12656;
  t12668 = -1.*t128*t12665;
  t12669 = t12658 + t12668;
  t12670 = t128*t2916*t12669;
  t13270 = -1.*t12644*t2736;
  t13273 = t12685 + t13270;
  t12673 = -0.02*t2303*t2469;
  t12675 = t12644*t2736;
  t12676 = t12673 + t12675;
  t12678 = t12676*t10386;
  t12704 = t128*t2916*t12656;
  t12705 = -1.*t10395*t2916*t12665;
  t13284 = -1.*t2303*t12747;
  t13285 = -1.*t12757*t2736;
  t13287 = t13284 + t13285;
  t12765 = -1.*t10386*t12764;
  t12778 = -1.*t128*t2916*t12772;
  t12790 = t10395*t2916*t12788;
  t12800 = -1.*t11779*t12764;
  t12804 = -1.*t128*t10386*t12772;
  t12806 = t10395*t10386*t12788;
  t12807 = t12800 + t12804 + t12806;
  t12808 = t128*t6839*t12807;
  t12811 = t10406*t12764;
  t12814 = t128*t6839*t12772;
  t12815 = -1.*t10395*t6839*t12788;
  t12822 = t11823*t12764;
  t12823 = t10410*t12772;
  t12824 = t10958*t12788;
  t12825 = t12822 + t12823 + t12824;
  t12830 = t128*t2916*t12825;
  t12845 = t10386*t12764;
  t12848 = t128*t2916*t12772;
  t12849 = -1.*t10395*t2916*t12788;
  t12855 = t11779*t12764;
  t12856 = t128*t10386*t12772;
  t12857 = -1.*t10395*t10386*t12788;
  t12858 = t12855 + t12856 + t12857;
  t12860 = t128*t7200*t12858;
  t12864 = -1.*t12764*t11064;
  t12867 = -1.*t128*t7200*t12772;
  t12868 = t10395*t7200*t12788;
  t12881 = -1.*t12764*t11893;
  t12882 = -1.*t12772*t12838;
  t12883 = -1.*t12788*t11100;
  t12887 = t12881 + t12882 + t12883;
  t12888 = t128*t2916*t12887;
  t12906 = -1.*t10406*t12764;
  t12911 = -1.*t128*t6839*t12772;
  t12913 = t10395*t6839*t12788;
  t12929 = -1.*t11823*t12764;
  t12931 = -1.*t10410*t12772;
  t12932 = -1.*t10958*t12788;
  t12935 = t12929 + t12931 + t12932;
  t12948 = t128*t7200*t12935;
  t12949 = t12764*t11064;
  t12952 = t128*t7200*t12772;
  t12954 = -1.*t10395*t7200*t12788;
  t12965 = t12764*t11893;
  t12967 = t12772*t12838;
  t12969 = t12788*t11100;
  t12976 = t12965 + t12967 + t12969;
  t12978 = t128*t6839*t12976;
  t13383 = -1.*t2303*t13009;
  t13387 = -1.*t13017*t2736;
  t13393 = t13383 + t13387;
  t13076 = t11851*t13021;
  t13077 = t10580*t13052;
  t13078 = t11870*t13065;
  t13081 = t13076 + t13077 + t13078;
  t13374 = t13044 + t13045;
  t13109 = -1.*t13021*t11928;
  t13112 = -1.*t13052*t10694;
  t13113 = -1.*t13065*t11936;
  t13116 = t13109 + t13112 + t13113;
  t13155 = t13021*t11928;
  t13158 = t13052*t10694;
  t13173 = t13065*t11936;
  t13181 = t13155 + t13158 + t13173;
  t13197 = -1.*t13021*t11951;
  t13198 = -1.*t13052*t10769;
  t13202 = -1.*t13065*t11954;
  t13205 = t13197 + t13198 + t13202;
  t13224 = -1.*t11851*t13021;
  t13225 = -1.*t10580*t13052;
  t13227 = -1.*t11870*t13065;
  t13231 = t13224 + t13225 + t13227;
  t13252 = t13021*t11951;
  t13253 = t13052*t10769;
  t13257 = t13065*t11954;
  t13258 = t13252 + t13253 + t13257;
  t13597 = 0.194401*t10395;
  t13598 = -1.*t128*t12651;
  t13600 = t13597 + t13598;
  t13634 = -1.*t1684*t10395;
  t13637 = -1.*t128*t12770;
  t13643 = t13634 + t13637;
  t11150 = t11134 + t11135;
  t13762 = t13062 + t13064;
  t13749 = -1.*t4948*t10395;
  t13755 = -1.*t128*t13046;
  t13756 = t13749 + t13755;
  t11182 = t11152 + t11180;
  t13887 = -1.*t2303*t2469*t10106;
  t13893 = -1.*t2485*t10106*t2736;
  t13894 = t13887 + t13893;
  t13877 = t2485*t2303*t10106;
  t13879 = -1.*t2469*t10106*t2736;
  t13883 = t13877 + t13879;
  t13886 = t1025*t10395;
  t13897 = t128*t13894;
  t13900 = t13886 + t13897;
  t13906 = t128*t1025;
  t13907 = -1.*t10395*t13894;
  t13915 = t13906 + t13907;
  t10440 = t128*t10437;
  t10444 = t10413 + t10440;
  t14031 = -1.*t2303*t2469*t10501;
  t14036 = -1.*t2485*t10501*t2736;
  t14037 = t14031 + t14036;
  t14025 = t2485*t2303*t10501;
  t14026 = -1.*t2469*t10501*t2736;
  t14027 = t14025 + t14026;
  t14029 = t10456*t10395;
  t14038 = t128*t14037;
  t14039 = t14029 + t14038;
  t14044 = t128*t10456;
  t14047 = -1.*t10395*t14037;
  t14048 = t14044 + t14047;
  t14012 = t10694*t13081;
  t14014 = t10580*t13116;
  t14017 = t14012 + t14014;
  t14021 = 0.008474765*t10451*t14017;
  t14024 = t10625*t13081;
  t14187 = -1.*t2303*t2469*t10848;
  t14188 = -1.*t2485*t10848*t2736;
  t14189 = t14187 + t14188;
  t14056 = -1.*t13021*t12046;
  t14179 = t2485*t2303*t10848;
  t14180 = -1.*t2469*t10848*t2736;
  t14181 = t14179 + t14180;
  t14060 = -1.*t13052*t10625;
  t14062 = -1.*t13065*t12058;
  t14183 = t10834*t10395;
  t14190 = t128*t14189;
  t14191 = t14183 + t14190;
  t14195 = t128*t10834;
  t14197 = -1.*t10395*t14189;
  t14199 = t14195 + t14197;
  t14078 = t10769*t13181;
  t14080 = t10694*t13205;
  t14081 = t14078 + t14080;
  t14085 = t10769*t13231;
  t14088 = t10580*t13258;
  t14092 = t14085 + t14088;
  t14094 = 0.241*t10638*t14092;
  t14095 = t10595*t13181;
  t14101 = t13021*t12046;
  t14105 = t13052*t10625;
  t14108 = t13065*t12058;
  t14119 = t10625*t13205;
  t14120 = -1.*t13021*t12031;
  t14122 = -1.*t13052*t10595;
  t14128 = -1.*t13065*t12036;
  t14139 = t10595*t13231;
  t14155 = t13021*t12031;
  t14159 = t13052*t10595;
  t14160 = t13065*t12036;
  t12810 = t11823*t12732;
  t12733 = -1.*t11779*t12732;
  t12840 = t11779*t12732;
  t12865 = -1.*t12732*t11893;
  t12905 = -1.*t11823*t12732;
  t12951 = t12732*t11893;
  t13004 = t11851*t12999;
  t13022 = t10386*t13021;
  t13087 = -1.*t13021*t11451;
  t13089 = -1.*t12999*t11928;
  t13131 = t13021*t11451;
  t13133 = t12999*t11928;
  t13183 = -1.*t13021*t11515;
  t13188 = -1.*t12999*t11951;
  t13210 = -1.*t11851*t12999;
  t13212 = -1.*t10386*t13021;
  t13239 = t13021*t11515;
  t13240 = t12999*t11951;
  t14268 = -0.0042573819*t10386;
  t14269 = -1.*t10386*t12770;
  t14270 = t14269 + t12800;
  t14271 = t10406*t14270;
  t13298 = t11823*t12770;
  t14272 = t6839*t12770;
  t14277 = -1.*t2916*t12770;
  t13283 = -1.*t11779*t12770;
  t14282 = t1684*t782;
  t14283 = t10406*t12770;
  t14284 = t14282 + t14283 + t12822;
  t14285 = t10386*t14284;
  t14289 = t10386*t12770;
  t14290 = t14289 + t12855;
  t14291 = t11064*t14290;
  t14292 = t2916*t12770;
  t13314 = t11779*t12770;
  t14297 = -1.*t12770*t7200;
  t13320 = -1.*t12770*t11893;
  t14300 = -1.*t12770*t11064;
  t14301 = t10073 + t14300 + t12881;
  t14302 = t10386*t14301;
  t13338 = -1.*t11823*t12770;
  t14308 = -1.*t6839*t12770;
  t14314 = -1.*t10406*t12770;
  t14315 = t1685 + t14314 + t12929;
  t14318 = t11064*t14315;
  t14320 = t12770*t7200;
  t13357 = t12770*t11893;
  t14328 = t12770*t11064;
  t14329 = t1725 + t14328 + t12965;
  t14330 = t10406*t14329;
  t14333 = t10578*t13046;
  t14336 = 0. + t14333 + t13076;
  t13375 = t11851*t13374;
  t13380 = t11657*t13021;
  t13415 = -1.*t13021*t11669;
  t13416 = -1.*t13374*t11928;
  t14357 = -1.*t4948*t4083;
  t14358 = -1.*t13046*t10680;
  t14359 = t14357 + t14358 + t13109;
  t13447 = t13021*t11669;
  t13449 = t13374*t11928;
  t14368 = t13046*t10680;
  t14371 = t5927 + t14368 + t13155;
  t13485 = -1.*t13021*t11699;
  t13490 = -1.*t13374*t11951;
  t14381 = -1.*t13046*t10761;
  t14382 = t5010 + t14381 + t13197;
  t14388 = -1.*t10578*t13046;
  t14389 = 0. + t14388 + t13224;
  t13534 = -1.*t11851*t13374;
  t13535 = -1.*t11657*t13021;
  t13566 = t13021*t11699;
  t13568 = t13374*t11951;
  t14408 = t4948*t4982;
  t14409 = t13046*t10761;
  t14411 = t14408 + t14409 + t13252;
  t13884 = -1.*t11779*t13883;
  t13935 = t11823*t13883;
  t13955 = t11779*t13883;
  t13968 = -1.*t6839*t12764;
  t13969 = -1.*t13883*t11893;
  t13990 = -1.*t11823*t13883;
  t13998 = t6839*t12764;
  t13999 = t13883*t11893;
  t14028 = t11851*t14027;
  t14059 = -1.*t14027*t11928;
  t14102 = t14027*t11928;
  t14121 = -1.*t14027*t11951;
  t14141 = -1.*t11851*t14027;
  t14156 = t14027*t11951;
  t14544 = t11928*t14336;
  t14545 = t11851*t14359;
  t14546 = t14544 + t14545;
  t14547 = 0.008474765*t10451*t14546;
  t14548 = t12046*t14336;
  t14182 = t11851*t14181;
  t14553 = -1.*t4948*t10451;
  t14555 = -1.*t13046*t10615;
  t14205 = -1.*t14181*t11928;
  t14562 = t11951*t14371;
  t14563 = t11928*t14382;
  t14564 = 0. + t14562 + t14563;
  t14567 = t11951*t14389;
  t14568 = t11851*t14411;
  t14569 = t14567 + t14568;
  t14570 = 0.241*t10638*t14569;
  t14571 = t12031*t14371;
  t14572 = t13046*t10615;
  t14214 = t14181*t11928;
  t14576 = t12046*t14382;
  t14580 = -1.*t13046*t10589;
  t14226 = -1.*t14181*t11951;
  t14592 = t12031*t14389;
  t14236 = -1.*t11851*t14181;
  t14600 = t4948*t10462;
  t14602 = t13046*t10589;
  t14244 = t14181*t11951;
  t14723 = -1.*t2485*t12747*t782;
  t14724 = t2469*t12757*t782;
  t14725 = t1725 + t14723 + t14724;
  t14727 = -1.*t2485*t396*t12747;
  t14728 = t396*t2469*t12757;
  t14730 = t14727 + t14728 + t1685;
  t14537 = t396*t1025;
  t14739 = Power(t2485,2);
  t14741 = Power(t2469,2);
  t14759 = -1.*t8846*t13009;
  t14760 = -1.*t8927*t13017;
  t14761 = 0. + t14759 + t14760;
  t14765 = t8846*t13009;
  t14766 = t8927*t13017;
  t14767 = 0. + t14765 + t14766;
  t14792 = t13009*t9174;
  t14795 = t13017*t9316;
  t14796 = t5927 + t14792 + t14795;
  t14804 = -1.*t13009*t9614;
  t14805 = -1.*t13017*t9738;
  t14806 = t5010 + t14804 + t14805;
  t14762 = t14761*t10462;
  t14768 = t14767*t10451;
  t14775 = t14761*t4982;
  t14780 = 0. + t14775;
  t14781 = 0.241*t14780;
  t14782 = 0. + t14781;
  t14783 = t10638*t14782;
  t14785 = t14767*t4083;
  t14786 = 0. + t14785;
  t14789 = 0.241*t14786;
  t14790 = 0. + t14789;
  t14791 = 0.035165*t10451*t14790;
  t14797 = t10462*t14796;
  t14798 = t2485*t13009*t10566;
  t14799 = -1.*t2469*t13017*t10566;
  t14807 = t10451*t14806;
  t14808 = -1.*t2485*t13009*t10451;
  t14809 = t2469*t13017*t10451;
  t14816 = t4982*t14796;
  t14817 = t4083*t14806;
  t14818 = 0. + t14816 + t14817;
  t14819 = 0.241*t14818;
  t14820 = 0. + t14819;
  t14860 = 0.008474765*t10451*t8085;
  t14861 = 0.241*t7605*t10638;
  t14862 = 0.241*t7605;
  t14863 = 0. + t14862;
  t14864 = t10638*t14863;
  t14865 = 0.241*t8085;
  t14866 = 0. + t14865;
  t14867 = 0.035165*t10451*t14866;
  t14870 = 0.241*t6113;
  t14872 = 0. + t14870;
  t14884 = t3138*t4759;
  t14885 = 0.194401*t3907;
  t14886 = t4476*t3907;
  t14887 = 0. + t14884 + t14885 + t14886;
  t14888 = 0.241*t14887;
  t14892 = 0. + t14888;
  t14893 = t10638*t14892;
  t14895 = -0.194401*t3138;
  t14896 = -1.*t3138*t4476;
  t14897 = t4759*t3907;
  t14898 = 0. + t14895 + t14896 + t14897;
  t14899 = 0.241*t14898;
  t14900 = 0. + t14899;
  t14901 = 0.035165*t10451*t14900;
  t14923 = 0.00016949530000000016*t10451;
  t14924 = -0.03856*t10638;
  t14925 = t14923 + t14924;
  p_output1[0]=var2[15]*(-0.5*(-1.527*t10386*t10395*t2296 + 0.0219*t10395*t2916 + 0.085290585*t10958*t396 - 0.241*t10395*t10578*t6113 + 0.241*t11150*t7605 - 0.085290585*t11100*t782 + 0.241*t11182*t8085)*var2[4] - 0.5*(t2935 + t6461 + t6865 + t7284 + 0.241*t10003*t128*t8085 + 0.241*t128*t6113*t9084 + 0.241*t128*t7605*t9326)*var2[5] - 0.5*(t2935 + 0.241*t128*t2916*t6113 + t6461 + t6865 + t7284 + 0.241*t128*t7605*t7783 + 0.241*t128*t8085*t8504)*var2[15] - 0.5*(0.241*t10572*t10580 + t10598 + t10628 + t10702 + t10783 + 1.527*t10338*t10386*t128 - 0.085290585*t10410*t782 - 0.085290585*t10444*t782)*var2[16] - 0.5*(t10598 + t10628 + t10702 + t10783 + 0.241*t10580*t10876)*var2[17]);
  p_output1[1]=var2[15]*(-0.5*(1.527*(t10386*t10395*t11316 - 1.*t11273*t11779)*t2296 - 0.0219*(-1.*t10386*t11273 + t10395*t11316*t2916) + 0.085290585*(-1.*t10958*t11316 - 1.*t11273*t11823)*t396 + 0.241*(-1.*t11273*t11851 - 1.*t11316*t11870)*t6113 + 0.241*(-1.*t11273*t11928 - 1.*t11316*t11936)*t7605 - 0.085290585*(-1.*t11100*t11316 - 1.*t11273*t11893)*t782 + 0.241*(-1.*t11273*t11951 - 1.*t11316*t11954)*t8085)*var2[3] - 0.5*(1.527*t10386*t11273*t128*t2296 - 0.0219*t11273*t128*t2916 - 0.085290585*t11273*t11577*t396 + 0.241*t10578*t11273*t128*t6113 - 0.241*t11273*t11601*t7605 + 0.085290585*t11273*t11586*t782 - 0.241*t11273*t11620*t8085)*var2[4] - 0.5*(t11333 + t11353 + t11392 + t11445 + 0.241*(t10003*t10395*t11273 + t11316*t11699)*t8085 + 0.241*t6113*(t11316*t11657 + t10395*t11273*t9084) + 0.241*t7605*(t11316*t11669 + t10395*t11273*t9326))*var2[5] - 0.5*(t11333 + t11353 + t11392 + t11445 + 0.241*t11330*t6113 + 0.241*t7605*(t11316*t11451 + t10395*t11273*t7783) + 0.241*t8085*(t11316*t11515 + t10395*t11273*t8504))*var2[15] - 0.5*(1.527*t10338*t11975 + 0.241*t10572*t12025 + t12039 + t12071 + t12096 + t12106 - 0.085290585*t11999*t782 - 0.085290585*(-1.*t11273*t12011 + t11316*t6839)*t782)*var2[16] - 0.5*(0.241*t10876*t12025 + t12039 + t12071 + t12096 + t12106)*var2[17]);
  p_output1[2]=var2[15]*(-0.5*(-0.0219*t11330 + 1.527*t11975*t2296 + 0.085290585*t11999*t396 + 0.241*(t12016 + t12018)*t6113 + 0.241*(t12076 + t12087)*t7605 - 0.085290585*(-1.*t11100*t11273 + t11316*t11893)*t782 + 0.241*(t12097 + t12099)*t8085)*var2[3] - 0.5*(-1.527*t10386*t11316*t128*t2296 + 0.0219*t11316*t128*t2916 + 0.085290585*t11316*t11577*t396 - 0.241*t10578*t11316*t128*t6113 + 0.241*t11316*t11601*t7605 - 0.085290585*t11316*t11586*t782 + 0.241*t11316*t11620*t8085)*var2[4] - 0.5*(t12125 + t12137 + t12158 + t12180 + 0.241*(-1.*t10003*t10395*t11316 + t11273*t11699)*t8085 + 0.241*t6113*(t11273*t11657 - 1.*t10395*t11316*t9084) + 0.241*t7605*(t11273*t11669 - 1.*t10395*t11316*t9326))*var2[5] - 0.5*(t12125 + t12137 + t12158 + t12180 + 0.241*t12124*t6113 + 0.241*t7605*(t11273*t11451 - 1.*t10395*t11316*t7783) + 0.241*t8085*(t11273*t11515 - 1.*t10395*t11316*t8504))*var2[15] - 0.5*(1.527*t10338*(-1.*t10386*t10395*t11316 + t11273*t11779) + 0.241*t10572*t12416 + t12448 + t12472 + t12488 + t12513 - 0.085290585*(t10958*t11316 + t11273*t11823)*t782 - 0.085290585*(t11316*t12011 + t11273*t6839)*t782)*var2[16] - 0.5*(0.241*t10876*t12416 + t12448 + t12472 + t12488 + t12513)*var2[17]);
  p_output1[3]=var2[15]*(-0.5*(-0.0219*(-1.*t10386*t10395*t12669 + t128*(-1.*t10386*t10395*t12665 + t11779*t12676 + t10386*t12656*t128) + t10395*(-1.*t10386*t10395*t12656 - 1.*t10386*t10395*t13600) + t10386*t128*(-1.*t12656*t128 - 1.*t128*t13600)) + 1.527*(t11100*t12935 + t10958*t12976 + t12838*(-1.*t10958*t12772 - 1.*t10410*t12788 - 1.*t11577*t12788 - 1.*t10958*t13643) + t10410*(t11100*t12772 + t11586*t12788 + t12788*t12838 + t11100*t13643))*t2296 + 0.085290585*(t11100*t12858 - 1.*t10386*t10395*t12887 + t12838*(-1.*t10386*t10395*t12772 - 1.*t10386*t10395*t13643) + t10386*t128*(-1.*t11100*t12772 - 1.*t11586*t12788 - 1.*t12788*t12838 - 1.*t11100*t13643))*t396 + 0.241*(t11182*t13181 + t11150*t13205 + t10769*(t11150*t13052 + t11601*t13065 + t11936*t13756 + t10694*t13762) + t10694*(-1.*t11182*t13052 - 1.*t11620*t13065 - 1.*t11954*t13756 - 1.*t10769*t13762))*t6113 + 0.241*(t11182*t13231 - 1.*t10395*t10578*t13258 + t10769*(t10395*t10578*t13052 + t10578*t128*t13065 - 1.*t11870*t13756 - 1.*t10580*t13762) + t10580*(t11182*t13052 + t11620*t13065 + t11954*t13756 + t10769*t13762))*t7605 - 0.085290585*(t10958*t12807 - 1.*t10386*t10395*t12825 + t10410*(t10386*t10395*t12772 + t10386*t10395*t13643) + t10386*t128*(t10958*t12772 + t10410*t12788 + t11577*t12788 + t10958*t13643))*t782 + 0.241*(t11150*t13081 - 1.*t10395*t10578*t13116 + t10694*(-1.*t10395*t10578*t13052 - 1.*t10578*t128*t13065 + t11870*t13756 + t10580*t13762) + t10580*(-1.*t11150*t13052 - 1.*t11601*t13065 - 1.*t11936*t13756 - 1.*t10694*t13762))*t8085)*var2[4] - 0.5*(-0.0219*(t12670 + t10395*(t11779*t12651 + t12678 + t12704 + t12705 + t10386*t12684*t13273 + t10386*t12697*t13273)) + 1.527*(t12948 + t12978 + t12838*(t12906 + t12911 + t12913 + t10395*t10958*t13287 - 1.*t10410*t128*t13287 + t13338) + t10410*(t12949 + t12952 + t12954 - 1.*t10395*t11100*t13287 + t128*t12838*t13287 + t13357))*t2296 + 0.085290585*(t12860 + t12888 + t12838*(t12845 + t12848 + t12849 + t10386*t12684*t13287 + t10386*t12697*t13287 + t13314) + t10386*t128*(t12864 + t12867 + t12868 + t10395*t11100*t13287 - 1.*t128*t12838*t13287 + t13320))*t396 - 0.085290585*(t12808 + t12830 + t10410*(t12765 + t12778 + t12790 + t13283 - 1.*t10386*t12684*t13287 - 1.*t10386*t12697*t13287) + t10386*t128*(t12811 + t12814 + t12815 - 1.*t10395*t10958*t13287 + t10410*t128*t13287 + t13298))*t782 + 0.241*t7605*(t10003*t128*t13231 + t10580*(t10003*t128*t13052 - 1.*t10003*t10395*t13065 - 1.*t10395*t11954*t13393 + t10769*t128*t13393 + t13566 + t13568) + t128*t13258*t9084 + t10769*(t10395*t11870*t13393 - 1.*t10580*t128*t13393 + t13534 + t13535 - 1.*t128*t13052*t9084 + t10395*t13065*t9084)) + 0.241*t6113*(t10003*t128*t13181 + t10694*(-1.*t10003*t128*t13052 + t10003*t10395*t13065 + t10395*t11954*t13393 - 1.*t10769*t128*t13393 + t13485 + t13490) + t128*t13205*t9326 + t10769*(-1.*t10395*t11936*t13393 + t10694*t128*t13393 + t13447 + t13449 + t128*t13052*t9326 - 1.*t10395*t13065*t9326)) + 0.241*t8085*(t128*t13116*t9084 + t10694*(t13375 + t13380 - 1.*t10395*t11870*t13393 + t10580*t128*t13393 + t128*t13052*t9084 - 1.*t10395*t13065*t9084) + t128*t13081*t9326 + t10580*(t10395*t11936*t13393 - 1.*t10694*t128*t13393 + t13415 + t13416 - 1.*t128*t13052*t9326 + t10395*t13065*t9326)))*var2[5] - 0.5*(1.527*(t12838*(t10395*t10958*t12736 - 1.*t10410*t12736*t128 + t12905 + t12906 + t12911 + t12913) + t12948 + t10410*(-1.*t10395*t11100*t12736 + t12736*t128*t12838 + t12949 + t12951 + t12952 + t12954) + t12978)*t2296 - 0.0219*(t12670 + t10395*(t12678 + t10386*t12684*t12689 + t10386*t12689*t12697 + t12704 + t12705 + t11779*(t12650 - 0.02*t2303*t2485))) + 0.085290585*(t12838*(t10386*t12684*t12736 + t10386*t12697*t12736 + t12840 + t12845 + t12848 + t12849) + t12860 + t10386*t128*(t10395*t11100*t12736 - 1.*t12736*t128*t12838 + t12864 + t12865 + t12867 + t12868) + t12888)*t396 - 0.085290585*(t10410*(t12733 - 1.*t10386*t12684*t12736 - 1.*t10386*t12697*t12736 + t12765 + t12778 + t12790) + t12808 + t10386*t128*(-1.*t10395*t10958*t12736 + t10410*t12736*t128 + t12810 + t12811 + t12814 + t12815) + t12830)*t782 + 0.241*(t128*t13116*t2916 + t10694*(t13004 + t13022 - 1.*t10395*t11870*t13028 + t10580*t128*t13028 + t128*t13052*t2916 - 1.*t10395*t13065*t2916) + t128*t13081*t7783 + t10580*(t10395*t11936*t13028 - 1.*t10694*t128*t13028 + t13087 + t13089 - 1.*t128*t13052*t7783 + t10395*t13065*t7783))*t8085 + 0.241*t7605*(t128*t13258*t2916 + t10769*(t10395*t11870*t13028 - 1.*t10580*t128*t13028 + t13210 + t13212 - 1.*t128*t13052*t2916 + t10395*t13065*t2916) + t128*t13231*t8504 + t10580*(-1.*t10395*t11954*t13028 + t10769*t128*t13028 + t13239 + t13240 + t128*t13052*t8504 - 1.*t10395*t13065*t8504)) + 0.241*t6113*(t128*t13205*t7783 + t10769*(-1.*t10395*t11936*t13028 + t10694*t128*t13028 + t13131 + t13133 + t128*t13052*t7783 - 1.*t10395*t13065*t7783) + t128*t13181*t8504 + t10694*(t10395*t11954*t13028 - 1.*t10769*t128*t13028 + t13183 + t13188 - 1.*t128*t13052*t8504 + t10395*t13065*t8504)))*var2[15] - 0.5*(1.527*t10338*(t12838*t12935 + t10410*t12976) + t14021 + 0.241*t10572*t14081 + t14094 + 1.527*(t10444*t12935 + t12838*t12976 + t12838*(t12881 + t12882 + t12883 - 1.*t10410*t13900 - 1.*t10958*t13915 + t13990) + t10410*(t10444*t12772 + t12011*t12788 + t12838*t13900 + t11100*t13915 + t13998 + t13999))*t2296 - 0.085290585*(t10410*t12807 + t10386*t128*t12825)*t396 + 0.085290585*(t10444*t12858 + t12838*(t10386*t128*t13900 - 1.*t10386*t10395*t13915 + t13955) + t10386*t128*(-1.*t10444*t12772 - 1.*t12011*t12788 - 1.*t12838*t13900 - 1.*t11100*t13915 + t13968 + t13969))*t396 + 0.241*(t14095 + t10769*(t10694*t14039 + t11936*t14048 + t14101 + t14102 + t14105 + t14108) + t14119 + t10694*(-1.*t10769*t14039 - 1.*t11954*t14048 + t14120 + t14121 + t14122 + t14128))*t6113 + 0.241*(t14139 + t10769*(-1.*t10580*t14039 - 1.*t11870*t14048 + t14141) + t10580*(t10769*t14039 + t11954*t14048 + t14155 + t14156 + t14159 + t14160))*t7605 - 0.085290585*(t12838*t12858 + t10386*t128*t12887)*t782 - 0.085290585*(t12807*t12838 + t10410*(t13884 - 1.*t10386*t128*t13900 + t10386*t10395*t13915) + t10386*t128*(t12965 + t12967 + t12969 + t10410*t13900 + t10958*t13915 + t13935))*t782 + 0.241*(t14024 + t10694*(t14028 + t10580*t14039 + t11870*t14048) + t10580*(-1.*t10694*t14039 - 1.*t11936*t14048 + t14056 + t14059 + t14060 + t14062))*t8085)*var2[16] - 0.5*(t14021 + 0.241*t10876*t14081 + t14094 + 0.241*(t14095 + t14119 + t10769*(t14101 + t14105 + t14108 + t10694*t14191 + t11936*t14199 + t14214) + t10694*(t14120 + t14122 + t14128 - 1.*t10769*t14191 - 1.*t11954*t14199 + t14226))*t6113 + 0.241*(t14139 + t10769*(-1.*t10580*t14191 - 1.*t11870*t14199 + t14236) + t10580*(t14155 + t14159 + t14160 + t10769*t14191 + t11954*t14199 + t14244))*t7605 + 0.241*(t14024 + t10694*(t14182 + t10580*t14191 + t11870*t14199) + t10580*(t14056 + t14060 + t14062 - 1.*t10694*t14191 - 1.*t11936*t14199 + t14205))*t8085)*var2[17]);
  p_output1[4]=var2[15]*(-0.5*(t14268 + 1.527*(t11893*(t12906 - 1.*t10406*t13287 + t13338 + t14308) + t14318 + t11823*(t12949 + t11064*t13287 + t13357 + t14320) + t14330)*t2296 + 0.085290585*(t14291 + t11893*(t12845 + t10386*t13287 + t13314 + t14292) + t11779*(t12864 - 1.*t11064*t13287 + t13320 + t14297) + t14302)*t396 - 0.085290585*(t14271 + t11779*(t12811 + t10406*t13287 + t13298 + t14272) + t11823*(t12765 + t13283 - 1.*t10386*t13287 + t14277) + t14285)*t782 + 0.241*t7605*(t11851*(t10003*t13046 + t10761*t13393 + t13566 + t13568) + t11699*t14389 + t11657*t14411 + t11951*(-1.*t10578*t13393 + t13534 + t13535 - 1.*t13046*t9084)) + 0.241*t8085*(t11669*t14336 + t11657*t14359 + t11928*(t13375 + t13380 + t10578*t13393 + t13046*t9084) + t11851*(-1.*t10680*t13393 + t13415 + t13416 - 1.*t13046*t9326)) + 0.241*t6113*(t11928*(-1.*t10003*t13046 - 1.*t10761*t13393 + t13485 + t13490) + t11699*t14371 + t11669*t14382 + t11951*(t10680*t13393 + t13447 + t13449 + t13046*t9326)))*var2[5] - 0.5*(t14268 + 1.527*(t11893*(-1.*t10406*t12736 + t12905 + t12906 + t14308) + t14318 + t11823*(t11064*t12736 + t12949 + t12951 + t14320) + t14330)*t2296 + 0.085290585*(t14291 + t11893*(t10386*t12736 + t12840 + t12845 + t14292) + t11779*(-1.*t11064*t12736 + t12864 + t12865 + t14297) + t14302)*t396 - 0.085290585*(t14271 + t11779*(t10406*t12736 + t12810 + t12811 + t14272) + t11823*(t12733 - 1.*t10386*t12736 + t12765 + t14277) + t14285)*t782 + 0.241*(t11451*t14336 + t10386*t14359 + t11928*(t13004 + t13022 + t10578*t13028 + t13046*t2916) + t11851*(-1.*t10680*t13028 + t13087 + t13089 - 1.*t13046*t7783))*t8085 + 0.241*t6113*(t11515*t14371 + t11451*t14382 + t11951*(t10680*t13028 + t13131 + t13133 + t13046*t7783) + t11928*(-1.*t10761*t13028 + t13183 + t13188 - 1.*t13046*t8504)) + 0.241*t7605*(t11515*t14389 + t10386*t14411 + t11951*(-1.*t10578*t13028 + t13210 + t13212 - 1.*t13046*t2916) + t11851*(t10761*t13028 + t13239 + t13240 + t13046*t8504)))*var2[15] - 0.5*(1.527*t10338*(t11893*t14315 + t11823*t14329) + t14547 + 0.241*t10572*t14564 + t14570 - 0.085290585*(t11823*t14270 + t11779*t14284)*t396 + 0.241*(t14571 + t11951*(t10536 + t10550 + t10680*t14037 + t14101 + t14102 + t14572) + t14576 + t11928*(t10457 + t10465 - 1.*t10761*t14037 + t14120 + t14121 + t14580))*t6113 + 0.085290585*t396*(t11893*(t10386*t13894 + t13955) + t11779*(t1057 - 1.*t10437*t12770 - 1.*t11064*t13894 + t13968 + t13969 + t14282) + t14290*t6839) + 1.527*t2296*(t11893*t14329 + t11823*(t10437*t12770 + t11064*t13894 + t13998 + t13999 + t14537 + t1685) + t11893*(t10073 + t12881 - 1.*t10406*t13894 + t13990 + t14300 + t1735) + t14315*t6839) + 0.241*(t11951*(-1.*t10578*t14037 + t14141) + t14592 + t11851*(t10761*t14037 + t14155 + t14156 + t14600 + t14602 + t10456*t4982))*t7605 - 0.085290585*(t11893*t14290 + t11779*t14301)*t782 - 0.085290585*t782*(t11823*(t13884 - 1.*t10386*t13894) + t11893*t14270 + t11779*(t12965 + t10406*t13894 + t13935 + t14328 + t1725 + t1025*t782)) + 0.241*(t11928*(t14028 + t10578*t14037) + t14548 + t11851*(-1.*t10680*t14037 + t14056 + t14059 + t14553 + t14555 - 1.*t10456*t4083))*t8085)*var2[16] - 0.5*(t14547 + 0.241*t10876*t14564 + t14570 + 0.241*(t14571 + t11951*(t10536 + t10862 + t14101 + t10680*t14189 + t14214 + t14572) + t14576 + t11928*(t10465 + t10839 + t14120 - 1.*t10761*t14189 + t14226 + t14580))*t6113 + 0.241*(t11951*(-1.*t10578*t14189 + t14236) + t14592 + t11851*(t14155 + t10761*t14189 + t14244 + t14600 + t14602 + t10834*t4982))*t7605 + 0.241*(t11928*(t14182 + t10578*t14189) + t14548 + t11851*(t14056 - 1.*t10680*t14189 + t14205 + t14553 + t14555 - 1.*t10834*t4083))*t8085)*var2[17]);
  p_output1[5]=var2[15]*(-0.5*(-0.0219*(-1.*t12644*t2469 - 0.02*t2469*t2485) + 0.085290585*(t12717*t2469 - 1.*t12757*t2469 + t12727*t2485 + t12747*t2485)*Power(t396,2) - 0.085290585*(-1.*t12717*t2469 + t12757*t2469 - 1.*t12727*t2485 - 1.*t12747*t2485)*Power(t782,2) + 1.527*t2296*(t396*(t12727*t2469*t396 + t12747*t2469*t396 - 1.*t12717*t2485*t396 + t12757*t2485*t396) + t782*(t12727*t2469*t782 + t12747*t2469*t782 - 1.*t12717*t2485*t782 + t12757*t2485*t782)) + 0.241*t4982*t7605*(t13017*t2469 - 1.*t13009*t2485 - 1.*t12986*t8846 - 1.*t12991*t8927) + 0.241*t4083*t8085*(-1.*t13017*t2469 + t13009*t2485 + t12986*t8846 + t12991*t8927) + 0.241*t6113*(t4982*(-1.*t13009*t2469*t5717 - 1.*t13017*t2485*t5717 + t12986*t9174 + t12991*t9316) + t4083*(t13009*t2469*t4083 + t13017*t2485*t4083 - 1.*t12986*t9614 - 1.*t12991*t9738)))*var2[15] - 0.5*(t14783 + t14791 + t10572*t14820 - 0.17058117*(-1.*t12747*t2469 - 1.*t12757*t2485)*t396*t782 - 0.17058117*(t12747*t2469 + t12757*t2485)*t396*t782 + 1.527*t10338*(t14730*t396 + t14725*t782) + 1.527*t2296*(t14725*t396 - 1.*t14730*t782 + t782*(t14537 + t14727 + t14728 + t1685 - 1.*t10106*t14739*t782 - 1.*t10106*t14741*t782) + t396*(t10073 + t1735 - 1.*t10106*t14739*t396 - 1.*t10106*t14741*t396 - 1.*t12757*t2469*t782 + t12747*t2485*t782)) + 0.241*t8085*(t14768 + t4083*(t10501*t2485*t8846 - 1.*t10501*t2469*t8927)) + 0.241*t7605*(t14762 + t4982*(-1.*t10501*t2485*t8846 + t10501*t2469*t8927)) + 0.241*t6113*(t14797 + t14807 + t4982*(t10536 + t10550 + t14798 + t14799 + t10501*t2485*t9174 - 1.*t10501*t2469*t9316) + t4083*(t10457 + t10465 + t14808 + t14809 - 1.*t10501*t2485*t9614 + t10501*t2469*t9738)))*var2[16] - 0.5*(t14783 + t14791 + t10876*t14820 + 0.241*t8085*(t14768 + t4083*(t10848*t2485*t8846 - 1.*t10848*t2469*t8927)) + 0.241*t7605*(t14762 + t4982*(-1.*t10848*t2485*t8846 + t10848*t2469*t8927)) + 0.241*t6113*(t14797 + t14807 + t4982*(t10536 + t10862 + t14798 + t14799 + t10848*t2485*t9174 - 1.*t10848*t2469*t9316) + t4083*(t10465 + t10839 + t14808 + t14809 - 1.*t10848*t2485*t9614 + t10848*t2469*t9738)))*var2[17]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=var2[15]*(-0.5*(t14860 + t14861 + t14864 + t14867 + t10572*t14872 + 3.054*t10338*t2296 + 0.241*t10572*t6113)*var2[16] - 0.5*(t14860 + t14861 + t14864 + t14867 + t10876*t14872 + 0.241*t10876*t6113)*var2[17]);
  p_output1[16]=var2[15]*(-0.5*(t14893 + t14901 + 0.0034116234*t396 - 0.0034116234*t782)*var2[16] - 0.5*(t14893 + t14901 + 0.241*(0.194401*t3138 + t10823*t3138 + t10790*t3907 + t3138*t4476 - 1.*t3907*t4759)*t7605 + 0.241*(t14884 + t14885 + t14886 - 1.*t10790*t3138 + t10823*t3907)*t8085)*var2[17]);
  p_output1[17]=var2[15]*(-0.5*t14925*var2[16] - 0.5*t14925*var2[17]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec16_plane.hh"

namespace SymFunction
{

void Ce1_vec16_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
