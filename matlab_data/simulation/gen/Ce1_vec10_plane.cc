/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:11:44 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t53;
  double t410;
  double t883;
  double t1242;
  double t1256;
  double t1359;
  double t1503;
  double t1585;
  double t308;
  double t712;
  double t780;
  double t44;
  double t2706;
  double t2729;
  double t2849;
  double t2854;
  double t2863;
  double t2868;
  double t2869;
  double t2885;
  double t2894;
  double t2899;
  double t2944;
  double t2945;
  double t2708;
  double t2731;
  double t2740;
  double t2986;
  double t3008;
  double t3012;
  double t3031;
  double t3036;
  double t3037;
  double t3056;
  double t2889;
  double t2962;
  double t2965;
  double t2384;
  double t2389;
  double t2579;
  double t2632;
  double t2637;
  double t2648;
  double t2651;
  double t3080;
  double t3090;
  double t3093;
  double t797;
  double t1606;
  double t1615;
  double t1622;
  double t1718;
  double t1779;
  double t2055;
  double t2283;
  double t2331;
  double t2680;
  double t3026;
  double t3063;
  double t3065;
  double t3076;
  double t3101;
  double t3102;
  double t3120;
  double t3280;
  double t3291;
  double t3299;
  double t3308;
  double t3316;
  double t3318;
  double t3324;
  double t3329;
  double t3332;
  double t3339;
  double t3341;
  double t3344;
  double t3345;
  double t3347;
  double t3352;
  double t3360;
  double t3367;
  double t3370;
  double t3379;
  double t3383;
  double t3386;
  double t3406;
  double t3407;
  double t3430;
  double t3433;
  double t3435;
  double t3438;
  double t3454;
  double t3510;
  double t3513;
  double t3514;
  double t4690;
  double t4721;
  double t4740;
  double t4741;
  double t4748;
  double t4803;
  double t4809;
  double t4811;
  double t4738;
  double t4752;
  double t4753;
  double t4392;
  double t4416;
  double t4449;
  double t4873;
  double t4875;
  double t4882;
  double t4921;
  double t4932;
  double t4933;
  double t4490;
  double t4492;
  double t4593;
  double t5016;
  double t5018;
  double t4671;
  double t4689;
  double t4796;
  double t4688;
  double t5069;
  double t5076;
  double t5080;
  double t5082;
  double t4862;
  double t4883;
  double t3538;
  double t3547;
  double t3591;
  double t4939;
  double t4940;
  double t4944;
  double t4945;
  double t4946;
  double t4947;
  double t4966;
  double t4969;
  double t4978;
  double t4980;
  double t4990;
  double t4991;
  double t5000;
  double t5001;
  double t5004;
  double t5005;
  double t5237;
  double t5121;
  double t3978;
  double t4116;
  double t4123;
  double t5476;
  double t5478;
  double t5606;
  double t5652;
  double t5692;
  double t5697;
  double t5720;
  double t5723;
  double t5724;
  double t5731;
  double t5748;
  double t5751;
  double t5761;
  double t5764;
  double t5765;
  double t5768;
  double t5771;
  double t5780;
  double t5783;
  double t5789;
  double t5798;
  double t5803;
  double t5819;
  double t5825;
  double t5830;
  double t5868;
  double t5879;
  double t5914;
  double t5921;
  double t5922;
  double t5928;
  double t5930;
  double t5934;
  double t3536;
  double t3620;
  double t3656;
  double t3812;
  double t4368;
  double t4376;
  double t4380;
  double t4457;
  double t4465;
  double t4474;
  double t4618;
  double t4636;
  double t4770;
  double t4818;
  double t4819;
  double t4860;
  double t4863;
  double t4866;
  double t4914;
  double t4915;
  double t4918;
  double t6006;
  double t6007;
  double t6010;
  double t6071;
  double t6074;
  double t6083;
  double t6032;
  double t6036;
  double t6038;
  double t5015;
  double t5019;
  double t5021;
  double t5025;
  double t5037;
  double t5046;
  double t5048;
  double t5056;
  double t5058;
  double t5063;
  double t6057;
  double t6058;
  double t6066;
  double t5068;
  double t5085;
  double t5088;
  double t5089;
  double t5094;
  double t5099;
  double t5100;
  double t5101;
  double t5103;
  double t5954;
  double t5956;
  double t5965;
  double t5122;
  double t5126;
  double t5130;
  double t6085;
  double t6088;
  double t6089;
  double t6092;
  double t6093;
  double t6098;
  double t6124;
  double t6135;
  double t6140;
  double t6158;
  double t6172;
  double t6181;
  double t6182;
  double t6185;
  double t6194;
  double t6199;
  double t5269;
  double t5272;
  double t5280;
  double t5281;
  double t5282;
  double t5293;
  double t5325;
  double t5386;
  double t5405;
  double t5448;
  double t5463;
  double t6329;
  double t6351;
  double t6354;
  double t6363;
  double t6376;
  double t6389;
  double t6390;
  double t6392;
  double t6399;
  double t6403;
  double t6404;
  double t6405;
  double t6416;
  double t6422;
  double t6436;
  double t6437;
  double t6439;
  double t6448;
  double t6473;
  double t6477;
  double t6488;
  double t6500;
  double t6512;
  double t6545;
  double t6548;
  double t6552;
  double t6224;
  double t6233;
  double t6234;
  double t5976;
  double t5978;
  double t5990;
  double t6668;
  double t6669;
  double t6670;
  double t6657;
  double t6658;
  double t6662;
  double t6243;
  double t6251;
  double t6255;
  double t6675;
  double t6678;
  double t6688;
  double t6690;
  double t6692;
  double t6699;
  double t6710;
  double t6713;
  double t6717;
  double t6718;
  double t6763;
  double t6769;
  double t6772;
  double t6776;
  double t6781;
  double t6788;
  double t6789;
  double t6792;
  double t6854;
  double t6860;
  double t6861;
  double t6762;
  double t6795;
  double t6800;
  double t6828;
  double t6831;
  double t6832;
  double t5107;
  double t5109;
  double t5113;
  double t6853;
  double t6927;
  double t6928;
  double t6929;
  double t6906;
  double t6911;
  double t6912;
  double t6869;
  double t6944;
  double t6947;
  double t6948;
  double t6970;
  double t6973;
  double t6955;
  double t6958;
  double t6963;
  double t6979;
  double t6981;
  double t6983;
  double t6967;
  double t6974;
  double t6975;
  double t6978;
  double t6984;
  double t7017;
  double t7019;
  double t7021;
  double t7039;
  double t6913;
  double t6931;
  double t6932;
  double t7102;
  double t7106;
  double t7111;
  double t7309;
  double t7311;
  double t7320;
  double t7302;
  double t7304;
  double t7307;
  double t7340;
  double t7342;
  double t7344;
  double t7368;
  double t7369;
  double t7357;
  double t7361;
  double t7363;
  double t7377;
  double t7381;
  double t7385;
  double t7365;
  double t7370;
  double t7373;
  double t7376;
  double t7386;
  double t7387;
  double t7392;
  double t7404;
  double t7405;
  double t7308;
  double t7321;
  double t7336;
  double t6807;
  double t6835;
  double t6837;
  double t6838;
  double t7621;
  double t7626;
  double t6840;
  double t6845;
  double t6847;
  double t6849;
  double t6888;
  double t6889;
  double t7650;
  double t7653;
  double t7655;
  double t6976;
  double t7018;
  double t7040;
  double t7054;
  double t7057;
  double t7064;
  double t7066;
  double t7068;
  double t7072;
  double t7080;
  double t7085;
  double t7088;
  double t7090;
  double t7091;
  double t7094;
  double t7095;
  double t7122;
  double t7123;
  double t7126;
  double t7130;
  double t7157;
  double t7160;
  double t7166;
  double t7170;
  double t7171;
  double t7176;
  double t7181;
  double t7198;
  double t7199;
  double t7201;
  double t7202;
  double t7203;
  double t7235;
  double t7243;
  double t7244;
  double t7248;
  double t7249;
  double t7250;
  double t7252;
  double t7255;
  double t7259;
  double t7273;
  double t7275;
  double t7288;
  double t7289;
  double t7295;
  double t7297;
  double t7298;
  double t7758;
  double t7759;
  double t7760;
  double t7374;
  double t7391;
  double t7411;
  double t7429;
  double t7430;
  double t7433;
  double t7434;
  double t7435;
  double t7436;
  double t7440;
  double t7442;
  double t7455;
  double t7456;
  double t7457;
  double t7460;
  double t7463;
  double t7473;
  double t7475;
  double t7476;
  double t7486;
  double t7489;
  double t7494;
  double t7495;
  double t7496;
  double t7498;
  double t7501;
  double t7502;
  double t7514;
  double t7515;
  double t7516;
  double t7518;
  double t7522;
  double t7541;
  double t7542;
  double t7543;
  double t7552;
  double t7553;
  double t7554;
  double t7555;
  double t7558;
  double t7559;
  double t7561;
  double t7563;
  double t7593;
  double t7594;
  double t7601;
  double t7603;
  double t7606;
  double t7881;
  double t7883;
  double t7887;
  double t7967;
  double t7970;
  double t7985;
  double t8140;
  double t8142;
  double t8143;
  double t8379;
  double t8395;
  double t8397;
  double t8361;
  double t8362;
  double t8367;
  double t8378;
  double t8401;
  double t8402;
  double t8412;
  double t8424;
  double t8425;
  double t5131;
  double t5134;
  double t8599;
  double t8604;
  double t8612;
  double t8582;
  double t8589;
  double t8590;
  double t8598;
  double t8615;
  double t8619;
  double t8623;
  double t8628;
  double t8632;
  double t8549;
  double t8556;
  double t8557;
  double t8559;
  double t8560;
  double t8564;
  double t8565;
  double t8573;
  double t8574;
  double t8576;
  double t8577;
  double t8581;
  double t8758;
  double t8759;
  double t8762;
  double t8744;
  double t8747;
  double t8751;
  double t8756;
  double t8763;
  double t8765;
  double t8770;
  double t8771;
  double t8772;
  double t8656;
  double t8672;
  double t8682;
  double t8686;
  double t8701;
  double t8702;
  double t8722;
  double t8725;
  double t8726;
  double t7071;
  double t6936;
  double t7112;
  double t7174;
  double t7215;
  double t7261;
  double t7338;
  double t7438;
  double t7474;
  double t7500;
  double t7526;
  double t7560;
  double t8873;
  double t8877;
  double t8878;
  double t8883;
  double t7665;
  double t8885;
  double t8893;
  double t7649;
  double t8908;
  double t8909;
  double t8912;
  double t8914;
  double t8918;
  double t8921;
  double t8923;
  double t8926;
  double t7699;
  double t8940;
  double t7719;
  double t8950;
  double t8951;
  double t8960;
  double t7737;
  double t8966;
  double t8974;
  double t8975;
  double t8984;
  double t8989;
  double t7746;
  double t8996;
  double t8997;
  double t9001;
  double t9008;
  double t9010;
  double t9011;
  double t9013;
  double t7756;
  double t9024;
  double t9025;
  double t9029;
  double t7769;
  double t9034;
  double t9048;
  double t9049;
  double t9050;
  double t7781;
  double t9055;
  double t9060;
  double t9061;
  double t9063;
  double t7793;
  double t9069;
  double t9078;
  double t9080;
  double t9087;
  double t9091;
  double t7823;
  double t9105;
  double t9109;
  double t9113;
  double t9114;
  double t7840;
  double t9117;
  double t8371;
  double t8440;
  double t8465;
  double t8476;
  double t8481;
  double t8497;
  double t8527;
  double t8529;
  double t8592;
  double t8641;
  double t8661;
  double t8670;
  double t8707;
  double t8721;
  double t9439;
  double t9441;
  double t9444;
  double t9450;
  double t9465;
  double t9479;
  double t9485;
  double t9493;
  double t9495;
  double t9501;
  double t9503;
  double t9504;
  double t8752;
  double t8779;
  double t9556;
  double t8802;
  double t9576;
  double t8818;
  double t9580;
  double t9603;
  double t9606;
  double t8836;
  double t8852;
  double t9619;
  double t9976;
  double t9979;
  double t9983;
  double t9988;
  double t9993;
  double t9997;
  double t9416;
  double t10044;
  double t10058;
  double t10111;
  double t10113;
  double t10117;
  double t10121;
  double t10124;
  double t10126;
  double t10141;
  double t10142;
  double t10143;
  double t10093;
  double t10097;
  double t10101;
  double t10104;
  double t10118;
  double t10119;
  double t10127;
  double t10144;
  double t10130;
  double t10131;
  double t10153;
  double t10154;
  double t10176;
  double t10182;
  double t10184;
  double t10224;
  double t10225;
  double t10252;
  double t10254;
  double t10255;
  double t10258;
  double t10260;
  double t10261;
  double t10264;
  double t10267;
  double t10268;
  double t10273;
  double t10341;
  double t10342;
  double t10343;
  t53 = Cos(var1[10]);
  t410 = Sin(var1[10]);
  t883 = -1.*t53;
  t1242 = 1. + t883;
  t1256 = 0.242889*t1242;
  t1359 = 0.202889*t53;
  t1503 = -0.04*t410;
  t1585 = t1256 + t1359 + t1503;
  t308 = -0.04*t53;
  t712 = 0.04*t410;
  t780 = t308 + t712;
  t44 = Cos(var1[4]);
  t2706 = Cos(var1[11]);
  t2729 = Sin(var1[11]);
  t2849 = -1.*t2706;
  t2854 = 1. + t2849;
  t2863 = 0.100689*t2854;
  t2868 = 0.080689*t2706;
  t2869 = -0.16*t2729;
  t2885 = t2863 + t2868 + t2869;
  t2894 = -0.20833*t2854;
  t2899 = -0.36833*t2706;
  t2944 = 0.02*t2729;
  t2945 = t2894 + t2899 + t2944;
  t2708 = t53*t2706;
  t2731 = -1.*t410*t2729;
  t2740 = t2708 + t2731;
  t2986 = t2706*t410;
  t3008 = t53*t2729;
  t3012 = t2986 + t3008;
  t3031 = 0.242889*t410;
  t3036 = -1.*t410*t2885;
  t3037 = t53*t2945;
  t3056 = t3031 + t3036 + t3037;
  t2889 = t53*t2885;
  t2962 = t410*t2945;
  t2965 = t1256 + t2889 + t2962;
  t2384 = Cos(var1[5]);
  t2389 = Sin(var1[9]);
  t2579 = -1.*t2384*t2389;
  t2632 = Cos(var1[9]);
  t2637 = Sin(var1[5]);
  t2648 = -1.*t2632*t2637;
  t2651 = t2579 + t2648;
  t3080 = -1.*t2706*t410;
  t3090 = -1.*t53*t2729;
  t3093 = t3080 + t3090;
  t797 = -1.*t53*t780;
  t1606 = -1.*t1585*t410;
  t1615 = t797 + t1606;
  t1622 = t53*t1615;
  t1718 = t53*t1585;
  t1779 = -1.*t780*t410;
  t2055 = t1718 + t1779;
  t2283 = t410*t2055;
  t2331 = t1622 + t2283;
  t2680 = 1.527*t44*t2331*t2651;
  t3026 = -1.*t2965*t3012;
  t3063 = -1.*t3056*t2740;
  t3065 = t3026 + t3063;
  t3076 = t2740*t3065;
  t3101 = t3056*t3093;
  t3102 = t2965*t2740;
  t3120 = t3101 + t3102;
  t3280 = t3012*t3120;
  t3291 = t3076 + t3280;
  t3299 = 0.241*t44*t3291*t2651;
  t3308 = -1.*t2632*t2384;
  t3316 = t2389*t2637;
  t3318 = t3308 + t3316;
  t3324 = -0.0219*t44*t3318;
  t3329 = -1.*t2632*t53*t2384;
  t3332 = t53*t2389*t2637;
  t3339 = t3329 + t3332;
  t3341 = 0.085290585*t53*t44*t3339;
  t3344 = t2632*t2384*t410;
  t3345 = -1.*t2389*t410*t2637;
  t3347 = t3344 + t3345;
  t3352 = -0.085290585*t44*t410*t3347;
  t3360 = -0.081715*t3093;
  t3367 = -0.11688*t3012;
  t3370 = t3360 + t3367;
  t3379 = -1.*t2632*t2384*t3093;
  t3383 = t2389*t3093*t2637;
  t3386 = t3379 + t3383;
  t3406 = 0.241*t44*t3370*t3386;
  t3407 = -1.*t2632*t2384*t2740;
  t3430 = t2389*t2740*t2637;
  t3433 = t3407 + t3430;
  t3435 = 0.008474765*t44*t2740*t3433;
  t3438 = t2680 + t3299 + t3324 + t3341 + t3352 + t3406 + t3435;
  t3454 = Sin(var1[4]);
  t3510 = t2632*t2384;
  t3513 = -1.*t2389*t2637;
  t3514 = t3510 + t3513;
  t4690 = -0.16*t2706;
  t4721 = t4690 + t2944;
  t4740 = 0.02*t2706;
  t4741 = 0.16*t2729;
  t4748 = t4740 + t4741;
  t4803 = -1.*t410*t4721;
  t4809 = t53*t4748;
  t4811 = t4803 + t4809;
  t4738 = t53*t4721;
  t4752 = t410*t4748;
  t4753 = t4738 + t4752;
  t4392 = -1.*t2384*t2389*t3093;
  t4416 = -1.*t2632*t3093*t2637;
  t4449 = t4392 + t4416;
  t4873 = -1.*t53*t2706;
  t4875 = t410*t2729;
  t4882 = t4873 + t4875;
  t4921 = t2740*t3454;
  t4932 = t44*t4449;
  t4933 = t4921 + t4932;
  t4490 = -1.*t2384*t2389*t2740;
  t4492 = -1.*t2632*t2740*t2637;
  t4593 = t4490 + t4492;
  t5016 = 0.04*t53;
  t5018 = t5016 + t712;
  t4671 = t3093*t3065;
  t4689 = -1.*t3056*t3093;
  t4796 = -1.*t2965*t2740;
  t4688 = t2740*t3120;
  t5069 = 0.242889*t53;
  t5076 = -1.*t53*t2885;
  t5080 = -1.*t410*t2945;
  t5082 = t5069 + t5076 + t5080;
  t4862 = t2965*t3093;
  t4883 = t3056*t4882;
  t3538 = -1.*t53*t2384*t2389;
  t3547 = -1.*t2632*t53*t2637;
  t3591 = t3538 + t3547;
  t4939 = 0.008474765*t2740*t4933;
  t4940 = -0.11688*t2740;
  t4944 = -0.081715*t4882;
  t4945 = t4940 + t4944;
  t4946 = 0.241*t4945*t4933;
  t4947 = t3012*t3454;
  t4966 = t44*t4593;
  t4969 = t4947 + t4966;
  t4978 = 0.008474765*t3093*t4969;
  t4980 = t3093*t3454;
  t4990 = -1.*t2384*t2389*t4882;
  t4991 = -1.*t2632*t4882*t2637;
  t5000 = t4990 + t4991;
  t5001 = t44*t5000;
  t5004 = t4980 + t5001;
  t5005 = 0.241*t3370*t5004;
  t5237 = Sin(var1[3]);
  t5121 = -1.*t410*t3454;
  t3978 = t2384*t2389*t410;
  t4116 = t2632*t410*t2637;
  t4123 = t3978 + t4116;
  t5476 = t5237*t3454*t2651;
  t5478 = Cos(var1[3]);
  t5606 = t5478*t3514;
  t5652 = t5476 + t5606;
  t5692 = 1.527*t2331*t5652;
  t5697 = 0.241*t3291*t5652;
  t5720 = t5478*t2651;
  t5723 = t5237*t3454*t3318;
  t5724 = t5720 + t5723;
  t5731 = -0.0219*t5724;
  t5748 = t5478*t3591;
  t5751 = t5237*t3454*t3339;
  t5761 = t5748 + t5751;
  t5764 = 0.085290585*t53*t5761;
  t5765 = t5478*t4123;
  t5768 = t5237*t3454*t3347;
  t5771 = t5765 + t5768;
  t5780 = -0.085290585*t410*t5771;
  t5783 = t5478*t4449;
  t5789 = t5237*t3454*t3386;
  t5798 = t5783 + t5789;
  t5803 = 0.241*t3370*t5798;
  t5819 = t5478*t4593;
  t5825 = t5237*t3454*t3433;
  t5830 = t5819 + t5825;
  t5868 = 0.008474765*t2740*t5830;
  t5879 = t5692 + t5697 + t5731 + t5764 + t5780 + t5803 + t5868;
  t5914 = t2384*t2389;
  t5921 = t2632*t2637;
  t5922 = t5914 + t5921;
  t5928 = -1.*t5237*t5922;
  t5930 = t5478*t3454*t3514;
  t5934 = t5928 + t5930;
  t3536 = t44*t410;
  t3620 = -1.*t3454*t3591;
  t3656 = t3536 + t3620;
  t3812 = t53*t44;
  t4368 = -1.*t3454*t4123;
  t4376 = t3812 + t4368;
  t4380 = t44*t2740;
  t4457 = -1.*t3454*t4449;
  t4465 = t4380 + t4457;
  t4474 = t44*t3012;
  t4618 = -1.*t3454*t4593;
  t4636 = t4474 + t4618;
  t4770 = -1.*t4753*t3012;
  t4818 = -1.*t4811*t2740;
  t4819 = t4689 + t4770 + t4796 + t4818;
  t4860 = t2740*t4819;
  t4863 = t4811*t3093;
  t4866 = t4753*t2740;
  t4914 = t4862 + t4863 + t4866 + t4883;
  t4915 = t3012*t4914;
  t4918 = t4671 + t4688 + t4860 + t4915;
  t6006 = t2632*t2384*t3093;
  t6007 = -1.*t2389*t3093*t2637;
  t6010 = t6006 + t6007;
  t6071 = t5478*t6010;
  t6074 = -1.*t5237*t4465;
  t6083 = t6071 + t6074;
  t6032 = t2632*t2384*t2740;
  t6036 = -1.*t2389*t2740*t2637;
  t6038 = t6032 + t6036;
  t5015 = -1.*t53*t1585;
  t5019 = -1.*t53*t5018;
  t5021 = t5015 + t5019;
  t5025 = t53*t5021;
  t5037 = -1.*t410*t1615;
  t5046 = t53*t2055;
  t5048 = -1.*t5018*t410;
  t5056 = t1606 + t5048;
  t5058 = t410*t5056;
  t5063 = t5025 + t5037 + t5046 + t5058;
  t6057 = t5478*t5922;
  t6058 = t5237*t3454*t3514;
  t6066 = t6057 + t6058;
  t5068 = -1.*t3056*t3012;
  t5085 = -1.*t5082*t2740;
  t5088 = t4689 + t5068 + t5085 + t4796;
  t5089 = t2740*t5088;
  t5094 = t5082*t3093;
  t5099 = t3056*t2740;
  t5100 = t5094 + t4862 + t5099 + t4883;
  t5101 = t3012*t5100;
  t5103 = t4671 + t5089 + t4688 + t5101;
  t5954 = t2632*t53*t2384;
  t5956 = -1.*t53*t2389*t2637;
  t5965 = t5954 + t5956;
  t5122 = t53*t2384*t2389;
  t5126 = t2632*t53*t2637;
  t5130 = t5122 + t5126;
  t6085 = 0.008474765*t2740*t6083;
  t6088 = 0.241*t4945*t6083;
  t6089 = t5478*t6038;
  t6092 = -1.*t5237*t4636;
  t6093 = t6089 + t6092;
  t6098 = 0.008474765*t3093*t6093;
  t6124 = t2632*t2384*t4882;
  t6135 = -1.*t2389*t4882*t2637;
  t6140 = t6124 + t6135;
  t6158 = t5478*t6140;
  t6172 = t44*t3093;
  t6181 = -1.*t3454*t5000;
  t6182 = t6172 + t6181;
  t6185 = -1.*t5237*t6182;
  t6194 = t6158 + t6185;
  t6199 = 0.241*t3370*t6194;
  t5269 = -1.*t44*t3591;
  t5272 = t5121 + t5269;
  t5280 = -1.*t53*t3454;
  t5281 = -1.*t44*t4123;
  t5282 = t5280 + t5281;
  t5293 = -1.*t2740*t3454;
  t5325 = -1.*t44*t4449;
  t5386 = t5293 + t5325;
  t5405 = -1.*t3012*t3454;
  t5448 = -1.*t44*t4593;
  t5463 = t5405 + t5448;
  t6329 = -1.*t5478*t3454*t2651;
  t6351 = t5237*t3514;
  t6354 = t6329 + t6351;
  t6363 = 1.527*t2331*t6354;
  t6376 = 0.241*t3291*t6354;
  t6389 = t5237*t2651;
  t6390 = -1.*t5478*t3454*t3318;
  t6392 = t6389 + t6390;
  t6399 = -0.0219*t6392;
  t6403 = t5237*t3591;
  t6404 = -1.*t5478*t3454*t3339;
  t6405 = t6403 + t6404;
  t6416 = 0.085290585*t53*t6405;
  t6422 = t5237*t4123;
  t6436 = -1.*t5478*t3454*t3347;
  t6437 = t6422 + t6436;
  t6439 = -0.085290585*t410*t6437;
  t6448 = t5237*t4449;
  t6473 = -1.*t5478*t3454*t3386;
  t6477 = t6448 + t6473;
  t6488 = 0.241*t3370*t6477;
  t6500 = t5237*t4593;
  t6512 = -1.*t5478*t3454*t3433;
  t6545 = t6500 + t6512;
  t6548 = 0.008474765*t2740*t6545;
  t6552 = t6363 + t6376 + t6399 + t6416 + t6439 + t6488 + t6548;
  t6224 = t5478*t5965;
  t6233 = -1.*t5237*t3656;
  t6234 = t6224 + t6233;
  t5976 = -1.*t2632*t2384*t410;
  t5978 = t2389*t410*t2637;
  t5990 = t5976 + t5978;
  t6668 = t5237*t6010;
  t6669 = t5478*t4465;
  t6670 = t6668 + t6669;
  t6657 = t5237*t5922;
  t6658 = -1.*t5478*t3454*t3514;
  t6662 = t6657 + t6658;
  t6243 = -1.*t44*t410;
  t6251 = -1.*t3454*t5130;
  t6255 = t6243 + t6251;
  t6675 = 0.008474765*t2740*t6670;
  t6678 = 0.241*t4945*t6670;
  t6688 = t5237*t6038;
  t6690 = t5478*t4636;
  t6692 = t6688 + t6690;
  t6699 = 0.008474765*t3093*t6692;
  t6710 = t5237*t6140;
  t6713 = t5478*t6182;
  t6717 = t6710 + t6713;
  t6718 = 0.241*t3370*t6717;
  t6763 = -1.*t2632;
  t6769 = 1. + t6763;
  t6772 = 0.081715*t6769;
  t6776 = 0.061715*t2632;
  t6781 = t6772 + t6776;
  t6788 = t6781*t2384;
  t6789 = 0.02*t2389*t2637;
  t6792 = t6788 + t6789;
  t6854 = 0.02*t2384*t2389;
  t6860 = 0.02*t2632*t2637;
  t6861 = t6854 + t6860;
  t6762 = 0.242889*t3454;
  t6795 = t44*t6792;
  t6800 = t6762 + t6795;
  t6828 = 0.242889*t44;
  t6831 = -1.*t3454*t6792;
  t6832 = t6828 + t6831;
  t5107 = t410*t3454;
  t5109 = t44*t3591;
  t5113 = t5107 + t5109;
  t6853 = Power(t44,2);
  t6927 = -0.055855*t2389;
  t6928 = -1.*t2632*t780;
  t6929 = t6927 + t6928;
  t6906 = 0.055855*t2632;
  t6911 = -1.*t2389*t780;
  t6912 = t6906 + t6911;
  t6869 = Power(t3454,2);
  t6944 = t2384*t6929;
  t6947 = -1.*t6912*t2637;
  t6948 = t6944 + t6947;
  t6970 = 0.13757*t2632;
  t6973 = t6772 + t6970 + t6911;
  t6955 = 0.055855*t2389;
  t6958 = t2632*t780;
  t6963 = t6955 + t6958;
  t6979 = t2384*t6973;
  t6981 = -1.*t6963*t2637;
  t6983 = t6979 + t6981;
  t6967 = t2384*t6963;
  t6974 = t6973*t2637;
  t6975 = t6967 + t6974;
  t6978 = t1585*t3454;
  t6984 = t44*t6983;
  t7017 = t6978 + t6984;
  t7019 = t44*t1585;
  t7021 = -1.*t3454*t6983;
  t7039 = t7019 + t7021;
  t6913 = t2384*t6912;
  t6931 = t6929*t2637;
  t6932 = t6913 + t6931;
  t7102 = t53*t3454;
  t7106 = t44*t4123;
  t7111 = t7102 + t7106;
  t7309 = -0.035165*t2389;
  t7311 = -1.*t2632*t3056;
  t7320 = t7309 + t7311;
  t7302 = 0.035165*t2632;
  t7304 = -1.*t2389*t3056;
  t7307 = t7302 + t7304;
  t7340 = t2384*t7320;
  t7342 = -1.*t7307*t2637;
  t7344 = t7340 + t7342;
  t7368 = 0.11688*t2632;
  t7369 = t6772 + t7368 + t7304;
  t7357 = 0.035165*t2389;
  t7361 = t2632*t3056;
  t7363 = t7357 + t7361;
  t7377 = t2384*t7369;
  t7381 = -1.*t7363*t2637;
  t7385 = t7377 + t7381;
  t7365 = t2384*t7363;
  t7370 = t7369*t2637;
  t7373 = t7365 + t7370;
  t7376 = t2965*t3454;
  t7386 = t44*t7385;
  t7387 = t7376 + t7386;
  t7392 = t44*t2965;
  t7404 = -1.*t3454*t7385;
  t7405 = t7392 + t7404;
  t7308 = t2384*t7307;
  t7321 = t7320*t2637;
  t7336 = t7308 + t7321;
  t6807 = -1.*t3454*t6800;
  t6835 = -1.*t44*t6832;
  t6837 = t6807 + t6835;
  t6838 = t44*t2651*t6837;
  t7621 = -1.*t6781*t2637;
  t7626 = t6854 + t7621;
  t6840 = -0.02*t2384*t2389;
  t6845 = t6781*t2637;
  t6847 = t6840 + t6845;
  t6849 = t6847*t3514;
  t6888 = t44*t2651*t6800;
  t6889 = -1.*t3454*t2651*t6832;
  t7650 = -1.*t2384*t6963;
  t7653 = -1.*t6973*t2637;
  t7655 = t7650 + t7653;
  t6976 = -1.*t3514*t6975;
  t7018 = -1.*t44*t2651*t7017;
  t7040 = t3454*t2651*t7039;
  t7054 = -1.*t5922*t6975;
  t7057 = -1.*t44*t3514*t7017;
  t7064 = t3454*t3514*t7039;
  t7066 = t7054 + t7057 + t7064;
  t7068 = t44*t3339*t7066;
  t7072 = t3591*t6975;
  t7080 = t44*t3339*t7017;
  t7085 = -1.*t3454*t3339*t7039;
  t7088 = t5965*t6975;
  t7090 = t5113*t7017;
  t7091 = t3656*t7039;
  t7094 = t7088 + t7090 + t7091;
  t7095 = t44*t2651*t7094;
  t7122 = t3514*t6975;
  t7123 = t44*t2651*t7017;
  t7126 = -1.*t3454*t2651*t7039;
  t7130 = t5922*t6975;
  t7157 = t44*t3514*t7017;
  t7160 = -1.*t3454*t3514*t7039;
  t7166 = t7130 + t7157 + t7160;
  t7170 = t44*t3347*t7166;
  t7171 = -1.*t6975*t4123;
  t7176 = -1.*t44*t3347*t7017;
  t7181 = t3454*t3347*t7039;
  t7198 = -1.*t6975*t5990;
  t7199 = -1.*t7017*t7111;
  t7201 = -1.*t7039*t4376;
  t7202 = t7198 + t7199 + t7201;
  t7203 = t44*t2651*t7202;
  t7235 = -1.*t3591*t6975;
  t7243 = -1.*t44*t3339*t7017;
  t7244 = t3454*t3339*t7039;
  t7248 = -1.*t5965*t6975;
  t7249 = -1.*t5113*t7017;
  t7250 = -1.*t3656*t7039;
  t7252 = t7248 + t7249 + t7250;
  t7255 = t44*t3347*t7252;
  t7259 = t6975*t4123;
  t7273 = t44*t3347*t7017;
  t7275 = -1.*t3454*t3347*t7039;
  t7288 = t6975*t5990;
  t7289 = t7017*t7111;
  t7295 = t7039*t4376;
  t7297 = t7288 + t7289 + t7295;
  t7298 = t44*t3339*t7297;
  t7758 = -1.*t2384*t7363;
  t7759 = -1.*t7369*t2637;
  t7760 = t7758 + t7759;
  t7374 = t3514*t7373;
  t7391 = t44*t2651*t7387;
  t7411 = -1.*t3454*t2651*t7405;
  t7429 = t5922*t7373;
  t7430 = t44*t3514*t7387;
  t7433 = -1.*t3454*t3514*t7405;
  t7434 = t7429 + t7430 + t7433;
  t7435 = t44*t3386*t7434;
  t7436 = -1.*t7373*t4449;
  t7440 = -1.*t44*t3386*t7387;
  t7442 = t3454*t3386*t7405;
  t7455 = -1.*t7373*t6010;
  t7456 = -1.*t7387*t4933;
  t7457 = -1.*t7405*t4465;
  t7460 = t7455 + t7456 + t7457;
  t7463 = t44*t2651*t7460;
  t7473 = t7373*t4449;
  t7475 = t44*t3386*t7387;
  t7476 = -1.*t3454*t3386*t7405;
  t7486 = t7373*t6010;
  t7489 = t7387*t4933;
  t7494 = t7405*t4465;
  t7495 = t7486 + t7489 + t7494;
  t7496 = t44*t3433*t7495;
  t7498 = -1.*t7373*t4593;
  t7501 = -1.*t44*t3433*t7387;
  t7502 = t3454*t3433*t7405;
  t7514 = -1.*t7373*t6038;
  t7515 = -1.*t7387*t4969;
  t7516 = -1.*t7405*t4636;
  t7518 = t7514 + t7515 + t7516;
  t7522 = t44*t3386*t7518;
  t7541 = -1.*t3514*t7373;
  t7542 = -1.*t44*t2651*t7387;
  t7543 = t3454*t2651*t7405;
  t7552 = -1.*t5922*t7373;
  t7553 = -1.*t44*t3514*t7387;
  t7554 = t3454*t3514*t7405;
  t7555 = t7552 + t7553 + t7554;
  t7558 = t44*t3433*t7555;
  t7559 = t7373*t4593;
  t7561 = t44*t3433*t7387;
  t7563 = -1.*t3454*t3433*t7405;
  t7593 = t7373*t6038;
  t7594 = t7387*t4969;
  t7601 = t7405*t4636;
  t7603 = t7593 + t7594 + t7601;
  t7606 = t44*t2651*t7603;
  t7881 = -0.242889*t3454;
  t7883 = -1.*t44*t6792;
  t7887 = t7881 + t7883;
  t7967 = -1.*t1585*t3454;
  t7970 = -1.*t44*t6983;
  t7985 = t7967 + t7970;
  t8140 = -1.*t2965*t3454;
  t8142 = -1.*t44*t7385;
  t8143 = t8140 + t8142;
  t8379 = -1.*t2384*t2389*t5018;
  t8395 = -1.*t2632*t5018*t2637;
  t8397 = t8379 + t8395;
  t8361 = t2632*t2384*t5018;
  t8362 = -1.*t2389*t5018*t2637;
  t8367 = t8361 + t8362;
  t8378 = t780*t3454;
  t8401 = t44*t8397;
  t8402 = t8378 + t8401;
  t8412 = t44*t780;
  t8424 = -1.*t3454*t8397;
  t8425 = t8412 + t8424;
  t5131 = t44*t5130;
  t5134 = t5121 + t5131;
  t8599 = -1.*t2384*t2389*t5082;
  t8604 = -1.*t2632*t5082*t2637;
  t8612 = t8599 + t8604;
  t8582 = t2632*t2384*t5082;
  t8589 = -1.*t2389*t5082*t2637;
  t8590 = t8582 + t8589;
  t8598 = t3056*t3454;
  t8615 = t44*t8612;
  t8619 = t8598 + t8615;
  t8623 = t44*t3056;
  t8628 = -1.*t3454*t8612;
  t8632 = t8623 + t8628;
  t8549 = t4933*t7434;
  t8556 = t44*t3514*t7460;
  t8557 = t8549 + t8556;
  t8559 = 0.008474765*t3093*t8557;
  t8560 = t4969*t7495;
  t8564 = t4933*t7518;
  t8565 = t8560 + t8564;
  t8573 = t4969*t7555;
  t8574 = t44*t3514*t7603;
  t8576 = t8573 + t8574;
  t8577 = 0.241*t4945*t8576;
  t8581 = t4933*t7555;
  t8758 = -1.*t2384*t2389*t4811;
  t8759 = -1.*t2632*t4811*t2637;
  t8762 = t8758 + t8759;
  t8744 = t2632*t2384*t4811;
  t8747 = -1.*t2389*t4811*t2637;
  t8751 = t8744 + t8747;
  t8756 = t4753*t3454;
  t8763 = t44*t8762;
  t8765 = t8756 + t8763;
  t8770 = t44*t4753;
  t8771 = -1.*t3454*t8762;
  t8772 = t8770 + t8771;
  t8656 = t5004*t7434;
  t8672 = -1.*t7373*t6140;
  t8682 = -1.*t7387*t5004;
  t8686 = -1.*t7405*t6182;
  t8701 = t4933*t7495;
  t8702 = t5004*t7518;
  t8722 = t7373*t6140;
  t8725 = t7387*t5004;
  t8726 = t7405*t6182;
  t7071 = t5965*t6932;
  t6936 = -1.*t5922*t6932;
  t7112 = t5922*t6932;
  t7174 = -1.*t6932*t5990;
  t7215 = -1.*t5965*t6932;
  t7261 = t6932*t5990;
  t7338 = t5922*t7336;
  t7438 = -1.*t7336*t6010;
  t7474 = t7336*t6010;
  t7500 = -1.*t7336*t6038;
  t7526 = -1.*t5922*t7336;
  t7560 = t7336*t6038;
  t8873 = 0.0053192691*t3514;
  t8877 = -1.*t3514*t6983;
  t8878 = t8877 + t7054;
  t8883 = t3591*t8878;
  t7665 = t5965*t6983;
  t8885 = t3339*t6983;
  t8893 = -1.*t2651*t6983;
  t7649 = -1.*t5922*t6983;
  t8908 = t1585*t410;
  t8909 = t3591*t6983;
  t8912 = t8908 + t8909 + t7088;
  t8914 = t3514*t8912;
  t8918 = t3514*t6983;
  t8921 = t8918 + t7130;
  t8923 = t4123*t8921;
  t8926 = t2651*t6983;
  t7699 = t5922*t6983;
  t8940 = -1.*t6983*t3347;
  t7719 = -1.*t6983*t5990;
  t8950 = -1.*t6983*t4123;
  t8951 = t5015 + t8950 + t7198;
  t8960 = t3514*t8951;
  t7737 = -1.*t5965*t6983;
  t8966 = -1.*t3339*t6983;
  t8974 = -1.*t3591*t6983;
  t8975 = t1606 + t8974 + t7248;
  t8984 = t4123*t8975;
  t8989 = t6983*t3347;
  t7746 = t6983*t5990;
  t8996 = t6983*t4123;
  t8997 = t1718 + t8996 + t7288;
  t9001 = t3591*t8997;
  t9008 = t3514*t7385;
  t9010 = t9008 + t7429;
  t9011 = t4449*t9010;
  t9013 = t2651*t7385;
  t7756 = t5922*t7385;
  t9024 = -1.*t7385*t4449;
  t9025 = t4796 + t9024 + t7455;
  t9029 = t3514*t9025;
  t7769 = -1.*t7385*t6010;
  t9034 = -1.*t7385*t3386;
  t9048 = t7385*t4449;
  t9049 = t3102 + t9048 + t7486;
  t9050 = t4593*t9049;
  t7781 = t7385*t6010;
  t9055 = t7385*t3386;
  t9060 = -1.*t7385*t4593;
  t9061 = t3026 + t9060 + t7514;
  t9063 = t4449*t9061;
  t7793 = -1.*t7385*t6038;
  t9069 = -1.*t7385*t3433;
  t9078 = -1.*t3514*t7385;
  t9080 = t9078 + t7552;
  t9087 = t4593*t9080;
  t9091 = -1.*t2651*t7385;
  t7823 = -1.*t5922*t7385;
  t9105 = t2965*t3012;
  t9109 = t7385*t4593;
  t9113 = t9105 + t9109 + t7593;
  t9114 = t3514*t9113;
  t7840 = t7385*t6038;
  t9117 = t7385*t3433;
  t8371 = -1.*t5922*t8367;
  t8440 = t5965*t8367;
  t8465 = t5922*t8367;
  t8476 = -1.*t3339*t6975;
  t8481 = -1.*t8367*t5990;
  t8497 = -1.*t5965*t8367;
  t8527 = t3339*t6975;
  t8529 = t8367*t5990;
  t8592 = -1.*t5922*t8590;
  t8641 = t8590*t6038;
  t8661 = t5922*t8590;
  t8670 = -1.*t8590*t6010;
  t8707 = -1.*t8590*t6038;
  t8721 = t8590*t6010;
  t9439 = t6010*t9010;
  t9441 = t5922*t9025;
  t9444 = t9439 + t9441;
  t9450 = 0.008474765*t3093*t9444;
  t9465 = t6038*t9049;
  t9479 = t6010*t9061;
  t9485 = t9465 + t9479;
  t9493 = t6038*t9080;
  t9495 = t5922*t9113;
  t9501 = t9493 + t9495;
  t9503 = 0.241*t4945*t9501;
  t9504 = t6010*t9080;
  t8752 = -1.*t5922*t8751;
  t8779 = t8751*t6038;
  t9556 = t6140*t9010;
  t8802 = t5922*t8751;
  t9576 = -1.*t2965*t3093;
  t8818 = -1.*t8751*t6010;
  t9580 = -1.*t7385*t5000;
  t9603 = t6010*t9049;
  t9606 = t6140*t9061;
  t8836 = -1.*t8751*t6038;
  t8852 = t8751*t6010;
  t9619 = t7385*t5000;
  t9976 = -1.*t2632*t6963*t410;
  t9979 = t2389*t6973*t410;
  t9983 = t1718 + t9976 + t9979;
  t9988 = -1.*t2632*t53*t6963;
  t9993 = t53*t2389*t6973;
  t9997 = t9988 + t9993 + t1606;
  t9416 = t53*t780;
  t10044 = Power(t2632,2);
  t10058 = Power(t2389,2);
  t10111 = -1.*t2389*t7363;
  t10113 = -1.*t2632*t7369;
  t10117 = t10111 + t10113;
  t10121 = -1.*t2632*t7363*t2740;
  t10124 = t2389*t7369*t2740;
  t10126 = t3026 + t10121 + t10124;
  t10141 = t2632*t7363*t3093;
  t10142 = -1.*t2389*t7369*t3093;
  t10143 = t10141 + t10142 + t3102;
  t10093 = t2389*t7363;
  t10097 = t2632*t7369;
  t10101 = t10093 + t10097;
  t10104 = 0.01694953*t10101*t3093*t2740;
  t10118 = 0.241*t10117*t2740*t3370;
  t10119 = 0.241*t10117*t3012*t4945;
  t10127 = t3093*t10126;
  t10144 = t2740*t10143;
  t10130 = -1.*t2632*t7363*t3093;
  t10131 = t2389*t7369*t3093;
  t10153 = t2632*t7363*t4882;
  t10154 = -1.*t2389*t7369*t4882;
  t10176 = t2740*t10126;
  t10182 = t3012*t10143;
  t10184 = t10176 + t10182;
  t10224 = 0.00059603022245*t3093*t2740;
  t10225 = 0.482*t3370*t4945;
  t10252 = 0.242889*t2706;
  t10254 = -1.*t2706*t2885;
  t10255 = t2945*t2729;
  t10258 = t10252 + t10254 + t10255;
  t10260 = 0.008474765*t3093*t10258;
  t10261 = t2706*t2945;
  t10264 = -0.242889*t2729;
  t10267 = t2885*t2729;
  t10268 = t10261 + t10264 + t10267;
  t10273 = 0.241*t10268*t4945;
  t10341 = 0.0001694953*t3093;
  t10342 = -0.03856*t4945;
  t10343 = t10341 + t10342;
  p_output1[0]=var2[9]*(-0.5*(0.0219*t2651*t3454 - 1.527*t2331*t3454*t3514 - 0.241*t3291*t3454*t3514 - 0.085290585*t410*t4376 + 0.241*t3370*t4465 + 0.008474765*t2740*t4636 + 0.085290585*t3656*t53)*var2[4] - 0.5*t3438*var2[5] - 0.5*t3438*var2[9] - 0.5*(t4939 + t4946 + t4978 + t5005 + 1.527*t3514*t44*t5063 + 0.241*t3514*t44*t5103 - 0.085290585*t410*t5113 - 0.085290585*t410*t5134)*var2[10] - 0.5*(0.241*t3514*t44*t4918 + t4939 + t4946 + t4978 + t5005)*var2[11]);
  p_output1[1]=var2[9]*(-0.5*(-0.0219*(-1.*t3514*t5237 + t2651*t3454*t5478) + 1.527*t2331*t5934 + 0.241*t3291*t5934 + 0.085290585*t53*(-1.*t3656*t5478 - 1.*t5237*t5965) - 0.085290585*t410*(-1.*t4376*t5478 - 1.*t5237*t5990) + 0.241*t3370*(-1.*t4465*t5478 - 1.*t5237*t6010) + 0.008474765*t2740*(-1.*t4636*t5478 - 1.*t5237*t6038))*var2[3] - 0.5*(-0.0219*t2651*t44*t5237 + 1.527*t2331*t3514*t44*t5237 + 0.241*t3291*t3514*t44*t5237 + 0.085290585*t410*t5237*t5282 - 0.085290585*t5237*t5272*t53 - 0.241*t3370*t5237*t5386 - 0.008474765*t2740*t5237*t5463)*var2[4] - 0.5*t5879*var2[5] - 0.5*t5879*var2[9] - 0.5*(1.527*t5063*t6066 + 0.241*t5103*t6066 + t6085 + t6088 + t6098 + t6199 - 0.085290585*t410*t6234 - 0.085290585*t410*(t3339*t5478 - 1.*t5237*t6255))*var2[10] - 0.5*(0.241*t4918*t6066 + t6085 + t6088 + t6098 + t6199)*var2[11]);
  p_output1[2]=var2[9]*(-0.5*(-0.0219*t5652 - 0.085290585*t410*(-1.*t4376*t5237 + t5478*t5990) + 1.527*t2331*t6066 + 0.241*t3291*t6066 + 0.241*t3370*t6083 + 0.008474765*t2740*t6093 + 0.085290585*t53*t6234)*var2[3] - 0.5*(0.0219*t2651*t44*t5478 - 1.527*t2331*t3514*t44*t5478 - 0.241*t3291*t3514*t44*t5478 - 0.085290585*t410*t5282*t5478 + 0.085290585*t5272*t53*t5478 + 0.241*t3370*t5386*t5478 + 0.008474765*t2740*t5463*t5478)*var2[4] - 0.5*t6552*var2[5] - 0.5*t6552*var2[9] - 0.5*(-0.085290585*t410*(t3656*t5478 + t5237*t5965) - 0.085290585*t410*(t3339*t5237 + t5478*t6255) + 1.527*t5063*t6662 + 0.241*t5103*t6662 + t6675 + t6678 + t6699 + t6718)*var2[10] - 0.5*(0.241*t4918*t6662 + t6675 + t6678 + t6699 + t6718)*var2[11]);
  p_output1[3]=var2[9]*(-0.5*(-0.0219*(-1.*t3454*t3514*t6837 + t44*(t3514*t44*t6800 - 1.*t3454*t3514*t6832 + t5922*t6847) + t3454*(-1.*t3454*t3514*t6800 - 1.*t3454*t3514*t7887) + t3514*t44*(-1.*t44*t6800 - 1.*t44*t7887)) - 0.085290585*t410*(t3656*t7066 - 1.*t3454*t3514*t7094 + t5113*(t3454*t3514*t7017 + t3454*t3514*t7985) + t3514*t44*(t3656*t7017 + t5113*t7039 + t5272*t7039 + t3656*t7985)) + 0.085290585*t53*(t4376*t7166 - 1.*t3454*t3514*t7202 + t7111*(-1.*t3454*t3514*t7017 - 1.*t3454*t3514*t7985) + t3514*t44*(-1.*t4376*t7017 - 1.*t5282*t7039 - 1.*t7039*t7111 - 1.*t4376*t7985)) + 1.527*t2331*(t4376*t7252 + t3656*t7297 + t7111*(-1.*t3656*t7017 - 1.*t5113*t7039 - 1.*t5272*t7039 - 1.*t3656*t7985) + t5113*(t4376*t7017 + t5282*t7039 + t7039*t7111 + t4376*t7985)) + 0.008474765*t2740*(t4465*t7434 - 1.*t3454*t3514*t7460 + t4933*(-1.*t3454*t3514*t7387 - 1.*t3454*t3514*t8143) + t3514*t44*(-1.*t4465*t7387 - 1.*t4933*t7405 - 1.*t5386*t7405 - 1.*t4465*t8143)) + 0.241*t3291*(t4636*t7495 + t4465*t7518 + t4969*(t4465*t7387 + t4933*t7405 + t5386*t7405 + t4465*t8143) + t4933*(-1.*t4636*t7387 - 1.*t4969*t7405 - 1.*t5463*t7405 - 1.*t4636*t8143)) + 0.241*t3370*(t4636*t7555 - 1.*t3454*t3514*t7603 + t4969*(t3454*t3514*t7387 + t3454*t3514*t8143) + t3514*t44*(t4636*t7387 + t4969*t7405 + t5463*t7405 + t4636*t8143)))*var2[4] - 0.5*(-0.0219*(t6838 + t3454*(t5922*t6792 + t6849 + t6888 + t6889 + t3514*t6853*t7626 + t3514*t6869*t7626)) - 0.085290585*t410*(t7068 + t7095 + t5113*(t6976 + t7018 + t7040 + t7649 - 1.*t3514*t6853*t7655 - 1.*t3514*t6869*t7655) + t3514*t44*(t7072 + t7080 + t7085 - 1.*t3454*t3656*t7655 + t44*t5113*t7655 + t7665)) + 0.085290585*t53*(t7170 + t7203 + t7111*(t7122 + t7123 + t7126 + t3514*t6853*t7655 + t3514*t6869*t7655 + t7699) + t3514*t44*(t7171 + t7176 + t7181 + t3454*t4376*t7655 - 1.*t44*t7111*t7655 + t7719)) + 1.527*t2331*(t7255 + t7298 + t7111*(t7235 + t7243 + t7244 + t3454*t3656*t7655 - 1.*t44*t5113*t7655 + t7737) + t5113*(t7259 + t7273 + t7275 - 1.*t3454*t4376*t7655 + t44*t7111*t7655 + t7746)) + 0.008474765*t2740*(t7435 + t7463 + t4933*(t7374 + t7391 + t7411 + t7756 + t3514*t6853*t7760 + t3514*t6869*t7760) + t3514*t44*(t7436 + t7440 + t7442 + t3454*t4465*t7760 - 1.*t44*t4933*t7760 + t7769)) + 0.241*t3291*(t7496 + t7522 + t4969*(t7473 + t7475 + t7476 - 1.*t3454*t4465*t7760 + t44*t4933*t7760 + t7781) + t4933*(t7498 + t7501 + t7502 + t3454*t4636*t7760 - 1.*t44*t4969*t7760 + t7793)) + 0.241*t3370*(t7558 + t7606 + t4969*(t7541 + t7542 + t7543 - 1.*t3514*t6853*t7760 - 1.*t3514*t6869*t7760 + t7823) + t3514*t44*(t7559 + t7561 + t7563 - 1.*t3454*t4636*t7760 + t44*t4969*t7760 + t7840)))*var2[5] - 0.5*(-0.0219*(t6838 + t3454*(t5922*(-0.02*t2384*t2632 + t6789) + t6849 + t3514*t6853*t6861 + t3514*t6861*t6869 + t6888 + t6889)) - 0.085290585*t410*(t5113*(t6936 - 1.*t3514*t6853*t6948 - 1.*t3514*t6869*t6948 + t6976 + t7018 + t7040) + t7068 + t3514*t44*(-1.*t3454*t3656*t6948 + t44*t5113*t6948 + t7071 + t7072 + t7080 + t7085) + t7095) + 0.085290585*t53*(t7111*(t3514*t6853*t6948 + t3514*t6869*t6948 + t7112 + t7122 + t7123 + t7126) + t7170 + t3514*t44*(t3454*t4376*t6948 - 1.*t44*t6948*t7111 + t7171 + t7174 + t7176 + t7181) + t7203) + 1.527*t2331*(t7111*(t3454*t3656*t6948 - 1.*t44*t5113*t6948 + t7215 + t7235 + t7243 + t7244) + t7255 + t5113*(-1.*t3454*t4376*t6948 + t44*t6948*t7111 + t7259 + t7261 + t7273 + t7275) + t7298) + 0.008474765*t2740*(t4933*(t7338 + t3514*t6853*t7344 + t3514*t6869*t7344 + t7374 + t7391 + t7411) + t7435 + t3514*t44*(t3454*t4465*t7344 - 1.*t44*t4933*t7344 + t7436 + t7438 + t7440 + t7442) + t7463) + 0.241*t3291*(t4969*(-1.*t3454*t4465*t7344 + t44*t4933*t7344 + t7473 + t7474 + t7475 + t7476) + t7496 + t4933*(t3454*t4636*t7344 - 1.*t44*t4969*t7344 + t7498 + t7500 + t7501 + t7502) + t7522) + 0.241*t3370*(t4969*(-1.*t3514*t6853*t7344 - 1.*t3514*t6869*t7344 + t7526 + t7541 + t7542 + t7543) + t7558 + t3514*t44*(-1.*t3454*t4636*t7344 + t44*t4969*t7344 + t7559 + t7560 + t7561 + t7563) + t7606))*var2[9] - 0.5*(-0.085290585*t53*(t5113*t7066 + t3514*t44*t7094) - 0.085290585*t410*(t7111*t7166 + t3514*t44*t7202) + 1.527*t5063*(t7111*t7252 + t5113*t7297) - 0.085290585*t410*(t7066*t7111 + t5113*(t8371 - 1.*t3514*t44*t8402 + t3454*t3514*t8425) + t3514*t44*(t7288 + t7289 + t7295 + t5113*t8402 + t3656*t8425 + t8440)) + 0.085290585*t53*(t5134*t7166 + t7111*(t3514*t44*t8402 - 1.*t3454*t3514*t8425 + t8465) + t3514*t44*(-1.*t5134*t7017 - 1.*t6255*t7039 - 1.*t7111*t8402 - 1.*t4376*t8425 + t8476 + t8481)) + 1.527*t2331*(t5134*t7252 + t7111*t7297 + t7111*(t7198 + t7199 + t7201 - 1.*t5113*t8402 - 1.*t3656*t8425 + t8497) + t5113*(t5134*t7017 + t6255*t7039 + t7111*t8402 + t4376*t8425 + t8527 + t8529)) + t8559 + 0.241*t5103*t8565 + t8577 + 0.241*t3370*(t8581 + t4969*(t8592 - 1.*t3514*t44*t8619 + t3454*t3514*t8632) + t3514*t44*(t7486 + t7489 + t7494 + t4969*t8619 + t4636*t8632 + t8641)) + 0.008474765*t2740*(t8656 + t4933*(t3514*t44*t8619 - 1.*t3454*t3514*t8632 + t8661) + t3514*t44*(-1.*t4933*t8619 - 1.*t4465*t8632 + t8670 + t8672 + t8682 + t8686)) + 0.241*t3291*(t8701 + t8702 + t4933*(t7455 + t7456 + t7457 - 1.*t4969*t8619 - 1.*t4636*t8632 + t8707) + t4969*(t4933*t8619 + t4465*t8632 + t8721 + t8722 + t8725 + t8726)))*var2[10] - 0.5*(t8559 + 0.241*t4918*t8565 + t8577 + 0.241*t3370*(t8581 + t4969*(t8752 - 1.*t3514*t44*t8765 + t3454*t3514*t8772) + t3514*t44*(t7486 + t7489 + t7494 + t4969*t8765 + t4636*t8772 + t8779)) + 0.008474765*t2740*(t8656 + t4933*(t3514*t44*t8765 - 1.*t3454*t3514*t8772 + t8802) + t3514*t44*(t8672 + t8682 + t8686 - 1.*t4933*t8765 - 1.*t4465*t8772 + t8818)) + 0.241*t3291*(t8701 + t8702 + t4933*(t7455 + t7456 + t7457 - 1.*t4969*t8765 - 1.*t4636*t8772 + t8836) + t4969*(t8722 + t8725 + t8726 + t4933*t8765 + t4465*t8772 + t8852)))*var2[11]);
  p_output1[4]=var2[9]*(-0.5*(t8873 - 0.085290585*t410*(t8883 + t5922*(t7072 + t3591*t7655 + t7665 + t8885) + t5965*(t6976 + t7649 - 1.*t3514*t7655 + t8893) + t8914) + 0.085290585*t53*(t8923 + t5990*(t7122 + t3514*t7655 + t7699 + t8926) + t5922*(t7171 - 1.*t4123*t7655 + t7719 + t8940) + t8960) + 1.527*t2331*(t5990*(t7235 - 1.*t3591*t7655 + t7737 + t8966) + t8984 + t5965*(t7259 + t4123*t7655 + t7746 + t8989) + t9001) + 0.008474765*t2740*(t9011 + t6010*(t7374 + t7756 + t3514*t7760 + t9013) + t9029 + t5922*(t7436 - 1.*t4449*t7760 + t7769 + t9034)) + 0.241*t3291*(t9050 + t6038*(t7473 + t4449*t7760 + t7781 + t9055) + t9063 + t6010*(t7498 - 1.*t4593*t7760 + t7793 + t9069)) + 0.241*t3370*(t9087 + t6038*(t7541 - 1.*t3514*t7760 + t7823 + t9091) + t9114 + t5922*(t7559 + t4593*t7760 + t7840 + t9117)))*var2[5] - 0.5*(t8873 - 0.085290585*t410*(t8883 + t5922*(t3591*t6948 + t7071 + t7072 + t8885) + t5965*(t6936 - 1.*t3514*t6948 + t6976 + t8893) + t8914) + 0.085290585*t53*(t8923 + t5990*(t3514*t6948 + t7112 + t7122 + t8926) + t5922*(-1.*t4123*t6948 + t7171 + t7174 + t8940) + t8960) + 1.527*t2331*(t5990*(-1.*t3591*t6948 + t7215 + t7235 + t8966) + t8984 + t5965*(t4123*t6948 + t7259 + t7261 + t8989) + t9001) + 0.008474765*t2740*(t9011 + t6010*(t7338 + t3514*t7344 + t7374 + t9013) + t9029 + t5922*(-1.*t4449*t7344 + t7436 + t7438 + t9034)) + 0.241*t3291*(t9050 + t6038*(t4449*t7344 + t7473 + t7474 + t9055) + t9063 + t6010*(-1.*t4593*t7344 + t7498 + t7500 + t9069)) + 0.241*t3370*(t9087 + t6038*(-1.*t3514*t7344 + t7526 + t7541 + t9091) + t9114 + t5922*(t4593*t7344 + t7559 + t7560 + t9117)))*var2[9] - 0.5*(-0.085290585*t53*(t5965*t8878 + t5922*t8912) + 0.085290585*t53*(t5990*(t3514*t8397 + t8465) + t5922*(-1.*t5130*t6983 + t797 - 1.*t4123*t8397 + t8476 + t8481 + t8908) + t3339*t8921) - 0.085290585*t410*(t5990*t8921 + t5922*t8951) - 0.085290585*t410*(t5965*(t8371 - 1.*t3514*t8397) + t5990*t8878 + t5922*(t1718 + t7288 + t410*t780 + t3591*t8397 + t8440 + t8996)) + 1.527*t5063*(t5990*t8975 + t5965*t8997) + 1.527*t2331*(t5990*(t1779 + t5015 + t7198 - 1.*t3591*t8397 + t8497 + t8950) + t3339*t8975 + t5990*t8997 + t5965*(t1606 + t5130*t6983 + t4123*t8397 + t8527 + t8529 + t9416)) + t9450 + 0.241*t5103*t9485 + t9503 + 0.241*t3370*(t6038*(t8592 - 1.*t3514*t8612) + t5922*(t3012*t3056 + t3102 + t7486 + t4593*t8612 + t8641 + t9048) + t9504) + 0.008474765*t2740*(t6010*(t3514*t8612 + t8661) + t9556 + t5922*(t3063 - 1.*t4449*t8612 + t8670 + t8672 + t9576 + t9580)) + 0.241*t3291*(t6010*(t4796 + t5068 + t7455 - 1.*t4593*t8612 + t8707 + t9024) + t9603 + t9606 + t6038*(t4862 + t5099 + t4449*t8612 + t8721 + t8722 + t9619)))*var2[10] - 0.5*(t9450 + 0.241*t4918*t9485 + t9503 + 0.241*t3370*(t6038*(t8752 - 1.*t3514*t8762) + t5922*(t3102 + t3012*t4753 + t7486 + t4593*t8762 + t8779 + t9048) + t9504) + 0.008474765*t2740*(t6010*(t3514*t8762 + t8802) + t9556 + t5922*(-1.*t2740*t4753 + t8672 - 1.*t4449*t8762 + t8818 + t9576 + t9580)) + 0.241*t3291*(t6010*(t4770 + t4796 + t7455 - 1.*t4593*t8762 + t8836 + t9024) + t9603 + t9606 + t6038*(t4862 + t4866 + t8722 + t4449*t8762 + t8852 + t9619)))*var2[11]);
  p_output1[5]=var2[9]*(-0.5*(-0.0219*(-0.02*t2389*t2632 - 1.*t2389*t6781) + 0.085290585*Power(t53,2)*(t2389*t6912 + t2632*t6929 + t2632*t6963 - 1.*t2389*t6973) - 0.085290585*Power(t410,2)*(-1.*t2389*t6912 - 1.*t2632*t6929 - 1.*t2632*t6963 + t2389*t6973) + 1.527*t2331*(t410*(-1.*t2632*t410*t6912 + t2389*t410*t6929 + t2389*t410*t6963 + t2632*t410*t6973) + t53*(-1.*t2632*t53*t6912 + t2389*t53*t6929 + t2389*t53*t6963 + t2632*t53*t6973)) + 0.008474765*Power(t2740,2)*(t2389*t7307 + t2632*t7320 + t2632*t7363 - 1.*t2389*t7369) + 0.241*t3012*t3370*(-1.*t2389*t7307 - 1.*t2632*t7320 - 1.*t2632*t7363 + t2389*t7369) + 0.241*t3291*(t2740*(-1.*t2632*t2740*t7307 + t2389*t2740*t7320 + t2389*t2740*t7363 + t2632*t2740*t7369) + t3012*(t2632*t3093*t7307 - 1.*t2389*t3093*t7320 - 1.*t2389*t3093*t7363 - 1.*t2632*t3093*t7369)))*var2[9] - 0.5*(t10104 + t10118 + t10119 + 0.241*t3291*(t10127 + t10144 + t2740*(t10130 + t10131 + t4796 + t5068 - 1.*t10044*t2740*t5082 - 1.*t10058*t2740*t5082) + t3012*(t10153 + t10154 + t4862 + t10044*t3093*t5082 + t10058*t3093*t5082 + t5099)) + 0.241*t10184*t5103 - 0.17058117*t410*t53*(-1.*t2389*t6963 - 1.*t2632*t6973) - 0.17058117*t410*t53*(t2389*t6963 + t2632*t6973) + 1.527*t2331*(t53*(t1779 + t5015 - 1.*t10044*t5018*t53 - 1.*t10058*t5018*t53 + t2632*t410*t6963 - 1.*t2389*t410*t6973) + t53*t9983 + t410*(t1606 - 1.*t10044*t410*t5018 - 1.*t10058*t410*t5018 + t9416 + t9988 + t9993) - 1.*t410*t9997) + 1.527*t5063*(t410*t9983 + t53*t9997))*var2[10] - 0.5*(t10104 + t10118 + t10119 + 0.241*t3291*(t10127 + t10144 + t2740*(t10130 + t10131 + t4770 + t4796 - 1.*t10044*t2740*t4811 - 1.*t10058*t2740*t4811) + t3012*(t10153 + t10154 + t10044*t3093*t4811 + t10058*t3093*t4811 + t4862 + t4866)) + 0.241*t10184*t4918)*var2[11]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=var2[9]*(-0.5*(t10224 + t10225 + 3.054*t2331*t5063 + 0.482*t3291*t5103)*var2[10] - 0.5*(t10224 + t10225 + 0.482*t3291*t4918)*var2[11]);
  p_output1[10]=var2[9]*(-0.5*(t10260 + t10273 - 0.0034116234*t410 + 0.0034116234*t53)*var2[10] - 0.5*(t10260 + t10273 + 0.241*t3370*(-0.242889*t2706 + t2706*t2885 - 1.*t2729*t2945 + t2729*t4721 + t2706*t4748) + 0.008474765*t2740*(t10261 + t10264 + t10267 - 1.*t2706*t4721 + t2729*t4748))*var2[11]);
  p_output1[11]=var2[9]*(-0.5*t10343*var2[10] - 0.5*t10343*var2[11]);
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec10_plane.hh"

namespace SymFunction
{

void Ce1_vec10_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
