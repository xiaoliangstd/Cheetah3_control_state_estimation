/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:12:04 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1671;
  double t1069;
  double t1111;
  double t1674;
  double t2082;
  double t2148;
  double t2349;
  double t2357;
  double t2358;
  double t2362;
  double t2369;
  double t2375;
  double t2098;
  double t2226;
  double t2249;
  double t1859;
  double t307;
  double t415;
  double t1882;
  double t1885;
  double t1891;
  double t3847;
  double t3932;
  double t4287;
  double t4332;
  double t4340;
  double t4381;
  double t4382;
  double t4399;
  double t4410;
  double t4411;
  double t4424;
  double t4430;
  double t3887;
  double t3959;
  double t4050;
  double t4475;
  double t4504;
  double t4530;
  double t4570;
  double t4574;
  double t4577;
  double t4585;
  double t4404;
  double t4435;
  double t4440;
  double t3100;
  double t3145;
  double t3146;
  double t3147;
  double t3189;
  double t3222;
  double t4928;
  double t4626;
  double t4633;
  double t4638;
  double t1127;
  double t1703;
  double t1782;
  double t2343;
  double t2418;
  double t2436;
  double t2439;
  double t2462;
  double t2600;
  double t2646;
  double t2654;
  double t2774;
  double t4567;
  double t4595;
  double t4598;
  double t4601;
  double t4660;
  double t4663;
  double t4675;
  double t4693;
  double t4808;
  double t5410;
  double t5419;
  double t5422;
  double t4869;
  double t4890;
  double t4902;
  double t4958;
  double t4960;
  double t4962;
  double t4984;
  double t4989;
  double t4992;
  double t5014;
  double t5028;
  double t5033;
  double t5048;
  double t5049;
  double t5072;
  double t5079;
  double t5107;
  double t5116;
  double t5218;
  double t5226;
  double t5235;
  double t5242;
  double t5247;
  double t5257;
  double t5274;
  double t5283;
  double t5285;
  double t5292;
  double t5299;
  double t5303;
  double t5316;
  double t5321;
  double t5332;
  double t5344;
  double t5352;
  double t5353;
  double t5358;
  double t5366;
  double t5370;
  double t5589;
  double t5592;
  double t5595;
  double t5617;
  double t5622;
  double t5624;
  double t5630;
  double t5634;
  double t5651;
  double t5673;
  double t5682;
  double t5683;
  double t5889;
  double t5895;
  double t5899;
  double t5901;
  double t5903;
  double t5904;
  double t5914;
  double t5915;
  double t5884;
  double t5918;
  double t5933;
  double t5957;
  double t5964;
  double t5967;
  double t6013;
  double t6014;
  double t6015;
  double t6104;
  double t6106;
  double t6110;
  double t6113;
  double t6118;
  double t6124;
  double t6126;
  double t6129;
  double t6130;
  double t6138;
  double t6189;
  double t6235;
  double t6101;
  double t6133;
  double t6134;
  double t6273;
  double t6285;
  double t6288;
  double t6094;
  double t6096;
  double t6097;
  double t6259;
  double t6261;
  double t6266;
  double t6603;
  double t6614;
  double t6615;
  double t6985;
  double t6997;
  double t7001;
  double t7002;
  double t7003;
  double t7004;
  double t7005;
  double t7007;
  double t7008;
  double t7018;
  double t7019;
  double t7021;
  double t7080;
  double t7081;
  double t7082;
  double t6970;
  double t6973;
  double t6974;
  double t6981;
  double t7013;
  double t7016;
  double t7067;
  double t7075;
  double t7077;
  double t7120;
  double t7122;
  double t7123;
  double t7322;
  double t7323;
  double t7324;
  double t7278;
  double t7279;
  double t7280;
  double t7283;
  double t7287;
  double t7296;
  double t7303;
  double t7304;
  double t7305;
  double t7308;
  double t7309;
  double t7311;
  double t7314;
  double t7316;
  double t7317;
  double t5394;
  double t5396;
  double t5401;
  double t6267;
  double t7403;
  double t7404;
  double t7405;
  double t6519;
  double t6689;
  double t6763;
  double t6850;
  double t6950;
  double t7078;
  double t7106;
  double t7501;
  double t7502;
  double t7505;
  double t7135;
  double t7194;
  double t7219;
  double t7245;
  double t6010;
  double t6031;
  double t6036;
  double t7598;
  double t7599;
  double t7601;
  double t6040;
  double t6042;
  double t6043;
  double t7416;
  double t7597;
  double t7603;
  double t7418;
  double t6268;
  double t6296;
  double t6297;
  double t7399;
  double t7410;
  double t6544;
  double t6552;
  double t6589;
  double t7435;
  double t7437;
  double t6693;
  double t6696;
  double t6709;
  double t7441;
  double t7444;
  double t6765;
  double t6772;
  double t6794;
  double t7459;
  double t7463;
  double t6852;
  double t6859;
  double t6869;
  double t7479;
  double t7482;
  double t6951;
  double t6957;
  double t6958;
  double t7500;
  double t7509;
  double t7079;
  double t7084;
  double t7085;
  double t7518;
  double t7520;
  double t7107;
  double t7111;
  double t7112;
  double t7542;
  double t7543;
  double t7136;
  double t7139;
  double t7144;
  double t7552;
  double t7553;
  double t7198;
  double t7203;
  double t7205;
  double t7563;
  double t7567;
  double t7220;
  double t7222;
  double t7223;
  double t7581;
  double t7582;
  double t7246;
  double t7247;
  double t7248;
  double t7764;
  double t7765;
  double t7766;
  double t7769;
  double t7770;
  double t7801;
  double t7802;
  double t7807;
  double t7813;
  double t7815;
  double t7275;
  double t7277;
  double t7282;
  double t7302;
  double t7307;
  double t7313;
  double t7318;
  double t7320;
  double t7321;
  double t7325;
  double t7326;
  double t7327;
  double t7328;
  double t7329;
  double t7333;
  double t7335;
  double t7336;
  double t7337;
  double t7338;
  double t7339;
  double t7340;
  double t7341;
  double t7342;
  double t7343;
  double t7344;
  double t7348;
  double t7350;
  double t7357;
  double t7358;
  double t7360;
  double t7361;
  double t7362;
  double t7363;
  double t7364;
  double t7365;
  double t7366;
  double t7368;
  double t7369;
  double t7370;
  double t7373;
  double t7374;
  double t7376;
  double t7377;
  double t7378;
  double t7380;
  double t7381;
  double t7382;
  double t7383;
  double t7384;
  double t7385;
  double t7386;
  double t7387;
  double t7390;
  double t7391;
  double t7392;
  double t7393;
  double t7394;
  double t7395;
  double t7396;
  double t7397;
  double t7398;
  double t7401;
  double t7849;
  double t7850;
  double t7852;
  double t7415;
  double t7855;
  double t7857;
  double t7860;
  double t7424;
  double t7425;
  double t7426;
  double t7427;
  double t7430;
  double t7431;
  double t7433;
  double t7434;
  double t7442;
  double t7450;
  double t7452;
  double t7455;
  double t7456;
  double t7460;
  double t7473;
  double t7474;
  double t7475;
  double t7480;
  double t7489;
  double t7490;
  double t7492;
  double t7495;
  double t7496;
  double t7498;
  double t7499;
  double t7512;
  double t7514;
  double t7515;
  double t7516;
  double t7902;
  double t7904;
  double t7906;
  double t7898;
  double t7899;
  double t7900;
  double t7522;
  double t7534;
  double t7535;
  double t7536;
  double t7544;
  double t7548;
  double t7549;
  double t7550;
  double t7554;
  double t7559;
  double t7560;
  double t7561;
  double t7562;
  double t7572;
  double t7574;
  double t7575;
  double t7576;
  double t7583;
  double t7595;
  double t7605;
  double t7965;
  double t7966;
  double t7607;
  double t7608;
  double t7867;
  double t7617;
  double t7620;
  double t7624;
  double t7854;
  double t7629;
  double t7630;
  double t7633;
  double t7873;
  double t7638;
  double t7639;
  double t7645;
  double t7879;
  double t7648;
  double t7649;
  double t7654;
  double t7886;
  double t7661;
  double t7664;
  double t7667;
  double t7892;
  double t7669;
  double t7671;
  double t7679;
  double t7901;
  double t7687;
  double t7688;
  double t7694;
  double t7913;
  double t7696;
  double t7697;
  double t7704;
  double t7925;
  double t7707;
  double t7711;
  double t7716;
  double t7931;
  double t7718;
  double t7719;
  double t7725;
  double t7945;
  double t7731;
  double t7732;
  double t7737;
  double t7951;
  double t7739;
  double t7741;
  double t7749;
  double t8092;
  double t8094;
  double t8095;
  double t8099;
  double t8100;
  double t8101;
  double t8153;
  double t8154;
  double t8141;
  double t8142;
  double t8143;
  double t8146;
  double t8147;
  double t8148;
  double t8178;
  double t8181;
  double t8211;
  double t8213;
  double t8215;
  double t8237;
  double t8238;
  double t8240;
  double t8242;
  double t8218;
  double t8219;
  double t8222;
  double t8252;
  double t8253;
  double t8254;
  double t8236;
  double t8261;
  double t8263;
  double t8155;
  double t8156;
  double t8157;
  double t8159;
  double t8160;
  double t8161;
  double t8163;
  double t8164;
  double t8167;
  double t8281;
  double t8282;
  double t8283;
  double t8284;
  double t8286;
  double t8287;
  double t8290;
  double t8291;
  double t8293;
  double t8297;
  double t8298;
  double t8378;
  double t8379;
  double t8380;
  double t8344;
  double t8347;
  double t8348;
  double t8405;
  double t8406;
  double t8411;
  double t8363;
  double t8366;
  double t8367;
  double t5429;
  double t5432;
  double t5434;
  double t8399;
  double t8400;
  double t8401;
  double t5465;
  double t5472;
  double t5474;
  double t5478;
  double t5491;
  double t5503;
  double t8418;
  double t8419;
  double t8420;
  double t8422;
  double t8425;
  double t8427;
  double t8503;
  double t8505;
  double t8507;
  double t8517;
  double t8519;
  double t8521;
  double t8193;
  double t8617;
  double t8618;
  double t8619;
  double t8621;
  double t8622;
  double t8623;
  double t8522;
  double t8533;
  double t8704;
  double t8705;
  double t8706;
  double t8721;
  double t8722;
  double t8723;
  double t8350;
  double t8351;
  double t8552;
  double t8561;
  double t8565;
  double t8577;
  double t8585;
  double t8589;
  double t8626;
  double t8634;
  double t8819;
  double t8820;
  double t8824;
  double t8826;
  double t8828;
  double t8832;
  double t8362;
  double t8368;
  double t8369;
  double t8648;
  double t8653;
  double t8655;
  double t8667;
  double t8674;
  double t8676;
  double t8091;
  double t8103;
  double t8104;
  double t8105;
  double t8113;
  double t8115;
  double t8116;
  double t8117;
  double t8118;
  double t8123;
  double t8124;
  double t8125;
  double t8902;
  double t8903;
  double t8905;
  double t8897;
  double t8898;
  double t8126;
  double t8128;
  double t8204;
  double t8205;
  double t8206;
  double t8208;
  double t8216;
  double t8217;
  double t8228;
  double t8256;
  double t8230;
  double t8231;
  double t8933;
  double t8940;
  double t8942;
  double t8927;
  double t8929;
  double t8930;
  double t8265;
  double t8267;
  double t8275;
  double t8277;
  double t8280;
  double t8932;
  double t8951;
  double t8326;
  double t8328;
  double t8960;
  double t8961;
  double t8964;
  double t8965;
  double t8967;
  double t8968;
  double t8971;
  double t8357;
  double t8359;
  double t8361;
  double t8371;
  double t8412;
  double t8413;
  double t8414;
  double t8415;
  double t8416;
  double t8417;
  double t8421;
  double t8428;
  double t8431;
  double t8432;
  double t8457;
  double t8458;
  double t8459;
  double t8462;
  double t8464;
  double t8465;
  double t8467;
  double t8597;
  double t8598;
  double t8599;
  double t8601;
  double t8604;
  double t8605;
  double t8606;
  double t8611;
  double t8612;
  double t8613;
  double t8615;
  double t8616;
  double t8996;
  double t8997;
  double t9000;
  double t9008;
  double t9010;
  double t9011;
  double t8645;
  double t8651;
  double t8654;
  double t8663;
  double t8664;
  double t8675;
  double t8795;
  double t8796;
  double t8800;
  double t8802;
  double t8803;
  double t8804;
  double t8807;
  double t8809;
  double t8810;
  double t8816;
  double t8817;
  double t8818;
  double t9012;
  double t9026;
  double t9114;
  double t9118;
  double t9119;
  double t9121;
  double t9127;
  double t9134;
  double t8844;
  double t9047;
  double t9062;
  double t8855;
  double t8856;
  double t8866;
  double t8867;
  double t9076;
  double t9089;
  double t8880;
  double t8882;
  t1671 = Cos(var1[9]);
  t1069 = Cos(var1[5]);
  t1111 = Sin(var1[9]);
  t1674 = Sin(var1[5]);
  t2082 = Cos(var1[10]);
  t2148 = Sin(var1[10]);
  t2349 = -1.*t2082;
  t2357 = 1. + t2349;
  t2358 = 0.242889*t2357;
  t2362 = 0.202889*t2082;
  t2369 = -0.04*t2148;
  t2375 = t2358 + t2362 + t2369;
  t2098 = -0.04*t2082;
  t2226 = 0.04*t2148;
  t2249 = t2098 + t2226;
  t1859 = Sin(var1[3]);
  t307 = Cos(var1[3]);
  t415 = Sin(var1[4]);
  t1882 = t1671*t1069;
  t1885 = -1.*t1111*t1674;
  t1891 = t1882 + t1885;
  t3847 = Cos(var1[11]);
  t3932 = Sin(var1[11]);
  t4287 = -1.*t3847;
  t4332 = 1. + t4287;
  t4340 = 0.100689*t4332;
  t4381 = 0.080689*t3847;
  t4382 = -0.16*t3932;
  t4399 = t4340 + t4381 + t4382;
  t4410 = -0.20833*t4332;
  t4411 = -0.36833*t3847;
  t4424 = 0.02*t3932;
  t4430 = t4410 + t4411 + t4424;
  t3887 = t2082*t3847;
  t3959 = -1.*t2148*t3932;
  t4050 = t3887 + t3959;
  t4475 = t3847*t2148;
  t4504 = t2082*t3932;
  t4530 = t4475 + t4504;
  t4570 = 0.242889*t2148;
  t4574 = -1.*t2148*t4399;
  t4577 = t2082*t4430;
  t4585 = t4570 + t4574 + t4577;
  t4404 = t2082*t4399;
  t4435 = t2148*t4430;
  t4440 = t2358 + t4404 + t4435;
  t3100 = t1069*t1111;
  t3145 = t1671*t1674;
  t3146 = t3100 + t3145;
  t3147 = -1.*t1859*t3146;
  t3189 = t307*t415*t1891;
  t3222 = t3147 + t3189;
  t4928 = Cos(var1[4]);
  t4626 = -1.*t3847*t2148;
  t4633 = -1.*t2082*t3932;
  t4638 = t4626 + t4633;
  t1127 = -1.*t1069*t1111;
  t1703 = -1.*t1671*t1674;
  t1782 = t1127 + t1703;
  t2343 = -1.*t2082*t2249;
  t2418 = -1.*t2375*t2148;
  t2436 = t2343 + t2418;
  t2439 = t2082*t2436;
  t2462 = t2082*t2375;
  t2600 = -1.*t2249*t2148;
  t2646 = t2462 + t2600;
  t2654 = t2148*t2646;
  t2774 = t2439 + t2654;
  t4567 = -1.*t4440*t4530;
  t4595 = -1.*t4585*t4050;
  t4598 = t4567 + t4595;
  t4601 = t4050*t4598;
  t4660 = t4585*t4638;
  t4663 = t4440*t4050;
  t4675 = t4660 + t4663;
  t4693 = t4530*t4675;
  t4808 = t4601 + t4693;
  t5410 = t307*t3146;
  t5419 = t1859*t415*t1891;
  t5422 = t5410 + t5419;
  t4869 = t1671*t2082*t1069;
  t4890 = -1.*t2082*t1111*t1674;
  t4902 = t4869 + t4890;
  t4958 = t4928*t2148;
  t4960 = -1.*t2082*t1069*t1111;
  t4962 = -1.*t1671*t2082*t1674;
  t4984 = t4960 + t4962;
  t4989 = -1.*t415*t4984;
  t4992 = t4958 + t4989;
  t5014 = -1.*t1671*t1069*t2148;
  t5028 = t1111*t2148*t1674;
  t5033 = t5014 + t5028;
  t5048 = t2082*t4928;
  t5049 = t1069*t1111*t2148;
  t5072 = t1671*t2148*t1674;
  t5079 = t5049 + t5072;
  t5107 = -1.*t415*t5079;
  t5116 = t5048 + t5107;
  t5218 = -0.081715*t4638;
  t5226 = -0.11688*t4530;
  t5235 = t5218 + t5226;
  t5242 = t1671*t1069*t4638;
  t5247 = -1.*t1111*t4638*t1674;
  t5257 = t5242 + t5247;
  t5274 = t4928*t4050;
  t5283 = -1.*t1069*t1111*t4638;
  t5285 = -1.*t1671*t4638*t1674;
  t5292 = t5283 + t5285;
  t5299 = -1.*t415*t5292;
  t5303 = t5274 + t5299;
  t5316 = t1671*t1069*t4050;
  t5321 = -1.*t1111*t4050*t1674;
  t5332 = t5316 + t5321;
  t5344 = t4928*t4530;
  t5352 = -1.*t1069*t1111*t4050;
  t5353 = -1.*t1671*t4050*t1674;
  t5358 = t5352 + t5353;
  t5366 = -1.*t415*t5358;
  t5370 = t5344 + t5366;
  t5589 = -1.*t2148*t415;
  t5592 = -1.*t4928*t4984;
  t5595 = t5589 + t5592;
  t5617 = -1.*t2082*t415;
  t5622 = -1.*t4928*t5079;
  t5624 = t5617 + t5622;
  t5630 = -1.*t4050*t415;
  t5634 = -1.*t4928*t5292;
  t5651 = t5630 + t5634;
  t5673 = -1.*t4530*t415;
  t5682 = -1.*t4928*t5358;
  t5683 = t5673 + t5682;
  t5889 = -1.*t1671;
  t5895 = 1. + t5889;
  t5899 = 0.081715*t5895;
  t5901 = 0.061715*t1671;
  t5903 = t5899 + t5901;
  t5904 = t5903*t1069;
  t5914 = 0.02*t1111*t1674;
  t5915 = t5904 + t5914;
  t5884 = -0.242889*t415;
  t5918 = -1.*t4928*t5915;
  t5933 = t5884 + t5918;
  t5957 = 0.242889*t415;
  t5964 = t4928*t5915;
  t5967 = t5957 + t5964;
  t6013 = 0.242889*t4928;
  t6014 = -1.*t415*t5915;
  t6015 = t6013 + t6014;
  t6104 = 0.13757*t1671;
  t6106 = -1.*t1111*t2249;
  t6110 = t5899 + t6104 + t6106;
  t6113 = t1069*t6110;
  t6118 = 0.055855*t1111;
  t6124 = t1671*t2249;
  t6126 = t6118 + t6124;
  t6129 = -1.*t6126*t1674;
  t6130 = t6113 + t6129;
  t6138 = t2375*t415;
  t6189 = t4928*t6130;
  t6235 = t6138 + t6189;
  t6101 = -1.*t2375*t415;
  t6133 = -1.*t4928*t6130;
  t6134 = t6101 + t6133;
  t6273 = t4928*t2375;
  t6285 = -1.*t415*t6130;
  t6288 = t6273 + t6285;
  t6094 = t2148*t415;
  t6096 = t4928*t4984;
  t6097 = t6094 + t6096;
  t6259 = t1069*t6126;
  t6261 = t6110*t1674;
  t6266 = t6259 + t6261;
  t6603 = t2082*t415;
  t6614 = t4928*t5079;
  t6615 = t6603 + t6614;
  t6985 = 0.11688*t1671;
  t6997 = -1.*t1111*t4585;
  t7001 = t5899 + t6985 + t6997;
  t7002 = t1069*t7001;
  t7003 = 0.035165*t1111;
  t7004 = t1671*t4585;
  t7005 = t7003 + t7004;
  t7007 = -1.*t7005*t1674;
  t7008 = t7002 + t7007;
  t7018 = t4440*t415;
  t7019 = t4928*t7008;
  t7021 = t7018 + t7019;
  t7080 = t4928*t4440;
  t7081 = -1.*t415*t7008;
  t7082 = t7080 + t7081;
  t6970 = t4050*t415;
  t6973 = t4928*t5292;
  t6974 = t6970 + t6973;
  t6981 = -1.*t4440*t415;
  t7013 = -1.*t4928*t7008;
  t7016 = t6981 + t7013;
  t7067 = t1069*t7005;
  t7075 = t7001*t1674;
  t7077 = t7067 + t7075;
  t7120 = t4530*t415;
  t7122 = t4928*t5358;
  t7123 = t7120 + t7122;
  t7322 = -1.*t307*t415*t1782;
  t7323 = t1859*t1891;
  t7324 = t7322 + t7323;
  t7278 = -1.*t1671*t1069;
  t7279 = t1111*t1674;
  t7280 = t7278 + t7279;
  t7283 = -1.*t1671*t2082*t1069;
  t7287 = t2082*t1111*t1674;
  t7296 = t7283 + t7287;
  t7303 = t1671*t1069*t2148;
  t7304 = -1.*t1111*t2148*t1674;
  t7305 = t7303 + t7304;
  t7308 = -1.*t1671*t1069*t4638;
  t7309 = t1111*t4638*t1674;
  t7311 = t7308 + t7309;
  t7314 = -1.*t1671*t1069*t4050;
  t7316 = t1111*t4050*t1674;
  t7317 = t7314 + t7316;
  t5394 = t1859*t415*t1782;
  t5396 = t307*t1891;
  t5401 = t5394 + t5396;
  t6267 = -1.*t3146*t6266;
  t7403 = -1.*t1069*t6126;
  t7404 = -1.*t6110*t1674;
  t7405 = t7403 + t7404;
  t6519 = t4902*t6266;
  t6689 = t3146*t6266;
  t6763 = -1.*t6266*t5033;
  t6850 = -1.*t4902*t6266;
  t6950 = t6266*t5033;
  t7078 = t3146*t7077;
  t7106 = -1.*t7077*t5257;
  t7501 = -1.*t1069*t7005;
  t7502 = -1.*t7001*t1674;
  t7505 = t7501 + t7502;
  t7135 = t7077*t5257;
  t7194 = -1.*t7077*t5332;
  t7219 = -1.*t3146*t7077;
  t7245 = t7077*t5332;
  t6010 = -1.*t415*t5967;
  t6031 = -1.*t4928*t6015;
  t6036 = t6010 + t6031;
  t7598 = 0.02*t1069*t1111;
  t7599 = -1.*t5903*t1674;
  t7601 = t7598 + t7599;
  t6040 = -0.02*t1069*t1111;
  t6042 = t5903*t1674;
  t6043 = t6040 + t6042;
  t7416 = -1.*t3146*t6130;
  t7597 = Power(t4928,2);
  t7603 = Power(t415,2);
  t7418 = -1.*t1891*t6266;
  t6268 = -1.*t4928*t1891*t6235;
  t6296 = t415*t1891*t6288;
  t6297 = t6267 + t6268 + t6296;
  t7399 = t4902*t6130;
  t7410 = t4984*t6266;
  t6544 = t6097*t6235;
  t6552 = t4992*t6288;
  t6589 = t6519 + t6544 + t6552;
  t7435 = t3146*t6130;
  t7437 = t1891*t6266;
  t6693 = t4928*t1891*t6235;
  t6696 = -1.*t415*t1891*t6288;
  t6709 = t6689 + t6693 + t6696;
  t7441 = -1.*t6266*t5079;
  t7444 = -1.*t6130*t5033;
  t6765 = -1.*t6235*t6615;
  t6772 = -1.*t6288*t5116;
  t6794 = t6763 + t6765 + t6772;
  t7459 = -1.*t4902*t6130;
  t7463 = -1.*t4984*t6266;
  t6852 = -1.*t6097*t6235;
  t6859 = -1.*t4992*t6288;
  t6869 = t6850 + t6852 + t6859;
  t7479 = t6266*t5079;
  t7482 = t6130*t5033;
  t6951 = t6235*t6615;
  t6957 = t6288*t5116;
  t6958 = t6950 + t6951 + t6957;
  t7500 = t3146*t7008;
  t7509 = t1891*t7077;
  t7079 = t4928*t1891*t7021;
  t7084 = -1.*t415*t1891*t7082;
  t7085 = t7078 + t7079 + t7084;
  t7518 = -1.*t7077*t5292;
  t7520 = -1.*t7008*t5257;
  t7107 = -1.*t7021*t6974;
  t7111 = -1.*t7082*t5303;
  t7112 = t7106 + t7107 + t7111;
  t7542 = t7077*t5292;
  t7543 = t7008*t5257;
  t7136 = t7021*t6974;
  t7139 = t7082*t5303;
  t7144 = t7135 + t7136 + t7139;
  t7552 = -1.*t7077*t5358;
  t7553 = -1.*t7008*t5332;
  t7198 = -1.*t7021*t7123;
  t7203 = -1.*t7082*t5370;
  t7205 = t7194 + t7198 + t7203;
  t7563 = -1.*t3146*t7008;
  t7567 = -1.*t1891*t7077;
  t7220 = -1.*t4928*t1891*t7021;
  t7222 = t415*t1891*t7082;
  t7223 = t7219 + t7220 + t7222;
  t7581 = t7077*t5358;
  t7582 = t7008*t5332;
  t7246 = t7021*t7123;
  t7247 = t7082*t5370;
  t7248 = t7245 + t7246 + t7247;
  t7764 = -0.055855*t1111;
  t7765 = -1.*t1671*t2249;
  t7766 = t7764 + t7765;
  t7769 = 0.055855*t1671;
  t7770 = t7769 + t6106;
  t7801 = -0.035165*t1111;
  t7802 = -1.*t1671*t4585;
  t7807 = t7801 + t7802;
  t7813 = 0.035165*t1671;
  t7815 = t7813 + t6997;
  t7275 = -1.527*t4928*t2774*t1782;
  t7277 = -0.241*t4928*t4808*t1782;
  t7282 = 0.0219*t4928*t7280;
  t7302 = -0.085290585*t2082*t4928*t7296;
  t7307 = 0.085290585*t4928*t2148*t7305;
  t7313 = -0.241*t4928*t5235*t7311;
  t7318 = -0.008474765*t4928*t4050*t7317;
  t7320 = t7275 + t7277 + t7282 + t7302 + t7307 + t7313 + t7318;
  t7321 = -0.5*var2[0]*t7320;
  t7325 = -1.527*t2774*t7324;
  t7326 = -0.241*t4808*t7324;
  t7327 = t1859*t1782;
  t7328 = -1.*t307*t415*t7280;
  t7329 = t7327 + t7328;
  t7333 = 0.0219*t7329;
  t7335 = t1859*t4984;
  t7336 = -1.*t307*t415*t7296;
  t7337 = t7335 + t7336;
  t7338 = -0.085290585*t2082*t7337;
  t7339 = t1859*t5079;
  t7340 = -1.*t307*t415*t7305;
  t7341 = t7339 + t7340;
  t7342 = 0.085290585*t2148*t7341;
  t7343 = t1859*t5292;
  t7344 = -1.*t307*t415*t7311;
  t7348 = t7343 + t7344;
  t7350 = -0.241*t5235*t7348;
  t7357 = t1859*t5358;
  t7358 = -1.*t307*t415*t7317;
  t7360 = t7357 + t7358;
  t7361 = -0.008474765*t4050*t7360;
  t7362 = t7325 + t7326 + t7333 + t7338 + t7342 + t7350 + t7361;
  t7363 = -0.5*var2[2]*t7362;
  t7364 = -1.527*t2774*t5401;
  t7365 = -0.241*t4808*t5401;
  t7366 = t307*t1782;
  t7368 = t1859*t415*t7280;
  t7369 = t7366 + t7368;
  t7370 = 0.0219*t7369;
  t7373 = t307*t4984;
  t7374 = t1859*t415*t7296;
  t7376 = t7373 + t7374;
  t7377 = -0.085290585*t2082*t7376;
  t7378 = t307*t5079;
  t7380 = t1859*t415*t7305;
  t7381 = t7378 + t7380;
  t7382 = 0.085290585*t2148*t7381;
  t7383 = t307*t5292;
  t7384 = t1859*t415*t7311;
  t7385 = t7383 + t7384;
  t7386 = -0.241*t5235*t7385;
  t7387 = t307*t5358;
  t7390 = t1859*t415*t7317;
  t7391 = t7387 + t7390;
  t7392 = -0.008474765*t4050*t7391;
  t7393 = t7364 + t7365 + t7370 + t7377 + t7382 + t7386 + t7392;
  t7394 = -0.5*var2[1]*t7393;
  t7395 = -0.0053192691*t1891;
  t7396 = -1.*t1891*t6130;
  t7397 = t7396 + t6267;
  t7398 = t4984*t7397;
  t7401 = t7296*t6130;
  t7849 = t1069*t7770;
  t7850 = t7766*t1674;
  t7852 = t7849 + t7850;
  t7415 = -1.*t1782*t6130;
  t7855 = t1069*t7766;
  t7857 = -1.*t7770*t1674;
  t7860 = t7855 + t7857;
  t7424 = t2375*t2148;
  t7425 = t4984*t6130;
  t7426 = t7424 + t7425 + t6519;
  t7427 = t1891*t7426;
  t7430 = t1891*t6130;
  t7431 = t7430 + t6689;
  t7433 = t5079*t7431;
  t7434 = t1782*t6130;
  t7442 = -1.*t6130*t7305;
  t7450 = -1.*t2082*t2375;
  t7452 = -1.*t6130*t5079;
  t7455 = t7450 + t7452 + t6763;
  t7456 = t1891*t7455;
  t7460 = -1.*t7296*t6130;
  t7473 = -1.*t4984*t6130;
  t7474 = t2418 + t7473 + t6850;
  t7475 = t5079*t7474;
  t7480 = t6130*t7305;
  t7489 = t6130*t5079;
  t7490 = t2462 + t7489 + t6950;
  t7492 = t4984*t7490;
  t7495 = t1891*t7008;
  t7496 = t7495 + t7078;
  t7498 = t5292*t7496;
  t7499 = t1782*t7008;
  t7512 = -1.*t4440*t4050;
  t7514 = -1.*t7008*t5292;
  t7515 = t7512 + t7514 + t7106;
  t7516 = t1891*t7515;
  t7902 = t1069*t7807;
  t7904 = -1.*t7815*t1674;
  t7906 = t7902 + t7904;
  t7898 = t1069*t7815;
  t7899 = t7807*t1674;
  t7900 = t7898 + t7899;
  t7522 = -1.*t7008*t7311;
  t7534 = t7008*t5292;
  t7535 = t4663 + t7534 + t7135;
  t7536 = t5358*t7535;
  t7544 = t7008*t7311;
  t7548 = -1.*t7008*t5358;
  t7549 = t4567 + t7548 + t7194;
  t7550 = t5292*t7549;
  t7554 = -1.*t7008*t7317;
  t7559 = -1.*t1891*t7008;
  t7560 = t7559 + t7219;
  t7561 = t5358*t7560;
  t7562 = -1.*t1782*t7008;
  t7572 = t4440*t4530;
  t7574 = t7008*t5358;
  t7575 = t7572 + t7574 + t7245;
  t7576 = t1891*t7575;
  t7583 = t7008*t7317;
  t7595 = t4928*t1782*t6036;
  t7605 = t6043*t1891;
  t7965 = 0.02*t1671*t1674;
  t7966 = t7598 + t7965;
  t7607 = t4928*t1782*t5967;
  t7608 = -1.*t415*t1782*t6015;
  t7867 = -1.*t3146*t7852;
  t7617 = -1.*t4928*t1782*t6235;
  t7620 = t415*t1782*t6288;
  t7624 = t4928*t7296*t6297;
  t7854 = t4902*t7852;
  t7629 = t4928*t7296*t6235;
  t7630 = -1.*t415*t7296*t6288;
  t7633 = t4928*t1782*t6589;
  t7873 = t3146*t7852;
  t7638 = t4928*t1782*t6235;
  t7639 = -1.*t415*t1782*t6288;
  t7645 = t4928*t7305*t6709;
  t7879 = -1.*t7852*t5033;
  t7648 = -1.*t4928*t7305*t6235;
  t7649 = t415*t7305*t6288;
  t7654 = t4928*t1782*t6794;
  t7886 = -1.*t4902*t7852;
  t7661 = -1.*t4928*t7296*t6235;
  t7664 = t415*t7296*t6288;
  t7667 = t4928*t7305*t6869;
  t7892 = t7852*t5033;
  t7669 = t4928*t7305*t6235;
  t7671 = -1.*t415*t7305*t6288;
  t7679 = t4928*t7296*t6958;
  t7901 = t3146*t7900;
  t7687 = t4928*t1782*t7021;
  t7688 = -1.*t415*t1782*t7082;
  t7694 = t4928*t7311*t7085;
  t7913 = -1.*t7900*t5257;
  t7696 = -1.*t4928*t7311*t7021;
  t7697 = t415*t7311*t7082;
  t7704 = t4928*t1782*t7112;
  t7925 = t7900*t5257;
  t7707 = t4928*t7311*t7021;
  t7711 = -1.*t415*t7311*t7082;
  t7716 = t4928*t7317*t7144;
  t7931 = -1.*t7900*t5332;
  t7718 = -1.*t4928*t7317*t7021;
  t7719 = t415*t7317*t7082;
  t7725 = t4928*t7311*t7205;
  t7945 = -1.*t3146*t7900;
  t7731 = -1.*t4928*t1782*t7021;
  t7732 = t415*t1782*t7082;
  t7737 = t4928*t7317*t7223;
  t7951 = t7900*t5332;
  t7739 = t4928*t7317*t7021;
  t7741 = -1.*t415*t7317*t7082;
  t7749 = t4928*t1782*t7248;
  t8092 = -0.11688*t4050;
  t8094 = -1.*t2082*t3847;
  t8095 = t2148*t3932;
  t8099 = t8094 + t8095;
  t8100 = -0.081715*t8099;
  t8101 = t8092 + t8100;
  t8153 = 0.04*t2082;
  t8154 = t8153 + t2226;
  t8141 = -1.*t1671*t6126*t2148;
  t8142 = t1111*t6110*t2148;
  t8143 = t2462 + t8141 + t8142;
  t8146 = -1.*t1671*t2082*t6126;
  t8147 = t2082*t1111*t6110;
  t8148 = t8146 + t8147 + t2418;
  t8178 = Power(t1671,2);
  t8181 = Power(t1111,2);
  t8211 = -1.*t1111*t7005;
  t8213 = -1.*t1671*t7001;
  t8215 = t8211 + t8213;
  t8237 = 0.242889*t2082;
  t8238 = -1.*t2082*t4399;
  t8240 = -1.*t2148*t4430;
  t8242 = t8237 + t8238 + t8240;
  t8218 = -1.*t1671*t7005*t4050;
  t8219 = t1111*t7001*t4050;
  t8222 = t4567 + t8218 + t8219;
  t8252 = t1671*t7005*t4638;
  t8253 = -1.*t1111*t7001*t4638;
  t8254 = t8252 + t8253 + t4663;
  t8236 = -1.*t4585*t4530;
  t8261 = t4440*t4638;
  t8263 = t4585*t4050;
  t8155 = -1.*t2082*t8154;
  t8156 = t7450 + t8155;
  t8157 = t2082*t8156;
  t8159 = -1.*t2148*t2436;
  t8160 = t2082*t2646;
  t8161 = -1.*t8154*t2148;
  t8163 = t2418 + t8161;
  t8164 = t2148*t8163;
  t8167 = t8157 + t8159 + t8160 + t8164;
  t8281 = t4638*t4598;
  t8282 = -1.*t4585*t4638;
  t8283 = -1.*t8242*t4050;
  t8284 = t8282 + t8236 + t8283 + t7512;
  t8286 = t4050*t8284;
  t8287 = t4050*t4675;
  t8290 = t8242*t4638;
  t8291 = t4585*t8099;
  t8293 = t8290 + t8261 + t8263 + t8291;
  t8297 = t4530*t8293;
  t8298 = t8281 + t8286 + t8287 + t8297;
  t8378 = t1859*t3146;
  t8379 = -1.*t307*t415*t1891;
  t8380 = t8378 + t8379;
  t8344 = t2082*t1069*t1111;
  t8347 = t1671*t2082*t1674;
  t8348 = t8344 + t8347;
  t8405 = t1859*t5257;
  t8406 = t307*t5303;
  t8411 = t8405 + t8406;
  t8363 = -1.*t1069*t1111*t8099;
  t8366 = -1.*t1671*t8099*t1674;
  t8367 = t8363 + t8366;
  t5429 = t307*t4902;
  t5432 = -1.*t1859*t4992;
  t5434 = t5429 + t5432;
  t8399 = -1.*t4928*t2148;
  t8400 = -1.*t415*t8348;
  t8401 = t8399 + t8400;
  t5465 = t307*t5257;
  t5472 = -1.*t1859*t5303;
  t5474 = t5465 + t5472;
  t5478 = t307*t5332;
  t5491 = -1.*t1859*t5370;
  t5503 = t5478 + t5491;
  t8418 = t1671*t1069*t8099;
  t8419 = -1.*t1111*t8099*t1674;
  t8420 = t8418 + t8419;
  t8422 = t4928*t4638;
  t8425 = -1.*t415*t8367;
  t8427 = t8422 + t8425;
  t8503 = -1.*t1069*t1111*t8154;
  t8505 = -1.*t1671*t8154*t1674;
  t8507 = t8503 + t8505;
  t8517 = t1671*t1069*t8154;
  t8519 = -1.*t1111*t8154*t1674;
  t8521 = t8517 + t8519;
  t8193 = t2082*t2249;
  t8617 = -1.*t1069*t1111*t8242;
  t8618 = -1.*t1671*t8242*t1674;
  t8619 = t8617 + t8618;
  t8621 = t1671*t1069*t8242;
  t8622 = -1.*t1111*t8242*t1674;
  t8623 = t8621 + t8622;
  t8522 = -1.*t3146*t8521;
  t8533 = t4902*t8521;
  t8704 = t2249*t415;
  t8705 = t4928*t8507;
  t8706 = t8704 + t8705;
  t8721 = t4928*t2249;
  t8722 = -1.*t415*t8507;
  t8723 = t8721 + t8722;
  t8350 = t4928*t8348;
  t8351 = t5589 + t8350;
  t8552 = t3146*t8521;
  t8561 = -1.*t7296*t6266;
  t8565 = -1.*t8521*t5033;
  t8577 = -1.*t4902*t8521;
  t8585 = t7296*t6266;
  t8589 = t8521*t5033;
  t8626 = -1.*t3146*t8623;
  t8634 = t8623*t5332;
  t8819 = t4585*t415;
  t8820 = t4928*t8619;
  t8824 = t8819 + t8820;
  t8826 = t4928*t4585;
  t8828 = -1.*t415*t8619;
  t8832 = t8826 + t8828;
  t8362 = t4638*t415;
  t8368 = t4928*t8367;
  t8369 = t8362 + t8368;
  t8648 = t3146*t8623;
  t8653 = -1.*t8623*t5257;
  t8655 = -1.*t7077*t8420;
  t8667 = -1.*t8623*t5332;
  t8674 = t8623*t5257;
  t8676 = t7077*t8420;
  t8091 = -0.0001694953*t4638;
  t8103 = 0.03856*t8101;
  t8104 = t8091 + t8103;
  t8105 = -0.5*var2[11]*t8104;
  t8113 = 0.242889*t3847;
  t8115 = -1.*t3847*t4399;
  t8116 = t4430*t3932;
  t8117 = t8113 + t8115 + t8116;
  t8118 = -0.008474765*t4638*t8117;
  t8123 = t3847*t4430;
  t8124 = -0.242889*t3932;
  t8125 = t4399*t3932;
  t8902 = 0.02*t3847;
  t8903 = 0.16*t3932;
  t8905 = t8902 + t8903;
  t8897 = -0.16*t3847;
  t8898 = t8897 + t4424;
  t8126 = t8123 + t8124 + t8125;
  t8128 = -0.241*t8126*t8101;
  t8204 = t1111*t7005;
  t8205 = t1671*t7001;
  t8206 = t8204 + t8205;
  t8208 = -0.01694953*t8206*t4638*t4050;
  t8216 = -0.241*t8215*t4050*t5235;
  t8217 = -0.241*t8215*t4530*t8101;
  t8228 = t4638*t8222;
  t8256 = t4050*t8254;
  t8230 = -1.*t1671*t7005*t4638;
  t8231 = t1111*t7001*t4638;
  t8933 = -1.*t2148*t8898;
  t8940 = t2082*t8905;
  t8942 = t8933 + t8940;
  t8927 = t2082*t8898;
  t8929 = t2148*t8905;
  t8930 = t8927 + t8929;
  t8265 = t1671*t7005*t8099;
  t8267 = -1.*t1111*t7001*t8099;
  t8275 = t4050*t8222;
  t8277 = t4530*t8254;
  t8280 = t8275 + t8277;
  t8932 = -1.*t8930*t4530;
  t8951 = t8930*t4050;
  t8326 = -0.00059603022245*t4638*t4050;
  t8328 = -0.482*t5235*t8101;
  t8960 = -1.*t8942*t4050;
  t8961 = t8282 + t8932 + t7512 + t8960;
  t8964 = t4050*t8961;
  t8965 = t8942*t4638;
  t8967 = t8261 + t8965 + t8951 + t8291;
  t8968 = t4530*t8967;
  t8971 = t8281 + t8287 + t8964 + t8968;
  t8357 = -0.008474765*t4050*t6974;
  t8359 = -0.241*t8101*t6974;
  t8361 = -0.008474765*t4638*t7123;
  t8371 = -0.241*t5235*t8369;
  t8412 = -0.008474765*t4050*t8411;
  t8413 = -0.241*t8101*t8411;
  t8414 = t1859*t5332;
  t8415 = t307*t5370;
  t8416 = t8414 + t8415;
  t8417 = -0.008474765*t4638*t8416;
  t8421 = t1859*t8420;
  t8428 = t307*t8427;
  t8431 = t8421 + t8428;
  t8432 = -0.241*t5235*t8431;
  t8457 = -0.008474765*t4050*t5474;
  t8458 = -0.241*t8101*t5474;
  t8459 = -0.008474765*t4638*t5503;
  t8462 = t307*t8420;
  t8464 = -1.*t1859*t8427;
  t8465 = t8462 + t8464;
  t8467 = -0.241*t5235*t8465;
  t8597 = t5257*t7496;
  t8598 = t3146*t7515;
  t8599 = t8597 + t8598;
  t8601 = -0.008474765*t4638*t8599;
  t8604 = t5332*t7535;
  t8605 = t5257*t7549;
  t8606 = t8604 + t8605;
  t8611 = t5332*t7560;
  t8612 = t3146*t7575;
  t8613 = t8611 + t8612;
  t8615 = -0.241*t8101*t8613;
  t8616 = t5257*t7560;
  t8996 = -1.*t1069*t1111*t8942;
  t8997 = -1.*t1671*t8942*t1674;
  t9000 = t8996 + t8997;
  t9008 = t1671*t1069*t8942;
  t9010 = -1.*t1111*t8942*t1674;
  t9011 = t9008 + t9010;
  t8645 = t8420*t7496;
  t8651 = -1.*t4440*t4638;
  t8654 = -1.*t7008*t8367;
  t8663 = t5257*t7535;
  t8664 = t8420*t7549;
  t8675 = t7008*t8367;
  t8795 = t6974*t7085;
  t8796 = t4928*t1891*t7112;
  t8800 = t8795 + t8796;
  t8802 = -0.008474765*t4638*t8800;
  t8803 = t7123*t7144;
  t8804 = t6974*t7205;
  t8807 = t8803 + t8804;
  t8809 = t7123*t7223;
  t8810 = t4928*t1891*t7248;
  t8816 = t8809 + t8810;
  t8817 = -0.241*t8101*t8816;
  t8818 = t6974*t7223;
  t9012 = -1.*t3146*t9011;
  t9026 = t9011*t5332;
  t9114 = t8930*t415;
  t9118 = t4928*t9000;
  t9119 = t9114 + t9118;
  t9121 = t4928*t8930;
  t9127 = -1.*t415*t9000;
  t9134 = t9121 + t9127;
  t8844 = t8369*t7085;
  t9047 = t3146*t9011;
  t9062 = -1.*t9011*t5257;
  t8855 = -1.*t7021*t8369;
  t8856 = -1.*t7082*t8427;
  t8866 = t6974*t7144;
  t8867 = t8369*t7205;
  t9076 = -1.*t9011*t5332;
  t9089 = t9011*t5257;
  t8880 = t7021*t8369;
  t8882 = t7082*t8427;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-1.527*t2774*t3222 + 0.0219*(-1.*t1859*t1891 + t1782*t307*t415) - 0.241*t3222*t4808 - 0.085290585*t2082*(-1.*t1859*t4902 - 1.*t307*t4992) + 0.085290585*t2148*(-1.*t1859*t5033 - 1.*t307*t5116) - 0.241*t5235*(-1.*t1859*t5257 - 1.*t307*t5303) - 0.008474765*t4050*(-1.*t1859*t5332 - 1.*t307*t5370))*var2[1] - 0.5*(0.085290585*t2148*(t307*t5033 - 1.*t1859*t5116) + 0.0219*t5401 - 1.527*t2774*t5422 - 0.241*t4808*t5422 - 0.085290585*t2082*t5434 - 0.241*t5235*t5474 - 0.008474765*t4050*t5503)*var2[2])*var2[9];
  p_output1[4]=(-0.5*(-0.0219*t1782*t415 + 1.527*t1891*t2774*t415 + 0.241*t1891*t415*t4808 - 0.085290585*t2082*t4992 + 0.085290585*t2148*t5116 - 0.241*t5235*t5303 - 0.008474765*t4050*t5370)*var2[0] - 0.5*(0.0219*t1782*t1859*t4928 - 1.527*t1859*t1891*t2774*t4928 - 0.241*t1859*t1891*t4808*t4928 + 0.085290585*t1859*t2082*t5595 - 0.085290585*t1859*t2148*t5624 + 0.241*t1859*t5235*t5651 + 0.008474765*t1859*t4050*t5683)*var2[1] - 0.5*(-0.0219*t1782*t307*t4928 + 1.527*t1891*t2774*t307*t4928 + 0.241*t1891*t307*t4808*t4928 - 0.085290585*t2082*t307*t5595 + 0.085290585*t2148*t307*t5624 - 0.241*t307*t5235*t5651 - 0.008474765*t307*t4050*t5683)*var2[2] - 0.5*(0.0219*(t415*(-1.*t1891*t415*t5933 - 1.*t1891*t415*t5967) + t1891*t4928*(-1.*t4928*t5933 - 1.*t4928*t5967) - 1.*t1891*t415*t6036 + t4928*(t1891*t4928*t5967 - 1.*t1891*t415*t6015 + t3146*t6043)) + 0.085290585*t2148*(t6097*(t1891*t415*t6134 + t1891*t415*t6235) + t1891*t4928*(t4992*t6134 + t4992*t6235 + t5595*t6288 + t6097*t6288) + t4992*t6297 - 1.*t1891*t415*t6589) - 0.085290585*t2082*((-1.*t1891*t415*t6134 - 1.*t1891*t415*t6235)*t6615 + t1891*t4928*(-1.*t5116*t6134 - 1.*t5116*t6235 - 1.*t5624*t6288 - 1.*t6288*t6615) + t5116*t6709 - 1.*t1891*t415*t6794) - 1.527*t2774*((-1.*t4992*t6134 - 1.*t4992*t6235 - 1.*t5595*t6288 - 1.*t6097*t6288)*t6615 + t6097*(t5116*t6134 + t5116*t6235 + t5624*t6288 + t6288*t6615) + t5116*t6869 + t4992*t6958) - 0.008474765*t4050*(t6974*(-1.*t1891*t415*t7016 - 1.*t1891*t415*t7021) + t1891*t4928*(-1.*t5303*t7016 - 1.*t5303*t7021 - 1.*t5651*t7082 - 1.*t6974*t7082) + t5303*t7085 - 1.*t1891*t415*t7112) - 0.241*t4808*((t5303*t7016 + t5303*t7021 + t5651*t7082 + t6974*t7082)*t7123 + t6974*(-1.*t5370*t7016 - 1.*t5370*t7021 - 1.*t5683*t7082 - 1.*t7082*t7123) + t5370*t7144 + t5303*t7205) - 0.241*t5235*((t1891*t415*t7016 + t1891*t415*t7021)*t7123 + t1891*t4928*(t5370*t7016 + t5370*t7021 + t5683*t7082 + t7082*t7123) + t5370*t7223 - 1.*t1891*t415*t7248))*var2[3])*var2[9];
  p_output1[5]=(t7321 + t7363 + t7394 - 0.5*(0.0219*(t7595 + t415*(t3146*t5915 + t1891*t7597*t7601 + t1891*t7601*t7603 + t7605 + t7607 + t7608)) + 0.085290585*t2148*(t6097*(t7416 + t7418 - 1.*t1891*t7405*t7597 - 1.*t1891*t7405*t7603 + t7617 + t7620) + t7624 + t1891*t4928*(t7399 - 1.*t415*t4992*t7405 + t4928*t6097*t7405 + t7410 + t7629 + t7630) + t7633) - 0.085290585*t2082*(t6615*(t7435 + t7437 + t1891*t7405*t7597 + t1891*t7405*t7603 + t7638 + t7639) + t7645 + t1891*t4928*(t415*t5116*t7405 - 1.*t4928*t6615*t7405 + t7441 + t7444 + t7648 + t7649) + t7654) - 1.527*t2774*(t6615*(t415*t4992*t7405 - 1.*t4928*t6097*t7405 + t7459 + t7463 + t7661 + t7664) + t7667 + t6097*(-1.*t415*t5116*t7405 + t4928*t6615*t7405 + t7479 + t7482 + t7669 + t7671) + t7679) - 0.008474765*t4050*(t6974*(t7500 + t7509 + t1891*t7505*t7597 + t1891*t7505*t7603 + t7687 + t7688) + t7694 + t1891*t4928*(t415*t5303*t7505 - 1.*t4928*t6974*t7505 + t7518 + t7520 + t7696 + t7697) + t7704) - 0.241*t4808*(t7123*(-1.*t415*t5303*t7505 + t4928*t6974*t7505 + t7542 + t7543 + t7707 + t7711) + t7716 + t6974*(t415*t5370*t7505 - 1.*t4928*t7123*t7505 + t7552 + t7553 + t7718 + t7719) + t7725) - 0.241*t5235*(t7123*(t7563 + t7567 - 1.*t1891*t7505*t7597 - 1.*t1891*t7505*t7603 + t7731 + t7732) + t7737 + t1891*t4928*(-1.*t415*t5370*t7505 + t4928*t7123*t7505 + t7581 + t7582 + t7739 + t7741) + t7749))*var2[3] - 0.5*(t7395 + 0.085290585*t2148*(t7398 + t3146*(t7399 + t7401 + t4984*t7405 + t7410) + t4902*(-1.*t1891*t7405 + t7415 + t7416 + t7418) + t7427) - 0.085290585*t2082*(t7433 + t5033*(t1891*t7405 + t7434 + t7435 + t7437) + t3146*(-1.*t5079*t7405 + t7441 + t7442 + t7444) + t7456) - 1.527*t2774*(t5033*(-1.*t4984*t7405 + t7459 + t7460 + t7463) + t7475 + t4902*(t5079*t7405 + t7479 + t7480 + t7482) + t7492) - 0.008474765*t4050*(t7498 + t5257*(t7499 + t7500 + t1891*t7505 + t7509) + t7516 + t3146*(-1.*t5292*t7505 + t7518 + t7520 + t7522)) - 0.241*t4808*(t7536 + t5332*(t5292*t7505 + t7542 + t7543 + t7544) + t7550 + t5257*(-1.*t5358*t7505 + t7552 + t7553 + t7554)) - 0.241*t5235*(t7561 + t5332*(-1.*t1891*t7505 + t7562 + t7563 + t7567) + t7576 + t3146*(t5358*t7505 + t7581 + t7582 + t7583)))*var2[4])*var2[9];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(t7321 + t7363 + t7394 - 0.5*(0.085290585*t2148*(t7624 + t7633 + t1891*t4928*(t7410 + t7629 + t7630 + t7854 - 1.*t415*t4992*t7860 + t4928*t6097*t7860) + t6097*(t7418 + t7617 + t7620 - 1.*t1891*t7597*t7860 - 1.*t1891*t7603*t7860 + t7867)) - 0.085290585*t2082*(t7645 + t7654 + t6615*(t7437 + t7638 + t7639 + t1891*t7597*t7860 + t1891*t7603*t7860 + t7873) + t1891*t4928*(t7441 + t7648 + t7649 + t415*t5116*t7860 - 1.*t4928*t6615*t7860 + t7879)) - 1.527*t2774*(t7667 + t7679 + t6615*(t7463 + t7661 + t7664 + t415*t4992*t7860 - 1.*t4928*t6097*t7860 + t7886) + t6097*(t7479 + t7669 + t7671 - 1.*t415*t5116*t7860 + t4928*t6615*t7860 + t7892)) - 0.008474765*t4050*(t7694 + t7704 + t6974*(t7509 + t7687 + t7688 + t7901 + t1891*t7597*t7906 + t1891*t7603*t7906) + t1891*t4928*(t7518 + t7696 + t7697 + t415*t5303*t7906 - 1.*t4928*t6974*t7906 + t7913)) - 0.241*t4808*(t7716 + t7725 + t7123*(t7542 + t7707 + t7711 - 1.*t415*t5303*t7906 + t4928*t6974*t7906 + t7925) + t6974*(t7552 + t7718 + t7719 + t415*t5370*t7906 - 1.*t4928*t7123*t7906 + t7931)) - 0.241*t5235*(t7737 + t7749 + t7123*(t7567 + t7731 + t7732 - 1.*t1891*t7597*t7906 - 1.*t1891*t7603*t7906 + t7945) + t1891*t4928*(t7581 + t7739 + t7741 - 1.*t415*t5370*t7906 + t4928*t7123*t7906 + t7951)) + 0.0219*(t7595 + t415*(t3146*(-0.02*t1069*t1671 + t5914) + t7605 + t7607 + t7608 + t1891*t7597*t7966 + t1891*t7603*t7966)))*var2[3] - 0.5*(t7395 + 0.085290585*t2148*(t7398 + t7427 + t3146*(t7401 + t7410 + t7854 + t4984*t7860) + t4902*(t7415 + t7418 - 1.*t1891*t7860 + t7867)) - 0.085290585*t2082*(t7433 + t7456 + t5033*(t7434 + t7437 + t1891*t7860 + t7873) + t3146*(t7441 + t7442 - 1.*t5079*t7860 + t7879)) - 1.527*t2774*(t7475 + t7492 + t5033*(t7460 + t7463 - 1.*t4984*t7860 + t7886) + t4902*(t7479 + t7480 + t5079*t7860 + t7892)) - 0.008474765*t4050*(t7498 + t7516 + t5257*(t7499 + t7509 + t7901 + t1891*t7906) + t3146*(t7518 + t7522 - 1.*t5292*t7906 + t7913)) - 0.241*t4808*(t7536 + t7550 + t5332*(t7542 + t7544 + t5292*t7906 + t7925) + t5257*(t7552 + t7554 - 1.*t5358*t7906 + t7931)) - 0.241*t5235*(t7561 + t7576 + t5332*(t7562 + t7567 - 1.*t1891*t7906 + t7945) + t3146*(t7581 + t7583 + t5358*t7906 + t7951)))*var2[4] - 0.5*(0.0219*(-0.02*t1111*t1671 - 1.*t1111*t5903) + 0.085290585*Power(t2148,2)*(t1111*t6110 - 1.*t1671*t6126 - 1.*t1671*t7766 - 1.*t1111*t7770) - 0.085290585*Power(t2082,2)*(-1.*t1111*t6110 + t1671*t6126 + t1671*t7766 + t1111*t7770) - 1.527*t2774*(t2082*(t1671*t2082*t6110 + t1111*t2082*t6126 + t1111*t2082*t7766 - 1.*t1671*t2082*t7770) + t2148*(t1671*t2148*t6110 + t1111*t2148*t6126 + t1111*t2148*t7766 - 1.*t1671*t2148*t7770)) - 0.241*t4530*t5235*(t1111*t7001 - 1.*t1671*t7005 - 1.*t1671*t7807 - 1.*t1111*t7815) - 0.008474765*Power(t4050,2)*(-1.*t1111*t7001 + t1671*t7005 + t1671*t7807 + t1111*t7815) - 0.241*t4808*(t4050*(t1671*t4050*t7001 + t1111*t4050*t7005 + t1111*t4050*t7807 - 1.*t1671*t4050*t7815) + t4530*(-1.*t1671*t4638*t7001 - 1.*t1111*t4638*t7005 - 1.*t1111*t4638*t7807 + t1671*t4638*t7815)))*var2[5])*var2[9];
  p_output1[10]=var2[9]*(t8105 - 0.5*(0.085290585*t2148*t6097 - 1.527*t1891*t4928*t8167 - 0.241*t1891*t4928*t8298 + 0.085290585*t2148*t8351 + t8357 + t8359 + t8361 + t8371)*var2[0] - 0.5*(0.085290585*t2148*t5434 - 1.527*t5422*t8167 - 0.241*t5422*t8298 + 0.085290585*t2148*(t307*t7296 - 1.*t1859*t8401) + t8457 + t8458 + t8459 + t8467)*var2[1] - 0.5*(0.085290585*t2148*(t1859*t4902 + t307*t4992) - 1.527*t8167*t8380 - 0.241*t8298*t8380 + 0.085290585*t2148*(t1859*t7296 + t307*t8401) + t8412 + t8413 + t8417 + t8432)*var2[2] - 0.5*(0.085290585*t2082*(t6097*t6297 + t1891*t4928*t6589) + 0.085290585*t2148*(t6615*t6709 + t1891*t4928*t6794) - 1.527*(t6615*t6869 + t6097*t6958)*t8167 + 0.085290585*t2148*(t6297*t6615 + t6097*(t8522 - 1.*t1891*t4928*t8706 + t1891*t415*t8723) + t1891*t4928*(t6950 + t6951 + t6957 + t8533 + t6097*t8706 + t4992*t8723)) - 0.085290585*t2082*(t6709*t8351 + t6615*(t8552 + t1891*t4928*t8706 - 1.*t1891*t415*t8723) + t1891*t4928*(-1.*t6235*t8351 - 1.*t6288*t8401 + t8561 + t8565 - 1.*t6615*t8706 - 1.*t5116*t8723)) - 1.527*t2774*(t6615*t6958 + t6869*t8351 + t6615*(t6763 + t6765 + t6772 + t8577 - 1.*t6097*t8706 - 1.*t4992*t8723) + t6097*(t6235*t8351 + t6288*t8401 + t8585 + t8589 + t6615*t8706 + t5116*t8723)) + t8802 - 0.241*t8298*t8807 + t8817 - 0.241*t5235*(t8818 + t7123*(t8626 - 1.*t1891*t4928*t8824 + t1891*t415*t8832) + t1891*t4928*(t7135 + t7136 + t7139 + t8634 + t7123*t8824 + t5370*t8832)) - 0.008474765*t4050*(t6974*(t8648 + t1891*t4928*t8824 - 1.*t1891*t415*t8832) + t8844 + t1891*t4928*(t8653 + t8655 - 1.*t6974*t8824 - 1.*t5303*t8832 + t8855 + t8856)) - 0.241*t4808*(t6974*(t7106 + t7107 + t7111 + t8667 - 1.*t7123*t8824 - 1.*t5370*t8832) + t8866 + t8867 + t7123*(t8674 + t8676 + t6974*t8824 + t5303*t8832 + t8880 + t8882)))*var2[3] - 0.5*(0.085290585*t2082*(t4902*t7397 + t3146*t7426) + 0.085290585*t2148*(t5033*t7431 + t3146*t7455) - 1.527*(t5033*t7474 + t4902*t7490)*t8167 + 0.085290585*t2148*(t5033*t7397 + t4902*(-1.*t1891*t8507 + t8522) + t3146*(t2148*t2249 + t2462 + t6950 + t7489 + t4984*t8507 + t8533)) - 0.085290585*t2082*(t7296*t7431 + t5033*(t1891*t8507 + t8552) + t3146*(t2343 + t7424 - 1.*t6130*t8348 - 1.*t5079*t8507 + t8561 + t8565)) - 1.527*t2774*(t7296*t7474 + t5033*t7490 + t5033*(t2600 + t6763 + t7450 + t7452 - 1.*t4984*t8507 + t8577) + t4902*(t2418 + t8193 + t6130*t8348 + t5079*t8507 + t8585 + t8589)) + t8601 - 0.241*t8298*t8606 + t8615 - 0.241*t5235*(t8616 + t5332*(-1.*t1891*t8619 + t8626) + t3146*(t4530*t4585 + t4663 + t7135 + t7534 + t5358*t8619 + t8634)) - 0.008474765*t4050*(t8645 + t5257*(t1891*t8619 + t8648) + t3146*(t4595 - 1.*t5292*t8619 + t8651 + t8653 + t8654 + t8655)) - 0.241*t4808*(t8663 + t8664 + t5257*(t7106 + t7512 + t7514 + t8236 - 1.*t5358*t8619 + t8667) + t5332*(t8261 + t8263 + t5292*t8619 + t8674 + t8675 + t8676)))*var2[4] - 0.5*(0.17058117*t2082*t2148*(-1.*t1671*t6110 - 1.*t1111*t6126) + 0.17058117*t2082*t2148*(t1671*t6110 + t1111*t6126) - 1.527*(t2148*t8143 + t2082*t8148)*t8167 - 1.527*t2774*(t2082*t8143 - 1.*t2148*t8148 + t2082*(t2600 - 1.*t1111*t2148*t6110 + t1671*t2148*t6126 + t7450 - 1.*t2082*t8154*t8178 - 1.*t2082*t8154*t8181) + t2148*(t2418 + t8146 + t8147 - 1.*t2148*t8154*t8178 - 1.*t2148*t8154*t8181 + t8193)) + t8208 + t8216 + t8217 - 0.241*t4808*(t8228 + t4050*(t7512 + t8230 + t8231 + t8236 - 1.*t4050*t8178*t8242 - 1.*t4050*t8181*t8242) + t8256 + t4530*(t4638*t8178*t8242 + t4638*t8181*t8242 + t8261 + t8263 + t8265 + t8267)) - 0.241*t8280*t8298)*var2[5] - 0.5*(-3.054*t2774*t8167 - 0.482*t4808*t8298 + t8326 + t8328)*var2[9] - 0.5*(-0.0034116234*t2082 + 0.0034116234*t2148 + t8118 + t8128)*var2[10]);
  p_output1[11]=var2[9]*(t8105 - 0.5*(t8357 + t8359 + t8361 + t8371 - 0.241*t1891*t4928*t8971)*var2[0] - 0.5*(t8457 + t8458 + t8459 + t8467 - 0.241*t5422*t8971)*var2[1] - 0.5*(t8412 + t8413 + t8417 + t8432 - 0.241*t8380*t8971)*var2[2] - 0.5*(t8802 + t8817 - 0.241*t8807*t8971 - 0.008474765*t4050*(t8844 + t6974*(t9047 + t1891*t4928*t9119 - 1.*t1891*t415*t9134) + t1891*t4928*(t8655 + t8855 + t8856 + t9062 - 1.*t6974*t9119 - 1.*t5303*t9134)) - 0.241*t4808*(t8866 + t8867 + t7123*(t8676 + t8880 + t8882 + t9089 + t6974*t9119 + t5303*t9134) + t6974*(t7106 + t7107 + t7111 + t9076 - 1.*t7123*t9119 - 1.*t5370*t9134)) - 0.241*t5235*(t8818 + t7123*(t9012 - 1.*t1891*t4928*t9119 + t1891*t415*t9134) + t1891*t4928*(t7135 + t7136 + t7139 + t9026 + t7123*t9119 + t5370*t9134)))*var2[3] - 0.5*(t8601 + t8615 - 0.241*t8606*t8971 - 0.241*t5235*(t8616 + t5332*(-1.*t1891*t9000 + t9012) + t3146*(t4663 + t7135 + t7534 + t4530*t8930 + t5358*t9000 + t9026)) - 0.008474765*t4050*(t8645 + t5257*(t1891*t9000 + t9047) + t3146*(t8651 + t8654 + t8655 - 1.*t4050*t8930 - 1.*t5292*t9000 + t9062)) - 0.241*t4808*(t8663 + t8664 + t5257*(t7106 + t7512 + t7514 + t8932 - 1.*t5358*t9000 + t9076) + t5332*(t8261 + t8675 + t8676 + t8951 + t5292*t9000 + t9089)))*var2[4] - 0.5*(t8208 + t8216 + t8217 - 0.241*t4808*(t8228 + t8256 + t4050*(t7512 + t8230 + t8231 + t8932 - 1.*t4050*t8178*t8942 - 1.*t4050*t8181*t8942) + t4530*(t8261 + t8265 + t8267 + t4638*t8178*t8942 + t4638*t8181*t8942 + t8951)) - 0.241*t8280*t8971)*var2[5] - 0.5*(t8326 + t8328 - 0.482*t4808*t8971)*var2[9] - 0.5*(t8118 + t8128 - 0.241*t5235*(-0.242889*t3847 + t3847*t4399 - 1.*t3932*t4430 + t3932*t8898 + t3847*t8905) - 0.008474765*t4050*(t8123 + t8124 + t8125 - 1.*t3847*t8898 + t3932*t8905))*var2[10]);
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec10_plane.hh"

namespace SymFunction
{

void Ce3_vec10_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
