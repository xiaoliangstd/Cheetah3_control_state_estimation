/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:12:05 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t518;
  double t478;
  double t483;
  double t520;
  double t1199;
  double t1789;
  double t1798;
  double t1842;
  double t1844;
  double t2665;
  double t3001;
  double t3390;
  double t1781;
  double t1793;
  double t1795;
  double t702;
  double t113;
  double t219;
  double t720;
  double t726;
  double t728;
  double t5829;
  double t5909;
  double t6038;
  double t6047;
  double t6069;
  double t6089;
  double t6090;
  double t6135;
  double t6389;
  double t7230;
  double t7242;
  double t7243;
  double t5872;
  double t5937;
  double t5994;
  double t7588;
  double t7602;
  double t7604;
  double t7612;
  double t7613;
  double t7634;
  double t7635;
  double t6022;
  double t6277;
  double t7249;
  double t7586;
  double t7878;
  double t7847;
  double t7861;
  double t5657;
  double t7657;
  double t7660;
  double t7793;
  double t8434;
  double t8438;
  double t8356;
  double t8376;
  double t8539;
  double t8541;
  double t8531;
  double t8534;
  double t489;
  double t528;
  double t544;
  double t1797;
  double t3722;
  double t3746;
  double t3748;
  double t3752;
  double t3771;
  double t3775;
  double t4193;
  double t4369;
  double t4386;
  double t4681;
  double t4682;
  double t5621;
  double t5625;
  double t5631;
  double t5690;
  double t5692;
  double t5693;
  double t5701;
  double t5703;
  double t5718;
  double t7606;
  double t7636;
  double t7655;
  double t7656;
  double t7800;
  double t7811;
  double t7816;
  double t7821;
  double t7822;
  double t7830;
  double t7841;
  double t7875;
  double t7880;
  double t7888;
  double t8045;
  double t8046;
  double t8069;
  double t8075;
  double t8076;
  double t8133;
  double t8134;
  double t8140;
  double t8183;
  double t8186;
  double t8188;
  double t8191;
  double t8194;
  double t8196;
  double t8323;
  double t8335;
  double t8336;
  double t8338;
  double t8341;
  double t8383;
  double t8449;
  double t8451;
  double t8455;
  double t8476;
  double t8477;
  double t8478;
  double t8482;
  double t8483;
  double t8508;
  double t8527;
  double t8529;
  double t8530;
  double t8537;
  double t8542;
  double t8548;
  double t8575;
  double t8576;
  double t8579;
  double t8581;
  double t8583;
  double t8586;
  double t9160;
  double t9165;
  double t9167;
  double t9170;
  double t9177;
  double t9180;
  double t9190;
  double t9200;
  double t9213;
  double t9220;
  double t9221;
  double t9222;
  double t9319;
  double t9320;
  double t9321;
  double t9329;
  double t9332;
  double t9337;
  double t9339;
  double t9340;
  double t9318;
  double t9343;
  double t9350;
  double t9356;
  double t9360;
  double t9362;
  double t9505;
  double t9508;
  double t9509;
  double t9595;
  double t9596;
  double t9604;
  double t9605;
  double t9607;
  double t9614;
  double t9616;
  double t9618;
  double t9619;
  double t9629;
  double t9634;
  double t9636;
  double t9592;
  double t9626;
  double t9627;
  double t9655;
  double t9656;
  double t9657;
  double t9585;
  double t9590;
  double t9591;
  double t9648;
  double t9650;
  double t9651;
  double t9692;
  double t9693;
  double t9695;
  double t9838;
  double t9839;
  double t9840;
  double t9841;
  double t9842;
  double t9848;
  double t9849;
  double t9850;
  double t9853;
  double t9854;
  double t9871;
  double t9872;
  double t9309;
  double t9869;
  double t9870;
  double t9864;
  double t9865;
  double t9866;
  double t9879;
  double t9876;
  double t9828;
  double t9832;
  double t9833;
  double t9837;
  double t9855;
  double t9856;
  double t9899;
  double t9901;
  double t9903;
  double t9312;
  double t9952;
  double t9953;
  double t9956;
  double t10236;
  double t10237;
  double t10244;
  double t10254;
  double t10256;
  double t10259;
  double t10269;
  double t10271;
  double t10275;
  double t10288;
  double t10293;
  double t10306;
  double t10309;
  double t10310;
  double t10314;
  double t10326;
  double t10330;
  double t10332;
  double t10344;
  double t8628;
  double t8632;
  double t8633;
  double t10404;
  double t10417;
  double t9652;
  double t10542;
  double t10553;
  double t10559;
  double t9680;
  double t9702;
  double t9724;
  double t9782;
  double t9813;
  double t9906;
  double t10769;
  double t10770;
  double t10774;
  double t10757;
  double t9931;
  double t9972;
  double t10009;
  double t10071;
  double t10127;
  double t9504;
  double t9511;
  double t9513;
  double t11015;
  double t11019;
  double t11023;
  double t9529;
  double t9531;
  double t9532;
  double t10577;
  double t11014;
  double t11034;
  double t10587;
  double t9654;
  double t9659;
  double t9661;
  double t10535;
  double t10565;
  double t9681;
  double t9682;
  double t9684;
  double t10632;
  double t10635;
  double t9704;
  double t9706;
  double t9708;
  double t10669;
  double t10673;
  double t9726;
  double t9727;
  double t9729;
  double t10696;
  double t10708;
  double t9788;
  double t9790;
  double t9791;
  double t10734;
  double t10735;
  double t9815;
  double t9816;
  double t9817;
  double t10761;
  double t10780;
  double t9907;
  double t9908;
  double t9912;
  double t10791;
  double t10799;
  double t9932;
  double t9934;
  double t9937;
  double t10830;
  double t10836;
  double t9974;
  double t9975;
  double t9980;
  double t10864;
  double t10870;
  double t10011;
  double t10020;
  double t10023;
  double t10914;
  double t10920;
  double t10074;
  double t10078;
  double t10081;
  double t10939;
  double t10953;
  double t10139;
  double t10144;
  double t10154;
  double t11356;
  double t11357;
  double t11361;
  double t11431;
  double t11434;
  double t11443;
  double t11552;
  double t11532;
  double t11533;
  double t11534;
  double t11542;
  double t11543;
  double t11544;
  double t11691;
  double t11562;
  double t11565;
  double t8641;
  double t8643;
  double t8644;
  double t11584;
  double t11585;
  double t11594;
  double t11609;
  double t11611;
  double t11614;
  double t11630;
  double t11639;
  double t11641;
  double t11660;
  double t11661;
  double t11666;
  double t10524;
  double t10526;
  double t11779;
  double t11793;
  double t11798;
  double t11809;
  double t11810;
  double t10603;
  double t10605;
  double t10609;
  double t10621;
  double t10626;
  double t10656;
  double t10658;
  double t10659;
  double t10716;
  double t10717;
  double t10721;
  double t10722;
  double t10753;
  double t10755;
  double t11982;
  double t11983;
  double t11973;
  double t11977;
  double t11979;
  double t10814;
  double t10817;
  double t10818;
  double t10853;
  double t10857;
  double t10879;
  double t10880;
  double t10902;
  double t10906;
  double t10975;
  double t10982;
  double t10985;
  double t12129;
  double t12137;
  double t11828;
  double t11830;
  double t11804;
  double t11815;
  double t11848;
  double t11854;
  double t11869;
  double t11882;
  double t11910;
  double t11921;
  double t11933;
  double t11936;
  double t11980;
  double t11985;
  double t11993;
  double t12007;
  double t12026;
  double t12034;
  double t12040;
  double t12047;
  double t12067;
  double t12072;
  double t12080;
  double t12086;
  double t12401;
  double t12410;
  double t12414;
  double t12415;
  double t12416;
  double t12419;
  double t12420;
  double t12421;
  double t12480;
  double t12482;
  double t12544;
  double t12547;
  double t12549;
  double t12551;
  double t12533;
  double t12524;
  double t12532;
  double t12536;
  double t12542;
  double t12554;
  double t12556;
  double t12564;
  double t12568;
  double t12581;
  double t12591;
  double t12592;
  double t12594;
  double t12596;
  double t12601;
  double t12604;
  double t12483;
  double t12489;
  double t12490;
  double t12493;
  double t12494;
  double t12498;
  double t12499;
  double t12500;
  double t12505;
  double t12639;
  double t12640;
  double t12641;
  double t12649;
  double t12653;
  double t12654;
  double t12676;
  double t12683;
  double t12725;
  double t12729;
  double t12730;
  double t12714;
  double t12716;
  double t12718;
  double t12764;
  double t12767;
  double t12768;
  double t12772;
  double t12773;
  double t12778;
  double t11578;
  double t11579;
  double t11581;
  double t12882;
  double t12885;
  double t12886;
  double t12895;
  double t12898;
  double t12899;
  double t8649;
  double t8650;
  double t8652;
  double t12929;
  double t12931;
  double t12937;
  double t8660;
  double t8661;
  double t12954;
  double t12956;
  double t12957;
  double t12960;
  double t12962;
  double t12967;
  double t12982;
  double t12984;
  double t12985;
  double t12988;
  double t12989;
  double t12992;
  double t8700;
  double t8703;
  double t8743;
  double t8744;
  double t13113;
  double t13118;
  double t13119;
  double t13121;
  double t13123;
  double t13126;
  double t12700;
  double t13250;
  double t13252;
  double t13253;
  double t13256;
  double t13257;
  double t13259;
  double t13130;
  double t13143;
  double t13419;
  double t13421;
  double t13426;
  double t13432;
  double t13439;
  double t13440;
  double t12867;
  double t12870;
  double t13162;
  double t13180;
  double t13188;
  double t13213;
  double t13221;
  double t13230;
  double t12892;
  double t12900;
  double t12901;
  double t13262;
  double t13281;
  double t13286;
  double t13561;
  double t13569;
  double t13574;
  double t13586;
  double t13588;
  double t13590;
  double t12880;
  double t12887;
  double t12889;
  double t13312;
  double t13315;
  double t13328;
  double t13331;
  double t13352;
  double t13366;
  double t13371;
  double t12407;
  double t12423;
  double t12430;
  double t12436;
  double t12452;
  double t12453;
  double t12454;
  double t12456;
  double t12460;
  double t12462;
  double t12465;
  double t12472;
  double t12473;
  double t12474;
  double t13768;
  double t13769;
  double t13750;
  double t13753;
  double t13758;
  double t12510;
  double t12512;
  double t12516;
  double t12523;
  double t13794;
  double t13797;
  double t13800;
  double t13784;
  double t13787;
  double t13792;
  double t13793;
  double t13802;
  double t13803;
  double t13808;
  double t13810;
  double t13813;
  double t13814;
  double t13816;
  double t13819;
  double t12719;
  double t12722;
  double t12724;
  double t12731;
  double t12733;
  double t12740;
  double t12748;
  double t12754;
  double t12769;
  double t12781;
  double t12783;
  double t12786;
  double t12793;
  double t12794;
  double t12810;
  double t12815;
  double t12826;
  double t12890;
  double t12902;
  double t12909;
  double t12910;
  double t12942;
  double t12945;
  double t12946;
  double t12959;
  double t12969;
  double t12977;
  double t12979;
  double t12986;
  double t12993;
  double t12995;
  double t12996;
  double t13008;
  double t13011;
  double t13016;
  double t13017;
  double t13018;
  double t13021;
  double t13023;
  double t13025;
  double t13040;
  double t13043;
  double t13049;
  double t13052;
  double t13054;
  double t13055;
  double t13061;
  double t13065;
  double t13067;
  double t13070;
  double t13072;
  double t13074;
  double t13075;
  double t13242;
  double t13244;
  double t13245;
  double t13246;
  double t13248;
  double t13274;
  double t13280;
  double t13904;
  double t13906;
  double t13907;
  double t13909;
  double t13911;
  double t13916;
  double t13295;
  double t13296;
  double t13298;
  double t13301;
  double t13303;
  double t13305;
  double t13308;
  double t13309;
  double t13311;
  double t13326;
  double t13327;
  double t13345;
  double t13361;
  double t13363;
  double t13542;
  double t13544;
  double t13550;
  double t13555;
  double t13559;
  double t13917;
  double t13930;
  double t13606;
  double t13614;
  double t13996;
  double t13999;
  double t14002;
  double t14004;
  double t14005;
  double t14006;
  double t13641;
  double t13643;
  double t13644;
  double t13650;
  double t13652;
  double t13657;
  double t13661;
  double t13664;
  double t13944;
  double t13667;
  double t13671;
  double t13679;
  double t13949;
  double t13681;
  double t13683;
  double t13702;
  double t13957;
  double t13964;
  double t13716;
  double t13717;
  t518 = Cos(var1[12]);
  t478 = Cos(var1[5]);
  t483 = Sin(var1[12]);
  t520 = Sin(var1[5]);
  t1199 = Cos(var1[13]);
  t1789 = Sin(var1[13]);
  t1798 = -1.*t1199;
  t1842 = 1. + t1798;
  t1844 = -0.194401*t1842;
  t2665 = -0.234401*t1199;
  t3001 = -0.04*t1789;
  t3390 = t1844 + t2665 + t3001;
  t1781 = -0.04*t1199;
  t1793 = 0.04*t1789;
  t1795 = t1781 + t1793;
  t702 = Sin(var1[3]);
  t113 = Cos(var1[3]);
  t219 = Sin(var1[4]);
  t720 = t518*t478;
  t726 = t483*t520;
  t728 = t720 + t726;
  t5829 = Cos(var1[14]);
  t5909 = Sin(var1[14]);
  t6038 = -1.*t5829;
  t6047 = 1. + t6038;
  t6069 = -0.336601*t6047;
  t6089 = -0.356601*t5829;
  t6090 = -0.16*t5909;
  t6135 = 0. + t6069 + t6089 + t6090;
  t6389 = -0.20833*t6047;
  t7230 = -0.36833*t5829;
  t7242 = 0.020000000000000018*t5909;
  t7243 = 0. + t6389 + t7230 + t7242;
  t5872 = t1199*t5829;
  t5937 = -1.*t1789*t5909;
  t5994 = 0. + t5872 + t5937;
  t7588 = t5829*t1789;
  t7602 = t1199*t5909;
  t7604 = 0. + t7588 + t7602;
  t7612 = -0.194401*t1789;
  t7613 = -1.*t1789*t6135;
  t7634 = t1199*t7243;
  t7635 = 0. + t7612 + t7613 + t7634;
  t6022 = -0.194401*t1842;
  t6277 = t1199*t6135;
  t7249 = t1789*t7243;
  t7586 = 0. + t6022 + t6277 + t7249;
  t7878 = 0. + t518;
  t7847 = -1.*t483;
  t7861 = 0. + t7847;
  t5657 = Cos(var1[4]);
  t7657 = -1.*t5829*t1789;
  t7660 = -1.*t1199*t5909;
  t7793 = 0. + t7657 + t7660;
  t8434 = t483*t7793;
  t8438 = 0. + t8434;
  t8356 = t518*t7793;
  t8376 = 0. + t8356;
  t8539 = t483*t5994;
  t8541 = 0. + t8539;
  t8531 = t518*t5994;
  t8534 = 0. + t8531;
  t489 = t478*t483;
  t528 = -1.*t518*t520;
  t544 = t489 + t528;
  t1797 = -1.*t1199*t1795;
  t3722 = -1.*t3390*t1789;
  t3746 = t1797 + t3722;
  t3748 = -1.*t1199*t3746;
  t3752 = t1199*t3390;
  t3771 = -1.*t1795*t1789;
  t3775 = t3752 + t3771;
  t4193 = -1.*t1789*t3775;
  t4369 = t3748 + t4193;
  t4386 = -1.*t478*t483;
  t4681 = t518*t520;
  t4682 = t4386 + t4681;
  t5621 = t518*t1199*t478;
  t5625 = t1199*t483*t520;
  t5631 = t5621 + t5625;
  t5690 = t5657*t1789;
  t5692 = t1199*t478*t483;
  t5693 = -1.*t518*t1199*t520;
  t5701 = t5692 + t5693;
  t5703 = -1.*t219*t5701;
  t5718 = t5690 + t5703;
  t7606 = -1.*t7586*t7604;
  t7636 = -1.*t7635*t5994;
  t7655 = 0. + t7606 + t7636;
  t7656 = -1.*t5994*t7655;
  t7800 = t7635*t7793;
  t7811 = t7586*t5994;
  t7816 = 0. + t7800 + t7811;
  t7821 = -1.*t7604*t7816;
  t7822 = 0. + t7656 + t7821;
  t7830 = 0.241*t7822;
  t7841 = 0. + t7830;
  t7875 = t478*t7861;
  t7880 = t7878*t520;
  t7888 = 0. + t7875 + t7880;
  t8045 = t7878*t478;
  t8046 = -1.*t7861*t520;
  t8069 = 0. + t8045 + t8046;
  t8075 = -1.*t219*t8069;
  t8076 = 0. + t8075;
  t8133 = -1.*t518*t478*t1789;
  t8134 = -1.*t483*t1789*t520;
  t8140 = t8133 + t8134;
  t8183 = t1199*t5657;
  t8186 = -1.*t478*t483*t1789;
  t8188 = t518*t1789*t520;
  t8191 = t8186 + t8188;
  t8194 = -1.*t219*t8191;
  t8196 = t8183 + t8194;
  t8323 = -0.081715*t7793;
  t8335 = -0.11459*t7604;
  t8336 = 0. + t8323 + t8335;
  t8338 = 0.241*t8336;
  t8341 = 0. + t8338;
  t8383 = t478*t8376;
  t8449 = t8438*t520;
  t8451 = 0. + t8383 + t8449;
  t8455 = t5657*t5994;
  t8476 = t478*t8438;
  t8477 = -1.*t8376*t520;
  t8478 = 0. + t8476 + t8477;
  t8482 = -1.*t219*t8478;
  t8483 = 0. + t8455 + t8482;
  t8508 = 0.032875*t5994;
  t8527 = 0. + t8508;
  t8529 = 0.241*t8527;
  t8530 = 0. + t8529;
  t8537 = t478*t8534;
  t8542 = t8541*t520;
  t8548 = 0. + t8537 + t8542;
  t8575 = t5657*t7604;
  t8576 = t478*t8541;
  t8579 = -1.*t8534*t520;
  t8581 = 0. + t8576 + t8579;
  t8583 = -1.*t219*t8581;
  t8586 = 0. + t8575 + t8583;
  t9160 = -1.*t1789*t219;
  t9165 = -1.*t5657*t5701;
  t9167 = t9160 + t9165;
  t9170 = -1.*t1199*t219;
  t9177 = -1.*t5657*t8191;
  t9180 = t9170 + t9177;
  t9190 = -1.*t5994*t219;
  t9200 = -1.*t5657*t8478;
  t9213 = t9190 + t9200;
  t9220 = -1.*t7604*t219;
  t9221 = -1.*t5657*t8581;
  t9222 = t9220 + t9221;
  t9319 = -1.*t518;
  t9320 = 1. + t9319;
  t9321 = -0.081715*t9320;
  t9329 = -0.061715*t518;
  t9332 = t9321 + t9329;
  t9337 = t9332*t478;
  t9339 = 0.02*t483*t520;
  t9340 = t9337 + t9339;
  t9318 = 0.194401*t219;
  t9343 = -1.*t5657*t9340;
  t9350 = t9318 + t9343;
  t9356 = -0.194401*t219;
  t9360 = t5657*t9340;
  t9362 = t9356 + t9360;
  t9505 = -0.194401*t5657;
  t9508 = -1.*t219*t9340;
  t9509 = t9505 + t9508;
  t9595 = -0.13528*t518;
  t9596 = t483*t1795;
  t9604 = t9321 + t9595 + t9596;
  t9605 = t478*t9604;
  t9607 = 0.053565*t483;
  t9614 = t518*t1795;
  t9616 = t9607 + t9614;
  t9618 = -1.*t9616*t520;
  t9619 = t9605 + t9618;
  t9629 = t3390*t219;
  t9634 = t5657*t9619;
  t9636 = t9629 + t9634;
  t9592 = -1.*t3390*t219;
  t9626 = -1.*t5657*t9619;
  t9627 = t9592 + t9626;
  t9655 = t5657*t3390;
  t9656 = -1.*t219*t9619;
  t9657 = t9655 + t9656;
  t9585 = t1789*t219;
  t9590 = t5657*t5701;
  t9591 = t9585 + t9590;
  t9648 = t478*t9616;
  t9650 = t9604*t520;
  t9651 = t9648 + t9650;
  t9692 = t1199*t219;
  t9693 = t5657*t8191;
  t9695 = t9692 + t9693;
  t9838 = -0.081715*t9320;
  t9839 = -0.11459*t518;
  t9840 = t483*t7635;
  t9841 = t9838 + t9839 + t9840;
  t9842 = t478*t9841;
  t9848 = 0.032875*t483;
  t9849 = t518*t7635;
  t9850 = t9848 + t9849;
  t9853 = -1.*t9850*t520;
  t9854 = 0. + t9842 + t9853;
  t9871 = t5657*t7586;
  t9872 = -1.*t219*t9854;
  t9309 = t8455 + t8482;
  t9869 = t5657*t8069;
  t9870 = 0. + t9869;
  t9864 = t7586*t219;
  t9865 = t5657*t9854;
  t9866 = 0. + t9864 + t9865;
  t9879 = 0. + t9871 + t9872;
  t9876 = t9871 + t9872;
  t9828 = t5994*t219;
  t9832 = t5657*t8478;
  t9833 = 0. + t9828 + t9832;
  t9837 = -1.*t7586*t219;
  t9855 = -1.*t5657*t9854;
  t9856 = t9837 + t9855;
  t9899 = t478*t9850;
  t9901 = t9841*t520;
  t9903 = 0. + t9899 + t9901;
  t9312 = t8575 + t8583;
  t9952 = t7604*t219;
  t9953 = t5657*t8581;
  t9956 = 0. + t9952 + t9953;
  t10236 = -1.*t478*t7861;
  t10237 = -1.*t7878*t520;
  t10244 = t10236 + t10237;
  t10254 = -1.*t518*t478;
  t10256 = -1.*t483*t520;
  t10259 = t10254 + t10256;
  t10269 = -1.*t518*t1199*t478;
  t10271 = -1.*t1199*t483*t520;
  t10275 = t10269 + t10271;
  t10288 = t518*t478*t1789;
  t10293 = t483*t1789*t520;
  t10306 = t10288 + t10293;
  t10309 = -1.*t478*t8376;
  t10310 = -1.*t8438*t520;
  t10314 = t10309 + t10310;
  t10326 = -1.*t478*t8534;
  t10330 = -1.*t8541*t520;
  t10332 = t10326 + t10330;
  t10344 = t8045 + t8046;
  t8628 = t702*t219*t544;
  t8632 = t113*t728;
  t8633 = t8628 + t8632;
  t10404 = t8476 + t8477;
  t10417 = t8576 + t8579;
  t9652 = -1.*t4682*t9651;
  t10542 = -1.*t478*t9616;
  t10553 = -1.*t9604*t520;
  t10559 = t10542 + t10553;
  t9680 = t5631*t9651;
  t9702 = t4682*t9651;
  t9724 = -1.*t9651*t8140;
  t9782 = -1.*t5631*t9651;
  t9813 = t9651*t8140;
  t9906 = t7888*t9903;
  t10769 = -1.*t478*t9850;
  t10770 = -1.*t9841*t520;
  t10774 = t10769 + t10770;
  t10757 = t9842 + t9853;
  t9931 = -1.*t9903*t8451;
  t9972 = t9903*t8451;
  t10009 = -1.*t9903*t8548;
  t10071 = -1.*t7888*t9903;
  t10127 = t9903*t8548;
  t9504 = -1.*t219*t9362;
  t9511 = -1.*t5657*t9509;
  t9513 = t9504 + t9511;
  t11015 = 0.02*t478*t483;
  t11019 = -1.*t9332*t520;
  t11023 = t11015 + t11019;
  t9529 = -0.02*t478*t483;
  t9531 = t9332*t520;
  t9532 = t9529 + t9531;
  t10577 = -1.*t4682*t9619;
  t11014 = Power(t5657,2);
  t11034 = Power(t219,2);
  t10587 = -1.*t728*t9651;
  t9654 = -1.*t5657*t728*t9636;
  t9659 = t219*t728*t9657;
  t9661 = t9652 + t9654 + t9659;
  t10535 = t5631*t9619;
  t10565 = t5701*t9651;
  t9681 = t9591*t9636;
  t9682 = t5718*t9657;
  t9684 = t9680 + t9681 + t9682;
  t10632 = t4682*t9619;
  t10635 = t728*t9651;
  t9704 = t5657*t728*t9636;
  t9706 = -1.*t219*t728*t9657;
  t9708 = t9702 + t9704 + t9706;
  t10669 = -1.*t9651*t8191;
  t10673 = -1.*t9619*t8140;
  t9726 = -1.*t9636*t9695;
  t9727 = -1.*t9657*t8196;
  t9729 = t9724 + t9726 + t9727;
  t10696 = -1.*t5631*t9619;
  t10708 = -1.*t5701*t9651;
  t9788 = -1.*t9591*t9636;
  t9790 = -1.*t5718*t9657;
  t9791 = t9782 + t9788 + t9790;
  t10734 = t9651*t8191;
  t10735 = t9619*t8140;
  t9815 = t9636*t9695;
  t9816 = t9657*t8196;
  t9817 = t9813 + t9815 + t9816;
  t10761 = t7888*t10757;
  t10780 = t10344*t9903;
  t9907 = t9870*t9866;
  t9908 = t8076*t9879;
  t9912 = t9906 + t9907 + t9908;
  t10791 = -1.*t9903*t10404;
  t10799 = -1.*t10757*t8451;
  t9932 = -1.*t9866*t9833;
  t9934 = -1.*t9879*t8483;
  t9937 = t9931 + t9932 + t9934;
  t10830 = t9903*t10404;
  t10836 = t10757*t8451;
  t9974 = t9866*t9833;
  t9975 = t9879*t8483;
  t9980 = t9972 + t9974 + t9975;
  t10864 = -1.*t9903*t10417;
  t10870 = -1.*t10757*t8548;
  t10011 = -1.*t9866*t9956;
  t10020 = -1.*t9879*t8586;
  t10023 = t10009 + t10011 + t10020;
  t10914 = -1.*t7888*t10757;
  t10920 = -1.*t10344*t9903;
  t10074 = -1.*t9870*t9866;
  t10078 = -1.*t8076*t9879;
  t10081 = t10071 + t10074 + t10078;
  t10939 = t9903*t10417;
  t10953 = t10757*t8548;
  t10139 = t9866*t9956;
  t10144 = t9879*t8586;
  t10154 = t10127 + t10139 + t10144;
  t11356 = 0.053565*t518;
  t11357 = -1.*t483*t1795;
  t11361 = t11356 + t11357;
  t11431 = 0.032875*t518;
  t11434 = -1.*t483*t7635;
  t11443 = t11431 + t11434;
  t11552 = -1.*t113*t219*t4682;
  t11532 = t518*t478*t7793;
  t11533 = t483*t7793*t520;
  t11534 = t11532 + t11533;
  t11542 = t518*t478*t5994;
  t11543 = t483*t5994*t520;
  t11544 = t11542 + t11543;
  t11691 = t702*t219*t4682;
  t11562 = -1.*t518*t478;
  t11565 = t11562 + t10256;
  t8641 = t113*t4682;
  t8643 = t702*t219*t728;
  t8644 = t8641 + t8643;
  t11584 = -1.*t1199*t478*t483;
  t11585 = t518*t1199*t520;
  t11594 = t11584 + t11585;
  t11609 = t478*t483*t1789;
  t11611 = -1.*t518*t1789*t520;
  t11614 = t11609 + t11611;
  t11630 = -1.*t478*t483*t7793;
  t11639 = t518*t7793*t520;
  t11641 = t11630 + t11639;
  t11660 = -1.*t478*t483*t5994;
  t11661 = t518*t5994*t520;
  t11666 = t11660 + t11661;
  t10524 = -1.*t728*t9619;
  t10526 = t10524 + t9652;
  t11779 = t478*t11361;
  t11793 = t9616*t520;
  t11798 = t11779 + t11793;
  t11809 = -1.*t11361*t520;
  t11810 = t9648 + t11809;
  t10603 = t3390*t1789;
  t10605 = t5701*t9619;
  t10609 = t10603 + t10605 + t9680;
  t10621 = t728*t9619;
  t10626 = t10621 + t9702;
  t10656 = -1.*t1199*t3390;
  t10658 = -1.*t9619*t8191;
  t10659 = t10656 + t10658 + t9724;
  t10716 = -1.*t5701*t9619;
  t10717 = t3722 + t10716 + t9782;
  t10721 = t9619*t8191;
  t10722 = t3752 + t10721 + t9813;
  t10753 = t8069*t9854;
  t10755 = 0. + t10753 + t9906;
  t11982 = -1.*t11443*t520;
  t11983 = t9899 + t11982;
  t11973 = t478*t11443;
  t11977 = t9850*t520;
  t11979 = t11973 + t11977;
  t10814 = -1.*t7586*t5994;
  t10817 = -1.*t9854*t8478;
  t10818 = t10814 + t10817 + t9931;
  t10853 = t9854*t8478;
  t10857 = t7811 + t10853 + t9972;
  t10879 = -1.*t9854*t8581;
  t10880 = t7606 + t10879 + t10009;
  t10902 = -1.*t8069*t9854;
  t10906 = 0. + t10902 + t10071;
  t10975 = t7586*t7604;
  t10982 = t9854*t8581;
  t10985 = t10975 + t10982 + t10127;
  t12129 = 0.02*t518*t520;
  t12137 = t9529 + t12129;
  t11828 = -1.*t4682*t11798;
  t11830 = -1.*t10259*t9651;
  t11804 = t5631*t11798;
  t11815 = t11594*t9651;
  t11848 = t4682*t11798;
  t11854 = t10259*t9651;
  t11869 = -1.*t9651*t11614;
  t11882 = -1.*t11798*t8140;
  t11910 = -1.*t5631*t11798;
  t11921 = -1.*t11594*t9651;
  t11933 = t9651*t11614;
  t11936 = t11798*t8140;
  t11980 = t7888*t11979;
  t11985 = t11565*t9903;
  t11993 = -1.*t9903*t11641;
  t12007 = -1.*t11979*t8451;
  t12026 = t9903*t11641;
  t12034 = t11979*t8451;
  t12040 = -1.*t9903*t11666;
  t12047 = -1.*t11979*t8548;
  t12067 = -1.*t7888*t11979;
  t12072 = -1.*t11565*t9903;
  t12080 = t9903*t11666;
  t12086 = t11979*t8548;
  t12401 = t7657 + t7660;
  t12410 = t5872 + t5937;
  t12414 = -0.11459*t12410;
  t12415 = -1.*t1199*t5829;
  t12416 = t1789*t5909;
  t12419 = t12415 + t12416;
  t12420 = -0.081715*t12419;
  t12421 = t12414 + t12420;
  t12480 = 0.04*t1199;
  t12482 = t12480 + t1793;
  t12544 = -0.194401*t1199;
  t12547 = -1.*t1199*t6135;
  t12549 = -1.*t1789*t7243;
  t12551 = t12544 + t12547 + t12549;
  t12533 = t7612 + t7613 + t7634;
  t12524 = -1.*t12401*t7655;
  t12532 = -1.*t7635*t12401;
  t12536 = -1.*t12533*t7604;
  t12542 = -1.*t7586*t12410;
  t12554 = -1.*t12551*t5994;
  t12556 = t12532 + t12536 + t12542 + t12554;
  t12564 = -1.*t5994*t12556;
  t12568 = -1.*t12410*t7816;
  t12581 = t7586*t12401;
  t12591 = t12551*t7793;
  t12592 = t12533*t5994;
  t12594 = t7635*t12419;
  t12596 = t12581 + t12591 + t12592 + t12594;
  t12601 = -1.*t7604*t12596;
  t12604 = t12524 + t12564 + t12568 + t12601;
  t12483 = -1.*t1199*t12482;
  t12489 = t10656 + t12483;
  t12490 = -1.*t1199*t12489;
  t12493 = t1789*t3746;
  t12494 = -1.*t1199*t3775;
  t12498 = -1.*t12482*t1789;
  t12499 = t3722 + t12498;
  t12500 = -1.*t1789*t12499;
  t12505 = t12490 + t12493 + t12494 + t12500;
  t12639 = -1.*t518*t9616*t1789;
  t12640 = -1.*t483*t9604*t1789;
  t12641 = t3752 + t12639 + t12640;
  t12649 = -1.*t518*t1199*t9616;
  t12653 = -1.*t1199*t483*t9604;
  t12654 = t12649 + t12653 + t3722;
  t12676 = Power(t518,2);
  t12683 = Power(t483,2);
  t12725 = -1.*t7861*t9850;
  t12729 = -1.*t7878*t9841;
  t12730 = 0. + t12725 + t12729;
  t12714 = t7861*t9850;
  t12716 = t7878*t9841;
  t12718 = 0. + t12714 + t12716;
  t12764 = t9850*t8376;
  t12767 = t9841*t8438;
  t12768 = t7811 + t12764 + t12767;
  t12772 = -1.*t9850*t8534;
  t12773 = -1.*t9841*t8541;
  t12778 = t7606 + t12772 + t12773;
  t11578 = t702*t4682;
  t11579 = -1.*t113*t219*t728;
  t11581 = t11578 + t11579;
  t12882 = t478*t483*t12401;
  t12885 = -1.*t518*t12401*t520;
  t12886 = t12882 + t12885;
  t12895 = t478*t483*t12419;
  t12898 = -1.*t518*t12419*t520;
  t12899 = t12895 + t12898;
  t8649 = t113*t5631;
  t8650 = -1.*t702*t5718;
  t8652 = t8649 + t8650;
  t12929 = -1.*t5657*t1789;
  t12931 = -1.*t219*t11594;
  t12937 = t12929 + t12931;
  t8660 = t113*t7888;
  t8661 = -1.*t702*t8076;
  t12954 = t518*t478*t12401;
  t12956 = t483*t12401*t520;
  t12957 = t12954 + t12956;
  t12960 = t5657*t12410;
  t12962 = -1.*t219*t12886;
  t12967 = t12960 + t12962;
  t12982 = t518*t478*t12419;
  t12984 = t483*t12419*t520;
  t12985 = t12982 + t12984;
  t12988 = t5657*t12401;
  t12989 = -1.*t219*t12899;
  t12992 = t12988 + t12989;
  t8700 = t113*t8451;
  t8703 = -1.*t702*t8483;
  t8743 = t113*t8548;
  t8744 = -1.*t702*t8586;
  t13113 = t478*t483*t12482;
  t13118 = -1.*t518*t12482*t520;
  t13119 = t13113 + t13118;
  t13121 = t518*t478*t12482;
  t13123 = t483*t12482*t520;
  t13126 = t13121 + t13123;
  t12700 = t1199*t1795;
  t13250 = t478*t483*t12551;
  t13252 = -1.*t518*t12551*t520;
  t13253 = t13250 + t13252;
  t13256 = t518*t478*t12551;
  t13257 = t483*t12551*t520;
  t13259 = t13256 + t13257;
  t13130 = -1.*t4682*t13126;
  t13143 = t5631*t13126;
  t13419 = t1795*t219;
  t13421 = t5657*t13119;
  t13426 = t13419 + t13421;
  t13432 = t5657*t1795;
  t13439 = -1.*t219*t13119;
  t13440 = t13432 + t13439;
  t12867 = t5657*t11594;
  t12870 = t9160 + t12867;
  t13162 = t4682*t13126;
  t13180 = -1.*t10275*t9651;
  t13188 = -1.*t13126*t8140;
  t13213 = -1.*t5631*t13126;
  t13221 = t10275*t9651;
  t13230 = t13126*t8140;
  t12892 = t12401*t219;
  t12900 = t5657*t12899;
  t12901 = t12892 + t12900;
  t13262 = t7888*t13259;
  t13281 = -1.*t9903*t12985;
  t13286 = -1.*t13259*t8451;
  t13561 = t12533*t219;
  t13569 = t5657*t13253;
  t13574 = t13561 + t13569;
  t13586 = t5657*t12533;
  t13588 = -1.*t219*t13253;
  t13590 = t13586 + t13588;
  t12880 = t12410*t219;
  t12887 = t5657*t12886;
  t12889 = t12880 + t12887;
  t13312 = t9903*t12985;
  t13315 = t13259*t8451;
  t13328 = -1.*t9903*t12957;
  t13331 = -1.*t13259*t8548;
  t13352 = -1.*t7888*t13259;
  t13366 = t9903*t12957;
  t13371 = t13259*t8548;
  t12407 = -0.00015845750000000012*t12401;
  t12423 = 0.03856*t12421;
  t12430 = t12407 + t12423;
  t12436 = -0.5*var2[14]*t12430;
  t12452 = -0.194401*t5829;
  t12453 = -1.*t5829*t6135;
  t12454 = t7243*t5909;
  t12456 = 0. + t12452 + t12453 + t12454;
  t12460 = -0.007922875*t12401*t12456;
  t12462 = t5829*t7243;
  t12465 = 0.194401*t5909;
  t12472 = t6135*t5909;
  t12473 = 0. + t12462 + t12465 + t12472;
  t12474 = -0.241*t12473*t12421;
  t13768 = -0.16*t5829;
  t13769 = t13768 + t7242;
  t13750 = 0.020000000000000018*t5829;
  t13753 = 0.16*t5909;
  t13758 = t13750 + t13753;
  t12510 = -0.007922875*t12401*t8527;
  t12512 = -0.241*t8336*t12421;
  t12516 = -1.*t12421*t8341;
  t12523 = -0.032875*t12401*t8530;
  t13794 = -1.*t1789*t13769;
  t13797 = t1199*t13758;
  t13800 = t13794 + t13797;
  t13784 = t1199*t13769;
  t13787 = t1789*t13758;
  t13792 = t13784 + t13787;
  t13793 = -1.*t13792*t7604;
  t13802 = -1.*t13800*t5994;
  t13803 = t12532 + t13793 + t12542 + t13802;
  t13808 = -1.*t5994*t13803;
  t13810 = t13800*t7793;
  t13813 = t13792*t5994;
  t13814 = t12581 + t13810 + t13813 + t12594;
  t13816 = -1.*t7604*t13814;
  t13819 = t12524 + t12568 + t13808 + t13816;
  t12719 = t12718*t5994;
  t12722 = 0. + t12719;
  t12724 = -0.007922875*t12401*t12722;
  t12731 = t12730*t7604;
  t12733 = 0. + t12731;
  t12740 = -0.241*t12733*t12421;
  t12748 = t12730*t12410;
  t12754 = t12718*t12401;
  t12769 = t7604*t12768;
  t12781 = t5994*t12778;
  t12783 = 0. + t12769 + t12781;
  t12786 = t12410*t12768;
  t12793 = t518*t9850*t12419;
  t12794 = t483*t9841*t12419;
  t12810 = t12401*t12778;
  t12815 = -1.*t518*t9850*t12401;
  t12826 = -1.*t483*t9841*t12401;
  t12890 = -1.*t8530*t12889;
  t12902 = -1.*t8341*t12901;
  t12909 = -0.241*t12421*t9833;
  t12910 = -0.007922875*t12401*t9956;
  t12942 = t702*t7888;
  t12945 = t113*t8076;
  t12946 = 0. + t12942 + t12945;
  t12959 = t702*t12957;
  t12969 = t113*t12967;
  t12977 = t12959 + t12969;
  t12979 = -1.*t8530*t12977;
  t12986 = t702*t12985;
  t12993 = t113*t12992;
  t12995 = t12986 + t12993;
  t12996 = -1.*t8341*t12995;
  t13008 = t702*t8451;
  t13011 = t113*t8483;
  t13016 = 0. + t13008 + t13011;
  t13017 = -0.241*t12421*t13016;
  t13018 = t702*t8548;
  t13021 = t113*t8586;
  t13023 = 0. + t13018 + t13021;
  t13025 = -0.007922875*t12401*t13023;
  t13040 = 0. + t8660 + t8661;
  t13043 = t113*t12957;
  t13049 = -1.*t702*t12967;
  t13052 = t13043 + t13049;
  t13054 = -1.*t8530*t13052;
  t13055 = t113*t12985;
  t13061 = -1.*t702*t12992;
  t13065 = t13055 + t13061;
  t13067 = -1.*t8341*t13065;
  t13070 = 0. + t8700 + t8703;
  t13072 = -0.241*t12421*t13070;
  t13074 = 0. + t8743 + t8744;
  t13075 = -0.007922875*t12401*t13074;
  t13242 = t8451*t10755;
  t13244 = t7888*t10818;
  t13245 = t13242 + t13244;
  t13246 = -0.007922875*t12401*t13245;
  t13248 = t12985*t10755;
  t13274 = -1.*t7586*t12401;
  t13280 = -1.*t9854*t12899;
  t13904 = t478*t483*t13800;
  t13906 = -1.*t518*t13800*t520;
  t13907 = t13904 + t13906;
  t13909 = t518*t478*t13800;
  t13911 = t483*t13800*t520;
  t13916 = t13909 + t13911;
  t13295 = t8548*t10857;
  t13296 = t8451*t10880;
  t13298 = 0. + t13295 + t13296;
  t13301 = t8548*t10906;
  t13303 = t7888*t10985;
  t13305 = t13301 + t13303;
  t13308 = -0.241*t12421*t13305;
  t13309 = t12957*t10857;
  t13311 = t9854*t12899;
  t13326 = t12985*t10880;
  t13327 = -1.*t9854*t12886;
  t13345 = t12957*t10906;
  t13361 = t7586*t12410;
  t13363 = t9854*t12886;
  t13542 = t9833*t9912;
  t13544 = t9870*t9937;
  t13550 = t13542 + t13544;
  t13555 = -0.007922875*t12401*t13550;
  t13559 = t12901*t9912;
  t13917 = t7888*t13916;
  t13930 = -1.*t13916*t8451;
  t13606 = -1.*t9866*t12901;
  t13614 = -1.*t9879*t12992;
  t13996 = t13792*t219;
  t13999 = t5657*t13907;
  t14002 = t13996 + t13999;
  t14004 = t5657*t13792;
  t14005 = -1.*t219*t13907;
  t14006 = t14004 + t14005;
  t13641 = t9956*t9980;
  t13643 = t9833*t10023;
  t13644 = t13641 + t13643;
  t13650 = t9956*t10081;
  t13652 = t9870*t10154;
  t13657 = t13650 + t13652;
  t13661 = -0.241*t12421*t13657;
  t13664 = t12889*t9980;
  t13944 = t13916*t8451;
  t13667 = t9866*t12901;
  t13671 = t9879*t12992;
  t13679 = t12901*t10023;
  t13949 = -1.*t13916*t8548;
  t13681 = -1.*t9866*t12889;
  t13683 = -1.*t9879*t12967;
  t13702 = t12889*t10081;
  t13957 = -1.*t7888*t13916;
  t13964 = t13916*t8548;
  t13716 = t9866*t12889;
  t13717 = t9879*t12967;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.081793755*t1199*(-1.*t113*t5718 - 1.*t5631*t702) - 1.527*t4369*(-1.*t4682*t702 + t113*t219*t728) + 0.00482*(t113*t219*t544 - 1.*t702*t728) - 1.*t7841*(-1.*t702*t7888 - 1.*t113*t8076) + 0.081793755*t1789*(-1.*t702*t8140 - 1.*t113*t8196) - 1.*t8341*(-1.*t702*t8451 - 1.*t113*t8483) - 1.*t8530*(-1.*t702*t8548 - 1.*t113*t8586))*var2[1] - 0.5*(0.081793755*t1789*(t113*t8140 - 1.*t702*t8196) + 0.00482*t8633 - 1.527*t4369*t8644 - 0.081793755*t1199*t8652 - 1.*t7841*(t8660 + t8661) - 1.*t8341*(t8700 + t8703) - 1.*t8530*(t8743 + t8744))*var2[2])*var2[12];
  p_output1[4]=(-0.5*(-0.00482*t219*t544 - 0.081793755*t1199*t5718 + 1.527*t219*t4369*t728 + t219*t7841*t8069 + 0.081793755*t1789*t8196 - 1.*t8341*t9309 - 1.*t8530*t9312)*var2[0] - 0.5*(0.00482*t544*t5657*t702 - 1.527*t4369*t5657*t702*t728 - 1.*t5657*t702*t7841*t8069 + 0.081793755*t1199*t702*t9167 - 0.081793755*t1789*t702*t9180 + t702*t8341*t9213 + t702*t8530*t9222)*var2[1] - 0.5*(-0.00482*t113*t544*t5657 + 1.527*t113*t4369*t5657*t728 + t113*t5657*t7841*t8069 - 0.081793755*t113*t1199*t9167 + 0.081793755*t113*t1789*t9180 - 1.*t113*t8341*t9213 - 1.*t113*t8530*t9222)*var2[2] - 0.5*(0.00482*(t5657*t728*(-1.*t5657*t9350 - 1.*t5657*t9362) + t219*(-1.*t219*t728*t9350 - 1.*t219*t728*t9362) - 1.*t219*t728*t9513 + t5657*(t5657*t728*t9362 - 1.*t219*t728*t9509 + t4682*t9532)) + 0.081793755*t1789*(t9591*(t219*t728*t9627 + t219*t728*t9636) + t5657*t728*(t5718*t9627 + t5718*t9636 + t9167*t9657 + t9591*t9657) + t5718*t9661 - 1.*t219*t728*t9684) - 0.081793755*t1199*((-1.*t219*t728*t9627 - 1.*t219*t728*t9636)*t9695 + t5657*t728*(-1.*t8196*t9627 - 1.*t8196*t9636 - 1.*t9180*t9657 - 1.*t9657*t9695) + t8196*t9708 - 1.*t219*t728*t9729) - 1.527*t4369*((-1.*t5718*t9627 - 1.*t5718*t9636 - 1.*t9167*t9657 - 1.*t9591*t9657)*t9695 + t9591*(t8196*t9627 + t8196*t9636 + t9180*t9657 + t9657*t9695) + t8196*t9791 + t5718*t9817) - 1.*t8530*(t9833*(t8076*t9856 - 1.*t219*t8069*t9866 + t9870*t9876 - 1.*t5657*t8069*t9879) + t9870*(-1.*t8483*t9856 - 1.*t9309*t9866 - 1.*t9833*t9876 - 1.*t9213*t9879) + t9309*t9912 - 1.*t219*t8069*t9937) - 1.*t8341*(-1.*t10154*t219*t8069 + t10081*t9312 + (-1.*t8076*t9856 + t219*t8069*t9866 - 1.*t9870*t9876 + t5657*t8069*t9879)*t9956 + t9870*(t8586*t9856 + t9312*t9866 + t9222*t9879 + t9876*t9956)) - 1.*t7841*(t10023*t9309 + (t8483*t9856 + t9309*t9866 + t9833*t9876 + t9213*t9879)*t9956 + t9833*(-1.*t8586*t9856 - 1.*t9312*t9866 - 1.*t9222*t9879 - 1.*t9876*t9956) + t9312*t9980))*var2[3])*var2[12];
  p_output1[5]=(-0.5*(0.00482*t10259*t5657 - 0.081793755*t10275*t1199*t5657 + 0.081793755*t10306*t1789*t5657 - 1.527*t4369*t544*t5657 - 1.*t10244*t5657*t7841 - 1.*t10314*t5657*t8341 - 1.*t10332*t5657*t8530)*var2[0] - 0.5*(0.00482*(t113*t544 + t10259*t219*t702) - 0.081793755*t1199*(t113*t5701 + t10275*t219*t702) - 1.*(t10344*t113 + t10244*t219*t702)*t7841 + 0.081793755*t1789*(t10306*t219*t702 + t113*t8191) - 1.*(t10404*t113 + t10314*t219*t702)*t8341 - 1.*(t10417*t113 + t10332*t219*t702)*t8530 - 1.527*t4369*t8633)*var2[1] - 0.5*(0.00482*(-1.*t10259*t113*t219 + t544*t702) - 0.081793755*t1199*(-1.*t10275*t113*t219 + t5701*t702) - 1.527*t4369*(-1.*t113*t219*t544 + t702*t728) - 1.*(-1.*t10244*t113*t219 + t10344*t702)*t7841 + 0.081793755*t1789*(-1.*t10306*t113*t219 + t702*t8191) - 1.*(-1.*t10314*t113*t219 + t10404*t702)*t8341 - 1.*(-1.*t10332*t113*t219 + t10417*t702)*t8530)*var2[2] - 0.5*(0.00482*(t544*t5657*t9513 + t219*(t11014*t11023*t728 + t11023*t11034*t728 + t4682*t9340 + t544*t5657*t9362 - 1.*t219*t544*t9509 + t728*t9532)) + 0.081793755*t1789*(t5657*t728*(t10535 + t10565 - 1.*t10559*t219*t5718 + t10559*t5657*t9591 + t10275*t5657*t9636 - 1.*t10275*t219*t9657) + t9591*(t10577 + t10587 - 1.*t10559*t11014*t728 - 1.*t10559*t11034*t728 - 1.*t544*t5657*t9636 + t219*t544*t9657) + t10275*t5657*t9661 + t544*t5657*t9684) - 0.081793755*t1199*((t10632 + t10635 + t10559*t11014*t728 + t10559*t11034*t728 + t544*t5657*t9636 - 1.*t219*t544*t9657)*t9695 + t5657*t728*(t10669 + t10673 + t10559*t219*t8196 - 1.*t10306*t5657*t9636 + t10306*t219*t9657 - 1.*t10559*t5657*t9695) + t10306*t5657*t9708 + t544*t5657*t9729) - 1.527*t4369*((t10696 + t10708 + t10559*t219*t5718 - 1.*t10559*t5657*t9591 - 1.*t10275*t5657*t9636 + t10275*t219*t9657)*t9695 + t9591*(t10734 + t10735 - 1.*t10559*t219*t8196 + t10306*t5657*t9636 - 1.*t10306*t219*t9657 + t10559*t5657*t9695) + t10306*t5657*t9791 + t10275*t5657*t9817) - 1.*t8530*(t9833*(t10761 + t10780 - 1.*t10774*t219*t8076 + t10244*t5657*t9866 + t10774*t5657*t9870 - 1.*t10244*t219*t9879) + t9870*(t10791 + t10799 + t10774*t219*t8483 - 1.*t10774*t5657*t9833 - 1.*t10314*t5657*t9866 + t10314*t219*t9879) + t10314*t5657*t9912 + t10244*t5657*t9937) - 1.*t8341*(t10154*t10244*t5657 + t10081*t10332*t5657 + (t10914 + t10920 + t10774*t219*t8076 - 1.*t10244*t5657*t9866 - 1.*t10774*t5657*t9870 + t10244*t219*t9879)*t9956 + t9870*(t10939 + t10953 - 1.*t10774*t219*t8586 + t10332*t5657*t9866 - 1.*t10332*t219*t9879 + t10774*t5657*t9956)) - 1.*t7841*(t10023*t10314*t5657 + (t10830 + t10836 - 1.*t10774*t219*t8483 + t10774*t5657*t9833 + t10314*t5657*t9866 - 1.*t10314*t219*t9879)*t9956 + t9833*(t10864 + t10870 + t10774*t219*t8586 - 1.*t10332*t5657*t9866 + t10332*t219*t9879 - 1.*t10774*t5657*t9956) + t10332*t5657*t9980))*var2[3] - 0.5*(0.00093701282*t728 - 1.527*t4369*(t10722*t5701 + t10717*t8191 + t8140*(t10696 + t10708 - 1.*t10559*t5701 - 1.*t10275*t9619) + t5631*(t10734 + t10735 + t10559*t8191 + t10306*t9619)) + 0.081793755*t1789*(t10526*t5701 + t10609*t728 + t4682*(t10535 + t10565 + t10559*t5701 + t10275*t9619) + t5631*(t10577 + t10587 - 1.*t10559*t728 - 1.*t544*t9619)) - 0.081793755*t1199*(t10659*t728 + t10626*t8191 + t4682*(t10669 + t10673 - 1.*t10559*t8191 - 1.*t10306*t9619) + t8140*(t10632 + t10635 + t10559*t728 + t544*t9619)) - 1.*t8530*(t10404*t10755 + t10344*t10818 + t8451*(t10761 + t10780 + t10774*t8069 + t10244*t9854) + t7888*(t10791 + t10799 - 1.*t10774*t8478 - 1.*t10314*t9854)) - 1.*t7841*(t10417*t10857 + t10404*t10880 + t8548*(t10830 + t10836 + t10774*t8478 + t10314*t9854) + t8451*(t10864 + t10870 - 1.*t10774*t8581 - 1.*t10332*t9854)) - 1.*t8341*(t10417*t10906 + t10344*t10985 + t8548*(t10914 + t10920 - 1.*t10774*t8069 - 1.*t10244*t9854) + t7888*(t10939 + t10953 + t10774*t8581 + t10332*t9854)))*var2[4])*var2[12];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=(-0.5*(-1.527*t4369*t4682*t5657 - 0.081793755*t1199*t5631*t5657 + 0.00482*t5657*t728 - 1.*t4682*t5657*t7841 + 0.081793755*t1789*t5657*t8140 - 1.*t11534*t5657*t8341 - 1.*t11544*t5657*t8530)*var2[0] - 0.5*(-1.527*(t10259*t113 + t11691)*t4369 - 0.081793755*t1199*(t113*t11594 + t219*t5631*t702) - 1.*(t113*t11565 + t11691)*t7841 + 0.081793755*t1789*(t113*t11614 + t219*t702*t8140) - 1.*(t113*t11641 + t11534*t219*t702)*t8341 - 1.*(t113*t11666 + t11544*t219*t702)*t8530 + 0.00482*t8644)*var2[1] - 0.5*(0.00482*t11581 - 1.527*t4369*(t11552 + t10259*t702) - 0.081793755*t1199*(-1.*t113*t219*t5631 + t11594*t702) - 1.*(t11552 + t11565*t702)*t7841 + 0.081793755*t1789*(t11614*t702 - 1.*t113*t219*t8140) - 1.*(-1.*t113*t11534*t219 + t11641*t702)*t8341 - 1.*(-1.*t113*t11544*t219 + t11666*t702)*t8530)*var2[2] - 0.5*(0.00482*(t4682*t5657*t9513 + t219*(t4682*(-0.02*t478*t518 - 0.02*t483*t520) + t11014*t12137*t728 + t11034*t12137*t728 + t4682*t5657*t9362 - 1.*t219*t4682*t9509 + t10259*t9532)) + 0.081793755*t1789*(t9591*(t11828 + t11830 - 1.*t11014*t11810*t728 - 1.*t11034*t11810*t728 - 1.*t4682*t5657*t9636 + t219*t4682*t9657) + t5657*t728*(t11804 + t11815 - 1.*t11810*t219*t5718 + t11810*t5657*t9591 + t5631*t5657*t9636 - 1.*t219*t5631*t9657) + t5631*t5657*t9661 + t4682*t5657*t9684) - 0.081793755*t1199*((t11848 + t11854 + t11014*t11810*t728 + t11034*t11810*t728 + t4682*t5657*t9636 - 1.*t219*t4682*t9657)*t9695 + t5657*t728*(t11869 + t11882 + t11810*t219*t8196 - 1.*t5657*t8140*t9636 + t219*t8140*t9657 - 1.*t11810*t5657*t9695) + t5657*t8140*t9708 + t4682*t5657*t9729) - 1.527*t4369*((t11910 + t11921 + t11810*t219*t5718 - 1.*t11810*t5657*t9591 - 1.*t5631*t5657*t9636 + t219*t5631*t9657)*t9695 + t9591*(t11933 + t11936 - 1.*t11810*t219*t8196 + t5657*t8140*t9636 - 1.*t219*t8140*t9657 + t11810*t5657*t9695) + t5657*t8140*t9791 + t5631*t5657*t9817) - 1.*t8530*(t9870*(t11993 + t12007 + t11983*t219*t8483 - 1.*t11983*t5657*t9833 - 1.*t11534*t5657*t9866 + t11534*t219*t9879) + t9833*(t11980 + t11985 - 1.*t11983*t219*t8076 + t4682*t5657*t9866 + t11983*t5657*t9870 - 1.*t219*t4682*t9879) + t11534*t5657*t9912 + t4682*t5657*t9937) - 1.*t8341*(t10081*t11544*t5657 + t10154*t4682*t5657 + (t12067 + t12072 + t11983*t219*t8076 - 1.*t4682*t5657*t9866 - 1.*t11983*t5657*t9870 + t219*t4682*t9879)*t9956 + t9870*(t12080 + t12086 - 1.*t11983*t219*t8586 + t11544*t5657*t9866 - 1.*t11544*t219*t9879 + t11983*t5657*t9956)) - 1.*t7841*(t10023*t11534*t5657 + (t12026 + t12034 - 1.*t11983*t219*t8483 + t11983*t5657*t9833 + t11534*t5657*t9866 - 1.*t11534*t219*t9879)*t9956 + t9833*(t12040 + t12047 + t11983*t219*t8586 - 1.*t11544*t5657*t9866 + t11544*t219*t9879 - 1.*t11983*t5657*t9956) + t11544*t5657*t9980))*var2[3] - 0.5*(0.00093701282*t10259 + 0.081793755*t1789*(t10259*t10609 + t10526*t11594 + t4682*(t10535 + t11804 + t11815 + t11810*t5701) + t5631*(t10577 + t11828 + t11830 - 1.*t11810*t728)) - 0.081793755*t1199*(t10259*t10659 + t10626*t11614 + (t10632 + t11848 + t11854 + t11810*t728)*t8140 + t4682*(t10673 + t11869 + t11882 - 1.*t11810*t8191)) - 1.527*t4369*(t10722*t11594 + t10717*t11614 + (t10696 + t11910 + t11921 - 1.*t11810*t5701)*t8140 + t5631*(t10735 + t11933 + t11936 + t11810*t8191)) - 1.*t7841*(t10880*t11641 + t10857*t11666 + t8548*(t12026 + t12034 + t11983*t8478 + t11534*t9854) + t8451*(t12040 + t12047 - 1.*t11983*t8581 - 1.*t11544*t9854)) - 1.*t8341*(t10985*t11565 + t10906*t11666 + t7888*(t12080 + t12086 + t11983*t8581 + t11544*t9854) + t8548*(t12067 + t12072 - 1.*t11983*t8069 - 1.*t4682*t9854)) - 1.*t8530*(t10818*t11565 + t10755*t11641 + t7888*(t11993 + t12007 - 1.*t11983*t8478 - 1.*t11534*t9854) + t8451*(t11980 + t11985 + t11983*t8069 + t4682*t9854)))*var2[4] - 0.5*(0.00482*(0.02*t483*t518 - 1.*t483*t9332) - 0.081793755*Power(t1199,2)*(-1.*t11361*t483 - 1.*t483*t9604) + 0.081793755*Power(t1789,2)*(t11361*t483 + t483*t9604) - 1.527*t4369*(t1199*(-1.*t11361*t1199*t518 - 1.*t1199*t518*t9604) + t1789*(-1.*t11361*t1789*t518 - 1.*t1789*t518*t9604)) - 1.*t7604*t8341*(-1.*t11443*t7861 + t483*t9841 + t518*t9850 - 1.*t7878*t9850) - 1.*t5994*t8530*(t11443*t7861 - 1.*t483*t9841 - 1.*t518*t9850 + t7878*t9850) - 1.*t7841*(t7604*(t11443*t8376 + t518*t7793*t9841 - 1.*t483*t7793*t9850 + t8438*t9850) + t5994*(-1.*t11443*t8534 - 1.*t518*t5994*t9841 + t483*t5994*t9850 - 1.*t8541*t9850)))*var2[5])*var2[12];
  p_output1[13]=var2[12]*(t12436 - 0.5*(t12890 + t12902 + t12909 + t12910 + 0.081793755*t12870*t1789 - 1.527*t12505*t5657*t728 + 0.081793755*t1789*t9591 - 0.241*t12604*t9870)*var2[0] - 0.5*(-0.241*t12604*t13040 + t13054 + t13067 + t13072 + t13075 + 0.081793755*t1789*(t10275*t113 - 1.*t12937*t702) - 1.527*t12505*t8644 + 0.081793755*t1789*t8652)*var2[1] - 0.5*(-1.527*t11581*t12505 - 0.241*t12604*t12946 + t12979 + t12996 + t13017 + t13025 + 0.081793755*t1789*(t113*t12937 + t10275*t702) + 0.081793755*t1789*(t113*t5718 + t5631*t702))*var2[2] - 0.5*(t13555 - 0.241*t12604*t13644 + t13661 + 0.081793755*t1199*(t9591*t9661 + t5657*t728*t9684) - 0.081793755*t1199*((t13162 - 1.*t13440*t219*t728 + t13426*t5657*t728)*t9695 + t5657*t728*(t13180 + t13188 - 1.*t13440*t8196 - 1.*t12870*t9636 - 1.*t12937*t9657 - 1.*t13426*t9695) + t12870*t9708) + 0.081793755*t1789*(t9695*t9708 + t5657*t728*t9729) + 0.081793755*t1789*((t13130 + t13440*t219*t728 - 1.*t13426*t5657*t728)*t9591 + t9661*t9695 + t5657*t728*(t13143 + t13440*t5718 + t13426*t9591 + t9813 + t9815 + t9816)) - 1.527*t12505*(t9695*t9791 + t9591*t9817) - 1.527*t4369*(t9591*(t13221 + t13230 + t13440*t8196 + t12870*t9636 + t12937*t9657 + t13426*t9695) + t9695*(t13213 - 1.*t13440*t5718 - 1.*t13426*t9591 + t9724 + t9726 + t9727) + t12870*t9791 + t9695*t9817) - 1.*t8530*(t13559 + (t13281 + t13286 + t13606 + t13614 - 1.*t13590*t8483 - 1.*t13574*t9833)*t9870 + t9833*(t13262 + t13590*t8076 + t13574*t9870)) - 1.*t7841*(t13664 + t13679 + (t13312 + t13315 + t13667 + t13671 + t13590*t8483 + t13574*t9833)*t9956 + t9833*(t13328 + t13331 + t13681 + t13683 - 1.*t13590*t8586 - 1.*t13574*t9956)) - 1.*t8341*(t13702 + (t13352 - 1.*t13590*t8076 - 1.*t13574*t9870)*t9956 + t9870*(t13366 + t13371 + t13716 + t13717 + t13590*t8586 + t13574*t9956)))*var2[3] - 0.5*(t13246 - 0.241*t12604*t13298 + t13308 + 0.081793755*t1199*(t10609*t4682 + t10526*t5631) + 0.081793755*t1789*(t10659*t4682 + t10626*t8140) - 1.527*t12505*(t10722*t5631 + t10717*t8140) - 1.*(t13248 + (t13262 + t13253*t8069)*t8451 + t7888*(t13274 + t13280 + t13281 + t13286 - 1.*t12533*t5994 - 1.*t13253*t8478))*t8530 - 1.*t7841*(t13309 + t13326 + (t12581 + t12592 + t13311 + t13312 + t13315 + t13253*t8478)*t8548 + t8451*(t12536 + t12542 + t13327 + t13328 + t13331 - 1.*t13253*t8581)) - 1.*t8341*(t13345 + (t13352 - 1.*t13253*t8069)*t8548 + t7888*(t13361 + t13363 + t13366 + t13371 + t12533*t7604 + t13253*t8581)) - 0.081793755*t1199*(t10275*t10626 + (t13162 + t13119*t728)*t8140 + t4682*(t10603 + t13180 + t13188 + t1797 - 1.*t13119*t8191 - 1.*t11594*t9619)) - 1.527*t4369*(t10275*t10717 + t10722*t8140 + t5631*(t12700 + t13221 + t13230 + t3722 + t13119*t8191 + t11594*t9619) + t8140*(t10656 + t10658 + t13213 + t3771 - 1.*t13119*t5701 + t9724)) + 0.081793755*t1789*(t5631*(t13130 - 1.*t13119*t728) + t10526*t8140 + t4682*(t10721 + t13143 + t1789*t1795 + t3752 + t13119*t5701 + t9813)))*var2[4] - 0.5*(t12724 + t12740 - 0.241*t12604*t12783 - 1.527*t12505*(t1199*t12654 + t12641*t1789) - 1.*(t12748 + t7604*(-1.*t12551*t518*t7861 - 1.*t12551*t483*t7878))*t8341 - 1.*(t12754 + t5994*(t12551*t518*t7861 + t12551*t483*t7878))*t8530 - 1.*t7841*(t12786 + t12810 + t7604*(t12581 + t12592 + t12793 + t12794 + t12551*t518*t8376 + t12551*t483*t8438) + t5994*(t12536 + t12542 + t12815 + t12826 - 1.*t12551*t518*t8534 - 1.*t12551*t483*t8541)) + 0.16358751*t1199*t1789*(t518*t9604 - 1.*t483*t9616) + 0.16358751*t1199*t1789*(-1.*t518*t9604 + t483*t9616) - 1.527*t4369*(t1199*t12641 - 1.*t12654*t1789 + t1789*(t12649 + t12653 + t12700 - 1.*t12482*t12676*t1789 - 1.*t12482*t12683*t1789 + t3722) + t1199*(t10656 - 1.*t1199*t12482*t12676 - 1.*t1199*t12482*t12683 + t3771 + t1789*t483*t9604 + t1789*t518*t9616)))*var2[5] - 0.5*(t12510 + t12512 + t12516 + t12523 - 3.054*t12505*t4369 - 0.241*t12604*t7822 - 1.*t12604*t7841)*var2[12] - 0.5*(-0.0032717502*t1199 + t12460 + t12474 + 0.0032717502*t1789)*var2[13]);
  p_output1[14]=var2[12]*(t12436 - 0.5*(t12890 + t12902 + t12909 + t12910 - 0.241*t13819*t9870)*var2[0] - 0.5*(t13054 + t13067 + t13072 + t13075 - 0.241*t13040*t13819)*var2[1] - 0.5*(t12979 + t12996 + t13017 + t13025 - 0.241*t12946*t13819)*var2[2] - 0.5*(t13555 + t13661 - 0.241*t13644*t13819 - 1.*t8530*(t13559 + (t13281 + t13606 + t13614 + t13930 - 1.*t14006*t8483 - 1.*t14002*t9833)*t9870 + t9833*(t13917 + t14006*t8076 + t14002*t9870)) - 1.*t7841*(t13664 + t13679 + (t13312 + t13667 + t13671 + t13944 + t14006*t8483 + t14002*t9833)*t9956 + t9833*(t13328 + t13681 + t13683 + t13949 - 1.*t14006*t8586 - 1.*t14002*t9956)) - 1.*t8341*(t13702 + (t13957 - 1.*t14006*t8076 - 1.*t14002*t9870)*t9956 + t9870*(t13366 + t13716 + t13717 + t13964 + t14006*t8586 + t14002*t9956)))*var2[3] - 0.5*(t13246 + t13308 - 0.241*t13298*t13819 - 1.*(t13248 + (t13917 + t13907*t8069)*t8451 + t7888*(t13274 + t13280 + t13281 + t13930 - 1.*t13792*t5994 - 1.*t13907*t8478))*t8530 - 1.*t7841*(t13309 + t13326 + (t12581 + t13311 + t13312 + t13813 + t13944 + t13907*t8478)*t8548 + t8451*(t12542 + t13327 + t13328 + t13793 + t13949 - 1.*t13907*t8581)) - 1.*t8341*(t13345 + (t13957 - 1.*t13907*t8069)*t8548 + t7888*(t13361 + t13363 + t13366 + t13964 + t13792*t7604 + t13907*t8581)))*var2[4] - 0.5*(t12724 + t12740 - 0.241*t12783*t13819 - 1.*(t12748 + t7604*(-1.*t13800*t518*t7861 - 1.*t13800*t483*t7878))*t8341 - 1.*(t12754 + t5994*(t13800*t518*t7861 + t13800*t483*t7878))*t8530 - 1.*t7841*(t12786 + t12810 + t7604*(t12581 + t12793 + t12794 + t13813 + t13800*t518*t8376 + t13800*t483*t8438) + t5994*(t12542 + t12815 + t12826 + t13793 - 1.*t13800*t518*t8534 - 1.*t13800*t483*t8541)))*var2[5] - 0.5*(t12510 + t12512 + t12516 + t12523 - 0.241*t13819*t7822 - 1.*t13819*t7841)*var2[12] - 0.5*(t12460 + t12474 - 1.*(0.194401*t5829 + t13758*t5829 + t13769*t5909 + t5829*t6135 - 1.*t5909*t7243)*t8341 - 1.*(t12462 + t12465 + t12472 - 1.*t13769*t5829 + t13758*t5909)*t8530)*var2[13]);
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec13_plane.hh"

namespace SymFunction
{

void Ce3_vec13_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
