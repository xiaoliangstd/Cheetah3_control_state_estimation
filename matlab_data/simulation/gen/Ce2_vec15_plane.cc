/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:11:54 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t180;
  double t246;
  double t93;
  double t290;
  double t476;
  double t508;
  double t515;
  double t335;
  double t409;
  double t423;
  double t435;
  double t573;
  double t685;
  double t697;
  double t744;
  double t577;
  double t921;
  double t931;
  double t932;
  double t945;
  double t960;
  double t970;
  double t982;
  double t1010;
  double t1021;
  double t1023;
  double t203;
  double t294;
  double t330;
  double t1066;
  double t1071;
  double t1084;
  double t1100;
  double t890;
  double t893;
  double t906;
  double t972;
  double t1035;
  double t1043;
  double t1106;
  double t1048;
  double t1052;
  double t1055;
  double t1177;
  double t1185;
  double t1191;
  double t1200;
  double t1211;
  double t1267;
  double t1295;
  double t1301;
  double t1151;
  double t1190;
  double t1239;
  double t1246;
  double t402;
  double t561;
  double t597;
  double t614;
  double t618;
  double t623;
  double t663;
  double t764;
  double t765;
  double t808;
  double t835;
  double t843;
  double t1710;
  double t1713;
  double t1727;
  double t1737;
  double t1745;
  double t1746;
  double t1753;
  double t1775;
  double t1787;
  double t1788;
  double t2081;
  double t2083;
  double t2086;
  double t1799;
  double t1800;
  double t1801;
  double t1812;
  double t1817;
  double t1878;
  double t1879;
  double t1916;
  double t1926;
  double t1985;
  double t1165;
  double t1437;
  double t1460;
  double t2333;
  double t2338;
  double t2343;
  double t2357;
  double t2362;
  double t2370;
  double t2378;
  double t2383;
  double t2433;
  double t1060;
  double t1260;
  double t1263;
  double t1501;
  double t1504;
  double t1514;
  double t1517;
  double t1527;
  double t1530;
  double t1534;
  double t1538;
  double t2642;
  double t2646;
  double t2654;
  double t2616;
  double t2623;
  double t2625;
  double t2856;
  double t2880;
  double t2859;
  double t2860;
  double t2861;
  double t2882;
  double t2886;
  double t2895;
  double t2924;
  double t2948;
  double t2955;
  double t2963;
  double t2984;
  double t2988;
  double t3001;
  double t3009;
  double t3014;
  double t3016;
  double t3032;
  double t3033;
  double t3044;
  double t3047;
  double t3048;
  double t3055;
  double t3078;
  double t3081;
  double t3400;
  double t3413;
  double t3444;
  double t3364;
  double t3394;
  double t3395;
  double t3506;
  double t3554;
  double t3634;
  double t3396;
  double t3695;
  double t3758;
  double t4565;
  double t4573;
  double t4635;
  double t4836;
  double t4938;
  double t5029;
  double t5585;
  double t5632;
  double t5641;
  double t4099;
  double t10214;
  double t10277;
  double t10312;
  double t10341;
  double t10367;
  double t10381;
  double t10323;
  double t10328;
  double t10332;
  double t10407;
  double t10413;
  double t5070;
  double t5376;
  double t5461;
  double t10571;
  double t10572;
  double t10573;
  double t10582;
  double t10591;
  double t10607;
  double t5987;
  double t6513;
  double t6826;
  double t7353;
  double t8676;
  double t9215;
  double t9268;
  double t10674;
  double t10679;
  double t10690;
  double t10015;
  double t10097;
  double t10150;
  double t3111;
  double t3119;
  double t3128;
  double t3133;
  double t3134;
  double t3137;
  double t1116;
  double t1120;
  double t1123;
  double t1159;
  double t1168;
  double t1172;
  double t1173;
  double t1308;
  double t1366;
  double t1391;
  double t1456;
  double t1470;
  double t1476;
  double t1477;
  double t1492;
  double t1547;
  double t1556;
  double t1568;
  double t1574;
  double t1626;
  double t1658;
  double t1675;
  double t1699;
  double t3157;
  double t3163;
  double t3200;
  double t3227;
  double t3235;
  double t3243;
  double t2026;
  double t2056;
  double t2064;
  double t2066;
  double t2092;
  double t2106;
  double t2108;
  double t2115;
  double t2124;
  double t2126;
  double t2156;
  double t2258;
  double t2295;
  double t2310;
  double t2349;
  double t2442;
  double t2451;
  double t2474;
  double t2514;
  double t2516;
  double t2536;
  double t2537;
  double t2547;
  double t2561;
  double t2568;
  double t2570;
  double t2574;
  double t2581;
  double t2587;
  double t2593;
  double t2596;
  double t2599;
  double t2602;
  double t2608;
  double t2609;
  double t11073;
  double t11079;
  double t11080;
  double t2627;
  double t2631;
  double t2661;
  double t2672;
  double t2707;
  double t2724;
  double t2748;
  double t2763;
  double t2764;
  double t2766;
  double t2779;
  double t2785;
  double t2809;
  double t2822;
  double t2823;
  double t2824;
  double t3132;
  double t3151;
  double t3222;
  double t3259;
  double t3301;
  double t3015;
  double t3035;
  double t3039;
  double t2959;
  double t2992;
  double t2996;
  double t3051;
  double t3087;
  double t3088;
  double t2879;
  double t2903;
  double t2904;
  double t3810;
  double t3875;
  double t4060;
  double t4108;
  double t4141;
  double t4233;
  double t4306;
  double t4659;
  double t5093;
  double t5153;
  double t5184;
  double t5291;
  double t5343;
  double t5377;
  double t5466;
  double t5515;
  double t5579;
  double t5678;
  double t5711;
  double t5754;
  double t6039;
  double t6077;
  double t6322;
  double t6463;
  double t6583;
  double t6584;
  double t6644;
  double t6834;
  double t8129;
  double t8551;
  double t8657;
  double t8727;
  double t8769;
  double t8991;
  double t9226;
  double t9324;
  double t9325;
  double t9444;
  double t9947;
  double t10007;
  double t10037;
  double t10043;
  double t10077;
  double t10078;
  double t10096;
  double t10145;
  double t10172;
  double t10173;
  double t10179;
  double t10460;
  double t10529;
  double t10532;
  double t10543;
  double t10547;
  double t10553;
  double t10560;
  double t10575;
  double t10612;
  double t10622;
  double t10627;
  double t10635;
  double t10644;
  double t10647;
  double t10650;
  double t10652;
  double t10654;
  double t10660;
  double t10691;
  double t10699;
  double t10700;
  double t10717;
  double t10725;
  double t10726;
  double t10744;
  double t10761;
  double t10782;
  double t10790;
  double t10843;
  double t10845;
  double t10856;
  double t10863;
  double t10864;
  double t10879;
  double t10880;
  double t10891;
  double t10895;
  double t10902;
  double t10910;
  double t10911;
  double t10925;
  double t10926;
  double t10931;
  double t10936;
  double t10942;
  double t10949;
  double t10957;
  double t10958;
  double t10963;
  double t10964;
  double t10967;
  double t10968;
  double t10973;
  double t10974;
  double t10975;
  double t11000;
  double t11009;
  double t11315;
  double t11330;
  double t11333;
  double t2920;
  double t2998;
  double t3040;
  double t3097;
  double t3105;
  double t11182;
  double t11190;
  double t11191;
  double t11194;
  double t11196;
  double t11627;
  double t11630;
  double t11635;
  double t10559;
  double t10670;
  double t10728;
  double t10947;
  double t11010;
  double t11026;
  double t11535;
  double t11536;
  double t11543;
  double t11544;
  double t11550;
  double t11551;
  double t11251;
  double t11254;
  double t11256;
  double t11262;
  double t11267;
  double t11268;
  double t11757;
  double t11761;
  double t11763;
  double t11646;
  double t11647;
  double t11650;
  double t11695;
  double t11696;
  double t11698;
  double t4289;
  double t5580;
  double t6460;
  double t9588;
  double t10180;
  double t10193;
  double t11500;
  double t11501;
  double t11513;
  double t11514;
  double t11520;
  double t11522;
  double t11221;
  double t11227;
  double t11235;
  double t11236;
  double t11237;
  double t11238;
  double t11742;
  double t11744;
  double t11745;
  double t11756;
  double t11768;
  double t11774;
  double t11775;
  double t12100;
  double t12108;
  double t12116;
  double t12132;
  double t12161;
  double t12163;
  double t2612;
  double t2770;
  double t2828;
  double t11407;
  double t11430;
  double t11437;
  double t11131;
  double t11141;
  double t11151;
  double t11904;
  double t11917;
  double t11918;
  double t11687;
  double t11693;
  double t11694;
  double t12372;
  double t12373;
  double t12376;
  double t12377;
  double t12429;
  double t12430;
  double t1540;
  double t1791;
  double t1993;
  double t11348;
  double t11360;
  double t11365;
  double t11096;
  double t11099;
  double t11100;
  double t11878;
  double t11886;
  double t11888;
  double t11620;
  double t11642;
  double t11644;
  double t12536;
  double t12539;
  double t12543;
  double t12548;
  double t2194;
  double t2317;
  double t11379;
  double t11380;
  double t11116;
  double t11121;
  double t11862;
  double t11866;
  double t11601;
  double t11610;
  double t12522;
  double t12523;
  double t12524;
  double t12074;
  double t12075;
  double t12078;
  double t12363;
  double t651;
  double t847;
  double t867;
  double t11284;
  double t11286;
  double t11306;
  double t11046;
  double t11054;
  double t11055;
  double t11834;
  double t11835;
  double t11855;
  double t11572;
  double t11577;
  double t11585;
  t180 = Cos(var1[14]);
  t246 = Sin(var1[13]);
  t93 = Cos(var1[13]);
  t290 = Sin(var1[14]);
  t476 = -1.*t180*t246;
  t508 = -1.*t93*t290;
  t515 = t476 + t508;
  t335 = Sin(var1[4]);
  t409 = Cos(var1[4]);
  t423 = Cos(var1[5]);
  t435 = Sin(var1[12]);
  t573 = Cos(var1[12]);
  t685 = -1.*t93*t180;
  t697 = t246*t290;
  t744 = t685 + t697;
  t577 = Sin(var1[5]);
  t921 = -1.*t180;
  t931 = 1. + t921;
  t932 = -0.336601*t931;
  t945 = -0.356601*t180;
  t960 = -0.16*t290;
  t970 = 0. + t932 + t945 + t960;
  t982 = -0.20833*t931;
  t1010 = -0.36833*t180;
  t1021 = 0.020000000000000018*t290;
  t1023 = 0. + t982 + t1010 + t1021;
  t203 = t93*t180;
  t294 = -1.*t246*t290;
  t330 = t203 + t294;
  t1066 = -0.194401*t246;
  t1071 = -1.*t246*t970;
  t1084 = t93*t1023;
  t1100 = 0. + t1066 + t1071 + t1084;
  t890 = -1.*t93;
  t893 = 1. + t890;
  t906 = -0.194401*t893;
  t972 = t93*t970;
  t1035 = t246*t1023;
  t1043 = 0. + t906 + t972 + t1035;
  t1106 = 0. + t203 + t294;
  t1048 = t180*t246;
  t1052 = t93*t290;
  t1055 = 0. + t1048 + t1052;
  t1177 = -0.16*t180;
  t1185 = t1177 + t1021;
  t1191 = 0.020000000000000018*t180;
  t1200 = 0.16*t290;
  t1211 = t1191 + t1200;
  t1267 = -1.*t246*t1185;
  t1295 = t93*t1211;
  t1301 = t1267 + t1295;
  t1151 = 0. + t476 + t508;
  t1190 = t93*t1185;
  t1239 = t246*t1211;
  t1246 = t1190 + t1239;
  t402 = t330*t335;
  t561 = t423*t435*t515;
  t597 = -1.*t573*t515*t577;
  t614 = t561 + t597;
  t618 = t409*t614;
  t623 = t402 + t618;
  t663 = t515*t335;
  t764 = t423*t435*t744;
  t765 = -1.*t573*t744*t577;
  t808 = t764 + t765;
  t835 = t409*t808;
  t843 = t663 + t835;
  t1710 = t1106*t335;
  t1713 = t435*t1151;
  t1727 = 0. + t1713;
  t1737 = t423*t1727;
  t1745 = t573*t1151;
  t1746 = 0. + t1745;
  t1753 = -1.*t1746*t577;
  t1775 = 0. + t1737 + t1753;
  t1787 = t409*t1775;
  t1788 = 0. + t1710 + t1787;
  t2081 = t180*t1023;
  t2083 = 0.194401*t290;
  t2086 = t970*t290;
  t1799 = t1055*t335;
  t1800 = t435*t1106;
  t1801 = 0. + t1800;
  t1812 = t423*t1801;
  t1817 = t573*t1106;
  t1878 = 0. + t1817;
  t1879 = -1.*t1878*t577;
  t1916 = 0. + t1812 + t1879;
  t1926 = t409*t1916;
  t1985 = 0. + t1799 + t1926;
  t1165 = t1043*t1106;
  t1437 = t1043*t515;
  t1460 = t1246*t1106;
  t2333 = 0.032875*t435;
  t2338 = t573*t1100;
  t2343 = t2333 + t2338;
  t2357 = -1.*t573;
  t2362 = 1. + t2357;
  t2370 = -0.081715*t2362;
  t2378 = -0.11459*t573;
  t2383 = t435*t1100;
  t2433 = t2370 + t2378 + t2383;
  t1060 = -1.*t1043*t1055;
  t1260 = -1.*t1246*t1055;
  t1263 = -1.*t1043*t330;
  t1501 = 0. + t573;
  t1504 = t1501*t423;
  t1514 = -1.*t435;
  t1517 = 0. + t1514;
  t1527 = -1.*t1517*t577;
  t1530 = 0. + t1504 + t1527;
  t1534 = t409*t1530;
  t1538 = 0. + t1534;
  t2642 = -1.*t1517*t2343;
  t2646 = -1.*t1501*t2433;
  t2654 = 0. + t2642 + t2646;
  t2616 = t1517*t2343;
  t2623 = t1501*t2433;
  t2625 = 0. + t2616 + t2623;
  t2856 = Sin(var1[3]);
  t2880 = Cos(var1[3]);
  t2859 = t573*t423*t515;
  t2860 = t435*t515*t577;
  t2861 = t2859 + t2860;
  t2882 = t409*t330;
  t2886 = -1.*t335*t614;
  t2895 = t2882 + t2886;
  t2924 = t573*t423*t744;
  t2948 = t435*t744*t577;
  t2955 = t2924 + t2948;
  t2963 = t409*t515;
  t2984 = -1.*t335*t808;
  t2988 = t2963 + t2984;
  t3001 = t423*t1746;
  t3009 = t1727*t577;
  t3014 = 0. + t3001 + t3009;
  t3016 = t409*t1106;
  t3032 = -1.*t335*t1775;
  t3033 = 0. + t3016 + t3032;
  t3044 = t423*t1878;
  t3047 = t1801*t577;
  t3048 = 0. + t3044 + t3047;
  t3055 = t409*t1055;
  t3078 = -1.*t335*t1916;
  t3081 = 0. + t3055 + t3078;
  t3400 = t423*t1517;
  t3413 = t1501*t577;
  t3444 = 0. + t3400 + t3413;
  t3364 = t423*t2433;
  t3394 = -1.*t2343*t577;
  t3395 = 0. + t3364 + t3394;
  t3506 = t423*t2343;
  t3554 = t2433*t577;
  t3634 = 0. + t3506 + t3554;
  t3396 = t1530*t3395;
  t3695 = t3444*t3634;
  t3758 = 0. + t3396 + t3695;
  t4565 = t423*t435*t1301;
  t4573 = -1.*t573*t1301*t577;
  t4635 = t4565 + t4573;
  t4836 = t573*t423*t1301;
  t4938 = t435*t1301*t577;
  t5029 = t4836 + t4938;
  t5585 = -1.*t1530*t3395;
  t5632 = -1.*t3444*t3634;
  t5641 = 0. + t5585 + t5632;
  t4099 = -1.*t3634*t3014;
  t10214 = t1043*t335;
  t10277 = t409*t3395;
  t10312 = 0. + t10214 + t10277;
  t10341 = t409*t1043;
  t10367 = -1.*t335*t3395;
  t10381 = 0. + t10341 + t10367;
  t10323 = t1538*t10312;
  t10328 = -1.*t335*t1530;
  t10332 = 0. + t10328;
  t10407 = t10332*t10381;
  t10413 = t3695 + t10323 + t10407;
  t5070 = t3444*t5029;
  t5376 = -1.*t3634*t2955;
  t5461 = -1.*t5029*t3014;
  t10571 = t1246*t335;
  t10572 = t409*t4635;
  t10573 = t10571 + t10572;
  t10582 = t409*t1246;
  t10591 = -1.*t335*t4635;
  t10607 = t10582 + t10591;
  t5987 = t3634*t3048;
  t6513 = t3634*t3014;
  t6826 = t3634*t2955;
  t7353 = t5029*t3014;
  t8676 = -1.*t3634*t3048;
  t9215 = -1.*t3634*t2861;
  t9268 = -1.*t5029*t3048;
  t10674 = -1.*t1538*t10312;
  t10679 = -1.*t10332*t10381;
  t10690 = t5632 + t10674 + t10679;
  t10015 = -1.*t3444*t5029;
  t10097 = t3634*t2861;
  t10150 = t5029*t3048;
  t3111 = t2880*t2861;
  t3119 = -1.*t2856*t2895;
  t3128 = t3111 + t3119;
  t3133 = t2880*t2955;
  t3134 = -1.*t2856*t2988;
  t3137 = t3133 + t3134;
  t1116 = -1.*t1100*t1106;
  t1120 = 0. + t1060 + t1116;
  t1123 = -1.*t515*t1120;
  t1159 = t1100*t1151;
  t1168 = 0. + t1159 + t1165;
  t1172 = -1.*t330*t1168;
  t1173 = -1.*t1100*t515;
  t1308 = -1.*t1301*t1106;
  t1366 = t1173 + t1260 + t1263 + t1308;
  t1391 = -1.*t1106*t1366;
  t1456 = t1301*t1151;
  t1470 = t1100*t744;
  t1476 = t1437 + t1456 + t1460 + t1470;
  t1477 = -1.*t1055*t1476;
  t1492 = t1123 + t1172 + t1391 + t1477;
  t1547 = 0.032875*t1106;
  t1556 = 0. + t1547;
  t1568 = -0.081715*t1151;
  t1574 = -0.11459*t1055;
  t1626 = 0. + t1568 + t1574;
  t1658 = -0.11459*t330;
  t1675 = -0.081715*t744;
  t1699 = t1658 + t1675;
  t3157 = t2880*t3014;
  t3163 = -1.*t2856*t3033;
  t3200 = 0. + t3157 + t3163;
  t3227 = t2880*t3048;
  t3235 = -1.*t2856*t3081;
  t3243 = 0. + t3227 + t3235;
  t2026 = -0.194401*t180;
  t2056 = -1.*t180*t970;
  t2064 = t1023*t290;
  t2066 = 0. + t2026 + t2056 + t2064;
  t2092 = 0. + t2081 + t2083 + t2086;
  t2106 = 0.194401*t180;
  t2108 = t180*t970;
  t2115 = t180*t1211;
  t2124 = -1.*t1023*t290;
  t2126 = t1185*t290;
  t2156 = t2106 + t2108 + t2115 + t2124 + t2126;
  t2258 = -1.*t180*t1185;
  t2295 = t1211*t290;
  t2310 = t2081 + t2258 + t2083 + t2086 + t2295;
  t2349 = t2343*t1746;
  t2442 = t2433*t1727;
  t2451 = t1165 + t2349 + t2442;
  t2474 = t330*t2451;
  t2514 = t573*t2343*t744;
  t2516 = t435*t2433*t744;
  t2536 = t573*t1301*t1746;
  t2537 = t435*t1301*t1727;
  t2547 = t1437 + t1460 + t2514 + t2516 + t2536 + t2537;
  t2561 = t1055*t2547;
  t2568 = -1.*t2343*t1878;
  t2570 = -1.*t2433*t1801;
  t2574 = t1060 + t2568 + t2570;
  t2581 = t515*t2574;
  t2587 = -1.*t573*t2343*t515;
  t2593 = -1.*t435*t2433*t515;
  t2596 = -1.*t573*t1301*t1878;
  t2599 = -1.*t435*t1301*t1801;
  t2602 = t2587 + t2593 + t1260 + t1263 + t2596 + t2599;
  t2608 = t1106*t2602;
  t2609 = t2474 + t2561 + t2581 + t2608;
  t11073 = t2880*t3444;
  t11079 = -1.*t2856*t10332;
  t11080 = 0. + t11073 + t11079;
  t2627 = t2625*t1106;
  t2631 = 0. + t2627;
  t2661 = t2654*t1055;
  t2672 = 0. + t2661;
  t2707 = -1.*t573*t1517*t1301;
  t2724 = -1.*t1501*t435*t1301;
  t2748 = t2707 + t2724;
  t2763 = t2748*t1055;
  t2764 = t2654*t330;
  t2766 = t2763 + t2764;
  t2779 = t2625*t515;
  t2785 = t573*t1517*t1301;
  t2809 = t1501*t435*t1301;
  t2822 = t2785 + t2809;
  t2823 = t2822*t1106;
  t2824 = t2779 + t2823;
  t3132 = 0.241*t1985*t3128;
  t3151 = 0.241*t1788*t3137;
  t3222 = 0.241*t843*t3200;
  t3259 = 0.241*t623*t3243;
  t3301 = t3132 + t3151 + t3222 + t3259;
  t3015 = t2856*t3014;
  t3035 = t2880*t3033;
  t3039 = 0. + t3015 + t3035;
  t2959 = t2856*t2955;
  t2992 = t2880*t2988;
  t2996 = t2959 + t2992;
  t3051 = t2856*t3048;
  t3087 = t2880*t3081;
  t3088 = 0. + t3051 + t3087;
  t2879 = t2856*t2861;
  t2903 = t2880*t2895;
  t2904 = t2879 + t2903;
  t3810 = t3014*t3758;
  t3875 = -1.*t1043*t1106;
  t4060 = -1.*t3395*t1775;
  t4108 = t3875 + t4060 + t4099;
  t4141 = t3444*t4108;
  t4233 = t3810 + t4141;
  t4306 = t2955*t3758;
  t4659 = t1530*t4635;
  t5093 = t4659 + t5070;
  t5153 = t3014*t5093;
  t5184 = -1.*t1043*t515;
  t5291 = -1.*t1246*t1106;
  t5343 = -1.*t3395*t808;
  t5377 = -1.*t4635*t1775;
  t5466 = t5184 + t5291 + t5343 + t5376 + t5377 + t5461;
  t5515 = t3444*t5466;
  t5579 = t4306 + t5153 + t5515;
  t5678 = t3048*t5641;
  t5711 = t1043*t1055;
  t5754 = t3395*t1916;
  t6039 = t5711 + t5754 + t5987;
  t6077 = t3444*t6039;
  t6322 = t5678 + t6077;
  t6463 = t3395*t1775;
  t6583 = t1165 + t6463 + t6513;
  t6584 = t2861*t6583;
  t6644 = t3395*t808;
  t6834 = t4635*t1775;
  t8129 = t1437 + t1460 + t6644 + t6826 + t6834 + t7353;
  t8551 = t3048*t8129;
  t8657 = -1.*t3395*t1916;
  t8727 = t1060 + t8657 + t8676;
  t8769 = t2955*t8727;
  t8991 = -1.*t3395*t614;
  t9226 = -1.*t4635*t1916;
  t9324 = t1260 + t1263 + t8991 + t9215 + t9226 + t9268;
  t9325 = t3014*t9324;
  t9444 = t6584 + t8551 + t8769 + t9325;
  t9947 = t2861*t5641;
  t10007 = -1.*t1530*t4635;
  t10037 = t10007 + t10015;
  t10043 = t3048*t10037;
  t10077 = t1246*t1055;
  t10078 = t1043*t330;
  t10096 = t3395*t614;
  t10145 = t4635*t1916;
  t10172 = t10077 + t10078 + t10096 + t10097 + t10145 + t10150;
  t10173 = t3444*t10172;
  t10179 = t9947 + t10043 + t10173;
  t10460 = t1788*t10413;
  t10529 = -1.*t10312*t1788;
  t10532 = -1.*t10381*t3033;
  t10543 = t4099 + t10529 + t10532;
  t10547 = t1538*t10543;
  t10553 = t10460 + t10547;
  t10560 = t843*t10413;
  t10575 = t1538*t10573;
  t10612 = t10332*t10607;
  t10622 = t5070 + t10575 + t10612;
  t10627 = t1788*t10622;
  t10635 = -1.*t10312*t843;
  t10644 = -1.*t10381*t2988;
  t10647 = -1.*t10573*t1788;
  t10650 = -1.*t10607*t3033;
  t10652 = t5376 + t5461 + t10635 + t10644 + t10647 + t10650;
  t10654 = t1538*t10652;
  t10660 = t10560 + t10627 + t10654;
  t10691 = t1985*t10690;
  t10699 = t10312*t1985;
  t10700 = t10381*t3081;
  t10717 = t5987 + t10699 + t10700;
  t10725 = t1538*t10717;
  t10726 = t10691 + t10725;
  t10744 = t10312*t1788;
  t10761 = t10381*t3033;
  t10782 = t6513 + t10744 + t10761;
  t10790 = t623*t10782;
  t10843 = t10312*t843;
  t10845 = t10381*t2988;
  t10856 = t10573*t1788;
  t10863 = t10607*t3033;
  t10864 = t6826 + t7353 + t10843 + t10845 + t10856 + t10863;
  t10879 = t1985*t10864;
  t10880 = -1.*t10312*t1985;
  t10891 = -1.*t10381*t3081;
  t10895 = t8676 + t10880 + t10891;
  t10902 = t843*t10895;
  t10910 = -1.*t10312*t623;
  t10911 = -1.*t10381*t2895;
  t10925 = -1.*t10573*t1985;
  t10926 = -1.*t10607*t3081;
  t10931 = t9215 + t9268 + t10910 + t10911 + t10925 + t10926;
  t10936 = t1788*t10931;
  t10942 = t10790 + t10879 + t10902 + t10936;
  t10949 = t623*t10690;
  t10957 = -1.*t1538*t10573;
  t10958 = -1.*t10332*t10607;
  t10963 = t10015 + t10957 + t10958;
  t10964 = t1985*t10963;
  t10967 = t10312*t623;
  t10968 = t10381*t2895;
  t10973 = t10573*t1985;
  t10974 = t10607*t3081;
  t10975 = t10097 + t10150 + t10967 + t10968 + t10973 + t10974;
  t11000 = t1538*t10975;
  t11009 = t10949 + t10964 + t11000;
  t11315 = t2856*t3444;
  t11330 = t2880*t10332;
  t11333 = 0. + t11315 + t11330;
  t2920 = 0.241*t1985*t2904;
  t2998 = 0.241*t1788*t2996;
  t3040 = 0.241*t843*t3039;
  t3097 = 0.241*t623*t3088;
  t3105 = t2920 + t2998 + t3040 + t3097;
  t11182 = 0.241*t3137*t3039;
  t11190 = 0.241*t2996*t3200;
  t11191 = 0.241*t3128*t3088;
  t11194 = 0.241*t2904*t3243;
  t11196 = t11182 + t11190 + t11191 + t11194;
  t11627 = t1985*t10782;
  t11630 = t1788*t10895;
  t11635 = t11627 + t11630;
  t10559 = 0.241*t623*t10553;
  t10670 = 0.241*t1985*t10660;
  t10728 = 0.241*t843*t10726;
  t10947 = 0.241*t1538*t10942;
  t11010 = 0.241*t1788*t11009;
  t11026 = t10559 + t10670 + t10728 + t10947 + t11010;
  t11535 = 0.241*t2904*t10553;
  t11536 = 0.241*t3088*t10660;
  t11543 = 0.241*t2996*t10726;
  t11544 = 0.241*t11333*t10942;
  t11550 = 0.241*t3039*t11009;
  t11551 = t11535 + t11536 + t11543 + t11544 + t11550;
  t11251 = 0.241*t3128*t10553;
  t11254 = 0.241*t3243*t10660;
  t11256 = 0.241*t3137*t10726;
  t11262 = 0.241*t11080*t10942;
  t11267 = 0.241*t3200*t11009;
  t11268 = t11251 + t11254 + t11256 + t11262 + t11267;
  t11757 = t3048*t6583;
  t11761 = t3014*t8727;
  t11763 = 0. + t11757 + t11761;
  t11646 = -1.*t1106*t1120;
  t11647 = -1.*t1055*t1168;
  t11650 = 0. + t11646 + t11647;
  t11695 = t1055*t2451;
  t11696 = t1106*t2574;
  t11698 = 0. + t11695 + t11696;
  t4289 = 0.241*t623*t4233;
  t5580 = 0.241*t1985*t5579;
  t6460 = 0.241*t843*t6322;
  t9588 = 0.241*t1538*t9444;
  t10180 = 0.241*t1788*t10179;
  t10193 = t4289 + t5580 + t6460 + t9588 + t10180;
  t11500 = 0.241*t2904*t4233;
  t11501 = 0.241*t5579*t3088;
  t11513 = 0.241*t2996*t6322;
  t11514 = 0.241*t11333*t9444;
  t11520 = 0.241*t3039*t10179;
  t11522 = t11500 + t11501 + t11513 + t11514 + t11520;
  t11221 = 0.241*t3128*t4233;
  t11227 = 0.241*t5579*t3243;
  t11235 = 0.241*t3137*t6322;
  t11236 = 0.241*t11080*t9444;
  t11237 = 0.241*t3200*t10179;
  t11238 = t11221 + t11227 + t11235 + t11236 + t11237;
  t11742 = 0.241*t5579*t10553;
  t11744 = 0.241*t4233*t10660;
  t11745 = 0.241*t9444*t11635;
  t11756 = 0.241*t10179*t10726;
  t11768 = 0.241*t11763*t10942;
  t11774 = 0.241*t6322*t11009;
  t11775 = t11742 + t11744 + t11745 + t11756 + t11768 + t11774;
  t12100 = 0.241*t2672;
  t12108 = 0. + t12100;
  t12116 = 0.241*t2631;
  t12132 = 0. + t12116;
  t12161 = 0.241*t11698;
  t12163 = 0. + t12161;
  t2612 = 0.241*t2609*t1538;
  t2770 = 0.241*t2766*t1788;
  t2828 = 0.241*t2824*t1985;
  t11407 = 0.241*t2609*t11333;
  t11430 = 0.241*t2766*t3039;
  t11437 = 0.241*t2824*t3088;
  t11131 = 0.241*t2609*t11080;
  t11141 = 0.241*t2766*t3200;
  t11151 = 0.241*t2824*t3243;
  t11904 = 0.241*t2824*t4233;
  t11917 = 0.241*t2609*t11763;
  t11918 = 0.241*t2766*t6322;
  t11687 = 0.241*t2824*t10553;
  t11693 = 0.241*t2609*t11635;
  t11694 = 0.241*t2766*t10726;
  t12372 = 0.241*t1626;
  t12373 = 0. + t12372;
  t12376 = 0.241*t1556;
  t12377 = 0. + t12376;
  t12429 = 0.241*t11650;
  t12430 = 0. + t12429;
  t1540 = 0.241*t1492*t1538;
  t1791 = 0.241*t1699*t1788;
  t1993 = 0.007922875*t515*t1985;
  t11348 = 0.241*t1492*t11333;
  t11360 = 0.241*t1699*t3039;
  t11365 = 0.007922875*t515*t3088;
  t11096 = 0.241*t1492*t11080;
  t11099 = 0.241*t1699*t3200;
  t11100 = 0.007922875*t515*t3243;
  t11878 = 0.007922875*t515*t4233;
  t11886 = 0.241*t1492*t11763;
  t11888 = 0.241*t1699*t6322;
  t11620 = 0.007922875*t515*t10553;
  t11642 = 0.241*t1492*t11635;
  t11644 = 0.241*t1699*t10726;
  t12536 = 0.241*t2092;
  t12539 = 0. + t12536;
  t12543 = 0.241*t2066;
  t12548 = 0. + t12543;
  t2194 = 0.241*t2156*t1788;
  t2317 = 0.241*t2310*t1985;
  t11379 = 0.241*t2156*t3039;
  t11380 = 0.241*t2310*t3088;
  t11116 = 0.241*t2156*t3200;
  t11121 = 0.241*t2310*t3243;
  t11862 = 0.241*t2310*t4233;
  t11866 = 0.241*t2156*t6322;
  t11601 = 0.241*t2310*t10553;
  t11610 = 0.241*t2156*t10726;
  t12522 = -0.03856*t2156;
  t12523 = 0.004820000000000004*t2310;
  t12524 = t12522 + t12523;
  t12074 = -0.03856*t2766;
  t12075 = 0.004820000000000004*t2824;
  t12078 = t12074 + t12075;
  t12363 = -0.03856*t1699;
  t651 = 0.004820000000000004*t623;
  t847 = -0.03856*t843;
  t867 = t651 + t847;
  t11284 = 0.004820000000000004*t2904;
  t11286 = -0.03856*t2996;
  t11306 = t11284 + t11286;
  t11046 = 0.004820000000000004*t3128;
  t11054 = -0.03856*t3137;
  t11055 = t11046 + t11054;
  t11834 = 0.004820000000000004*t5579;
  t11835 = -0.03856*t10179;
  t11855 = t11834 + t11835;
  t11572 = 0.004820000000000004*t10660;
  t11577 = -0.03856*t11009;
  t11585 = t11572 + t11577;
  p_output1[0]=var2[14]*(-0.5*(0.482*t1985*t623 + 0.482*t1788*t843)*var2[0] - 0.5*t3301*var2[1] - 0.5*t3105*var2[2] - 0.5*t11026*var2[3] - 0.5*t10193*var2[4] - 0.5*(t2612 + t2770 + t2828 + 0.241*t2631*t623 + 0.241*t2672*t843)*var2[5] - 0.5*(t1540 + t1791 + t1993 + 0.241*t1556*t623 + 0.241*t1626*t843)*var2[12] - 0.5*(t2194 + t2317 + 0.241*t2066*t623 + 0.241*t2092*t843)*var2[13] - 0.5*t867*var2[14]);
  p_output1[1]=var2[14]*(-0.5*t3301*var2[0] - 0.5*(0.482*t3137*t3200 + 0.482*t3128*t3243)*var2[1] - 0.5*t11196*var2[2] - 0.5*t11268*var2[3] - 0.5*t11238*var2[4] - 0.5*(t11131 + t11141 + t11151 + 0.241*t2631*t3128 + 0.241*t2672*t3137)*var2[5] - 0.5*(t11096 + t11099 + t11100 + 0.241*t1556*t3128 + 0.241*t1626*t3137)*var2[12] - 0.5*(t11116 + t11121 + 0.241*t2066*t3128 + 0.241*t2092*t3137)*var2[13] - 0.5*t11055*var2[14]);
  p_output1[2]=var2[14]*(-0.5*t3105*var2[0] - 0.5*t11196*var2[1] - 0.5*(0.482*t2996*t3039 + 0.482*t2904*t3088)*var2[2] - 0.5*t11551*var2[3] - 0.5*t11522*var2[4] - 0.5*(t11407 + t11430 + t11437 + 0.241*t2631*t2904 + 0.241*t2672*t2996)*var2[5] - 0.5*(t11348 + t11360 + t11365 + 0.241*t1556*t2904 + 0.241*t1626*t2996)*var2[12] - 0.5*(t11379 + t11380 + 0.241*t2066*t2904 + 0.241*t2092*t2996)*var2[13] - 0.5*t11306*var2[14]);
  p_output1[3]=var2[14]*(-0.5*t11026*var2[0] - 0.5*t11268*var2[1] - 0.5*t11551*var2[2] - 0.5*(0.482*t10553*t10660 + 0.482*t10726*t11009 + 0.482*t10942*t11635)*var2[3] - 0.5*t11775*var2[4] - 0.5*(t11687 + t11693 + t11694 + 0.241*t10942*t11698 + 0.241*t10660*t2631 + 0.241*t11009*t2672)*var2[5] - 0.5*(t11620 + t11642 + t11644 + 0.241*t10942*t11650 + 0.241*t10660*t1556 + 0.241*t11009*t1626)*var2[12] - 0.5*(t11601 + t11610 + 0.241*t10660*t2066 + 0.241*t11009*t2092)*var2[13] - 0.5*t11585*var2[14]);
  p_output1[4]=var2[14]*(-0.5*t10193*var2[0] - 0.5*t11238*var2[1] - 0.5*t11522*var2[2] - 0.5*t11775*var2[3] - 0.5*(0.482*t4233*t5579 + 0.482*t10179*t6322 + 0.482*t11763*t9444)*var2[4] - 0.5*(t11904 + t11917 + t11918 + 0.241*t10179*t2672 + 0.241*t2631*t5579 + 0.241*t11698*t9444)*var2[5] - 0.5*(t11878 + t11886 + t11888 + 0.241*t10179*t1626 + 0.241*t1556*t5579 + 0.241*t11650*t9444)*var2[12] - 0.5*(t11862 + t11866 + 0.241*t10179*t2092 + 0.241*t2066*t5579)*var2[13] - 0.5*t11855*var2[14]);
  p_output1[5]=var2[14]*(-0.5*(t2612 + t2770 + t2828 + t12132*t623 + t12108*t843)*var2[0] - 0.5*(t11131 + t11141 + t11151 + t12132*t3128 + t12108*t3137)*var2[1] - 0.5*(t11407 + t11430 + t11437 + t12132*t2904 + t12108*t2996)*var2[2] - 0.5*(t11687 + t11693 + t11694 + t11009*t12108 + t10660*t12132 + t10942*t12163)*var2[3] - 0.5*(t11904 + t11917 + t11918 + t10179*t12108 + t12132*t5579 + t12163*t9444)*var2[4] - 0.5*(0.241*t11698*t2609 + t12163*t2609 + t12108*t2766 + 0.241*t2672*t2766 + t12132*t2824 + 0.241*t2631*t2824)*var2[5] - 0.5*(t12163*t1492 + t12108*t1699 + 0.241*t11650*t2609 + 0.241*t1626*t2766 + 0.241*t1556*t2824 + 0.032875*t12132*t515)*var2[12] - 0.5*(t12108*t2156 + t12132*t2310 + 0.241*t2092*t2766 + 0.241*t2066*t2824)*var2[13] - 0.5*t12078*var2[14]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=var2[14]*(-0.5*(t1540 + t1791 + t1993 + t12377*t623 + t12373*t843)*var2[0] - 0.5*(t11096 + t11099 + t11100 + t12377*t3128 + t12373*t3137)*var2[1] - 0.5*(t11348 + t11360 + t11365 + t12377*t2904 + t12373*t2996)*var2[2] - 0.5*(t11620 + t11642 + t11644 + t11009*t12373 + t10660*t12377 + t10942*t12430)*var2[3] - 0.5*(t11878 + t11886 + t11888 + t10179*t12373 + t12377*t5579 + t12430*t9444)*var2[4] - 0.5*(0.241*t11698*t1492 + t12430*t2609 + 0.241*t1699*t2672 + t12373*t2766 + t12377*t2824 + 0.007922875*t2631*t515)*var2[5] - 0.5*(0.241*t11650*t1492 + t12430*t1492 + t12373*t1699 + 0.241*t1626*t1699 + 0.032875*t12377*t515 + 0.007922875*t1556*t515)*var2[12] - 0.5*(0.241*t1699*t2092 + t12373*t2156 + t12377*t2310 + 0.007922875*t2066*t515)*var2[13] - 0.5*(t12363 + 0.00015845750000000012*t515)*var2[14]);
  p_output1[13]=var2[14]*(-0.5*(t2194 + t2317 + t12548*t623 + t12539*t843)*var2[0] - 0.5*(t11116 + t11121 + t12548*t3128 + t12539*t3137)*var2[1] - 0.5*(t11379 + t11380 + t12548*t2904 + t12539*t2996)*var2[2] - 0.5*(t11601 + t11610 + t11009*t12539 + t10660*t12548)*var2[3] - 0.5*(t11862 + t11866 + t10179*t12539 + t12548*t5579)*var2[4] - 0.5*(0.241*t2310*t2631 + 0.241*t2156*t2672 + t12539*t2766 + t12548*t2824)*var2[5] - 0.5*(t12539*t1699 + 0.241*t1626*t2156 + 0.241*t1556*t2310 + 0.032875*t12548*t515)*var2[12] - 0.5*(t12539*t2156 + 0.241*t2092*t2156 + t12548*t2310 + 0.241*t2066*t2310)*var2[13] - 0.5*t12524*var2[14]);
  p_output1[14]=(-0.5*t867*var2[0] - 0.5*t11055*var2[1] - 0.5*t11306*var2[2] - 0.5*t11585*var2[3] - 0.5*t11855*var2[4] - 0.5*t12078*var2[5] - 0.5*(t12363 + 0.00015845750000000015*t515)*var2[12] - 0.5*t12524*var2[13])*var2[14];
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec15_plane.hh"

namespace SymFunction
{

void Ce2_vec15_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
