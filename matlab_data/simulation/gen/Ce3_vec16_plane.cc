/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:12:06 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t783;
  double t469;
  double t689;
  double t784;
  double t2563;
  double t2797;
  double t3252;
  double t3375;
  double t3385;
  double t3401;
  double t3518;
  double t3651;
  double t2624;
  double t2911;
  double t2936;
  double t1497;
  double t234;
  double t344;
  double t1713;
  double t1833;
  double t2059;
  double t5658;
  double t5692;
  double t6090;
  double t6336;
  double t6462;
  double t6516;
  double t6630;
  double t7118;
  double t7319;
  double t7332;
  double t7443;
  double t7602;
  double t5686;
  double t5733;
  double t5778;
  double t7800;
  double t7811;
  double t7880;
  double t8045;
  double t8065;
  double t8271;
  double t8305;
  double t5995;
  double t7284;
  double t7634;
  double t7728;
  double t8851;
  double t8684;
  double t4777;
  double t8484;
  double t8497;
  double t8542;
  double t9693;
  double t9697;
  double t9688;
  double t9689;
  double t9848;
  double t9868;
  double t9800;
  double t9801;
  double t740;
  double t1037;
  double t1144;
  double t3001;
  double t3804;
  double t3901;
  double t3948;
  double t3967;
  double t4041;
  double t4049;
  double t4134;
  double t4236;
  double t4275;
  double t4302;
  double t4397;
  double t4704;
  double t4705;
  double t4719;
  double t4781;
  double t4886;
  double t4905;
  double t5278;
  double t5312;
  double t5336;
  double t8040;
  double t8383;
  double t8449;
  double t8453;
  double t8575;
  double t8591;
  double t8595;
  double t8610;
  double t8643;
  double t8662;
  double t8683;
  double t8685;
  double t8888;
  double t8899;
  double t9149;
  double t9218;
  double t9251;
  double t9254;
  double t9260;
  double t9293;
  double t9297;
  double t9300;
  double t9310;
  double t9317;
  double t9319;
  double t9482;
  double t9553;
  double t9558;
  double t9650;
  double t9659;
  double t9663;
  double t9664;
  double t9679;
  double t9692;
  double t9698;
  double t9712;
  double t9716;
  double t9718;
  double t9722;
  double t9737;
  double t9740;
  double t9749;
  double t9782;
  double t9790;
  double t9792;
  double t9796;
  double t9828;
  double t9869;
  double t9871;
  double t9899;
  double t9901;
  double t9907;
  double t9921;
  double t9922;
  double t9924;
  double t10439;
  double t10440;
  double t10441;
  double t10448;
  double t10450;
  double t10454;
  double t10458;
  double t10462;
  double t10466;
  double t10473;
  double t10477;
  double t10487;
  double t10621;
  double t10630;
  double t10638;
  double t10682;
  double t10684;
  double t10690;
  double t10694;
  double t10695;
  double t10610;
  double t10702;
  double t10711;
  double t10727;
  double t10738;
  double t10744;
  double t10834;
  double t10853;
  double t10862;
  double t11059;
  double t11064;
  double t11067;
  double t11071;
  double t11073;
  double t11076;
  double t11079;
  double t11089;
  double t11091;
  double t11118;
  double t11128;
  double t11129;
  double t11053;
  double t11105;
  double t11113;
  double t11175;
  double t11183;
  double t11191;
  double t11044;
  double t11049;
  double t11051;
  double t11155;
  double t11161;
  double t11162;
  double t11249;
  double t11250;
  double t11252;
  double t11456;
  double t11463;
  double t11467;
  double t11473;
  double t11480;
  double t11488;
  double t11497;
  double t11501;
  double t11507;
  double t11515;
  double t11556;
  double t11558;
  double t10580;
  double t11550;
  double t11555;
  double t11530;
  double t11531;
  double t11538;
  double t11578;
  double t11562;
  double t11425;
  double t11426;
  double t11431;
  double t11447;
  double t11524;
  double t11525;
  double t11592;
  double t11596;
  double t11601;
  double t10586;
  double t11786;
  double t11805;
  double t11814;
  double t12149;
  double t12153;
  double t12154;
  double t12161;
  double t12164;
  double t12165;
  double t12140;
  double t12143;
  double t12145;
  double t12168;
  double t12171;
  double t12176;
  double t12185;
  double t12190;
  double t12192;
  double t12216;
  double t12218;
  double t12221;
  double t9963;
  double t9972;
  double t9975;
  double t12286;
  double t12306;
  double t12335;
  double t11165;
  double t12613;
  double t12623;
  double t12627;
  double t11229;
  double t11263;
  double t11285;
  double t11337;
  double t11394;
  double t11620;
  double t12956;
  double t12959;
  double t12960;
  double t12945;
  double t11716;
  double t11879;
  double t11977;
  double t12049;
  double t12100;
  double t10826;
  double t10868;
  double t10871;
  double t13242;
  double t13244;
  double t13245;
  double t10949;
  double t10961;
  double t10975;
  double t12665;
  double t13239;
  double t13255;
  double t12678;
  double t11167;
  double t11201;
  double t11204;
  double t12591;
  double t12634;
  double t11233;
  double t11236;
  double t11237;
  double t12719;
  double t12722;
  double t11265;
  double t11266;
  double t11267;
  double t12747;
  double t12753;
  double t11289;
  double t11293;
  double t11297;
  double t12799;
  double t12831;
  double t11340;
  double t11344;
  double t11346;
  double t12876;
  double t12895;
  double t11399;
  double t11403;
  double t11405;
  double t12947;
  double t12982;
  double t11638;
  double t11648;
  double t11649;
  double t12986;
  double t13001;
  double t11729;
  double t11736;
  double t11744;
  double t13030;
  double t13039;
  double t11883;
  double t11896;
  double t11913;
  double t13083;
  double t13093;
  double t11984;
  double t11990;
  double t12004;
  double t13138;
  double t13151;
  double t12054;
  double t12056;
  double t12058;
  double t13157;
  double t13173;
  double t12103;
  double t12105;
  double t12107;
  double t13695;
  double t13701;
  double t13704;
  double t13715;
  double t13720;
  double t13783;
  double t13784;
  double t13787;
  double t13810;
  double t13823;
  double t12139;
  double t12155;
  double t12167;
  double t12182;
  double t12227;
  double t12228;
  double t12231;
  double t12241;
  double t12252;
  double t12254;
  double t12261;
  double t12263;
  double t12266;
  double t12271;
  double t12273;
  double t12275;
  double t12299;
  double t12302;
  double t12303;
  double t12305;
  double t13874;
  double t13880;
  double t13881;
  double t13889;
  double t13892;
  double t13894;
  double t12361;
  double t12362;
  double t12365;
  double t12368;
  double t12369;
  double t12370;
  double t12372;
  double t12373;
  double t12374;
  double t12387;
  double t12394;
  double t12395;
  double t12403;
  double t13902;
  double t13904;
  double t13908;
  double t13927;
  double t13929;
  double t13937;
  double t12507;
  double t12521;
  double t12544;
  double t12568;
  double t12594;
  double t13968;
  double t13976;
  double t13980;
  double t12660;
  double t13985;
  double t13987;
  double t13988;
  double t12690;
  double t12694;
  double t12696;
  double t12702;
  double t12710;
  double t12711;
  double t12714;
  double t12716;
  double t12749;
  double t12762;
  double t12764;
  double t12767;
  double t12778;
  double t12824;
  double t12845;
  double t12859;
  double t12863;
  double t12887;
  double t12919;
  double t12921;
  double t12923;
  double t12926;
  double t12938;
  double t14090;
  double t14095;
  double t14097;
  double t14084;
  double t14085;
  double t14086;
  double t13018;
  double t13021;
  double t13023;
  double t13055;
  double t13057;
  double t13100;
  double t13103;
  double t13120;
  double t13121;
  double t13193;
  double t13199;
  double t13200;
  double t13235;
  double t13257;
  double t14219;
  double t14221;
  double t13271;
  double t13279;
  double t14003;
  double t13296;
  double t13300;
  double t13313;
  double t13981;
  double t13334;
  double t13335;
  double t13339;
  double t14031;
  double t13368;
  double t13373;
  double t13379;
  double t14054;
  double t13380;
  double t13381;
  double t13392;
  double t14060;
  double t13405;
  double t13410;
  double t13416;
  double t14070;
  double t13419;
  double t13421;
  double t13445;
  double t14088;
  double t14103;
  double t14116;
  double t14124;
  double t14137;
  double t14157;
  double t14165;
  double t14168;
  double t14178;
  double t14186;
  double t14196;
  double t14199;
  double t14399;
  double t14406;
  double t14407;
  double t14408;
  double t14411;
  double t14412;
  double t14413;
  double t14414;
  double t14451;
  double t14455;
  double t14491;
  double t14495;
  double t14496;
  double t14498;
  double t14485;
  double t14482;
  double t14484;
  double t14486;
  double t14490;
  double t14499;
  double t14500;
  double t14502;
  double t14505;
  double t14506;
  double t14511;
  double t14512;
  double t14514;
  double t14515;
  double t14516;
  double t14517;
  double t14457;
  double t14458;
  double t14459;
  double t14464;
  double t14466;
  double t14468;
  double t14469;
  double t14470;
  double t14472;
  double t14548;
  double t14550;
  double t14551;
  double t14555;
  double t14556;
  double t14557;
  double t14574;
  double t14576;
  double t14598;
  double t14601;
  double t14603;
  double t14591;
  double t14592;
  double t14593;
  double t14641;
  double t14642;
  double t14643;
  double t14651;
  double t14653;
  double t14657;
  double t14709;
  double t14710;
  double t14711;
  double t14717;
  double t14724;
  double t14726;
  double t14733;
  double t14734;
  double t14737;
  double t9983;
  double t9987;
  double t10000;
  double t10007;
  double t10036;
  double t10085;
  double t14776;
  double t14777;
  double t14778;
  double t10172;
  double t10194;
  double t14800;
  double t14801;
  double t14802;
  double t14807;
  double t14809;
  double t14810;
  double t14820;
  double t14824;
  double t14825;
  double t14829;
  double t14830;
  double t14832;
  double t10337;
  double t10354;
  double t10365;
  double t10366;
  double t14930;
  double t14931;
  double t14933;
  double t14935;
  double t14936;
  double t14939;
  double t14582;
  double t14998;
  double t15000;
  double t15003;
  double t15005;
  double t15006;
  double t15007;
  double t14940;
  double t14949;
  double t15135;
  double t15136;
  double t15141;
  double t15143;
  double t15144;
  double t15147;
  double t14712;
  double t14713;
  double t14958;
  double t14965;
  double t14969;
  double t14977;
  double t14983;
  double t14985;
  double t14731;
  double t14738;
  double t14741;
  double t15010;
  double t15020;
  double t15022;
  double t15206;
  double t15207;
  double t15208;
  double t15211;
  double t15212;
  double t15213;
  double t14716;
  double t14727;
  double t14728;
  double t15041;
  double t15046;
  double t15052;
  double t15062;
  double t15079;
  double t15089;
  double t15093;
  double t14404;
  double t14415;
  double t14417;
  double t14418;
  double t14425;
  double t14431;
  double t14432;
  double t14436;
  double t14437;
  double t14439;
  double t14440;
  double t14442;
  double t14444;
  double t14445;
  double t15295;
  double t15297;
  double t15289;
  double t15290;
  double t15291;
  double t14476;
  double t14478;
  double t14479;
  double t14480;
  double t15314;
  double t15315;
  double t15317;
  double t15309;
  double t15311;
  double t15312;
  double t15313;
  double t15319;
  double t15320;
  double t15322;
  double t15324;
  double t15329;
  double t15330;
  double t15331;
  double t15332;
  double t14595;
  double t14596;
  double t14597;
  double t14604;
  double t14605;
  double t14607;
  double t14622;
  double t14627;
  double t14646;
  double t14658;
  double t14659;
  double t14667;
  double t14669;
  double t14670;
  double t14682;
  double t14683;
  double t14686;
  double t14730;
  double t14742;
  double t14747;
  double t14749;
  double t14786;
  double t14787;
  double t14791;
  double t14803;
  double t14813;
  double t14818;
  double t14819;
  double t14828;
  double t14833;
  double t14834;
  double t14835;
  double t14836;
  double t14838;
  double t14839;
  double t14841;
  double t14844;
  double t14845;
  double t14846;
  double t14850;
  double t14875;
  double t14879;
  double t14881;
  double t14882;
  double t14884;
  double t14885;
  double t14890;
  double t14891;
  double t14892;
  double t14893;
  double t14894;
  double t14896;
  double t14899;
  double t14991;
  double t14992;
  double t14993;
  double t14994;
  double t14997;
  double t15016;
  double t15019;
  double t15379;
  double t15380;
  double t15382;
  double t15384;
  double t15385;
  double t15387;
  double t15028;
  double t15029;
  double t15030;
  double t15032;
  double t15034;
  double t15035;
  double t15036;
  double t15037;
  double t15039;
  double t15049;
  double t15051;
  double t15074;
  double t15086;
  double t15088;
  double t15197;
  double t15198;
  double t15200;
  double t15202;
  double t15204;
  double t15388;
  double t15395;
  double t15217;
  double t15218;
  double t15447;
  double t15448;
  double t15450;
  double t15454;
  double t15458;
  double t15461;
  double t15225;
  double t15226;
  double t15227;
  double t15229;
  double t15230;
  double t15231;
  double t15235;
  double t15236;
  double t15410;
  double t15237;
  double t15238;
  double t15247;
  double t15414;
  double t15248;
  double t15249;
  double t15263;
  double t15423;
  double t15431;
  double t15273;
  double t15274;
  t783 = Cos(var1[15]);
  t469 = Cos(var1[5]);
  t689 = Sin(var1[15]);
  t784 = Sin(var1[5]);
  t2563 = Cos(var1[16]);
  t2797 = Sin(var1[16]);
  t3252 = -1.*t2563;
  t3375 = 1. + t3252;
  t3385 = -0.194401*t3375;
  t3401 = -0.234401*t2563;
  t3518 = -0.04*t2797;
  t3651 = t3385 + t3401 + t3518;
  t2624 = -0.04*t2563;
  t2911 = 0.04*t2797;
  t2936 = t2624 + t2911;
  t1497 = Sin(var1[3]);
  t234 = Cos(var1[3]);
  t344 = Sin(var1[4]);
  t1713 = t783*t469;
  t1833 = -1.*t689*t784;
  t2059 = t1713 + t1833;
  t5658 = Cos(var1[17]);
  t5692 = Sin(var1[17]);
  t6090 = -1.*t5658;
  t6336 = 1. + t6090;
  t6462 = -0.336601*t6336;
  t6516 = -0.356601*t5658;
  t6630 = -0.16*t5692;
  t7118 = 0. + t6462 + t6516 + t6630;
  t7319 = -0.20833*t6336;
  t7332 = -0.36833*t5658;
  t7443 = 0.020000000000000018*t5692;
  t7602 = 0. + t7319 + t7332 + t7443;
  t5686 = t2563*t5658;
  t5733 = -1.*t2797*t5692;
  t5778 = 0. + t5686 + t5733;
  t7800 = t5658*t2797;
  t7811 = t2563*t5692;
  t7880 = 0. + t7800 + t7811;
  t8045 = -0.194401*t2797;
  t8065 = -1.*t2797*t7118;
  t8271 = t2563*t7602;
  t8305 = 0. + t8045 + t8065 + t8271;
  t5995 = -0.194401*t3375;
  t7284 = t2563*t7118;
  t7634 = t2797*t7602;
  t7728 = 0. + t5995 + t7284 + t7634;
  t8851 = 0. + t783;
  t8684 = 0. + t689;
  t4777 = Cos(var1[4]);
  t8484 = -1.*t5658*t2797;
  t8497 = -1.*t2563*t5692;
  t8542 = 0. + t8484 + t8497;
  t9693 = -1.*t689*t8542;
  t9697 = 0. + t9693;
  t9688 = t783*t8542;
  t9689 = 0. + t9688;
  t9848 = -1.*t689*t5778;
  t9868 = 0. + t9848;
  t9800 = t783*t5778;
  t9801 = 0. + t9800;
  t740 = -1.*t469*t689;
  t1037 = -1.*t783*t784;
  t1144 = t740 + t1037;
  t3001 = -1.*t2563*t2936;
  t3804 = -1.*t3651*t2797;
  t3901 = t3001 + t3804;
  t3948 = t2563*t3901;
  t3967 = t2563*t3651;
  t4041 = -1.*t2936*t2797;
  t4049 = t3967 + t4041;
  t4134 = t2797*t4049;
  t4236 = t3948 + t4134;
  t4275 = t469*t689;
  t4302 = t783*t784;
  t4397 = t4275 + t4302;
  t4704 = t783*t2563*t469;
  t4705 = -1.*t2563*t689*t784;
  t4719 = t4704 + t4705;
  t4781 = t4777*t2797;
  t4886 = -1.*t2563*t469*t689;
  t4905 = -1.*t783*t2563*t784;
  t5278 = t4886 + t4905;
  t5312 = -1.*t344*t5278;
  t5336 = t4781 + t5312;
  t8040 = -1.*t7728*t7880;
  t8383 = -1.*t8305*t5778;
  t8449 = 0. + t8040 + t8383;
  t8453 = t5778*t8449;
  t8575 = t8305*t8542;
  t8591 = t7728*t5778;
  t8595 = 0. + t8575 + t8591;
  t8610 = t7880*t8595;
  t8643 = 0. + t8453 + t8610;
  t8662 = 0.241*t8643;
  t8683 = 0. + t8662;
  t8685 = t469*t8684;
  t8888 = t8851*t784;
  t8899 = 0. + t8685 + t8888;
  t9149 = t8851*t469;
  t9218 = -1.*t8684*t784;
  t9251 = 0. + t9149 + t9218;
  t9254 = -1.*t344*t9251;
  t9260 = 0. + t9254;
  t9293 = -1.*t783*t469*t2797;
  t9297 = t689*t2797*t784;
  t9300 = t9293 + t9297;
  t9310 = t2563*t4777;
  t9317 = t469*t689*t2797;
  t9319 = t783*t2797*t784;
  t9482 = t9317 + t9319;
  t9553 = -1.*t344*t9482;
  t9558 = t9310 + t9553;
  t9650 = -0.081715*t8542;
  t9659 = -0.11688*t7880;
  t9663 = 0. + t9650 + t9659;
  t9664 = 0.241*t9663;
  t9679 = 0. + t9664;
  t9692 = t469*t9689;
  t9698 = t9697*t784;
  t9712 = 0. + t9692 + t9698;
  t9716 = t4777*t5778;
  t9718 = t469*t9697;
  t9722 = -1.*t9689*t784;
  t9737 = 0. + t9718 + t9722;
  t9740 = -1.*t344*t9737;
  t9749 = 0. + t9716 + t9740;
  t9782 = 0.035165*t5778;
  t9790 = 0. + t9782;
  t9792 = 0.241*t9790;
  t9796 = 0. + t9792;
  t9828 = t469*t9801;
  t9869 = t9868*t784;
  t9871 = 0. + t9828 + t9869;
  t9899 = t4777*t7880;
  t9901 = t469*t9868;
  t9907 = -1.*t9801*t784;
  t9921 = 0. + t9901 + t9907;
  t9922 = -1.*t344*t9921;
  t9924 = 0. + t9899 + t9922;
  t10439 = -1.*t2797*t344;
  t10440 = -1.*t4777*t5278;
  t10441 = t10439 + t10440;
  t10448 = -1.*t2563*t344;
  t10450 = -1.*t4777*t9482;
  t10454 = t10448 + t10450;
  t10458 = -1.*t5778*t344;
  t10462 = -1.*t4777*t9737;
  t10466 = t10458 + t10462;
  t10473 = -1.*t7880*t344;
  t10477 = -1.*t4777*t9921;
  t10487 = t10473 + t10477;
  t10621 = -1.*t783;
  t10630 = 1. + t10621;
  t10638 = 0.081715*t10630;
  t10682 = 0.061715*t783;
  t10684 = t10638 + t10682;
  t10690 = t10684*t469;
  t10694 = 0.02*t689*t784;
  t10695 = t10690 + t10694;
  t10610 = 0.194401*t344;
  t10702 = -1.*t4777*t10695;
  t10711 = t10610 + t10702;
  t10727 = -0.194401*t344;
  t10738 = t4777*t10695;
  t10744 = t10727 + t10738;
  t10834 = -0.194401*t4777;
  t10853 = -1.*t344*t10695;
  t10862 = t10834 + t10853;
  t11059 = 0.13757*t783;
  t11064 = -1.*t689*t2936;
  t11067 = t10638 + t11059 + t11064;
  t11071 = t469*t11067;
  t11073 = 0.055855*t689;
  t11076 = t783*t2936;
  t11079 = t11073 + t11076;
  t11089 = -1.*t11079*t784;
  t11091 = t11071 + t11089;
  t11118 = t3651*t344;
  t11128 = t4777*t11091;
  t11129 = t11118 + t11128;
  t11053 = -1.*t3651*t344;
  t11105 = -1.*t4777*t11091;
  t11113 = t11053 + t11105;
  t11175 = t4777*t3651;
  t11183 = -1.*t344*t11091;
  t11191 = t11175 + t11183;
  t11044 = t2797*t344;
  t11049 = t4777*t5278;
  t11051 = t11044 + t11049;
  t11155 = t469*t11079;
  t11161 = t11067*t784;
  t11162 = t11155 + t11161;
  t11249 = t2563*t344;
  t11250 = t4777*t9482;
  t11252 = t11249 + t11250;
  t11456 = 0.081715*t10630;
  t11463 = 0.11688*t783;
  t11467 = -1.*t689*t8305;
  t11473 = t11456 + t11463 + t11467;
  t11480 = t469*t11473;
  t11488 = 0.035165*t689;
  t11497 = t783*t8305;
  t11501 = t11488 + t11497;
  t11507 = -1.*t11501*t784;
  t11515 = 0. + t11480 + t11507;
  t11556 = t4777*t7728;
  t11558 = -1.*t344*t11515;
  t10580 = t9716 + t9740;
  t11550 = t4777*t9251;
  t11555 = 0. + t11550;
  t11530 = t7728*t344;
  t11531 = t4777*t11515;
  t11538 = 0. + t11530 + t11531;
  t11578 = 0. + t11556 + t11558;
  t11562 = t11556 + t11558;
  t11425 = t5778*t344;
  t11426 = t4777*t9737;
  t11431 = 0. + t11425 + t11426;
  t11447 = -1.*t7728*t344;
  t11524 = -1.*t4777*t11515;
  t11525 = t11447 + t11524;
  t11592 = t469*t11501;
  t11596 = t11473*t784;
  t11601 = 0. + t11592 + t11596;
  t10586 = t9899 + t9922;
  t11786 = t7880*t344;
  t11805 = t4777*t9921;
  t11814 = 0. + t11786 + t11805;
  t12149 = -1.*t783*t469;
  t12153 = t689*t784;
  t12154 = t12149 + t12153;
  t12161 = -1.*t783*t2563*t469;
  t12164 = t2563*t689*t784;
  t12165 = t12161 + t12164;
  t12140 = -1.*t469*t8684;
  t12143 = -1.*t8851*t784;
  t12145 = t12140 + t12143;
  t12168 = t783*t469*t2797;
  t12171 = -1.*t689*t2797*t784;
  t12176 = t12168 + t12171;
  t12185 = -1.*t469*t9689;
  t12190 = -1.*t9697*t784;
  t12192 = t12185 + t12190;
  t12216 = -1.*t469*t9801;
  t12218 = -1.*t9868*t784;
  t12221 = t12216 + t12218;
  t9963 = t1497*t344*t1144;
  t9972 = t234*t2059;
  t9975 = t9963 + t9972;
  t12286 = t9149 + t9218;
  t12306 = t9718 + t9722;
  t12335 = t9901 + t9907;
  t11165 = -1.*t4397*t11162;
  t12613 = -1.*t469*t11079;
  t12623 = -1.*t11067*t784;
  t12627 = t12613 + t12623;
  t11229 = t4719*t11162;
  t11263 = t4397*t11162;
  t11285 = -1.*t11162*t9300;
  t11337 = -1.*t4719*t11162;
  t11394 = t11162*t9300;
  t11620 = t8899*t11601;
  t12956 = -1.*t469*t11501;
  t12959 = -1.*t11473*t784;
  t12960 = t12956 + t12959;
  t12945 = t11480 + t11507;
  t11716 = -1.*t11601*t9712;
  t11879 = t11601*t9712;
  t11977 = -1.*t11601*t9871;
  t12049 = -1.*t8899*t11601;
  t12100 = t11601*t9871;
  t10826 = -1.*t344*t10744;
  t10868 = -1.*t4777*t10862;
  t10871 = t10826 + t10868;
  t13242 = 0.02*t469*t689;
  t13244 = -1.*t10684*t784;
  t13245 = t13242 + t13244;
  t10949 = -0.02*t469*t689;
  t10961 = t10684*t784;
  t10975 = t10949 + t10961;
  t12665 = -1.*t4397*t11091;
  t13239 = Power(t4777,2);
  t13255 = Power(t344,2);
  t12678 = -1.*t2059*t11162;
  t11167 = -1.*t4777*t2059*t11129;
  t11201 = t344*t2059*t11191;
  t11204 = t11165 + t11167 + t11201;
  t12591 = t4719*t11091;
  t12634 = t5278*t11162;
  t11233 = t11051*t11129;
  t11236 = t5336*t11191;
  t11237 = t11229 + t11233 + t11236;
  t12719 = t4397*t11091;
  t12722 = t2059*t11162;
  t11265 = t4777*t2059*t11129;
  t11266 = -1.*t344*t2059*t11191;
  t11267 = t11263 + t11265 + t11266;
  t12747 = -1.*t11162*t9482;
  t12753 = -1.*t11091*t9300;
  t11289 = -1.*t11129*t11252;
  t11293 = -1.*t11191*t9558;
  t11297 = t11285 + t11289 + t11293;
  t12799 = -1.*t4719*t11091;
  t12831 = -1.*t5278*t11162;
  t11340 = -1.*t11051*t11129;
  t11344 = -1.*t5336*t11191;
  t11346 = t11337 + t11340 + t11344;
  t12876 = t11162*t9482;
  t12895 = t11091*t9300;
  t11399 = t11129*t11252;
  t11403 = t11191*t9558;
  t11405 = t11394 + t11399 + t11403;
  t12947 = t8899*t12945;
  t12982 = t12286*t11601;
  t11638 = t11555*t11538;
  t11648 = t9260*t11578;
  t11649 = t11620 + t11638 + t11648;
  t12986 = -1.*t11601*t12306;
  t13001 = -1.*t12945*t9712;
  t11729 = -1.*t11538*t11431;
  t11736 = -1.*t11578*t9749;
  t11744 = t11716 + t11729 + t11736;
  t13030 = t11601*t12306;
  t13039 = t12945*t9712;
  t11883 = t11538*t11431;
  t11896 = t11578*t9749;
  t11913 = t11879 + t11883 + t11896;
  t13083 = -1.*t11601*t12335;
  t13093 = -1.*t12945*t9871;
  t11984 = -1.*t11538*t11814;
  t11990 = -1.*t11578*t9924;
  t12004 = t11977 + t11984 + t11990;
  t13138 = -1.*t8899*t12945;
  t13151 = -1.*t12286*t11601;
  t12054 = -1.*t11555*t11538;
  t12056 = -1.*t9260*t11578;
  t12058 = t12049 + t12054 + t12056;
  t13157 = t11601*t12335;
  t13173 = t12945*t9871;
  t12103 = t11538*t11814;
  t12105 = t11578*t9924;
  t12107 = t12100 + t12103 + t12105;
  t13695 = -0.055855*t689;
  t13701 = -1.*t783*t2936;
  t13704 = t13695 + t13701;
  t13715 = 0.055855*t783;
  t13720 = t13715 + t11064;
  t13783 = -0.035165*t689;
  t13784 = -1.*t783*t8305;
  t13787 = t13783 + t13784;
  t13810 = 0.035165*t783;
  t13823 = t13810 + t11467;
  t12139 = -1.527*t4777*t4236*t1144;
  t12155 = 0.0219*t4777*t12154;
  t12167 = -0.085290585*t2563*t4777*t12165;
  t12182 = 0.085290585*t4777*t2797*t12176;
  t12227 = -1.*t234*t344*t1144;
  t12228 = t1497*t2059;
  t12231 = t12227 + t12228;
  t12241 = -1.527*t4236*t12231;
  t12252 = t1497*t1144;
  t12254 = -1.*t234*t344*t12154;
  t12261 = t12252 + t12254;
  t12263 = 0.0219*t12261;
  t12266 = t1497*t5278;
  t12271 = -1.*t234*t344*t12165;
  t12273 = t12266 + t12271;
  t12275 = -0.085290585*t2563*t12273;
  t12299 = t1497*t9482;
  t12302 = -1.*t234*t344*t12176;
  t12303 = t12299 + t12302;
  t12305 = 0.085290585*t2797*t12303;
  t13874 = -1.*t783*t469*t8542;
  t13880 = t689*t8542*t784;
  t13881 = t13874 + t13880;
  t13889 = -1.*t783*t469*t5778;
  t13892 = t689*t5778*t784;
  t13894 = t13889 + t13892;
  t12361 = -1.527*t4236*t9975;
  t12362 = t234*t1144;
  t12365 = t1497*t344*t12154;
  t12368 = t12362 + t12365;
  t12369 = 0.0219*t12368;
  t12370 = t234*t5278;
  t12372 = t1497*t344*t12165;
  t12373 = t12370 + t12372;
  t12374 = -0.085290585*t2563*t12373;
  t12387 = t234*t9482;
  t12394 = t1497*t344*t12176;
  t12395 = t12387 + t12394;
  t12403 = 0.085290585*t2797*t12395;
  t13902 = -1.*t469*t689*t8542;
  t13904 = -1.*t783*t8542*t784;
  t13908 = t13902 + t13904;
  t13927 = -1.*t469*t689*t5778;
  t13929 = -1.*t783*t5778*t784;
  t13937 = t13927 + t13929;
  t12507 = 0.0042573819*t2059;
  t12521 = -1.*t2059*t11091;
  t12544 = t12521 + t11165;
  t12568 = t5278*t12544;
  t12594 = t12165*t11091;
  t13968 = t469*t13720;
  t13976 = t13704*t784;
  t13980 = t13968 + t13976;
  t12660 = -1.*t1144*t11091;
  t13985 = t469*t13704;
  t13987 = -1.*t13720*t784;
  t13988 = t13985 + t13987;
  t12690 = t3651*t2797;
  t12694 = t5278*t11091;
  t12696 = t12690 + t12694 + t11229;
  t12702 = t2059*t12696;
  t12710 = t2059*t11091;
  t12711 = t12710 + t11263;
  t12714 = t9482*t12711;
  t12716 = t1144*t11091;
  t12749 = -1.*t11091*t12176;
  t12762 = -1.*t2563*t3651;
  t12764 = -1.*t11091*t9482;
  t12767 = t12762 + t12764 + t11285;
  t12778 = t2059*t12767;
  t12824 = -1.*t12165*t11091;
  t12845 = -1.*t5278*t11091;
  t12859 = t3804 + t12845 + t11337;
  t12863 = t9482*t12859;
  t12887 = t11091*t12176;
  t12919 = t11091*t9482;
  t12921 = t3967 + t12919 + t11394;
  t12923 = t5278*t12921;
  t12926 = t9251*t11515;
  t12938 = 0. + t12926 + t11620;
  t14090 = t469*t13787;
  t14095 = -1.*t13823*t784;
  t14097 = t14090 + t14095;
  t14084 = t469*t13823;
  t14085 = t13787*t784;
  t14086 = t14084 + t14085;
  t13018 = -1.*t7728*t5778;
  t13021 = -1.*t11515*t9737;
  t13023 = t13018 + t13021 + t11716;
  t13055 = t11515*t9737;
  t13057 = t8591 + t13055 + t11879;
  t13100 = -1.*t11515*t9921;
  t13103 = t8040 + t13100 + t11977;
  t13120 = -1.*t9251*t11515;
  t13121 = 0. + t13120 + t12049;
  t13193 = t7728*t7880;
  t13199 = t11515*t9921;
  t13200 = t13193 + t13199 + t12100;
  t13235 = t4777*t1144*t10871;
  t13257 = t10975*t2059;
  t14219 = 0.02*t783*t784;
  t14221 = t13242 + t14219;
  t13271 = t4777*t1144*t10744;
  t13279 = -1.*t344*t1144*t10862;
  t14003 = -1.*t4397*t13980;
  t13296 = -1.*t4777*t1144*t11129;
  t13300 = t344*t1144*t11191;
  t13313 = t4777*t12165*t11204;
  t13981 = t4719*t13980;
  t13334 = t4777*t12165*t11129;
  t13335 = -1.*t344*t12165*t11191;
  t13339 = t4777*t1144*t11237;
  t14031 = t4397*t13980;
  t13368 = t4777*t1144*t11129;
  t13373 = -1.*t344*t1144*t11191;
  t13379 = t4777*t12176*t11267;
  t14054 = -1.*t13980*t9300;
  t13380 = -1.*t4777*t12176*t11129;
  t13381 = t344*t12176*t11191;
  t13392 = t4777*t1144*t11297;
  t14060 = -1.*t4719*t13980;
  t13405 = -1.*t4777*t12165*t11129;
  t13410 = t344*t12165*t11191;
  t13416 = t4777*t12176*t11346;
  t14070 = t13980*t9300;
  t13419 = t4777*t12176*t11129;
  t13421 = -1.*t344*t12176*t11191;
  t13445 = t4777*t12165*t11405;
  t14088 = t8899*t14086;
  t14103 = t2059*t11601;
  t14116 = -1.*t11601*t13908;
  t14124 = -1.*t14086*t9712;
  t14137 = t11601*t13908;
  t14157 = t14086*t9712;
  t14165 = -1.*t11601*t13937;
  t14168 = -1.*t14086*t9871;
  t14178 = -1.*t8899*t14086;
  t14186 = -1.*t2059*t11601;
  t14196 = t11601*t13937;
  t14199 = t14086*t9871;
  t14399 = t8484 + t8497;
  t14406 = t5686 + t5733;
  t14407 = -0.11688*t14406;
  t14408 = -1.*t2563*t5658;
  t14411 = t2797*t5692;
  t14412 = t14408 + t14411;
  t14413 = -0.081715*t14412;
  t14414 = t14407 + t14413;
  t14451 = 0.04*t2563;
  t14455 = t14451 + t2911;
  t14491 = -0.194401*t2563;
  t14495 = -1.*t2563*t7118;
  t14496 = -1.*t2797*t7602;
  t14498 = t14491 + t14495 + t14496;
  t14485 = t8045 + t8065 + t8271;
  t14482 = t14399*t8449;
  t14484 = -1.*t8305*t14399;
  t14486 = -1.*t14485*t7880;
  t14490 = -1.*t7728*t14406;
  t14499 = -1.*t14498*t5778;
  t14500 = t14484 + t14486 + t14490 + t14499;
  t14502 = t5778*t14500;
  t14505 = t14406*t8595;
  t14506 = t7728*t14399;
  t14511 = t14498*t8542;
  t14512 = t14485*t5778;
  t14514 = t8305*t14412;
  t14515 = t14506 + t14511 + t14512 + t14514;
  t14516 = t7880*t14515;
  t14517 = t14482 + t14502 + t14505 + t14516;
  t14457 = -1.*t2563*t14455;
  t14458 = t12762 + t14457;
  t14459 = t2563*t14458;
  t14464 = -1.*t2797*t3901;
  t14466 = t2563*t4049;
  t14468 = -1.*t14455*t2797;
  t14469 = t3804 + t14468;
  t14470 = t2797*t14469;
  t14472 = t14459 + t14464 + t14466 + t14470;
  t14548 = -1.*t783*t11079*t2797;
  t14550 = t689*t11067*t2797;
  t14551 = t3967 + t14548 + t14550;
  t14555 = -1.*t783*t2563*t11079;
  t14556 = t2563*t689*t11067;
  t14557 = t14555 + t14556 + t3804;
  t14574 = Power(t783,2);
  t14576 = Power(t689,2);
  t14598 = -1.*t8684*t11501;
  t14601 = -1.*t8851*t11473;
  t14603 = 0. + t14598 + t14601;
  t14591 = t8684*t11501;
  t14592 = t8851*t11473;
  t14593 = 0. + t14591 + t14592;
  t14641 = t11501*t9689;
  t14642 = t11473*t9697;
  t14643 = t8591 + t14641 + t14642;
  t14651 = -1.*t11501*t9801;
  t14653 = -1.*t11473*t9868;
  t14657 = t8040 + t14651 + t14653;
  t14709 = t2563*t469*t689;
  t14710 = t783*t2563*t784;
  t14711 = t14709 + t14710;
  t14717 = -1.*t469*t689*t14399;
  t14724 = -1.*t783*t14399*t784;
  t14726 = t14717 + t14724;
  t14733 = -1.*t469*t689*t14412;
  t14734 = -1.*t783*t14412*t784;
  t14737 = t14733 + t14734;
  t9983 = t234*t4397;
  t9987 = t1497*t344*t2059;
  t10000 = t9983 + t9987;
  t10007 = t234*t4719;
  t10036 = -1.*t1497*t5336;
  t10085 = t10007 + t10036;
  t14776 = -1.*t4777*t2797;
  t14777 = -1.*t344*t14711;
  t14778 = t14776 + t14777;
  t10172 = t234*t8899;
  t10194 = -1.*t1497*t9260;
  t14800 = t783*t469*t14399;
  t14801 = -1.*t689*t14399*t784;
  t14802 = t14800 + t14801;
  t14807 = t4777*t14406;
  t14809 = -1.*t344*t14726;
  t14810 = t14807 + t14809;
  t14820 = t783*t469*t14412;
  t14824 = -1.*t689*t14412*t784;
  t14825 = t14820 + t14824;
  t14829 = t4777*t14399;
  t14830 = -1.*t344*t14737;
  t14832 = t14829 + t14830;
  t10337 = t234*t9712;
  t10354 = -1.*t1497*t9749;
  t10365 = t234*t9871;
  t10366 = -1.*t1497*t9924;
  t14930 = -1.*t469*t689*t14455;
  t14931 = -1.*t783*t14455*t784;
  t14933 = t14930 + t14931;
  t14935 = t783*t469*t14455;
  t14936 = -1.*t689*t14455*t784;
  t14939 = t14935 + t14936;
  t14582 = t2563*t2936;
  t14998 = -1.*t469*t689*t14498;
  t15000 = -1.*t783*t14498*t784;
  t15003 = t14998 + t15000;
  t15005 = t783*t469*t14498;
  t15006 = -1.*t689*t14498*t784;
  t15007 = t15005 + t15006;
  t14940 = -1.*t4397*t14939;
  t14949 = t4719*t14939;
  t15135 = t2936*t344;
  t15136 = t4777*t14933;
  t15141 = t15135 + t15136;
  t15143 = t4777*t2936;
  t15144 = -1.*t344*t14933;
  t15147 = t15143 + t15144;
  t14712 = t4777*t14711;
  t14713 = t10439 + t14712;
  t14958 = t4397*t14939;
  t14965 = -1.*t12165*t11162;
  t14969 = -1.*t14939*t9300;
  t14977 = -1.*t4719*t14939;
  t14983 = t12165*t11162;
  t14985 = t14939*t9300;
  t14731 = t14399*t344;
  t14738 = t4777*t14737;
  t14741 = t14731 + t14738;
  t15010 = t8899*t15007;
  t15020 = -1.*t11601*t14825;
  t15022 = -1.*t15007*t9712;
  t15206 = t14485*t344;
  t15207 = t4777*t15003;
  t15208 = t15206 + t15207;
  t15211 = t4777*t14485;
  t15212 = -1.*t344*t15003;
  t15213 = t15211 + t15212;
  t14716 = t14406*t344;
  t14727 = t4777*t14726;
  t14728 = t14716 + t14727;
  t15041 = t11601*t14825;
  t15046 = t15007*t9712;
  t15052 = -1.*t11601*t14802;
  t15062 = -1.*t15007*t9871;
  t15079 = -1.*t8899*t15007;
  t15089 = t11601*t14802;
  t15093 = t15007*t9871;
  t14404 = -0.00016949530000000016*t14399;
  t14415 = 0.03856*t14414;
  t14417 = t14404 + t14415;
  t14418 = -0.5*var2[17]*t14417;
  t14425 = -0.194401*t5658;
  t14431 = -1.*t5658*t7118;
  t14432 = t7602*t5692;
  t14436 = 0. + t14425 + t14431 + t14432;
  t14437 = -0.008474765*t14399*t14436;
  t14439 = t5658*t7602;
  t14440 = 0.194401*t5692;
  t14442 = t7118*t5692;
  t14444 = 0. + t14439 + t14440 + t14442;
  t14445 = -0.241*t14444*t14414;
  t15295 = -0.16*t5658;
  t15297 = t15295 + t7443;
  t15289 = 0.020000000000000018*t5658;
  t15290 = 0.16*t5692;
  t15291 = t15289 + t15290;
  t14476 = -0.008474765*t14399*t9790;
  t14478 = -0.241*t9663*t14414;
  t14479 = -1.*t14414*t9679;
  t14480 = -0.035165*t14399*t9796;
  t15314 = -1.*t2797*t15297;
  t15315 = t2563*t15291;
  t15317 = t15314 + t15315;
  t15309 = t2563*t15297;
  t15311 = t2797*t15291;
  t15312 = t15309 + t15311;
  t15313 = -1.*t15312*t7880;
  t15319 = -1.*t15317*t5778;
  t15320 = t14484 + t15313 + t14490 + t15319;
  t15322 = t5778*t15320;
  t15324 = t15317*t8542;
  t15329 = t15312*t5778;
  t15330 = t14506 + t15324 + t15329 + t14514;
  t15331 = t7880*t15330;
  t15332 = t14482 + t14505 + t15322 + t15331;
  t14595 = t14593*t5778;
  t14596 = 0. + t14595;
  t14597 = -0.008474765*t14399*t14596;
  t14604 = t14603*t7880;
  t14605 = 0. + t14604;
  t14607 = -0.241*t14605*t14414;
  t14622 = t14603*t14406;
  t14627 = t14593*t14399;
  t14646 = t7880*t14643;
  t14658 = t5778*t14657;
  t14659 = 0. + t14646 + t14658;
  t14667 = t14406*t14643;
  t14669 = t783*t11501*t14412;
  t14670 = -1.*t689*t11473*t14412;
  t14682 = t14399*t14657;
  t14683 = -1.*t783*t11501*t14399;
  t14686 = t689*t11473*t14399;
  t14730 = -1.*t9796*t14728;
  t14742 = -1.*t9679*t14741;
  t14747 = -0.241*t14414*t11431;
  t14749 = -0.008474765*t14399*t11814;
  t14786 = t1497*t8899;
  t14787 = t234*t9260;
  t14791 = 0. + t14786 + t14787;
  t14803 = t1497*t14802;
  t14813 = t234*t14810;
  t14818 = t14803 + t14813;
  t14819 = -1.*t9796*t14818;
  t14828 = t1497*t14825;
  t14833 = t234*t14832;
  t14834 = t14828 + t14833;
  t14835 = -1.*t9679*t14834;
  t14836 = t1497*t9712;
  t14838 = t234*t9749;
  t14839 = 0. + t14836 + t14838;
  t14841 = -0.241*t14414*t14839;
  t14844 = t1497*t9871;
  t14845 = t234*t9924;
  t14846 = 0. + t14844 + t14845;
  t14850 = -0.008474765*t14399*t14846;
  t14875 = 0. + t10172 + t10194;
  t14879 = t234*t14802;
  t14881 = -1.*t1497*t14810;
  t14882 = t14879 + t14881;
  t14884 = -1.*t9796*t14882;
  t14885 = t234*t14825;
  t14890 = -1.*t1497*t14832;
  t14891 = t14885 + t14890;
  t14892 = -1.*t9679*t14891;
  t14893 = 0. + t10337 + t10354;
  t14894 = -0.241*t14414*t14893;
  t14896 = 0. + t10365 + t10366;
  t14899 = -0.008474765*t14399*t14896;
  t14991 = t9712*t12938;
  t14992 = t8899*t13023;
  t14993 = t14991 + t14992;
  t14994 = -0.008474765*t14399*t14993;
  t14997 = t14825*t12938;
  t15016 = -1.*t7728*t14399;
  t15019 = -1.*t11515*t14737;
  t15379 = -1.*t469*t689*t15317;
  t15380 = -1.*t783*t15317*t784;
  t15382 = t15379 + t15380;
  t15384 = t783*t469*t15317;
  t15385 = -1.*t689*t15317*t784;
  t15387 = t15384 + t15385;
  t15028 = t9871*t13057;
  t15029 = t9712*t13103;
  t15030 = 0. + t15028 + t15029;
  t15032 = t9871*t13121;
  t15034 = t8899*t13200;
  t15035 = t15032 + t15034;
  t15036 = -0.241*t14414*t15035;
  t15037 = t14802*t13057;
  t15039 = t11515*t14737;
  t15049 = t14825*t13103;
  t15051 = -1.*t11515*t14726;
  t15074 = t14802*t13121;
  t15086 = t7728*t14406;
  t15088 = t11515*t14726;
  t15197 = t11431*t11649;
  t15198 = t11555*t11744;
  t15200 = t15197 + t15198;
  t15202 = -0.008474765*t14399*t15200;
  t15204 = t14741*t11649;
  t15388 = t8899*t15387;
  t15395 = -1.*t15387*t9712;
  t15217 = -1.*t11538*t14741;
  t15218 = -1.*t11578*t14832;
  t15447 = t15312*t344;
  t15448 = t4777*t15382;
  t15450 = t15447 + t15448;
  t15454 = t4777*t15312;
  t15458 = -1.*t344*t15382;
  t15461 = t15454 + t15458;
  t15225 = t11814*t11913;
  t15226 = t11431*t12004;
  t15227 = t15225 + t15226;
  t15229 = t11814*t12058;
  t15230 = t11555*t12107;
  t15231 = t15229 + t15230;
  t15235 = -0.241*t14414*t15231;
  t15236 = t14728*t11913;
  t15410 = t15387*t9712;
  t15237 = t11538*t14741;
  t15238 = t11578*t14832;
  t15247 = t14741*t12004;
  t15414 = -1.*t15387*t9871;
  t15248 = -1.*t11538*t14728;
  t15249 = -1.*t11578*t14810;
  t15263 = t14728*t12058;
  t15423 = -1.*t8899*t15387;
  t15431 = t15387*t9871;
  t15273 = t11538*t14728;
  t15274 = t11578*t14810;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(0.0219*(-1.*t1497*t2059 + t1144*t234*t344) - 1.527*t4236*(t2059*t234*t344 - 1.*t1497*t4397) - 0.085290585*t2563*(-1.*t1497*t4719 - 1.*t234*t5336) - 1.*t8683*(-1.*t1497*t8899 - 1.*t234*t9260) + 0.085290585*t2797*(-1.*t1497*t9300 - 1.*t234*t9558) - 1.*t9679*(-1.*t1497*t9712 - 1.*t234*t9749) - 1.*t9796*(-1.*t1497*t9871 - 1.*t234*t9924))*var2[1] - 0.5*(-0.085290585*t10085*t2563 - 1.527*t10000*t4236 - 1.*(t10172 + t10194)*t8683 + 0.085290585*t2797*(t234*t9300 - 1.*t1497*t9558) - 1.*(t10337 + t10354)*t9679 - 1.*(t10365 + t10366)*t9796 + 0.0219*t9975)*var2[2])*var2[15];
  p_output1[4]=(-0.5*(-0.0219*t1144*t344 + 1.527*t2059*t344*t4236 - 0.085290585*t2563*t5336 + t344*t8683*t9251 + 0.085290585*t2797*t9558 - 1.*t10580*t9679 - 1.*t10586*t9796)*var2[0] - 0.5*(0.085290585*t10441*t1497*t2563 - 0.085290585*t10454*t1497*t2797 + 0.0219*t1144*t1497*t4777 - 1.527*t1497*t2059*t4236*t4777 - 1.*t1497*t4777*t8683*t9251 + t10466*t1497*t9679 + t10487*t1497*t9796)*var2[1] - 0.5*(-0.085290585*t10441*t234*t2563 + 0.085290585*t10454*t234*t2797 - 0.0219*t1144*t234*t4777 + 1.527*t2059*t234*t4236*t4777 + t234*t4777*t8683*t9251 - 1.*t10466*t234*t9679 - 1.*t10487*t234*t9796)*var2[2] - 0.5*(0.0219*(-1.*t10871*t2059*t344 + t344*(-1.*t10711*t2059*t344 - 1.*t10744*t2059*t344) + t2059*t4777*(-1.*t10711*t4777 - 1.*t10744*t4777) + t4777*(-1.*t10862*t2059*t344 + t10975*t4397 + t10744*t2059*t4777)) + 0.085290585*t2797*(-1.*t11237*t2059*t344 + t11051*(t11113*t2059*t344 + t11129*t2059*t344) + t11204*t5336 + t2059*t4777*(t10441*t11191 + t11051*t11191 + t11113*t5336 + t11129*t5336)) - 0.085290585*t2563*(-1.*t11297*t2059*t344 + t11252*(-1.*t11113*t2059*t344 - 1.*t11129*t2059*t344) + t11267*t9558 + t2059*t4777*(-1.*t10454*t11191 - 1.*t11191*t11252 - 1.*t11113*t9558 - 1.*t11129*t9558)) - 1.527*t4236*(t11405*t5336 + t11252*(-1.*t10441*t11191 - 1.*t11051*t11191 - 1.*t11113*t5336 - 1.*t11129*t5336) + t11346*t9558 + t11051*(t10454*t11191 + t11191*t11252 + t11113*t9558 + t11129*t9558)) - 1.*(t10580*t11649 - 1.*t11744*t344*t9251 + t11431*(t11555*t11562 - 1.*t11538*t344*t9251 - 1.*t11578*t4777*t9251 + t11525*t9260) + t11555*(-1.*t10580*t11538 - 1.*t11431*t11562 - 1.*t10466*t11578 - 1.*t11525*t9749))*t9796 - 1.*t8683*(t10586*t11913 + t10580*t12004 + t11814*(t10580*t11538 + t11431*t11562 + t10466*t11578 + t11525*t9749) + t11431*(-1.*t10586*t11538 - 1.*t10487*t11578 - 1.*t11562*t11814 - 1.*t11525*t9924)) - 1.*t9679*(t10586*t12058 - 1.*t12107*t344*t9251 + t11814*(-1.*t11555*t11562 + t11538*t344*t9251 + t11578*t4777*t9251 - 1.*t11525*t9260) + t11555*(t10586*t11538 + t10487*t11578 + t11562*t11814 + t11525*t9924)))*var2[3])*var2[15];
  p_output1[5]=(-0.5*(t12139 + t12155 + t12167 + t12182 - 1.*t12145*t4777*t8683 - 1.*t12192*t4777*t9679 - 1.*t12221*t4777*t9796)*var2[0] - 0.5*(t12361 + t12369 + t12374 + t12403 - 1.*(t12286*t234 + t12145*t1497*t344)*t8683 - 1.*(t12306*t234 + t12192*t1497*t344)*t9679 - 1.*(t12335*t234 + t12221*t1497*t344)*t9796)*var2[1] - 0.5*(t12241 + t12263 + t12275 + t12305 - 1.*(t12286*t1497 - 1.*t12145*t234*t344)*t8683 - 1.*(t12306*t1497 - 1.*t12192*t234*t344)*t9679 - 1.*(t12335*t1497 - 1.*t12221*t234*t344)*t9796)*var2[2] - 0.5*(0.0219*(t13235 + t344*(t13257 + t13271 + t13279 + t13239*t13245*t2059 + t13245*t13255*t2059 + t10695*t4397)) + 0.085290585*t2797*(t13313 + t13339 + t11051*(t12665 + t12678 + t13296 + t13300 - 1.*t12627*t13239*t2059 - 1.*t12627*t13255*t2059) + t2059*t4777*(t12591 + t12634 + t13334 + t13335 + t11051*t12627*t4777 - 1.*t12627*t344*t5336)) - 1.527*t4236*(t13416 + t13445 + t11252*(t12799 + t12831 + t13405 + t13410 - 1.*t11051*t12627*t4777 + t12627*t344*t5336) + t11051*(t12876 + t12895 + t13419 + t13421 + t11252*t12627*t4777 - 1.*t12627*t344*t9558)) - 0.085290585*t2563*(t13379 + t13392 + t11252*(t12719 + t12722 + t13368 + t13373 + t12627*t13239*t2059 + t12627*t13255*t2059) + t2059*t4777*(t12747 + t12753 + t13380 + t13381 - 1.*t11252*t12627*t4777 + t12627*t344*t9558)) - 1.*(t11744*t12145*t4777 + t11649*t12192*t4777 + t11431*(t12947 + t12982 - 1.*t11578*t12145*t344 + t11538*t12145*t4777 + t11555*t12960*t4777 - 1.*t12960*t344*t9260) + t11555*(t12986 + t13001 + t11578*t12192*t344 - 1.*t11538*t12192*t4777 - 1.*t11431*t12960*t4777 + t12960*t344*t9749))*t9796 - 1.*t9679*(t12107*t12145*t4777 + t12058*t12221*t4777 + t11814*(t13138 + t13151 + t11578*t12145*t344 - 1.*t11538*t12145*t4777 - 1.*t11555*t12960*t4777 + t12960*t344*t9260) + t11555*(t13157 + t13173 - 1.*t11578*t12221*t344 + t11538*t12221*t4777 + t11814*t12960*t4777 - 1.*t12960*t344*t9924)) - 1.*t8683*(t12004*t12192*t4777 + t11913*t12221*t4777 + t11814*(t13030 + t13039 - 1.*t11578*t12192*t344 + t11538*t12192*t4777 + t11431*t12960*t4777 - 1.*t12960*t344*t9749) + t11431*(t13083 + t13093 + t11578*t12221*t344 - 1.*t11538*t12221*t4777 - 1.*t11814*t12960*t4777 + t12960*t344*t9924)))*var2[3] - 0.5*(t12507 + 0.085290585*t2797*(t12568 + t12702 + (t12660 + t12665 + t12678 - 1.*t12627*t2059)*t4719 + t4397*(t12591 + t12594 + t12634 + t12627*t5278)) - 0.085290585*t2563*(t12714 + t12778 + (t12716 + t12719 + t12722 + t12627*t2059)*t9300 + t4397*(t12747 + t12749 + t12753 - 1.*t12627*t9482)) - 1.527*t4236*(t12863 + t12923 + (t12799 + t12824 + t12831 - 1.*t12627*t5278)*t9300 + t4719*(t12876 + t12887 + t12895 + t12627*t9482)) - 1.*(t12306*t12938 + t12286*t13023 + (t11515*t12145 + t12947 + t12982 + t12960*t9251)*t9712 + t8899*(-1.*t11515*t12192 + t12986 + t13001 - 1.*t12960*t9737))*t9796 - 1.*t8683*(t12335*t13057 + t12306*t13103 + (t11515*t12192 + t13030 + t13039 + t12960*t9737)*t9871 + t9712*(-1.*t11515*t12221 + t13083 + t13093 - 1.*t12960*t9921)) - 1.*t9679*(t12335*t13121 + t12286*t13200 + (-1.*t11515*t12145 + t13138 + t13151 - 1.*t12960*t9251)*t9871 + t8899*(t11515*t12221 + t13157 + t13173 + t12960*t9921)))*var2[4])*var2[15];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=(-0.5*(t12139 + t12155 + t12167 + t12182 - 1.*t1144*t4777*t8683 - 1.*t13881*t4777*t9679 - 1.*t13894*t4777*t9796)*var2[0] - 0.5*(t12361 + t12369 + t12374 + t12403 - 1.*(t13908*t234 + t13881*t1497*t344)*t9679 - 1.*(t13937*t234 + t13894*t1497*t344)*t9796 - 1.*t8683*t9975)*var2[1] - 0.5*(t12241 + t12263 + t12275 + t12305 - 1.*t12231*t8683 - 1.*(t13908*t1497 - 1.*t13881*t234*t344)*t9679 - 1.*(t13937*t1497 - 1.*t13894*t234*t344)*t9796)*var2[2] - 0.5*(0.085290585*t2797*(t13313 + t13339 + t11051*(t12678 + t13296 + t13300 + t14003 - 1.*t13239*t13988*t2059 - 1.*t13255*t13988*t2059) + t2059*t4777*(t12634 + t13334 + t13335 + t13981 + t11051*t13988*t4777 - 1.*t13988*t344*t5336)) + 0.0219*(t13235 + t344*(t13257 + t13271 + t13279 + t13239*t14221*t2059 + t13255*t14221*t2059 + t4397*(t10694 - 0.02*t469*t783))) - 1.527*t4236*(t13416 + t13445 + t11252*(t12831 + t13405 + t13410 + t14060 - 1.*t11051*t13988*t4777 + t13988*t344*t5336) + t11051*(t12876 + t13419 + t13421 + t14070 + t11252*t13988*t4777 - 1.*t13988*t344*t9558)) - 0.085290585*t2563*(t13379 + t13392 + t11252*(t12722 + t13368 + t13373 + t14031 + t13239*t13988*t2059 + t13255*t13988*t2059) + t2059*t4777*(t12747 + t13380 + t13381 + t14054 - 1.*t11252*t13988*t4777 + t13988*t344*t9558)) - 1.*(t1144*t11744*t4777 + t11649*t13881*t4777 + t11431*(t14088 + t14103 - 1.*t1144*t11578*t344 + t1144*t11538*t4777 + t11555*t14097*t4777 - 1.*t14097*t344*t9260) + t11555*(t14116 + t14124 + t11578*t13881*t344 - 1.*t11538*t13881*t4777 - 1.*t11431*t14097*t4777 + t14097*t344*t9749))*t9796 - 1.*t9679*(t1144*t12107*t4777 + t12058*t13894*t4777 + t11814*(t14178 + t14186 + t1144*t11578*t344 - 1.*t1144*t11538*t4777 - 1.*t11555*t14097*t4777 + t14097*t344*t9260) + t11555*(t14196 + t14199 - 1.*t11578*t13894*t344 + t11538*t13894*t4777 + t11814*t14097*t4777 - 1.*t14097*t344*t9924)) - 1.*t8683*(t12004*t13881*t4777 + t11913*t13894*t4777 + t11814*(t14137 + t14157 - 1.*t11578*t13881*t344 + t11538*t13881*t4777 + t11431*t14097*t4777 - 1.*t14097*t344*t9749) + t11431*(t14165 + t14168 + t11578*t13894*t344 - 1.*t11538*t13894*t4777 - 1.*t11814*t14097*t4777 + t14097*t344*t9924)))*var2[3] - 0.5*(t12507 + 0.085290585*t2797*(t12568 + t12702 + (t12660 + t12678 + t14003 - 1.*t13988*t2059)*t4719 + t4397*(t12594 + t12634 + t13981 + t13988*t5278)) - 0.085290585*t2563*(t12714 + t12778 + (t12716 + t12722 + t14031 + t13988*t2059)*t9300 + t4397*(t12747 + t12749 + t14054 - 1.*t13988*t9482)) - 1.527*t4236*(t12863 + t12923 + (t12824 + t12831 + t14060 - 1.*t13988*t5278)*t9300 + t4719*(t12876 + t12887 + t14070 + t13988*t9482)) - 1.*(t12938*t13908 + t13023*t2059 + (t1144*t11515 + t14088 + t14103 + t14097*t9251)*t9712 + t8899*(-1.*t11515*t13881 + t14116 + t14124 - 1.*t14097*t9737))*t9796 - 1.*t8683*(t13103*t13908 + t13057*t13937 + (t11515*t13881 + t14137 + t14157 + t14097*t9737)*t9871 + t9712*(-1.*t11515*t13894 + t14165 + t14168 - 1.*t14097*t9921)) - 1.*t9679*(t13121*t13937 + t13200*t2059 + (-1.*t1144*t11515 + t14178 + t14186 - 1.*t14097*t9251)*t9871 + t8899*(t11515*t13894 + t14196 + t14199 + t14097*t9921)))*var2[4] - 0.5*(0.085290585*Power(t2797,2)*(t11067*t689 - 1.*t13720*t689 - 1.*t11079*t783 - 1.*t13704*t783) - 0.085290585*Power(t2563,2)*(-1.*t11067*t689 + t13720*t689 + t11079*t783 + t13704*t783) + 0.0219*(-1.*t10684*t689 - 0.02*t689*t783) - 1.527*t4236*(t2563*(t11079*t2563*t689 + t13704*t2563*t689 + t11067*t2563*t783 - 1.*t13720*t2563*t783) + t2797*(t11079*t2797*t689 + t13704*t2797*t689 + t11067*t2797*t783 - 1.*t13720*t2797*t783)) - 1.*t7880*(t11473*t689 - 1.*t11501*t783 - 1.*t13823*t8684 - 1.*t13787*t8851)*t9679 - 1.*t5778*(-1.*t11473*t689 + t11501*t783 + t13823*t8684 + t13787*t8851)*t9796 - 1.*t8683*(t7880*(-1.*t11501*t689*t8542 - 1.*t11473*t783*t8542 + t13823*t9689 + t13787*t9697) + t5778*(t11501*t5778*t689 + t11473*t5778*t783 - 1.*t13823*t9801 - 1.*t13787*t9868)))*var2[5])*var2[15];
  p_output1[16]=var2[15]*(t14418 - 0.5*(-0.241*t11555*t14517 + t14730 + t14742 + t14747 + t14749 + 0.085290585*t11051*t2797 + 0.085290585*t14713*t2797 - 1.527*t14472*t2059*t4777)*var2[0] - 0.5*(-1.527*t10000*t14472 - 0.241*t14517*t14875 + t14884 + t14892 + t14894 + t14899 + 0.085290585*t10085*t2797 + 0.085290585*(-1.*t14778*t1497 + t12165*t234)*t2797)*var2[1] - 0.5*(-0.241*t14517*t14791 + t14819 + t14835 + t14841 + t14850 + 0.085290585*(t12165*t1497 + t14778*t234)*t2797 - 1.527*t14472*(-1.*t2059*t234*t344 + t1497*t4397) + 0.085290585*t2797*(t1497*t4719 + t234*t5336))*var2[2] - 0.5*(-1.527*(t11252*t11346 + t11051*t11405)*t14472 + t15202 - 0.241*t14517*t15227 + t15235 + 0.085290585*t2563*(t11051*t11204 + t11237*t2059*t4777) + 0.085290585*t2797*(t11252*t11267 + t11297*t2059*t4777) + 0.085290585*t2797*(t11204*t11252 + t11051*(t14940 + t15147*t2059*t344 - 1.*t15141*t2059*t4777) + t2059*t4777*(t11394 + t11399 + t11403 + t14949 + t11051*t15141 + t15147*t5336)) - 0.085290585*t2563*(t11267*t14713 + t11252*(t14958 - 1.*t15147*t2059*t344 + t15141*t2059*t4777) + t2059*t4777*(-1.*t11129*t14713 - 1.*t11191*t14778 + t14965 + t14969 - 1.*t11252*t15141 - 1.*t15147*t9558)) - 1.527*t4236*(t11252*t11405 + t11346*t14713 + t11252*(t11285 + t11289 + t11293 + t14977 - 1.*t11051*t15141 - 1.*t15147*t5336) + t11051*(t11129*t14713 + t11191*t14778 + t14983 + t14985 + t11252*t15141 + t15147*t9558)) - 1.*(t15204 + t11431*(t15010 + t11555*t15208 + t15213*t9260) + t11555*(t15020 + t15022 - 1.*t11431*t15208 + t15217 + t15218 - 1.*t15213*t9749))*t9796 - 1.*t8683*(t15236 + t15247 + t11814*(t15041 + t15046 + t11431*t15208 + t15237 + t15238 + t15213*t9749) + t11431*(t15052 + t15062 - 1.*t11814*t15208 + t15248 + t15249 - 1.*t15213*t9924)) - 1.*t9679*(t15263 + t11814*(t15079 - 1.*t11555*t15208 - 1.*t15213*t9260) + t11555*(t15089 + t15093 + t11814*t15208 + t15273 + t15274 + t15213*t9924)))*var2[3] - 0.5*(t14994 - 0.241*t14517*t15030 + t15036 + 0.085290585*t2563*(t12696*t4397 + t12544*t4719) + 0.085290585*t2797*((t14940 - 1.*t14933*t2059)*t4719 + t4397*(t11394 + t12919 + t14949 + t2797*t2936 + t3967 + t14933*t5278) + t12544*t9300) + 0.085290585*t2797*(t12767*t4397 + t12711*t9300) - 1.527*t14472*(t12921*t4719 + t12859*t9300) - 0.085290585*t2563*(t12165*t12711 + (t14958 + t14933*t2059)*t9300 + t4397*(t12690 - 1.*t11091*t14711 + t14965 + t14969 + t3001 - 1.*t14933*t9482)) - 1.527*t4236*(t12165*t12859 + t12921*t9300 + (t11285 + t12762 + t12764 + t14977 + t4041 - 1.*t14933*t5278)*t9300 + t4719*(t14582 + t11091*t14711 + t14983 + t14985 + t3804 + t14933*t9482)) - 1.*(t14997 + (t15010 + t15003*t9251)*t9712 + t8899*(t15016 + t15019 + t15020 + t15022 - 1.*t14485*t5778 - 1.*t15003*t9737))*t9796 - 1.*t8683*(t15037 + t15049 + (t14506 + t14512 + t15039 + t15041 + t15046 + t15003*t9737)*t9871 + t9712*(t14486 + t14490 + t15051 + t15052 + t15062 - 1.*t15003*t9921)) - 1.*t9679*(t15074 + (t15079 - 1.*t15003*t9251)*t9871 + t8899*(t15086 + t15088 + t15089 + t15093 + t14485*t7880 + t15003*t9921)))*var2[4] - 0.5*(t14597 + t14607 - 0.241*t14517*t14659 - 1.527*t14472*(t14557*t2563 + t14551*t2797) + 0.17058117*t2563*t2797*(-1.*t11079*t689 - 1.*t11067*t783) + 0.17058117*t2563*t2797*(t11079*t689 + t11067*t783) - 1.527*t4236*(t14551*t2563 - 1.*t14557*t2797 + t2797*(t14555 + t14556 + t14582 - 1.*t14455*t14574*t2797 - 1.*t14455*t14576*t2797 + t3804) + t2563*(t12762 - 1.*t14455*t14574*t2563 - 1.*t14455*t14576*t2563 + t4041 - 1.*t11067*t2797*t689 + t11079*t2797*t783)) - 1.*(t14622 + t7880*(-1.*t14498*t783*t8684 + t14498*t689*t8851))*t9679 - 1.*(t14627 + t5778*(t14498*t783*t8684 - 1.*t14498*t689*t8851))*t9796 - 1.*t8683*(t14667 + t14682 + t7880*(t14506 + t14512 + t14669 + t14670 + t14498*t783*t9689 - 1.*t14498*t689*t9697) + t5778*(t14486 + t14490 + t14683 + t14686 - 1.*t14498*t783*t9801 + t14498*t689*t9868)))*var2[5] - 0.5*(t14476 + t14478 + t14479 + t14480 - 3.054*t14472*t4236 - 0.241*t14517*t8643 - 1.*t14517*t8683)*var2[15] - 0.5*(t14437 + t14445 - 0.0034116234*t2563 + 0.0034116234*t2797)*var2[16]);
  p_output1[17]=var2[15]*(t14418 - 0.5*(t14730 + t14742 + t14747 + t14749 - 0.241*t11555*t15332)*var2[0] - 0.5*(t14884 + t14892 + t14894 + t14899 - 0.241*t14875*t15332)*var2[1] - 0.5*(t14819 + t14835 + t14841 + t14850 - 0.241*t14791*t15332)*var2[2] - 0.5*(t15202 + t15235 - 0.241*t15227*t15332 - 1.*(t15204 + t11431*(t15388 + t11555*t15450 + t15461*t9260) + t11555*(t15020 + t15217 + t15218 + t15395 - 1.*t11431*t15450 - 1.*t15461*t9749))*t9796 - 1.*t8683*(t15236 + t15247 + t11814*(t15041 + t15237 + t15238 + t15410 + t11431*t15450 + t15461*t9749) + t11431*(t15052 + t15248 + t15249 + t15414 - 1.*t11814*t15450 - 1.*t15461*t9924)) - 1.*t9679*(t15263 + t11814*(t15423 - 1.*t11555*t15450 - 1.*t15461*t9260) + t11555*(t15089 + t15273 + t15274 + t15431 + t11814*t15450 + t15461*t9924)))*var2[3] - 0.5*(t14994 + t15036 - 0.241*t15030*t15332 - 1.*(t14997 + (t15388 + t15382*t9251)*t9712 + t8899*(t15016 + t15019 + t15020 + t15395 - 1.*t15312*t5778 - 1.*t15382*t9737))*t9796 - 1.*t8683*(t15037 + t15049 + (t14506 + t15039 + t15041 + t15329 + t15410 + t15382*t9737)*t9871 + t9712*(t14490 + t15051 + t15052 + t15313 + t15414 - 1.*t15382*t9921)) - 1.*t9679*(t15074 + (t15423 - 1.*t15382*t9251)*t9871 + t8899*(t15086 + t15088 + t15089 + t15431 + t15312*t7880 + t15382*t9921)))*var2[4] - 0.5*(t14597 + t14607 - 0.241*t14659*t15332 - 1.*(t14622 + t7880*(-1.*t15317*t783*t8684 + t15317*t689*t8851))*t9679 - 1.*(t14627 + t5778*(t15317*t783*t8684 - 1.*t15317*t689*t8851))*t9796 - 1.*t8683*(t14667 + t14682 + t7880*(t14506 + t14669 + t14670 + t15329 + t15317*t783*t9689 - 1.*t15317*t689*t9697) + t5778*(t14490 + t14683 + t14686 + t15313 - 1.*t15317*t783*t9801 + t15317*t689*t9868)))*var2[5] - 0.5*(t14476 + t14478 + t14479 + t14480 - 0.241*t15332*t8643 - 1.*t15332*t8683)*var2[15] - 0.5*(t14437 + t14445 - 1.*(0.194401*t5658 + t15291*t5658 + t15297*t5692 + t5658*t7118 - 1.*t5692*t7602)*t9679 - 1.*(t14439 + t14440 + t14442 - 1.*t15297*t5658 + t15291*t5692)*t9796)*var2[16]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec16_plane.hh"

namespace SymFunction
{

void Ce3_vec16_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
