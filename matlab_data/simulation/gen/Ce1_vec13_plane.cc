/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:11:45 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t472;
  double t747;
  double t1245;
  double t1339;
  double t1581;
  double t1960;
  double t2125;
  double t2639;
  double t566;
  double t807;
  double t1027;
  double t418;
  double t5275;
  double t5316;
  double t5599;
  double t5637;
  double t5831;
  double t6090;
  double t6125;
  double t6149;
  double t6167;
  double t6197;
  double t6222;
  double t6227;
  double t5286;
  double t5458;
  double t5531;
  double t6307;
  double t6328;
  double t6340;
  double t6350;
  double t6398;
  double t6423;
  double t6475;
  double t5583;
  double t6164;
  double t6265;
  double t6283;
  double t4056;
  double t4495;
  double t4513;
  double t4599;
  double t4766;
  double t4982;
  double t5027;
  double t6591;
  double t6610;
  double t6745;
  double t1155;
  double t2769;
  double t2967;
  double t3444;
  double t3456;
  double t3565;
  double t3650;
  double t3821;
  double t3824;
  double t6342;
  double t6484;
  double t6497;
  double t6551;
  double t6760;
  double t6865;
  double t6872;
  double t7044;
  double t7049;
  double t7643;
  double t7648;
  double t7656;
  double t7714;
  double t7743;
  double t8995;
  double t9047;
  double t7127;
  double t7284;
  double t7299;
  double t9158;
  double t9245;
  double t9305;
  double t9316;
  double t9323;
  double t9341;
  double t9350;
  double t9251;
  double t8200;
  double t8134;
  double t8136;
  double t9379;
  double t9384;
  double t9402;
  double t8835;
  double t8837;
  double t8705;
  double t8713;
  double t8886;
  double t8889;
  double t8869;
  double t8872;
  double t9247;
  double t9365;
  double t9250;
  double t9314;
  double t10070;
  double t10072;
  double t10076;
  double t10085;
  double t10088;
  double t9366;
  double t10139;
  double t10148;
  double t10152;
  double t10073;
  double t10091;
  double t10133;
  double t9404;
  double t9419;
  double t9424;
  double t9432;
  double t9435;
  double t9438;
  double t9490;
  double t9513;
  double t9515;
  double t9516;
  double t9521;
  double t9682;
  double t9697;
  double t9699;
  double t9700;
  double t9721;
  double t9723;
  double t9725;
  double t9729;
  double t9731;
  double t9738;
  double t9769;
  double t9779;
  double t9780;
  double t9801;
  double t9820;
  double t9834;
  double t9852;
  double t9853;
  double t9865;
  double t9871;
  double t9873;
  double t9874;
  double t9989;
  double t10035;
  double t10043;
  double t10050;
  double t8032;
  double t8037;
  double t8087;
  double t9178;
  double t9180;
  double t9194;
  double t8368;
  double t8372;
  double t8480;
  double t10373;
  double t10374;
  double t10375;
  double t9209;
  double t9210;
  double t9219;
  double t7447;
  double t7448;
  double t7450;
  double t7454;
  double t7587;
  double t7600;
  double t7662;
  double t7663;
  double t7664;
  double t7783;
  double t7805;
  double t7822;
  double t9205;
  double t10291;
  double t10298;
  double t10305;
  double t8154;
  double t8323;
  double t8360;
  double t8516;
  double t8524;
  double t8654;
  double t8665;
  double t8666;
  double t8690;
  double t8834;
  double t8844;
  double t8848;
  double t8880;
  double t8916;
  double t8917;
  double t10238;
  double t10241;
  double t10242;
  double t10289;
  double t10322;
  double t10335;
  double t10338;
  double t10339;
  double t10351;
  double t10353;
  double t8991;
  double t9054;
  double t9057;
  double t9058;
  double t9092;
  double t9099;
  double t9104;
  double t9108;
  double t9125;
  double t9128;
  double t10396;
  double t10397;
  double t10401;
  double t9261;
  double t9357;
  double t9360;
  double t9361;
  double t9374;
  double t9376;
  double t9414;
  double t9417;
  double t9418;
  double t10598;
  double t10599;
  double t10600;
  double t10602;
  double t10603;
  double t10615;
  double t10617;
  double t10618;
  double t10620;
  double t10626;
  double t10628;
  double t10629;
  double t10631;
  double t10138;
  double t10161;
  double t10163;
  double t10166;
  double t10175;
  double t10190;
  double t10191;
  double t10199;
  double t10201;
  double t10665;
  double t10666;
  double t10672;
  double t10674;
  double t10675;
  double t10677;
  double t10680;
  double t10682;
  double t10684;
  double t10686;
  double t10688;
  double t10690;
  double t10693;
  double t10694;
  double t10695;
  double t10696;
  double t10702;
  double t10709;
  double t10710;
  double t10713;
  double t10714;
  double t10717;
  double t10720;
  double t10723;
  double t10728;
  double t10730;
  double t10733;
  double t10734;
  double t10735;
  double t10741;
  double t10744;
  double t10762;
  double t10383;
  double t10385;
  double t10413;
  double t10414;
  double t10415;
  double t10438;
  double t10440;
  double t10441;
  double t10452;
  double t10453;
  double t10455;
  double t10471;
  double t10473;
  double t10492;
  double t10493;
  double t10496;
  double t10503;
  double t10515;
  double t10516;
  double t10519;
  double t10525;
  double t10527;
  double t10533;
  double t10570;
  double t10577;
  double t10773;
  double t10776;
  double t10782;
  double t10650;
  double t10651;
  double t10652;
  double t10966;
  double t10968;
  double t10969;
  double t10979;
  double t10981;
  double t10982;
  double t10983;
  double t10986;
  double t10989;
  double t10994;
  double t10997;
  double t10998;
  double t10999;
  double t11002;
  double t11005;
  double t11013;
  double t11019;
  double t11020;
  double t11021;
  double t10552;
  double t10554;
  double t10557;
  double t10641;
  double t10643;
  double t10645;
  double t11081;
  double t11086;
  double t11087;
  double t11094;
  double t11099;
  double t11100;
  double t11105;
  double t11106;
  double t11135;
  double t11178;
  double t11179;
  double t11080;
  double t11107;
  double t11109;
  double t11120;
  double t11121;
  double t11122;
  double t9174;
  double t9195;
  double t9196;
  double t11170;
  double t11219;
  double t11220;
  double t11221;
  double t11210;
  double t11211;
  double t11216;
  double t11181;
  double t11244;
  double t11245;
  double t11246;
  double t11252;
  double t11257;
  double t11258;
  double t11267;
  double t11268;
  double t11272;
  double t11259;
  double t11261;
  double t11266;
  double t11273;
  double t11275;
  double t11293;
  double t11296;
  double t11301;
  double t11217;
  double t11227;
  double t11241;
  double t11357;
  double t11371;
  double t11372;
  double t11504;
  double t11505;
  double t11506;
  double t11515;
  double t11497;
  double t11498;
  double t11500;
  double t11528;
  double t11529;
  double t11516;
  double t11519;
  double t11520;
  double t11523;
  double t11540;
  double t11542;
  double t11545;
  double t11524;
  double t11525;
  double t11537;
  double t11546;
  double t11547;
  double t11552;
  double t11553;
  double t11554;
  double t11503;
  double t11507;
  double t11512;
  double t11118;
  double t11125;
  double t11126;
  double t11704;
  double t11705;
  double t11706;
  double t11136;
  double t11137;
  double t11733;
  double t11734;
  double t11736;
  double t11311;
  double t11312;
  double t11314;
  double t11315;
  double t11339;
  double t11344;
  double t11347;
  double t11348;
  double t11392;
  double t11394;
  double t11395;
  double t11397;
  double t11420;
  double t11422;
  double t11423;
  double t11424;
  double t11456;
  double t11460;
  double t11461;
  double t11467;
  double t11483;
  double t11484;
  double t11489;
  double t11490;
  double t11841;
  double t11842;
  double t11843;
  double t11559;
  double t11560;
  double t11564;
  double t11566;
  double t11832;
  double t11579;
  double t11580;
  double t11582;
  double t11583;
  double t11598;
  double t11601;
  double t11603;
  double t11604;
  double t11627;
  double t11630;
  double t11635;
  double t11636;
  double t11663;
  double t11666;
  double t11667;
  double t11671;
  double t11683;
  double t11692;
  double t11693;
  double t11694;
  double t11957;
  double t11959;
  double t11960;
  double t12002;
  double t12006;
  double t12008;
  double t10340;
  double t12090;
  double t12080;
  double t12081;
  double t12082;
  double t10359;
  double t12219;
  double t12220;
  double t12222;
  double t12209;
  double t12210;
  double t12213;
  double t12218;
  double t12230;
  double t12231;
  double t12234;
  double t12236;
  double t12237;
  double t9223;
  double t9229;
  double t12353;
  double t12354;
  double t12359;
  double t12346;
  double t12347;
  double t12348;
  double t12352;
  double t12363;
  double t12366;
  double t12373;
  double t12380;
  double t12384;
  double t12337;
  double t12341;
  double t12342;
  double t12343;
  double t12344;
  double t12539;
  double t12547;
  double t12549;
  double t12394;
  double t12525;
  double t12528;
  double t12529;
  double t12398;
  double t12399;
  double t12538;
  double t12552;
  double t12553;
  double t12570;
  double t12571;
  double t12572;
  double t12417;
  double t12419;
  double t12420;
  double t12422;
  double t12423;
  double t12427;
  double t12428;
  double t12431;
  double t12434;
  double t12436;
  double t12438;
  double t12450;
  double t12451;
  double t12462;
  double t12463;
  double t12479;
  double t12496;
  double t12504;
  double t12506;
  double t11757;
  double t11760;
  double t11732;
  double t11745;
  double t11771;
  double t11774;
  double t11785;
  double t11786;
  double t11799;
  double t11800;
  double t11817;
  double t11818;
  double t11833;
  double t11834;
  double t11858;
  double t11860;
  double t11875;
  double t11876;
  double t11890;
  double t11891;
  double t11908;
  double t11915;
  double t11929;
  double t11932;
  double t12660;
  double t12662;
  double t11321;
  double t11322;
  double t11243;
  double t11264;
  double t12677;
  double t12678;
  double t12680;
  double t12689;
  double t12690;
  double t11373;
  double t11379;
  double t11400;
  double t11406;
  double t12701;
  double t12702;
  double t11437;
  double t11438;
  double t12720;
  double t12721;
  double t11470;
  double t11471;
  double t12724;
  double t12725;
  double t12736;
  double t12737;
  double t11513;
  double t11526;
  double t11569;
  double t11570;
  double t12760;
  double t12761;
  double t12763;
  double t11588;
  double t11589;
  double t12772;
  double t12774;
  double t11609;
  double t11611;
  double t12791;
  double t12792;
  double t12802;
  double t12803;
  double t11645;
  double t11647;
  double t11674;
  double t11675;
  double t12815;
  double t12816;
  double t12819;
  double t12214;
  double t12244;
  double t12269;
  double t12281;
  double t12282;
  double t12304;
  double t12314;
  double t12316;
  double t12351;
  double t12397;
  double t12435;
  double t12455;
  double t12484;
  double t12503;
  double t13087;
  double t13089;
  double t13091;
  double t13093;
  double t13096;
  double t12536;
  double t13103;
  double t13108;
  double t12589;
  double t13126;
  double t13127;
  double t13128;
  double t13133;
  double t13134;
  double t13135;
  double t13136;
  double t13138;
  double t13139;
  double t12605;
  double t13144;
  double t13146;
  double t12618;
  double t13164;
  double t12631;
  double t13174;
  double t13177;
  double t12642;
  double t13384;
  double t13385;
  double t13386;
  double t13388;
  double t13389;
  double t13390;
  double t13074;
  double t13409;
  double t13412;
  double t13456;
  double t13458;
  double t13459;
  double t13482;
  double t13484;
  double t13485;
  double t13534;
  double t13535;
  double t13538;
  double t13557;
  double t13559;
  double t13560;
  double t13465;
  double t13487;
  double t13505;
  double t13511;
  double t13514;
  double t13515;
  double t13517;
  double t13521;
  double t13522;
  double t13523;
  double t13524;
  double t13533;
  double t13539;
  double t13544;
  double t13546;
  double t13561;
  double t13563;
  double t13564;
  double t13577;
  double t13578;
  double t13580;
  double t13581;
  double t13584;
  double t13651;
  double t13652;
  double t13653;
  double t13655;
  double t13656;
  double t13657;
  double t13661;
  double t13663;
  double t13665;
  double t13668;
  double t13692;
  double t13693;
  double t13694;
  double t13696;
  double t13697;
  double t13698;
  double t13700;
  double t13701;
  double t13702;
  double t13706;
  double t13707;
  double t13708;
  double t13709;
  double t13711;
  double t13741;
  double t13742;
  double t13743;
  t472 = Cos(var1[13]);
  t747 = Sin(var1[13]);
  t1245 = -1.*t472;
  t1339 = 1. + t1245;
  t1581 = -0.194401*t1339;
  t1960 = -0.234401*t472;
  t2125 = -0.04*t747;
  t2639 = t1581 + t1960 + t2125;
  t566 = -0.04*t472;
  t807 = 0.04*t747;
  t1027 = t566 + t807;
  t418 = Cos(var1[4]);
  t5275 = Cos(var1[14]);
  t5316 = Sin(var1[14]);
  t5599 = -1.*t5275;
  t5637 = 1. + t5599;
  t5831 = -0.336601*t5637;
  t6090 = -0.356601*t5275;
  t6125 = -0.16*t5316;
  t6149 = 0. + t5831 + t6090 + t6125;
  t6167 = -0.20833*t5637;
  t6197 = -0.36833*t5275;
  t6222 = 0.020000000000000018*t5316;
  t6227 = 0. + t6167 + t6197 + t6222;
  t5286 = t472*t5275;
  t5458 = -1.*t747*t5316;
  t5531 = 0. + t5286 + t5458;
  t6307 = t5275*t747;
  t6328 = t472*t5316;
  t6340 = 0. + t6307 + t6328;
  t6350 = -0.194401*t747;
  t6398 = -1.*t747*t6149;
  t6423 = t472*t6227;
  t6475 = 0. + t6350 + t6398 + t6423;
  t5583 = -0.194401*t1339;
  t6164 = t472*t6149;
  t6265 = t747*t6227;
  t6283 = 0. + t5583 + t6164 + t6265;
  t4056 = Cos(var1[5]);
  t4495 = Sin(var1[12]);
  t4513 = -1.*t4056*t4495;
  t4599 = Cos(var1[12]);
  t4766 = Sin(var1[5]);
  t4982 = t4599*t4766;
  t5027 = t4513 + t4982;
  t6591 = -1.*t5275*t747;
  t6610 = -1.*t472*t5316;
  t6745 = 0. + t6591 + t6610;
  t1155 = -1.*t472*t1027;
  t2769 = -1.*t2639*t747;
  t2967 = t1155 + t2769;
  t3444 = -1.*t472*t2967;
  t3456 = t472*t2639;
  t3565 = -1.*t1027*t747;
  t3650 = t3456 + t3565;
  t3821 = -1.*t747*t3650;
  t3824 = t3444 + t3821;
  t6342 = -1.*t6283*t6340;
  t6484 = -1.*t6475*t5531;
  t6497 = 0. + t6342 + t6484;
  t6551 = -1.*t5531*t6497;
  t6760 = t6475*t6745;
  t6865 = t6283*t5531;
  t6872 = 0. + t6760 + t6865;
  t7044 = -1.*t6340*t6872;
  t7049 = 0. + t6551 + t7044;
  t7643 = -0.081715*t6745;
  t7648 = -0.11459*t6340;
  t7656 = 0. + t7643 + t7648;
  t7714 = 0.032875*t5531;
  t7743 = 0. + t7714;
  t8995 = 0.04*t472;
  t9047 = t8995 + t807;
  t7127 = t4599*t4056;
  t7284 = t4495*t4766;
  t7299 = t7127 + t7284;
  t9158 = Sin(var1[4]);
  t9245 = t6591 + t6610;
  t9305 = t5286 + t5458;
  t9316 = -0.194401*t472;
  t9323 = -1.*t472*t6149;
  t9341 = -1.*t747*t6227;
  t9350 = t9316 + t9323 + t9341;
  t9251 = t6350 + t6398 + t6423;
  t8200 = 0. + t4599;
  t8134 = -1.*t4495;
  t8136 = 0. + t8134;
  t9379 = -1.*t472*t5275;
  t9384 = t747*t5316;
  t9402 = t9379 + t9384;
  t8835 = t4495*t6745;
  t8837 = 0. + t8835;
  t8705 = t4599*t6745;
  t8713 = 0. + t8705;
  t8886 = t4495*t5531;
  t8889 = 0. + t8886;
  t8869 = t4599*t5531;
  t8872 = 0. + t8869;
  t9247 = -1.*t9245*t6497;
  t9365 = -1.*t9305*t6872;
  t9250 = -1.*t6475*t9245;
  t9314 = -1.*t6283*t9305;
  t10070 = -0.16*t5275;
  t10072 = t10070 + t6222;
  t10076 = 0.020000000000000018*t5275;
  t10085 = 0.16*t5316;
  t10088 = t10076 + t10085;
  t9366 = t6283*t9245;
  t10139 = -1.*t747*t10072;
  t10148 = t472*t10088;
  t10152 = t10139 + t10148;
  t10073 = t472*t10072;
  t10091 = t747*t10088;
  t10133 = t10073 + t10091;
  t9404 = t6475*t9402;
  t9419 = t8200*t4056;
  t9424 = -1.*t8136*t4766;
  t9432 = 0. + t9419 + t9424;
  t9435 = t418*t9432;
  t9438 = 0. + t9435;
  t9490 = t9305*t9158;
  t9513 = t4056*t4495*t9245;
  t9515 = -1.*t4599*t9245*t4766;
  t9516 = t9513 + t9515;
  t9521 = t418*t9516;
  t9682 = t9490 + t9521;
  t9697 = 0.241*t7743*t9682;
  t9699 = t9245*t9158;
  t9700 = t4056*t4495*t9402;
  t9721 = -1.*t4599*t9402*t4766;
  t9723 = t9700 + t9721;
  t9725 = t418*t9723;
  t9729 = t9699 + t9725;
  t9731 = 0.241*t7656*t9729;
  t9738 = -0.11459*t9305;
  t9769 = -0.081715*t9402;
  t9779 = t9738 + t9769;
  t9780 = t5531*t9158;
  t9801 = t4056*t8837;
  t9820 = -1.*t8713*t4766;
  t9834 = 0. + t9801 + t9820;
  t9852 = t418*t9834;
  t9853 = 0. + t9780 + t9852;
  t9865 = 0.241*t9779*t9853;
  t9871 = t6340*t9158;
  t9873 = t4056*t8889;
  t9874 = -1.*t8872*t4766;
  t9989 = 0. + t9873 + t9874;
  t10035 = t418*t9989;
  t10043 = 0. + t9871 + t10035;
  t10050 = 0.007922875*t9245*t10043;
  t8032 = t4056*t4495;
  t8037 = -1.*t4599*t4766;
  t8087 = t8032 + t8037;
  t9178 = t472*t4056*t4495;
  t9180 = -1.*t4599*t472*t4766;
  t9194 = t9178 + t9180;
  t8368 = -1.*t4599*t4056;
  t8372 = -1.*t4495*t4766;
  t8480 = t8368 + t8372;
  t10373 = Sin(var1[3]);
  t10374 = t10373*t9158*t5027;
  t10375 = Cos(var1[3]);
  t9209 = -1.*t472*t4056*t4495;
  t9210 = t4599*t472*t4766;
  t9219 = t9209 + t9210;
  t7447 = t4599*t472*t4056;
  t7448 = t472*t4495*t4766;
  t7450 = t7447 + t7448;
  t7454 = -1.*t4599*t4056*t747;
  t7587 = -1.*t4495*t747*t4766;
  t7600 = t7454 + t7587;
  t7662 = t4599*t4056*t6745;
  t7663 = t4495*t6745*t4766;
  t7664 = t7662 + t7663;
  t7783 = t4599*t4056*t5531;
  t7805 = t4495*t5531*t4766;
  t7822 = t7783 + t7805;
  t9205 = -1.*t747*t9158;
  t10291 = -1.*t4056*t4495*t747;
  t10298 = t4599*t747*t4766;
  t10305 = t10291 + t10298;
  t8154 = -1.*t4056*t8136;
  t8323 = -1.*t8200*t4766;
  t8360 = t8154 + t8323;
  t8516 = -1.*t4599*t472*t4056;
  t8524 = -1.*t472*t4495*t4766;
  t8654 = t8516 + t8524;
  t8665 = t4599*t4056*t747;
  t8666 = t4495*t747*t4766;
  t8690 = t8665 + t8666;
  t8834 = -1.*t4056*t8713;
  t8844 = -1.*t8837*t4766;
  t8848 = t8834 + t8844;
  t8880 = -1.*t4056*t8872;
  t8916 = -1.*t8889*t4766;
  t8917 = t8880 + t8916;
  t10238 = t418*t747;
  t10241 = -1.*t9158*t9194;
  t10242 = t10238 + t10241;
  t10289 = t472*t418;
  t10322 = -1.*t9158*t10305;
  t10335 = t10289 + t10322;
  t10338 = t418*t5531;
  t10339 = -1.*t9158*t9834;
  t10351 = t418*t6340;
  t10353 = -1.*t9158*t9989;
  t8991 = -1.*t472*t2639;
  t9054 = -1.*t472*t9047;
  t9057 = t8991 + t9054;
  t9058 = -1.*t472*t9057;
  t9092 = t747*t2967;
  t9099 = -1.*t472*t3650;
  t9104 = -1.*t9047*t747;
  t9108 = t2769 + t9104;
  t9125 = -1.*t747*t9108;
  t9128 = t9058 + t9092 + t9099 + t9125;
  t10396 = t10375*t5027;
  t10397 = t10373*t9158*t7299;
  t10401 = t10396 + t10397;
  t9261 = -1.*t9251*t6340;
  t9357 = -1.*t9350*t5531;
  t9360 = t9250 + t9261 + t9314 + t9357;
  t9361 = -1.*t5531*t9360;
  t9374 = t9350*t6745;
  t9376 = t9251*t5531;
  t9414 = t9366 + t9374 + t9376 + t9404;
  t9417 = -1.*t6340*t9414;
  t9418 = t9247 + t9361 + t9365 + t9417;
  t10598 = t4056*t8136;
  t10599 = t8200*t4766;
  t10600 = 0. + t10598 + t10599;
  t10602 = -1.*t9158*t9432;
  t10603 = 0. + t10602;
  t10615 = t4056*t8713;
  t10617 = t8837*t4766;
  t10618 = 0. + t10615 + t10617;
  t10620 = 0. + t10338 + t10339;
  t10626 = t4056*t8872;
  t10628 = t8889*t4766;
  t10629 = 0. + t10626 + t10628;
  t10631 = 0. + t10351 + t10353;
  t10138 = -1.*t10133*t6340;
  t10161 = -1.*t10152*t5531;
  t10163 = t9250 + t10138 + t9314 + t10161;
  t10166 = -1.*t5531*t10163;
  t10175 = t10152*t6745;
  t10190 = t10133*t5531;
  t10191 = t9366 + t10175 + t10190 + t9404;
  t10199 = -1.*t6340*t10191;
  t10201 = t9247 + t9365 + t10166 + t10199;
  t10665 = t10375*t10600;
  t10666 = -1.*t10373*t10603;
  t10672 = 0. + t10665 + t10666;
  t10674 = t4599*t4056*t9245;
  t10675 = t4495*t9245*t4766;
  t10677 = t10674 + t10675;
  t10680 = t10375*t10677;
  t10682 = t418*t9305;
  t10684 = -1.*t9158*t9516;
  t10686 = t10682 + t10684;
  t10688 = -1.*t10373*t10686;
  t10690 = t10680 + t10688;
  t10693 = 0.241*t7743*t10690;
  t10694 = t4599*t4056*t9402;
  t10695 = t4495*t9402*t4766;
  t10696 = t10694 + t10695;
  t10702 = t10375*t10696;
  t10709 = t418*t9245;
  t10710 = -1.*t9158*t9723;
  t10713 = t10709 + t10710;
  t10714 = -1.*t10373*t10713;
  t10717 = t10702 + t10714;
  t10720 = 0.241*t7656*t10717;
  t10723 = t10375*t10618;
  t10728 = -1.*t10373*t10620;
  t10730 = 0. + t10723 + t10728;
  t10733 = 0.241*t9779*t10730;
  t10734 = t10375*t10629;
  t10735 = -1.*t10373*t10631;
  t10741 = 0. + t10734 + t10735;
  t10744 = 0.007922875*t9245*t10741;
  t10762 = -1.*t10375*t9158*t5027;
  t10383 = -1.*t4599*t4056;
  t10385 = t10383 + t8372;
  t10413 = t4056*t4495*t747;
  t10414 = -1.*t4599*t747*t4766;
  t10415 = t10413 + t10414;
  t10438 = -1.*t4056*t4495*t6745;
  t10440 = t4599*t6745*t4766;
  t10441 = t10438 + t10440;
  t10452 = -1.*t4056*t4495*t5531;
  t10453 = t4599*t5531*t4766;
  t10455 = t10452 + t10453;
  t10471 = -1.*t418*t9194;
  t10473 = t9205 + t10471;
  t10492 = -1.*t472*t9158;
  t10493 = -1.*t418*t10305;
  t10496 = t10492 + t10493;
  t10503 = -1.*t5531*t9158;
  t10515 = -1.*t418*t9834;
  t10516 = t10503 + t10515;
  t10519 = -1.*t6340*t9158;
  t10525 = -1.*t418*t9989;
  t10527 = t10519 + t10525;
  t10533 = t9419 + t9424;
  t10570 = t9801 + t9820;
  t10577 = t9873 + t9874;
  t10773 = t10373*t5027;
  t10776 = -1.*t10375*t9158*t7299;
  t10782 = t10773 + t10776;
  t10650 = -1.*t418*t747;
  t10651 = -1.*t9158*t9219;
  t10652 = t10650 + t10651;
  t10966 = t10373*t10600;
  t10968 = t10375*t10603;
  t10969 = 0. + t10966 + t10968;
  t10979 = t10373*t10677;
  t10981 = t10375*t10686;
  t10982 = t10979 + t10981;
  t10983 = 0.241*t7743*t10982;
  t10986 = t10373*t10696;
  t10989 = t10375*t10713;
  t10994 = t10986 + t10989;
  t10997 = 0.241*t7656*t10994;
  t10998 = t10373*t10618;
  t10999 = t10375*t10620;
  t11002 = 0. + t10998 + t10999;
  t11005 = 0.241*t9779*t11002;
  t11013 = t10373*t10629;
  t11019 = t10375*t10631;
  t11020 = 0. + t11013 + t11019;
  t11021 = 0.007922875*t9245*t11020;
  t10552 = t10373*t9158*t8087;
  t10554 = t10375*t7299;
  t10557 = t10552 + t10554;
  t10641 = t10375*t7450;
  t10643 = -1.*t10373*t10242;
  t10645 = t10641 + t10643;
  t11081 = -1.*t4599;
  t11086 = 1. + t11081;
  t11087 = -0.081715*t11086;
  t11094 = -0.061715*t4599;
  t11099 = t11087 + t11094;
  t11100 = t11099*t4056;
  t11105 = 0.02*t4495*t4766;
  t11106 = t11100 + t11105;
  t11135 = -0.02*t4056*t4495;
  t11178 = 0.02*t4599*t4766;
  t11179 = t11135 + t11178;
  t11080 = -0.194401*t9158;
  t11107 = t418*t11106;
  t11109 = t11080 + t11107;
  t11120 = -0.194401*t418;
  t11121 = -1.*t9158*t11106;
  t11122 = t11120 + t11121;
  t9174 = t747*t9158;
  t9195 = t418*t9194;
  t9196 = t9174 + t9195;
  t11170 = Power(t418,2);
  t11219 = 0.053565*t4495;
  t11220 = t4599*t1027;
  t11221 = t11219 + t11220;
  t11210 = 0.053565*t4599;
  t11211 = -1.*t4495*t1027;
  t11216 = t11210 + t11211;
  t11181 = Power(t9158,2);
  t11244 = t4056*t11221;
  t11245 = -1.*t11216*t4766;
  t11246 = t11244 + t11245;
  t11252 = -0.13528*t4599;
  t11257 = t4495*t1027;
  t11258 = t11087 + t11252 + t11257;
  t11267 = t4056*t11258;
  t11268 = -1.*t11221*t4766;
  t11272 = t11267 + t11268;
  t11259 = t11258*t4766;
  t11261 = t11244 + t11259;
  t11266 = t2639*t9158;
  t11273 = t418*t11272;
  t11275 = t11266 + t11273;
  t11293 = t418*t2639;
  t11296 = -1.*t9158*t11272;
  t11301 = t11293 + t11296;
  t11217 = t4056*t11216;
  t11227 = t11221*t4766;
  t11241 = t11217 + t11227;
  t11357 = t472*t9158;
  t11371 = t418*t10305;
  t11372 = t11357 + t11371;
  t11504 = 0.032875*t4495;
  t11505 = t4599*t6475;
  t11506 = t11504 + t11505;
  t11515 = t4056*t11506;
  t11497 = 0.032875*t4599;
  t11498 = -1.*t4495*t6475;
  t11500 = t11497 + t11498;
  t11528 = -1.*t11500*t4766;
  t11529 = t11515 + t11528;
  t11516 = -0.081715*t11086;
  t11519 = -0.11459*t4599;
  t11520 = t4495*t6475;
  t11523 = t11516 + t11519 + t11520;
  t11540 = t4056*t11523;
  t11542 = -1.*t11506*t4766;
  t11545 = 0. + t11540 + t11542;
  t11524 = t11523*t4766;
  t11525 = 0. + t11515 + t11524;
  t11537 = t6283*t9158;
  t11546 = t418*t11545;
  t11547 = 0. + t11537 + t11546;
  t11552 = t418*t6283;
  t11553 = -1.*t9158*t11545;
  t11554 = 0. + t11552 + t11553;
  t11503 = t4056*t11500;
  t11507 = t11506*t4766;
  t11512 = t11503 + t11507;
  t11118 = -1.*t9158*t11109;
  t11125 = -1.*t418*t11122;
  t11126 = t11118 + t11125;
  t11704 = 0.02*t4056*t4495;
  t11705 = -1.*t11099*t4766;
  t11706 = t11704 + t11705;
  t11136 = t11099*t4766;
  t11137 = t11135 + t11136;
  t11733 = -1.*t4056*t11221;
  t11734 = -1.*t11258*t4766;
  t11736 = t11733 + t11734;
  t11311 = -1.*t5027*t11261;
  t11312 = -1.*t418*t7299*t11275;
  t11314 = t9158*t7299*t11301;
  t11315 = t11311 + t11312 + t11314;
  t11339 = t7450*t11261;
  t11344 = t9196*t11275;
  t11347 = t10242*t11301;
  t11348 = t11339 + t11344 + t11347;
  t11392 = t5027*t11261;
  t11394 = t418*t7299*t11275;
  t11395 = -1.*t9158*t7299*t11301;
  t11397 = t11392 + t11394 + t11395;
  t11420 = -1.*t11261*t7600;
  t11422 = -1.*t11275*t11372;
  t11423 = -1.*t11301*t10335;
  t11424 = t11420 + t11422 + t11423;
  t11456 = -1.*t7450*t11261;
  t11460 = -1.*t9196*t11275;
  t11461 = -1.*t10242*t11301;
  t11467 = t11456 + t11460 + t11461;
  t11483 = t11261*t7600;
  t11484 = t11275*t11372;
  t11489 = t11301*t10335;
  t11490 = t11483 + t11484 + t11489;
  t11841 = -1.*t4056*t11506;
  t11842 = -1.*t11523*t4766;
  t11843 = t11841 + t11842;
  t11559 = t10600*t11525;
  t11560 = t9438*t11547;
  t11564 = t10603*t11554;
  t11566 = t11559 + t11560 + t11564;
  t11832 = t11540 + t11542;
  t11579 = -1.*t11525*t10618;
  t11580 = -1.*t11547*t9853;
  t11582 = -1.*t11554*t10620;
  t11583 = t11579 + t11580 + t11582;
  t11598 = t11525*t10618;
  t11601 = t11547*t9853;
  t11603 = t11554*t10620;
  t11604 = t11598 + t11601 + t11603;
  t11627 = -1.*t11525*t10629;
  t11630 = -1.*t11547*t10043;
  t11635 = -1.*t11554*t10631;
  t11636 = t11627 + t11630 + t11635;
  t11663 = -1.*t10600*t11525;
  t11666 = -1.*t9438*t11547;
  t11667 = -1.*t10603*t11554;
  t11671 = t11663 + t11666 + t11667;
  t11683 = t11525*t10629;
  t11692 = t11547*t10043;
  t11693 = t11554*t10631;
  t11694 = t11683 + t11692 + t11693;
  t11957 = 0.194401*t9158;
  t11959 = -1.*t418*t11106;
  t11960 = t11957 + t11959;
  t12002 = -1.*t2639*t9158;
  t12006 = -1.*t418*t11272;
  t12008 = t12002 + t12006;
  t10340 = t10338 + t10339;
  t12090 = t11552 + t11553;
  t12080 = -1.*t6283*t9158;
  t12081 = -1.*t418*t11545;
  t12082 = t12080 + t12081;
  t10359 = t10351 + t10353;
  t12219 = t4056*t4495*t9047;
  t12220 = -1.*t4599*t9047*t4766;
  t12222 = t12219 + t12220;
  t12209 = t4599*t4056*t9047;
  t12210 = t4495*t9047*t4766;
  t12213 = t12209 + t12210;
  t12218 = t1027*t9158;
  t12230 = t418*t12222;
  t12231 = t12218 + t12230;
  t12234 = t418*t1027;
  t12236 = -1.*t9158*t12222;
  t12237 = t12234 + t12236;
  t9223 = t418*t9219;
  t9229 = t9205 + t9223;
  t12353 = t4056*t4495*t9350;
  t12354 = -1.*t4599*t9350*t4766;
  t12359 = t12353 + t12354;
  t12346 = t4599*t4056*t9350;
  t12347 = t4495*t9350*t4766;
  t12348 = t12346 + t12347;
  t12352 = t9251*t9158;
  t12363 = t418*t12359;
  t12366 = t12352 + t12363;
  t12373 = t418*t9251;
  t12380 = -1.*t9158*t12359;
  t12384 = t12373 + t12380;
  t12337 = t9853*t11566;
  t12341 = t9438*t11583;
  t12342 = t12337 + t12341;
  t12343 = 0.007922875*t9245*t12342;
  t12344 = t9729*t11566;
  t12539 = t4056*t4495*t10152;
  t12547 = -1.*t4599*t10152*t4766;
  t12549 = t12539 + t12547;
  t12394 = -1.*t11525*t10696;
  t12525 = t4599*t4056*t10152;
  t12528 = t4495*t10152*t4766;
  t12529 = t12525 + t12528;
  t12398 = -1.*t11547*t9729;
  t12399 = -1.*t11554*t10713;
  t12538 = t10133*t9158;
  t12552 = t418*t12549;
  t12553 = t12538 + t12552;
  t12570 = t418*t10133;
  t12571 = -1.*t9158*t12549;
  t12572 = t12570 + t12571;
  t12417 = t10043*t11604;
  t12419 = t9853*t11636;
  t12420 = t12417 + t12419;
  t12422 = t10043*t11671;
  t12423 = t9438*t11694;
  t12427 = t12422 + t12423;
  t12428 = 0.241*t9779*t12427;
  t12431 = t9682*t11604;
  t12434 = t11525*t10696;
  t12436 = t11547*t9729;
  t12438 = t11554*t10713;
  t12450 = t9729*t11636;
  t12451 = -1.*t11525*t10677;
  t12462 = -1.*t11547*t9682;
  t12463 = -1.*t11554*t10686;
  t12479 = t9682*t11671;
  t12496 = t11525*t10677;
  t12504 = t11547*t9682;
  t12506 = t11554*t10686;
  t11757 = t7450*t11272;
  t11760 = t9194*t11261;
  t11732 = -1.*t5027*t11272;
  t11745 = -1.*t7299*t11261;
  t11771 = t5027*t11272;
  t11774 = t7299*t11261;
  t11785 = -1.*t11261*t10305;
  t11786 = -1.*t11272*t7600;
  t11799 = -1.*t7450*t11272;
  t11800 = -1.*t9194*t11261;
  t11817 = t11261*t10305;
  t11818 = t11272*t7600;
  t11833 = t10600*t11832;
  t11834 = t10533*t11525;
  t11858 = -1.*t11525*t10570;
  t11860 = -1.*t11832*t10618;
  t11875 = t11525*t10570;
  t11876 = t11832*t10618;
  t11890 = -1.*t11525*t10577;
  t11891 = -1.*t11832*t10629;
  t11908 = -1.*t10600*t11832;
  t11915 = -1.*t10533*t11525;
  t11929 = t11525*t10577;
  t11932 = t11832*t10629;
  t12660 = -1.*t7299*t11272;
  t12662 = t12660 + t11311;
  t11321 = t7450*t11241;
  t11322 = t9219*t11261;
  t11243 = -1.*t5027*t11241;
  t11264 = -1.*t8480*t11261;
  t12677 = t2639*t747;
  t12678 = t9194*t11272;
  t12680 = t12677 + t12678 + t11339;
  t12689 = t7299*t11272;
  t12690 = t12689 + t11392;
  t11373 = t5027*t11241;
  t11379 = t8480*t11261;
  t11400 = -1.*t11261*t10415;
  t11406 = -1.*t11241*t7600;
  t12701 = -1.*t11272*t10305;
  t12702 = t8991 + t12701 + t11420;
  t11437 = -1.*t7450*t11241;
  t11438 = -1.*t9219*t11261;
  t12720 = -1.*t9194*t11272;
  t12721 = t2769 + t12720 + t11456;
  t11470 = t11261*t10415;
  t11471 = t11241*t7600;
  t12724 = t11272*t10305;
  t12725 = t3456 + t12724 + t11483;
  t12736 = t9432*t11545;
  t12737 = 0. + t12736 + t11559;
  t11513 = t10600*t11512;
  t11526 = t10385*t11525;
  t11569 = -1.*t11525*t10441;
  t11570 = -1.*t11512*t10618;
  t12760 = -1.*t6283*t5531;
  t12761 = -1.*t11545*t9834;
  t12763 = t12760 + t12761 + t11579;
  t11588 = t11525*t10441;
  t11589 = t11512*t10618;
  t12772 = t11545*t9834;
  t12774 = t6865 + t12772 + t11598;
  t11609 = -1.*t11525*t10455;
  t11611 = -1.*t11512*t10629;
  t12791 = -1.*t11545*t9989;
  t12792 = t6342 + t12791 + t11627;
  t12802 = -1.*t9432*t11545;
  t12803 = 0. + t12802 + t11663;
  t11645 = -1.*t10600*t11512;
  t11647 = -1.*t10385*t11525;
  t11674 = t11525*t10455;
  t11675 = t11512*t10629;
  t12815 = t6283*t6340;
  t12816 = t11545*t9989;
  t12819 = t12815 + t12816 + t11683;
  t12214 = -1.*t5027*t12213;
  t12244 = t7450*t12213;
  t12269 = t5027*t12213;
  t12281 = -1.*t8654*t11261;
  t12282 = -1.*t12213*t7600;
  t12304 = -1.*t7450*t12213;
  t12314 = t8654*t11261;
  t12316 = t12213*t7600;
  t12351 = t10600*t12348;
  t12397 = -1.*t12348*t10618;
  t12435 = t12348*t10618;
  t12455 = -1.*t12348*t10629;
  t12484 = -1.*t10600*t12348;
  t12503 = t12348*t10629;
  t13087 = t10618*t12737;
  t13089 = t10600*t12763;
  t13091 = t13087 + t13089;
  t13093 = 0.007922875*t9245*t13091;
  t13096 = t10696*t12737;
  t12536 = t10600*t12529;
  t13103 = -1.*t6283*t9245;
  t13108 = -1.*t11545*t9723;
  t12589 = -1.*t12529*t10618;
  t13126 = t10629*t12774;
  t13127 = t10618*t12792;
  t13128 = 0. + t13126 + t13127;
  t13133 = t10629*t12803;
  t13134 = t10600*t12819;
  t13135 = t13133 + t13134;
  t13136 = 0.241*t9779*t13135;
  t13138 = t10677*t12774;
  t13139 = t11545*t9723;
  t12605 = t12529*t10618;
  t13144 = t10696*t12792;
  t13146 = -1.*t11545*t9516;
  t12618 = -1.*t12529*t10629;
  t13164 = t10677*t12803;
  t12631 = -1.*t10600*t12529;
  t13174 = t6283*t9305;
  t13177 = t11545*t9516;
  t12642 = t12529*t10629;
  t13384 = -1.*t4599*t11221*t747;
  t13385 = -1.*t4495*t11258*t747;
  t13386 = t3456 + t13384 + t13385;
  t13388 = -1.*t4599*t472*t11221;
  t13389 = -1.*t472*t4495*t11258;
  t13390 = t13388 + t13389 + t2769;
  t13074 = t472*t1027;
  t13409 = Power(t4599,2);
  t13412 = Power(t4495,2);
  t13456 = -1.*t8136*t11506;
  t13458 = -1.*t8200*t11523;
  t13459 = 0. + t13456 + t13458;
  t13482 = t8136*t11506;
  t13484 = t8200*t11523;
  t13485 = 0. + t13482 + t13484;
  t13534 = t11506*t8713;
  t13535 = t11523*t8837;
  t13538 = t6865 + t13534 + t13535;
  t13557 = -1.*t11506*t8872;
  t13559 = -1.*t11523*t8889;
  t13560 = t6342 + t13557 + t13559;
  t13465 = t13459*t9305;
  t13487 = t13485*t9245;
  t13505 = t13459*t6340;
  t13511 = 0. + t13505;
  t13514 = 0.241*t13511;
  t13515 = 0. + t13514;
  t13517 = t9779*t13515;
  t13521 = t13485*t5531;
  t13522 = 0. + t13521;
  t13523 = 0.241*t13522;
  t13524 = 0. + t13523;
  t13533 = 0.032875*t9245*t13524;
  t13539 = t9305*t13538;
  t13544 = t4599*t11506*t9402;
  t13546 = t4495*t11523*t9402;
  t13561 = t9245*t13560;
  t13563 = -1.*t4599*t11506*t9245;
  t13564 = -1.*t4495*t11523*t9245;
  t13577 = t6340*t13538;
  t13578 = t5531*t13560;
  t13580 = 0. + t13577 + t13578;
  t13581 = 0.241*t13580;
  t13584 = 0. + t13581;
  t13651 = 0.007922875*t9245*t7743;
  t13652 = 0.241*t7656*t9779;
  t13653 = 0.241*t7656;
  t13655 = 0. + t13653;
  t13656 = t9779*t13655;
  t13657 = 0.241*t7743;
  t13661 = 0. + t13657;
  t13663 = 0.032875*t9245*t13661;
  t13665 = 0.241*t7049;
  t13668 = 0. + t13665;
  t13692 = t5275*t6227;
  t13693 = 0.194401*t5316;
  t13694 = t6149*t5316;
  t13696 = 0. + t13692 + t13693 + t13694;
  t13697 = 0.241*t13696;
  t13698 = 0. + t13697;
  t13700 = t9779*t13698;
  t13701 = -0.194401*t5275;
  t13702 = -1.*t5275*t6149;
  t13706 = t6227*t5316;
  t13707 = 0. + t13701 + t13702 + t13706;
  t13708 = 0.241*t13707;
  t13709 = 0. + t13708;
  t13711 = 0.032875*t9245*t13709;
  t13741 = 0.00015845750000000015*t9245;
  t13742 = -0.03856*t9779;
  t13743 = t13741 + t13742;
  p_output1[0]=var2[12]*(-0.5*(0.081793755*t10242*t472 - 0.081793755*t10335*t747 + 0.241*t10340*t7656 + 0.241*t10359*t7743 - 1.527*t3824*t7299*t9158 + 0.00482*t8087*t9158 - 0.241*t7049*t9158*t9432)*var2[4] - 0.5*(1.527*t3824*t418*t8087 + 0.241*t418*t7049*t8360 - 0.00482*t418*t8480 + 0.081793755*t418*t472*t8654 - 0.081793755*t418*t747*t8690 + 0.241*t418*t7656*t8848 + 0.241*t418*t7743*t8917)*var2[5] - 0.5*(1.527*t3824*t418*t5027 + 0.241*t418*t5027*t7049 - 0.00482*t418*t7299 + 0.081793755*t418*t472*t7450 - 0.081793755*t418*t747*t7600 + 0.241*t418*t7656*t7664 + 0.241*t418*t7743*t7822)*var2[12] - 0.5*(t10050 + 1.527*t418*t7299*t9128 - 0.081793755*t747*t9196 - 0.081793755*t747*t9229 + 0.241*t9418*t9438 + t9697 + t9731 + t9865)*var2[13] - 0.5*(t10050 + 0.241*t10201*t9438 + t9697 + t9731 + t9865)*var2[14]);
  p_output1[1]=var2[12]*(-0.5*(0.241*(-1.*t10373*t10600 - 1.*t10375*t10603)*t7049 + 0.081793755*t472*(-1.*t10242*t10375 - 1.*t10373*t7450) - 0.081793755*t747*(-1.*t10335*t10375 - 1.*t10373*t7600) + 0.241*(-1.*t10373*t10618 - 1.*t10375*t10620)*t7656 + 0.241*(-1.*t10373*t10629 - 1.*t10375*t10631)*t7743 + 1.527*t3824*(-1.*t10373*t5027 + t10375*t7299*t9158) - 0.00482*(-1.*t10373*t7299 + t10375*t8087*t9158))*var2[3] - 0.5*(-0.081793755*t10373*t10473*t472 + 1.527*t10373*t3824*t418*t7299 + 0.081793755*t10373*t10496*t747 - 0.241*t10373*t10516*t7656 - 0.241*t10373*t10527*t7743 - 0.00482*t10373*t418*t8087 + 0.241*t10373*t418*t7049*t9432)*var2[4] - 0.5*(1.527*t10557*t3824 + 0.241*t7049*(t10375*t10533 + t10373*t8360*t9158) - 0.00482*(t10375*t8087 + t10373*t8480*t9158) - 0.081793755*t747*(t10305*t10375 + t10373*t8690*t9158) + 0.241*t7656*(t10375*t10570 + t10373*t8848*t9158) + 0.241*t7743*(t10375*t10577 + t10373*t8917*t9158) + 0.081793755*t472*(t10373*t8654*t9158 + t10375*t9194))*var2[5] - 0.5*(-0.00482*t10401 + 0.241*(t10374 + t10375*t10385)*t7049 + 1.527*t3824*(t10374 + t10375*t8480) - 0.081793755*t747*(t10375*t10415 + t10373*t7600*t9158) + 0.241*t7656*(t10375*t10441 + t10373*t7664*t9158) + 0.241*t7743*(t10375*t10455 + t10373*t7822*t9158) + 0.081793755*t472*(t10373*t7450*t9158 + t10375*t9219))*var2[12] - 0.5*(t10693 + t10720 + t10733 + t10744 - 0.081793755*t10645*t747 - 0.081793755*t747*(-1.*t10373*t10652 + t10375*t8654) + 1.527*t10401*t9128 + 0.241*t10672*t9418)*var2[13] - 0.5*(0.241*t10201*t10672 + t10693 + t10720 + t10733 + t10744)*var2[14]);
  p_output1[2]=var2[12]*(-0.5*(-0.00482*t10557 + 1.527*t10401*t3824 + 0.081793755*t10645*t472 + 0.241*(t10665 + t10666)*t7049 - 0.081793755*t747*(-1.*t10335*t10373 + t10375*t7600) + 0.241*(t10723 + t10728)*t7656 + 0.241*(t10734 + t10735)*t7743)*var2[3] - 0.5*(0.081793755*t10375*t10473*t472 - 1.527*t10375*t3824*t418*t7299 - 0.081793755*t10375*t10496*t747 + 0.241*t10375*t10516*t7656 + 0.241*t10375*t10527*t7743 + 0.00482*t10375*t418*t8087 - 0.241*t10375*t418*t7049*t9432)*var2[4] - 0.5*(1.527*t3824*(t10373*t7299 - 1.*t10375*t8087*t9158) + 0.241*t7049*(t10373*t10533 - 1.*t10375*t8360*t9158) - 0.00482*(t10373*t8087 - 1.*t10375*t8480*t9158) - 0.081793755*t747*(t10305*t10373 - 1.*t10375*t8690*t9158) + 0.241*t7656*(t10373*t10570 - 1.*t10375*t8848*t9158) + 0.241*t7743*(t10373*t10577 - 1.*t10375*t8917*t9158) + 0.081793755*t472*(-1.*t10375*t8654*t9158 + t10373*t9194))*var2[5] - 0.5*(-0.00482*t10782 + 0.241*(t10373*t10385 + t10762)*t7049 + 1.527*t3824*(t10762 + t10373*t8480) - 0.081793755*t747*(t10373*t10415 - 1.*t10375*t7600*t9158) + 0.241*t7656*(t10373*t10441 - 1.*t10375*t7664*t9158) + 0.241*t7743*(t10373*t10455 - 1.*t10375*t7822*t9158) + 0.081793755*t472*(-1.*t10375*t7450*t9158 + t10373*t9219))*var2[12] - 0.5*(t10983 + t10997 + t11005 + t11021 - 0.081793755*(t10242*t10375 + t10373*t7450)*t747 - 0.081793755*t747*(t10375*t10652 + t10373*t8654) + 1.527*t10782*t9128 + 0.241*t10969*t9418)*var2[13] - 0.5*(0.241*t10201*t10969 + t10983 + t10997 + t11005 + t11021)*var2[14]);
  p_output1[3]=var2[12]*(-0.5*(-0.00482*(t418*(-1.*t11109*t418 - 1.*t11960*t418)*t7299 - 1.*t11126*t7299*t9158 + t418*(t11137*t5027 + t11109*t418*t7299 - 1.*t11122*t7299*t9158) + t9158*(-1.*t11109*t7299*t9158 - 1.*t11960*t7299*t9158)) + 0.081793755*t472*(t10335*t11397 + (-1.*t10335*t11275 - 1.*t10496*t11301 - 1.*t11301*t11372 - 1.*t10335*t12008)*t418*t7299 - 1.*t11424*t7299*t9158 + t11372*(-1.*t11275*t7299*t9158 - 1.*t12008*t7299*t9158)) + 1.527*t3824*(t10335*t11467 + t10242*t11490 + (t10335*t11275 + t10496*t11301 + t11301*t11372 + t10335*t12008)*t9196 + t11372*(-1.*t10242*t11275 - 1.*t10473*t11301 - 1.*t10242*t12008 - 1.*t11301*t9196)) - 0.081793755*t747*(t10242*t11315 - 1.*t11348*t7299*t9158 + (t11275*t7299*t9158 + t12008*t7299*t9158)*t9196 + t418*t7299*(t10242*t11275 + t10473*t11301 + t10242*t12008 + t11301*t9196)) + 0.241*t7656*(t10359*t11671 - 1.*t11694*t9158*t9432 + (t10359*t11547 + t10527*t11554 + t10631*t12082 + t10043*t12090)*t9438 + t10043*(-1.*t10603*t12082 + t11554*t418*t9432 + t11547*t9158*t9432 - 1.*t12090*t9438)) + 0.241*t7743*(t10340*t11566 - 1.*t11583*t9158*t9432 + (t10603*t12082 - 1.*t11554*t418*t9432 - 1.*t11547*t9158*t9432 + t12090*t9438)*t9853 + t9438*(-1.*t10340*t11547 - 1.*t10516*t11554 - 1.*t10620*t12082 - 1.*t12090*t9853)) + 0.241*t7049*(t10359*t11604 + t10340*t11636 + (-1.*t10359*t11547 - 1.*t10527*t11554 - 1.*t10631*t12082 - 1.*t10043*t12090)*t9853 + t10043*(t10340*t11547 + t10516*t11554 + t10620*t12082 + t12090*t9853)))*var2[4] - 0.5*(-0.00482*(t11126*t418*t8087 + t9158*(t11106*t5027 + t11137*t7299 + t11170*t11706*t7299 + t11181*t11706*t7299 + t11109*t418*t8087 - 1.*t11122*t8087*t9158)) + 0.081793755*t472*(t11424*t418*t8087 + t11397*t418*t8690 + t11372*(t11771 + t11774 + t11170*t11736*t7299 + t11181*t11736*t7299 + t11275*t418*t8087 - 1.*t11301*t8087*t9158) + t418*t7299*(t11785 + t11786 - 1.*t11372*t11736*t418 - 1.*t11275*t418*t8690 + t10335*t11736*t9158 + t11301*t8690*t9158)) + 1.527*t3824*(t11490*t418*t8654 + t11467*t418*t8690 + (t11817 + t11818 + t11372*t11736*t418 + t11275*t418*t8690 - 1.*t10335*t11736*t9158 - 1.*t11301*t8690*t9158)*t9196 + t11372*(t11799 + t11800 - 1.*t11275*t418*t8654 + t10242*t11736*t9158 + t11301*t8654*t9158 - 1.*t11736*t418*t9196)) - 0.081793755*t747*(t11348*t418*t8087 + t11315*t418*t8654 + (t11732 + t11745 - 1.*t11170*t11736*t7299 - 1.*t11181*t11736*t7299 - 1.*t11275*t418*t8087 + t11301*t8087*t9158)*t9196 + t418*t7299*(t11757 + t11760 + t11275*t418*t8654 - 1.*t10242*t11736*t9158 - 1.*t11301*t8654*t9158 + t11736*t418*t9196)) + 0.241*t7656*(t11694*t418*t8360 + t11671*t418*t8917 + (t11929 + t11932 + t10043*t11843*t418 + t11547*t418*t8917 - 1.*t10631*t11843*t9158 - 1.*t11554*t8917*t9158)*t9438 + t10043*(t11908 + t11915 - 1.*t11547*t418*t8360 + t10603*t11843*t9158 + t11554*t8360*t9158 - 1.*t11843*t418*t9438)) + 0.241*t7743*(t11583*t418*t8360 + t11566*t418*t8848 + (t11833 + t11834 + t11547*t418*t8360 - 1.*t10603*t11843*t9158 - 1.*t11554*t8360*t9158 + t11843*t418*t9438)*t9853 + t9438*(t11858 + t11860 - 1.*t11547*t418*t8848 + t10620*t11843*t9158 + t11554*t8848*t9158 - 1.*t11843*t418*t9853)) + 0.241*t7049*(t11636*t418*t8848 + t11604*t418*t8917 + (t11890 + t11891 - 1.*t10043*t11843*t418 - 1.*t11547*t418*t8917 + t10631*t11843*t9158 + t11554*t8917*t9158)*t9853 + t10043*(t11875 + t11876 + t11547*t418*t8848 - 1.*t10620*t11843*t9158 - 1.*t11554*t8848*t9158 + t11843*t418*t9853)))*var2[5] - 0.5*(-0.00482*(t11126*t418*t5027 + t9158*(t11109*t418*t5027 + (-0.02*t4056*t4599 - 0.02*t4495*t4766)*t5027 + t11170*t11179*t7299 + t11179*t11181*t7299 + t11137*t8480 - 1.*t11122*t5027*t9158)) + 0.081793755*t472*(t11424*t418*t5027 + t11397*t418*t7600 + t11372*(t11373 + t11379 + t11275*t418*t5027 + t11170*t11246*t7299 + t11181*t11246*t7299 - 1.*t11301*t5027*t9158) + t418*t7299*(t11400 + t11406 - 1.*t11246*t11372*t418 - 1.*t11275*t418*t7600 + t10335*t11246*t9158 + t11301*t7600*t9158)) + 1.527*t3824*(t11490*t418*t7450 + t11467*t418*t7600 + (t11470 + t11471 + t11246*t11372*t418 + t11275*t418*t7600 - 1.*t10335*t11246*t9158 - 1.*t11301*t7600*t9158)*t9196 + t11372*(t11437 + t11438 - 1.*t11275*t418*t7450 + t10242*t11246*t9158 + t11301*t7450*t9158 - 1.*t11246*t418*t9196)) - 0.081793755*t747*(t11348*t418*t5027 + t11315*t418*t7450 + (t11243 + t11264 - 1.*t11275*t418*t5027 - 1.*t11170*t11246*t7299 - 1.*t11181*t11246*t7299 + t11301*t5027*t9158)*t9196 + t418*t7299*(t11321 + t11322 + t11275*t418*t7450 - 1.*t10242*t11246*t9158 - 1.*t11301*t7450*t9158 + t11246*t418*t9196)) + 0.241*t7656*(t11694*t418*t5027 + t11671*t418*t7822 + (t11674 + t11675 + t10043*t11529*t418 + t11547*t418*t7822 - 1.*t10631*t11529*t9158 - 1.*t11554*t7822*t9158)*t9438 + t10043*(t11645 + t11647 - 1.*t11547*t418*t5027 + t10603*t11529*t9158 + t11554*t5027*t9158 - 1.*t11529*t418*t9438)) + 0.241*t7743*(t11583*t418*t5027 + t11566*t418*t7664 + (t11513 + t11526 + t11547*t418*t5027 - 1.*t10603*t11529*t9158 - 1.*t11554*t5027*t9158 + t11529*t418*t9438)*t9853 + t9438*(t11569 + t11570 - 1.*t11547*t418*t7664 + t10620*t11529*t9158 + t11554*t7664*t9158 - 1.*t11529*t418*t9853)) + 0.241*t7049*(t11636*t418*t7664 + t11604*t418*t7822 + (t11609 + t11611 - 1.*t10043*t11529*t418 - 1.*t11547*t418*t7822 + t10631*t11529*t9158 + t11554*t7822*t9158)*t9853 + t10043*(t11588 + t11589 + t11547*t418*t7664 - 1.*t10620*t11529*t9158 - 1.*t11554*t7664*t9158 + t11529*t418*t9853)))*var2[12] - 0.5*(t12343 + t12428 - 0.081793755*(t11372*t11397 + t11424*t418*t7299)*t747 - 0.081793755*t472*(t11348*t418*t7299 + t11315*t9196) + 1.527*t9128*(t11372*t11467 + t11490*t9196) - 0.081793755*t747*(t11315*t11372 + (t12214 - 1.*t12231*t418*t7299 + t12237*t7299*t9158)*t9196 + t418*t7299*(t11483 + t11484 + t11489 + t10242*t12237 + t12244 + t12231*t9196)) + 0.081793755*t472*(t11372*(t12269 + t12231*t418*t7299 - 1.*t12237*t7299*t9158) + t11397*t9229 + t418*t7299*(-1.*t10652*t11301 - 1.*t11372*t12231 - 1.*t10335*t12237 + t12281 + t12282 - 1.*t11275*t9229)) + 1.527*t3824*(t11372*t11490 + t11372*(t11420 + t11422 + t11423 - 1.*t10242*t12237 + t12304 - 1.*t12231*t9196) + t11467*t9229 + t9196*(t10652*t11301 + t11372*t12231 + t10335*t12237 + t12314 + t12316 + t11275*t9229)) + 0.241*t12420*t9418 + 0.241*t7656*(t12479 + (t10043*t12366 + t10631*t12384 + t12496 + t12503 + t12504 + t12506)*t9438 + t10043*(-1.*t10603*t12384 + t12484 - 1.*t12366*t9438)) + 0.241*t7743*(t12344 + (t12351 + t10603*t12384 + t12366*t9438)*t9853 + t9438*(-1.*t10620*t12384 + t12394 + t12397 + t12398 + t12399 - 1.*t12366*t9853)) + 0.241*t7049*(t12431 + t12450 + (-1.*t10043*t12366 - 1.*t10631*t12384 + t12451 + t12455 + t12462 + t12463)*t9853 + t10043*(t10620*t12384 + t12434 + t12435 + t12436 + t12438 + t12366*t9853)))*var2[13] - 0.5*(t12343 + 0.241*t10201*t12420 + t12428 + 0.241*t7656*(t12479 + (t12496 + t12504 + t12506 + t10043*t12553 + t10631*t12572 + t12642)*t9438 + t10043*(-1.*t10603*t12572 + t12631 - 1.*t12553*t9438)) + 0.241*t7743*(t12344 + (t12536 + t10603*t12572 + t12553*t9438)*t9853 + t9438*(t12394 + t12398 + t12399 - 1.*t10620*t12572 + t12589 - 1.*t12553*t9853)) + 0.241*t7049*(t12431 + t12450 + (t12451 + t12462 + t12463 - 1.*t10043*t12553 - 1.*t10631*t12572 + t12618)*t9853 + t10043*(t12434 + t12436 + t12438 + t10620*t12572 + t12605 + t12553*t9853)))*var2[14]);
  p_output1[4]=var2[12]*(-0.5*(-0.00093701282*t7299 + 0.081793755*t472*(t10305*t12690 + t12702*t7299 + t7600*(t11771 + t11774 + t11736*t7299 + t11272*t8087) + t5027*(-1.*t10305*t11736 + t11785 + t11786 - 1.*t11272*t8690)) + 1.527*t3824*(t10305*t12721 + t7450*(t10305*t11736 + t11817 + t11818 + t11272*t8690) + t12725*t9194 + t7600*(t11799 + t11800 - 1.*t11272*t8654 - 1.*t11736*t9194)) - 0.081793755*t747*(t12680*t7299 + t7450*(t11732 + t11745 - 1.*t11736*t7299 - 1.*t11272*t8087) + t12662*t9194 + t5027*(t11757 + t11760 + t11272*t8654 + t11736*t9194)) + 0.241*t7743*(t10570*t12737 + t10533*t12763 + t10618*(t11833 + t11834 + t11545*t8360 + t11843*t9432) + t10600*(t11858 + t11860 - 1.*t11545*t8848 - 1.*t11843*t9834)) + 0.241*t7049*(t10577*t12774 + t10570*t12792 + t10629*(t11875 + t11876 + t11545*t8848 + t11843*t9834) + t10618*(t11890 + t11891 - 1.*t11545*t8917 - 1.*t11843*t9989)) + 0.241*t7656*(t10577*t12803 + t10533*t12819 + t10629*(t11908 + t11915 - 1.*t11545*t8360 - 1.*t11843*t9432) + t10600*(t11929 + t11932 + t11545*t8917 + t11843*t9989)))*var2[5] - 0.5*(-0.00093701282*t8480 + 0.081793755*t472*(t10415*t12690 + (-1.*t10305*t11246 + t11400 + t11406 + t11786)*t5027 + (t11373 + t11379 + t11771 + t11246*t7299)*t7600 + t12702*t8480) - 0.081793755*t747*((t11243 + t11264 + t11732 - 1.*t11246*t7299)*t7450 + t12680*t8480 + t5027*(t11321 + t11322 + t11757 + t11246*t9194) + t12662*t9219) + 1.527*t3824*(t10415*t12721 + (t10305*t11246 + t11470 + t11471 + t11818)*t7450 + t7600*(t11437 + t11438 + t11799 - 1.*t11246*t9194) + t12725*t9219) + 0.241*t7743*(t10441*t12737 + t10385*t12763 + t10618*(t11513 + t11526 + t11545*t5027 + t11529*t9432) + t10600*(t11569 + t11570 - 1.*t11545*t7664 - 1.*t11529*t9834)) + 0.241*t7049*(t10455*t12774 + t10441*t12792 + t10629*(t11588 + t11589 + t11545*t7664 + t11529*t9834) + t10618*(t11609 + t11611 - 1.*t11545*t7822 - 1.*t11529*t9989)) + 0.241*t7656*(t10455*t12803 + t10385*t12819 + t10629*(t11645 + t11647 - 1.*t11545*t5027 - 1.*t11529*t9432) + t10600*(t11674 + t11675 + t11545*t7822 + t11529*t9989)))*var2[12] - 0.5*(t13093 + t13136 - 0.081793755*t472*(t12680*t5027 + t12662*t7450) - 0.081793755*t747*(t12702*t5027 + t12690*t7600) + 1.527*(t12725*t7450 + t12721*t7600)*t9128 - 0.081793755*t747*((t12214 - 1.*t12222*t7299)*t7450 + t12662*t7600 + t5027*(t11483 + t12244 + t12724 + t3456 + t1027*t747 + t12222*t9194)) + 0.081793755*t472*((t12269 + t12222*t7299)*t7600 + t12690*t8654 + t5027*(t1155 - 1.*t10305*t12222 + t12281 + t12282 + t12677 - 1.*t11272*t9219)) + 1.527*t3824*(t12725*t7600 + t12721*t8654 + t7600*(t11420 + t12304 + t12701 + t3565 + t8991 - 1.*t12222*t9194) + t7450*(t10305*t12222 + t12314 + t12316 + t13074 + t2769 + t11272*t9219)) + 0.241*t13128*t9418 + 0.241*t7743*(t13096 + t10618*(t12351 + t12359*t9432) + t10600*(t12394 + t12397 + t13103 + t13108 - 1.*t5531*t9251 - 1.*t12359*t9834)) + 0.241*t7049*(t13138 + t13144 + t10629*(t12434 + t12435 + t13139 + t9366 + t9376 + t12359*t9834) + t10618*(t12451 + t12455 + t13146 + t9261 + t9314 - 1.*t12359*t9989)) + 0.241*t7656*(t13164 + t10629*(t12484 - 1.*t12359*t9432) + t10600*(t12496 + t12503 + t13174 + t13177 + t6340*t9251 + t12359*t9989)))*var2[13] - 0.5*(t13093 + 0.241*t10201*t13128 + t13136 + 0.241*t7743*(t13096 + t10618*(t12536 + t12549*t9432) + t10600*(t12394 + t12589 + t13103 + t13108 - 1.*t10133*t5531 - 1.*t12549*t9834)) + 0.241*t7049*(t13138 + t13144 + t10629*(t10190 + t12434 + t12605 + t13139 + t9366 + t12549*t9834) + t10618*(t10138 + t12451 + t12618 + t13146 + t9314 - 1.*t12549*t9989)) + 0.241*t7656*(t13164 + t10629*(t12631 - 1.*t12549*t9432) + t10600*(t12496 + t12642 + t13174 + t13177 + t10133*t6340 + t12549*t9989)))*var2[14]);
  p_output1[5]=var2[12]*(-0.5*(-0.00482*(-1.*t11099*t4495 + 0.02*t4495*t4599) + 0.081793755*(-1.*t11216*t4495 - 1.*t11258*t4495)*Power(t472,2) - 0.081793755*(t11216*t4495 + t11258*t4495)*Power(t747,2) + 1.527*t3824*(t472*(-1.*t11216*t4599*t472 - 1.*t11258*t4599*t472) + t747*(-1.*t11216*t4599*t747 - 1.*t11258*t4599*t747)) + 0.241*t6340*t7656*(t11523*t4495 + t11506*t4599 - 1.*t11500*t8136 - 1.*t11506*t8200) + 0.241*t5531*t7743*(-1.*t11523*t4495 - 1.*t11506*t4599 + t11500*t8136 + t11506*t8200) + 0.241*t7049*(t6340*(-1.*t11506*t4495*t6745 + t11523*t4599*t6745 + t11500*t8713 + t11506*t8837) + t5531*(t11506*t4495*t5531 - 1.*t11523*t4599*t5531 - 1.*t11500*t8872 - 1.*t11506*t8889)))*var2[12] - 0.5*(t13517 + t13533 - 0.16358751*(t11221*t4495 - 1.*t11258*t4599)*t472*t747 - 0.16358751*(-1.*t11221*t4495 + t11258*t4599)*t472*t747 + 1.527*t3824*(t13386*t472 - 1.*t13390*t747 + t472*(t3565 + t11258*t4495*t747 + t11221*t4599*t747 + t8991 - 1.*t13409*t472*t9047 - 1.*t13412*t472*t9047) + t747*(t13074 + t13388 + t13389 + t2769 - 1.*t13409*t747*t9047 - 1.*t13412*t747*t9047)) + 1.527*(t13390*t472 + t13386*t747)*t9128 + 0.241*t7656*(t13465 + t6340*(-1.*t4599*t8136*t9350 - 1.*t4495*t8200*t9350)) + 0.241*t7743*(t13487 + t5531*(t4599*t8136*t9350 + t4495*t8200*t9350)) + 0.241*t7049*(t13539 + t13561 + t5531*(t13563 + t13564 + t9261 + t9314 - 1.*t4599*t8872*t9350 - 1.*t4495*t8889*t9350) + t6340*(t13544 + t13546 + t4599*t8713*t9350 + t4495*t8837*t9350 + t9366 + t9376)) + t13584*t9418)*var2[13] - 0.5*(t13517 + t13533 + t10201*t13584 + 0.241*t7656*(t13465 + t6340*(-1.*t10152*t4599*t8136 - 1.*t10152*t4495*t8200)) + 0.241*t7743*(t13487 + t5531*(t10152*t4599*t8136 + t10152*t4495*t8200)) + 0.241*t7049*(t13539 + t13561 + t5531*(t10138 + t13563 + t13564 - 1.*t10152*t4599*t8872 - 1.*t10152*t4495*t8889 + t9314) + t6340*(t10190 + t13544 + t13546 + t10152*t4599*t8713 + t10152*t4495*t8837 + t9366)))*var2[14]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=var2[12]*(-0.5*(t13651 + t13652 + t13656 + t13663 + 3.054*t3824*t9128 + t13668*t9418 + 0.241*t7049*t9418)*var2[13] - 0.5*(t13651 + t13652 + t13656 + t13663 + t10201*t13668 + 0.241*t10201*t7049)*var2[14]);
  p_output1[13]=var2[12]*(-0.5*(t13700 + t13711 + 0.0032717502*t472 - 0.0032717502*t747)*var2[13] - 0.5*(t13700 + t13711 + 0.241*(0.194401*t5275 + t10088*t5275 + t10072*t5316 + t5275*t6149 - 1.*t5316*t6227)*t7656 + 0.241*(t13692 + t13693 + t13694 - 1.*t10072*t5275 + t10088*t5316)*t7743)*var2[14]);
  p_output1[14]=var2[12]*(-0.5*t13743*var2[13] - 0.5*t13743*var2[14]);
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec13_plane.hh"

namespace SymFunction
{

void Ce1_vec13_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
