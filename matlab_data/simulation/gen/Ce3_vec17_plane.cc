/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:12:06 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t45;
  double t56;
  double t111;
  double t39;
  double t128;
  double t30;
  double t243;
  double t226;
  double t240;
  double t444;
  double t1345;
  double t1544;
  double t1397;
  double t1410;
  double t2163;
  double t2184;
  double t2186;
  double t2297;
  double t2303;
  double t2187;
  double t2246;
  double t1739;
  double t1740;
  double t1749;
  double t1755;
  double t1434;
  double t1501;
  double t1564;
  double t1699;
  double t2414;
  double t2467;
  double t2526;
  double t3391;
  double t3426;
  double t3269;
  double t3301;
  double t72;
  double t140;
  double t177;
  double t372;
  double t458;
  double t500;
  double t527;
  double t586;
  double t616;
  double t736;
  double t767;
  double t776;
  double t958;
  double t1004;
  double t1071;
  double t1092;
  double t1113;
  double t1122;
  double t1713;
  double t1722;
  double t1794;
  double t1872;
  double t1950;
  double t2122;
  double t2295;
  double t2311;
  double t2356;
  double t2531;
  double t2595;
  double t2596;
  double t2666;
  double t2671;
  double t2707;
  double t2919;
  double t2930;
  double t2972;
  double t3177;
  double t3181;
  double t3185;
  double t3311;
  double t3437;
  double t3531;
  double t3627;
  double t3701;
  double t3754;
  double t3937;
  double t3948;
  double t3975;
  double t4023;
  double t4049;
  double t4134;
  double t5359;
  double t5391;
  double t5413;
  double t5433;
  double t5435;
  double t5450;
  double t5517;
  double t5558;
  double t5582;
  double t5621;
  double t5642;
  double t5676;
  double t6752;
  double t6753;
  double t6766;
  double t6517;
  double t6527;
  double t6575;
  double t6630;
  double t6631;
  double t6635;
  double t6637;
  double t6664;
  double t6673;
  double t6721;
  double t6726;
  double t6731;
  double t6743;
  double t6855;
  double t6917;
  double t6924;
  double t6959;
  double t6961;
  double t7056;
  double t7119;
  double t7128;
  double t7154;
  double t7155;
  double t7167;
  double t6706;
  double t7131;
  double t7133;
  double t7529;
  double t7564;
  double t7570;
  double t6462;
  double t6497;
  double t6516;
  double t7319;
  double t7443;
  double t7494;
  double t7272;
  double t7273;
  double t7284;
  double t7863;
  double t7864;
  double t7896;
  double t8294;
  double t8338;
  double t8407;
  double t8436;
  double t8045;
  double t8055;
  double t8058;
  double t8065;
  double t8081;
  double t8135;
  double t8137;
  double t8138;
  double t8158;
  double t8271;
  double t8278;
  double t8449;
  double t8453;
  double t8484;
  double t8491;
  double t8501;
  double t8543;
  double t8559;
  double t8560;
  double t8757;
  double t8780;
  double t6247;
  double t8755;
  double t8756;
  double t8591;
  double t8595;
  double t8610;
  double t8086;
  double t8121;
  double t8835;
  double t8831;
  double t8018;
  double t8020;
  double t8036;
  double t8172;
  double t8567;
  double t8573;
  double t8887;
  double t8888;
  double t8889;
  double t6334;
  double t8863;
  double t8881;
  double t8883;
  double t9038;
  double t9044;
  double t9068;
  double t9578;
  double t9581;
  double t9585;
  double t9629;
  double t9659;
  double t9688;
  double t9698;
  double t9715;
  double t9716;
  double t9750;
  double t9760;
  double t9779;
  double t9959;
  double t9983;
  double t7506;
  double t10384;
  double t10392;
  double t10397;
  double t7742;
  double t7956;
  double t10435;
  double t10437;
  double t10447;
  double t7991;
  double t8890;
  double t10967;
  double t10982;
  double t10990;
  double t10787;
  double t11012;
  double t8983;
  double t9178;
  double t10863;
  double t10926;
  double t10951;
  double t9319;
  double t10467;
  double t10491;
  double t7526;
  double t7614;
  double t7619;
  double t10379;
  double t10405;
  double t7789;
  double t7800;
  double t7811;
  double t10564;
  double t11248;
  double t11250;
  double t10574;
  double t7958;
  double t7963;
  double t7968;
  double t10591;
  double t10680;
  double t7993;
  double t7994;
  double t8007;
  double t10806;
  double t11038;
  double t8900;
  double t8911;
  double t8913;
  double t11044;
  double t11076;
  double t8984;
  double t8995;
  double t9004;
  double t11146;
  double t11155;
  double t9231;
  double t9233;
  double t9239;
  double t11189;
  double t11208;
  double t9324;
  double t9429;
  double t9445;
  double t11671;
  double t11682;
  double t11686;
  double t11710;
  double t11756;
  double t11879;
  double t11883;
  double t11896;
  double t11932;
  double t11935;
  double t9587;
  double t9692;
  double t9869;
  double t9898;
  double t9899;
  double t9901;
  double t9922;
  double t9943;
  double t9947;
  double t9952;
  double t12046;
  double t12048;
  double t12061;
  double t12073;
  double t12084;
  double t12092;
  double t10139;
  double t10204;
  double t10212;
  double t10218;
  double t10236;
  double t10252;
  double t10261;
  double t10264;
  double t12103;
  double t12105;
  double t12111;
  double t12127;
  double t12138;
  double t12146;
  double t10338;
  double t10357;
  double t10359;
  double t10380;
  double t12291;
  double t12298;
  double t12299;
  double t10455;
  double t12315;
  double t12332;
  double t12333;
  double t10498;
  double t10499;
  double t10513;
  double t10515;
  double t10527;
  double t10532;
  double t10545;
  double t10560;
  double t10605;
  double t10727;
  double t10732;
  double t10733;
  double t10738;
  double t10753;
  double t10763;
  double t12476;
  double t12479;
  double t12484;
  double t12441;
  double t12442;
  double t12445;
  double t11096;
  double t11099;
  double t11100;
  double t11118;
  double t11128;
  double t11218;
  double t11219;
  double t11225;
  double t12340;
  double t11258;
  double t11261;
  double t11265;
  double t12310;
  double t11271;
  double t11273;
  double t11281;
  double t12370;
  double t11318;
  double t11322;
  double t11329;
  double t12380;
  double t11330;
  double t11334;
  double t11372;
  double t12456;
  double t12590;
  double t12638;
  double t12667;
  double t12705;
  double t12721;
  double t12731;
  double t12744;
  double t13386;
  double t13387;
  double t13390;
  double t13396;
  double t13285;
  double t13321;
  double t13291;
  double t13292;
  double t13294;
  double t13481;
  double t13483;
  double t13485;
  double t13510;
  double t13515;
  double t13517;
  double t13537;
  double t13538;
  double t13544;
  double t13580;
  double t13586;
  double t13593;
  double t4624;
  double t4650;
  double t4657;
  double t13634;
  double t13636;
  double t13643;
  double t13648;
  double t13649;
  double t13650;
  double t13666;
  double t13672;
  double t13673;
  double t13678;
  double t13685;
  double t13686;
  double t13761;
  double t13767;
  double t13768;
  double t13770;
  double t13771;
  double t13774;
  double t13778;
  double t13780;
  double t13865;
  double t13866;
  double t13869;
  double t13873;
  double t13880;
  double t13887;
  double t13901;
  double t13781;
  double t13824;
  double t13828;
  double t13999;
  double t14004;
  double t14007;
  double t14022;
  double t14029;
  double t14033;
  double t13488;
  double t13498;
  double t13836;
  double t13848;
  double t13857;
  double t13535;
  double t13545;
  double t13550;
  double t13892;
  double t13920;
  double t13936;
  double t14127;
  double t14128;
  double t14129;
  double t14136;
  double t14142;
  double t14143;
  double t13509;
  double t13521;
  double t13527;
  double t13947;
  double t13956;
  double t13959;
  double t14246;
  double t14247;
  double t14235;
  double t14237;
  double t14240;
  double t14231;
  double t14234;
  double t14242;
  double t14244;
  double t14248;
  double t14249;
  double t14253;
  double t14254;
  double t14255;
  double t13287;
  double t13295;
  double t13301;
  double t13303;
  double t13323;
  double t13415;
  double t13427;
  double t13431;
  double t13442;
  double t13447;
  double t13448;
  double t14310;
  double t14317;
  double t14318;
  double t13432;
  double t13450;
  double t13534;
  double t13557;
  double t13645;
  double t13652;
  double t13658;
  double t13660;
  double t13676;
  double t13687;
  double t13688;
  double t13693;
  double t13731;
  double t13732;
  double t13733;
  double t13734;
  double t13739;
  double t13740;
  double t13741;
  double t13742;
  double t4680;
  double t4697;
  double t4781;
  double t4826;
  double t13864;
  double t13900;
  double t13911;
  double t14389;
  double t14390;
  double t14391;
  double t14393;
  double t14396;
  double t14397;
  double t13943;
  double t14411;
  double t14415;
  double t14421;
  double t13954;
  double t13955;
  double t14122;
  double t14398;
  double t14436;
  double t14166;
  double t14167;
  double t14537;
  double t14538;
  double t14543;
  double t14550;
  double t14554;
  double t14563;
  double t14180;
  double t14491;
  double t14514;
  double t14198;
  double t14201;
  t45 = Cos(var1[16]);
  t56 = Cos(var1[5]);
  t111 = Sin(var1[15]);
  t39 = Cos(var1[15]);
  t128 = Sin(var1[5]);
  t30 = Sin(var1[3]);
  t243 = Sin(var1[16]);
  t226 = Cos(var1[3]);
  t240 = Cos(var1[4]);
  t444 = Sin(var1[4]);
  t1345 = Cos(var1[17]);
  t1544 = Sin(var1[17]);
  t1397 = -1.*t1345;
  t1410 = 1. + t1397;
  t2163 = -1.*t1345*t243;
  t2184 = -1.*t45*t1544;
  t2186 = 0. + t2163 + t2184;
  t2297 = -1.*t111*t2186;
  t2303 = 0. + t2297;
  t2187 = t39*t2186;
  t2246 = 0. + t2187;
  t1739 = -0.336601*t1410;
  t1740 = -0.356601*t1345;
  t1749 = -0.16*t1544;
  t1755 = 0. + t1739 + t1740 + t1749;
  t1434 = -0.20833*t1410;
  t1501 = -0.36833*t1345;
  t1564 = 0.020000000000000018*t1544;
  t1699 = 0. + t1434 + t1501 + t1564;
  t2414 = t45*t1345;
  t2467 = -1.*t243*t1544;
  t2526 = 0. + t2414 + t2467;
  t3391 = -1.*t111*t2526;
  t3426 = 0. + t3391;
  t3269 = t39*t2526;
  t3301 = 0. + t3269;
  t72 = t39*t45*t56;
  t140 = -1.*t45*t111*t128;
  t177 = t72 + t140;
  t372 = t240*t243;
  t458 = -1.*t45*t56*t111;
  t500 = -1.*t39*t45*t128;
  t527 = t458 + t500;
  t586 = -1.*t444*t527;
  t616 = t372 + t586;
  t736 = -1.*t39*t56*t243;
  t767 = t111*t243*t128;
  t776 = t736 + t767;
  t958 = t45*t240;
  t1004 = t56*t111*t243;
  t1071 = t39*t243*t128;
  t1092 = t1004 + t1071;
  t1113 = -1.*t444*t1092;
  t1122 = t958 + t1113;
  t1713 = t1345*t1699;
  t1722 = 0.194401*t1544;
  t1794 = t1755*t1544;
  t1872 = 0. + t1713 + t1722 + t1794;
  t1950 = 0.241*t1872;
  t2122 = 0. + t1950;
  t2295 = t56*t2246;
  t2311 = t2303*t128;
  t2356 = 0. + t2295 + t2311;
  t2531 = t240*t2526;
  t2595 = t56*t2303;
  t2596 = -1.*t2246*t128;
  t2666 = 0. + t2595 + t2596;
  t2671 = -1.*t444*t2666;
  t2707 = 0. + t2531 + t2671;
  t2919 = -0.194401*t1345;
  t2930 = -1.*t1345*t1755;
  t2972 = t1699*t1544;
  t3177 = 0. + t2919 + t2930 + t2972;
  t3181 = 0.241*t3177;
  t3185 = 0. + t3181;
  t3311 = t56*t3301;
  t3437 = t3426*t128;
  t3531 = 0. + t3311 + t3437;
  t3627 = t1345*t243;
  t3701 = t45*t1544;
  t3754 = 0. + t3627 + t3701;
  t3937 = t240*t3754;
  t3948 = t56*t3426;
  t3975 = -1.*t3301*t128;
  t4023 = 0. + t3948 + t3975;
  t4049 = -1.*t444*t4023;
  t4134 = 0. + t3937 + t4049;
  t5359 = -1.*t243*t444;
  t5391 = -1.*t240*t527;
  t5413 = t5359 + t5391;
  t5433 = -1.*t45*t444;
  t5435 = -1.*t240*t1092;
  t5450 = t5433 + t5435;
  t5517 = -1.*t2526*t444;
  t5558 = -1.*t240*t2666;
  t5582 = t5517 + t5558;
  t5621 = -1.*t3754*t444;
  t5642 = -1.*t240*t4023;
  t5676 = t5621 + t5642;
  t6752 = -0.04*t45;
  t6753 = 0.04*t243;
  t6766 = t6752 + t6753;
  t6517 = t39*t56;
  t6527 = -1.*t111*t128;
  t6575 = t6517 + t6527;
  t6630 = -1.*t45;
  t6631 = 1. + t6630;
  t6635 = -0.194401*t6631;
  t6637 = -0.234401*t45;
  t6664 = -0.04*t243;
  t6673 = t6635 + t6637 + t6664;
  t6721 = -1.*t39;
  t6726 = 1. + t6721;
  t6731 = 0.081715*t6726;
  t6743 = 0.13757*t39;
  t6855 = -1.*t111*t6766;
  t6917 = t6731 + t6743 + t6855;
  t6924 = t56*t6917;
  t6959 = 0.055855*t111;
  t6961 = t39*t6766;
  t7056 = t6959 + t6961;
  t7119 = -1.*t7056*t128;
  t7128 = t6924 + t7119;
  t7154 = t6673*t444;
  t7155 = t240*t7128;
  t7167 = t7154 + t7155;
  t6706 = -1.*t6673*t444;
  t7131 = -1.*t240*t7128;
  t7133 = t6706 + t7131;
  t7529 = t240*t6673;
  t7564 = -1.*t444*t7128;
  t7570 = t7529 + t7564;
  t6462 = t243*t444;
  t6497 = t240*t527;
  t6516 = t6462 + t6497;
  t7319 = t56*t7056;
  t7443 = t6917*t128;
  t7494 = t7319 + t7443;
  t7272 = t56*t111;
  t7273 = t39*t128;
  t7284 = t7272 + t7273;
  t7863 = t45*t444;
  t7864 = t240*t1092;
  t7896 = t7863 + t7864;
  t8294 = -0.194401*t243;
  t8338 = -1.*t243*t1755;
  t8407 = t45*t1699;
  t8436 = 0. + t8294 + t8338 + t8407;
  t8045 = 0. + t39;
  t8055 = t8045*t56;
  t8058 = 0. + t111;
  t8065 = -1.*t8058*t128;
  t8081 = 0. + t8055 + t8065;
  t8135 = -0.194401*t6631;
  t8137 = t45*t1755;
  t8138 = t243*t1699;
  t8158 = 0. + t8135 + t8137 + t8138;
  t8271 = 0.081715*t6726;
  t8278 = 0.11688*t39;
  t8449 = -1.*t111*t8436;
  t8453 = t8271 + t8278 + t8449;
  t8484 = t56*t8453;
  t8491 = 0.035165*t111;
  t8501 = t39*t8436;
  t8543 = t8491 + t8501;
  t8559 = -1.*t8543*t128;
  t8560 = 0. + t8484 + t8559;
  t8757 = t240*t8158;
  t8780 = -1.*t444*t8560;
  t6247 = t2531 + t2671;
  t8755 = t240*t8081;
  t8756 = 0. + t8755;
  t8591 = t8158*t444;
  t8595 = t240*t8560;
  t8610 = 0. + t8591 + t8595;
  t8086 = -1.*t444*t8081;
  t8121 = 0. + t8086;
  t8835 = 0. + t8757 + t8780;
  t8831 = t8757 + t8780;
  t8018 = t2526*t444;
  t8020 = t240*t2666;
  t8036 = 0. + t8018 + t8020;
  t8172 = -1.*t8158*t444;
  t8567 = -1.*t240*t8560;
  t8573 = t8172 + t8567;
  t8887 = t56*t8543;
  t8888 = t8453*t128;
  t8889 = 0. + t8887 + t8888;
  t6334 = t3937 + t4049;
  t8863 = t56*t8058;
  t8881 = t8045*t128;
  t8883 = 0. + t8863 + t8881;
  t9038 = t3754*t444;
  t9044 = t240*t4023;
  t9068 = 0. + t9038 + t9044;
  t9578 = -1.*t39*t45*t56;
  t9581 = t45*t111*t128;
  t9585 = t9578 + t9581;
  t9629 = t39*t56*t243;
  t9659 = -1.*t111*t243*t128;
  t9688 = t9629 + t9659;
  t9698 = -1.*t56*t2246;
  t9715 = -1.*t2303*t128;
  t9716 = t9698 + t9715;
  t9750 = -1.*t56*t3301;
  t9760 = -1.*t3426*t128;
  t9779 = t9750 + t9760;
  t9959 = t2595 + t2596;
  t9983 = t3948 + t3975;
  t7506 = -1.*t7284*t7494;
  t10384 = -1.*t56*t7056;
  t10392 = -1.*t6917*t128;
  t10397 = t10384 + t10392;
  t7742 = t177*t7494;
  t7956 = t7284*t7494;
  t10435 = -1.*t56*t111;
  t10437 = -1.*t39*t128;
  t10447 = t10435 + t10437;
  t7991 = -1.*t7494*t776;
  t8890 = t8883*t8889;
  t10967 = -1.*t56*t8543;
  t10982 = -1.*t8453*t128;
  t10990 = t10967 + t10982;
  t10787 = t8484 + t8559;
  t11012 = t8055 + t8065;
  t8983 = -1.*t8889*t2356;
  t9178 = -1.*t8883*t8889;
  t10863 = -1.*t56*t8058;
  t10926 = -1.*t8045*t128;
  t10951 = t10863 + t10926;
  t9319 = t8889*t3531;
  t10467 = -1.*t7284*t7128;
  t10491 = -1.*t6575*t7494;
  t7526 = -1.*t240*t6575*t7167;
  t7614 = t444*t6575*t7570;
  t7619 = t7506 + t7526 + t7614;
  t10379 = t177*t7128;
  t10405 = t527*t7494;
  t7789 = t6516*t7167;
  t7800 = t616*t7570;
  t7811 = t7742 + t7789 + t7800;
  t10564 = t7284*t7128;
  t11248 = Power(t240,2);
  t11250 = Power(t444,2);
  t10574 = t6575*t7494;
  t7958 = t240*t6575*t7167;
  t7963 = -1.*t444*t6575*t7570;
  t7968 = t7956 + t7958 + t7963;
  t10591 = -1.*t7494*t1092;
  t10680 = -1.*t7128*t776;
  t7993 = -1.*t7167*t7896;
  t7994 = -1.*t7570*t1122;
  t8007 = t7991 + t7993 + t7994;
  t10806 = t8883*t10787;
  t11038 = t11012*t8889;
  t8900 = t8756*t8610;
  t8911 = t8121*t8835;
  t8913 = t8890 + t8900 + t8911;
  t11044 = -1.*t8889*t9959;
  t11076 = -1.*t10787*t2356;
  t8984 = -1.*t8610*t8036;
  t8995 = -1.*t8835*t2707;
  t9004 = t8983 + t8984 + t8995;
  t11146 = -1.*t8883*t10787;
  t11155 = -1.*t11012*t8889;
  t9231 = -1.*t8756*t8610;
  t9233 = -1.*t8121*t8835;
  t9239 = t9178 + t9231 + t9233;
  t11189 = t8889*t9983;
  t11208 = t10787*t3531;
  t9324 = t8610*t9068;
  t9429 = t8835*t4134;
  t9445 = t9319 + t9324 + t9429;
  t11671 = -0.055855*t111;
  t11682 = -1.*t39*t6766;
  t11686 = t11671 + t11682;
  t11710 = 0.055855*t39;
  t11756 = t11710 + t6855;
  t11879 = -0.035165*t111;
  t11883 = -1.*t39*t8436;
  t11896 = t11879 + t11883;
  t11932 = 0.035165*t39;
  t11935 = t11932 + t8449;
  t9587 = -0.06108*t240*t9585;
  t9692 = 0.06108*t240*t9688;
  t9869 = t30*t527;
  t9898 = -1.*t226*t444*t9585;
  t9899 = t9869 + t9898;
  t9901 = -0.06108*t9899;
  t9922 = t30*t1092;
  t9943 = -1.*t226*t444*t9688;
  t9947 = t9922 + t9943;
  t9952 = 0.06108*t9947;
  t12046 = -1.*t39*t56*t2186;
  t12048 = t111*t2186*t128;
  t12061 = t12046 + t12048;
  t12073 = -1.*t39*t56*t2526;
  t12084 = t111*t2526*t128;
  t12092 = t12073 + t12084;
  t10139 = t226*t527;
  t10204 = t30*t444*t9585;
  t10212 = t10139 + t10204;
  t10218 = -0.06108*t10212;
  t10236 = t226*t1092;
  t10252 = t30*t444*t9688;
  t10261 = t10236 + t10252;
  t10264 = 0.06108*t10261;
  t12103 = -1.*t56*t111*t2186;
  t12105 = -1.*t39*t2186*t128;
  t12111 = t12103 + t12105;
  t12127 = -1.*t56*t111*t2526;
  t12138 = -1.*t39*t2526*t128;
  t12146 = t12127 + t12138;
  t10338 = -1.*t6575*t7128;
  t10357 = t10338 + t7506;
  t10359 = t527*t10357;
  t10380 = t9585*t7128;
  t12291 = t56*t11756;
  t12298 = t11686*t128;
  t12299 = t12291 + t12298;
  t10455 = -1.*t10447*t7128;
  t12315 = t56*t11686;
  t12332 = -1.*t11756*t128;
  t12333 = t12315 + t12332;
  t10498 = t6673*t243;
  t10499 = t527*t7128;
  t10513 = t10498 + t10499 + t7742;
  t10515 = t6575*t10513;
  t10527 = t6575*t7128;
  t10532 = t10527 + t7956;
  t10545 = t1092*t10532;
  t10560 = t10447*t7128;
  t10605 = -1.*t7128*t9688;
  t10727 = -1.*t45*t6673;
  t10732 = -1.*t7128*t1092;
  t10733 = t10727 + t10732 + t7991;
  t10738 = t6575*t10733;
  t10753 = t8081*t8560;
  t10763 = 0. + t10753 + t8890;
  t12476 = t56*t11896;
  t12479 = -1.*t11935*t128;
  t12484 = t12476 + t12479;
  t12441 = t56*t11935;
  t12442 = t11896*t128;
  t12445 = t12441 + t12442;
  t11096 = -1.*t8158*t2526;
  t11099 = -1.*t8560*t2666;
  t11100 = t11096 + t11099 + t8983;
  t11118 = -1.*t8081*t8560;
  t11128 = 0. + t11118 + t9178;
  t11218 = t8158*t3754;
  t11219 = t8560*t4023;
  t11225 = t11218 + t11219 + t9319;
  t12340 = -1.*t7284*t12299;
  t11258 = -1.*t240*t10447*t7167;
  t11261 = t444*t10447*t7570;
  t11265 = t240*t9585*t7619;
  t12310 = t177*t12299;
  t11271 = t240*t9585*t7167;
  t11273 = -1.*t444*t9585*t7570;
  t11281 = t240*t10447*t7811;
  t12370 = t7284*t12299;
  t11318 = t240*t10447*t7167;
  t11322 = -1.*t444*t10447*t7570;
  t11329 = t240*t9688*t7968;
  t12380 = -1.*t12299*t776;
  t11330 = -1.*t240*t9688*t7167;
  t11334 = t444*t9688*t7570;
  t11372 = t240*t10447*t8007;
  t12456 = t8883*t12445;
  t12590 = t6575*t8889;
  t12638 = -1.*t8889*t12111;
  t12667 = -1.*t12445*t2356;
  t12705 = -1.*t8883*t12445;
  t12721 = -1.*t6575*t8889;
  t12731 = t8889*t12146;
  t12744 = t12445*t3531;
  t13386 = -0.194401*t45;
  t13387 = -1.*t45*t1755;
  t13390 = -1.*t243*t1699;
  t13396 = t13386 + t13387 + t13390;
  t13285 = t2414 + t2467;
  t13321 = t2163 + t2184;
  t13291 = -1.*t45*t1345;
  t13292 = t243*t1544;
  t13294 = t13291 + t13292;
  t13481 = t45*t56*t111;
  t13483 = t39*t45*t128;
  t13485 = t13481 + t13483;
  t13510 = -1.*t56*t111*t13321;
  t13515 = -1.*t39*t13321*t128;
  t13517 = t13510 + t13515;
  t13537 = -1.*t56*t111*t13294;
  t13538 = -1.*t39*t13294*t128;
  t13544 = t13537 + t13538;
  t13580 = -1.*t240*t243;
  t13586 = -1.*t444*t13485;
  t13593 = t13580 + t13586;
  t4624 = t226*t776;
  t4650 = -1.*t30*t1122;
  t4657 = t4624 + t4650;
  t13634 = t39*t56*t13321;
  t13636 = -1.*t111*t13321*t128;
  t13643 = t13634 + t13636;
  t13648 = t240*t13285;
  t13649 = -1.*t444*t13517;
  t13650 = t13648 + t13649;
  t13666 = t39*t56*t13294;
  t13672 = -1.*t111*t13294*t128;
  t13673 = t13666 + t13672;
  t13678 = t240*t13321;
  t13685 = -1.*t444*t13544;
  t13686 = t13678 + t13685;
  t13761 = 0.04*t45;
  t13767 = t13761 + t6753;
  t13768 = -1.*t56*t111*t13767;
  t13770 = -1.*t39*t13767*t128;
  t13771 = t13768 + t13770;
  t13774 = t39*t56*t13767;
  t13778 = -1.*t111*t13767*t128;
  t13780 = t13774 + t13778;
  t13865 = -1.*t56*t111*t13396;
  t13866 = -1.*t39*t13396*t128;
  t13869 = t13865 + t13866;
  t13873 = t39*t56*t13396;
  t13880 = -1.*t111*t13396*t128;
  t13887 = t13873 + t13880;
  t13901 = t8294 + t8338 + t8407;
  t13781 = -1.*t7284*t13780;
  t13824 = t177*t13780;
  t13828 = t7494*t776;
  t13999 = t6766*t444;
  t14004 = t240*t13771;
  t14007 = t13999 + t14004;
  t14022 = t240*t6766;
  t14029 = -1.*t444*t13771;
  t14033 = t14022 + t14029;
  t13488 = t240*t13485;
  t13498 = t5359 + t13488;
  t13836 = t7284*t13780;
  t13848 = -1.*t9585*t7494;
  t13857 = -1.*t13780*t776;
  t13535 = t13321*t444;
  t13545 = t240*t13544;
  t13550 = t13535 + t13545;
  t13892 = t8883*t13887;
  t13920 = -1.*t8889*t13673;
  t13936 = -1.*t13887*t2356;
  t14127 = t13901*t444;
  t14128 = t240*t13869;
  t14129 = t14127 + t14128;
  t14136 = t240*t13901;
  t14142 = -1.*t444*t13869;
  t14143 = t14136 + t14142;
  t13509 = t13285*t444;
  t13521 = t240*t13517;
  t13527 = t13509 + t13521;
  t13947 = -1.*t8883*t13887;
  t13956 = t8889*t13643;
  t13959 = t13887*t3531;
  t14246 = -0.16*t1345;
  t14247 = t14246 + t1564;
  t14235 = 0.020000000000000018*t1345;
  t14237 = 0.16*t1544;
  t14240 = t14235 + t14237;
  t14231 = 0.194401*t1345;
  t14234 = t1345*t1755;
  t14242 = t1345*t14240;
  t14244 = -1.*t1699*t1544;
  t14248 = t14247*t1544;
  t14249 = t14231 + t14234 + t14242 + t14244 + t14248;
  t14253 = -1.*t1345*t14247;
  t14254 = t14240*t1544;
  t14255 = t1713 + t14253 + t1722 + t1794 + t14254;
  t13287 = -0.11688*t13285;
  t13295 = -0.081715*t13294;
  t13301 = t13287 + t13295;
  t13303 = -1.*t13301*t2122;
  t13323 = -0.035165*t13321*t3185;
  t13415 = -1.*t8058*t8543;
  t13427 = -1.*t8045*t8453;
  t13431 = 0. + t13415 + t13427;
  t13442 = t8058*t8543;
  t13447 = t8045*t8453;
  t13448 = 0. + t13442 + t13447;
  t14310 = -1.*t243*t14247;
  t14317 = t45*t14240;
  t14318 = t14310 + t14317;
  t13432 = t13431*t13285;
  t13450 = t13448*t13321;
  t13534 = -1.*t3185*t13527;
  t13557 = -1.*t2122*t13550;
  t13645 = t30*t13643;
  t13652 = t226*t13650;
  t13658 = t13645 + t13652;
  t13660 = -1.*t3185*t13658;
  t13676 = t30*t13673;
  t13687 = t226*t13686;
  t13688 = t13676 + t13687;
  t13693 = -1.*t2122*t13688;
  t13731 = t226*t13643;
  t13732 = -1.*t30*t13650;
  t13733 = t13731 + t13732;
  t13734 = -1.*t3185*t13733;
  t13739 = t226*t13673;
  t13740 = -1.*t30*t13686;
  t13741 = t13739 + t13740;
  t13742 = -1.*t2122*t13741;
  t4680 = t226*t2356;
  t4697 = -1.*t30*t2707;
  t4781 = t226*t3531;
  t4826 = -1.*t30*t4134;
  t13864 = t13673*t10763;
  t13900 = -1.*t8158*t13321;
  t13911 = -1.*t8560*t13544;
  t14389 = -1.*t56*t111*t14318;
  t14390 = -1.*t39*t14318*t128;
  t14391 = t14389 + t14390;
  t14393 = t39*t56*t14318;
  t14396 = -1.*t111*t14318*t128;
  t14397 = t14393 + t14396;
  t13943 = t13643*t11128;
  t14411 = t45*t14247;
  t14415 = t243*t14240;
  t14421 = t14411 + t14415;
  t13954 = t8158*t13285;
  t13955 = t8560*t13517;
  t14122 = t13550*t8913;
  t14398 = t8883*t14397;
  t14436 = -1.*t14397*t2356;
  t14166 = -1.*t8610*t13550;
  t14167 = -1.*t8835*t13686;
  t14537 = t14421*t444;
  t14538 = t240*t14391;
  t14543 = t14537 + t14538;
  t14550 = t240*t14421;
  t14554 = -1.*t444*t14391;
  t14563 = t14550 + t14554;
  t14180 = t13527*t9239;
  t14491 = -1.*t8883*t14397;
  t14514 = t14397*t3531;
  t14198 = t8610*t13527;
  t14201 = t8835*t13650;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-1.*t2122*(-1.*t226*t2707 - 1.*t2356*t30) - 1.*t3185*(-1.*t30*t3531 - 1.*t226*t4134) - 0.06108*(-1.*t177*t30 - 1.*t226*t616) + 0.06108*(-1.*t1122*t226 - 1.*t30*t776))*var2[1] - 0.5*(0.06108*t4657 - 1.*t2122*(t4680 + t4697) - 1.*t3185*(t4781 + t4826) - 0.06108*(t177*t226 - 1.*t30*t616))*var2[2])*var2[16];
  p_output1[4]=(-0.5*(0.06108*t1122 - 0.06108*t616 - 1.*t2122*t6247 - 1.*t3185*t6334)*var2[0] - 0.5*(0.06108*t30*t5413 - 0.06108*t30*t5450 + t2122*t30*t5582 + t30*t3185*t5676)*var2[1] - 0.5*(-0.06108*t226*t5413 + 0.06108*t226*t5450 - 1.*t2122*t226*t5582 - 1.*t226*t3185*t5676)*var2[2] - 0.5*(0.06108*(t6516*(t444*t6575*t7133 + t444*t6575*t7167) + t240*t6575*(t616*t7133 + t616*t7167 + t5413*t7570 + t6516*t7570) + t616*t7619 - 1.*t444*t6575*t7811) - 0.06108*((-1.*t444*t6575*t7133 - 1.*t444*t6575*t7167)*t7896 + t240*t6575*(-1.*t1122*t7133 - 1.*t1122*t7167 - 1.*t5450*t7570 - 1.*t7570*t7896) + t1122*t7968 - 1.*t444*t6575*t8007) - 1.*t3185*(t8756*(-1.*t2707*t8573 - 1.*t6247*t8610 - 1.*t8036*t8831 - 1.*t5582*t8835) + t8036*(t8121*t8573 - 1.*t444*t8081*t8610 + t8756*t8831 - 1.*t240*t8081*t8835) + t6247*t8913 - 1.*t444*t8081*t9004) - 1.*t2122*((-1.*t8121*t8573 + t444*t8081*t8610 - 1.*t8756*t8831 + t240*t8081*t8835)*t9068 + t8756*(t4134*t8573 + t6334*t8610 + t5676*t8835 + t8831*t9068) + t6334*t9239 - 1.*t444*t8081*t9445))*var2[3])*var2[16];
  p_output1[5]=(-0.5*(t9587 + t9692 - 1.*t2122*t240*t9716 - 1.*t240*t3185*t9779)*var2[0] - 0.5*(t10218 + t10264 - 1.*t2122*(t30*t444*t9716 + t226*t9959) - 1.*t3185*(t30*t444*t9779 + t226*t9983))*var2[1] - 0.5*(t9901 + t9952 - 1.*t2122*(-1.*t226*t444*t9716 + t30*t9959) - 1.*t3185*(-1.*t226*t444*t9779 + t30*t9983))*var2[2] - 0.5*(0.06108*(t11265 + t11281 + t240*(t10379 + t10405 + t11271 + t11273 - 1.*t10397*t444*t616 + t10397*t240*t6516)*t6575 + t6516*(t10467 + t10491 + t11258 + t11261 - 1.*t10397*t11248*t6575 - 1.*t10397*t11250*t6575)) - 0.06108*(t11329 + t11372 + (t10564 + t10574 + t11318 + t11322 + t10397*t11248*t6575 + t10397*t11250*t6575)*t7896 + t240*t6575*(t10591 + t10680 + t11330 + t11334 + t10397*t1122*t444 - 1.*t10397*t240*t7896)) - 1.*t3185*(t8036*(t10806 + t11038 - 1.*t10990*t444*t8121 + t10951*t240*t8610 + t10990*t240*t8756 - 1.*t10951*t444*t8835) + t10951*t240*t9004 + t240*t8913*t9716 + t8756*(t11044 + t11076 + t10990*t2707*t444 - 1.*t10990*t240*t8036 - 1.*t240*t8610*t9716 + t444*t8835*t9716)) - 1.*t2122*((t11146 + t11155 + t10990*t444*t8121 - 1.*t10951*t240*t8610 - 1.*t10990*t240*t8756 + t10951*t444*t8835)*t9068 + t10951*t240*t9445 + t240*t9239*t9779 + t8756*(t11189 + t11208 - 1.*t10990*t4134*t444 + t10990*t240*t9068 + t240*t8610*t9779 - 1.*t444*t8835*t9779)))*var2[3] - 0.5*(0.06108*(t10359 + t10515 + t177*(t10455 + t10467 + t10491 - 1.*t10397*t6575) + (t10379 + t10380 + t10405 + t10397*t527)*t7284) - 0.06108*(t10545 + t10738 + (t10591 + t10605 + t10680 - 1.*t10397*t1092)*t7284 + (t10560 + t10564 + t10574 + t10397*t6575)*t776) - 1.*t3185*(t11012*t11100 + t2356*(t10806 + t11038 + t10990*t8081 + t10951*t8560) + t8883*(t11044 + t11076 - 1.*t10990*t2666 - 1.*t8560*t9716) + t10763*t9959) - 1.*t2122*(t11012*t11225 + t3531*(t11146 + t11155 - 1.*t10990*t8081 - 1.*t10951*t8560) + t8883*(t11189 + t11208 + t10990*t4023 + t8560*t9779) + t11128*t9983))*var2[4])*var2[16];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=(-0.5*(-1.*t12061*t2122*t240 - 1.*t12092*t240*t3185 + t9587 + t9692)*var2[0] - 0.5*(t10218 + t10264 - 1.*t2122*(t12111*t226 + t12061*t30*t444) - 1.*t3185*(t12146*t226 + t12092*t30*t444))*var2[1] - 0.5*(-1.*t2122*(t12111*t30 - 1.*t12061*t226*t444) - 1.*t3185*(t12146*t30 - 1.*t12092*t226*t444) + t9901 + t9952)*var2[2] - 0.5*(0.06108*(t11265 + t11281 + t240*(t10405 + t11271 + t11273 + t12310 - 1.*t12333*t444*t616 + t12333*t240*t6516)*t6575 + t6516*(t10491 + t11258 + t11261 + t12340 - 1.*t11248*t12333*t6575 - 1.*t11250*t12333*t6575)) - 0.06108*(t11329 + t11372 + (t10574 + t11318 + t11322 + t12370 + t11248*t12333*t6575 + t11250*t12333*t6575)*t7896 + t240*t6575*(t10591 + t11330 + t11334 + t12380 + t1122*t12333*t444 - 1.*t12333*t240*t7896)) - 1.*t3185*(t8036*(t12456 + t12590 - 1.*t12484*t444*t8121 + t10447*t240*t8610 + t12484*t240*t8756 - 1.*t10447*t444*t8835) + t8756*(t12638 + t12667 + t12484*t2707*t444 - 1.*t12484*t240*t8036 - 1.*t12061*t240*t8610 + t12061*t444*t8835) + t12061*t240*t8913 + t10447*t240*t9004) - 1.*t2122*((t12705 + t12721 + t12484*t444*t8121 - 1.*t10447*t240*t8610 - 1.*t12484*t240*t8756 + t10447*t444*t8835)*t9068 + t8756*(t12731 + t12744 - 1.*t12484*t4134*t444 + t12092*t240*t8610 - 1.*t12092*t444*t8835 + t12484*t240*t9068) + t12092*t240*t9239 + t10447*t240*t9445))*var2[3] - 0.5*(0.06108*(t10359 + t10515 + t177*(t10455 + t10491 + t12340 - 1.*t12333*t6575) + (t10380 + t10405 + t12310 + t12333*t527)*t7284) - 0.06108*(t10545 + t10738 + (t10591 + t10605 - 1.*t1092*t12333 + t12380)*t7284 + (t10560 + t10574 + t12370 + t12333*t6575)*t776) - 1.*t3185*(t10763*t12111 + t11100*t6575 + t2356*(t12456 + t12590 + t12484*t8081 + t10447*t8560) + (t12638 + t12667 - 1.*t12484*t2666 - 1.*t12061*t8560)*t8883) - 1.*t2122*(t11128*t12146 + t11225*t6575 + t3531*(t12705 + t12721 - 1.*t12484*t8081 - 1.*t10447*t8560) + (t12731 + t12744 + t12484*t4023 + t12092*t8560)*t8883))*var2[4] - 0.5*(0.06108*t243*(-1.*t111*t11756 - 1.*t11686*t39 + t111*t6917 - 1.*t39*t7056) - 0.06108*t45*(t111*t11756 + t11686*t39 - 1.*t111*t6917 + t39*t7056) - 1.*t2122*t3754*(-1.*t11896*t8045 - 1.*t11935*t8058 + t111*t8453 - 1.*t39*t8543) - 1.*t2526*t3185*(t11896*t8045 + t11935*t8058 - 1.*t111*t8453 + t39*t8543))*var2[5])*var2[16];
  p_output1[16]=(-0.5*(0.06108*t13498 + t13534 + t13557 - 0.06108*t7896)*var2[0] - 0.5*(t13734 + t13742 - 0.06108*t4657 + 0.06108*(-1.*t13593*t30 + t226*t9585))*var2[1] - 0.5*(t13660 + t13693 - 0.06108*(t1122*t226 + t30*t776) + 0.06108*(t13593*t226 + t30*t9585))*var2[2] - 0.5*(0.06108*(t6516*(t13781 - 1.*t14007*t240*t6575 + t14033*t444*t6575) + t7619*t7896 + t240*t6575*(t13824 + t13828 + t14033*t616 + t14007*t6516 + t1122*t7570 + t7167*t7896)) - 0.06108*((t13836 + t14007*t240*t6575 - 1.*t14033*t444*t6575)*t7896 + t240*t6575*(t13848 + t13857 - 1.*t1122*t14033 - 1.*t13498*t7167 - 1.*t13593*t7570 - 1.*t14007*t7896) + t13498*t7968) - 1.*t3185*(t14122 + (t13920 + t13936 + t14166 + t14167 - 1.*t14143*t2707 - 1.*t14129*t8036)*t8756 + t8036*(t13892 + t14143*t8121 + t14129*t8756)) - 1.*t2122*(t14180 + (t13947 - 1.*t14143*t8121 - 1.*t14129*t8756)*t9068 + t8756*(t13956 + t13959 + t14198 + t14201 + t14143*t4134 + t14129*t9068)))*var2[3] - 0.5*(0.06108*(t177*(t13781 - 1.*t13771*t6575) + (t13824 + t13828 + t13771*t527 + t45*t6673 + t243*t6766 + t1092*t7128)*t7284 + t10357*t776) - 1.*t3185*(t13864 + t2356*(t13892 + t13869*t8081) + (t13900 + t13911 + t13920 + t13936 - 1.*t13901*t2526 - 1.*t13869*t2666)*t8883) - 1.*t2122*(t13943 + t3531*(t13947 - 1.*t13869*t8081) + (t13954 + t13955 + t13956 + t13959 + t13901*t3754 + t13869*t4023)*t8883) - 0.06108*((t10498 - 1.*t1092*t13771 + t13848 + t13857 - 1.*t45*t6766 - 1.*t13485*t7128)*t7284 + (t13836 + t13771*t6575)*t776 + t10532*t9585))*var2[4] - 0.5*(0.06108*t45*(-1.*t39*t6917 - 1.*t111*t7056) + 0.06108*t243*(t39*t6917 + t111*t7056) - 1.*t2122*(t13432 + t3754*(t111*t13396*t8045 - 1.*t13396*t39*t8058)) - 1.*t3185*(t13450 + t2526*(-1.*t111*t13396*t8045 + t13396*t39*t8058)))*var2[5] - 0.5*(t13303 + t13323 + 0.0034116234*t243 - 0.0034116234*t45)*var2[15])*var2[16];
  p_output1[17]=var2[16]*(-0.5*(t13534 + t13557 - 0.241*t14249*t8036 - 0.241*t14255*t9068)*var2[0] - 0.5*(t13734 + t13742 - 0.241*t14249*(0. + t4680 + t4697) - 0.241*t14255*(0. + t4781 + t4826))*var2[1] - 0.5*(t13660 + t13693 - 0.241*t14249*(0. + t226*t2707 + t2356*t30) - 0.241*t14255*(0. + t30*t3531 + t226*t4134))*var2[2] - 0.5*(-1.*t3185*(t14122 + (t13920 + t14166 + t14167 + t14436 - 1.*t14563*t2707 - 1.*t14543*t8036)*t8756 + t8036*(t14398 + t14563*t8121 + t14543*t8756)) - 0.241*t14255*(t8036*t8913 + t8756*t9004) - 1.*t2122*(t14180 + (t14491 - 1.*t14563*t8121 - 1.*t14543*t8756)*t9068 + t8756*(t13956 + t14198 + t14201 + t14514 + t14563*t4134 + t14543*t9068)) - 0.241*t14249*(t9068*t9239 + t8756*t9445))*var2[3] - 0.5*(-0.241*t14255*(t10763*t2356 + t11100*t8883) - 0.241*t14249*(t11128*t3531 + t11225*t8883) - 1.*t3185*(t13864 + t2356*(t14398 + t14391*t8081) + (t13900 + t13911 + t13920 + t14436 - 1.*t14421*t2526 - 1.*t14391*t2666)*t8883) - 1.*t2122*(t13943 + t3531*(t14491 - 1.*t14391*t8081) + (t13954 + t13955 + t13956 + t14514 + t14421*t3754 + t14391*t4023)*t8883))*var2[4] - 0.5*(-0.241*t14255*(0. + t13448*t2526) - 0.241*t14249*(0. + t13431*t3754) - 1.*t2122*(t13432 + t3754*(t111*t14318*t8045 - 1.*t14318*t39*t8058)) - 1.*t3185*(t13450 + t2526*(-1.*t111*t14318*t8045 + t14318*t39*t8058)))*var2[5] - 0.5*(t13303 + t13323 - 0.241*t14255*(0. + 0.035165*t2526) - 0.241*t14249*(0. - 0.081715*t2186 - 0.11688*t3754))*var2[15] - 0.5*(-0.241*t14249*t1872 - 1.*t14249*t2122 - 0.241*t14255*t3177 - 1.*t14255*t3185)*var2[16] - 0.5*(0.03856*t14249 - 0.004820000000000004*t14255)*var2[17]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec17_plane.hh"

namespace SymFunction
{

void Ce3_vec17_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
