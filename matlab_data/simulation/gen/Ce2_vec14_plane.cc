/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:11:54 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t392;
  double t901;
  double t80;
  double t1208;
  double t1805;
  double t1811;
  double t2005;
  double t1388;
  double t1747;
  double t1771;
  double t1772;
  double t2339;
  double t3072;
  double t3087;
  double t3182;
  double t2471;
  double t4175;
  double t4193;
  double t887;
  double t1215;
  double t1297;
  double t1746;
  double t2081;
  double t2582;
  double t2769;
  double t2882;
  double t2909;
  double t4565;
  double t4886;
  double t4938;
  double t5028;
  double t4233;
  double t4289;
  double t4306;
  double t4496;
  double t3051;
  double t3200;
  double t3249;
  double t3351;
  double t3444;
  double t3478;
  double t7663;
  double t5759;
  double t5980;
  double t5992;
  double t6112;
  double t6241;
  double t6370;
  double t8102;
  double t8127;
  double t8624;
  double t7204;
  double t7670;
  double t3565;
  double t3594;
  double t3634;
  double t3635;
  double t3695;
  double t3755;
  double t10426;
  double t10407;
  double t10412;
  double t10413;
  double t10424;
  double t10332;
  double t10341;
  double t10353;
  double t10277;
  double t10323;
  double t10328;
  double t10329;
  double t10460;
  double t10461;
  double t10477;
  double t10482;
  double t10527;
  double t10454;
  double t9444;
  double t10727;
  double t10728;
  double t10732;
  double t10734;
  double t10736;
  double t10748;
  double t10757;
  double t10761;
  double t10762;
  double t6609;
  double t9553;
  double t10793;
  double t10794;
  double t10820;
  double t10828;
  double t10007;
  double t10043;
  double t10056;
  double t10096;
  double t10097;
  double t10141;
  double t10178;
  double t10193;
  double t10195;
  double t10532;
  double t10654;
  double t10660;
  double t10647;
  double t10650;
  double t10543;
  double t10559;
  double t10910;
  double t10911;
  double t10914;
  double t10926;
  double t10931;
  double t10936;
  double t10941;
  double t10404;
  double t10700;
  double t10705;
  double t10691;
  double t10693;
  double t10456;
  double t10457;
  double t10570;
  double t10572;
  double t10575;
  double t10580;
  double t10586;
  double t10587;
  double t10591;
  double t10594;
  double t10895;
  double t10900;
  double t10907;
  double t3810;
  double t3896;
  double t4108;
  double t4133;
  double t4141;
  double t4149;
  double t10890;
  double t10891;
  double t10892;
  double t11052;
  double t11053;
  double t11054;
  double t10644;
  double t10652;
  double t10670;
  double t10677;
  double t10679;
  double t10681;
  double t11026;
  double t11030;
  double t11035;
  double t10690;
  double t10699;
  double t10706;
  double t10711;
  double t10717;
  double t10718;
  double t11124;
  double t11140;
  double t11185;
  double t11188;
  double t11189;
  double t11190;
  double t11191;
  double t11192;
  double t11193;
  double t11194;
  double t11195;
  double t11131;
  double t11133;
  double t11136;
  double t11141;
  double t11146;
  double t11150;
  double t11159;
  double t11160;
  double t11161;
  double t11165;
  double t11168;
  double t11170;
  double t11414;
  double t11416;
  double t11417;
  double t11198;
  double t11199;
  double t11201;
  double t11210;
  double t11215;
  double t11220;
  double t11227;
  double t11236;
  double t11247;
  double t11254;
  double t11257;
  double t11259;
  double t11267;
  double t11268;
  double t11281;
  double t11286;
  double t11288;
  double t11304;
  double t11314;
  double t11315;
  double t11321;
  double t11333;
  double t11337;
  double t11344;
  double t11492;
  double t11497;
  double t11498;
  double t11484;
  double t11485;
  double t11486;
  double t11500;
  double t11501;
  double t11508;
  double t11490;
  double t11509;
  double t11513;
  double t11589;
  double t11594;
  double t11595;
  double t11601;
  double t11602;
  double t11603;
  double t11543;
  double t11544;
  double t11550;
  double t8475;
  double t11520;
  double t11556;
  double t11557;
  double t11621;
  double t11627;
  double t10864;
  double t11744;
  double t11745;
  double t11755;
  double t11724;
  double t11737;
  double t11741;
  double t11756;
  double t11757;
  double t11760;
  double t11742;
  double t11761;
  double t11763;
  double t11798;
  double t11802;
  double t11805;
  double t11807;
  double t11808;
  double t11809;
  double t11846;
  double t11851;
  double t11860;
  double t11527;
  double t12074;
  double t12075;
  double t12076;
  double t12078;
  double t12080;
  double t12085;
  double t12077;
  double t12091;
  double t12093;
  double t11604;
  double t11620;
  double t12159;
  double t12160;
  double t12162;
  double t12197;
  double t12202;
  double t12210;
  double t12132;
  double t12133;
  double t12142;
  double t11646;
  double t11655;
  double t11659;
  double t11676;
  double t11689;
  double t12144;
  double t12146;
  double t12253;
  double t12258;
  double t11701;
  double t11704;
  double t11771;
  double t12383;
  double t12385;
  double t12388;
  double t12401;
  double t12404;
  double t12405;
  double t12389;
  double t12390;
  double t12392;
  double t12406;
  double t12408;
  double t11811;
  double t11825;
  double t11831;
  double t12435;
  double t12436;
  double t12437;
  double t12440;
  double t12441;
  double t12443;
  double t11867;
  double t11881;
  double t11896;
  double t11903;
  double t11916;
  double t11932;
  double t11941;
  double t12459;
  double t12461;
  double t12462;
  double t11980;
  double t12013;
  double t12016;
  double t11430;
  double t11431;
  double t11432;
  double t11437;
  double t11438;
  double t11439;
  double t11407;
  double t11408;
  double t11412;
  double t4171;
  double t4515;
  double t5029;
  double t5030;
  double t5093;
  double t5263;
  double t5291;
  double t5535;
  double t7742;
  double t7794;
  double t7968;
  double t8830;
  double t9226;
  double t9555;
  double t9556;
  double t9642;
  double t9668;
  double t9739;
  double t9900;
  double t11380;
  double t11390;
  double t11392;
  double t10427;
  double t10428;
  double t10433;
  double t10453;
  double t10485;
  double t10487;
  double t10509;
  double t10529;
  double t10533;
  double t10539;
  double t10547;
  double t10560;
  double t10564;
  double t10565;
  double t10568;
  double t10607;
  double t10608;
  double t10614;
  double t10622;
  double t10624;
  double t10635;
  double t10636;
  double t10639;
  double t11444;
  double t11451;
  double t11453;
  double t11467;
  double t11470;
  double t11471;
  double t10733;
  double t10771;
  double t10782;
  double t10790;
  double t10806;
  double t10814;
  double t10823;
  double t10833;
  double t10843;
  double t10845;
  double t10856;
  double t10863;
  double t10870;
  double t10876;
  double t10879;
  double t10880;
  double t10881;
  double t12562;
  double t12565;
  double t12566;
  double t10925;
  double t10942;
  double t10947;
  double t10949;
  double t10957;
  double t10958;
  double t10963;
  double t10964;
  double t10967;
  double t10968;
  double t10970;
  double t10973;
  double t10974;
  double t10975;
  double t10978;
  double t10983;
  double t10990;
  double t10995;
  double t11000;
  double t11009;
  double t11012;
  double t12571;
  double t12572;
  double t12573;
  double t11036;
  double t11045;
  double t11055;
  double t11058;
  double t11062;
  double t11065;
  double t11073;
  double t11079;
  double t11080;
  double t11090;
  double t11096;
  double t11097;
  double t11098;
  double t11099;
  double t11100;
  double t11104;
  double t11396;
  double t11413;
  double t11422;
  double t11423;
  double t11434;
  double t11442;
  double t11456;
  double t11475;
  double t11476;
  double t11139;
  double t11151;
  double t11155;
  double t11164;
  double t11171;
  double t11173;
  double t11283;
  double t11306;
  double t11309;
  double t11251;
  double t11262;
  double t11264;
  double t11330;
  double t11348;
  double t11355;
  double t11206;
  double t11221;
  double t11222;
  double t11514;
  double t11522;
  double t11535;
  double t11536;
  double t11538;
  double t11553;
  double t11563;
  double t11572;
  double t11573;
  double t11585;
  double t11597;
  double t11610;
  double t11612;
  double t11613;
  double t11619;
  double t11630;
  double t11635;
  double t11640;
  double t11642;
  double t11644;
  double t11647;
  double t11650;
  double t11651;
  double t11657;
  double t11663;
  double t11664;
  double t11669;
  double t11675;
  double t11682;
  double t11687;
  double t11688;
  double t11692;
  double t11693;
  double t11694;
  double t11696;
  double t11698;
  double t11702;
  double t11708;
  double t11715;
  double t11722;
  double t11768;
  double t11769;
  double t11770;
  double t11774;
  double t11775;
  double t11781;
  double t11797;
  double t11806;
  double t11815;
  double t11817;
  double t11819;
  double t11822;
  double t11824;
  double t11830;
  double t11834;
  double t11835;
  double t11843;
  double t11862;
  double t11864;
  double t11866;
  double t11871;
  double t11874;
  double t11875;
  double t11878;
  double t11886;
  double t11888;
  double t11895;
  double t11902;
  double t11904;
  double t11906;
  double t11915;
  double t11917;
  double t11918;
  double t11923;
  double t11933;
  double t11944;
  double t11949;
  double t11966;
  double t11970;
  double t11979;
  double t11981;
  double t12000;
  double t12007;
  double t12008;
  double t12011;
  double t12015;
  double t12017;
  double t12018;
  double t12021;
  double t12094;
  double t12100;
  double t12108;
  double t12114;
  double t12116;
  double t12117;
  double t12143;
  double t12149;
  double t12155;
  double t12156;
  double t12158;
  double t12164;
  double t12244;
  double t12247;
  double t12249;
  double t12250;
  double t12251;
  double t12259;
  double t12261;
  double t12262;
  double t12270;
  double t12272;
  double t12276;
  double t12277;
  double t12306;
  double t12310;
  double t12312;
  double t12314;
  double t12319;
  double t12320;
  double t12321;
  double t12323;
  double t12334;
  double t12337;
  double t12341;
  double t12363;
  double t12364;
  double t12365;
  double t12367;
  double t12368;
  double t12369;
  double t12371;
  double t12372;
  double t12373;
  double t12375;
  double t12376;
  double t12377;
  double t12378;
  double t12379;
  double t12421;
  double t12422;
  double t12426;
  double t12429;
  double t12430;
  double t12432;
  double t12434;
  double t12439;
  double t12444;
  double t12445;
  double t12446;
  double t12447;
  double t12448;
  double t12449;
  double t12450;
  double t12451;
  double t12452;
  double t12455;
  double t12475;
  double t12476;
  double t12477;
  double t12478;
  double t12480;
  double t12481;
  double t12483;
  double t12484;
  double t12485;
  double t12487;
  double t12488;
  double t12492;
  double t12496;
  double t12497;
  double t12501;
  double t12503;
  double t12504;
  double t12505;
  double t12506;
  double t12507;
  double t12508;
  double t12509;
  double t12510;
  double t12511;
  double t12512;
  double t12513;
  double t12514;
  double t12516;
  double t12517;
  double t12518;
  double t12519;
  double t12520;
  double t12521;
  double t12522;
  double t12523;
  double t12524;
  double t12528;
  double t12530;
  double t12531;
  double t12684;
  double t12685;
  double t12687;
  double t12691;
  double t12695;
  double t12696;
  double t11156;
  double t11184;
  double t11196;
  double t11197;
  double t11225;
  double t11265;
  double t11313;
  double t11369;
  double t11371;
  double t12602;
  double t12607;
  double t12608;
  double t12610;
  double t12612;
  double t12613;
  double t12614;
  double t12615;
  double t12619;
  double t12819;
  double t12820;
  double t12821;
  double t12836;
  double t12837;
  double t12838;
  double t12121;
  double t12157;
  double t12269;
  double t12330;
  double t12382;
  double t12433;
  double t12458;
  double t12482;
  double t12515;
  double t12532;
  double t12534;
  double t12777;
  double t12778;
  double t12779;
  double t12780;
  double t12781;
  double t12782;
  double t12783;
  double t12784;
  double t12785;
  double t12786;
  double t12787;
  double t12651;
  double t12652;
  double t12654;
  double t12656;
  double t12658;
  double t12659;
  double t12660;
  double t12661;
  double t12662;
  double t12663;
  double t12664;
  double t12899;
  double t12900;
  double t12906;
  double t12829;
  double t12830;
  double t12831;
  double t12923;
  double t12927;
  double t12928;
  double t12842;
  double t12843;
  double t12844;
  double t12858;
  double t12859;
  double t12860;
  double t12868;
  double t12869;
  double t12874;
  double t11542;
  double t11583;
  double t11641;
  double t11671;
  double t11723;
  double t11786;
  double t11845;
  double t11876;
  double t11967;
  double t12022;
  double t12045;
  double t12757;
  double t12758;
  double t12759;
  double t12760;
  double t12761;
  double t12763;
  double t12767;
  double t12769;
  double t12773;
  double t12774;
  double t12775;
  double t12631;
  double t12632;
  double t12635;
  double t12637;
  double t12639;
  double t12640;
  double t12642;
  double t12643;
  double t12644;
  double t12645;
  double t12648;
  double t12887;
  double t12893;
  double t12895;
  double t12897;
  double t12898;
  double t12911;
  double t12913;
  double t12915;
  double t12916;
  double t12919;
  double t12932;
  double t12934;
  double t12935;
  double t13091;
  double t13092;
  double t13095;
  double t13096;
  double t13100;
  double t13102;
  double t10887;
  double t10894;
  double t10908;
  double t11019;
  double t11022;
  double t11025;
  double t11091;
  double t11105;
  double t12716;
  double t12719;
  double t12720;
  double t12721;
  double t12722;
  double t12723;
  double t12727;
  double t12728;
  double t12582;
  double t12584;
  double t12585;
  double t12586;
  double t12587;
  double t12588;
  double t12597;
  double t12598;
  double t13008;
  double t13009;
  double t13011;
  double t13013;
  double t13014;
  double t13019;
  double t13020;
  double t13028;
  double t13029;
  double t12851;
  double t12852;
  double t12853;
  double t12854;
  double t12856;
  double t12861;
  double t12862;
  double t12864;
  double t12865;
  double t13083;
  double t13084;
  double t13085;
  double t13087;
  double t13188;
  double t13191;
  double t13194;
  double t13197;
  double t13200;
  double t13201;
  double t10093;
  double t10196;
  double t10197;
  double t10604;
  double t10685;
  double t10723;
  double t12688;
  double t12689;
  double t12690;
  double t12697;
  double t12703;
  double t12704;
  double t12567;
  double t12568;
  double t12569;
  double t12574;
  double t12578;
  double t12579;
  double t12975;
  double t12976;
  double t12978;
  double t12983;
  double t12985;
  double t12988;
  double t12989;
  double t12996;
  double t12997;
  double t12814;
  double t12816;
  double t12822;
  double t12823;
  double t12825;
  double t12832;
  double t12834;
  double t12840;
  double t12841;
  double t13174;
  double t13177;
  double t13071;
  double t13072;
  double t13270;
  double t13272;
  double t13274;
  double t13278;
  double t3784;
  double t4153;
  double t12677;
  double t12679;
  double t12555;
  double t12556;
  double t12960;
  double t12964;
  double t12802;
  double t12803;
  double t13064;
  double t13066;
  double t13068;
  double t13170;
  double t2920;
  double t3506;
  double t3530;
  double t12672;
  double t12673;
  double t12674;
  double t12543;
  double t12548;
  double t12553;
  double t12954;
  double t12955;
  double t12957;
  double t12794;
  double t12797;
  double t12798;
  t392 = Cos(var1[14]);
  t901 = Sin(var1[13]);
  t80 = Cos(var1[13]);
  t1208 = Sin(var1[14]);
  t1805 = -1.*t392*t901;
  t1811 = -1.*t80*t1208;
  t2005 = t1805 + t1811;
  t1388 = Sin(var1[4]);
  t1747 = Cos(var1[4]);
  t1771 = Cos(var1[5]);
  t1772 = Sin(var1[12]);
  t2339 = Cos(var1[12]);
  t3072 = -1.*t80*t392;
  t3087 = t901*t1208;
  t3182 = t3072 + t3087;
  t2471 = Sin(var1[5]);
  t4175 = -1.*t392;
  t4193 = 1. + t4175;
  t887 = t80*t392;
  t1215 = -1.*t901*t1208;
  t1297 = t887 + t1215;
  t1746 = t1297*t1388;
  t2081 = t1771*t1772*t2005;
  t2582 = -1.*t2339*t2005*t2471;
  t2769 = t2081 + t2582;
  t2882 = t1747*t2769;
  t2909 = t1746 + t2882;
  t4565 = -0.20833*t4193;
  t4886 = -0.36833*t392;
  t4938 = 0.020000000000000018*t1208;
  t5028 = 0. + t4565 + t4886 + t4938;
  t4233 = -0.336601*t4193;
  t4289 = -0.356601*t392;
  t4306 = -0.16*t1208;
  t4496 = 0. + t4233 + t4289 + t4306;
  t3051 = t2005*t1388;
  t3200 = t1771*t1772*t3182;
  t3249 = -1.*t2339*t3182*t2471;
  t3351 = t3200 + t3249;
  t3444 = t1747*t3351;
  t3478 = t3051 + t3444;
  t7663 = 0.04*t901;
  t5759 = -1.*t80;
  t5980 = 1. + t5759;
  t5992 = -0.194401*t5980;
  t6112 = -0.234401*t80;
  t6241 = -0.04*t901;
  t6370 = t5992 + t6112 + t6241;
  t8102 = -0.04*t80;
  t8127 = t8102 + t7663;
  t8624 = -1.*t6370*t901;
  t7204 = 0.04*t80;
  t7670 = t7204 + t7663;
  t3565 = -1.*t901*t1388;
  t3594 = -1.*t80*t1771*t1772;
  t3634 = t2339*t80*t2471;
  t3635 = t3594 + t3634;
  t3695 = t1747*t3635;
  t3755 = t3565 + t3695;
  t10426 = 0. + t887 + t1215;
  t10407 = -0.194401*t901;
  t10412 = -1.*t901*t4496;
  t10413 = t80*t5028;
  t10424 = 0. + t10407 + t10412 + t10413;
  t10332 = t392*t901;
  t10341 = t80*t1208;
  t10353 = 0. + t10332 + t10341;
  t10277 = -0.194401*t5980;
  t10323 = t80*t4496;
  t10328 = t901*t5028;
  t10329 = 0. + t10277 + t10323 + t10328;
  t10460 = -0.194401*t80;
  t10461 = -1.*t80*t4496;
  t10477 = -1.*t901*t5028;
  t10482 = t10460 + t10461 + t10477;
  t10527 = 0. + t1805 + t1811;
  t10454 = t10407 + t10412 + t10413;
  t9444 = t80*t6370;
  t10727 = 0.053565*t1772;
  t10728 = t2339*t8127;
  t10732 = t10727 + t10728;
  t10734 = -1.*t2339;
  t10736 = 1. + t10734;
  t10748 = -0.081715*t10736;
  t10757 = -0.13528*t2339;
  t10761 = t1772*t8127;
  t10762 = t10748 + t10757 + t10761;
  t6609 = -1.*t80*t6370;
  t9553 = -1.*t8127*t901;
  t10793 = -1.*t2339*t80*t10732;
  t10794 = -1.*t80*t1772*t10762;
  t10820 = Power(t2339,2);
  t10828 = Power(t1772,2);
  t10007 = t2339*t1771;
  t10043 = t1772*t2471;
  t10056 = t10007 + t10043;
  t10096 = t901*t1388;
  t10097 = t80*t1771*t1772;
  t10141 = -1.*t2339*t80*t2471;
  t10178 = t10097 + t10141;
  t10193 = t1747*t10178;
  t10195 = t10096 + t10193;
  t10532 = t10329*t10426;
  t10654 = t2339*t10527;
  t10660 = 0. + t10654;
  t10647 = t1772*t10527;
  t10650 = 0. + t10647;
  t10543 = t10329*t2005;
  t10559 = t10454*t10426;
  t10910 = 0.032875*t1772;
  t10911 = t2339*t10424;
  t10914 = t10910 + t10911;
  t10926 = -0.081715*t10736;
  t10931 = -0.11459*t2339;
  t10936 = t1772*t10424;
  t10941 = t10926 + t10931 + t10936;
  t10404 = -1.*t10329*t10353;
  t10700 = t2339*t10426;
  t10705 = 0. + t10700;
  t10691 = t1772*t10426;
  t10693 = 0. + t10691;
  t10456 = -1.*t10454*t10353;
  t10457 = -1.*t10329*t1297;
  t10570 = 0. + t2339;
  t10572 = t10570*t1771;
  t10575 = -1.*t1772;
  t10580 = 0. + t10575;
  t10586 = -1.*t10580*t2471;
  t10587 = 0. + t10572 + t10586;
  t10591 = t1747*t10587;
  t10594 = 0. + t10591;
  t10895 = t1772*t10732;
  t10900 = -1.*t2339*t10762;
  t10907 = t10895 + t10900;
  t3810 = t80*t1388;
  t3896 = -1.*t1771*t1772*t901;
  t4108 = t2339*t901*t2471;
  t4133 = t3896 + t4108;
  t4141 = t1747*t4133;
  t4149 = t3810 + t4141;
  t10890 = -1.*t1772*t10732;
  t10891 = t2339*t10762;
  t10892 = t10890 + t10891;
  t11052 = -1.*t10580*t10914;
  t11053 = -1.*t10570*t10941;
  t11054 = 0. + t11052 + t11053;
  t10644 = t10426*t1388;
  t10652 = t1771*t10650;
  t10670 = -1.*t10660*t2471;
  t10677 = 0. + t10652 + t10670;
  t10679 = t1747*t10677;
  t10681 = 0. + t10644 + t10679;
  t11026 = t10580*t10914;
  t11030 = t10570*t10941;
  t11035 = 0. + t11026 + t11030;
  t10690 = t10353*t1388;
  t10699 = t1771*t10693;
  t10706 = -1.*t10705*t2471;
  t10711 = 0. + t10699 + t10706;
  t10717 = t1747*t10711;
  t10718 = 0. + t10690 + t10717;
  t11124 = Sin(var1[3]);
  t11140 = Cos(var1[3]);
  t11185 = -1.*t2339*t1771*t901;
  t11188 = -1.*t1772*t901*t2471;
  t11189 = t11185 + t11188;
  t11190 = t11124*t11189;
  t11191 = t80*t1747;
  t11192 = -1.*t1388*t4133;
  t11193 = t11191 + t11192;
  t11194 = t11140*t11193;
  t11195 = t11190 + t11194;
  t11131 = t2339*t80*t1771;
  t11133 = t80*t1772*t2471;
  t11136 = t11131 + t11133;
  t11141 = t1747*t901;
  t11146 = -1.*t1388*t10178;
  t11150 = t11141 + t11146;
  t11159 = -1.*t2339*t80*t1771;
  t11160 = -1.*t80*t1772*t2471;
  t11161 = t11159 + t11160;
  t11165 = -1.*t1747*t901;
  t11168 = -1.*t1388*t3635;
  t11170 = t11165 + t11168;
  t11414 = t11140*t11189;
  t11416 = -1.*t11124*t11193;
  t11417 = t11414 + t11416;
  t11198 = t2339*t1771*t2005;
  t11199 = t1772*t2005*t2471;
  t11201 = t11198 + t11199;
  t11210 = t1747*t1297;
  t11215 = -1.*t1388*t2769;
  t11220 = t11210 + t11215;
  t11227 = t2339*t1771*t3182;
  t11236 = t1772*t3182*t2471;
  t11247 = t11227 + t11236;
  t11254 = t1747*t2005;
  t11257 = -1.*t1388*t3351;
  t11259 = t11254 + t11257;
  t11267 = t1771*t10660;
  t11268 = t10650*t2471;
  t11281 = 0. + t11267 + t11268;
  t11286 = t1747*t10426;
  t11288 = -1.*t1388*t10677;
  t11304 = 0. + t11286 + t11288;
  t11314 = t1771*t10705;
  t11315 = t10693*t2471;
  t11321 = 0. + t11314 + t11315;
  t11333 = t1747*t10353;
  t11337 = -1.*t1388*t10711;
  t11344 = 0. + t11333 + t11337;
  t11492 = -1.*t1771*t1772;
  t11497 = t2339*t2471;
  t11498 = t11492 + t11497;
  t11484 = t1771*t10762;
  t11485 = -1.*t10732*t2471;
  t11486 = t11484 + t11485;
  t11500 = t1771*t10732;
  t11501 = t10762*t2471;
  t11508 = t11500 + t11501;
  t11490 = -1.*t10056*t11486;
  t11509 = -1.*t11498*t11508;
  t11513 = t11490 + t11509;
  t11589 = t1771*t1772*t7670;
  t11594 = -1.*t2339*t7670*t2471;
  t11595 = t11589 + t11594;
  t11601 = t2339*t1771*t7670;
  t11602 = t1772*t7670*t2471;
  t11603 = t11601 + t11602;
  t11543 = t10056*t11486;
  t11544 = t11498*t11508;
  t11550 = t11543 + t11544;
  t8475 = -1.*t80*t8127;
  t11520 = t6370*t901;
  t11556 = -1.*t11486*t4133;
  t11557 = -1.*t11508*t11189;
  t11621 = t11486*t4133;
  t11627 = t11508*t11189;
  t10864 = t80*t8127;
  t11744 = t1771*t10580;
  t11745 = t10570*t2471;
  t11755 = 0. + t11744 + t11745;
  t11724 = t1771*t10941;
  t11737 = -1.*t10914*t2471;
  t11741 = 0. + t11724 + t11737;
  t11756 = t1771*t10914;
  t11757 = t10941*t2471;
  t11760 = 0. + t11756 + t11757;
  t11742 = t10587*t11741;
  t11761 = t11755*t11760;
  t11763 = 0. + t11742 + t11761;
  t11798 = t1771*t1772*t10482;
  t11802 = -1.*t2339*t10482*t2471;
  t11805 = t11798 + t11802;
  t11807 = t2339*t1771*t10482;
  t11808 = t1772*t10482*t2471;
  t11809 = t11807 + t11808;
  t11846 = -1.*t10587*t11741;
  t11851 = -1.*t11755*t11760;
  t11860 = 0. + t11846 + t11851;
  t11527 = t11136*t11508;
  t12074 = t6370*t1388;
  t12075 = t1747*t11486;
  t12076 = t12074 + t12075;
  t12078 = t1747*t6370;
  t12080 = -1.*t1388*t11486;
  t12085 = t12078 + t12080;
  t12077 = -1.*t1747*t10056*t12076;
  t12091 = t1388*t10056*t12085;
  t12093 = t11509 + t12077 + t12091;
  t11604 = -1.*t11498*t11603;
  t11620 = t11136*t11603;
  t12159 = t8127*t1388;
  t12160 = t1747*t11595;
  t12162 = t12159 + t12160;
  t12197 = t1747*t8127;
  t12202 = -1.*t1388*t11595;
  t12210 = t12197 + t12202;
  t12132 = t1747*t10056*t12076;
  t12133 = -1.*t1388*t10056*t12085;
  t12142 = t11544 + t12132 + t12133;
  t11646 = t11498*t11603;
  t11655 = -1.*t11161*t11508;
  t11659 = -1.*t11603*t11189;
  t11676 = -1.*t11136*t11508;
  t11689 = -1.*t11136*t11603;
  t12144 = -1.*t12076*t4149;
  t12146 = -1.*t12085*t11193;
  t12253 = t12076*t4149;
  t12258 = t12085*t11193;
  t11701 = t11161*t11508;
  t11704 = t11603*t11189;
  t11771 = -1.*t11760*t11281;
  t12383 = t10329*t1388;
  t12385 = t1747*t11741;
  t12388 = 0. + t12383 + t12385;
  t12401 = t1747*t10329;
  t12404 = -1.*t1388*t11741;
  t12405 = 0. + t12401 + t12404;
  t12389 = t10594*t12388;
  t12390 = -1.*t1388*t10587;
  t12392 = 0. + t12390;
  t12406 = t12392*t12405;
  t12408 = t11761 + t12389 + t12406;
  t11811 = t11755*t11809;
  t11825 = -1.*t11760*t11247;
  t11831 = -1.*t11809*t11281;
  t12435 = t10454*t1388;
  t12436 = t1747*t11805;
  t12437 = t12435 + t12436;
  t12440 = t1747*t10454;
  t12441 = -1.*t1388*t11805;
  t12443 = t12440 + t12441;
  t11867 = t11760*t11321;
  t11881 = t11760*t11281;
  t11896 = t11760*t11247;
  t11903 = t11809*t11281;
  t11916 = -1.*t11760*t11321;
  t11932 = -1.*t11760*t11201;
  t11941 = -1.*t11809*t11321;
  t12459 = -1.*t10594*t12388;
  t12461 = -1.*t12392*t12405;
  t12462 = t11851 + t12459 + t12461;
  t11980 = -1.*t11755*t11809;
  t12013 = t11760*t11201;
  t12016 = t11809*t11321;
  t11430 = t11140*t11201;
  t11431 = -1.*t11124*t11220;
  t11432 = t11430 + t11431;
  t11437 = t11140*t11247;
  t11438 = -1.*t11124*t11259;
  t11439 = t11437 + t11438;
  t11407 = t11140*t11161;
  t11408 = -1.*t11124*t11170;
  t11412 = t11407 + t11408;
  t4171 = -0.194401*t392;
  t4515 = -1.*t392*t4496;
  t5029 = t5028*t1208;
  t5030 = 0. + t4171 + t4515 + t5029;
  t5093 = t392*t5028;
  t5263 = 0.194401*t1208;
  t5291 = t4496*t1208;
  t5535 = 0. + t5093 + t5263 + t5291;
  t7742 = -1.*t80*t7670;
  t7794 = t6609 + t7742;
  t7968 = -1.*t80*t7794;
  t8830 = t8475 + t8624;
  t9226 = t901*t8830;
  t9555 = t9444 + t9553;
  t9556 = -1.*t80*t9555;
  t9642 = -1.*t7670*t901;
  t9668 = t8624 + t9642;
  t9739 = -1.*t901*t9668;
  t9900 = t7968 + t9226 + t9556 + t9739;
  t11380 = t11140*t11136;
  t11390 = -1.*t11124*t11150;
  t11392 = t11380 + t11390;
  t10427 = -1.*t10424*t10426;
  t10428 = 0. + t10404 + t10427;
  t10433 = -1.*t2005*t10428;
  t10453 = -1.*t10424*t2005;
  t10485 = -1.*t10482*t10426;
  t10487 = t10453 + t10456 + t10457 + t10485;
  t10509 = -1.*t10426*t10487;
  t10529 = t10424*t10527;
  t10533 = 0. + t10529 + t10532;
  t10539 = -1.*t1297*t10533;
  t10547 = t10482*t10527;
  t10560 = t10424*t3182;
  t10564 = t10543 + t10547 + t10559 + t10560;
  t10565 = -1.*t10353*t10564;
  t10568 = t10433 + t10509 + t10539 + t10565;
  t10607 = 0.032875*t10426;
  t10608 = 0. + t10607;
  t10614 = -0.081715*t10527;
  t10622 = -0.11459*t10353;
  t10624 = 0. + t10614 + t10622;
  t10635 = -0.11459*t1297;
  t10636 = -0.081715*t3182;
  t10639 = t10635 + t10636;
  t11444 = t11140*t11281;
  t11451 = -1.*t11124*t11304;
  t11453 = 0. + t11444 + t11451;
  t11467 = t11140*t11321;
  t11470 = -1.*t11124*t11344;
  t11471 = 0. + t11467 + t11470;
  t10733 = -1.*t2339*t10732*t901;
  t10771 = -1.*t1772*t10762*t901;
  t10782 = t9444 + t10733 + t10771;
  t10790 = t80*t10782;
  t10806 = t10793 + t10794 + t8624;
  t10814 = -1.*t901*t10806;
  t10823 = -1.*t10820*t80*t7670;
  t10833 = -1.*t80*t10828*t7670;
  t10843 = t2339*t10732*t901;
  t10845 = t1772*t10762*t901;
  t10856 = t6609 + t10823 + t10833 + t10843 + t10845 + t9553;
  t10863 = t80*t10856;
  t10870 = -1.*t10820*t7670*t901;
  t10876 = -1.*t10828*t7670*t901;
  t10879 = t10793 + t10794 + t10864 + t8624 + t10870 + t10876;
  t10880 = t901*t10879;
  t10881 = t10790 + t10814 + t10863 + t10880;
  t12562 = t11140*t11498;
  t12565 = t11124*t1388*t10056;
  t12566 = t12562 + t12565;
  t10925 = t10914*t10660;
  t10942 = t10941*t10650;
  t10947 = t10532 + t10925 + t10942;
  t10949 = t1297*t10947;
  t10957 = t2339*t10914*t3182;
  t10958 = t1772*t10941*t3182;
  t10963 = t2339*t10482*t10660;
  t10964 = t1772*t10482*t10650;
  t10967 = t10543 + t10559 + t10957 + t10958 + t10963 + t10964;
  t10968 = t10353*t10967;
  t10970 = -1.*t10914*t10705;
  t10973 = -1.*t10941*t10693;
  t10974 = t10404 + t10970 + t10973;
  t10975 = t2005*t10974;
  t10978 = -1.*t2339*t10914*t2005;
  t10983 = -1.*t1772*t10941*t2005;
  t10990 = -1.*t2339*t10482*t10705;
  t10995 = -1.*t1772*t10482*t10693;
  t11000 = t10978 + t10983 + t10456 + t10457 + t10990 + t10995;
  t11009 = t10426*t11000;
  t11012 = t10949 + t10968 + t10975 + t11009;
  t12571 = t11140*t11755;
  t12572 = -1.*t11124*t12392;
  t12573 = 0. + t12571 + t12572;
  t11036 = t11035*t10426;
  t11045 = 0. + t11036;
  t11055 = t11054*t10353;
  t11058 = 0. + t11055;
  t11062 = -1.*t2339*t10580*t10482;
  t11065 = -1.*t10570*t1772*t10482;
  t11073 = t11062 + t11065;
  t11079 = t11073*t10353;
  t11080 = t11054*t1297;
  t11090 = t11079 + t11080;
  t11096 = t11035*t2005;
  t11097 = t2339*t10580*t10482;
  t11098 = t10570*t1772*t10482;
  t11099 = t11097 + t11098;
  t11100 = t11099*t10426;
  t11104 = t11096 + t11100;
  t11396 = 1.527*t4149*t11392;
  t11413 = 1.527*t4149*t11412;
  t11422 = 1.527*t10195*t11417;
  t11423 = 1.527*t3755*t11417;
  t11434 = 0.241*t10718*t11432;
  t11442 = 0.241*t10681*t11439;
  t11456 = 0.241*t3478*t11453;
  t11475 = 0.241*t2909*t11471;
  t11476 = t11396 + t11413 + t11422 + t11423 + t11434 + t11442 + t11456 + t11475;
  t11139 = t11124*t11136;
  t11151 = t11140*t11150;
  t11155 = t11139 + t11151;
  t11164 = t11124*t11161;
  t11171 = t11140*t11170;
  t11173 = t11164 + t11171;
  t11283 = t11124*t11281;
  t11306 = t11140*t11304;
  t11309 = 0. + t11283 + t11306;
  t11251 = t11124*t11247;
  t11262 = t11140*t11259;
  t11264 = t11251 + t11262;
  t11330 = t11124*t11321;
  t11348 = t11140*t11344;
  t11355 = 0. + t11330 + t11348;
  t11206 = t11124*t11201;
  t11221 = t11140*t11220;
  t11222 = t11206 + t11221;
  t11514 = t11136*t11513;
  t11522 = t10178*t11486;
  t11535 = t11520 + t11522 + t11527;
  t11536 = t11498*t11535;
  t11538 = t11514 + t11536;
  t11553 = t11189*t11550;
  t11563 = t6609 + t11556 + t11557;
  t11572 = t11498*t11563;
  t11573 = t11553 + t11572;
  t11585 = t11189*t11513;
  t11597 = -1.*t10056*t11595;
  t11610 = t11597 + t11604;
  t11612 = t11136*t11610;
  t11613 = t8127*t901;
  t11619 = t10178*t11595;
  t11630 = t9444 + t11613 + t11619 + t11620 + t11621 + t11627;
  t11635 = t11498*t11630;
  t11640 = t11585 + t11612 + t11635;
  t11642 = t11161*t11550;
  t11644 = t10056*t11595;
  t11647 = t11644 + t11646;
  t11650 = t11189*t11647;
  t11651 = -1.*t3635*t11486;
  t11657 = -1.*t11595*t4133;
  t11663 = t8475 + t11520 + t11651 + t11655 + t11657 + t11659;
  t11664 = t11498*t11663;
  t11669 = t11642 + t11650 + t11664;
  t11675 = -1.*t10178*t11486;
  t11682 = t8624 + t11675 + t11676;
  t11687 = t11161*t11682;
  t11688 = -1.*t10178*t11595;
  t11692 = t6609 + t9553 + t11688 + t11689 + t11556 + t11557;
  t11693 = t11189*t11692;
  t11694 = t9444 + t11621 + t11627;
  t11696 = t11189*t11694;
  t11698 = t3635*t11486;
  t11702 = t11595*t4133;
  t11708 = t10864 + t8624 + t11698 + t11701 + t11702 + t11704;
  t11715 = t11136*t11708;
  t11722 = t11687 + t11693 + t11696 + t11715;
  t11768 = t11281*t11763;
  t11769 = -1.*t10329*t10426;
  t11770 = -1.*t11741*t10677;
  t11774 = t11769 + t11770 + t11771;
  t11775 = t11755*t11774;
  t11781 = t11768 + t11775;
  t11797 = t11247*t11763;
  t11806 = t10587*t11805;
  t11815 = t11806 + t11811;
  t11817 = t11281*t11815;
  t11819 = -1.*t10329*t2005;
  t11822 = -1.*t10454*t10426;
  t11824 = -1.*t11741*t3351;
  t11830 = -1.*t11805*t10677;
  t11834 = t11819 + t11822 + t11824 + t11825 + t11830 + t11831;
  t11835 = t11755*t11834;
  t11843 = t11797 + t11817 + t11835;
  t11862 = t11321*t11860;
  t11864 = t10329*t10353;
  t11866 = t11741*t10711;
  t11871 = t11864 + t11866 + t11867;
  t11874 = t11755*t11871;
  t11875 = t11862 + t11874;
  t11878 = t11741*t10677;
  t11886 = t10532 + t11878 + t11881;
  t11888 = t11201*t11886;
  t11895 = t11741*t3351;
  t11902 = t11805*t10677;
  t11904 = t10543 + t10559 + t11895 + t11896 + t11902 + t11903;
  t11906 = t11321*t11904;
  t11915 = -1.*t11741*t10711;
  t11917 = t10404 + t11915 + t11916;
  t11918 = t11247*t11917;
  t11923 = -1.*t11741*t2769;
  t11933 = -1.*t11805*t10711;
  t11944 = t10456 + t10457 + t11923 + t11932 + t11933 + t11941;
  t11949 = t11281*t11944;
  t11966 = t11888 + t11906 + t11918 + t11949;
  t11970 = t11201*t11860;
  t11979 = -1.*t10587*t11805;
  t11981 = t11979 + t11980;
  t12000 = t11321*t11981;
  t12007 = t10454*t10353;
  t12008 = t10329*t1297;
  t12011 = t11741*t2769;
  t12015 = t11805*t10711;
  t12017 = t12007 + t12008 + t12011 + t12013 + t12015 + t12016;
  t12018 = t11755*t12017;
  t12021 = t11970 + t12000 + t12018;
  t12094 = t10195*t12093;
  t12100 = t10195*t12076;
  t12108 = t11150*t12085;
  t12114 = t11527 + t12100 + t12108;
  t12116 = t1747*t10056*t12114;
  t12117 = t12094 + t12116;
  t12143 = t4149*t12142;
  t12149 = t11557 + t12144 + t12146;
  t12155 = t1747*t10056*t12149;
  t12156 = t12143 + t12155;
  t12158 = t4149*t12093;
  t12164 = -1.*t1747*t10056*t12162;
  t12244 = t1388*t10056*t12210;
  t12247 = t11604 + t12164 + t12244;
  t12249 = t10195*t12247;
  t12250 = t10195*t12162;
  t12251 = t11150*t12210;
  t12259 = t11620 + t11627 + t12250 + t12251 + t12253 + t12258;
  t12261 = t1747*t10056*t12259;
  t12262 = t12158 + t12249 + t12261;
  t12270 = t3755*t12142;
  t12272 = t1747*t10056*t12162;
  t12276 = -1.*t1388*t10056*t12210;
  t12277 = t11646 + t12272 + t12276;
  t12306 = t4149*t12277;
  t12310 = -1.*t3755*t12076;
  t12312 = -1.*t11170*t12085;
  t12314 = -1.*t12162*t4149;
  t12319 = -1.*t12210*t11193;
  t12320 = t11655 + t11659 + t12310 + t12312 + t12314 + t12319;
  t12321 = t1747*t10056*t12320;
  t12323 = t12270 + t12306 + t12321;
  t12334 = -1.*t10195*t12076;
  t12337 = -1.*t11150*t12085;
  t12341 = t11676 + t12334 + t12337;
  t12363 = t3755*t12341;
  t12364 = -1.*t10195*t12162;
  t12365 = -1.*t11150*t12210;
  t12367 = t11689 + t11557 + t12364 + t12365 + t12144 + t12146;
  t12368 = t4149*t12367;
  t12369 = t11627 + t12253 + t12258;
  t12371 = t4149*t12369;
  t12372 = t3755*t12076;
  t12373 = t11170*t12085;
  t12375 = t12162*t4149;
  t12376 = t12210*t11193;
  t12377 = t11701 + t11704 + t12372 + t12373 + t12375 + t12376;
  t12378 = t10195*t12377;
  t12379 = t12363 + t12368 + t12371 + t12378;
  t12421 = t10681*t12408;
  t12422 = -1.*t12388*t10681;
  t12426 = -1.*t12405*t11304;
  t12429 = t11771 + t12422 + t12426;
  t12430 = t10594*t12429;
  t12432 = t12421 + t12430;
  t12434 = t3478*t12408;
  t12439 = t10594*t12437;
  t12444 = t12392*t12443;
  t12445 = t11811 + t12439 + t12444;
  t12446 = t10681*t12445;
  t12447 = -1.*t12388*t3478;
  t12448 = -1.*t12405*t11259;
  t12449 = -1.*t12437*t10681;
  t12450 = -1.*t12443*t11304;
  t12451 = t11825 + t11831 + t12447 + t12448 + t12449 + t12450;
  t12452 = t10594*t12451;
  t12455 = t12434 + t12446 + t12452;
  t12475 = t10718*t12462;
  t12476 = t12388*t10718;
  t12477 = t12405*t11344;
  t12478 = t11867 + t12476 + t12477;
  t12480 = t10594*t12478;
  t12481 = t12475 + t12480;
  t12483 = t12388*t10681;
  t12484 = t12405*t11304;
  t12485 = t11881 + t12483 + t12484;
  t12487 = t2909*t12485;
  t12488 = t12388*t3478;
  t12492 = t12405*t11259;
  t12496 = t12437*t10681;
  t12497 = t12443*t11304;
  t12501 = t11896 + t11903 + t12488 + t12492 + t12496 + t12497;
  t12503 = t10718*t12501;
  t12504 = -1.*t12388*t10718;
  t12505 = -1.*t12405*t11344;
  t12506 = t11916 + t12504 + t12505;
  t12507 = t3478*t12506;
  t12508 = -1.*t12388*t2909;
  t12509 = -1.*t12405*t11220;
  t12510 = -1.*t12437*t10718;
  t12511 = -1.*t12443*t11344;
  t12512 = t11932 + t11941 + t12508 + t12509 + t12510 + t12511;
  t12513 = t10681*t12512;
  t12514 = t12487 + t12503 + t12507 + t12513;
  t12516 = t2909*t12462;
  t12517 = -1.*t10594*t12437;
  t12518 = -1.*t12392*t12443;
  t12519 = t11980 + t12517 + t12518;
  t12520 = t10718*t12519;
  t12521 = t12388*t2909;
  t12522 = t12405*t11220;
  t12523 = t12437*t10718;
  t12524 = t12443*t11344;
  t12528 = t12013 + t12016 + t12521 + t12522 + t12523 + t12524;
  t12530 = t10594*t12528;
  t12531 = t12516 + t12520 + t12530;
  t12684 = t11124*t11498;
  t12685 = -1.*t11140*t1388*t10056;
  t12687 = t12684 + t12685;
  t12691 = t11124*t11755;
  t12695 = t11140*t12392;
  t12696 = 0. + t12691 + t12695;
  t11156 = 1.527*t4149*t11155;
  t11184 = 1.527*t4149*t11173;
  t11196 = 1.527*t10195*t11195;
  t11197 = 1.527*t3755*t11195;
  t11225 = 0.241*t10718*t11222;
  t11265 = 0.241*t10681*t11264;
  t11313 = 0.241*t3478*t11309;
  t11369 = 0.241*t2909*t11355;
  t11371 = t11156 + t11184 + t11196 + t11197 + t11225 + t11265 + t11313 + t11369;
  t12602 = 1.527*t11392*t11195;
  t12607 = 1.527*t11412*t11195;
  t12608 = 1.527*t11155*t11417;
  t12610 = 1.527*t11173*t11417;
  t12612 = 0.241*t11439*t11309;
  t12613 = 0.241*t11264*t11453;
  t12614 = 0.241*t11432*t11355;
  t12615 = 0.241*t11222*t11471;
  t12619 = t12602 + t12607 + t12608 + t12610 + t12612 + t12613 + t12614 + t12615;
  t12819 = t4149*t12341;
  t12820 = t10195*t12369;
  t12821 = t12819 + t12820;
  t12836 = t10718*t12485;
  t12837 = t10681*t12506;
  t12838 = t12836 + t12837;
  t12121 = 1.527*t3755*t12117;
  t12157 = 1.527*t4149*t12156;
  t12269 = 1.527*t4149*t12262;
  t12330 = 1.527*t10195*t12323;
  t12382 = 1.527*t1747*t10056*t12379;
  t12433 = 0.241*t2909*t12432;
  t12458 = 0.241*t10718*t12455;
  t12482 = 0.241*t3478*t12481;
  t12515 = 0.241*t10594*t12514;
  t12532 = 0.241*t10681*t12531;
  t12534 = t12121 + t12157 + t12269 + t12330 + t12382 + t12433 + t12458 + t12482 + t12515 + t12532;
  t12777 = 1.527*t11173*t12117;
  t12778 = 1.527*t11195*t12156;
  t12779 = 1.527*t11195*t12262;
  t12780 = 1.527*t11155*t12323;
  t12781 = 1.527*t12687*t12379;
  t12782 = 0.241*t11222*t12432;
  t12783 = 0.241*t11355*t12455;
  t12784 = 0.241*t11264*t12481;
  t12785 = 0.241*t12696*t12514;
  t12786 = 0.241*t11309*t12531;
  t12787 = t12777 + t12778 + t12779 + t12780 + t12781 + t12782 + t12783 + t12784 + t12785 + t12786;
  t12651 = 1.527*t11412*t12117;
  t12652 = 1.527*t11417*t12156;
  t12654 = 1.527*t11417*t12262;
  t12656 = 1.527*t11392*t12323;
  t12658 = 1.527*t12566*t12379;
  t12659 = 0.241*t11432*t12432;
  t12660 = 0.241*t11471*t12455;
  t12661 = 0.241*t11439*t12481;
  t12662 = 0.241*t12573*t12514;
  t12663 = 0.241*t11453*t12531;
  t12664 = t12651 + t12652 + t12654 + t12656 + t12658 + t12659 + t12660 + t12661 + t12662 + t12663;
  t12899 = t11189*t11682;
  t12900 = t11136*t11694;
  t12906 = t12899 + t12900;
  t12829 = -1.*t80*t8830;
  t12830 = -1.*t901*t9555;
  t12831 = t12829 + t12830;
  t12923 = t11321*t11886;
  t12927 = t11281*t11917;
  t12928 = 0. + t12923 + t12927;
  t12842 = -1.*t10426*t10428;
  t12843 = -1.*t10353*t10533;
  t12844 = 0. + t12842 + t12843;
  t12858 = t901*t10782;
  t12859 = t80*t10806;
  t12860 = t12858 + t12859;
  t12868 = t10353*t10947;
  t12869 = t10426*t10974;
  t12874 = 0. + t12868 + t12869;
  t11542 = 1.527*t3755*t11538;
  t11583 = 1.527*t4149*t11573;
  t11641 = 1.527*t4149*t11640;
  t11671 = 1.527*t10195*t11669;
  t11723 = 1.527*t1747*t10056*t11722;
  t11786 = 0.241*t2909*t11781;
  t11845 = 0.241*t10718*t11843;
  t11876 = 0.241*t3478*t11875;
  t11967 = 0.241*t10594*t11966;
  t12022 = 0.241*t10681*t12021;
  t12045 = t11542 + t11583 + t11641 + t11671 + t11723 + t11786 + t11845 + t11876 + t11967 + t12022;
  t12757 = 1.527*t11173*t11538;
  t12758 = 1.527*t11195*t11573;
  t12759 = 1.527*t11195*t11640;
  t12760 = 1.527*t11155*t11669;
  t12761 = 1.527*t12687*t11722;
  t12763 = 0.241*t11222*t11781;
  t12767 = 0.241*t11843*t11355;
  t12769 = 0.241*t11264*t11875;
  t12773 = 0.241*t12696*t11966;
  t12774 = 0.241*t11309*t12021;
  t12775 = t12757 + t12758 + t12759 + t12760 + t12761 + t12763 + t12767 + t12769 + t12773 + t12774;
  t12631 = 1.527*t11412*t11538;
  t12632 = 1.527*t11417*t11573;
  t12635 = 1.527*t11417*t11640;
  t12637 = 1.527*t11392*t11669;
  t12639 = 1.527*t12566*t11722;
  t12640 = 0.241*t11432*t11781;
  t12642 = 0.241*t11843*t11471;
  t12643 = 0.241*t11439*t11875;
  t12644 = 0.241*t12573*t11966;
  t12645 = 0.241*t11453*t12021;
  t12648 = t12631 + t12632 + t12635 + t12637 + t12639 + t12640 + t12642 + t12643 + t12644 + t12645;
  t12887 = 1.527*t11640*t12117;
  t12893 = 1.527*t11669*t12156;
  t12895 = 1.527*t11722*t12821;
  t12897 = 1.527*t11538*t12262;
  t12898 = 1.527*t11573*t12323;
  t12911 = 1.527*t12906*t12379;
  t12913 = 0.241*t11843*t12432;
  t12915 = 0.241*t11781*t12455;
  t12916 = 0.241*t11966*t12838;
  t12919 = 0.241*t12021*t12481;
  t12932 = 0.241*t12928*t12514;
  t12934 = 0.241*t11875*t12531;
  t12935 = t12887 + t12893 + t12895 + t12897 + t12898 + t12911 + t12913 + t12915 + t12916 + t12919 + t12932 + t12934;
  t13091 = 0.241*t11058;
  t13092 = 0. + t13091;
  t13095 = 0.241*t11045;
  t13096 = 0. + t13095;
  t13100 = 0.241*t12874;
  t13102 = 0. + t13100;
  t10887 = 1.527*t1747*t10881*t10056;
  t10894 = -1.527*t10892*t901*t10195;
  t10908 = 1.527*t10907*t901*t3755;
  t11019 = 0.241*t11012*t10594;
  t11022 = 1.527*t80*t10907*t4149;
  t11025 = 1.527*t80*t10892*t4149;
  t11091 = 0.241*t11090*t10681;
  t11105 = 0.241*t11104*t10718;
  t12716 = 1.527*t10881*t12687;
  t12719 = -1.527*t10892*t901*t11155;
  t12720 = 1.527*t10907*t901*t11173;
  t12721 = 0.241*t11012*t12696;
  t12722 = 1.527*t80*t10907*t11195;
  t12723 = 1.527*t80*t10892*t11195;
  t12727 = 0.241*t11090*t11309;
  t12728 = 0.241*t11104*t11355;
  t12582 = 1.527*t10881*t12566;
  t12584 = -1.527*t10892*t901*t11392;
  t12585 = 1.527*t10907*t901*t11412;
  t12586 = 0.241*t11012*t12573;
  t12587 = 1.527*t80*t10907*t11417;
  t12588 = 1.527*t80*t10892*t11417;
  t12597 = 0.241*t11090*t11453;
  t12598 = 0.241*t11104*t11471;
  t13008 = 1.527*t80*t10907*t11538;
  t13009 = -1.527*t10892*t901*t11573;
  t13011 = 1.527*t10881*t12906;
  t13013 = 1.527*t10907*t901*t11640;
  t13014 = 1.527*t80*t10892*t11669;
  t13019 = 1.527*t12860*t11722;
  t13020 = 0.241*t11104*t11781;
  t13028 = 0.241*t11012*t12928;
  t13029 = 0.241*t11090*t11875;
  t12851 = 1.527*t80*t10907*t12117;
  t12852 = -1.527*t10892*t901*t12156;
  t12853 = 1.527*t10881*t12821;
  t12854 = 1.527*t10907*t901*t12262;
  t12856 = 1.527*t80*t10892*t12323;
  t12861 = 1.527*t12860*t12379;
  t12862 = 0.241*t11104*t12432;
  t12864 = 0.241*t11012*t12838;
  t12865 = 0.241*t11090*t12481;
  t13083 = -0.16358751*t80*t10907*t901;
  t13084 = -0.16358751*t80*t10892*t901;
  t13085 = 1.527*t12860*t9900;
  t13087 = 1.527*t12831*t10881;
  t13188 = 0.241*t10624;
  t13191 = 0. + t13188;
  t13194 = 0.241*t10608;
  t13197 = 0. + t13194;
  t13200 = 0.241*t12844;
  t13201 = 0. + t13200;
  t10093 = 1.527*t1747*t9900*t10056;
  t10196 = -0.081793755*t901*t10195;
  t10197 = -0.081793755*t901*t3755;
  t10604 = 0.241*t10568*t10594;
  t10685 = 0.241*t10639*t10681;
  t10723 = 0.007922875*t2005*t10718;
  t12688 = 1.527*t9900*t12687;
  t12689 = -0.081793755*t901*t11155;
  t12690 = -0.081793755*t901*t11173;
  t12697 = 0.241*t10568*t12696;
  t12703 = 0.241*t10639*t11309;
  t12704 = 0.007922875*t2005*t11355;
  t12567 = 1.527*t9900*t12566;
  t12568 = -0.081793755*t901*t11392;
  t12569 = -0.081793755*t901*t11412;
  t12574 = 0.241*t10568*t12573;
  t12578 = 0.241*t10639*t11453;
  t12579 = 0.007922875*t2005*t11471;
  t12975 = -0.081793755*t80*t11538;
  t12976 = -0.081793755*t901*t11573;
  t12978 = 1.527*t9900*t12906;
  t12983 = -0.081793755*t901*t11640;
  t12985 = 0.081793755*t80*t11669;
  t12988 = 1.527*t12831*t11722;
  t12989 = 0.007922875*t2005*t11781;
  t12996 = 0.241*t10568*t12928;
  t12997 = 0.241*t10639*t11875;
  t12814 = -0.081793755*t80*t12117;
  t12816 = -0.081793755*t901*t12156;
  t12822 = 1.527*t9900*t12821;
  t12823 = -0.081793755*t901*t12262;
  t12825 = 0.081793755*t80*t12323;
  t12832 = 1.527*t12831*t12379;
  t12834 = 0.007922875*t2005*t12432;
  t12840 = 0.241*t10568*t12838;
  t12841 = 0.241*t10639*t12481;
  t13174 = 0.0032717502*t80;
  t13177 = -0.0032717502*t901;
  t13071 = -0.06108*t80*t10907;
  t13072 = -0.06108*t10892*t901;
  t13270 = 0.241*t5535;
  t13272 = 0. + t13270;
  t13274 = 0.241*t5030;
  t13278 = 0. + t13274;
  t3784 = -0.06108*t3755;
  t4153 = 0.06108*t4149;
  t12677 = -0.06108*t11173;
  t12679 = 0.06108*t11195;
  t12555 = -0.06108*t11412;
  t12556 = 0.06108*t11417;
  t12960 = -0.06108*t11640;
  t12964 = 0.06108*t11669;
  t12802 = -0.06108*t12262;
  t12803 = 0.06108*t12323;
  t13064 = -0.03856*t11090;
  t13066 = 0.004820000000000004*t11104;
  t13068 = t13064 + t13066;
  t13170 = -0.03856*t10639;
  t2920 = 0.004820000000000004*t2909;
  t3506 = -0.03856*t3478;
  t3530 = t2920 + t3506;
  t12672 = 0.004820000000000004*t11222;
  t12673 = -0.03856*t11264;
  t12674 = t12672 + t12673;
  t12543 = 0.004820000000000004*t11432;
  t12548 = -0.03856*t11439;
  t12553 = t12543 + t12548;
  t12954 = 0.004820000000000004*t11843;
  t12955 = -0.03856*t12021;
  t12957 = t12954 + t12955;
  t12794 = 0.004820000000000004*t12455;
  t12797 = -0.03856*t12531;
  t12798 = t12794 + t12797;
  p_output1[0]=var2[13]*(-0.5*(0.482*t10718*t2909 + 0.482*t10681*t3478 + 3.054*t10195*t4149 + 3.054*t3755*t4149)*var2[0] - 0.5*t11476*var2[1] - 0.5*t11371*var2[2] - 0.5*t12534*var2[3] - 0.5*t12045*var2[4] - 0.5*(t10887 + t10894 + t10908 + t11019 + t11022 + t11025 + t11091 + t11105 + 0.241*t11045*t2909 + 0.241*t11058*t3478)*var2[5] - 0.5*(t10093 + t10196 + t10197 + t10604 + t10685 + t10723 + 0.241*t10608*t2909 + 0.241*t10624*t3478)*var2[12] - 0.5*(t3784 + t4153 + 0.241*t2909*t5030 + 0.241*t3478*t5535)*var2[13] - 0.5*t3530*var2[14]);
  p_output1[1]=var2[13]*(-0.5*t11476*var2[0] - 0.5*(3.054*t11392*t11417 + 3.054*t11412*t11417 + 0.482*t11439*t11453 + 0.482*t11432*t11471)*var2[1] - 0.5*t12619*var2[2] - 0.5*t12664*var2[3] - 0.5*t12648*var2[4] - 0.5*(0.241*t11045*t11432 + 0.241*t11058*t11439 + t12582 + t12584 + t12585 + t12586 + t12587 + t12588 + t12597 + t12598)*var2[5] - 0.5*(0.241*t10608*t11432 + 0.241*t10624*t11439 + t12567 + t12568 + t12569 + t12574 + t12578 + t12579)*var2[12] - 0.5*(t12555 + t12556 + 0.241*t11432*t5030 + 0.241*t11439*t5535)*var2[13] - 0.5*t12553*var2[14]);
  p_output1[2]=var2[13]*(-0.5*t11371*var2[0] - 0.5*t12619*var2[1] - 0.5*(3.054*t11155*t11195 + 3.054*t11173*t11195 + 0.482*t11264*t11309 + 0.482*t11222*t11355)*var2[2] - 0.5*t12787*var2[3] - 0.5*t12775*var2[4] - 0.5*(0.241*t11045*t11222 + 0.241*t11058*t11264 + t12716 + t12719 + t12720 + t12721 + t12722 + t12723 + t12727 + t12728)*var2[5] - 0.5*(0.241*t10608*t11222 + 0.241*t10624*t11264 + t12688 + t12689 + t12690 + t12697 + t12703 + t12704)*var2[12] - 0.5*(t12677 + t12679 + 0.241*t11222*t5030 + 0.241*t11264*t5535)*var2[13] - 0.5*t12674*var2[14]);
  p_output1[3]=var2[13]*(-0.5*t12534*var2[0] - 0.5*t12664*var2[1] - 0.5*t12787*var2[2] - 0.5*(3.054*t12117*t12262 + 3.054*t12156*t12323 + 0.482*t12432*t12455 + 0.482*t12481*t12531 + 3.054*t12379*t12821 + 0.482*t12514*t12838)*var2[3] - 0.5*t12935*var2[4] - 0.5*(0.241*t11045*t12455 + 0.241*t11058*t12531 + t12851 + t12852 + t12853 + t12854 + t12856 + t12861 + t12862 + t12864 + t12865 + 0.241*t12514*t12874)*var2[5] - 0.5*(0.241*t10608*t12455 + 0.241*t10624*t12531 + t12814 + t12816 + t12822 + t12823 + t12825 + t12832 + t12834 + t12840 + t12841 + 0.241*t12514*t12844)*var2[12] - 0.5*(t12802 + t12803 + 0.241*t12455*t5030 + 0.241*t12531*t5535)*var2[13] - 0.5*t12798*var2[14]);
  p_output1[4]=var2[13]*(-0.5*t12045*var2[0] - 0.5*t12648*var2[1] - 0.5*t12775*var2[2] - 0.5*t12935*var2[3] - 0.5*(3.054*t11538*t11640 + 3.054*t11573*t11669 + 0.482*t11781*t11843 + 0.482*t11875*t12021 + 3.054*t11722*t12906 + 0.482*t11966*t12928)*var2[4] - 0.5*(0.241*t11045*t11843 + 0.241*t11058*t12021 + 0.241*t11966*t12874 + t13008 + t13009 + t13011 + t13013 + t13014 + t13019 + t13020 + t13028 + t13029)*var2[5] - 0.5*(0.241*t10608*t11843 + 0.241*t10624*t12021 + 0.241*t11966*t12844 + t12975 + t12976 + t12978 + t12983 + t12985 + t12988 + t12989 + t12996 + t12997)*var2[12] - 0.5*(t12960 + t12964 + 0.241*t11843*t5030 + 0.241*t12021*t5535)*var2[13] - 0.5*t12957*var2[14]);
  p_output1[5]=var2[13]*(-0.5*(t10887 + t10894 + t10908 + t11019 + t11022 + t11025 + t11091 + t11105 + t13096*t2909 + t13092*t3478)*var2[0] - 0.5*(t12582 + t12584 + t12585 + t12586 + t12587 + t12588 + t12597 + t12598 + t11439*t13092 + t11432*t13096)*var2[1] - 0.5*(t12716 + t12719 + t12720 + t12721 + t12722 + t12723 + t12727 + t12728 + t11264*t13092 + t11222*t13096)*var2[2] - 0.5*(t12851 + t12852 + t12853 + t12854 + t12856 + t12861 + t12862 + t12864 + t12865 + t12531*t13092 + t12455*t13096 + t12514*t13102)*var2[3] - 0.5*(t13008 + t13009 + t13011 + t13013 + t13014 + t13019 + t13020 + t13028 + t13029 + t12021*t13092 + t11843*t13096 + t11966*t13102)*var2[4] - 0.5*(0.241*t11058*t11090 + 0.241*t11045*t11104 + 3.054*t10881*t12860 + 0.241*t11012*t12874 + t11090*t13092 + t11104*t13096 + t11012*t13102 - 3.054*Power(t10892,2)*t80*t901 + 3.054*Power(t10907,2)*t80*t901)*var2[5] - 0.5*(0.241*t10624*t11090 + 0.241*t10608*t11104 + 0.241*t11012*t12844 + t13083 + t13084 + t13085 + t13087 + t10639*t13092 + t10568*t13102 + 0.032875*t13096*t2005)*var2[12] - 0.5*(t13071 + t13072 + 0.241*t11104*t5030 + 0.241*t11090*t5535)*var2[13] - 0.5*t13068*var2[14]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=var2[13]*(-0.5*(t10093 + t10196 + t10197 + t10604 + t10685 + t10723 + t13197*t2909 + t13191*t3478)*var2[0] - 0.5*(t12567 + t12568 + t12569 + t12574 + t12578 + t12579 + t11439*t13191 + t11432*t13197)*var2[1] - 0.5*(t12688 + t12689 + t12690 + t12697 + t12703 + t12704 + t11264*t13191 + t11222*t13197)*var2[2] - 0.5*(t12814 + t12816 + t12822 + t12823 + t12825 + t12832 + t12834 + t12840 + t12841 + t12531*t13191 + t12455*t13197 + t12514*t13201)*var2[3] - 0.5*(t12975 + t12976 + t12978 + t12983 + t12985 + t12988 + t12989 + t12996 + t12997 + t12021*t13191 + t11843*t13197 + t11966*t13201)*var2[4] - 0.5*(0.241*t10639*t11058 + 0.241*t10568*t12874 + t13083 + t13084 + t13085 + t13087 + t11090*t13191 + t11104*t13197 + t11012*t13201 + 0.007922875*t11045*t2005)*var2[5] - 0.5*(0.241*t10624*t10639 + 0.241*t10568*t12844 + t10639*t13191 + t10568*t13201 + 0.007922875*t10608*t2005 + 0.032875*t13197*t2005 + 3.054*t12831*t9900)*var2[12] - 0.5*(t13174 + t13177 + 0.007922875*t2005*t5030 + 0.241*t10639*t5535)*var2[13] - 0.5*(t13170 + 0.00015845750000000012*t2005)*var2[14]);
  p_output1[13]=(-0.5*(t13278*t2909 + t13272*t3478 + t3784 + t4153)*var2[0] - 0.5*(t12555 + t12556 + t11439*t13272 + t11432*t13278)*var2[1] - 0.5*(t12677 + t12679 + t11264*t13272 + t11222*t13278)*var2[2] - 0.5*(t12802 + t12803 + t12531*t13272 + t12455*t13278)*var2[3] - 0.5*(t12960 + t12964 + t12021*t13272 + t11843*t13278)*var2[4] - 0.5*(t13071 + t13072 + t11090*t13272 + t11104*t13278)*var2[5] - 0.5*(t13174 + t13177 + t10639*t13272 + 0.032875*t13278*t2005)*var2[12])*var2[13];
  p_output1[14]=(-0.5*t3530*var2[0] - 0.5*t12553*var2[1] - 0.5*t12674*var2[2] - 0.5*t12798*var2[3] - 0.5*t12957*var2[4] - 0.5*t13068*var2[5] - 0.5*(t13170 + 0.00015845750000000015*t2005)*var2[12])*var2[13];
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec14_plane.hh"

namespace SymFunction
{

void Ce2_vec14_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
