/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:11:45 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t491;
  double t240;
  double t311;
  double t528;
  double t855;
  double t1103;
  double t868;
  double t1341;
  double t1793;
  double t1457;
  double t1762;
  double t2759;
  double t2900;
  double t3034;
  double t2275;
  double t2289;
  double t2421;
  double t2439;
  double t1780;
  double t1784;
  double t1847;
  double t1940;
  double t3517;
  double t3537;
  double t3557;
  double t832;
  double t1013;
  double t1061;
  double t1089;
  double t1118;
  double t1154;
  double t1302;
  double t1312;
  double t1961;
  double t2109;
  double t2619;
  double t2668;
  double t3113;
  double t3115;
  double t3439;
  double t3440;
  double t3445;
  double t3493;
  double t3509;
  double t3515;
  double t3658;
  double t3693;
  double t3713;
  double t3794;
  double t3831;
  double t4038;
  double t4620;
  double t4665;
  double t4667;
  double t5008;
  double t5011;
  double t5066;
  double t5910;
  double t5913;
  double t5937;
  double t5708;
  double t5891;
  double t5894;
  double t5900;
  double t6042;
  double t6043;
  double t6009;
  double t6011;
  double t6012;
  double t5156;
  double t5171;
  double t5207;
  double t5225;
  double t5229;
  double t5249;
  double t5905;
  double t5946;
  double t5958;
  double t5966;
  double t5967;
  double t5974;
  double t5975;
  double t5353;
  double t4136;
  double t4224;
  double t4352;
  double t6258;
  double t6556;
  double t6573;
  double t6577;
  double t6578;
  double t6594;
  double t6597;
  double t6598;
  double t6611;
  double t6614;
  double t6626;
  double t6637;
  double t6643;
  double t6645;
  double t6665;
  double t6723;
  double t6724;
  double t6727;
  double t6732;
  double t4014;
  double t4379;
  double t4444;
  double t4548;
  double t4670;
  double t4821;
  double t4919;
  double t5067;
  double t5106;
  double t5220;
  double t5251;
  double t5264;
  double t5354;
  double t5402;
  double t5464;
  double t6753;
  double t6755;
  double t6759;
  double t6876;
  double t6879;
  double t6880;
  double t7128;
  double t7184;
  double t7189;
  double t7191;
  double t5998;
  double t6003;
  double t6015;
  double t6017;
  double t6047;
  double t6048;
  double t6052;
  double t6069;
  double t6084;
  double t6901;
  double t6908;
  double t6926;
  double t7197;
  double t7213;
  double t7214;
  double t7239;
  double t7240;
  double t7245;
  double t7246;
  double t7278;
  double t7280;
  double t7281;
  double t6261;
  double t6263;
  double t6267;
  double t6272;
  double t6279;
  double t6284;
  double t6294;
  double t6306;
  double t6308;
  double t6315;
  double t6321;
  double t7478;
  double t7481;
  double t7483;
  double t7503;
  double t7504;
  double t7506;
  double t7512;
  double t7513;
  double t7523;
  double t7524;
  double t7534;
  double t7538;
  double t7546;
  double t7547;
  double t7548;
  double t7565;
  double t7566;
  double t6738;
  double t6739;
  double t6743;
  double t7099;
  double t7113;
  double t7118;
  double t7324;
  double t7349;
  double t7356;
  double t7051;
  double t7073;
  double t7076;
  double t7680;
  double t7682;
  double t7683;
  double t7685;
  double t7695;
  double t7696;
  double t7705;
  double t7706;
  double t7762;
  double t7764;
  double t7765;
  double t7773;
  double t7774;
  double t7775;
  double t7755;
  double t7768;
  double t7770;
  double t7790;
  double t7792;
  double t7800;
  double t7802;
  double t7803;
  double t7804;
  double t7844;
  double t7852;
  double t7853;
  double t7860;
  double t7863;
  double t7826;
  double t7832;
  double t7833;
  double t7892;
  double t7899;
  double t7905;
  double t7908;
  double t7909;
  double t7917;
  double t7921;
  double t7924;
  double t7927;
  double t7932;
  double t7935;
  double t7937;
  double t7752;
  double t7753;
  double t7754;
  double t7835;
  double t7864;
  double t7868;
  double t7931;
  double t7938;
  double t7940;
  double t7961;
  double t7962;
  double t7964;
  double t7771;
  double t7776;
  double t7779;
  double t7745;
  double t7749;
  double t7750;
  double t5564;
  double t5597;
  double t5617;
  double t7788;
  double t7811;
  double t8175;
  double t8180;
  double t8183;
  double t8185;
  double t8213;
  double t8217;
  double t8218;
  double t8169;
  double t8193;
  double t8204;
  double t8226;
  double t8227;
  double t8235;
  double t8249;
  double t8250;
  double t8241;
  double t8243;
  double t8247;
  double t8261;
  double t8267;
  double t8271;
  double t8280;
  double t8281;
  double t8286;
  double t8248;
  double t8254;
  double t8255;
  double t8276;
  double t8290;
  double t8291;
  double t8307;
  double t8310;
  double t8314;
  double t8205;
  double t8223;
  double t8224;
  double t6163;
  double t6188;
  double t6200;
  double t8633;
  double t8636;
  double t8640;
  double t7872;
  double t7954;
  double t7989;
  double t7997;
  double t8000;
  double t8009;
  double t8016;
  double t8021;
  double t8028;
  double t8042;
  double t8052;
  double t8057;
  double t8059;
  double t8061;
  double t8062;
  double t8064;
  double t8090;
  double t8092;
  double t8095;
  double t8103;
  double t8106;
  double t8107;
  double t8111;
  double t8113;
  double t8119;
  double t8122;
  double t8123;
  double t8139;
  double t8144;
  double t8148;
  double t8150;
  double t8152;
  double t8731;
  double t8733;
  double t8734;
  double t8257;
  double t8293;
  double t8315;
  double t8324;
  double t8328;
  double t8329;
  double t8334;
  double t8336;
  double t8343;
  double t8349;
  double t8350;
  double t8428;
  double t8430;
  double t8431;
  double t8441;
  double t8448;
  double t8466;
  double t8467;
  double t8470;
  double t8485;
  double t8486;
  double t8488;
  double t8489;
  double t8492;
  double t8493;
  double t8496;
  double t8503;
  double t8532;
  double t8535;
  double t8536;
  double t8537;
  double t8541;
  double t8838;
  double t8839;
  double t8843;
  double t8970;
  double t8971;
  double t8987;
  double t9133;
  double t9135;
  double t9145;
  double t9146;
  double t9153;
  double t9136;
  double t9138;
  double t9139;
  double t9144;
  double t9155;
  double t9163;
  double t9165;
  double t9167;
  double t9170;
  double t5465;
  double t5467;
  double t9269;
  double t9270;
  double t9271;
  double t9274;
  double t9291;
  double t9293;
  double t9294;
  double t9275;
  double t9278;
  double t9282;
  double t9288;
  double t9296;
  double t9298;
  double t9308;
  double t9312;
  double t9313;
  double t9263;
  double t9534;
  double t9542;
  double t9547;
  double t9577;
  double t9585;
  double t9594;
  double t9602;
  double t9610;
  double t9612;
  double t9333;
  double t9555;
  double t9557;
  double t9562;
  double t9337;
  double t9342;
  double t9596;
  double t9613;
  double t9615;
  double t9623;
  double t9625;
  double t9633;
  double t9367;
  double t9397;
  double t9405;
  double t9406;
  double t8023;
  double t7784;
  double t8070;
  double t8120;
  double t8225;
  double t8345;
  double t8460;
  double t8494;
  double t9712;
  double t9714;
  double t9718;
  double t8651;
  double t9720;
  double t9726;
  double t8622;
  double t9746;
  double t9751;
  double t9752;
  double t9753;
  double t9770;
  double t9771;
  double t9775;
  double t9777;
  double t8673;
  double t9812;
  double t8695;
  double t9821;
  double t9822;
  double t9824;
  double t9832;
  double t9837;
  double t9840;
  double t9843;
  double t9844;
  double t8724;
  double t9855;
  double t9858;
  double t9863;
  double t9864;
  double t8767;
  double t9870;
  double t9879;
  double t9881;
  double t9883;
  double t9886;
  double t8795;
  double t9897;
  double t9898;
  double t9903;
  double t9906;
  double t8813;
  double t9910;
  double t9142;
  double t9187;
  double t9190;
  double t9212;
  double t9238;
  double t9242;
  double t9285;
  double t9334;
  double t9368;
  double t9386;
  double t10229;
  double t9575;
  double t10246;
  double t10247;
  double t9642;
  double t10286;
  double t9662;
  double t10295;
  double t9689;
  double t10307;
  double t10424;
  double t10425;
  double t10426;
  double t10427;
  double t10428;
  double t10430;
  double t10432;
  double t10433;
  double t10508;
  double t10510;
  double t10511;
  double t10512;
  double t10514;
  t491 = Cos(var1[10]);
  t240 = Cos(var1[4]);
  t311 = Cos(var1[9]);
  t528 = Cos(var1[5]);
  t855 = Sin(var1[9]);
  t1103 = Sin(var1[10]);
  t868 = Sin(var1[5]);
  t1341 = Cos(var1[11]);
  t1793 = Sin(var1[11]);
  t1457 = -1.*t1341;
  t1762 = 1. + t1457;
  t2759 = -1.*t1341*t1103;
  t2900 = -1.*t491*t1793;
  t3034 = t2759 + t2900;
  t2275 = 0.100689*t1762;
  t2289 = 0.080689*t1341;
  t2421 = -0.16*t1793;
  t2439 = t2275 + t2289 + t2421;
  t1780 = -0.20833*t1762;
  t1784 = -0.36833*t1341;
  t1847 = 0.02*t1793;
  t1940 = t1780 + t1784 + t1847;
  t3517 = t491*t1341;
  t3537 = -1.*t1103*t1793;
  t3557 = t3517 + t3537;
  t832 = -1.*t311*t491*t528;
  t1013 = t491*t855*t868;
  t1061 = t832 + t1013;
  t1089 = 0.06108*t240*t1061;
  t1118 = t311*t528*t1103;
  t1154 = -1.*t855*t1103*t868;
  t1302 = t1118 + t1154;
  t1312 = -0.06108*t240*t1302;
  t1961 = t1341*t1940;
  t2109 = -0.242889*t1793;
  t2619 = t2439*t1793;
  t2668 = t1961 + t2109 + t2619;
  t3113 = -1.*t311*t528*t3034;
  t3115 = t855*t3034*t868;
  t3439 = t3113 + t3115;
  t3440 = 0.241*t240*t2668*t3439;
  t3445 = 0.242889*t1341;
  t3493 = -1.*t1341*t2439;
  t3509 = t1940*t1793;
  t3515 = t3445 + t3493 + t3509;
  t3658 = -1.*t311*t528*t3557;
  t3693 = t855*t3557*t868;
  t3713 = t3658 + t3693;
  t3794 = 0.241*t240*t3515*t3713;
  t3831 = t1089 + t1312 + t3440 + t3794;
  t4038 = Sin(var1[4]);
  t4620 = t528*t855*t1103;
  t4665 = t311*t1103*t868;
  t4667 = t4620 + t4665;
  t5008 = -1.*t528*t855*t3034;
  t5011 = -1.*t311*t3034*t868;
  t5066 = t5008 + t5011;
  t5910 = -1.*t491*t1341;
  t5913 = t1103*t1793;
  t5937 = t5910 + t5913;
  t5708 = t3557*t4038;
  t5891 = t240*t5066;
  t5894 = t5708 + t5891;
  t5900 = 0.241*t3515*t5894;
  t6042 = -0.16*t1341;
  t6043 = t6042 + t1847;
  t6009 = 0.02*t1341;
  t6011 = 0.16*t1793;
  t6012 = t6009 + t6011;
  t5156 = t1341*t1103;
  t5171 = t491*t1793;
  t5207 = t5156 + t5171;
  t5225 = -1.*t528*t855*t3557;
  t5229 = -1.*t311*t3557*t868;
  t5249 = t5225 + t5229;
  t5905 = t3034*t4038;
  t5946 = -1.*t528*t855*t5937;
  t5958 = -1.*t311*t5937*t868;
  t5966 = t5946 + t5958;
  t5967 = t240*t5966;
  t5974 = t5905 + t5967;
  t5975 = 0.241*t2668*t5974;
  t5353 = -1.*t1103*t4038;
  t4136 = -1.*t491*t528*t855;
  t4224 = -1.*t311*t491*t868;
  t4352 = t4136 + t4224;
  t6258 = Sin(var1[3]);
  t6556 = Cos(var1[3]);
  t6573 = t6556*t4352;
  t6577 = t6258*t4038*t1061;
  t6578 = t6573 + t6577;
  t6594 = 0.06108*t6578;
  t6597 = t6556*t4667;
  t6598 = t6258*t4038*t1302;
  t6611 = t6597 + t6598;
  t6614 = -0.06108*t6611;
  t6626 = t6556*t5066;
  t6637 = t6258*t4038*t3439;
  t6643 = t6626 + t6637;
  t6645 = 0.241*t2668*t6643;
  t6665 = t6556*t5249;
  t6723 = t6258*t4038*t3713;
  t6724 = t6665 + t6723;
  t6727 = 0.241*t3515*t6724;
  t6732 = t6594 + t6614 + t6645 + t6727;
  t4014 = t240*t1103;
  t4379 = -1.*t4038*t4352;
  t4444 = t4014 + t4379;
  t4548 = t491*t240;
  t4670 = -1.*t4038*t4667;
  t4821 = t4548 + t4670;
  t4919 = t240*t3557;
  t5067 = -1.*t4038*t5066;
  t5106 = t4919 + t5067;
  t5220 = t240*t5207;
  t5251 = -1.*t4038*t5249;
  t5264 = t5220 + t5251;
  t5354 = t491*t528*t855;
  t5402 = t311*t491*t868;
  t5464 = t5354 + t5402;
  t6753 = -1.*t311*t528*t1103;
  t6755 = t855*t1103*t868;
  t6759 = t6753 + t6755;
  t6876 = t311*t528*t3034;
  t6879 = -1.*t855*t3034*t868;
  t6880 = t6876 + t6879;
  t7128 = t6556*t6880;
  t7184 = -1.*t6258*t5106;
  t7189 = t7128 + t7184;
  t7191 = 0.241*t3515*t7189;
  t5998 = -0.242889*t1341;
  t6003 = t1341*t2439;
  t6015 = t1341*t6012;
  t6017 = -1.*t1940*t1793;
  t6047 = t6043*t1793;
  t6048 = t5998 + t6003 + t6015 + t6017 + t6047;
  t6052 = -1.*t1341*t6043;
  t6069 = t6012*t1793;
  t6084 = t1961 + t6052 + t2109 + t2619 + t6069;
  t6901 = t311*t528*t3557;
  t6908 = -1.*t855*t3557*t868;
  t6926 = t6901 + t6908;
  t7197 = t311*t528*t5937;
  t7213 = -1.*t855*t5937*t868;
  t7214 = t7197 + t7213;
  t7239 = t6556*t7214;
  t7240 = t240*t3034;
  t7245 = -1.*t4038*t5966;
  t7246 = t7240 + t7245;
  t7278 = -1.*t6258*t7246;
  t7280 = t7239 + t7278;
  t7281 = 0.241*t2668*t7280;
  t6261 = -1.*t240*t4352;
  t6263 = t5353 + t6261;
  t6267 = -1.*t491*t4038;
  t6272 = -1.*t240*t4667;
  t6279 = t6267 + t6272;
  t6284 = -1.*t3557*t4038;
  t6294 = -1.*t240*t5066;
  t6306 = t6284 + t6294;
  t6308 = -1.*t5207*t4038;
  t6315 = -1.*t240*t5249;
  t6321 = t6308 + t6315;
  t7478 = t6258*t4352;
  t7481 = -1.*t6556*t4038*t1061;
  t7483 = t7478 + t7481;
  t7503 = 0.06108*t7483;
  t7504 = t6258*t4667;
  t7506 = -1.*t6556*t4038*t1302;
  t7512 = t7504 + t7506;
  t7513 = -0.06108*t7512;
  t7523 = t6258*t5066;
  t7524 = -1.*t6556*t4038*t3439;
  t7534 = t7523 + t7524;
  t7538 = 0.241*t2668*t7534;
  t7546 = t6258*t5249;
  t7547 = -1.*t6556*t4038*t3713;
  t7548 = t7546 + t7547;
  t7565 = 0.241*t3515*t7548;
  t7566 = t7503 + t7513 + t7538 + t7565;
  t6738 = t311*t491*t528;
  t6739 = -1.*t491*t855*t868;
  t6743 = t6738 + t6739;
  t7099 = t6556*t6759;
  t7113 = -1.*t6258*t4821;
  t7118 = t7099 + t7113;
  t7324 = t6556*t6926;
  t7349 = -1.*t6258*t5264;
  t7356 = t7324 + t7349;
  t7051 = -1.*t240*t1103;
  t7073 = -1.*t4038*t5464;
  t7076 = t7051 + t7073;
  t7680 = t6258*t6880;
  t7682 = t6556*t5106;
  t7683 = t7680 + t7682;
  t7685 = 0.241*t3515*t7683;
  t7695 = t6258*t7214;
  t7696 = t6556*t7246;
  t7705 = t7695 + t7696;
  t7706 = 0.241*t2668*t7705;
  t7762 = -0.04*t491;
  t7764 = 0.04*t1103;
  t7765 = t7762 + t7764;
  t7773 = -0.055855*t855;
  t7774 = -1.*t311*t7765;
  t7775 = t7773 + t7774;
  t7755 = 0.055855*t311;
  t7768 = -1.*t855*t7765;
  t7770 = t7755 + t7768;
  t7790 = t311*t528;
  t7792 = -1.*t855*t868;
  t7800 = t7790 + t7792;
  t7802 = t528*t7775;
  t7803 = -1.*t7770*t868;
  t7804 = t7802 + t7803;
  t7844 = -1.*t311;
  t7852 = 1. + t7844;
  t7853 = 0.081715*t7852;
  t7860 = 0.13757*t311;
  t7863 = t7853 + t7860 + t7768;
  t7826 = 0.055855*t855;
  t7832 = t311*t7765;
  t7833 = t7826 + t7832;
  t7892 = -1.*t528*t855;
  t7899 = -1.*t311*t868;
  t7905 = t7892 + t7899;
  t7908 = -1.*t491;
  t7909 = 1. + t7908;
  t7917 = 0.242889*t7909;
  t7921 = 0.202889*t491;
  t7924 = -0.04*t1103;
  t7927 = t7917 + t7921 + t7924;
  t7932 = t528*t7863;
  t7935 = -1.*t7833*t868;
  t7937 = t7932 + t7935;
  t7752 = t528*t855;
  t7753 = t311*t868;
  t7754 = t7752 + t7753;
  t7835 = t528*t7833;
  t7864 = t7863*t868;
  t7868 = t7835 + t7864;
  t7931 = t7927*t4038;
  t7938 = t240*t7937;
  t7940 = t7931 + t7938;
  t7961 = t240*t7927;
  t7962 = -1.*t4038*t7937;
  t7964 = t7961 + t7962;
  t7771 = t528*t7770;
  t7776 = t7775*t868;
  t7779 = t7771 + t7776;
  t7745 = t1103*t4038;
  t7749 = t240*t4352;
  t7750 = t7745 + t7749;
  t5564 = t491*t4038;
  t5597 = t240*t4667;
  t5617 = t5564 + t5597;
  t7788 = Power(t240,2);
  t7811 = Power(t4038,2);
  t8175 = 0.242889*t1103;
  t8180 = -1.*t1103*t2439;
  t8183 = t491*t1940;
  t8185 = t8175 + t8180 + t8183;
  t8213 = -0.035165*t855;
  t8217 = -1.*t311*t8185;
  t8218 = t8213 + t8217;
  t8169 = 0.035165*t311;
  t8193 = -1.*t855*t8185;
  t8204 = t8169 + t8193;
  t8226 = t528*t8218;
  t8227 = -1.*t8204*t868;
  t8235 = t8226 + t8227;
  t8249 = 0.11688*t311;
  t8250 = t7853 + t8249 + t8193;
  t8241 = 0.035165*t855;
  t8243 = t311*t8185;
  t8247 = t8241 + t8243;
  t8261 = t491*t2439;
  t8267 = t1103*t1940;
  t8271 = t7917 + t8261 + t8267;
  t8280 = t528*t8250;
  t8281 = -1.*t8247*t868;
  t8286 = t8280 + t8281;
  t8248 = t528*t8247;
  t8254 = t8250*t868;
  t8255 = t8248 + t8254;
  t8276 = t8271*t4038;
  t8290 = t240*t8286;
  t8291 = t8276 + t8290;
  t8307 = t240*t8271;
  t8310 = -1.*t4038*t8286;
  t8314 = t8307 + t8310;
  t8205 = t528*t8204;
  t8223 = t8218*t868;
  t8224 = t8205 + t8223;
  t6163 = t5207*t4038;
  t6188 = t240*t5249;
  t6200 = t6163 + t6188;
  t8633 = -1.*t528*t7833;
  t8636 = -1.*t7863*t868;
  t8640 = t8633 + t8636;
  t7872 = -1.*t7800*t7868;
  t7954 = -1.*t240*t7905*t7940;
  t7989 = t4038*t7905*t7964;
  t7997 = -1.*t7754*t7868;
  t8000 = -1.*t240*t7800*t7940;
  t8009 = t4038*t7800*t7964;
  t8016 = t7997 + t8000 + t8009;
  t8021 = t240*t1061*t8016;
  t8028 = t4352*t7868;
  t8042 = t240*t1061*t7940;
  t8052 = -1.*t4038*t1061*t7964;
  t8057 = t6743*t7868;
  t8059 = t7750*t7940;
  t8061 = t4444*t7964;
  t8062 = t8057 + t8059 + t8061;
  t8064 = t240*t7905*t8062;
  t8090 = t7800*t7868;
  t8092 = t240*t7905*t7940;
  t8095 = -1.*t4038*t7905*t7964;
  t8103 = t7754*t7868;
  t8106 = t240*t7800*t7940;
  t8107 = -1.*t4038*t7800*t7964;
  t8111 = t8103 + t8106 + t8107;
  t8113 = t240*t1302*t8111;
  t8119 = -1.*t7868*t4667;
  t8122 = -1.*t240*t1302*t7940;
  t8123 = t4038*t1302*t7964;
  t8139 = -1.*t7868*t6759;
  t8144 = -1.*t7940*t5617;
  t8148 = -1.*t7964*t4821;
  t8150 = t8139 + t8144 + t8148;
  t8152 = t240*t7905*t8150;
  t8731 = -1.*t528*t8247;
  t8733 = -1.*t8250*t868;
  t8734 = t8731 + t8733;
  t8257 = t7800*t8255;
  t8293 = t240*t7905*t8291;
  t8315 = -1.*t4038*t7905*t8314;
  t8324 = t7754*t8255;
  t8328 = t240*t7800*t8291;
  t8329 = -1.*t4038*t7800*t8314;
  t8334 = t8324 + t8328 + t8329;
  t8336 = t240*t3439*t8334;
  t8343 = -1.*t8255*t5066;
  t8349 = -1.*t240*t3439*t8291;
  t8350 = t4038*t3439*t8314;
  t8428 = -1.*t8255*t6880;
  t8430 = -1.*t8291*t5894;
  t8431 = -1.*t8314*t5106;
  t8441 = t8428 + t8430 + t8431;
  t8448 = t240*t7905*t8441;
  t8466 = -1.*t7800*t8255;
  t8467 = -1.*t240*t7905*t8291;
  t8470 = t4038*t7905*t8314;
  t8485 = -1.*t7754*t8255;
  t8486 = -1.*t240*t7800*t8291;
  t8488 = t4038*t7800*t8314;
  t8489 = t8485 + t8486 + t8488;
  t8492 = t240*t3713*t8489;
  t8493 = t8255*t5249;
  t8496 = t240*t3713*t8291;
  t8503 = -1.*t4038*t3713*t8314;
  t8532 = t8255*t6926;
  t8535 = t8291*t6200;
  t8536 = t8314*t5264;
  t8537 = t8532 + t8535 + t8536;
  t8541 = t240*t7905*t8537;
  t8838 = -1.*t7927*t4038;
  t8839 = -1.*t240*t7937;
  t8843 = t8838 + t8839;
  t8970 = -1.*t8271*t4038;
  t8971 = -1.*t240*t8286;
  t8987 = t8970 + t8971;
  t9133 = 0.04*t491;
  t9135 = t9133 + t7764;
  t9145 = -1.*t528*t855*t9135;
  t9146 = -1.*t311*t9135*t868;
  t9153 = t9145 + t9146;
  t9136 = t311*t528*t9135;
  t9138 = -1.*t855*t9135*t868;
  t9139 = t9136 + t9138;
  t9144 = t7765*t4038;
  t9155 = t240*t9153;
  t9163 = t9144 + t9155;
  t9165 = t240*t7765;
  t9167 = -1.*t4038*t9153;
  t9170 = t9165 + t9167;
  t5465 = t240*t5464;
  t5467 = t5353 + t5465;
  t9269 = 0.242889*t491;
  t9270 = -1.*t491*t2439;
  t9271 = -1.*t1103*t1940;
  t9274 = t9269 + t9270 + t9271;
  t9291 = -1.*t528*t855*t9274;
  t9293 = -1.*t311*t9274*t868;
  t9294 = t9291 + t9293;
  t9275 = t311*t528*t9274;
  t9278 = -1.*t855*t9274*t868;
  t9282 = t9275 + t9278;
  t9288 = t8185*t4038;
  t9296 = t240*t9294;
  t9298 = t9288 + t9296;
  t9308 = t240*t8185;
  t9312 = -1.*t4038*t9294;
  t9313 = t9308 + t9312;
  t9263 = t5894*t8489;
  t9534 = -1.*t1103*t6043;
  t9542 = t491*t6012;
  t9547 = t9534 + t9542;
  t9577 = t491*t6043;
  t9585 = t1103*t6012;
  t9594 = t9577 + t9585;
  t9602 = -1.*t528*t855*t9547;
  t9610 = -1.*t311*t9547*t868;
  t9612 = t9602 + t9610;
  t9333 = t8255*t6880;
  t9555 = t311*t528*t9547;
  t9557 = -1.*t855*t9547*t868;
  t9562 = t9555 + t9557;
  t9337 = t8291*t5894;
  t9342 = t8314*t5106;
  t9596 = t9594*t4038;
  t9613 = t240*t9612;
  t9615 = t9596 + t9613;
  t9623 = t240*t9594;
  t9625 = -1.*t4038*t9612;
  t9633 = t9623 + t9625;
  t9367 = t5974*t8334;
  t9397 = -1.*t8255*t7214;
  t9405 = -1.*t8291*t5974;
  t9406 = -1.*t8314*t7246;
  t8023 = t6743*t7779;
  t7784 = -1.*t7754*t7779;
  t8070 = t7754*t7779;
  t8120 = -1.*t7779*t6759;
  t8225 = t7754*t8224;
  t8345 = -1.*t8224*t6880;
  t8460 = -1.*t7754*t8224;
  t8494 = t8224*t6926;
  t9712 = -1.*t7800*t7937;
  t9714 = t9712 + t7997;
  t9718 = t4352*t9714;
  t8651 = t6743*t7937;
  t9720 = t1061*t7937;
  t9726 = -1.*t7905*t7937;
  t8622 = -1.*t7754*t7937;
  t9746 = t7927*t1103;
  t9751 = t4352*t7937;
  t9752 = t9746 + t9751 + t8057;
  t9753 = t7800*t9752;
  t9770 = t7800*t7937;
  t9771 = t9770 + t8103;
  t9775 = t4667*t9771;
  t9777 = t7905*t7937;
  t8673 = t7754*t7937;
  t9812 = -1.*t7937*t1302;
  t8695 = -1.*t7937*t6759;
  t9821 = -1.*t491*t7927;
  t9822 = -1.*t7937*t4667;
  t9824 = t9821 + t9822 + t8139;
  t9832 = t7800*t9824;
  t9837 = t7800*t8286;
  t9840 = t9837 + t8324;
  t9843 = t5066*t9840;
  t9844 = t7905*t8286;
  t8724 = t7754*t8286;
  t9855 = -1.*t8271*t3557;
  t9858 = -1.*t8286*t5066;
  t9863 = t9855 + t9858 + t8428;
  t9864 = t7800*t9863;
  t8767 = -1.*t8286*t6880;
  t9870 = -1.*t8286*t3439;
  t9879 = -1.*t7800*t8286;
  t9881 = t9879 + t8485;
  t9883 = t5249*t9881;
  t9886 = -1.*t7905*t8286;
  t8795 = -1.*t7754*t8286;
  t9897 = t8271*t5207;
  t9898 = t8286*t5249;
  t9903 = t9897 + t9898 + t8532;
  t9906 = t7800*t9903;
  t8813 = t8286*t6926;
  t9910 = t8286*t3713;
  t9142 = -1.*t7754*t9139;
  t9187 = t6743*t9139;
  t9190 = t7868*t6759;
  t9212 = t7754*t9139;
  t9238 = -1.*t1061*t7868;
  t9242 = -1.*t9139*t6759;
  t9285 = -1.*t7754*t9282;
  t9334 = t9282*t6926;
  t9368 = t7754*t9282;
  t9386 = -1.*t9282*t6880;
  t10229 = t6880*t9881;
  t9575 = -1.*t7754*t9562;
  t10246 = t8271*t3557;
  t10247 = t8286*t5066;
  t9642 = t9562*t6926;
  t10286 = t7214*t9840;
  t9662 = t7754*t9562;
  t10295 = -1.*t8271*t3034;
  t9689 = -1.*t9562*t6880;
  t10307 = -1.*t8286*t5966;
  t10424 = -1.*t855*t8247;
  t10425 = -1.*t311*t8250;
  t10426 = t10424 + t10425;
  t10427 = 0.241*t10426*t3557*t2668;
  t10428 = t855*t8247;
  t10430 = t311*t8250;
  t10432 = t10428 + t10430;
  t10433 = 0.241*t10432*t3034*t3515;
  t10508 = 0.008474765*t3034*t3515;
  t10510 = -0.11688*t3557;
  t10511 = -0.081715*t5937;
  t10512 = t10510 + t10511;
  t10514 = 0.241*t2668*t10512;
  p_output1[0]=var2[10]*(-0.5*(0.06108*t4444 - 0.06108*t4821 + 0.241*t2668*t5106 + 0.241*t3515*t5264)*var2[4] - 0.5*t3831*var2[5] - 0.5*t3831*var2[9] - 0.5*(-0.06108*t5467 + 0.06108*t5617 + t5900 + t5975)*var2[10] - 0.5*(t5900 + t5975 + 0.241*t5894*t6048 + 0.241*t6084*t6200)*var2[11]);
  p_output1[1]=var2[10]*(-0.5*(0.06108*(-1.*t4444*t6556 - 1.*t6258*t6743) - 0.06108*(-1.*t4821*t6556 - 1.*t6258*t6759) + 0.241*t2668*(-1.*t5106*t6556 - 1.*t6258*t6880) + 0.241*t3515*(-1.*t5264*t6556 - 1.*t6258*t6926))*var2[3] - 0.5*(-0.06108*t6258*t6263 + 0.06108*t6258*t6279 - 0.241*t2668*t6258*t6306 - 0.241*t3515*t6258*t6321)*var2[4] - 0.5*t6732*var2[5] - 0.5*t6732*var2[9] - 0.5*(-0.06108*(t1061*t6556 - 1.*t6258*t7076) + 0.06108*t7118 + t7191 + t7281)*var2[10] - 0.5*(0.241*t6048*t7189 + t7191 + t7281 + 0.241*t6084*t7356)*var2[11]);
  p_output1[2]=var2[10]*(-0.5*(0.06108*(-1.*t4444*t6258 + t6556*t6743) - 0.06108*t7118 + 0.241*t2668*t7189 + 0.241*t3515*t7356)*var2[3] - 0.5*(0.06108*t6263*t6556 - 0.06108*t6279*t6556 + 0.241*t2668*t6306*t6556 + 0.241*t3515*t6321*t6556)*var2[4] - 0.5*t7566*var2[5] - 0.5*t7566*var2[9] - 0.5*(0.06108*(t4821*t6556 + t6258*t6759) - 0.06108*(t1061*t6258 + t6556*t7076) + t7685 + t7706)*var2[10] - 0.5*(0.241*t6084*(t5264*t6556 + t6258*t6926) + 0.241*t6048*t7683 + t7685 + t7706)*var2[11]);
  p_output1[3]=var2[10]*(-0.5*(0.06108*(t4821*t8111 - 1.*t4038*t7800*t8150 + t240*t7800*(-1.*t4821*t7940 - 1.*t5617*t7964 - 1.*t6279*t7964 - 1.*t4821*t8843) + t5617*(-1.*t4038*t7800*t7940 - 1.*t4038*t7800*t8843)) - 0.06108*(t4444*t8016 - 1.*t4038*t7800*t8062 + t240*t7800*(t4444*t7940 + t6263*t7964 + t7750*t7964 + t4444*t8843) + t7750*(t4038*t7800*t7940 + t4038*t7800*t8843)) + 0.241*t3515*(t5106*t8334 - 1.*t4038*t7800*t8441 + t240*t7800*(-1.*t5106*t8291 - 1.*t5894*t8314 - 1.*t6306*t8314 - 1.*t5106*t8987) + t5894*(-1.*t4038*t7800*t8291 - 1.*t4038*t7800*t8987)) + 0.241*t2668*(t5264*t8489 - 1.*t4038*t7800*t8537 + t240*t7800*(t5264*t8291 + t6200*t8314 + t6321*t8314 + t5264*t8987) + t6200*(t4038*t7800*t8291 + t4038*t7800*t8987)))*var2[4] - 0.5*(-0.06108*(t8021 + t8064 + t7750*(t7872 + t7954 + t7989 + t8622 - 1.*t7788*t7800*t8640 - 1.*t7800*t7811*t8640) + t240*t7800*(t8028 + t8042 + t8052 - 1.*t4038*t4444*t8640 + t240*t7750*t8640 + t8651)) + 0.06108*(t8113 + t8152 + t5617*(t8090 + t8092 + t8095 + t7788*t7800*t8640 + t7800*t7811*t8640 + t8673) + t240*t7800*(t8119 + t8122 + t8123 + t4038*t4821*t8640 - 1.*t240*t5617*t8640 + t8695)) + 0.241*t3515*(t8336 + t8448 + t5894*(t8257 + t8293 + t8315 + t8724 + t7788*t7800*t8734 + t7800*t7811*t8734) + t240*t7800*(t8343 + t8349 + t8350 + t4038*t5106*t8734 - 1.*t240*t5894*t8734 + t8767)) + 0.241*t2668*(t8492 + t8541 + t6200*(t8466 + t8467 + t8470 - 1.*t7788*t7800*t8734 - 1.*t7800*t7811*t8734 + t8795) + t240*t7800*(t8493 + t8496 + t8503 - 1.*t4038*t5264*t8734 + t240*t6200*t8734 + t8813)))*var2[5] - 0.5*(-0.06108*(t7750*(t7784 - 1.*t7788*t7800*t7804 - 1.*t7800*t7804*t7811 + t7872 + t7954 + t7989) + t8021 + t240*t7800*(-1.*t4038*t4444*t7804 + t240*t7750*t7804 + t8023 + t8028 + t8042 + t8052) + t8064) + 0.06108*(t5617*(t7788*t7800*t7804 + t7800*t7804*t7811 + t8070 + t8090 + t8092 + t8095) + t8113 + t240*t7800*(t4038*t4821*t7804 - 1.*t240*t5617*t7804 + t8119 + t8120 + t8122 + t8123) + t8152) + 0.241*t3515*(t5894*(t8225 + t7788*t7800*t8235 + t7800*t7811*t8235 + t8257 + t8293 + t8315) + t8336 + t240*t7800*(t4038*t5106*t8235 - 1.*t240*t5894*t8235 + t8343 + t8345 + t8349 + t8350) + t8448) + 0.241*t2668*(t6200*(-1.*t7788*t7800*t8235 - 1.*t7800*t7811*t8235 + t8460 + t8466 + t8467 + t8470) + t8492 + t240*t7800*(-1.*t4038*t5264*t8235 + t240*t6200*t8235 + t8493 + t8494 + t8496 + t8503) + t8541))*var2[9] - 0.5*(-0.06108*(t5617*t8016 + t7750*(t9142 - 1.*t240*t7800*t9163 + t4038*t7800*t9170) + t240*t7800*(t5617*t7940 + t4821*t7964 + t7750*t9163 + t4444*t9170 + t9187 + t9190)) + 0.06108*(t5467*t8111 + t5617*(t240*t7800*t9163 - 1.*t4038*t7800*t9170 + t9212) + t240*t7800*(-1.*t5467*t7940 - 1.*t7076*t7964 - 1.*t5617*t9163 - 1.*t4821*t9170 + t9238 + t9242)) + 0.241*t2668*(t9263 + t6200*(t9285 - 1.*t240*t7800*t9298 + t4038*t7800*t9313) + t240*t7800*(t6200*t9298 + t5264*t9313 + t9333 + t9334 + t9337 + t9342)) + 0.241*t3515*(t9367 + t5894*(t240*t7800*t9298 - 1.*t4038*t7800*t9313 + t9368) + t240*t7800*(-1.*t5894*t9298 - 1.*t5106*t9313 + t9386 + t9397 + t9405 + t9406)))*var2[10] - 0.5*(0.241*t6084*(t5894*t8334 + t240*t7800*t8441) + 0.241*t6048*(t6200*t8489 + t240*t7800*t8537) + 0.241*t2668*(t9263 + t6200*(t9575 - 1.*t240*t7800*t9615 + t4038*t7800*t9633) + t240*t7800*(t9333 + t9337 + t9342 + t6200*t9615 + t5264*t9633 + t9642)) + 0.241*t3515*(t9367 + t5894*(t240*t7800*t9615 - 1.*t4038*t7800*t9633 + t9662) + t240*t7800*(t9397 + t9405 + t9406 - 1.*t5894*t9615 - 1.*t5106*t9633 + t9689)))*var2[11]);
  p_output1[4]=var2[10]*(-0.5*(-0.06108*(t9718 + t7754*(t8028 + t4352*t8640 + t8651 + t9720) + t6743*(t7872 + t8622 - 1.*t7800*t8640 + t9726) + t9753) + 0.06108*(t9775 + t6759*(t8090 + t7800*t8640 + t8673 + t9777) + t7754*(t8119 - 1.*t4667*t8640 + t8695 + t9812) + t9832) + 0.241*t3515*(t9843 + t6880*(t8257 + t8724 + t7800*t8734 + t9844) + t9864 + t7754*(t8343 - 1.*t5066*t8734 + t8767 + t9870)) + 0.241*t2668*(t9883 + t6926*(t8466 - 1.*t7800*t8734 + t8795 + t9886) + t9906 + t7754*(t8493 + t5249*t8734 + t8813 + t9910)))*var2[5] - 0.5*(-0.06108*(t9718 + t7754*(t4352*t7804 + t8023 + t8028 + t9720) + t6743*(t7784 - 1.*t7800*t7804 + t7872 + t9726) + t9753) + 0.06108*(t9775 + t6759*(t7800*t7804 + t8070 + t8090 + t9777) + t7754*(-1.*t4667*t7804 + t8119 + t8120 + t9812) + t9832) + 0.241*t3515*(t9843 + t6880*(t8225 + t7800*t8235 + t8257 + t9844) + t9864 + t7754*(-1.*t5066*t8235 + t8343 + t8345 + t9870)) + 0.241*t2668*(t9883 + t6926*(-1.*t7800*t8235 + t8460 + t8466 + t9886) + t9906 + t7754*(t5249*t8235 + t8493 + t8494 + t9910)))*var2[9] - 0.5*(0.241*t2668*(t10229 + t6926*(t9285 - 1.*t7800*t9294) + t7754*(t10246 + t10247 + t5207*t8185 + t5249*t9294 + t9333 + t9334)) + 0.241*t3515*(t10286 + t6880*(t7800*t9294 + t9368) + t7754*(t10295 + t10307 - 1.*t3557*t8185 - 1.*t5066*t9294 + t9386 + t9397)) - 0.06108*(t6743*(t9142 - 1.*t7800*t9153) + t7754*(t1103*t7765 + t491*t7927 + t4667*t7937 + t4352*t9153 + t9187 + t9190) + t6759*t9714) + 0.06108*(t6759*(t7800*t9153 + t9212) + t7754*(-1.*t491*t7765 - 1.*t5464*t7937 - 1.*t4667*t9153 + t9238 + t9242 + t9746) + t1061*t9771))*var2[10] - 0.5*(0.241*t2668*(t10229 + t6926*(t9575 - 1.*t7800*t9612) + t7754*(t10246 + t10247 + t9333 + t5207*t9594 + t5249*t9612 + t9642)) + 0.241*t3515*(t10286 + t6880*(t7800*t9612 + t9662) + t7754*(t10295 + t10307 + t9397 - 1.*t3557*t9594 - 1.*t5066*t9612 + t9689)) + 0.241*t6084*(t6880*t9840 + t7754*t9863) + 0.241*t6048*(t6926*t9881 + t7754*t9903))*var2[11]);
  p_output1[5]=var2[10]*(-0.5*(0.06108*t491*(t311*t7775 + t311*t7833 + t7770*t855 - 1.*t7863*t855) - 0.06108*t1103*(-1.*t311*t7775 - 1.*t311*t7833 - 1.*t7770*t855 + t7863*t855) + 0.241*t3515*t3557*(t311*t8218 + t311*t8247 + t8204*t855 - 1.*t8250*t855) + 0.241*t2668*t5207*(-1.*t311*t8218 - 1.*t311*t8247 - 1.*t8204*t855 + t8250*t855))*var2[9] - 0.5*(t10427 + t10433 - 0.06108*t491*(-1.*t311*t7863 - 1.*t7833*t855) - 0.06108*t1103*(t311*t7863 + t7833*t855))*var2[10] - 0.5*(t10427 + t10433 + 0.241*t10426*t5207*t6048 + 0.241*t10432*t3557*t6084)*var2[11]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=var2[10]*(-0.5*(t10508 + t10514 - 0.0034116234*t1103 + 0.0034116234*t491)*var2[10] - 0.5*(t10508 + t10514 + 0.241*(-0.081715*t3034 - 0.11688*t5207)*t6048 + 0.008474765*t3557*t6084)*var2[11]);
  p_output1[10]=-0.5*(0.482*t2668*t6048 + 0.482*t3515*t6084)*var2[10]*var2[11];
  p_output1[11]=-0.5*(-0.03856*t6048 + 0.00482*t6084)*var2[10]*var2[11];
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec11_plane.hh"

namespace SymFunction
{

void Ce1_vec11_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
