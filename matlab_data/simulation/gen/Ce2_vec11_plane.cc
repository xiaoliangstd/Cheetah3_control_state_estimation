/*
 * Automatically Generated from Mathematica.
 * Fri 21 Dec 2018 15:11:53 GMT-05:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t285;
  double t314;
  double t240;
  double t351;
  double t801;
  double t831;
  double t832;
  double t528;
  double t681;
  double t700;
  double t788;
  double t864;
  double t1103;
  double t1110;
  double t1118;
  double t868;
  double t1762;
  double t1780;
  double t1784;
  double t1748;
  double t1793;
  double t1794;
  double t1870;
  double t1906;
  double t1908;
  double t1940;
  double t1948;
  double t1956;
  double t1345;
  double t1353;
  double t1457;
  double t1493;
  double t1623;
  double t1685;
  double t2275;
  double t2289;
  double t2079;
  double t2094;
  double t2099;
  double t2228;
  double t2309;
  double t3414;
  double t3439;
  double t3440;
  double t3445;
  double t3493;
  double t3509;
  double t3517;
  double t3520;
  double t3537;
  double t3557;
  double t311;
  double t355;
  double t491;
  double t3781;
  double t3791;
  double t3794;
  double t3799;
  double t3737;
  double t3829;
  double t3831;
  double t3889;
  double t3917;
  double t3919;
  double t3658;
  double t3693;
  double t3696;
  double t4033;
  double t4034;
  double t4038;
  double t4136;
  double t3515;
  double t3584;
  double t3639;
  double t3115;
  double t3175;
  double t3267;
  double t5104;
  double t5106;
  double t5156;
  double t4821;
  double t4919;
  double t4953;
  double t5251;
  double t5264;
  double t5287;
  double t5299;
  double t5333;
  double t5353;
  double t680;
  double t855;
  double t936;
  double t967;
  double t1013;
  double t1061;
  double t5465;
  double t5467;
  double t5477;
  double t5402;
  double t5444;
  double t5449;
  double t1098;
  double t1141;
  double t1154;
  double t1166;
  double t1196;
  double t1243;
  double t5171;
  double t5190;
  double t5207;
  double t5220;
  double t5225;
  double t5229;
  double t2153;
  double t1709;
  double t2439;
  double t3713;
  double t4027;
  double t4224;
  double t4399;
  double t4620;
  double t4665;
  double t5008;
  double t5011;
  double t5013;
  double t5043;
  double t5066;
  double t5067;
  double t5564;
  double t5573;
  double t5597;
  double t5617;
  double t5646;
  double t5665;
  double t6577;
  double t6599;
  double t6755;
  double t6759;
  double t6815;
  double t6862;
  double t6876;
  double t6879;
  double t6880;
  double t6901;
  double t6908;
  double t6926;
  double t6927;
  double t6928;
  double t6929;
  double t6931;
  double t6932;
  double t6933;
  double t6934;
  double t6961;
  double t6578;
  double t6594;
  double t6597;
  double t6611;
  double t6614;
  double t6618;
  double t6645;
  double t6665;
  double t6723;
  double t6727;
  double t6732;
  double t6738;
  double t7483;
  double t7503;
  double t7504;
  double t7513;
  double t7523;
  double t7524;
  double t7073;
  double t7076;
  double t7079;
  double t7113;
  double t7118;
  double t7128;
  double t7189;
  double t7190;
  double t7191;
  double t7213;
  double t7214;
  double t7239;
  double t7683;
  double t7685;
  double t7695;
  double t7652;
  double t7671;
  double t7680;
  double t7696;
  double t7705;
  double t7706;
  double t7682;
  double t7745;
  double t7749;
  double t7792;
  double t7800;
  double t7802;
  double t7804;
  double t7811;
  double t7826;
  double t7768;
  double t7770;
  double t7771;
  double t5998;
  double t7752;
  double t7774;
  double t7775;
  double t7860;
  double t7863;
  double t2668;
  double t8058;
  double t8059;
  double t8061;
  double t8064;
  double t8070;
  double t8090;
  double t8113;
  double t8114;
  double t8118;
  double t8150;
  double t8152;
  double t8155;
  double t8175;
  double t8180;
  double t8183;
  double t8062;
  double t8092;
  double t8095;
  double t6047;
  double t8213;
  double t8217;
  double t8103;
  double t8104;
  double t7754;
  double t8322;
  double t8323;
  double t8324;
  double t8328;
  double t8329;
  double t8334;
  double t8325;
  double t8335;
  double t8336;
  double t7832;
  double t7853;
  double t8470;
  double t8481;
  double t8485;
  double t8488;
  double t8489;
  double t8492;
  double t8428;
  double t8429;
  double t8430;
  double t7908;
  double t7924;
  double t7931;
  double t7954;
  double t7975;
  double t8441;
  double t8448;
  double t8532;
  double t8535;
  double t8016;
  double t8023;
  double t8733;
  double t8734;
  double t8767;
  double t8771;
  double t8772;
  double t8773;
  double t8123;
  double t8791;
  double t8795;
  double t8811;
  double t8185;
  double t8223;
  double t8885;
  double t8886;
  double t8887;
  double t8893;
  double t8895;
  double t8900;
  double t8770;
  double t8778;
  double t8779;
  double t8239;
  double t8248;
  double t8250;
  double t8909;
  double t8910;
  double t8276;
  double t8290;
  double t8785;
  double t8786;
  double t8305;
  double t8309;
  double t7548;
  double t7549;
  double t7565;
  double t1847;
  double t1961;
  double t1964;
  double t2031;
  double t2109;
  double t2111;
  double t2296;
  double t2369;
  double t2389;
  double t2421;
  double t2468;
  double t2619;
  double t2759;
  double t2804;
  double t2900;
  double t3034;
  double t3113;
  double t3881;
  double t3967;
  double t3972;
  double t3995;
  double t4000;
  double t4014;
  double t4156;
  double t4185;
  double t4277;
  double t4281;
  double t4352;
  double t4379;
  double t4444;
  double t4459;
  double t4475;
  double t4548;
  double t4667;
  double t4670;
  double t4708;
  double t4716;
  double t4792;
  double t9021;
  double t9023;
  double t9024;
  double t7281;
  double t7324;
  double t7349;
  double t7356;
  double t7369;
  double t7478;
  double t7537;
  double t7538;
  double t7546;
  double t5885;
  double t5891;
  double t5894;
  double t5900;
  double t5906;
  double t5910;
  double t5913;
  double t5937;
  double t5967;
  double t5974;
  double t5975;
  double t6003;
  double t6009;
  double t6011;
  double t6012;
  double t6015;
  double t6017;
  double t6019;
  double t6042;
  double t6048;
  double t6052;
  double t6069;
  double t6084;
  double t6111;
  double t6113;
  double t6138;
  double t6163;
  double t6188;
  double t6200;
  double t6217;
  double t6246;
  double t6258;
  double t6261;
  double t6284;
  double t6294;
  double t6304;
  double t6315;
  double t6321;
  double t6338;
  double t7352;
  double t7481;
  double t7506;
  double t7512;
  double t7527;
  double t7534;
  double t7547;
  double t7566;
  double t7618;
  double t6598;
  double t6626;
  double t6637;
  double t6724;
  double t6739;
  double t6743;
  double t7099;
  double t7130;
  double t7137;
  double t7197;
  double t7240;
  double t7245;
  double t7750;
  double t7753;
  double t7755;
  double t7762;
  double t7764;
  double t7773;
  double t7776;
  double t7779;
  double t7784;
  double t7790;
  double t7803;
  double t7833;
  double t7835;
  double t7844;
  double t7852;
  double t7864;
  double t7868;
  double t7872;
  double t7899;
  double t7905;
  double t7909;
  double t7917;
  double t7921;
  double t7927;
  double t7932;
  double t7935;
  double t7937;
  double t7940;
  double t7961;
  double t7962;
  double t7964;
  double t7989;
  double t7994;
  double t7997;
  double t8000;
  double t8009;
  double t8021;
  double t8028;
  double t8042;
  double t8052;
  double t8099;
  double t8106;
  double t8107;
  double t8109;
  double t8148;
  double t8169;
  double t8193;
  double t8204;
  double t8205;
  double t8218;
  double t8224;
  double t8225;
  double t8226;
  double t8119;
  double t8120;
  double t8122;
  double t8130;
  double t8139;
  double t8142;
  double t8235;
  double t8236;
  double t8240;
  double t8241;
  double t8243;
  double t8247;
  double t8249;
  double t8254;
  double t8255;
  double t8257;
  double t8267;
  double t8268;
  double t8271;
  double t8280;
  double t8281;
  double t8286;
  double t8291;
  double t8292;
  double t8293;
  double t8307;
  double t8310;
  double t8312;
  double t8314;
  double t8343;
  double t8345;
  double t8349;
  double t8350;
  double t8385;
  double t8424;
  double t8431;
  double t8450;
  double t8460;
  double t8466;
  double t8468;
  double t8486;
  double t8493;
  double t8494;
  double t8496;
  double t8503;
  double t8504;
  double t8536;
  double t8537;
  double t8541;
  double t8544;
  double t8545;
  double t8546;
  double t8547;
  double t8548;
  double t8549;
  double t8554;
  double t8556;
  double t8557;
  double t8558;
  double t8587;
  double t8622;
  double t8634;
  double t8636;
  double t8637;
  double t8639;
  double t8640;
  double t8645;
  double t8647;
  double t8651;
  double t8656;
  double t8669;
  double t8673;
  double t8695;
  double t8707;
  double t8712;
  double t8715;
  double t8716;
  double t8724;
  double t8783;
  double t8787;
  double t8788;
  double t8789;
  double t8813;
  double t8829;
  double t8838;
  double t8839;
  double t8843;
  double t8854;
  double t8884;
  double t8892;
  double t8902;
  double t8904;
  double t8908;
  double t8912;
  double t8914;
  double t8915;
  double t8916;
  double t8918;
  double t8928;
  double t8937;
  double t8939;
  double t8940;
  double t8945;
  double t8946;
  double t8949;
  double t8950;
  double t8951;
  double t8960;
  double t8965;
  double t8966;
  double t8969;
  double t8970;
  double t8971;
  double t8981;
  double t8987;
  double t8989;
  double t8993;
  double t8994;
  double t8995;
  double t8996;
  double t8997;
  double t8998;
  double t8999;
  double t9000;
  double t9001;
  double t9002;
  double t9003;
  double t9161;
  double t9163;
  double t9165;
  double t6643;
  double t6753;
  double t6922;
  double t6924;
  double t7051;
  double t7053;
  double t7184;
  double t7246;
  double t7278;
  double t9083;
  double t9084;
  double t9086;
  double t9087;
  double t9088;
  double t9089;
  double t9090;
  double t9091;
  double t9094;
  double t9296;
  double t9297;
  double t9298;
  double t9313;
  double t9322;
  double t9326;
  double t8425;
  double t8467;
  double t8542;
  double t8633;
  double t8731;
  double t8790;
  double t8867;
  double t8924;
  double t8967;
  double t9005;
  double t9007;
  double t9257;
  double t9258;
  double t9259;
  double t9260;
  double t9262;
  double t9263;
  double t9265;
  double t9269;
  double t9270;
  double t9271;
  double t9272;
  double t9130;
  double t9133;
  double t9135;
  double t9136;
  double t9138;
  double t9139;
  double t9141;
  double t9142;
  double t9143;
  double t9144;
  double t9145;
  double t9412;
  double t9413;
  double t9414;
  double t9303;
  double t9304;
  double t9308;
  double t9424;
  double t9425;
  double t9426;
  double t9337;
  double t9338;
  double t9339;
  double t9357;
  double t9360;
  double t9361;
  double t9381;
  double t9385;
  double t9386;
  double t7765;
  double t7788;
  double t7892;
  double t7938;
  double t8057;
  double t8111;
  double t8144;
  double t8227;
  double t8261;
  double t8315;
  double t8318;
  double t9236;
  double t9237;
  double t9238;
  double t9241;
  double t9242;
  double t9243;
  double t9244;
  double t9246;
  double t9247;
  double t9251;
  double t9254;
  double t9109;
  double t9112;
  double t9113;
  double t9114;
  double t9116;
  double t9117;
  double t9118;
  double t9119;
  double t9120;
  double t9121;
  double t9122;
  double t9402;
  double t9404;
  double t9405;
  double t9406;
  double t9410;
  double t9416;
  double t9417;
  double t9419;
  double t9420;
  double t9421;
  double t9423;
  double t9429;
  double t9431;
  double t3303;
  double t4806;
  double t5097;
  double t5249;
  double t5354;
  double t5401;
  double t5464;
  double t5510;
  double t5693;
  double t5695;
  double t5708;
  double t9166;
  double t9167;
  double t9168;
  double t9170;
  double t9175;
  double t9176;
  double t9180;
  double t9181;
  double t9185;
  double t9186;
  double t9187;
  double t9025;
  double t9029;
  double t9030;
  double t9034;
  double t9036;
  double t9037;
  double t9038;
  double t9041;
  double t9044;
  double t9048;
  double t9049;
  double t9474;
  double t9475;
  double t9476;
  double t9477;
  double t9478;
  double t9479;
  double t9481;
  double t9482;
  double t9485;
  double t9487;
  double t9489;
  double t9492;
  double t9493;
  double t9294;
  double t9295;
  double t9299;
  double t9300;
  double t9302;
  double t9311;
  double t9312;
  double t9328;
  double t9333;
  double t9334;
  double t9335;
  double t9341;
  double t9342;
  double t9572;
  double t9573;
  double t9574;
  double t9575;
  double t9576;
  double t9577;
  double t9578;
  double t9580;
  double t9584;
  double t9585;
  double t6043;
  double t6263;
  double t6267;
  double t6272;
  double t6279;
  double t6306;
  double t6308;
  double t6371;
  double t6385;
  double t9197;
  double t9200;
  double t9205;
  double t9206;
  double t9207;
  double t9208;
  double t9210;
  double t9211;
  double t9212;
  double t9061;
  double t9062;
  double t9063;
  double t9065;
  double t9069;
  double t9070;
  double t9073;
  double t9075;
  double t9077;
  double t9496;
  double t9497;
  double t9498;
  double t9500;
  double t9501;
  double t9502;
  double t9503;
  double t9504;
  double t9505;
  double t9506;
  double t9511;
  double t9512;
  double t9513;
  double t9344;
  double t9346;
  double t9353;
  double t9355;
  double t9356;
  double t9362;
  double t9363;
  double t9367;
  double t9368;
  double t9369;
  double t9380;
  double t9391;
  double t9392;
  double t9543;
  double t9546;
  double t9547;
  double t9548;
  double t9549;
  double t9603;
  double t9606;
  double t9609;
  double t9610;
  double t9611;
  double t5736;
  double t5804;
  double t5905;
  double t5946;
  double t5958;
  double t9189;
  double t9190;
  double t9192;
  double t9193;
  double t9194;
  double t9051;
  double t9053;
  double t9054;
  double t9055;
  double t9058;
  double t9465;
  double t9466;
  double t9468;
  double t9469;
  double t9470;
  double t9286;
  double t9287;
  double t9288;
  double t9290;
  double t9291;
  double t9539;
  double t9540;
  double t9541;
  double t9597;
  double t9598;
  double t9599;
  double t1089;
  double t1302;
  double t1312;
  double t9155;
  double t9156;
  double t9157;
  double t9013;
  double t9014;
  double t9017;
  double t9455;
  double t9456;
  double t9458;
  double t9278;
  double t9280;
  double t9282;
  t285 = Cos(var1[11]);
  t314 = Sin(var1[10]);
  t240 = Cos(var1[10]);
  t351 = Sin(var1[11]);
  t801 = -1.*t285*t314;
  t831 = -1.*t240*t351;
  t832 = t801 + t831;
  t528 = Sin(var1[4]);
  t681 = Cos(var1[4]);
  t700 = Cos(var1[5]);
  t788 = Sin(var1[9]);
  t864 = Cos(var1[9]);
  t1103 = -1.*t240*t285;
  t1110 = t314*t351;
  t1118 = t1103 + t1110;
  t868 = Sin(var1[5]);
  t1762 = -0.04*t240;
  t1780 = 0.04*t314;
  t1784 = t1762 + t1780;
  t1748 = 0.055855*t788;
  t1793 = t864*t1784;
  t1794 = t1748 + t1793;
  t1870 = -1.*t864;
  t1906 = 1. + t1870;
  t1908 = 0.081715*t1906;
  t1940 = 0.13757*t864;
  t1948 = -1.*t788*t1784;
  t1956 = t1908 + t1940 + t1948;
  t1345 = -1.*t240;
  t1353 = 1. + t1345;
  t1457 = 0.242889*t1353;
  t1493 = 0.202889*t240;
  t1623 = -0.04*t314;
  t1685 = t1457 + t1493 + t1623;
  t2275 = 0.04*t240;
  t2289 = t2275 + t1780;
  t2079 = -1.*t864*t240*t1794;
  t2094 = t240*t788*t1956;
  t2099 = -1.*t1685*t314;
  t2228 = Power(t864,2);
  t2309 = Power(t788,2);
  t3414 = -1.*t285;
  t3439 = 1. + t3414;
  t3440 = 0.100689*t3439;
  t3445 = 0.080689*t285;
  t3493 = -0.16*t351;
  t3509 = t3440 + t3445 + t3493;
  t3517 = -0.20833*t3439;
  t3520 = -0.36833*t285;
  t3537 = 0.02*t351;
  t3557 = t3517 + t3520 + t3537;
  t311 = t240*t285;
  t355 = -1.*t314*t351;
  t491 = t311 + t355;
  t3781 = 0.242889*t314;
  t3791 = -1.*t314*t3509;
  t3794 = t240*t3557;
  t3799 = t3781 + t3791 + t3794;
  t3737 = 0.035165*t788;
  t3829 = t864*t3799;
  t3831 = t3737 + t3829;
  t3889 = 0.11688*t864;
  t3917 = -1.*t788*t3799;
  t3919 = t1908 + t3889 + t3917;
  t3658 = t285*t314;
  t3693 = t240*t351;
  t3696 = t3658 + t3693;
  t4033 = 0.242889*t240;
  t4034 = -1.*t240*t3509;
  t4038 = -1.*t314*t3557;
  t4136 = t4033 + t4034 + t4038;
  t3515 = t240*t3509;
  t3584 = t314*t3557;
  t3639 = t1457 + t3515 + t3584;
  t3115 = t864*t700;
  t3175 = -1.*t788*t868;
  t3267 = t3115 + t3175;
  t5104 = -1.*t788*t1794;
  t5106 = -1.*t864*t1956;
  t5156 = t5104 + t5106;
  t4821 = t788*t1794;
  t4919 = t864*t1956;
  t4953 = t4821 + t4919;
  t5251 = t240*t528;
  t5264 = t700*t788*t314;
  t5287 = t864*t314*t868;
  t5299 = t5264 + t5287;
  t5333 = t681*t5299;
  t5353 = t5251 + t5333;
  t680 = t491*t528;
  t855 = -1.*t700*t788*t832;
  t936 = -1.*t864*t832*t868;
  t967 = t855 + t936;
  t1013 = t681*t967;
  t1061 = t680 + t1013;
  t5465 = t788*t3831;
  t5467 = t864*t3919;
  t5477 = t5465 + t5467;
  t5402 = -1.*t788*t3831;
  t5444 = -1.*t864*t3919;
  t5449 = t5402 + t5444;
  t1098 = t832*t528;
  t1141 = -1.*t700*t788*t1118;
  t1154 = -1.*t864*t1118*t868;
  t1166 = t1141 + t1154;
  t1196 = t681*t1166;
  t1243 = t1098 + t1196;
  t5171 = -1.*t314*t528;
  t5190 = t240*t700*t788;
  t5207 = t864*t240*t868;
  t5220 = t5190 + t5207;
  t5225 = t681*t5220;
  t5229 = t5171 + t5225;
  t2153 = -1.*t240*t1685;
  t1709 = t240*t1685;
  t2439 = -1.*t1784*t314;
  t3713 = -1.*t3639*t3696;
  t4027 = -1.*t3799*t3696;
  t4224 = -1.*t3639*t491;
  t4399 = t3639*t491;
  t4620 = t3639*t832;
  t4665 = t3799*t491;
  t5008 = t314*t528;
  t5011 = -1.*t240*t700*t788;
  t5013 = -1.*t864*t240*t868;
  t5043 = t5011 + t5013;
  t5066 = t681*t5043;
  t5067 = t5008 + t5066;
  t5564 = t3696*t528;
  t5573 = -1.*t700*t788*t491;
  t5597 = -1.*t864*t491*t868;
  t5617 = t5573 + t5597;
  t5646 = t681*t5617;
  t5665 = t5564 + t5646;
  t6577 = Sin(var1[3]);
  t6599 = Cos(var1[3]);
  t6755 = -1.*t864*t700*t314;
  t6759 = t788*t314*t868;
  t6815 = t6755 + t6759;
  t6862 = t6577*t6815;
  t6876 = t240*t681;
  t6879 = -1.*t528*t5299;
  t6880 = t6876 + t6879;
  t6901 = t6599*t6880;
  t6908 = t6862 + t6901;
  t6926 = t864*t700*t832;
  t6927 = -1.*t788*t832*t868;
  t6928 = t6926 + t6927;
  t6929 = t6577*t6928;
  t6931 = t681*t491;
  t6932 = -1.*t528*t967;
  t6933 = t6931 + t6932;
  t6934 = t6599*t6933;
  t6961 = t6929 + t6934;
  t6578 = t864*t240*t700;
  t6594 = -1.*t240*t788*t868;
  t6597 = t6578 + t6594;
  t6611 = t681*t314;
  t6614 = -1.*t528*t5043;
  t6618 = t6611 + t6614;
  t6645 = -1.*t864*t240*t700;
  t6665 = t240*t788*t868;
  t6723 = t6645 + t6665;
  t6727 = -1.*t681*t314;
  t6732 = -1.*t528*t5220;
  t6738 = t6727 + t6732;
  t7483 = t6599*t6815;
  t7503 = -1.*t6577*t6880;
  t7504 = t7483 + t7503;
  t7513 = t6599*t6928;
  t7523 = -1.*t6577*t6933;
  t7524 = t7513 + t7523;
  t7073 = t864*t700*t491;
  t7076 = -1.*t788*t491*t868;
  t7079 = t7073 + t7076;
  t7113 = t681*t3696;
  t7118 = -1.*t528*t5617;
  t7128 = t7113 + t7118;
  t7189 = t864*t700*t1118;
  t7190 = -1.*t788*t1118*t868;
  t7191 = t7189 + t7190;
  t7213 = t681*t832;
  t7214 = -1.*t528*t1166;
  t7239 = t7213 + t7214;
  t7683 = t700*t788;
  t7685 = t864*t868;
  t7695 = t7683 + t7685;
  t7652 = t700*t1956;
  t7671 = -1.*t1794*t868;
  t7680 = t7652 + t7671;
  t7696 = t700*t1794;
  t7705 = t1956*t868;
  t7706 = t7696 + t7705;
  t7682 = -1.*t3267*t7680;
  t7745 = -1.*t7695*t7706;
  t7749 = t7682 + t7745;
  t7792 = -1.*t700*t788*t2289;
  t7800 = -1.*t864*t2289*t868;
  t7802 = t7792 + t7800;
  t7804 = t864*t700*t2289;
  t7811 = -1.*t788*t2289*t868;
  t7826 = t7804 + t7811;
  t7768 = t3267*t7680;
  t7770 = t7695*t7706;
  t7771 = t7768 + t7770;
  t5998 = -1.*t240*t1784;
  t7752 = t1685*t314;
  t7774 = -1.*t7680*t5299;
  t7775 = -1.*t7706*t6815;
  t7860 = t7680*t5299;
  t7863 = t7706*t6815;
  t2668 = t240*t1784;
  t8058 = t700*t3919;
  t8059 = -1.*t3831*t868;
  t8061 = t8058 + t8059;
  t8064 = t700*t3831;
  t8070 = t3919*t868;
  t8090 = t8064 + t8070;
  t8113 = -1.*t3267*t8061;
  t8114 = -1.*t7695*t8090;
  t8118 = t8113 + t8114;
  t8150 = -1.*t700*t788*t4136;
  t8152 = -1.*t864*t4136*t868;
  t8155 = t8150 + t8152;
  t8175 = t864*t700*t4136;
  t8180 = -1.*t788*t4136*t868;
  t8183 = t8175 + t8180;
  t8062 = t3267*t8061;
  t8092 = t7695*t8090;
  t8095 = t8062 + t8092;
  t6047 = -1.*t3799*t491;
  t8213 = t8061*t967;
  t8217 = t8090*t6928;
  t8103 = -1.*t8061*t967;
  t8104 = -1.*t8090*t6928;
  t7754 = t6597*t7706;
  t8322 = t1685*t528;
  t8323 = t681*t7680;
  t8324 = t8322 + t8323;
  t8328 = t681*t1685;
  t8329 = -1.*t528*t7680;
  t8334 = t8328 + t8329;
  t8325 = -1.*t681*t3267*t8324;
  t8335 = t528*t3267*t8334;
  t8336 = t7745 + t8325 + t8335;
  t7832 = -1.*t7695*t7826;
  t7853 = t6597*t7826;
  t8470 = t1784*t528;
  t8481 = t681*t7802;
  t8485 = t8470 + t8481;
  t8488 = t681*t1784;
  t8489 = -1.*t528*t7802;
  t8492 = t8488 + t8489;
  t8428 = t681*t3267*t8324;
  t8429 = -1.*t528*t3267*t8334;
  t8430 = t7770 + t8428 + t8429;
  t7908 = t7695*t7826;
  t7924 = -1.*t6723*t7706;
  t7931 = -1.*t7826*t6815;
  t7954 = -1.*t6597*t7706;
  t7975 = -1.*t6597*t7826;
  t8441 = -1.*t8324*t5353;
  t8448 = -1.*t8334*t6880;
  t8532 = t8324*t5353;
  t8535 = t8334*t6880;
  t8016 = t6723*t7706;
  t8023 = t7826*t6815;
  t8733 = t3639*t528;
  t8734 = t681*t8061;
  t8767 = t8733 + t8734;
  t8771 = t681*t3639;
  t8772 = -1.*t528*t8061;
  t8773 = t8771 + t8772;
  t8123 = t8090*t7079;
  t8791 = -1.*t681*t3267*t8767;
  t8795 = t528*t3267*t8773;
  t8811 = t8114 + t8791 + t8795;
  t8185 = -1.*t7695*t8183;
  t8223 = t8183*t7079;
  t8885 = t3799*t528;
  t8886 = t681*t8155;
  t8887 = t8885 + t8886;
  t8893 = t681*t3799;
  t8895 = -1.*t528*t8155;
  t8900 = t8893 + t8895;
  t8770 = t681*t3267*t8767;
  t8778 = -1.*t528*t3267*t8773;
  t8779 = t8092 + t8770 + t8778;
  t8239 = t7695*t8183;
  t8248 = -1.*t8183*t6928;
  t8250 = -1.*t8090*t7191;
  t8909 = t8767*t1061;
  t8910 = t8773*t6933;
  t8276 = -1.*t8090*t7079;
  t8290 = -1.*t8183*t7079;
  t8785 = -1.*t8767*t1061;
  t8786 = -1.*t8773*t6933;
  t8305 = t8183*t6928;
  t8309 = t8090*t7191;
  t7548 = t6599*t7191;
  t7549 = -1.*t6577*t7239;
  t7565 = t7548 + t7549;
  t1847 = -1.*t864*t1794*t314;
  t1961 = t788*t1956*t314;
  t1964 = t1709 + t1847 + t1961;
  t2031 = t240*t1964;
  t2109 = t2079 + t2094 + t2099;
  t2111 = -1.*t314*t2109;
  t2296 = -1.*t2228*t240*t2289;
  t2369 = -1.*t240*t2309*t2289;
  t2389 = t864*t1794*t314;
  t2421 = -1.*t788*t1956*t314;
  t2468 = t2153 + t2296 + t2369 + t2389 + t2421 + t2439;
  t2619 = t240*t2468;
  t2759 = -1.*t2228*t2289*t314;
  t2804 = -1.*t2309*t2289*t314;
  t2900 = t2079 + t2094 + t2668 + t2099 + t2759 + t2804;
  t3034 = t314*t2900;
  t3113 = t2031 + t2111 + t2619 + t3034;
  t3881 = -1.*t864*t3831*t491;
  t3967 = t788*t3919*t491;
  t3972 = t3713 + t3881 + t3967;
  t3995 = t832*t3972;
  t4000 = -1.*t864*t3831*t832;
  t4014 = t788*t3919*t832;
  t4156 = -1.*t2228*t4136*t491;
  t4185 = -1.*t2309*t4136*t491;
  t4277 = t4000 + t4014 + t4027 + t4156 + t4185 + t4224;
  t4281 = t491*t4277;
  t4352 = t864*t3831*t832;
  t4379 = -1.*t788*t3919*t832;
  t4444 = t4352 + t4379 + t4399;
  t4459 = t491*t4444;
  t4475 = t2228*t4136*t832;
  t4548 = t2309*t4136*t832;
  t4667 = t864*t3831*t1118;
  t4670 = -1.*t788*t3919*t1118;
  t4708 = t4475 + t4548 + t4620 + t4665 + t4667 + t4670;
  t4716 = t3696*t4708;
  t4792 = t3995 + t4281 + t4459 + t4716;
  t9021 = t6599*t7695;
  t9023 = t6577*t528*t3267;
  t9024 = t9021 + t9023;
  t7281 = t6599*t6597;
  t7324 = -1.*t6577*t6618;
  t7349 = t7281 + t7324;
  t7356 = t6599*t6723;
  t7369 = -1.*t6577*t6738;
  t7478 = t7356 + t7369;
  t7537 = t6599*t7079;
  t7538 = -1.*t6577*t7128;
  t7546 = t7537 + t7538;
  t5885 = 0.242889*t285;
  t5891 = -1.*t285*t3509;
  t5894 = t3557*t351;
  t5900 = t5885 + t5891 + t5894;
  t5906 = t285*t3557;
  t5910 = -0.242889*t351;
  t5913 = t3509*t351;
  t5937 = t5906 + t5910 + t5913;
  t5967 = -1.*t240*t2289;
  t5974 = t2153 + t5967;
  t5975 = t240*t5974;
  t6003 = t5998 + t2099;
  t6009 = -1.*t314*t6003;
  t6011 = t1709 + t2439;
  t6012 = t240*t6011;
  t6015 = -1.*t2289*t314;
  t6017 = t2099 + t6015;
  t6019 = t314*t6017;
  t6042 = t5975 + t6009 + t6012 + t6019;
  t6048 = t3713 + t6047;
  t6052 = t832*t6048;
  t6069 = -1.*t3799*t832;
  t6084 = -1.*t4136*t491;
  t6111 = t6069 + t4027 + t6084 + t4224;
  t6113 = t491*t6111;
  t6138 = t3799*t832;
  t6163 = t6138 + t4399;
  t6188 = t491*t6163;
  t6200 = t4136*t832;
  t6217 = t3799*t1118;
  t6246 = t6200 + t4620 + t4665 + t6217;
  t6258 = t3696*t6246;
  t6261 = t6052 + t6113 + t6188 + t6258;
  t6284 = -0.11688*t491;
  t6294 = -0.081715*t1118;
  t6304 = t6284 + t6294;
  t6315 = -0.081715*t832;
  t6321 = -0.11688*t3696;
  t6338 = t6315 + t6321;
  t7352 = 1.527*t5353*t7349;
  t7481 = 1.527*t5353*t7478;
  t7506 = 1.527*t5067*t7504;
  t7512 = 1.527*t5229*t7504;
  t7527 = 0.241*t5665*t7524;
  t7534 = 0.241*t1243*t7524;
  t7547 = 0.241*t1061*t7546;
  t7566 = 0.241*t1061*t7565;
  t7618 = t7352 + t7481 + t7506 + t7512 + t7527 + t7534 + t7547 + t7566;
  t6598 = t6577*t6597;
  t6626 = t6599*t6618;
  t6637 = t6598 + t6626;
  t6724 = t6577*t6723;
  t6739 = t6599*t6738;
  t6743 = t6724 + t6739;
  t7099 = t6577*t7079;
  t7130 = t6599*t7128;
  t7137 = t7099 + t7130;
  t7197 = t6577*t7191;
  t7240 = t6599*t7239;
  t7245 = t7197 + t7240;
  t7750 = t6597*t7749;
  t7753 = t5043*t7680;
  t7755 = t7752 + t7753 + t7754;
  t7762 = t7695*t7755;
  t7764 = t7750 + t7762;
  t7773 = t6815*t7771;
  t7776 = t2153 + t7774 + t7775;
  t7779 = t7695*t7776;
  t7784 = t7773 + t7779;
  t7790 = t6815*t7749;
  t7803 = -1.*t3267*t7802;
  t7833 = t7803 + t7832;
  t7835 = t6597*t7833;
  t7844 = t1784*t314;
  t7852 = t5043*t7802;
  t7864 = t1709 + t7844 + t7852 + t7853 + t7860 + t7863;
  t7868 = t7695*t7864;
  t7872 = t7790 + t7835 + t7868;
  t7899 = t6723*t7771;
  t7905 = t3267*t7802;
  t7909 = t7905 + t7908;
  t7917 = t6815*t7909;
  t7921 = -1.*t5220*t7680;
  t7927 = -1.*t7802*t5299;
  t7932 = t5998 + t7752 + t7921 + t7924 + t7927 + t7931;
  t7935 = t7695*t7932;
  t7937 = t7899 + t7917 + t7935;
  t7940 = -1.*t5043*t7680;
  t7961 = t2099 + t7940 + t7954;
  t7962 = t6723*t7961;
  t7964 = -1.*t5043*t7802;
  t7989 = t2153 + t2439 + t7964 + t7975 + t7774 + t7775;
  t7994 = t6815*t7989;
  t7997 = t1709 + t7860 + t7863;
  t8000 = t6815*t7997;
  t8009 = t5220*t7680;
  t8021 = t7802*t5299;
  t8028 = t2668 + t2099 + t8009 + t8016 + t8021 + t8023;
  t8042 = t6597*t8028;
  t8052 = t7962 + t7994 + t8000 + t8042;
  t8099 = t6928*t8095;
  t8106 = t4224 + t8103 + t8104;
  t8107 = t7695*t8106;
  t8109 = t8099 + t8107;
  t8148 = t6928*t8118;
  t8169 = -1.*t3267*t8155;
  t8193 = t8169 + t8185;
  t8204 = t7079*t8193;
  t8205 = t3799*t3696;
  t8218 = t8155*t5617;
  t8224 = t8205 + t4399 + t8213 + t8217 + t8218 + t8223;
  t8225 = t7695*t8224;
  t8226 = t8148 + t8204 + t8225;
  t8119 = t7079*t8118;
  t8120 = t3639*t3696;
  t8122 = t8061*t5617;
  t8130 = t8120 + t8122 + t8123;
  t8139 = t7695*t8130;
  t8142 = t8119 + t8139;
  t8235 = t7191*t8095;
  t8236 = t3267*t8155;
  t8240 = t8236 + t8239;
  t8241 = t6928*t8240;
  t8243 = -1.*t3639*t832;
  t8247 = -1.*t8155*t967;
  t8249 = -1.*t8061*t1166;
  t8254 = t8243 + t6047 + t8247 + t8248 + t8249 + t8250;
  t8255 = t7695*t8254;
  t8257 = t8235 + t8241 + t8255;
  t8267 = t4399 + t8213 + t8217;
  t8268 = t6928*t8267;
  t8271 = -1.*t8061*t5617;
  t8280 = t3713 + t8271 + t8276;
  t8281 = t7191*t8280;
  t8286 = -1.*t8155*t5617;
  t8291 = t4027 + t4224 + t8103 + t8104 + t8286 + t8290;
  t8292 = t6928*t8291;
  t8293 = t8155*t967;
  t8307 = t8061*t1166;
  t8310 = t4620 + t4665 + t8293 + t8305 + t8307 + t8309;
  t8312 = t7079*t8310;
  t8314 = t8268 + t8281 + t8292 + t8312;
  t8343 = t5067*t8336;
  t8345 = t5067*t8324;
  t8349 = t6618*t8334;
  t8350 = t7754 + t8345 + t8349;
  t8385 = t681*t3267*t8350;
  t8424 = t8343 + t8385;
  t8431 = t5353*t8430;
  t8450 = t7775 + t8441 + t8448;
  t8460 = t681*t3267*t8450;
  t8466 = t8431 + t8460;
  t8468 = t5353*t8336;
  t8486 = -1.*t681*t3267*t8485;
  t8493 = t528*t3267*t8492;
  t8494 = t7832 + t8486 + t8493;
  t8496 = t5067*t8494;
  t8503 = t5067*t8485;
  t8504 = t6618*t8492;
  t8536 = t7853 + t7863 + t8503 + t8504 + t8532 + t8535;
  t8537 = t681*t3267*t8536;
  t8541 = t8468 + t8496 + t8537;
  t8544 = t5229*t8430;
  t8545 = t681*t3267*t8485;
  t8546 = -1.*t528*t3267*t8492;
  t8547 = t7908 + t8545 + t8546;
  t8548 = t5353*t8547;
  t8549 = -1.*t5229*t8324;
  t8554 = -1.*t6738*t8334;
  t8556 = -1.*t8485*t5353;
  t8557 = -1.*t8492*t6880;
  t8558 = t7924 + t7931 + t8549 + t8554 + t8556 + t8557;
  t8587 = t681*t3267*t8558;
  t8622 = t8544 + t8548 + t8587;
  t8634 = -1.*t5067*t8324;
  t8636 = -1.*t6618*t8334;
  t8637 = t7954 + t8634 + t8636;
  t8639 = t5229*t8637;
  t8640 = -1.*t5067*t8485;
  t8645 = -1.*t6618*t8492;
  t8647 = t7975 + t7775 + t8640 + t8645 + t8441 + t8448;
  t8651 = t5353*t8647;
  t8656 = t7863 + t8532 + t8535;
  t8669 = t5353*t8656;
  t8673 = t5229*t8324;
  t8695 = t6738*t8334;
  t8707 = t8485*t5353;
  t8712 = t8492*t6880;
  t8715 = t8016 + t8023 + t8673 + t8695 + t8707 + t8712;
  t8716 = t5067*t8715;
  t8724 = t8639 + t8651 + t8669 + t8716;
  t8783 = t1061*t8779;
  t8787 = t8104 + t8785 + t8786;
  t8788 = t681*t3267*t8787;
  t8789 = t8783 + t8788;
  t8813 = t5665*t8811;
  t8829 = t8767*t5665;
  t8838 = t8773*t7128;
  t8839 = t8123 + t8829 + t8838;
  t8843 = t681*t3267*t8839;
  t8854 = t8813 + t8843;
  t8884 = t1061*t8811;
  t8892 = -1.*t681*t3267*t8887;
  t8902 = t528*t3267*t8900;
  t8904 = t8185 + t8892 + t8902;
  t8908 = t5665*t8904;
  t8912 = t8887*t5665;
  t8914 = t8900*t7128;
  t8915 = t8217 + t8223 + t8909 + t8910 + t8912 + t8914;
  t8916 = t681*t3267*t8915;
  t8918 = t8884 + t8908 + t8916;
  t8928 = t1243*t8779;
  t8937 = t681*t3267*t8887;
  t8939 = -1.*t528*t3267*t8900;
  t8940 = t8239 + t8937 + t8939;
  t8945 = t1061*t8940;
  t8946 = -1.*t8887*t1061;
  t8949 = -1.*t8900*t6933;
  t8950 = -1.*t8767*t1243;
  t8951 = -1.*t8773*t7239;
  t8960 = t8248 + t8250 + t8946 + t8949 + t8950 + t8951;
  t8965 = t681*t3267*t8960;
  t8966 = t8928 + t8945 + t8965;
  t8969 = t8217 + t8909 + t8910;
  t8970 = t1061*t8969;
  t8971 = -1.*t8767*t5665;
  t8981 = -1.*t8773*t7128;
  t8987 = t8276 + t8971 + t8981;
  t8989 = t1243*t8987;
  t8993 = -1.*t8887*t5665;
  t8994 = -1.*t8900*t7128;
  t8995 = t8104 + t8290 + t8785 + t8786 + t8993 + t8994;
  t8996 = t1061*t8995;
  t8997 = t8887*t1061;
  t8998 = t8900*t6933;
  t8999 = t8767*t1243;
  t9000 = t8773*t7239;
  t9001 = t8305 + t8309 + t8997 + t8998 + t8999 + t9000;
  t9002 = t5665*t9001;
  t9003 = t8970 + t8989 + t8996 + t9002;
  t9161 = t6577*t7695;
  t9163 = -1.*t6599*t528*t3267;
  t9165 = t9161 + t9163;
  t6643 = 1.527*t5353*t6637;
  t6753 = 1.527*t5353*t6743;
  t6922 = 1.527*t5067*t6908;
  t6924 = 1.527*t5229*t6908;
  t7051 = 0.241*t5665*t6961;
  t7053 = 0.241*t1243*t6961;
  t7184 = 0.241*t1061*t7137;
  t7246 = 0.241*t1061*t7245;
  t7278 = t6643 + t6753 + t6922 + t6924 + t7051 + t7053 + t7184 + t7246;
  t9083 = 1.527*t7349*t6908;
  t9084 = 1.527*t7478*t6908;
  t9086 = 1.527*t6637*t7504;
  t9087 = 1.527*t6743*t7504;
  t9088 = 0.241*t7524*t7137;
  t9089 = 0.241*t6961*t7546;
  t9090 = 0.241*t7524*t7245;
  t9091 = 0.241*t6961*t7565;
  t9094 = t9083 + t9084 + t9086 + t9087 + t9088 + t9089 + t9090 + t9091;
  t9296 = t5353*t8637;
  t9297 = t5067*t8656;
  t9298 = t9296 + t9297;
  t9313 = t5665*t8969;
  t9322 = t1061*t8987;
  t9326 = t9313 + t9322;
  t8425 = 1.527*t5229*t8424;
  t8467 = 1.527*t5353*t8466;
  t8542 = 1.527*t5353*t8541;
  t8633 = 1.527*t5067*t8622;
  t8731 = 1.527*t681*t3267*t8724;
  t8790 = 0.241*t1061*t8789;
  t8867 = 0.241*t1243*t8854;
  t8924 = 0.241*t1061*t8918;
  t8967 = 0.241*t5665*t8966;
  t9005 = 0.241*t681*t3267*t9003;
  t9007 = t8425 + t8467 + t8542 + t8633 + t8731 + t8790 + t8867 + t8924 + t8967 + t9005;
  t9257 = 1.527*t6743*t8424;
  t9258 = 1.527*t6908*t8466;
  t9259 = 1.527*t6908*t8541;
  t9260 = 1.527*t6637*t8622;
  t9262 = 1.527*t9165*t8724;
  t9263 = 0.241*t6961*t8789;
  t9265 = 0.241*t7245*t8854;
  t9269 = 0.241*t6961*t8918;
  t9270 = 0.241*t7137*t8966;
  t9271 = 0.241*t9165*t9003;
  t9272 = t9257 + t9258 + t9259 + t9260 + t9262 + t9263 + t9265 + t9269 + t9270 + t9271;
  t9130 = 1.527*t7478*t8424;
  t9133 = 1.527*t7504*t8466;
  t9135 = 1.527*t7504*t8541;
  t9136 = 1.527*t7349*t8622;
  t9138 = 1.527*t9024*t8724;
  t9139 = 0.241*t7524*t8789;
  t9141 = 0.241*t7565*t8854;
  t9142 = 0.241*t7524*t8918;
  t9143 = 0.241*t7546*t8966;
  t9144 = 0.241*t9024*t9003;
  t9145 = t9130 + t9133 + t9135 + t9136 + t9138 + t9139 + t9141 + t9142 + t9143 + t9144;
  t9412 = t6815*t7961;
  t9413 = t6597*t7997;
  t9414 = t9412 + t9413;
  t9303 = t314*t1964;
  t9304 = t240*t2109;
  t9308 = t9303 + t9304;
  t9424 = t7079*t8267;
  t9425 = t6928*t8280;
  t9426 = t9424 + t9425;
  t9337 = t491*t3972;
  t9338 = t3696*t4444;
  t9339 = t9337 + t9338;
  t9357 = t240*t6003;
  t9360 = t314*t6011;
  t9361 = t9357 + t9360;
  t9381 = t491*t6048;
  t9385 = t3696*t6163;
  t9386 = t9381 + t9385;
  t7765 = 1.527*t5229*t7764;
  t7788 = 1.527*t5353*t7784;
  t7892 = 1.527*t5353*t7872;
  t7938 = 1.527*t5067*t7937;
  t8057 = 1.527*t681*t3267*t8052;
  t8111 = 0.241*t1061*t8109;
  t8144 = 0.241*t1243*t8142;
  t8227 = 0.241*t1061*t8226;
  t8261 = 0.241*t5665*t8257;
  t8315 = 0.241*t681*t3267*t8314;
  t8318 = t7765 + t7788 + t7892 + t7938 + t8057 + t8111 + t8144 + t8227 + t8261 + t8315;
  t9236 = 1.527*t6743*t7764;
  t9237 = 1.527*t6908*t7784;
  t9238 = 1.527*t6908*t7872;
  t9241 = 1.527*t6637*t7937;
  t9242 = 1.527*t9165*t8052;
  t9243 = 0.241*t6961*t8109;
  t9244 = 0.241*t6961*t8226;
  t9246 = 0.241*t8142*t7245;
  t9247 = 0.241*t7137*t8257;
  t9251 = 0.241*t9165*t8314;
  t9254 = t9236 + t9237 + t9238 + t9241 + t9242 + t9243 + t9244 + t9246 + t9247 + t9251;
  t9109 = 1.527*t7478*t7764;
  t9112 = 1.527*t7504*t7784;
  t9113 = 1.527*t7504*t7872;
  t9114 = 1.527*t7349*t7937;
  t9116 = 1.527*t9024*t8052;
  t9117 = 0.241*t7524*t8109;
  t9118 = 0.241*t7524*t8226;
  t9119 = 0.241*t8142*t7565;
  t9120 = 0.241*t7546*t8257;
  t9121 = 0.241*t9024*t8314;
  t9122 = t9109 + t9112 + t9113 + t9114 + t9116 + t9117 + t9118 + t9119 + t9120 + t9121;
  t9402 = 1.527*t7872*t8424;
  t9404 = 1.527*t7937*t8466;
  t9405 = 1.527*t8052*t9298;
  t9406 = 1.527*t7764*t8541;
  t9410 = 1.527*t7784*t8622;
  t9416 = 1.527*t9414*t8724;
  t9417 = 0.241*t8257*t8789;
  t9419 = 0.241*t8314*t9326;
  t9420 = 0.241*t8226*t8854;
  t9421 = 0.241*t8142*t8918;
  t9423 = 0.241*t8109*t8966;
  t9429 = 0.241*t9426*t9003;
  t9431 = t9402 + t9404 + t9405 + t9406 + t9410 + t9416 + t9417 + t9419 + t9420 + t9421 + t9423 + t9429;
  t3303 = 1.527*t681*t3113*t3267;
  t4806 = 0.241*t681*t4792*t3267;
  t5097 = -1.527*t4953*t314*t5067;
  t5249 = 1.527*t5156*t314*t5229;
  t5354 = 1.527*t240*t5156*t5353;
  t5401 = 1.527*t240*t4953*t5353;
  t5464 = 0.241*t5449*t491*t1061;
  t5510 = 0.241*t5477*t491*t1061;
  t5693 = 0.241*t5477*t832*t5665;
  t5695 = 0.241*t5449*t3696*t1243;
  t5708 = t3303 + t4806 + t5097 + t5249 + t5354 + t5401 + t5464 + t5510 + t5693 + t5695;
  t9166 = 1.527*t3113*t9165;
  t9167 = 0.241*t4792*t9165;
  t9168 = -1.527*t4953*t314*t6637;
  t9170 = 1.527*t5156*t314*t6743;
  t9175 = 1.527*t240*t5156*t6908;
  t9176 = 1.527*t240*t4953*t6908;
  t9180 = 0.241*t5449*t491*t6961;
  t9181 = 0.241*t5477*t491*t6961;
  t9185 = 0.241*t5477*t832*t7137;
  t9186 = 0.241*t5449*t3696*t7245;
  t9187 = t9166 + t9167 + t9168 + t9170 + t9175 + t9176 + t9180 + t9181 + t9185 + t9186;
  t9025 = 1.527*t3113*t9024;
  t9029 = 0.241*t4792*t9024;
  t9030 = -1.527*t4953*t314*t7349;
  t9034 = 1.527*t5156*t314*t7478;
  t9036 = 1.527*t240*t5156*t7504;
  t9037 = 1.527*t240*t4953*t7504;
  t9038 = 0.241*t5449*t491*t7524;
  t9041 = 0.241*t5477*t491*t7524;
  t9044 = 0.241*t5477*t832*t7546;
  t9048 = 0.241*t5449*t3696*t7565;
  t9049 = t9025 + t9029 + t9030 + t9034 + t9036 + t9037 + t9038 + t9041 + t9044 + t9048;
  t9474 = 1.527*t240*t5156*t7764;
  t9475 = -1.527*t4953*t314*t7784;
  t9476 = 1.527*t3113*t9414;
  t9477 = 1.527*t5156*t314*t7872;
  t9478 = 1.527*t240*t4953*t7937;
  t9479 = 1.527*t9308*t8052;
  t9481 = 0.241*t5477*t832*t8109;
  t9482 = 0.241*t4792*t9426;
  t9485 = 0.241*t5449*t491*t8142;
  t9487 = 0.241*t5449*t3696*t8226;
  t9489 = 0.241*t5477*t491*t8257;
  t9492 = 0.241*t9339*t8314;
  t9493 = t9474 + t9475 + t9476 + t9477 + t9478 + t9479 + t9481 + t9482 + t9485 + t9487 + t9489 + t9492;
  t9294 = 1.527*t240*t5156*t8424;
  t9295 = -1.527*t4953*t314*t8466;
  t9299 = 1.527*t3113*t9298;
  t9300 = 1.527*t5156*t314*t8541;
  t9302 = 1.527*t240*t4953*t8622;
  t9311 = 1.527*t9308*t8724;
  t9312 = 0.241*t5477*t832*t8789;
  t9328 = 0.241*t4792*t9326;
  t9333 = 0.241*t5449*t491*t8854;
  t9334 = 0.241*t5449*t3696*t8918;
  t9335 = 0.241*t5477*t491*t8966;
  t9341 = 0.241*t9339*t9003;
  t9342 = t9294 + t9295 + t9299 + t9300 + t9302 + t9311 + t9312 + t9328 + t9333 + t9334 + t9335 + t9341;
  t9572 = -0.17058117*t240*t5156*t314;
  t9573 = -0.17058117*t240*t4953*t314;
  t9574 = 1.527*t9308*t6042;
  t9575 = 1.527*t9361*t3113;
  t9576 = 0.01694953*t5477*t832*t491;
  t9577 = 0.241*t5449*t491*t6338;
  t9578 = 0.241*t5449*t3696*t6304;
  t9580 = 0.241*t9386*t4792;
  t9584 = 0.241*t9339*t6261;
  t9585 = t9572 + t9573 + t9574 + t9575 + t9576 + t9577 + t9578 + t9580 + t9584;
  t6043 = 1.527*t681*t6042*t3267;
  t6263 = 0.241*t681*t6261*t3267;
  t6267 = -0.085290585*t314*t5067;
  t6272 = -0.085290585*t314*t5229;
  t6279 = 0.008474765*t491*t1061;
  t6306 = 0.241*t6304*t1061;
  t6308 = 0.008474765*t832*t5665;
  t6371 = 0.241*t6338*t1243;
  t6385 = t6043 + t6263 + t6267 + t6272 + t6279 + t6306 + t6308 + t6371;
  t9197 = 1.527*t6042*t9165;
  t9200 = 0.241*t6261*t9165;
  t9205 = -0.085290585*t314*t6637;
  t9206 = -0.085290585*t314*t6743;
  t9207 = 0.008474765*t491*t6961;
  t9208 = 0.241*t6304*t6961;
  t9210 = 0.008474765*t832*t7137;
  t9211 = 0.241*t6338*t7245;
  t9212 = t9197 + t9200 + t9205 + t9206 + t9207 + t9208 + t9210 + t9211;
  t9061 = 1.527*t6042*t9024;
  t9062 = 0.241*t6261*t9024;
  t9063 = -0.085290585*t314*t7349;
  t9065 = -0.085290585*t314*t7478;
  t9069 = 0.008474765*t491*t7524;
  t9070 = 0.241*t6304*t7524;
  t9073 = 0.008474765*t832*t7546;
  t9075 = 0.241*t6338*t7565;
  t9077 = t9061 + t9062 + t9063 + t9065 + t9069 + t9070 + t9073 + t9075;
  t9496 = -0.085290585*t240*t7764;
  t9497 = -0.085290585*t314*t7784;
  t9498 = 1.527*t6042*t9414;
  t9500 = -0.085290585*t314*t7872;
  t9501 = 0.085290585*t240*t7937;
  t9502 = 1.527*t9361*t8052;
  t9503 = 0.008474765*t832*t8109;
  t9504 = 0.241*t6261*t9426;
  t9505 = 0.241*t6304*t8142;
  t9506 = 0.241*t6338*t8226;
  t9511 = 0.008474765*t491*t8257;
  t9512 = 0.241*t9386*t8314;
  t9513 = t9496 + t9497 + t9498 + t9500 + t9501 + t9502 + t9503 + t9504 + t9505 + t9506 + t9511 + t9512;
  t9344 = -0.085290585*t240*t8424;
  t9346 = -0.085290585*t314*t8466;
  t9353 = 1.527*t6042*t9298;
  t9355 = -0.085290585*t314*t8541;
  t9356 = 0.085290585*t240*t8622;
  t9362 = 1.527*t9361*t8724;
  t9363 = 0.008474765*t832*t8789;
  t9367 = 0.241*t6261*t9326;
  t9368 = 0.241*t6304*t8854;
  t9369 = 0.241*t6338*t8918;
  t9380 = 0.008474765*t491*t8966;
  t9391 = 0.241*t9386*t9003;
  t9392 = t9344 + t9346 + t9353 + t9355 + t9356 + t9362 + t9363 + t9367 + t9368 + t9369 + t9380 + t9391;
  t9543 = -0.06108*t240*t5156;
  t9546 = -0.06108*t4953*t314;
  t9547 = 0.241*t5449*t491*t5937;
  t9548 = 0.241*t5477*t832*t5900;
  t9549 = t9543 + t9546 + t9547 + t9548;
  t9603 = 0.0034116234*t240;
  t9606 = -0.0034116234*t314;
  t9609 = 0.008474765*t832*t5900;
  t9610 = 0.241*t5937*t6304;
  t9611 = t9603 + t9606 + t9609 + t9610;
  t5736 = -0.06108*t5229;
  t5804 = 0.06108*t5353;
  t5905 = 0.241*t5900*t1061;
  t5946 = 0.241*t5937*t1243;
  t5958 = t5736 + t5804 + t5905 + t5946;
  t9189 = -0.06108*t6743;
  t9190 = 0.06108*t6908;
  t9192 = 0.241*t5900*t6961;
  t9193 = 0.241*t5937*t7245;
  t9194 = t9189 + t9190 + t9192 + t9193;
  t9051 = -0.06108*t7478;
  t9053 = 0.06108*t7504;
  t9054 = 0.241*t5900*t7524;
  t9055 = 0.241*t5937*t7565;
  t9058 = t9051 + t9053 + t9054 + t9055;
  t9465 = -0.06108*t7872;
  t9466 = 0.06108*t7937;
  t9468 = 0.241*t5937*t8226;
  t9469 = 0.241*t5900*t8257;
  t9470 = t9465 + t9466 + t9468 + t9469;
  t9286 = -0.06108*t8541;
  t9287 = 0.06108*t8622;
  t9288 = 0.241*t5937*t8918;
  t9290 = 0.241*t5900*t8966;
  t9291 = t9286 + t9287 + t9288 + t9290;
  t9539 = 0.00482*t5477*t832;
  t9540 = -0.03856*t5449*t491;
  t9541 = t9539 + t9540;
  t9597 = 0.0001694953*t832;
  t9598 = -0.03856*t6304;
  t9599 = t9597 + t9598;
  t1089 = 0.00482*t1061;
  t1302 = -0.03856*t1243;
  t1312 = t1089 + t1302;
  t9155 = 0.00482*t6961;
  t9156 = -0.03856*t7245;
  t9157 = t9155 + t9156;
  t9013 = 0.00482*t7524;
  t9014 = -0.03856*t7565;
  t9017 = t9013 + t9014;
  t9455 = -0.03856*t8226;
  t9456 = 0.00482*t8257;
  t9458 = t9455 + t9456;
  t9278 = -0.03856*t8918;
  t9280 = 0.00482*t8966;
  t9282 = t9278 + t9280;
  p_output1[0]=var2[10]*(-0.5*(0.482*t1061*t1243 + 3.054*t5067*t5353 + 3.054*t5229*t5353 + 0.482*t1061*t5665)*var2[0] - 0.5*t7618*var2[1] - 0.5*t7278*var2[2] - 0.5*t9007*var2[3] - 0.5*t8318*var2[4] - 0.5*t5708*var2[5] - 0.5*t6385*var2[9] - 0.5*t5958*var2[10] - 0.5*t1312*var2[11]);
  p_output1[1]=var2[10]*(-0.5*t7618*var2[0] - 0.5*(3.054*t7349*t7504 + 3.054*t7478*t7504 + 0.482*t7524*t7546 + 0.482*t7524*t7565)*var2[1] - 0.5*t9094*var2[2] - 0.5*t9145*var2[3] - 0.5*t9122*var2[4] - 0.5*t9049*var2[5] - 0.5*t9077*var2[9] - 0.5*t9058*var2[10] - 0.5*t9017*var2[11]);
  p_output1[2]=var2[10]*(-0.5*t7278*var2[0] - 0.5*t9094*var2[1] - 0.5*(3.054*t6637*t6908 + 3.054*t6743*t6908 + 0.482*t6961*t7137 + 0.482*t6961*t7245)*var2[2] - 0.5*t9272*var2[3] - 0.5*t9254*var2[4] - 0.5*t9187*var2[5] - 0.5*t9212*var2[9] - 0.5*t9194*var2[10] - 0.5*t9157*var2[11]);
  p_output1[3]=var2[10]*(-0.5*t9007*var2[0] - 0.5*t9145*var2[1] - 0.5*t9272*var2[2] - 0.5*(3.054*t8424*t8541 + 3.054*t8466*t8622 + 0.482*t8854*t8918 + 0.482*t8789*t8966 + 3.054*t8724*t9298 + 0.482*t9003*t9326)*var2[3] - 0.5*t9431*var2[4] - 0.5*t9342*var2[5] - 0.5*t9392*var2[9] - 0.5*t9291*var2[10] - 0.5*t9282*var2[11]);
  p_output1[4]=var2[10]*(-0.5*t8318*var2[0] - 0.5*t9122*var2[1] - 0.5*t9254*var2[2] - 0.5*t9431*var2[3] - 0.5*(3.054*t7764*t7872 + 3.054*t7784*t7937 + 0.482*t8142*t8226 + 0.482*t8109*t8257 + 3.054*t8052*t9414 + 0.482*t8314*t9426)*var2[4] - 0.5*t9493*var2[5] - 0.5*t9513*var2[9] - 0.5*t9470*var2[10] - 0.5*t9458*var2[11]);
  p_output1[5]=var2[10]*(-0.5*t5708*var2[0] - 0.5*t9049*var2[1] - 0.5*t9187*var2[2] - 0.5*t9342*var2[3] - 0.5*t9493*var2[4] - 0.5*(-3.054*t240*t314*Power(t4953,2) + 3.054*t240*t314*Power(t5156,2) + 0.482*t3696*t491*Power(t5449,2) + 0.482*t491*Power(t5477,2)*t832 + 3.054*t3113*t9308 + 0.482*t4792*t9339)*var2[5] - 0.5*t9585*var2[9] - 0.5*t9549*var2[10] - 0.5*t9541*var2[11]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=var2[10]*(-0.5*t6385*var2[0] - 0.5*t9077*var2[1] - 0.5*t9212*var2[2] - 0.5*t9392*var2[3] - 0.5*t9513*var2[4] - 0.5*t9585*var2[5] - 0.5*(0.482*t6304*t6338 + 0.00059603022245*t491*t832 + 3.054*t6042*t9361 + 0.482*t6261*t9386)*var2[9] - 0.5*t9611*var2[10] - 0.5*t9599*var2[11]);
  p_output1[10]=(-0.5*t5958*var2[0] - 0.5*t9058*var2[1] - 0.5*t9194*var2[2] - 0.5*t9291*var2[3] - 0.5*t9470*var2[4] - 0.5*t9549*var2[5] - 0.5*t9611*var2[9])*var2[10];
  p_output1[11]=(-0.5*t1312*var2[0] - 0.5*t9017*var2[1] - 0.5*t9157*var2[2] - 0.5*t9282*var2[3] - 0.5*t9458*var2[4] - 0.5*t9541*var2[5] - 0.5*t9599*var2[9])*var2[10];
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec11_plane.hh"

namespace SymFunction
{

void Ce2_vec11_plane_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
