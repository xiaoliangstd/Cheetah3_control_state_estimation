/*
 * Automatically Generated from Mathematica.
 * Fri 7 Aug 2020 13:33:41 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t51;
  double t19;
  double t46;
  double t23;
  double t53;
  double t58;
  double t60;
  double t61;
  double t48;
  double t54;
  double t55;
  double t69;
  double t67;
  double t75;
  double t82;
  double t84;
  double t85;
  double t74;
  double t79;
  double t80;
  double t101;
  double t105;
  double t110;
  double t62;
  double t126;
  double t127;
  double t128;
  double t130;
  double t131;
  double t136;
  double t140;
  double t144;
  double t145;
  double t149;
  double t150;
  double t151;
  double t111;
  double t113;
  double t121;
  double t187;
  double t190;
  double t191;
  double t192;
  double t199;
  double t200;
  double t206;
  double t56;
  double t232;
  double t231;
  double t223;
  double t224;
  double t233;
  double t234;
  double t237;
  double t238;
  double t239;
  double t245;
  double t246;
  double t241;
  double t220;
  double t129;
  double t257;
  double t266;
  double t267;
  double t268;
  double t271;
  double t272;
  double t273;
  double t242;
  double t243;
  double t188;
  double t296;
  double t297;
  double t298;
  double t300;
  double t304;
  double t305;
  double t330;
  double t329;
  double t327;
  double t328;
  double t331;
  double t332;
  double t334;
  double t335;
  double t338;
  double t347;
  double t348;
  double t340;
  double t323;
  double t354;
  double t365;
  double t366;
  double t369;
  double t371;
  double t372;
  double t373;
  double t341;
  double t345;
  double t392;
  double t393;
  double t395;
  double t397;
  double t398;
  double t399;
  double t322;
  double t420;
  double t419;
  double t416;
  double t417;
  double t421;
  double t422;
  double t426;
  double t427;
  double t428;
  double t438;
  double t439;
  double t430;
  double t414;
  double t364;
  double t447;
  double t453;
  double t454;
  double t455;
  double t458;
  double t459;
  double t460;
  double t431;
  double t432;
  double t391;
  double t479;
  double t480;
  double t482;
  double t484;
  double t485;
  double t486;
  double t514;
  double t515;
  double t516;
  double t517;
  double t524;
  double t525;
  double t527;
  double t518;
  double t520;
  double t522;
  double t504;
  double t551;
  double t553;
  double t554;
  double t559;
  double t560;
  double t561;
  double t555;
  double t556;
  double t557;
  double t594;
  double t596;
  double t597;
  double t604;
  double t608;
  double t609;
  double t599;
  double t601;
  double t602;
  double t502;
  double t646;
  double t647;
  double t648;
  double t653;
  double t654;
  double t644;
  double t655;
  double t656;
  double t658;
  double t659;
  double t660;
  double t538;
  double t639;
  double t694;
  double t698;
  double t699;
  double t693;
  double t702;
  double t703;
  double t705;
  double t706;
  double t707;
  double t581;
  double t737;
  double t738;
  double t739;
  double t736;
  double t740;
  double t741;
  double t744;
  double t745;
  double t750;
  double t635;
  double t772;
  double t773;
  double t776;
  double t777;
  double t778;
  double t771;
  double t779;
  double t780;
  double t782;
  double t783;
  double t784;
  double t684;
  double t767;
  double t809;
  double t810;
  double t811;
  double t808;
  double t812;
  double t813;
  double t815;
  double t816;
  double t817;
  double t729;
  double t841;
  double t842;
  double t845;
  double t839;
  double t846;
  double t847;
  double t851;
  double t852;
  double t853;
  double t765;
  double t503;
  double t876;
  double t877;
  double t878;
  double t879;
  double t875;
  double t880;
  double t881;
  double t885;
  double t886;
  double t887;
  double t800;
  double t541;
  double t870;
  double t906;
  double t907;
  double t909;
  double t905;
  double t912;
  double t913;
  double t917;
  double t919;
  double t920;
  double t580;
  double t834;
  double t945;
  double t948;
  double t949;
  double t944;
  double t950;
  double t951;
  double t953;
  double t955;
  double t957;
  double t969;
  double t970;
  double t971;
  double t981;
  double t982;
  double t983;
  double t988;
  double t989;
  double t994;
  double t984;
  double t985;
  double t986;
  double t1013;
  double t1014;
  double t1021;
  double t1026;
  double t1027;
  double t1028;
  double t1044;
  double t1046;
  double t1047;
  double t1029;
  double t1039;
  double t1040;
  double t975;
  double t1088;
  double t1089;
  double t1090;
  double t1087;
  double t1092;
  double t1093;
  double t1096;
  double t1097;
  double t1098;
  double t1007;
  double t1119;
  double t1120;
  double t1121;
  double t1118;
  double t1122;
  double t1123;
  double t1126;
  double t1128;
  double t1129;
  double t1072;
  double t1148;
  double t1149;
  double t1150;
  double t1147;
  double t1151;
  double t1152;
  double t1154;
  double t1155;
  double t1157;
  double t1109;
  double t1178;
  double t1179;
  double t1180;
  double t1177;
  double t1181;
  double t1182;
  double t1184;
  double t1185;
  double t1186;
  double t968;
  double t1142;
  double t1205;
  double t1206;
  double t1207;
  double t1204;
  double t1208;
  double t1209;
  double t1211;
  double t1212;
  double t1213;
  double t1006;
  double t1171;
  double t1230;
  double t1231;
  double t1232;
  double t1229;
  double t1233;
  double t1234;
  double t1237;
  double t1238;
  double t1239;
  double t1022;
  double t1255;
  double t1256;
  double t1268;
  double t1269;
  double t1270;
  double t1275;
  double t1277;
  double t1278;
  double t1291;
  double t1292;
  double t1293;
  double t1324;
  double t1322;
  double t1323;
  double t1325;
  double t1327;
  double t1330;
  double t1331;
  double t1332;
  double t1357;
  double t1351;
  double t1352;
  double t1353;
  double t1356;
  double t1358;
  double t1359;
  double t1361;
  double t1362;
  double t1363;
  double t1384;
  double t1385;
  double t1378;
  double t1379;
  double t1380;
  double t1381;
  double t1386;
  double t1391;
  double t1393;
  double t1396;
  double t1397;
  double t1411;
  double t1412;
  double t1413;
  double t1408;
  double t1429;
  double t1430;
  double t1431;
  double t1427;
  double t1443;
  double t1444;
  double t1446;
  double t1440;
  double t1463;
  double t1464;
  double t1465;
  double t1488;
  double t1489;
  double t1490;
  double t1505;
  double t1507;
  double t1508;
  double t1526;
  double t1525;
  double t1527;
  double t1528;
  double t1530;
  double t1531;
  double t1532;
  double t1481;
  double t1548;
  double t1549;
  double t1547;
  double t1550;
  double t1551;
  double t1553;
  double t1554;
  double t1557;
  double t1511;
  double t1572;
  double t1573;
  double t1571;
  double t1574;
  double t1575;
  double t1577;
  double t1578;
  double t1579;
  double t1590;
  double t1592;
  double t1593;
  double t1602;
  double t1613;
  double t1614;
  double t1615;
  double t1617;
  double t1630;
  double t1631;
  double t1634;
  double t1636;
  double t1226;
  double t1649;
  double t1650;
  double t1668;
  double t1669;
  double t1670;
  double t1686;
  double t1687;
  double t1688;
  double t1707;
  double t1706;
  double t1708;
  double t1709;
  double t1713;
  double t1714;
  double t1715;
  double t1728;
  double t1729;
  double t1730;
  double t1727;
  double t1731;
  double t1732;
  double t1735;
  double t1737;
  double t1738;
  double t1750;
  double t1751;
  double t1752;
  double t1749;
  double t1753;
  double t1754;
  double t1758;
  double t1761;
  double t1762;
  double t1774;
  double t1775;
  double t1778;
  double t1780;
  double t1790;
  double t1792;
  double t1793;
  double t1795;
  double t1804;
  double t1805;
  double t1806;
  double t1809;
  double t1823;
  double t1824;
  double t1826;
  double t1848;
  double t1849;
  double t1850;
  double t1865;
  double t1866;
  double t1867;
  double t1889;
  double t1888;
  double t1890;
  double t1891;
  double t1893;
  double t1894;
  double t1895;
  double t1842;
  double t1912;
  double t1913;
  double t1911;
  double t1914;
  double t1915;
  double t1917;
  double t1918;
  double t1919;
  double t1872;
  double t1936;
  double t1937;
  double t1935;
  double t1941;
  double t1942;
  double t1946;
  double t1947;
  double t1948;
  double t1959;
  double t1960;
  double t1961;
  double t1966;
  double t1977;
  double t1978;
  double t1979;
  double t1981;
  double t1994;
  double t1995;
  double t1996;
  double t1998;
  t51 = Cos(var1[3]);
  t19 = Cos(var1[5]);
  t46 = Sin(var1[4]);
  t23 = Sin(var1[3]);
  t53 = Sin(var1[5]);
  t58 = t51*t19*t46;
  t60 = t23*t53;
  t61 = t58 + t60;
  t48 = -1.*t19*t23*t46;
  t54 = t51*t53;
  t55 = t48 + t54;
  t69 = Cos(var1[7]);
  t67 = Cos(var1[6]);
  t75 = Sin(var1[7]);
  t82 = t69*t55;
  t84 = -1.*t67*t61*t75;
  t85 = t82 + t84;
  t74 = t67*t69*t61;
  t79 = t55*t75;
  t80 = t74 + t79;
  t101 = Cos(var1[8]);
  t105 = 0. + t101;
  t110 = Sin(var1[8]);
  t62 = Sin(var1[6]);
  t126 = -1.*t51*t19;
  t127 = -1.*t23*t46*t53;
  t128 = t126 + t127;
  t130 = -1.*t19*t23;
  t131 = t51*t46*t53;
  t136 = t130 + t131;
  t140 = t69*t128;
  t144 = -1.*t67*t136*t75;
  t145 = t140 + t144;
  t149 = t67*t69*t136;
  t150 = t128*t75;
  t151 = t149 + t150;
  t111 = -1.*t110;
  t113 = 0. + t111;
  t121 = 0. + t110;
  t187 = Cos(var1[4]);
  t190 = -1.*t187*t69*t23;
  t191 = -1.*t51*t187*t67*t75;
  t192 = t190 + t191;
  t199 = t51*t187*t67*t69;
  t200 = -1.*t187*t23*t75;
  t206 = t199 + t200;
  t56 = 0.2429*t55;
  t232 = Cos(var1[10]);
  t231 = Cos(var1[9]);
  t223 = Sin(var1[10]);
  t224 = t223*t55;
  t233 = t231*t232*t61;
  t234 = t224 + t233;
  t237 = t232*t55;
  t238 = -1.*t231*t223*t61;
  t239 = t237 + t238;
  t245 = Cos(var1[11]);
  t246 = 0. + t245;
  t241 = Sin(var1[11]);
  t220 = Sin(var1[9]);
  t129 = 0.2429*t128;
  t257 = 0. + t241;
  t266 = -1.*t231*t223*t136;
  t267 = t232*t128;
  t268 = t266 + t267;
  t271 = t231*t232*t136;
  t272 = t223*t128;
  t273 = t271 + t272;
  t242 = -1.*t241;
  t243 = 0. + t242;
  t188 = -0.2429*t187*t23;
  t296 = -1.*t231*t51*t187*t223;
  t297 = -1.*t232*t187*t23;
  t298 = t296 + t297;
  t300 = t231*t232*t51*t187;
  t304 = -1.*t187*t223*t23;
  t305 = t300 + t304;
  t330 = Cos(var1[16]);
  t329 = Cos(var1[15]);
  t327 = Sin(var1[16]);
  t328 = t327*t55;
  t331 = t329*t330*t61;
  t332 = t328 + t331;
  t334 = t330*t55;
  t335 = -1.*t329*t327*t61;
  t338 = t334 + t335;
  t347 = Cos(var1[17]);
  t348 = 0. + t347;
  t340 = Sin(var1[17]);
  t323 = Sin(var1[15]);
  t354 = 0. + t340;
  t365 = -1.*t329*t327*t136;
  t366 = t330*t128;
  t369 = t365 + t366;
  t371 = t329*t330*t136;
  t372 = t327*t128;
  t373 = t371 + t372;
  t341 = -1.*t340;
  t345 = 0. + t341;
  t392 = -1.*t329*t51*t187*t327;
  t393 = -1.*t330*t187*t23;
  t395 = t392 + t393;
  t397 = t329*t330*t51*t187;
  t398 = -1.*t187*t327*t23;
  t399 = t397 + t398;
  t322 = -0.1944*t55;
  t420 = Cos(var1[13]);
  t419 = Cos(var1[12]);
  t416 = Sin(var1[13]);
  t417 = t416*t55;
  t421 = t419*t420*t61;
  t422 = t417 + t421;
  t426 = t420*t55;
  t427 = -1.*t419*t416*t61;
  t428 = t426 + t427;
  t438 = Cos(var1[14]);
  t439 = 0. + t438;
  t430 = Sin(var1[14]);
  t414 = Sin(var1[12]);
  t364 = -0.1944*t128;
  t447 = 0. + t430;
  t453 = -1.*t419*t416*t136;
  t454 = t420*t128;
  t455 = t453 + t454;
  t458 = t419*t420*t136;
  t459 = t416*t128;
  t460 = t458 + t459;
  t431 = -1.*t430;
  t432 = 0. + t431;
  t391 = 0.1944*t187*t23;
  t479 = -1.*t419*t51*t187*t416;
  t480 = -1.*t420*t187*t23;
  t482 = t479 + t480;
  t484 = t419*t420*t51*t187;
  t485 = -1.*t187*t416*t23;
  t486 = t484 + t485;
  t514 = t187*t19*t67*t23;
  t515 = 0. + t62;
  t516 = -1.*t19*t46*t515;
  t517 = t514 + t516;
  t524 = t51*t187*t19*t69;
  t525 = -1.*t517*t75;
  t527 = t524 + t525;
  t518 = t69*t517;
  t520 = t51*t187*t19*t75;
  t522 = t518 + t520;
  t504 = 0. + t67;
  t551 = t187*t67*t23*t53;
  t553 = -1.*t46*t53*t515;
  t554 = t551 + t553;
  t559 = t51*t187*t69*t53;
  t560 = -1.*t554*t75;
  t561 = t559 + t560;
  t555 = t69*t554;
  t556 = t51*t187*t53*t75;
  t557 = t555 + t556;
  t594 = -1.*t67*t23*t46;
  t596 = -1.*t187*t515;
  t597 = t594 + t596;
  t604 = -1.*t51*t69*t46;
  t608 = -1.*t597*t75;
  t609 = t604 + t608;
  t599 = t69*t597;
  t601 = -1.*t51*t46*t75;
  t602 = t599 + t601;
  t502 = 0.2429*t51*t187*t19;
  t646 = t231*t187*t19*t23;
  t647 = -1.*t220;
  t648 = 0. + t647;
  t653 = -1.*t19*t648*t46;
  t654 = t646 + t653;
  t644 = t51*t187*t19*t223;
  t655 = t232*t654;
  t656 = t644 + t655;
  t658 = t232*t51*t187*t19;
  t659 = -1.*t223*t654;
  t660 = t658 + t659;
  t538 = 0.2429*t51*t187*t53;
  t639 = 0. + t231;
  t694 = t231*t187*t23*t53;
  t698 = -1.*t648*t46*t53;
  t699 = t694 + t698;
  t693 = t51*t187*t223*t53;
  t702 = t232*t699;
  t703 = t693 + t702;
  t705 = t232*t51*t187*t53;
  t706 = -1.*t223*t699;
  t707 = t705 + t706;
  t581 = -0.2429*t51*t46;
  t737 = -1.*t187*t648;
  t738 = -1.*t231*t23*t46;
  t739 = t737 + t738;
  t736 = -1.*t51*t223*t46;
  t740 = t232*t739;
  t741 = t736 + t740;
  t744 = -1.*t232*t51*t46;
  t745 = -1.*t223*t739;
  t750 = t744 + t745;
  t635 = -0.0817*t19*t46;
  t772 = t329*t187*t19*t23;
  t773 = -1.*t323;
  t776 = 0. + t773;
  t777 = -1.*t19*t776*t46;
  t778 = t772 + t777;
  t771 = t51*t187*t19*t327;
  t779 = t330*t778;
  t780 = t771 + t779;
  t782 = t330*t51*t187*t19;
  t783 = -1.*t327*t778;
  t784 = t782 + t783;
  t684 = -0.0817*t46*t53;
  t767 = 0. + t329;
  t809 = t329*t187*t23*t53;
  t810 = -1.*t776*t46*t53;
  t811 = t809 + t810;
  t808 = t51*t187*t327*t53;
  t812 = t330*t811;
  t813 = t808 + t812;
  t815 = t330*t51*t187*t53;
  t816 = -1.*t327*t811;
  t817 = t815 + t816;
  t729 = -0.0817*t187;
  t841 = -1.*t187*t776;
  t842 = -1.*t329*t23*t46;
  t845 = t841 + t842;
  t839 = -1.*t51*t327*t46;
  t846 = t330*t845;
  t847 = t839 + t846;
  t851 = -1.*t330*t51*t46;
  t852 = -1.*t327*t845;
  t853 = t851 + t852;
  t765 = -0.1944*t51*t187*t19;
  t503 = 0.0817*t19*t46;
  t876 = t419*t187*t19*t23;
  t877 = 0. + t414;
  t878 = -1.*t19*t877*t46;
  t879 = t876 + t878;
  t875 = t51*t187*t19*t416;
  t880 = t420*t879;
  t881 = t875 + t880;
  t885 = t420*t51*t187*t19;
  t886 = -1.*t416*t879;
  t887 = t885 + t886;
  t800 = -0.1944*t51*t187*t53;
  t541 = 0.0817*t46*t53;
  t870 = 0. + t419;
  t906 = t419*t187*t23*t53;
  t907 = -1.*t877*t46*t53;
  t909 = t906 + t907;
  t905 = t51*t187*t416*t53;
  t912 = t420*t909;
  t913 = t905 + t912;
  t917 = t420*t51*t187*t53;
  t919 = -1.*t416*t909;
  t920 = t917 + t919;
  t580 = 0.0817*t187;
  t834 = 0.1944*t51*t46;
  t945 = -1.*t187*t877;
  t948 = -1.*t419*t23*t46;
  t949 = t945 + t948;
  t944 = -1.*t51*t416*t46;
  t950 = t420*t949;
  t951 = t944 + t950;
  t953 = -1.*t420*t51*t46;
  t955 = -1.*t416*t949;
  t957 = t953 + t955;
  t969 = t19*t23;
  t970 = -1.*t51*t46*t53;
  t971 = t969 + t970;
  t981 = t67*t128;
  t982 = -1.*t187*t53*t515;
  t983 = t981 + t982;
  t988 = t69*t971;
  t989 = -1.*t983*t75;
  t994 = t988 + t989;
  t984 = t69*t983;
  t985 = t971*t75;
  t986 = t984 + t985;
  t1013 = t19*t23*t46;
  t1014 = -1.*t51*t53;
  t1021 = t1013 + t1014;
  t1026 = t67*t1021;
  t1027 = t187*t19*t515;
  t1028 = t1026 + t1027;
  t1044 = t69*t61;
  t1046 = -1.*t1028*t75;
  t1047 = t1044 + t1046;
  t1029 = t69*t1028;
  t1039 = t61*t75;
  t1040 = t1029 + t1039;
  t975 = 0.2429*t971;
  t1088 = -1.*t187*t648*t53;
  t1089 = t231*t128;
  t1090 = t1088 + t1089;
  t1087 = t223*t971;
  t1092 = t232*t1090;
  t1093 = t1087 + t1092;
  t1096 = t232*t971;
  t1097 = -1.*t223*t1090;
  t1098 = t1096 + t1097;
  t1007 = 0.2429*t61;
  t1119 = t187*t19*t648;
  t1120 = t231*t1021;
  t1121 = t1119 + t1120;
  t1118 = t223*t61;
  t1122 = t232*t1121;
  t1123 = t1118 + t1122;
  t1126 = t232*t61;
  t1128 = -1.*t223*t1121;
  t1129 = t1126 + t1128;
  t1072 = -0.0817*t187*t53;
  t1148 = -1.*t187*t776*t53;
  t1149 = t329*t128;
  t1150 = t1148 + t1149;
  t1147 = t327*t971;
  t1151 = t330*t1150;
  t1152 = t1147 + t1151;
  t1154 = t330*t971;
  t1155 = -1.*t327*t1150;
  t1157 = t1154 + t1155;
  t1109 = 0.0817*t187*t19;
  t1178 = t187*t19*t776;
  t1179 = t329*t1021;
  t1180 = t1178 + t1179;
  t1177 = t327*t61;
  t1181 = t330*t1180;
  t1182 = t1177 + t1181;
  t1184 = t330*t61;
  t1185 = -1.*t327*t1180;
  t1186 = t1184 + t1185;
  t968 = 0.0817*t187*t53;
  t1142 = -0.1944*t971;
  t1205 = -1.*t187*t877*t53;
  t1206 = t419*t128;
  t1207 = t1205 + t1206;
  t1204 = t416*t971;
  t1208 = t420*t1207;
  t1209 = t1204 + t1208;
  t1211 = t420*t971;
  t1212 = -1.*t416*t1207;
  t1213 = t1211 + t1212;
  t1006 = -0.0817*t187*t19;
  t1171 = -0.1944*t61;
  t1230 = t187*t19*t877;
  t1231 = t419*t1021;
  t1232 = t1230 + t1231;
  t1229 = t416*t61;
  t1233 = t420*t1232;
  t1234 = t1229 + t1233;
  t1237 = t420*t61;
  t1238 = -1.*t416*t1232;
  t1239 = t1237 + t1238;
  t1022 = -1.*t1021*t62;
  t1255 = t187*t19*t67;
  t1256 = t1255 + t1022;
  t1268 = t51*t19;
  t1269 = t23*t46*t53;
  t1270 = t1268 + t1269;
  t1275 = t187*t67*t53;
  t1277 = -1.*t1270*t62;
  t1278 = t1275 + t1277;
  t1291 = -1.*t67*t46;
  t1292 = -1.*t187*t23*t62;
  t1293 = t1291 + t1292;
  t1324 = 0. + t58 + t60;
  t1322 = 0. + t1026 + t1027;
  t1323 = -1.*t69*t1322;
  t1325 = -1.*t1324*t75;
  t1327 = t1323 + t1325;
  t1330 = t69*t1324;
  t1331 = -1.*t1322*t75;
  t1332 = t1330 + t1331;
  t1357 = 0. + t130 + t131;
  t1351 = t67*t1270;
  t1352 = t187*t53*t515;
  t1353 = 0. + t1351 + t1352;
  t1356 = -1.*t69*t1353;
  t1358 = -1.*t1357*t75;
  t1359 = t1356 + t1358;
  t1361 = t69*t1357;
  t1362 = -1.*t1353*t75;
  t1363 = t1361 + t1362;
  t1384 = t51*t187;
  t1385 = 0. + t1384;
  t1378 = t187*t67*t23;
  t1379 = -1.*t46*t515;
  t1380 = 0. + t1378 + t1379;
  t1381 = -1.*t69*t1380;
  t1386 = -1.*t1385*t75;
  t1391 = t1381 + t1386;
  t1393 = t1385*t69;
  t1396 = -1.*t1380*t75;
  t1397 = t1393 + t1396;
  t1411 = t69*t1322;
  t1412 = t1324*t75;
  t1413 = 0. + t1411 + t1412;
  t1408 = 0. + t1330 + t1331;
  t1429 = t69*t1353;
  t1430 = t1357*t75;
  t1431 = 0. + t1429 + t1430;
  t1427 = 0. + t1361 + t1362;
  t1443 = t69*t1380;
  t1444 = t1385*t75;
  t1446 = 0. + t1443 + t1444;
  t1440 = 0. + t1393 + t1396;
  t1463 = -1.*t231*t187*t19;
  t1464 = -1.*t220*t1021;
  t1465 = t1463 + t1464;
  t1488 = -1.*t231*t187*t53;
  t1489 = -1.*t220*t1270;
  t1490 = t1488 + t1489;
  t1505 = -1.*t187*t220*t23;
  t1507 = t231*t46;
  t1508 = t1505 + t1507;
  t1526 = 0. + t1119 + t1120;
  t1525 = -1.*t223*t1324;
  t1527 = -1.*t232*t1526;
  t1528 = t1525 + t1527;
  t1530 = t232*t1324;
  t1531 = -1.*t223*t1526;
  t1532 = t1530 + t1531;
  t1481 = t231*t1270;
  t1548 = t187*t648*t53;
  t1549 = 0. + t1548 + t1481;
  t1547 = -1.*t223*t1357;
  t1550 = -1.*t232*t1549;
  t1551 = t1547 + t1550;
  t1553 = t232*t1357;
  t1554 = -1.*t223*t1549;
  t1557 = t1553 + t1554;
  t1511 = t231*t187*t23;
  t1572 = -1.*t648*t46;
  t1573 = 0. + t1511 + t1572;
  t1571 = -1.*t1385*t223;
  t1574 = -1.*t232*t1573;
  t1575 = t1571 + t1574;
  t1577 = t232*t1385;
  t1578 = -1.*t223*t1573;
  t1579 = t1577 + t1578;
  t1590 = t223*t1324;
  t1592 = t232*t1526;
  t1593 = 0. + t1590 + t1592;
  t1602 = 0. + t1530 + t1531;
  t1613 = t223*t1357;
  t1614 = t232*t1549;
  t1615 = 0. + t1613 + t1614;
  t1617 = 0. + t1553 + t1554;
  t1630 = t1385*t223;
  t1631 = t232*t1573;
  t1634 = 0. + t1630 + t1631;
  t1636 = 0. + t1577 + t1578;
  t1226 = -1.*t414*t1021;
  t1649 = t419*t187*t19;
  t1650 = t1649 + t1226;
  t1668 = t419*t187*t53;
  t1669 = -1.*t414*t1270;
  t1670 = t1668 + t1669;
  t1686 = -1.*t187*t414*t23;
  t1687 = -1.*t419*t46;
  t1688 = t1686 + t1687;
  t1707 = 0. + t1230 + t1231;
  t1706 = -1.*t416*t1324;
  t1708 = -1.*t420*t1707;
  t1709 = t1706 + t1708;
  t1713 = t420*t1324;
  t1714 = -1.*t416*t1707;
  t1715 = t1713 + t1714;
  t1728 = t187*t877*t53;
  t1729 = t419*t1270;
  t1730 = 0. + t1728 + t1729;
  t1727 = -1.*t416*t1357;
  t1731 = -1.*t420*t1730;
  t1732 = t1727 + t1731;
  t1735 = t420*t1357;
  t1737 = -1.*t416*t1730;
  t1738 = t1735 + t1737;
  t1750 = t419*t187*t23;
  t1751 = -1.*t877*t46;
  t1752 = 0. + t1750 + t1751;
  t1749 = -1.*t1385*t416;
  t1753 = -1.*t420*t1752;
  t1754 = t1749 + t1753;
  t1758 = t420*t1385;
  t1761 = -1.*t416*t1752;
  t1762 = t1758 + t1761;
  t1774 = t416*t1324;
  t1775 = t420*t1707;
  t1778 = 0. + t1774 + t1775;
  t1780 = 0. + t1713 + t1714;
  t1790 = t416*t1357;
  t1792 = t420*t1730;
  t1793 = 0. + t1790 + t1792;
  t1795 = 0. + t1735 + t1737;
  t1804 = t1385*t416;
  t1805 = t420*t1752;
  t1806 = 0. + t1804 + t1805;
  t1809 = 0. + t1758 + t1761;
  t1823 = -1.*t329*t187*t19;
  t1824 = -1.*t323*t1021;
  t1826 = t1823 + t1824;
  t1848 = -1.*t329*t187*t53;
  t1849 = -1.*t323*t1270;
  t1850 = t1848 + t1849;
  t1865 = -1.*t187*t323*t23;
  t1866 = t329*t46;
  t1867 = t1865 + t1866;
  t1889 = 0. + t1178 + t1179;
  t1888 = -1.*t327*t1324;
  t1890 = -1.*t330*t1889;
  t1891 = t1888 + t1890;
  t1893 = t330*t1324;
  t1894 = -1.*t327*t1889;
  t1895 = t1893 + t1894;
  t1842 = t329*t1270;
  t1912 = t187*t776*t53;
  t1913 = 0. + t1912 + t1842;
  t1911 = -1.*t327*t1357;
  t1914 = -1.*t330*t1913;
  t1915 = t1911 + t1914;
  t1917 = t330*t1357;
  t1918 = -1.*t327*t1913;
  t1919 = t1917 + t1918;
  t1872 = t329*t187*t23;
  t1936 = -1.*t776*t46;
  t1937 = 0. + t1872 + t1936;
  t1935 = -1.*t1385*t327;
  t1941 = -1.*t330*t1937;
  t1942 = t1935 + t1941;
  t1946 = t330*t1385;
  t1947 = -1.*t327*t1937;
  t1948 = t1946 + t1947;
  t1959 = t327*t1324;
  t1960 = t330*t1889;
  t1961 = 0. + t1959 + t1960;
  t1966 = 0. + t1893 + t1894;
  t1977 = t327*t1357;
  t1978 = t330*t1913;
  t1979 = 0. + t1977 + t1978;
  t1981 = 0. + t1917 + t1918;
  t1994 = t1385*t327;
  t1995 = t330*t1937;
  t1996 = 0. + t1994 + t1995;
  t1998 = 0. + t1946 + t1947;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=1.;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=1.;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=1.;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=1.;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=1.;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=1.;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=1.;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=1.;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=1.;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=1.;
  p_output1[36]=t56 + 0.0329*t61*t62 - 0.2083*t80 - 0.1422*t85 - 0.02*(t113*t80 + t105*t85) - 0.16*(t105*t80 + t121*t85);
  p_output1[37]=t129 - 0.1422*t145 - 0.2083*t151 - 0.16*(t121*t145 + t105*t151) - 0.02*(t105*t145 + t113*t151) + 0.0329*t136*t62;
  p_output1[38]=t188 - 0.1422*t192 - 0.2083*t206 - 0.16*(t121*t192 + t105*t206) - 0.02*(t105*t192 + t113*t206) + 0.0329*t187*t51*t62;
  p_output1[39]=-0.2083*t234 - 0.1422*t239 - 0.02*(t234*t243 + t239*t246) - 0.16*(t234*t246 + t239*t257) + t56 + 0.035199999999999995*t220*t61;
  p_output1[40]=t129 + 0.035199999999999995*t136*t220 - 0.1422*t268 - 0.2083*t273 - 0.02*(t246*t268 + t243*t273) - 0.16*(t257*t268 + t246*t273);
  p_output1[41]=t188 - 0.1422*t298 - 0.2083*t305 - 0.02*(t246*t298 + t243*t305) - 0.16*(t257*t298 + t246*t305) + 0.035199999999999995*t187*t220*t51;
  p_output1[42]=t322 - 0.2083*t332 - 0.1422*t338 - 0.02*(t332*t345 + t338*t348) - 0.16*(t332*t348 + t338*t354) + 0.035199999999999995*t323*t61;
  p_output1[43]=0.035199999999999995*t136*t323 + t364 - 0.1422*t369 - 0.2083*t373 - 0.02*(t348*t369 + t345*t373) - 0.16*(t354*t369 + t348*t373);
  p_output1[44]=t391 - 0.1422*t395 - 0.2083*t399 - 0.02*(t348*t395 + t345*t399) - 0.16*(t354*t395 + t348*t399) + 0.035199999999999995*t187*t323*t51;
  p_output1[45]=t322 - 0.2083*t422 - 0.1422*t428 - 0.02*(t422*t432 + t428*t439) - 0.16*(t422*t439 + t428*t447) + 0.0329*t414*t61;
  p_output1[46]=t364 + 0.0329*t136*t414 - 0.1422*t455 - 0.2083*t460 - 0.02*(t439*t455 + t432*t460) - 0.16*(t447*t455 + t439*t460);
  p_output1[47]=t391 - 0.1422*t482 - 0.2083*t486 - 0.02*(t439*t482 + t432*t486) - 0.16*(t447*t482 + t439*t486) + 0.0329*t187*t414*t51;
  p_output1[48]=t502 + t503 - 0.2083*t522 - 0.1422*t527 - 0.02*(t113*t522 + t105*t527) - 0.16*(t105*t522 + t121*t527) - 0.0329*(-1.*t19*t46*t504 - 1.*t187*t19*t23*t62);
  p_output1[49]=t538 + t541 - 0.2083*t557 - 0.1422*t561 - 0.02*(t113*t557 + t105*t561) - 0.16*(t105*t557 + t121*t561) - 0.0329*(-1.*t46*t504*t53 - 1.*t187*t23*t53*t62);
  p_output1[50]=t580 + t581 - 0.2083*t602 - 0.1422*t609 - 0.02*(t113*t602 + t105*t609) - 0.16*(t105*t602 + t121*t609) - 0.0329*(-1.*t187*t504 + t23*t46*t62);
  p_output1[51]=t502 + t635 + 0.035199999999999995*(t187*t19*t220*t23 - 1.*t19*t46*t639) - 0.2083*t656 - 0.1422*t660 - 0.02*(t243*t656 + t246*t660) - 0.16*(t246*t656 + t257*t660);
  p_output1[52]=t538 + 0.035199999999999995*(t187*t220*t23*t53 - 1.*t46*t53*t639) + t684 - 0.2083*t703 - 0.1422*t707 - 0.02*(t243*t703 + t246*t707) - 0.16*(t246*t703 + t257*t707);
  p_output1[53]=t581 + 0.035199999999999995*(-1.*t220*t23*t46 - 1.*t187*t639) + t729 - 0.2083*t741 - 0.1422*t750 - 0.02*(t243*t741 + t246*t750) - 0.16*(t246*t741 + t257*t750);
  p_output1[54]=t635 + t765 + 0.035199999999999995*(t187*t19*t23*t323 - 1.*t19*t46*t767) - 0.2083*t780 - 0.1422*t784 - 0.02*(t345*t780 + t348*t784) - 0.16*(t348*t780 + t354*t784);
  p_output1[55]=t684 + 0.035199999999999995*(t187*t23*t323*t53 - 1.*t46*t53*t767) + t800 - 0.2083*t813 - 0.1422*t817 - 0.02*(t345*t813 + t348*t817) - 0.16*(t348*t813 + t354*t817);
  p_output1[56]=t729 + 0.035199999999999995*(-1.*t23*t323*t46 - 1.*t187*t767) + t834 - 0.2083*t847 - 0.1422*t853 - 0.02*(t345*t847 + t348*t853) - 0.16*(t348*t847 + t354*t853);
  p_output1[57]=t503 + t765 - 0.0329*(-1.*t187*t19*t23*t414 - 1.*t19*t46*t870) - 0.2083*t881 - 0.1422*t887 - 0.02*(t432*t881 + t439*t887) - 0.16*(t439*t881 + t447*t887);
  p_output1[58]=t541 + t800 - 0.0329*(-1.*t187*t23*t414*t53 - 1.*t46*t53*t870) - 0.2083*t913 - 0.1422*t920 - 0.02*(t432*t913 + t439*t920) - 0.16*(t439*t913 + t447*t920);
  p_output1[59]=t580 + t834 - 0.0329*(t23*t414*t46 - 1.*t187*t870) - 0.2083*t951 - 0.1422*t957 - 0.02*(t432*t951 + t439*t957) - 0.16*(t439*t951 + t447*t957);
  p_output1[60]=-0.0329*(-1.*t187*t504*t53 - 1.*t128*t62) + t968 + t975 - 0.2083*t986 - 0.1422*t994 - 0.02*(t113*t986 + t105*t994) - 0.16*(t105*t986 + t121*t994);
  p_output1[61]=t1006 + t1007 - 0.2083*t1040 - 0.1422*t1047 - 0.02*(t1047*t105 + t1040*t113) - 0.16*(t1040*t105 + t1047*t121) - 0.0329*(t1022 + t187*t19*t504);
  p_output1[62]=0;
  p_output1[63]=t1072 - 0.2083*t1093 - 0.1422*t1098 - 0.02*(t1093*t243 + t1098*t246) - 0.16*(t1093*t246 + t1098*t257) + 0.035199999999999995*(t128*t220 - 1.*t187*t53*t639) + t975;
  p_output1[64]=t1007 + t1109 - 0.2083*t1123 - 0.1422*t1129 - 0.02*(t1123*t243 + t1129*t246) - 0.16*(t1123*t246 + t1129*t257) + 0.035199999999999995*(t1021*t220 + t187*t19*t639);
  p_output1[65]=0;
  p_output1[66]=t1072 + t1142 - 0.2083*t1152 - 0.1422*t1157 - 0.02*(t1152*t345 + t1157*t348) - 0.16*(t1152*t348 + t1157*t354) + 0.035199999999999995*(t128*t323 - 1.*t187*t53*t767);
  p_output1[67]=t1109 + t1171 - 0.2083*t1182 - 0.1422*t1186 - 0.02*(t1182*t345 + t1186*t348) - 0.16*(t1182*t348 + t1186*t354) + 0.035199999999999995*(t1021*t323 + t187*t19*t767);
  p_output1[68]=0;
  p_output1[69]=t1142 - 0.2083*t1209 - 0.1422*t1213 - 0.02*(t1209*t432 + t1213*t439) - 0.16*(t1209*t439 + t1213*t447) - 0.0329*(-1.*t128*t414 - 1.*t187*t53*t870) + t968;
  p_output1[70]=t1006 + t1171 - 0.2083*t1234 - 0.1422*t1239 - 0.02*(t1234*t432 + t1239*t439) - 0.16*(t1234*t439 + t1239*t447) - 0.0329*(t1226 + t187*t19*t870);
  p_output1[71]=0;
  p_output1[72]=-0.0329*(-1.*t187*t19*t62 - 1.*t1021*t67) - 0.2083*t1256*t69 + 0.1422*t1256*t75 - 0.02*(t113*t1256*t69 - 1.*t105*t1256*t75) - 0.16*(t105*t1256*t69 - 1.*t121*t1256*t75);
  p_output1[73]=-0.0329*(-1.*t187*t53*t62 - 1.*t1270*t67) - 0.2083*t1278*t69 + 0.1422*t1278*t75 - 0.02*(t113*t1278*t69 - 1.*t105*t1278*t75) - 0.16*(t105*t1278*t69 - 1.*t121*t1278*t75);
  p_output1[74]=-0.0329*(t46*t62 - 1.*t187*t23*t67) - 0.2083*t1293*t69 + 0.1422*t1293*t75 - 0.02*(t113*t1293*t69 - 1.*t105*t1293*t75) - 0.16*(t105*t1293*t69 - 1.*t121*t1293*t75);
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=-0.1422*t1327 - 0.2083*t1332 - 0.16*(t121*t1327 + t105*t1332) - 0.02*(t105*t1327 + t113*t1332);
  p_output1[85]=-0.1422*t1359 - 0.2083*t1363 - 0.16*(t121*t1359 + t105*t1363) - 0.02*(t105*t1359 + t113*t1363);
  p_output1[86]=-0.1422*t1391 - 0.2083*t1397 - 0.16*(t121*t1391 + t105*t1397) - 0.02*(t105*t1391 + t113*t1397);
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=-0.02*(-1.*t110*t1408 - 1.*t101*t1413) - 0.16*(t101*t1408 - 1.*t110*t1413);
  p_output1[97]=-0.02*(-1.*t110*t1427 - 1.*t101*t1431) - 0.16*(t101*t1427 - 1.*t110*t1431);
  p_output1[98]=-0.02*(-1.*t110*t1440 - 1.*t101*t1446) - 0.16*(t101*t1440 - 1.*t110*t1446);
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0.035199999999999995*(t1120 - 1.*t187*t19*t220) + 0.1422*t1465*t223 - 0.2083*t1465*t232 - 0.02*(t1465*t232*t243 - 1.*t1465*t223*t246) - 0.16*(t1465*t232*t246 - 1.*t1465*t223*t257);
  p_output1[112]=0.1422*t1490*t223 - 0.2083*t1490*t232 - 0.02*(t1490*t232*t243 - 1.*t1490*t223*t246) - 0.16*(t1490*t232*t246 - 1.*t1490*t223*t257) + 0.035199999999999995*(t1481 - 1.*t187*t220*t53);
  p_output1[113]=0.1422*t1508*t223 - 0.2083*t1508*t232 - 0.02*(t1508*t232*t243 - 1.*t1508*t223*t246) - 0.16*(t1508*t232*t246 - 1.*t1508*t223*t257) + 0.035199999999999995*(t1511 + t220*t46);
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=-0.1422*t1528 - 0.2083*t1532 - 0.02*(t1532*t243 + t1528*t246) - 0.16*(t1532*t246 + t1528*t257);
  p_output1[124]=-0.1422*t1551 - 0.2083*t1557 - 0.02*(t1557*t243 + t1551*t246) - 0.16*(t1557*t246 + t1551*t257);
  p_output1[125]=-0.1422*t1575 - 0.2083*t1579 - 0.02*(t1579*t243 + t1575*t246) - 0.16*(t1579*t246 + t1575*t257);
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=-0.02*(-1.*t1602*t241 - 1.*t1593*t245) - 0.16*(-1.*t1593*t241 + t1602*t245);
  p_output1[136]=-0.02*(-1.*t1617*t241 - 1.*t1615*t245) - 0.16*(-1.*t1615*t241 + t1617*t245);
  p_output1[137]=-0.02*(-1.*t1636*t241 - 1.*t1634*t245) - 0.16*(-1.*t1634*t241 + t1636*t245);
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0.1422*t1650*t416 - 0.0329*(-1.*t187*t19*t414 - 1.*t1021*t419) - 0.2083*t1650*t420 - 0.02*(t1650*t420*t432 - 1.*t1650*t416*t439) - 0.16*(t1650*t420*t439 - 1.*t1650*t416*t447);
  p_output1[154]=0.1422*t1670*t416 - 0.2083*t1670*t420 - 0.02*(t1670*t420*t432 - 1.*t1670*t416*t439) - 0.16*(t1670*t420*t439 - 1.*t1670*t416*t447) - 0.0329*(-1.*t1270*t419 - 1.*t187*t414*t53);
  p_output1[155]=0.1422*t1688*t416 - 0.2083*t1688*t420 - 0.02*(t1688*t420*t432 - 1.*t1688*t416*t439) - 0.16*(t1688*t420*t439 - 1.*t1688*t416*t447) - 0.0329*(-1.*t187*t23*t419 + t414*t46);
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=-0.1422*t1709 - 0.2083*t1715 - 0.02*(t1715*t432 + t1709*t439) - 0.16*(t1715*t439 + t1709*t447);
  p_output1[166]=-0.1422*t1732 - 0.2083*t1738 - 0.02*(t1738*t432 + t1732*t439) - 0.16*(t1738*t439 + t1732*t447);
  p_output1[167]=-0.1422*t1754 - 0.2083*t1762 - 0.02*(t1762*t432 + t1754*t439) - 0.16*(t1762*t439 + t1754*t447);
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0;
  p_output1[172]=0;
  p_output1[173]=0;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=-0.02*(-1.*t1780*t430 - 1.*t1778*t438) - 0.16*(-1.*t1778*t430 + t1780*t438);
  p_output1[178]=-0.02*(-1.*t1795*t430 - 1.*t1793*t438) - 0.16*(-1.*t1793*t430 + t1795*t438);
  p_output1[179]=-0.02*(-1.*t1809*t430 - 1.*t1806*t438) - 0.16*(-1.*t1806*t430 + t1809*t438);
  p_output1[180]=0;
  p_output1[181]=0;
  p_output1[182]=0;
  p_output1[183]=0;
  p_output1[184]=0;
  p_output1[185]=0;
  p_output1[186]=0.035199999999999995*(t1179 - 1.*t187*t19*t323) + 0.1422*t1826*t327 - 0.2083*t1826*t330 - 0.02*(t1826*t330*t345 - 1.*t1826*t327*t348) - 0.16*(t1826*t330*t348 - 1.*t1826*t327*t354);
  p_output1[187]=0.1422*t1850*t327 - 0.2083*t1850*t330 - 0.02*(t1850*t330*t345 - 1.*t1850*t327*t348) - 0.16*(t1850*t330*t348 - 1.*t1850*t327*t354) + 0.035199999999999995*(t1842 - 1.*t187*t323*t53);
  p_output1[188]=0.1422*t1867*t327 - 0.2083*t1867*t330 - 0.02*(t1867*t330*t345 - 1.*t1867*t327*t348) - 0.16*(t1867*t330*t348 - 1.*t1867*t327*t354) + 0.035199999999999995*(t1872 + t323*t46);
  p_output1[189]=0;
  p_output1[190]=0;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=-0.1422*t1891 - 0.2083*t1895 - 0.02*(t1895*t345 + t1891*t348) - 0.16*(t1895*t348 + t1891*t354);
  p_output1[199]=-0.1422*t1915 - 0.2083*t1919 - 0.02*(t1919*t345 + t1915*t348) - 0.16*(t1919*t348 + t1915*t354);
  p_output1[200]=-0.1422*t1942 - 0.2083*t1948 - 0.02*(t1948*t345 + t1942*t348) - 0.16*(t1948*t348 + t1942*t354);
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=-0.02*(-1.*t1966*t340 - 1.*t1961*t347) - 0.16*(-1.*t1961*t340 + t1966*t347);
  p_output1[211]=-0.02*(-1.*t1981*t340 - 1.*t1979*t347) - 0.16*(-1.*t1979*t340 + t1981*t347);
  p_output1[212]=-0.02*(-1.*t1998*t340 - 1.*t1996*t347) - 0.16*(-1.*t1996*t340 + t1998*t347);
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 12, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "impact_jacobian_func.hh"

namespace SymFunction
{

void impact_jacobian_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
