/*
 * Automatically Generated from Mathematica.
 * Fri 7 Aug 2020 14:46:44 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t124;
  double t80;
  double t122;
  double t85;
  double t129;
  double t123;
  double t137;
  double t148;
  double t175;
  double t176;
  double t185;
  double t208;
  double t206;
  double t192;
  double t193;
  double t209;
  double t210;
  double t213;
  double t216;
  double t217;
  double t240;
  double t244;
  double t233;
  double t163;
  double t271;
  double t272;
  double t277;
  double t284;
  double t285;
  double t288;
  double t260;
  double t292;
  double t293;
  double t294;
  double t298;
  double t300;
  double t312;
  double t236;
  double t237;
  double t331;
  double t334;
  double t338;
  double t339;
  double t355;
  double t356;
  double t358;
  double t397;
  double t396;
  double t391;
  double t395;
  double t400;
  double t402;
  double t406;
  double t408;
  double t409;
  double t433;
  double t443;
  double t417;
  double t386;
  double t452;
  double t461;
  double t462;
  double t463;
  double t472;
  double t473;
  double t474;
  double t425;
  double t426;
  double t501;
  double t502;
  double t503;
  double t508;
  double t510;
  double t511;
  double t385;
  double t541;
  double t538;
  double t535;
  double t537;
  double t543;
  double t544;
  double t550;
  double t551;
  double t555;
  double t562;
  double t563;
  double t557;
  double t533;
  double t460;
  double t574;
  double t583;
  double t585;
  double t586;
  double t599;
  double t602;
  double t603;
  double t558;
  double t559;
  double t499;
  double t635;
  double t636;
  double t641;
  double t643;
  double t644;
  double t646;
  double t687;
  double t688;
  double t693;
  double t694;
  double t702;
  double t686;
  double t703;
  double t704;
  double t707;
  double t708;
  double t712;
  double t682;
  double t751;
  double t752;
  double t753;
  double t750;
  double t754;
  double t757;
  double t759;
  double t761;
  double t763;
  double t794;
  double t795;
  double t796;
  double t790;
  double t797;
  double t798;
  double t800;
  double t801;
  double t802;
  double t678;
  double t832;
  double t833;
  double t834;
  double t835;
  double t836;
  double t831;
  double t837;
  double t838;
  double t847;
  double t849;
  double t853;
  double t733;
  double t821;
  double t880;
  double t881;
  double t883;
  double t876;
  double t885;
  double t887;
  double t889;
  double t890;
  double t892;
  double t781;
  double t920;
  double t926;
  double t927;
  double t917;
  double t928;
  double t929;
  double t931;
  double t932;
  double t933;
  double t819;
  double t965;
  double t966;
  double t967;
  double t968;
  double t964;
  double t969;
  double t971;
  double t976;
  double t977;
  double t979;
  double t869;
  double t960;
  double t1004;
  double t1005;
  double t1006;
  double t1003;
  double t1007;
  double t1008;
  double t1024;
  double t1025;
  double t1026;
  double t905;
  double t1070;
  double t1072;
  double t1073;
  double t1069;
  double t1083;
  double t1084;
  double t1087;
  double t1089;
  double t1092;
  double t1106;
  double t1107;
  double t1108;
  double t1119;
  double t1122;
  double t1123;
  double t1118;
  double t1125;
  double t1126;
  double t1130;
  double t1131;
  double t1132;
  double t1149;
  double t1151;
  double t1152;
  double t1160;
  double t1162;
  double t1163;
  double t1159;
  double t1164;
  double t1165;
  double t1168;
  double t1169;
  double t1170;
  double t1105;
  double t1191;
  double t1194;
  double t1195;
  double t1190;
  double t1197;
  double t1198;
  double t1200;
  double t1201;
  double t1202;
  double t1145;
  double t1223;
  double t1224;
  double t1225;
  double t1222;
  double t1227;
  double t1228;
  double t1230;
  double t1231;
  double t1233;
  double t1184;
  double t1253;
  double t1254;
  double t1255;
  double t1252;
  double t1257;
  double t1258;
  double t1260;
  double t1261;
  double t1262;
  double t1217;
  double t1284;
  double t1285;
  double t1286;
  double t1283;
  double t1287;
  double t1288;
  double t1290;
  double t1294;
  double t1295;
  double t1327;
  double t1329;
  double t1330;
  double t1352;
  double t1359;
  double t1360;
  double t1365;
  double t1366;
  double t1367;
  double t1397;
  double t1398;
  double t1399;
  double t1423;
  double t1425;
  double t1424;
  double t1426;
  double t1428;
  double t1430;
  double t1432;
  double t1433;
  double t1361;
  double t1448;
  double t1450;
  double t1451;
  double t1449;
  double t1454;
  double t1455;
  double t1460;
  double t1461;
  double t1462;
  double t1402;
  double t1479;
  double t1480;
  double t1485;
  double t1491;
  double t1484;
  double t1492;
  double t1493;
  double t1495;
  double t1496;
  double t1499;
  double t1514;
  double t1515;
  double t1516;
  double t1519;
  double t1532;
  double t1533;
  double t1534;
  double t1538;
  double t1552;
  double t1553;
  double t1557;
  double t1559;
  double t1279;
  double t1580;
  double t1581;
  double t1608;
  double t1609;
  double t1610;
  double t1629;
  double t1630;
  double t1631;
  double t1653;
  double t1652;
  double t1655;
  double t1656;
  double t1659;
  double t1660;
  double t1661;
  double t1677;
  double t1678;
  double t1681;
  double t1676;
  double t1682;
  double t1683;
  double t1685;
  double t1689;
  double t1690;
  double t1704;
  double t1705;
  double t1709;
  double t1703;
  double t1710;
  double t1713;
  double t1717;
  double t1718;
  double t1719;
  double t1734;
  double t1735;
  double t1738;
  double t1740;
  double t1750;
  double t1754;
  double t1756;
  double t1762;
  double t1771;
  double t1772;
  double t1774;
  double t1779;
  double t1796;
  double t1797;
  double t1798;
  double t1818;
  double t1820;
  double t1821;
  double t1838;
  double t1841;
  double t1846;
  double t1875;
  double t1872;
  double t1876;
  double t1877;
  double t1879;
  double t1880;
  double t1881;
  double t1815;
  double t1898;
  double t1899;
  double t1897;
  double t1903;
  double t1904;
  double t1908;
  double t1909;
  double t1910;
  double t1852;
  double t1930;
  double t1931;
  double t1929;
  double t1932;
  double t1933;
  double t1943;
  double t1946;
  double t1948;
  double t1959;
  double t1960;
  double t1962;
  double t1968;
  double t1980;
  double t1982;
  double t1983;
  double t1987;
  double t2000;
  double t2001;
  double t2002;
  double t2004;
  t124 = Cos(var1[3]);
  t80 = Cos(var1[5]);
  t122 = Sin(var1[4]);
  t85 = Sin(var1[3]);
  t129 = Sin(var1[5]);
  t123 = -1.*t80*t85*t122;
  t137 = t124*t129;
  t148 = t123 + t137;
  t175 = t124*t80*t122;
  t176 = t85*t129;
  t185 = t175 + t176;
  t208 = Cos(var1[10]);
  t206 = Cos(var1[9]);
  t192 = Sin(var1[10]);
  t193 = t192*t148;
  t209 = t206*t208*t185;
  t210 = t193 + t209;
  t213 = t208*t148;
  t216 = -1.*t206*t192*t185;
  t217 = t213 + t216;
  t240 = Cos(var1[11]);
  t244 = 0. + t240;
  t233 = Sin(var1[11]);
  t163 = Sin(var1[9]);
  t271 = -1.*t80*t85;
  t272 = t124*t122*t129;
  t277 = t271 + t272;
  t284 = -1.*t124*t80;
  t285 = -1.*t85*t122*t129;
  t288 = t284 + t285;
  t260 = 0. + t233;
  t292 = -1.*t206*t192*t277;
  t293 = t208*t288;
  t294 = t292 + t293;
  t298 = t206*t208*t277;
  t300 = t192*t288;
  t312 = t298 + t300;
  t236 = -1.*t233;
  t237 = 0. + t236;
  t331 = Cos(var1[4]);
  t334 = -1.*t206*t124*t331*t192;
  t338 = -1.*t208*t331*t85;
  t339 = t334 + t338;
  t355 = t206*t208*t124*t331;
  t356 = -1.*t331*t192*t85;
  t358 = t355 + t356;
  t397 = Cos(var1[16]);
  t396 = Cos(var1[15]);
  t391 = Sin(var1[16]);
  t395 = t391*t148;
  t400 = t396*t397*t185;
  t402 = t395 + t400;
  t406 = t397*t148;
  t408 = -1.*t396*t391*t185;
  t409 = t406 + t408;
  t433 = Cos(var1[17]);
  t443 = 0. + t433;
  t417 = Sin(var1[17]);
  t386 = Sin(var1[15]);
  t452 = 0. + t417;
  t461 = -1.*t396*t391*t277;
  t462 = t397*t288;
  t463 = t461 + t462;
  t472 = t396*t397*t277;
  t473 = t391*t288;
  t474 = t472 + t473;
  t425 = -1.*t417;
  t426 = 0. + t425;
  t501 = -1.*t396*t124*t331*t391;
  t502 = -1.*t397*t331*t85;
  t503 = t501 + t502;
  t508 = t396*t397*t124*t331;
  t510 = -1.*t331*t391*t85;
  t511 = t508 + t510;
  t385 = -0.1944*t148;
  t541 = Cos(var1[13]);
  t538 = Cos(var1[12]);
  t535 = Sin(var1[13]);
  t537 = t535*t148;
  t543 = t538*t541*t185;
  t544 = t537 + t543;
  t550 = t541*t148;
  t551 = -1.*t538*t535*t185;
  t555 = t550 + t551;
  t562 = Cos(var1[14]);
  t563 = 0. + t562;
  t557 = Sin(var1[14]);
  t533 = Sin(var1[12]);
  t460 = -0.1944*t288;
  t574 = 0. + t557;
  t583 = -1.*t538*t535*t277;
  t585 = t541*t288;
  t586 = t583 + t585;
  t599 = t538*t541*t277;
  t602 = t535*t288;
  t603 = t599 + t602;
  t558 = -1.*t557;
  t559 = 0. + t558;
  t499 = 0.1944*t331*t85;
  t635 = -1.*t538*t124*t331*t535;
  t636 = -1.*t541*t331*t85;
  t641 = t635 + t636;
  t643 = t538*t541*t124*t331;
  t644 = -1.*t331*t535*t85;
  t646 = t643 + t644;
  t687 = t206*t331*t80*t85;
  t688 = -1.*t163;
  t693 = 0. + t688;
  t694 = -1.*t80*t693*t122;
  t702 = t687 + t694;
  t686 = t124*t331*t80*t192;
  t703 = t208*t702;
  t704 = t686 + t703;
  t707 = t208*t124*t331*t80;
  t708 = -1.*t192*t702;
  t712 = t707 + t708;
  t682 = 0. + t206;
  t751 = t206*t331*t85*t129;
  t752 = -1.*t693*t122*t129;
  t753 = t751 + t752;
  t750 = t124*t331*t192*t129;
  t754 = t208*t753;
  t757 = t750 + t754;
  t759 = t208*t124*t331*t129;
  t761 = -1.*t192*t753;
  t763 = t759 + t761;
  t794 = -1.*t331*t693;
  t795 = -1.*t206*t85*t122;
  t796 = t794 + t795;
  t790 = -1.*t124*t192*t122;
  t797 = t208*t796;
  t798 = t790 + t797;
  t800 = -1.*t208*t124*t122;
  t801 = -1.*t192*t796;
  t802 = t800 + t801;
  t678 = -0.0817*t80*t122;
  t832 = t396*t331*t80*t85;
  t833 = -1.*t386;
  t834 = 0. + t833;
  t835 = -1.*t80*t834*t122;
  t836 = t832 + t835;
  t831 = t124*t331*t80*t391;
  t837 = t397*t836;
  t838 = t831 + t837;
  t847 = t397*t124*t331*t80;
  t849 = -1.*t391*t836;
  t853 = t847 + t849;
  t733 = -0.0817*t122*t129;
  t821 = 0. + t396;
  t880 = t396*t331*t85*t129;
  t881 = -1.*t834*t122*t129;
  t883 = t880 + t881;
  t876 = t124*t331*t391*t129;
  t885 = t397*t883;
  t887 = t876 + t885;
  t889 = t397*t124*t331*t129;
  t890 = -1.*t391*t883;
  t892 = t889 + t890;
  t781 = -0.0817*t331;
  t920 = -1.*t331*t834;
  t926 = -1.*t396*t85*t122;
  t927 = t920 + t926;
  t917 = -1.*t124*t391*t122;
  t928 = t397*t927;
  t929 = t917 + t928;
  t931 = -1.*t397*t124*t122;
  t932 = -1.*t391*t927;
  t933 = t931 + t932;
  t819 = -0.1944*t124*t331*t80;
  t965 = t538*t331*t80*t85;
  t966 = 0. + t533;
  t967 = -1.*t80*t966*t122;
  t968 = t965 + t967;
  t964 = t124*t331*t80*t535;
  t969 = t541*t968;
  t971 = t964 + t969;
  t976 = t541*t124*t331*t80;
  t977 = -1.*t535*t968;
  t979 = t976 + t977;
  t869 = -0.1944*t124*t331*t129;
  t960 = 0. + t538;
  t1004 = t538*t331*t85*t129;
  t1005 = -1.*t966*t122*t129;
  t1006 = t1004 + t1005;
  t1003 = t124*t331*t535*t129;
  t1007 = t541*t1006;
  t1008 = t1003 + t1007;
  t1024 = t541*t124*t331*t129;
  t1025 = -1.*t535*t1006;
  t1026 = t1024 + t1025;
  t905 = 0.1944*t124*t122;
  t1070 = -1.*t331*t966;
  t1072 = -1.*t538*t85*t122;
  t1073 = t1070 + t1072;
  t1069 = -1.*t124*t535*t122;
  t1083 = t541*t1073;
  t1084 = t1069 + t1083;
  t1087 = -1.*t541*t124*t122;
  t1089 = -1.*t535*t1073;
  t1092 = t1087 + t1089;
  t1106 = t80*t85;
  t1107 = -1.*t124*t122*t129;
  t1108 = t1106 + t1107;
  t1119 = -1.*t331*t693*t129;
  t1122 = t206*t288;
  t1123 = t1119 + t1122;
  t1118 = t192*t1108;
  t1125 = t208*t1123;
  t1126 = t1118 + t1125;
  t1130 = t208*t1108;
  t1131 = -1.*t192*t1123;
  t1132 = t1130 + t1131;
  t1149 = t80*t85*t122;
  t1151 = -1.*t124*t129;
  t1152 = t1149 + t1151;
  t1160 = t331*t80*t693;
  t1162 = t206*t1152;
  t1163 = t1160 + t1162;
  t1159 = t192*t185;
  t1164 = t208*t1163;
  t1165 = t1159 + t1164;
  t1168 = t208*t185;
  t1169 = -1.*t192*t1163;
  t1170 = t1168 + t1169;
  t1105 = -0.0817*t331*t129;
  t1191 = -1.*t331*t834*t129;
  t1194 = t396*t288;
  t1195 = t1191 + t1194;
  t1190 = t391*t1108;
  t1197 = t397*t1195;
  t1198 = t1190 + t1197;
  t1200 = t397*t1108;
  t1201 = -1.*t391*t1195;
  t1202 = t1200 + t1201;
  t1145 = 0.0817*t331*t80;
  t1223 = t331*t80*t834;
  t1224 = t396*t1152;
  t1225 = t1223 + t1224;
  t1222 = t391*t185;
  t1227 = t397*t1225;
  t1228 = t1222 + t1227;
  t1230 = t397*t185;
  t1231 = -1.*t391*t1225;
  t1233 = t1230 + t1231;
  t1184 = -0.1944*t1108;
  t1253 = -1.*t331*t966*t129;
  t1254 = t538*t288;
  t1255 = t1253 + t1254;
  t1252 = t535*t1108;
  t1257 = t541*t1255;
  t1258 = t1252 + t1257;
  t1260 = t541*t1108;
  t1261 = -1.*t535*t1255;
  t1262 = t1260 + t1261;
  t1217 = -0.1944*t185;
  t1284 = t331*t80*t966;
  t1285 = t538*t1152;
  t1286 = t1284 + t1285;
  t1283 = t535*t185;
  t1287 = t541*t1286;
  t1288 = t1283 + t1287;
  t1290 = t541*t185;
  t1294 = -1.*t535*t1286;
  t1295 = t1290 + t1294;
  t1327 = -1.*t206*t331*t80;
  t1329 = -1.*t163*t1152;
  t1330 = t1327 + t1329;
  t1352 = t124*t80;
  t1359 = t85*t122*t129;
  t1360 = t1352 + t1359;
  t1365 = -1.*t206*t331*t129;
  t1366 = -1.*t163*t1360;
  t1367 = t1365 + t1366;
  t1397 = -1.*t331*t163*t85;
  t1398 = t206*t122;
  t1399 = t1397 + t1398;
  t1423 = 0. + t175 + t176;
  t1425 = 0. + t1160 + t1162;
  t1424 = -1.*t192*t1423;
  t1426 = -1.*t208*t1425;
  t1428 = t1424 + t1426;
  t1430 = t208*t1423;
  t1432 = -1.*t192*t1425;
  t1433 = t1430 + t1432;
  t1361 = t206*t1360;
  t1448 = 0. + t271 + t272;
  t1450 = t331*t693*t129;
  t1451 = 0. + t1450 + t1361;
  t1449 = -1.*t192*t1448;
  t1454 = -1.*t208*t1451;
  t1455 = t1449 + t1454;
  t1460 = t208*t1448;
  t1461 = -1.*t192*t1451;
  t1462 = t1460 + t1461;
  t1402 = t206*t331*t85;
  t1479 = t124*t331;
  t1480 = 0. + t1479;
  t1485 = -1.*t693*t122;
  t1491 = 0. + t1402 + t1485;
  t1484 = -1.*t1480*t192;
  t1492 = -1.*t208*t1491;
  t1493 = t1484 + t1492;
  t1495 = t208*t1480;
  t1496 = -1.*t192*t1491;
  t1499 = t1495 + t1496;
  t1514 = t192*t1423;
  t1515 = t208*t1425;
  t1516 = 0. + t1514 + t1515;
  t1519 = 0. + t1430 + t1432;
  t1532 = t192*t1448;
  t1533 = t208*t1451;
  t1534 = 0. + t1532 + t1533;
  t1538 = 0. + t1460 + t1461;
  t1552 = t1480*t192;
  t1553 = t208*t1491;
  t1557 = 0. + t1552 + t1553;
  t1559 = 0. + t1495 + t1496;
  t1279 = -1.*t533*t1152;
  t1580 = t538*t331*t80;
  t1581 = t1580 + t1279;
  t1608 = t538*t331*t129;
  t1609 = -1.*t533*t1360;
  t1610 = t1608 + t1609;
  t1629 = -1.*t331*t533*t85;
  t1630 = -1.*t538*t122;
  t1631 = t1629 + t1630;
  t1653 = 0. + t1284 + t1285;
  t1652 = -1.*t535*t1423;
  t1655 = -1.*t541*t1653;
  t1656 = t1652 + t1655;
  t1659 = t541*t1423;
  t1660 = -1.*t535*t1653;
  t1661 = t1659 + t1660;
  t1677 = t331*t966*t129;
  t1678 = t538*t1360;
  t1681 = 0. + t1677 + t1678;
  t1676 = -1.*t535*t1448;
  t1682 = -1.*t541*t1681;
  t1683 = t1676 + t1682;
  t1685 = t541*t1448;
  t1689 = -1.*t535*t1681;
  t1690 = t1685 + t1689;
  t1704 = t538*t331*t85;
  t1705 = -1.*t966*t122;
  t1709 = 0. + t1704 + t1705;
  t1703 = -1.*t1480*t535;
  t1710 = -1.*t541*t1709;
  t1713 = t1703 + t1710;
  t1717 = t541*t1480;
  t1718 = -1.*t535*t1709;
  t1719 = t1717 + t1718;
  t1734 = t535*t1423;
  t1735 = t541*t1653;
  t1738 = 0. + t1734 + t1735;
  t1740 = 0. + t1659 + t1660;
  t1750 = t535*t1448;
  t1754 = t541*t1681;
  t1756 = 0. + t1750 + t1754;
  t1762 = 0. + t1685 + t1689;
  t1771 = t1480*t535;
  t1772 = t541*t1709;
  t1774 = 0. + t1771 + t1772;
  t1779 = 0. + t1717 + t1718;
  t1796 = -1.*t396*t331*t80;
  t1797 = -1.*t386*t1152;
  t1798 = t1796 + t1797;
  t1818 = -1.*t396*t331*t129;
  t1820 = -1.*t386*t1360;
  t1821 = t1818 + t1820;
  t1838 = -1.*t331*t386*t85;
  t1841 = t396*t122;
  t1846 = t1838 + t1841;
  t1875 = 0. + t1223 + t1224;
  t1872 = -1.*t391*t1423;
  t1876 = -1.*t397*t1875;
  t1877 = t1872 + t1876;
  t1879 = t397*t1423;
  t1880 = -1.*t391*t1875;
  t1881 = t1879 + t1880;
  t1815 = t396*t1360;
  t1898 = t331*t834*t129;
  t1899 = 0. + t1898 + t1815;
  t1897 = -1.*t391*t1448;
  t1903 = -1.*t397*t1899;
  t1904 = t1897 + t1903;
  t1908 = t397*t1448;
  t1909 = -1.*t391*t1899;
  t1910 = t1908 + t1909;
  t1852 = t396*t331*t85;
  t1930 = -1.*t834*t122;
  t1931 = 0. + t1852 + t1930;
  t1929 = -1.*t1480*t391;
  t1932 = -1.*t397*t1931;
  t1933 = t1929 + t1932;
  t1943 = t397*t1480;
  t1946 = -1.*t391*t1931;
  t1948 = t1943 + t1946;
  t1959 = t391*t1423;
  t1960 = t397*t1875;
  t1962 = 0. + t1959 + t1960;
  t1968 = 0. + t1879 + t1880;
  t1980 = t391*t1448;
  t1982 = t397*t1899;
  t1983 = 0. + t1980 + t1982;
  t1987 = 0. + t1908 + t1909;
  t2000 = t1480*t391;
  t2001 = t397*t1931;
  t2002 = 0. + t2000 + t2001;
  t2004 = 0. + t1943 + t1946;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=1.;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=1.;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=1.;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=1.;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=1.;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=1.;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=1.;
  p_output1[27]=0.2429*t148 + 0.035199999999999995*t163*t185 - 0.2083*t210 - 0.1422*t217 - 0.02*(t210*t237 + t217*t244) - 0.16*(t210*t244 + t217*t260);
  p_output1[28]=0.035199999999999995*t163*t277 + 0.2429*t288 - 0.1422*t294 - 0.2083*t312 - 0.02*(t244*t294 + t237*t312) - 0.16*(t260*t294 + t244*t312);
  p_output1[29]=0.035199999999999995*t124*t163*t331 - 0.1422*t339 - 0.2083*t358 - 0.02*(t244*t339 + t237*t358) - 0.16*(t260*t339 + t244*t358) - 0.2429*t331*t85;
  p_output1[30]=t385 + 0.035199999999999995*t185*t386 - 0.2083*t402 - 0.1422*t409 - 0.02*(t402*t426 + t409*t443) - 0.16*(t402*t443 + t409*t452);
  p_output1[31]=0.035199999999999995*t277*t386 + t460 - 0.1422*t463 - 0.2083*t474 - 0.02*(t443*t463 + t426*t474) - 0.16*(t452*t463 + t443*t474);
  p_output1[32]=0.035199999999999995*t124*t331*t386 + t499 - 0.1422*t503 - 0.2083*t511 - 0.02*(t443*t503 + t426*t511) - 0.16*(t452*t503 + t443*t511);
  p_output1[33]=t385 + 0.0329*t185*t533 - 0.2083*t544 - 0.1422*t555 - 0.02*(t544*t559 + t555*t563) - 0.16*(t544*t563 + t555*t574);
  p_output1[34]=t460 + 0.0329*t277*t533 - 0.1422*t586 - 0.2083*t603 - 0.02*(t563*t586 + t559*t603) - 0.16*(t574*t586 + t563*t603);
  p_output1[35]=t499 + 0.0329*t124*t331*t533 - 0.1422*t641 - 0.2083*t646 - 0.02*(t563*t641 + t559*t646) - 0.16*(t574*t641 + t563*t646);
  p_output1[36]=t678 - 0.2083*t704 - 0.1422*t712 - 0.02*(t237*t704 + t244*t712) - 0.16*(t244*t704 + t260*t712) + 0.2429*t124*t331*t80 + 0.035199999999999995*(-1.*t122*t682*t80 + t163*t331*t80*t85);
  p_output1[37]=0.2429*t124*t129*t331 + t733 - 0.2083*t757 - 0.1422*t763 - 0.02*(t237*t757 + t244*t763) - 0.16*(t244*t757 + t260*t763) + 0.035199999999999995*(-1.*t122*t129*t682 + t129*t163*t331*t85);
  p_output1[38]=-0.2429*t122*t124 + t781 - 0.2083*t798 - 0.1422*t802 - 0.02*(t237*t798 + t244*t802) - 0.16*(t244*t798 + t260*t802) + 0.035199999999999995*(-1.*t331*t682 - 1.*t122*t163*t85);
  p_output1[39]=t678 + t819 - 0.2083*t838 + 0.035199999999999995*(-1.*t122*t80*t821 + t331*t386*t80*t85) - 0.1422*t853 - 0.02*(t426*t838 + t443*t853) - 0.16*(t443*t838 + t452*t853);
  p_output1[40]=t733 + 0.035199999999999995*(-1.*t122*t129*t821 + t129*t331*t386*t85) + t869 - 0.2083*t887 - 0.1422*t892 - 0.02*(t426*t887 + t443*t892) - 0.16*(t443*t887 + t452*t892);
  p_output1[41]=t781 + 0.035199999999999995*(-1.*t331*t821 - 1.*t122*t386*t85) + t905 - 0.2083*t929 - 0.1422*t933 - 0.02*(t426*t929 + t443*t933) - 0.16*(t443*t929 + t452*t933);
  p_output1[42]=0.0817*t122*t80 + t819 - 0.0329*(-1.*t331*t533*t80*t85 - 1.*t122*t80*t960) - 0.2083*t971 - 0.1422*t979 - 0.02*(t559*t971 + t563*t979) - 0.16*(t563*t971 + t574*t979);
  p_output1[43]=-0.2083*t1008 - 0.1422*t1026 + 0.0817*t122*t129 - 0.02*(t1008*t559 + t1026*t563) - 0.16*(t1008*t563 + t1026*t574) + t869 - 0.0329*(-1.*t129*t331*t533*t85 - 1.*t122*t129*t960);
  p_output1[44]=-0.2083*t1084 - 0.1422*t1092 + 0.0817*t331 - 0.02*(t1084*t559 + t1092*t563) - 0.16*(t1084*t563 + t1092*t574) + t905 - 0.0329*(t122*t533*t85 - 1.*t331*t960);
  p_output1[45]=t1105 + 0.2429*t1108 - 0.2083*t1126 - 0.1422*t1132 - 0.02*(t1126*t237 + t1132*t244) - 0.16*(t1126*t244 + t1132*t260) + 0.035199999999999995*(t163*t288 - 1.*t129*t331*t682);
  p_output1[46]=t1145 - 0.2083*t1165 - 0.1422*t1170 + 0.2429*t185 - 0.02*(t1165*t237 + t1170*t244) - 0.16*(t1165*t244 + t1170*t260) + 0.035199999999999995*(t1152*t163 + t331*t682*t80);
  p_output1[47]=0;
  p_output1[48]=t1105 + t1184 - 0.2083*t1198 - 0.1422*t1202 - 0.02*(t1198*t426 + t1202*t443) - 0.16*(t1198*t443 + t1202*t452) + 0.035199999999999995*(t288*t386 - 1.*t129*t331*t821);
  p_output1[49]=t1145 + t1217 - 0.2083*t1228 - 0.1422*t1233 - 0.02*(t1228*t426 + t1233*t443) - 0.16*(t1228*t443 + t1233*t452) + 0.035199999999999995*(t1152*t386 + t331*t80*t821);
  p_output1[50]=0;
  p_output1[51]=t1184 - 0.2083*t1258 - 0.1422*t1262 + 0.0817*t129*t331 - 0.02*(t1258*t559 + t1262*t563) - 0.16*(t1258*t563 + t1262*t574) - 0.0329*(-1.*t288*t533 - 1.*t129*t331*t960);
  p_output1[52]=t1217 - 0.2083*t1288 - 0.1422*t1295 - 0.02*(t1288*t559 + t1295*t563) - 0.16*(t1288*t563 + t1295*t574) - 0.0817*t331*t80 - 0.0329*(t1279 + t331*t80*t960);
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0.1422*t1330*t192 - 0.2083*t1330*t208 - 0.02*(t1330*t208*t237 - 1.*t1330*t192*t244) - 0.16*(t1330*t208*t244 - 1.*t1330*t192*t260) + 0.035199999999999995*(t1162 - 1.*t163*t331*t80);
  p_output1[82]=0.1422*t1367*t192 - 0.2083*t1367*t208 - 0.02*(t1367*t208*t237 - 1.*t1367*t192*t244) - 0.16*(t1367*t208*t244 - 1.*t1367*t192*t260) + 0.035199999999999995*(t1361 - 1.*t129*t163*t331);
  p_output1[83]=0.035199999999999995*(t1402 + t122*t163) + 0.1422*t1399*t192 - 0.2083*t1399*t208 - 0.02*(t1399*t208*t237 - 1.*t1399*t192*t244) - 0.16*(t1399*t208*t244 - 1.*t1399*t192*t260);
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=-0.1422*t1428 - 0.2083*t1433 - 0.02*(t1433*t237 + t1428*t244) - 0.16*(t1433*t244 + t1428*t260);
  p_output1[91]=-0.1422*t1455 - 0.2083*t1462 - 0.02*(t1462*t237 + t1455*t244) - 0.16*(t1462*t244 + t1455*t260);
  p_output1[92]=-0.1422*t1493 - 0.2083*t1499 - 0.02*(t1499*t237 + t1493*t244) - 0.16*(t1499*t244 + t1493*t260);
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=-0.02*(-1.*t1519*t233 - 1.*t1516*t240) - 0.16*(-1.*t1516*t233 + t1519*t240);
  p_output1[100]=-0.02*(-1.*t1538*t233 - 1.*t1534*t240) - 0.16*(-1.*t1534*t233 + t1538*t240);
  p_output1[101]=-0.02*(-1.*t1559*t233 - 1.*t1557*t240) - 0.16*(-1.*t1557*t233 + t1559*t240);
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0.1422*t1581*t535 - 0.2083*t1581*t541 - 0.02*(t1581*t541*t559 - 1.*t1581*t535*t563) - 0.16*(t1581*t541*t563 - 1.*t1581*t535*t574) - 0.0329*(-1.*t1152*t538 - 1.*t331*t533*t80);
  p_output1[115]=0.1422*t1610*t535 - 0.0329*(-1.*t129*t331*t533 - 1.*t1360*t538) - 0.2083*t1610*t541 - 0.02*(t1610*t541*t559 - 1.*t1610*t535*t563) - 0.16*(t1610*t541*t563 - 1.*t1610*t535*t574);
  p_output1[116]=0.1422*t1631*t535 - 0.2083*t1631*t541 - 0.02*(t1631*t541*t559 - 1.*t1631*t535*t563) - 0.16*(t1631*t541*t563 - 1.*t1631*t535*t574) - 0.0329*(t122*t533 - 1.*t331*t538*t85);
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=-0.1422*t1656 - 0.2083*t1661 - 0.02*(t1661*t559 + t1656*t563) - 0.16*(t1661*t563 + t1656*t574);
  p_output1[124]=-0.1422*t1683 - 0.2083*t1690 - 0.02*(t1690*t559 + t1683*t563) - 0.16*(t1690*t563 + t1683*t574);
  p_output1[125]=-0.1422*t1713 - 0.2083*t1719 - 0.02*(t1719*t559 + t1713*t563) - 0.16*(t1719*t563 + t1713*t574);
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=-0.02*(-1.*t1740*t557 - 1.*t1738*t562) - 0.16*(-1.*t1738*t557 + t1740*t562);
  p_output1[133]=-0.02*(-1.*t1762*t557 - 1.*t1756*t562) - 0.16*(-1.*t1756*t557 + t1762*t562);
  p_output1[134]=-0.02*(-1.*t1779*t557 - 1.*t1774*t562) - 0.16*(-1.*t1774*t557 + t1779*t562);
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0.1422*t1798*t391 - 0.2083*t1798*t397 - 0.02*(t1798*t397*t426 - 1.*t1798*t391*t443) - 0.16*(t1798*t397*t443 - 1.*t1798*t391*t452) + 0.035199999999999995*(t1224 - 1.*t331*t386*t80);
  p_output1[139]=0.035199999999999995*(t1815 - 1.*t129*t331*t386) + 0.1422*t1821*t391 - 0.2083*t1821*t397 - 0.02*(t1821*t397*t426 - 1.*t1821*t391*t443) - 0.16*(t1821*t397*t443 - 1.*t1821*t391*t452);
  p_output1[140]=0.035199999999999995*(t1852 + t122*t386) + 0.1422*t1846*t391 - 0.2083*t1846*t397 - 0.02*(t1846*t397*t426 - 1.*t1846*t391*t443) - 0.16*(t1846*t397*t443 - 1.*t1846*t391*t452);
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=-0.1422*t1877 - 0.2083*t1881 - 0.02*(t1881*t426 + t1877*t443) - 0.16*(t1881*t443 + t1877*t452);
  p_output1[148]=-0.1422*t1904 - 0.2083*t1910 - 0.02*(t1910*t426 + t1904*t443) - 0.16*(t1910*t443 + t1904*t452);
  p_output1[149]=-0.1422*t1933 - 0.2083*t1948 - 0.02*(t1948*t426 + t1933*t443) - 0.16*(t1948*t443 + t1933*t452);
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=-0.02*(-1.*t1968*t417 - 1.*t1962*t433) - 0.16*(-1.*t1962*t417 + t1968*t433);
  p_output1[157]=-0.02*(-1.*t1987*t417 - 1.*t1983*t433) - 0.16*(-1.*t1983*t417 + t1987*t433);
  p_output1[158]=-0.02*(-1.*t2004*t417 - 1.*t2002*t433) - 0.16*(-1.*t2002*t417 + t2004*t433);
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "j_support_foot_func.hh"

namespace SymFunction
{

void j_support_foot_func_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
